hey guys welcome back this is the third video in a series where we actually build using selenium and python something that logs into instagram and checks the discrepancies between your followers and following shows you who's not following you back somebody that you do follow so we went through basically getting selenium set up we installed it we got logged into instagram we found our way to the profile page and now we just need to do the hardest part yet which is actually click the button and get all of the following then click the button and get all of the followers compare the two lists and then tell you tell the user who does not follow them back now just to save us a little bit of time you saw how i was going to the css part of like doing the inspect tab and finding unique css to select different buttons it gets fairly tedious and it's not fun to watch so for the rest of this i've just included them here we've got the followers css this is going to be the button that will bring up the followers dialogue the people that follow you the css select close this is just the close button on that dialog the following css is the same thing as the followers this is just people that you are following and the button for closing will be the exact same so i mean we've already set up this function which is the majority of our code right this click button with css is a godsend really all we have to do in a general sense is this we need to click the followers button then we need to shoot then we need to click the close button and then we need to click the following button and here we need to get followers followers list goals get followers from list we haven't written this function yet we will write it and following list right this is all we have to do in some sense but you know what we could be even more clever than this we could say get elements from get user names we'll say from dialog because the following and the followers dialog is going to be the exact same so this gives us a bit of code reusability and once we implement this function now we have everything we need to determine the discrepancies so let's write this function remember how i told you you can use css selectors and xpath selectors well the only way i could find to actually select all of the things inside this dialog was using xpath it's not something i use often but just playing around with this for a long time it was the only way i could determine to do it and i think somebody even suggested it in a stack overflow so here i've got the x path for that dialog basically what this is going to do is it's going to select it's going to select this dialog div and then it's going to select all of the list elements that are as a part of that and then of course we're i'm going to do this web driver wait which is what we've done before it's the exact same thing but now we're going to say presence of element located right not clickable but presence of element located and by xpath so that's the difference between what we did before and what we do now and then of course just the list xpath now something else that we need to do is we need to make sure all of the elements are in that dialog so we need to scroll down now this function again scroll down does not exist let's assume it exists and then we will we'll write it later cool list elements equals driver dot find element by xpath elements by the way by xpath list xpath so this is going to get us a list of all of those elements okay great now it's got this popped up right it's got the dialogue popped up that's exactly what we want i want to select every single person here right and i want to get their username now one thing i noticed is that there are a few i don't know exactly where they are there's a few list elements in here that don't actually correspond to people at least that's what i noticed last time i ran this and so in order to get around to not including them in the list or you know messing up the list in any way shape or form what i'm gonna do is i'm going to select only rows with the word follow now you might say well jason some of them say following not follow well that's okay all i'm going to do is check for the presence of the word follow and of course the word follow is a subset of the word following so i'm gonna grab all the rows that have the word follow in them and then i'm gonna select their their usernames for i in range the length of list elems so we're going to go through each list element we're going to grab the text for that element equals list alums at i dot text this is going to give us the text for that element if follow in in row text now let's get the username so this is what i discussed if user is follow is in that row text then what i want to do is select the username so row text now this is a selector in python [music] i'm just going to use it and we can talk about it later if you guys need some more help on it all this is going to do is this is going to say get the index of the new line character and get me everything from the beginning to the index of the new line character this is basically saying that now there's a possibility that this new line character doesn't exist it might throw an error so that's why i wrapped it in this try block and we'll catch it in the case that this throws an error users plus equals username whoops plus equals username this is basically just how you add to a list in python except and we're going to say print continue i don't know if this even is a case anymore but it just happened before when i ran it this is another reason that you should really make these scripts your own add something new to them because when you're just writing code you would not think to do this try catch block you would not think that every single that there might be some rows in there that aren't actually followers these are things that you have to do you have to run the code to actually tell so this is one of those cases so look i'm adding everything to this users list i haven't defined this user's list let me define it it's an empty list i am adding to it each time the username and then i'm returning the users now we still haven't implemented this scroll down function so that's what we're going to do next so we're going to do a while function here while one or while true and we are going to have an iteration here equal to zero and while true i guess you could just say while one so this is going to be counting this global count this is a bit of a hack but i'm gonna throw it up here and we're gonna talk about it basically this is a global variable and we're gonna be checking it as we as we do things here so scroll top num equals iteration times 1000. so we might need to keep scrolling right we might need to scroll like five or six or 20 times so what we're going to do is we're going to on a loop we're going to scroll a little scroll a little scroll a little until when we scroll another time the count doesn't change when i say there's 50 users in this list and i scroll and then i say okay 55 users then i scroll again and there's still 55 users that means that there was no one else in the list because i kept scrolling and there was nobody else the list capped out at 55. i guess another cool thing you might be able to do is use this number here 49 and actually just look for 49 elements i hadn't considered that but that's another approach that that might be worth investigating so inter plus equals one of course you don't have to write every line of code yourself there is this thing that i found on stack overflow that's going to execute some javascript that's going to scroll down the dialog box i didn't know how to do it but look you can just say driver.executescript and this will let you execute javascript which is pretty cool document.queryselector this is going to select that list dot parentnode.scrolltop and you can set that scrolltop to any number scrolltopnum look that's the number that we're kind of building up as we go and that's why i turned it into a string here which might have seemed confusing before but let's say we're on iteration 10 that's 10 times 1000 we turn that into a string and it's going to plug that into here and so that number is going to grow each time whoops and now we're going to do another try web driver weight driver for one second dot until check difference in count now we haven't written this function either but what this is going to do is this this is going to say you remember how we talked about that global variable this is going to be the one that says okay is there a difference between what we had the count of things there before and the count of things this time so wait until check difference in count and then what we're going to do is just write this accept clause which says count equals zero reset the count and break so this is going to throw if there is a diff if there's not a difference in the count which means that we've reached the end so of course we reset by count resetting the count variable and breaking the while loop so we don't get stuck here forever and then you can type return if you'd like it's up to you all right now let's write this check difference in count function this is the last big function we're almost there guys it's the last big function you have to write check to def check difference in count again we're going to access this global count variable good so basically we're gonna do some some check so we're going to have to actually scrape the dialog box to find the current count the current number of list elements there and that would be here new count equals driver dot find elements by xpath and then there's more xpath i think this is the ex that's the exam exact same x path as before so you might want to put this in a variable at the top or something driver.find elements by path make that a constant and then we just get the len of that and now we're going to say is if the new count is different if new count is different than count we're going to do is return true and if it's not different than count what we'll do is we'll return false if count does not equal new count count equals new count so we're going to reset the new count right it was 50 and now it's 55 and then we're gonna return true and then else we return false jason why does this throw an exception is probably your next question right because here we have it throwing throwing an exception well basically if the condition here if this whatever is in this until statement if that condition ever returns false it throws an exception because it said hey that condition wasn't met so that's kind of a big deal here i'll throw an exception for you so we're kind of taking advantage of that by returning false on purpose if we know that we have reached the end of this list and this can be used for both lists right which is really cool really exciting now we can undo this scroll down function now we can actually use that scroll down function so now what's going to happen is it's actually going to log in scroll down it's going to find all of the users in this username it's going to return it and this is get users from dialogue oh we should probably fill in some of the parameters here driver is that the only one i need i think that's the only one i need and what that should do is oh i need to pass that in too driver and driver here too and what this will do is this will give us the two lists let me just go ahead and run that and see that it's working you know what let me print the list and then we'll do it print followers list and following list okay i think i've got a little bit of wrong code here so i click the button followers css and then i grab the followers then i click the button close and i try to grab the followers that is that doesn't make sense we need to include this here so then i click the button close and then i click the button for following and just to be extra safe what i'm going to do is put a little sleep in here to give that time to load up the dialogue there are better ways around that of course you can use that webdriver weight that we talked about i highly recommend you optimizing by doing that but let's just do this it's quick and it's lazy and it's late okay there we go opened up both of them get user from dialogue oh pass down one too many parameters there i'm gonna get kicked off instagram soon i've run this a few more times than i expected to they're gonna catch on to something at this point and i'm not connected to a vpn or anything i didn't take any of the my advice that i gave you guys so all right there you go now we printed all of them that's perfect we got both lists we printed them and that's that's it like that's 90 of the way there then it's a small little algorithmic programming thing to say all right now look at the people i'm following or look at the people i am following and check if each of those people is in the list of people that follows me it's it's a really simple programming exercise here i've called it no follow back how did i do it here so i got both lists i pass them in here to this no follow back function and then i just print it i'm going to just copy this list over or this function over because it's it's super simple this is definitely not the most optimal way to do it but all i'm doing is i'm saying sort both lists then make a no follow back list go through each person that i follow and see if they're in the list of people that follows me and if they're not if i get a value error from doing this because this index what it does is it says what index that a certain element is in an array it'll say value error this element is not in this array and that's perfect what that tells us is that person is not following us and so then we just throw them in the no follow-back list and then we return it and that's it and so i could call this no follow back with the following list following list no followers and the following and then you have it you could just print it i mean if you wanna you get fancy with it no follow backs there you go just print it if you want to get fancy with it i think over here yeah i printed out line by line to make it a little bit prettier i always do that this is the no follow-backs list one thing i don't like about python is that it took running that entire thing to tell me that the variable name was not defined something that all other not all other but it's something that other programming languages would tell you at runtime and it gets a little frustrating but that's scripting languages right so let's see there we go these are the the people that don't follow me back and there you go there you go now you have it now something that you can put on your resume using python using selenium and completely coded here what i would do if i were you is add a little tweak there's a few optimizations in here i kind of mention along the way i highly recommend that you do some of those optimizations and also if you enjoyed this video please like and subscribe we do content like this all the time we're trying to help you get your next internship here at tech intern and getting really cool programs on your resume is one of the ways that we do that so thank you guys so much again don't forget like subscribe i will see you in the next episode