bruh bruh all right so hey we're gonna read this one which i think is kind of interesting marker uh benchmarks for database so this is my favorite database my favorite edge database i know this guy very nice guy he wrote a little blog article about how he made this thing super duper fast and so i really want to read this one because i actually think this one is pretty cool okay so hey alerts are going off i think this is gonna be pretty cool yeah edgy yeah yeah edge lord reads article about how database is fast by the way just a little shout out to the tercel team there's like several core contributors to linux on the on the on the tercel team they're very very smart they're very good engineers they're very very good engineers all right for cell benchmark show torso has low latencies everywhere what the edge data edge is good for what good is the edge if your database is on the other side of the planet this is true deploying to the edge is a cool new thing developers do this is true they really do feel like it's the coolest thing and why shouldn't you being able to deploy the code that runs everywhere without worrying about picking locations yourself and always being a couple of milliseconds away from your users like what's not like to like all right here we go back from the let's see okay guillermo guermo guermo sends a tweet it's true the internet feels faster once you've stepped step into the u.s and it's true that edge computers help makes this better but the moment you need to provide dynamic experience things get muddier like your database is somewhere in the u.s so fetching data from it will add a considerable amount of latency so this has always been a huge problem when it comes to databases in edge stuff right is that if you are trying to like surf it from australia you're gonna have to go to us you have to go to your nearest database right and so like this is a this is a big deal how databases compare reversello recently announced a cool demo tool which allows you to pick a database and test the latency from edge functions to the database each database is assigned a preferred region and test will fire 10 requests directly to that region and another 10 requests through an edge region closer to you here's an example of what the output is for me using planet scale database the light blue line shows the regional latency the latency when the edge function is executed closest to the database in the pure purple line or in the purple line shows the latency when the edge function is executed close closest to me the user okay very interesting so let's see globally so we have some you know there's definitely some some times here when it's closer it's pretty dang quick when it's close right latency processing time end to end all right this is the total latency from the client perspective it considers the total round trip between the browser and the edge here internet connection and will a location will influence these results okay so global we're somewhere around in here regional right in here now one thing i don't like about these tests right away this is kind of a rule of thumb whenever you do tests you i mean i know it's just supposed to be simple but 10 request isn't necessarily a great a great thing right you know what i mean it's like this isn't a great comparison but we'll we'll go for it it should give you perhaps a direction right and what this says to me is that if the request is close to you you can respond fairly fast if the request is not next to you right and go somewhere else you still respond fairly quick but it's longer right needs a larger sample size for sure absolutely right okay good because you know there's a lot of problems with these type of measurements when someone does this you have to ask yourself what's running on their computer what's running on the routers that they're testing on how clean is their connection because you know real talk if you're sitting here trying to do performance testing that also involves internet requesting and next to you in the next room is somebody watching netflix and you're both on wi-fi it completely does change the behavior of these latency distributions so is it fair to do that you know that's where you gotta ask yourself some questions how was this conducted but assuming they all had the same condition right so we're going to make the assumption that these are all the same condition i'm a couple hours away from toronto so what the graph above shows is that life is great in north america in particular if you're on the east coast us east one is aws's largest region in its and it's where databases tend to be this graph shows me that there's an edge function even closer to the database the delta between the purple and the light blue lines but i'm only 20 milliseconds away yeah okay so there's a slight improvement in other words okay things that let's see things are different in other places but some members of my team are not so lucky for my colleague athos in a rio de janeiro brazil the situation is very different for the graph on the left with the browser time excluded while the regional latency is unsurprisingly the same the latency from his closest edge is over 120 milliseconds okay so processing time is nothing dang there's a big there's a big difference here the graph to the right which includes browser time shows that that ultimately it doesn't matter if he goes directly to the database or through the closest edge function he will always be some 20 to 50 milliseconds behind me that's actually a pretty cool little thing showing you right here which is it doesn't matter right there's parts of this world that no matter what they do they're gonna get the same you know they're gonna get the same experience and that's kind of tough right there right i mean obviously this is this is why you want to measure say a hundred or a thousand times because does this spike happen once every four times does it happen once every two times does it happen you know was this a lucky run you don't know right at usa usa yeah exactly like real life is often more complex this example is quite simple a single query a single hop but what happens if we need to have a complex pattern where your query with the database five times in a row to a server request okay so this is really good this is much more realistic in the microservice world if you will right because you have a service that validates who you are you have a service that validates that you know that that you have this kind of data you have a service that goes through and make sure that the data is up to date you have a service that goes through and inserts extra things that may need it like right at any larger company there's not just like a singular request that's tied to a singular http request right there's often several trips to different databases all polling in information to give the user some level whatever you know what i mean brian pro brazil thank you here's toronto with times over 300 milliseconds is a is a reasonable experience okay wow okay so if you're a little bit closer you're definitely paying less cost here but it's still a lot right this is a lot very exciting but it's a lot toronto stop with the t toronto no sorry i say it okay again i've gone through this one too many times i use endonyms okay you can or i'm sorry i use exonims you use exo names okay hey quick question okay tough guy hey tough guy speaking all this nonsense what is the capital of south dakota how would you say this guy hey yeah you how would you say that how would you say that oh you would say pierre well guess what you dumbass that's not how you say it at all it's pronounced pure like p-u-r-e everybody around here calls it pure pure pure pure why is it called peer i don't know why it's called peer it should be pierre and you know what this guy calls it pierre okay so guess what  off toronto okay get the hell out of here tell me how to live my life like that i will i call it vite i call it china i call it pierre i call it toronto y'all can just right off all right there is one there is okay there is one there is one consideration though i do call it brazil okay i do call it brazil brazilians okay i just made the entire chat upset everybody is so angry now all right here's toronto okay okay okay but in rio de janeiro we have crossed a 500 millisecond threshold usually over 700 milliseconds that's a pretty that's some pretty big ones right there right brazil brazil oh brothel you don't anger the canadians i know they're like i don't know what that's all about but you know what i'm gonna say something mean like hey mister you're pronouncing it wrong and then say sorry right afterwards that's with us canadians are good for anyways anyways let's keep on going now that we've done that if somebody wasn't angry before we've now just officially achieved it anyways there we go so yeah that's looking i mean it's that's a lot of milliseconds okay this is a lot of milliseconds the poor souls in brazil won't get much better experience from either super bass or neon two other squeal based newcomers either super bass takes chloe to three seconds for five end-to-end queries oh oh my goodness oh super bass ah damn i mean planet scale just destroyed you planet scale is literally three times plus faster than super bass that is nutty now obviously i'm i'm assuming these queries are fair and what i mean by fair is that they are that they're like one to one in complexity you would assume right neon is more than two times better than super bass but this query pattern still takes more than a second both posts based offerings fair worse than planet scale they do they both fare worse than planet scale by far absolutely look at that damn planet scale so good job planet scale planet scale you are literally significantly better than these ones okay what are those graphs showing us beyond the raw numbers these graphs reveal something interesting the light blue line that represents routing your request directly to the us is way faster sometimes by a factor of three the edge is supposed to provide an architecture that abstracts location and lets you just automatically run your code close to your your users the moment databases enter the picture the equation flops it pays and big to be aware of your database where your database is and just route your request there too bad for global users ah very interesting i can't believe that that instead of sticking in brazil you write your request because that's that's how i'm reading it right you're actually routing your request to america america and it is literally that much better i have a hard time even comprehending that to tell you the truth i guess i guess that makes sense that makes sense right all right enter the data edge tercel is built differently it's a full squeal database for the data edge it puts data replication a front and center with an architecture that makes it extremely affordable to run compute around the edge cheap enough that we can spread replicas in many locations our free tier offering allows for three locations it makes your queries fast wherever the users are let's look at my numbers again from toronto this this time using tereso doing a single query damn that's fairly uniform 12 milliseconds and 80 milliseconds let's go back up to planet scale not the same not the same all right like i told you the torso people are one of the most talented group of engineers i have ever met okay they're not these they're not these engineers that you know they're real engineers okay they make me blush okay all right so let's go over here so let's go back down to this so this is fast all right this is much better it's barely any difference between going to a database preferred region and mine yeah so you don't even have to route your request you can just let it fly but once more we've grown used to the numbers in north america so once again let's see our friend athos down in rio de janeiro brazil okay so as you can see here we have a we have a difference athos now gets the same 10 milliseconds from the brazil region that i got from toronto oh yeah look at that the the dark blue is flip-flopped the dark blue using just your global routing is completely flip-flopped you actually have an inverse it is now way faster to use your global whatever routing as opposed to doing regional specific routing to the database that's like significantly faster right that's that's that's unfairly faster comparatively to neon this is 20 times faster super bass it's it's a number in which i can't i can't even calculate okay i can't do numbers that big i can't do numbers that big and comparatively to our boys over at planet scale six times 6x or more than 6x i don't know what that is okay all right he can even get query served end to end in less than 60 milliseconds even faster than i can this means he's physically closer to the closest point of presence than i am but there's something more interesting lurking in the graph on the right the light blue line is much bigger or is much higher this means that forcibly going to the u.s is now much slower as it should be the whole round trip is now around 150 milliseconds which is just around the physical it dictates a very similar number than what we got in the first example yes okay for more complex queries the difference is even more pronounced when he does five queries in a row that is a oh yeah look at that look at those five queries baby look at that it's it's like a look at that that thing's probably averaging like 110 milliseconds this is actually really impressive and four times better than the 250 milliseconds he got with planet scale so 4x that 10x of neon and 20 times better than super bass this is what you want you want the purple line low you don't want the blue line low because if for those that don't understand what's happening effectively what's happening here for those that don't actually this is called math don't worry about the math okay i was doing some math just don't worry about it so for those that are wondering what's happening here effectively what's happening is that when you're off and you're you're in south america right you're down here in south america and up in us east is your database what is happening is that they're going to their local data center wherever that's at and then they have to make five back-to-back queries right and so when that happens you have this really bad pattern of having to go all the way around but if you have perfect you know if you have perfect replication that just allows for up-to-date data around the world instead you're just going like this right and so instead of managing what region is your database in you simply just let it go to any region and you have replicas properly set up boom yeah i know it's nothing new but people find this amazing that it can be so fast and really all this is showing you is that physical distance causes a lot of latency right you're having an existential crisis well don't have one don't have one jersey milker all right so anyways so you can do look at all these you got a lot of locations okay that's sweet i like that a lot of locations so you can just go replicate databases all around boom go give it a try join the discord give it a try lip squeal okay get yourself a little lip squealing going on the name is the data gen the length of your dick banners it's true do they have chile i assume they have something close to chile right so they have rio de janeiro brazil and sao paulo brazil i mean that does make a huge market difference versus going all the way up to america hell yeah america i don't i don't know if they have chile oh they do they have santiago chile they have santiago the name is the beast code now stop ignoring my question how do you say the capital of empty this obese code there's two ways to say the capital of montana for those not in the capital we call it helena for those in the capital they call it helena no memcache is a little bit different santiago de chile santiago delay okay bisco i know these things okay i'm not a helena guy okay yeah you know this beast killer how do you say the capital of swantini i have no idea it's one teeny deez nuts in your mouth helena i hardly knew her i know exactly also worth watching the weather oh thank you brazil anyways super cool i actually really like this this is super cool this kind of stuff i actually want to go and play around with you know what not fair plan scale has read-only replicas just like tercel interesting well i'd had this i mean i'd we'd have to see okay so that's a good point so we'd have to see what their read-only replicas and all these things are and actually go and do that read-only replicas do come with their own problems though that means you can you know any mutation you're you're still paying the big cost what are some reasons you wouldn't want to use the edge if you want to control your own response times if you want i mean there's there's reasons like netflix doesn't do it because we have our own custom routing we do a lot of stuff right i think there's definitely a scale that exists where you stop wanting someone else's kubernetes cluster and you want your own you know i think there does exist a region that makes sense oh wait he works for netflix hell yeah brother hell yeah what can you do with torso squeal light compared to plan scale i think they're all the same thing right they're all squeal right and so you can pretty much do all the same thing falcore okay stop it isn't planet scale more expensive than just hosting your own redis interest on your own case i i don't know i don't know planet scale is a cost but tercel is pretty cheap they're free tiers eight gigabytes if i'm not mistaken plus three replications so pretty good i mean that's that's i mean that gets you more than off the ground for most data storage stuff when you're starting off yeah you still have eventually consistent issues this is very very true well let's see what about cloudflare worker dbs i've never played with those netflix works it does it so is it better than cockroach i don't know anything about cockroach i'm very curious about cockroach because ultimately it is written in go right and so there is the fundamental flaw of cockroach which is there are garbage collections so i think as a database you probably don't want you you probably want a managed memory right you want a rust cockroach right you you kind of want to manage memory oh very cool that's that's i mean that's a lot of reads and writes it's worth checking out to tiger beetle too tiger beetle what okay viewer you're messing with me i can tell vera is nothing but a memer and he's coming at me with that tiger beetle energy yeah right nice try tiger beetle you can tiger beetle these nuts