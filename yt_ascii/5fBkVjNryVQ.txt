so we're gonna do this i kind of wanted to go through a couple quick things and just kind of talk about vim for a little bit because our boy bram has passed away if you guys didn't see the message it happened on august 3rd he was 62 years old obviously vim was his personal project that became larger than life and everybody loves it i think vim is probably the most well-known computer word practically of all time it's right below can you fix my printer the next thing people know about is vim and being unable to exit so i mean that's pretty incredible to get to that level of of software and so i just wanted to take a moment enjoy one of his talks r.i.p bram obviously a big fan of them over here my little quick story about vim is that i was really good at the arrows the shift the control jumping and highlighting and before i ever even used or knew about vim i was just like really speedy and really enjoyed it and i always tried to play like starcraft i memorized every little keyboard shortcut netbeans which is the editor i used all the way up until i had a c sharp job which i was forced to use visual studio and then from there i got my real job as i like to call it and i had to use intellij and so even in there i was super quick and then somebody said hey why don't we try vim together for a week i bet i could get faster than you and i'm over here thinking you know what i'm pretty fast at the old arrows and keys i bet i could be pretty good at vim started doing it within one week i was just like this is the greatest thing i've ever used in my lifetime now when i say vim i mean vim motions idea of him inside of intellij and i continued to use intellij up until like 2016 until you know convinced me to use vim full time and so i started using vim and i love vim i used vim all the way up until 2020 and then i started using neovim from 2020 until now so always been a huge fan and so i think this will be a great time to enjoy a nice little bit of a bram video we're gonna play it on 1.5 speed just because it is a long video you know different form some years ago in holland and i think none of you were there so it's all it's all new to you so but i did updated with some new stuff so hopefully it will be interesting i'll there's a big crowd now so i'll try to answer questions near the end but if there's something that you don't understand on the slides or something like just shout by the way i am looking a little green today why am i looking so green today i got like a new lighting and i'm still trying to figure it out and i got also a new camera so i'm looking probably pretty crispy look at how clean those hands are look at that look at that hand look at how clean that hand look you can even see like my my old skin wrinkling so if i look a little green i'm sorry it just is what it is but let's enjoy this talk by bram which is seven habits of effective text editing 2.0 okay let's get started so text editing that's what we're talking about i think we all know the problem that we're working with text the whole day with email and whatever you're working on with log files html documentation etc etc and if i look at myself i spent most of my day editing text if i'm not working on film and then it's email or something else and it takes an awful lot of time so if we can improve our text editing skills a little bit that helps a lot you can get more work done i don't use vim by the way or i don't use vim to edit my emails right i i know people do that i've never done any of that whole thing you know what i mean obviously i'm doing meetings or stuff like that so maybe somebody can do a presentation on how to do effective meetings that would help you can so i'm going to try to explain to you how to get more work done in less time so if you're paid by the hour you can leave now of course i'm using for all the examples by the way that doesn't mean that i think that vim is the only text editor that you can use or should use as a basic rule if you have a tax return that's good that can do everything you need has enough features it doesn't work and you can still expand it to do the work you expected to do then just stick to it i mean why learn another editor when you already have all the scales in the one you're using so if you're using immex you're happy with it i'm not going to tell you to leave it alone unless maybe you think it's not good so also i sometimes see people even software developers using notepad or a similar editor i think that's terrible i mean you're wasting a lot of time so basically you'll either use editor that you have that you're happy with or you switch to fin there's some good truth in there i do think that you should try if you've never been motioned at least try out like a month of using just of emotions try keyboard centric you know flow to your life and see kind of what that does for you because honestly it it it can really change your perspective on editing and all that and not only that but it could actually just make coding fun you know what i mean and so there is something too that that is how do you put a price on that right it's pretty good that's not what the rule so otherwise i'm not going to discuss which editor is best that's another discussion and not very interesting i think most of the people here are using film anyway oh let me ask you how many people of you are actually mostly using emacs okay one in the chat if you're using try to convert some people today okay how i'm going to explain these these habits that i was talking about in the title the first step the very important step is well they're all three are important the first step is how to know that you're doing something that's gonna get everyone that type one business because when you're repeating the same thing over and over and over again and you think well there must be a quicker way to do this must be a smarter way to do this for example what i do myself quite often is you have a function name somebody reviews your change it says this is a terrible function name use another name so you have to go all over your code and change one name into another but obviously if you're going to you know find the name type the same name over and over again then not only is it not efficient you're also going to make mistakes that you have to fix later and it's even getting more complicated like if you have five names that you have to change into five different names and there's a pattern in how you change them then obviously you don't want to type that you want to you know find some way to do it quickly it's kind of funny because obviously this is pre-lsp era and so i think this is probably this kind of actions are maybe lost on people i think it's kind of a it's very interesting in fact the thing is is that i think what he's going to talk about is quick quick fix list for that one you can do a little c do s slash whatever slash whatever slash g even tossing a c if you need to to confirm each one of those but i really really really actually i i use sea-doo a lot still i still do just straight like text renaming from time to time i find it very useful even to this day and so yeah it still happens if your dependency changes the name yeah like yeah it's this these things just happen and you still need that tool no matter what so i just find that that like even if these things feel antiquated or perhaps out of touch they're actually still extremely useful right i use them quite like especially if i'm doing something with log files and i want to change some stuff to be more consistent or anything like just the ability to use stuff really quickly very very nice any click here yes this is on 1.5 speed to just kind of speed it up it's an hour and 20 minute talk so you know cutting it down a little bit is nice he said you have to do this while you are working so every time you're working on something you have to kind of look back like what they did i do the last five minutes did i repeat myself can i do this in a quicker way so you have to detect your inefficiency that's actually quite tricky but i'm going to give examples of course well i'll find a quicker way well every good editor has ways to do things quickly the trick is how do you find them you don't want to spend the whole day to find a better solution you want to find it in five minutes so i'm going to give you some ideas of how to find better ways quicker ways this is pretty much the same reasons i used to give for using rust but now i now i say it for oh camel if you're wondering and the last and also important is how to make it a habit s but it doesn't mean you know the commands you don't really use them you have to make it a habit to actually use them otherwise you'll have to think about every key that you've done yes you really want to you know get the commands in your fingers done automatically so so i always i i i've said this i mean i've made a learning vim tutorial motions kind of map video like how many times now and one of the biggest things i always say is don't try to learn everything at once it's the easiest way to learn nothing a friend of everyone's is a friend to none right and so it's like you have to you have to start with the simplest things and get those so ingrained in your body that you don't think about it and then you just like add one key add one key and it just makes you start going faster and faster because adding one thing fixes something that just really pisses you off and then it can just set into your heart so quickly versus when you have to do this really like if you have to think about all the motions you're doing vim's not fun to play right that's not a fun thing to do starcraft is fun once you know where everything is when you want to build a probe you're like be give me that be all right all right you know you just give me that e right you want probe and so it's just like it makes sense you don't think about it it's just like it just happens and so just once you make that kind of spy i believe it's spinal cord spinal cord is where all your muscle memory is stored so once your spinal cord can respond to stimulus then it's like that's like the fastest that's when you really hit the maximal speed it must be a habit so basically what you need to do is you have to see the problem you have to find a solution and make it a habit that's quite simple isn't it so okay let's go you know about the title i mean why second habits why not three or why not 42 well actually 42 different groups i thought i saw this book and i read it and i think it's it's quite an interesting book and gives you a lot of tips about work and life and family and all kinds of things and i can recommend it for for normal you know reading and i also like the title so i made the title for this presentation a variant on this title of course there's also another variant on this title seven years of highly defective people i just love there but this is really a great book that explains a bit about the characters around the albert and why they are drawn the way they're drawn and other developed over the first seven years that's really a nice book especially if you like the old course i am a defective person okay let's go along with the first habits this is something simple to start with so you have these codes and you're wondering where's this variable used i just use rxc for an example so what do you do you search for the name and you keep pressing and and to find all the occurrences of that variable and then you search for another variable and do the same thing again you know browse through the whole code and then you type a long name but if you look closely you can see there's a typo in there so you don't find anything well this is what what happens a lot if you don't know the commands of your editor so you keep typing a lot of the text type a lot of commands and wasting a lot of time obviously so what's a quicker way well what's important here how do you find a quicker way this in this example i will say that you're just search in the help of him and you find something about search highlighting anything well i'm searching i want to see what's going on so highlighting will help and so you turn on the highlight search option of course you need to search a little bit in the help to find this and especially the star command well i think most people that actually use them know about stock amount and especially if you look on the website i think it's actually the first step one of the first steps star is fantastic are you star all the time but i don't use a lot of highlighting of search i feel like i keep going back and forth on using highlighting of search or not using highlighting as search i think as of right now whenever i'm in the process of searching it highlights it for me and this is really this is called incremental search very very nice especially when you're doing something that involves like dot star and then i want to go nse right like you can see this it makes doing like little regex is really really nice and you can see why it doesn't work right so like if i do an i you notice that the last eyes over here but the first eye is right here and if you're not really familiar with regex's and you push an i you may be surprised that it goes all the way to the end and not to the first one right and so you kind of get to have this nice little little thing right here and so i don't know i i guess i only ever used incremental search and i've never used i don't really use search island so maybe i should try try it out obviously what you then get is that you get all the things you were looking for highlighted and it gives you a great overview of verifiables use of course this is just a small screen if you have one of the bigger screens you have a much better overview and it works really great i think one thing that's probably changed a lot in this world versus that is that like let's see i'm right here on this this variable one thing i can do is i can do vrr and i can see where it's being used in a quick fix list so this may have come you know this is obviously using a language server so he didn't really have this in his talk but this just makes life so nice to be able to have that so perhaps that type of searching isn't as useful as it once was of course the stock amount to use when the cursor is on the word so you type star and it looks for other occurrences of that word so how do you make this a habit well it's the switch on highlight search in your frame rc filing your startup file so it's always on i do that i also have to highlight search optional that does mean that for every search you do you see all the matches the whole yellow screen that happens and so i added the hint here that you can switch it off for a moment and then it switched on automatically again when you search for something again you have to make you have to make it repeat the start command you have the option switched on so that works and you have to use it again and again and you know after a little while you don't even think of it you just look at the variable you automatically press start maybe other ways to move around quickly just to mention one folding was editing oh this is in vim6 all right are we at vim6 at this point no i i assume we're later than vim6 but either way six some people like it some people don't so you'll have to find out yourself if you like it or not maybe i can has anyone used folds are people really into folds type 1 and chat if you're into folds i kind of feel like i might need to have like an arc where i try to use folds i've never really used much for folds i've always wanted to but i just haven't you know i don't know i've never i've never yeah i've just never really loved him switch give a life oh that's working oh yeah it's in lights a source file does this work all right what is this into doing floating way over here you got you gotta answer me this question what it what is this what am i missing here this is the return this obviously is the return value but that is way different i have never seen this coding style in my lifetime here you'll see a marker in the source file with three brackets and that actually marks okay that can be folded away so i can just click on the minus sign click right okay and then it's closed and if we just move around to some of the other folds i can move in just by moving the cursor and it opens so you can see the code that's quite convenient so there's a few commands that you can use with faults to move around so you have a nice overview of the functions in your file and you can move around and then move the cursor and it's open so you can see the code isn't there i mean i i know i've seen plugins that have like symbol lists for you this kind of is like a symbol list effectively if again i'm curious if folds would ever work but it feels just like a symbol list would kind of give you the same stuff you need but maybe you don't need you know i don't know anyways that's one of the many ways to quickly move around okay okay second example you know if you're working with x windows you have these terrible function names that you have to use all the time i mean it's just impossible directx like old one all capital letters you know they're small capital prints and there's everything you type it wrong all the time but one solution that people i've seen using is to copy paste the name so you have like a list of the names your puppy based on that's a little bit quicker but still it's a bit slow there's a much quicker way so how do you find this this method well what i often recommend is just ask around ask somebody a colleague or a friend how do you do this and that's actually one of the best ways to to find a better way of course you have to do it i mean don't be shy ask a question and this colleague of yours that of course is much better anything then tells you use the control n command or the next insert mode completion command ah and what it does is you you type some of the letters you try it and just use your buffer you type like five letters which is the start of one of the function names then you hit ctrl n fin will complete the whole word for you well if you're lucky i know that so many of you have only been programming for like a year two years maybe you're just starting but you have no idea how magic that is all right like completion before completion was a thing is incredible like it you can't even understand how much of a life changer it was until you've been in that situation it's just i mean it's like 16 friendship names that start with the same five letters so you might have to hit control and a few times they do take it for granted they have no idea mistakes then when you would try to type it directly the only bad part about specifically this kind of completion is i miss type things and then my buffer starts getting the mistyped version and then i i start reusing the mistyped version and then all of a sudden i just have a mistyped version everywhere in my code this has happened many a times to me it's just the worst this doesn't only work for like you know strange function names it also works for baby i mean if you reply to somebody and you type his name wrong that's also that's not very good timing not very nice so i use a completion a lot especially for people from strange countries that you know have these names that are really hard to type sometimes i mean no offense but not everybody has english names or dutch names looks very exciting dutch names it looks strange yeah about the language that exists so i made this fantastic high-tech menu and i mean doesn't it look great a classic dykstra that's an easy that's a normal name okay two vowels seven consonants completely normal name can we just stop thinking that dykstra is weird looking dykstra is completely normal casualties to scroll through them this is awesome by the way people don't know exactly look at this for those that haven't done anything with like didn't live in a life before autocomplete this incredible okay what is vim7 is what 2003 here we i actually have the list right here vim7 2006. netbeans was just like starting to come to prominence with its jdk autocomplete it's jdk autocomplete was out of this world in this time and so vim having on the fly spell checker plus these little pretty menus and all that oh my goodness gracious you guys don't even know how amazing it was normally use a term that we invented to you know avoid a very long name what this does is actually it looks at the context so it doesn't just look at the words before the cursor it looks a bit further back look at the names structure has members and then the best clothing before the alternatives that you get so you don't even have to type anything autocomplete the the question could have pointed a silver arrow there and you just type control n and you get all the possible names that you can type you can don't even know about live hopefully the only completion is complicated thing it currently has been implemented for a few languages like c python i don't think java really works and we could use some help so if you know what language very well maybe you can help developing it it's all written in film scripture i don't have to program c or anything but you know i'm not gonna lie to you i think i'd rather program c than vin script i've never loved i've i never had a big love for vimscript in fact that was one of my biggest motivating factors for switching to neovim was just being able to have lua i just i got so stuck on film script so many times it was very it's a very complicated simple language simple does not avoid complication you know i i have to admit it's not really easy but with a little bit of effort we can get it done yeah okay and sorry about the ugly manual magenta next habits i'm not a native english speaker i i do know english quite well i think but i still make lots of mistakes especially when typing film now has a spell checker which is very nice actually i think yeah the next slide shows that the spell checker you can switch it on and it will highlight in this case i was using the gui version so it's all just underline the mistakes with a nice wobbly line and then you can go there and either use the mouse or use keyboard commands to see the alternatives for fixing it so in this case it's just that the first letter was wrong this works it works quite well especially if you have only a few mistakes in your text and if you don't know the language very well so you don't know the correction this works really well it's supported for about 30 languages so that's quite good but still if you you know if you have common typing mistakes and you have to fix every one of them in this way it's still like taking a lot of time so you think there must be a better way in race in this example i'm using a way to find the solution i saw begin use this and i always wanted to kind of use this this like auto change like te will go into the just auto magically for you i've always been kind of you know what i mean i i've been kind of curious about just creating like an auto fix list for me because there's just things i do incorrectly you know the female's archive is really like occurrences all kinds of tips and suggestions and answers to questions i literally never spelled the currencies searching the archives and mostly you will find a solution actually this one is somewhere in archives if you can find it but of course now it's on screen so that's a lot easier what does this do you basically take the word that you misspell so you wanted to type there but you typed and you make an application abbreviation so that's i mean that's really simple it's one of the basic things in film you just have to think about actually doing it and then you can also as an extra highlight the typing mistakes so when the question doesn't happen for some reason because abbreviations don't always kick in yeah you can also highlight them so you can have an overview so then you get this so you have some text and this is something i typed and typed wrong actually i had a hard time typing this because the corrections kept kicking in and correcting me so i had to switch that off so these are just a few examples of course yeah it's good kind of a good thing is that i always forget how much auto stuff bothers me it's why i don't even use like auto pairs auto pairs bothers me enough that i don't want it on so i can see why i probably haven't invested time into this now that i think about it of course these are words that are really wrong you would never have them in your text so then you can make an abbreviation some words are just you still type them wrong but they're also words so then you'll have to decide yourself if you want to correct them or not continue typing all your mistakes and it corrects them for you automatically the only thing is you have to make a list i have made a list for myself because i always make it i feel like some of these things this part is probably less depending on your keyboard and what you're used to useful these days so you'll have to make your own maybe not that part i don't know if you want to make this a habit one thing you need to do is if you notice you you make certain types of mistakes you have to add that word to the list and find the correction and of course for more advanced users you can make a mapping to actually do that i kind of feel like i'm on the team you shouldn't automatically change those things you should learn how to just type it correct to begin with okay i don't know i'm kind of either or on that well when i started working for google i found this whole pack of codes that's fantastic but it's quite difficult to understand so you have to somehow find a way to maneuver between all the files and find out how it works and that's that's quite difficult if it's a lot of codes of course this inefficiency is very easy to detect you just can't find your way the solution is a bit more difficult in this case i give the example if you look in the film quick reference of course there's also a user manual which is very useful you just search around in some of the pages of the film let's go quick fix and the quick reference is very good because it's compact quick fix is like some keywords so if you look for the right keywords you can find i don't know how people what you're looking for how you use any editor that doesn't happen files i have two examples here there's one nothing using the ctex more important than quick fix i'm wondering how many of you know ctex okay quite a few but not everybody so basically you you have to move to the right directory and say generate the text file for everything below this the whole directory tree don't do that for a big tree because it will take too long but normally for libraries and stuff like that i don't really get the quick fix but you can have used it really quick fix is incredible and if you see next if you have multiple matches which especially happens talking about the c tags i'm going to jump over here let's use reverse let's use reverse here the important thing is that so i added reverse to quick fix list right here so where a variable is defined or what a function is defined so quick fix list effectively allows you to have a list of items that are all put into something that is persistent so when i leave here it's still there so when i go c open for quick fix c for quick fix it's still there and if i go see next it goes to the next item in the list the next item in the list obviously i just have those mapped so i can find everywhere reverses and it's just it's just set in my quick fix list so i don't have to think about it c for quick of course and then you can do c2 right so i can go like this c do do a command over every item in my quick fix list and i can go reverse and replace it with reverse me daddy and i'll do it for everything so it gives me all the places that i got changed and boom reverse me daddy is now a thing obviously i introduced some sort of weird issue there because i had the word reversed okay we'll get over that there we go there's a few matches you can just you'll see next and see list and the other c commands to to manipulate i love list and love it that's that's one nice thing though that if you have a lot of matches or you want to get a no fuel you have the quick fix window so you use the colon c open command you've got a quick question you can actually search around it's just a normal text we know except that when you hit enter you jump to the position that's mentioned there yeah that's also cool i did i didn't even mention that right or if you go well of course there's many other ways to move around and i can actually search it here and be like okay where is reverse list oh i want that one yes you can just type that on any file name and it will be a profile if it can find that does that for you and most people don't know that but it actually works of course you'd see that html s html you don't see it rendered but still it's very nice an important thing is that the path option should be set correctly because that's how fame knows where to find your files and they could be anywhere so you have to make sure it's set okay there's a few more commands actually the gf is really really nice it's capital i searches and include files so that's very useful if you have a lot of library yeah you don't know exactly how they define so you can't find the documentation you can search in the header file the include files and again if the path is set correctly i quite often just just use the square bracket tab and just jump to the first match basically and hopefully that's the right one and that's very quick unless you have a lot of include file then it's slow i need to find one with require i guess i don't use the term whatever anyway you can do that yourself gf is great let's work together there's a lot of programs especially about layout email lots of stuff that basically work with text but add something to it like layout or some some format like in spreadsheet the problem is that you know those editors are okay but it's sometimes so difficult to type a lot of text and you know the wq appearing in your text is not very nice so you know that's one of the inefficient things and sometimes when i have to write a document with markup and has to look nice then what i mostly do is something that you have to find out about of course again the trick is how do you find out how to do this well in this case i give the example ask all the things there's lots of people on the female list that are excellent in giving very nice answers to your questions and very patiently and understanding that you don't know everything and it's actually amazing that there's a few people that seem to be doing nothing the whole day but answering questions on the female lists so let me thank all the people on the female list that answer the questions there that's just great so okay so you asked this question and then somebody says oh just type your text in film if you like it with just a trick you'll switch off automatic text wrapping if it was on anyway you switch on the rep so the lines rap and you switch on line break this is of course the essential part of it that means that the the lines are wrapped at blank spaces or special characters so the words are not broken halfway so it's much more easy to read it's just a simple trick but actually if you do this you can have paragraphs of one line that you can copy paste paste between your word or open office or whatever and theme so you can edit them in film and copy them back and that works quite well of course it's still works to do the copying back and forth but it's at least a lot better than what's you know trying to type your text and work i agree of course there's one catch you can't copy paste the formatting so if you have like bolt stuff and underlining that will be gone it's not perfect yeah there's other ways to do this like i think largely fixed hasn't that been largely fixed doesn't say that the the dirt out of the way is that when you copy and paste text you can actually insert line breaks and remove them again but i'll leave that to you to find out how to do that that's the problem it's still like this actually have to scan documents that are right dude i get this all the time i have those all the time just one more example that i was it's going well that was thinking of exactly something i do when i release a new version of him or make a patch a few patches i forgot to show you the check if there's nothing wrong on some kind of system and the compiler doesn't want for every arrow so what i do is i run the film source code through lint i want to go right here i do it actually with like 20 different features what i get is an awful long list with all kinds of warnings and most of these warnings are foreign gtk warnings i'm afraid so you have this long list of warnings it's very difficult to find errors that you were actually looking for so how do you do that well quite simple actually this time you just think okay i can do it myself so you don't ask anyone you don't look on the vehicles you just do it and you write this the simple function which is nothing but a global command that searches for the things you don't want to see and delete them of course the trick here is to make the pattern match the lines you want to delete and not match any lines you want to keep so we need to think about that yourself in this case i do think like look for gtk and enum something and then i don't have that in my code so it must be in a header file and the pearl staff gives arrows that match this so they're all gone and then it cleans up then i make a mapping for this and of course yeah i have a lot of mappings that start with an underscore because underscore actually is an original vi command it's not properly documented but it is a command but you don't never use it so you can actually use it for mappings without interfering with blockings one of the film commands so that's a very good i like to understand more advanced mappings of course this is two signal the entering the function call for those that don't know underscore goes to the first non-white space character so if we have this if i go capital i it goes into insert mode at the first non-white space character if i press zero it goes to the zeroth character but often whenever i'm doing a macro i start off all macros with underscore because underscore just takes me to the first non-white space character and i'm in normal mode so i've always i love underscore underscore is like a go-to for me and this part you put in your famous c file or somewhere else that's the character that gets sourced when you start up and you get output you clean up the output and then you use the c file command to load the file as a list of errors so you can actually jump to the arrows very quickly and this is what i use it's not much more well actually of course the the patterns i have a lot more of them okay cool probably show that let's see there we are so there's a few more of them if you really want to do it properly and i keep updating this list for example if you upgrade a great gtk then it will produce different errors and it's quite a long list as you can see this horrifies me that list is terrifying then again you have to make us have it so just here's my auto delete list i'm like no no no do it well i do it quite regularly the only thing is the blame to runs a bit slow so i don't do it every day of course what i said you have to keep updating those patterns that's very important and especially watch out for things that you remove that should not be removed okay habit seven is actually a different kind of habit it's not really an example by itself it's a meta example a meta habit which is a habit to do these things i mean i talked about the three steps and the seven habits and you know explain how you do it and now you have to do it somehow you have to when you're using the editor you have to look back what did i do the last five minutes or even longer is there something i can improve it's very important that like every day you'll take a few minutes to think about that and not just you know keep typing because it's so easy to you know just forget about just keep going and then you'll never learn i like to compare that with driving a car when you when you are first in a car and your driver instructor tells you what to do and move the wheel and you know how it works but still actually doing it without hitting anything it's quite difficult so you learn one thing at a time you learn to use the driving wheel you'll learn to use the gears well you use automatic air okay well you learn all the parts that you need to know imagine the world where people used to have to learn how to drive using an auto or a manual for the first time like just just for a moment imagine the feeling you had having to use a manual as the first way you learn how to drive you can't even like press the gas properly and you're out i mean i learned how to drive a manual when i was young you still do that that's the common in the eu i mean i love manual when i went to the eu first time or this is back when uh the uk was in the eu when i did that and i went i went to ireland i had to drive on the wrong side of the road might i add and with a stick and i haven't driven a stick in like five six years so i'm sitting there going i don't know i'm i'm feeling real out of place at that point driving on the wrong side of the road none of the signs look the way they're supposed to look i'm driving a manual i'm shifting with the wrong hands but the the pedals are all in the right location it's not like fully mirrored it was very difficult the white person indicator everything it goes one step at a time the same for an editor you have to learn one thing at a time and keep learning the difference between a car and another manual yeah a car has only so many features and another has like 100 times many features so there's a lot more to learn so once you have learned to drive car you can learn to drive your editor edit responsibly kids okay drinking and editing okay don't think so that's good that's okay how does film help you of course lots and lots of features i think by now in team seven we have most of the things that people use actually in there i can't think of really big things to add that people would use daily feature requests but most of the things are just for a few people that would use them or they're very difficult to implement yeah i'm not going to go through the list you probably know about it and well i want to say one thing about automatic indenting i don't know if you're using it if you don't using it you're probably missing out a lot it's just a matter of switching it on and mostly it works especially for sea gold and a few other languages that are structured enough it's easy to figure out indenting you just say a language called seagull that had to be like a a translation oopsie daisy there can't be a language called seagull is there because that intention defines what it means and not the other way around c code so that's a bit tricky but otherwise it's a really great feature and saves you a lot of time it does not work in ocamo very well i swear i don't know what's going wrong with my old camel i cannot get it to indent half the time okay so a summary of the three steps and somehow it sounds so simple and it is simple you just have to do it so you have to detect what you're doing inefficiently as i said look back at the five minutes that you've been working and think of what could you improve in those the commands that you've done find a quicker way well there's many ways to find out closed captioning is very very much with online help ask a mail list ask friends search on the internet it's also really good write the wrong scripts i know the famous scripting language is very specific it's not like any other language but if you use examples for example most importantly if you go to the film website there's lots like did you see that i mean it is pretty good he said for example uh and it just did dash dash it's pretty i mean it's pretty good but it can be really bad like change a little bit do what you want and of course the third step make it a habit make sure that you actually use it and get it in the top of your finger so it's almost arithmetic and i think one important thing to add here is that you have to do one thing at a time i don't think you can just sit down one day and in that one day do all of this for everything you do and then the next day you're going to use them no it's more like you do a little bit of it every day it works much better are like that 39 19. do a little bit different examples how multiple effective one of the major problems is that you know your boss tells you that you know it has to be done today or yesterday you just don't have the time to look into the help files or ask somebody how to do something quicker and it's an obvious mistake that a lot of people make so just take your time to do it right and in the end you will be more effective and more efficient than your boss will be happy too and become for example i i know a lot of people that you know just start reading the reference menu and want to learn every single command you can imagine not only do they take an awful lot of time to learn everything but they're also wasting time because most of it they never come to use and especially it's not going to be a habit so every time they they want to do something you have to think ah how do they do it and you know carefully type their commands and they end up being very slow actually so don't try to learn everything just learn the things that you need let's go brown that is such a w ow that is such a w piece of advice okay a few more tips read the user manual since okay whoa whoa bram okay i'm over here cheering you on and now you rtf aiming me right now i don't know about this last one that last one little suspicious by the way tj when are you gonna release the rtfm user manual you promised to do is it when i get blue hair it could be it could very well be when i get blue hair tj will also release his friendly manual reading the user manual youtube series yeah too bad i can't read okay i august 21st do you wanna do you want to guest reader that's quite a bit of text that was based on the thing book by steve owling he wrote a very nice book for beginners basically how to learn film and especially the first 20 chapters or so are quite good so i took the text unfortunately they allowed me to do that to copy the text and then i fixed some mistakes i had to take out the pictures unfortunately and i added all the new things from theme six and frame seven so it's quite big and it's really set up so you can read it from start to end i'm not gonna say this hurts my feelings but it hurts my feelings okay let's keep on going and you have some idea at least about all the commands and from there you can actually jump to more detailed help so that's very good as i said the film user playlist works really well don't be afraid to ask a question there just try to formulate your question properly if you have something like this doesn't work how do i do that then nobody can actually answer your question too it's just coming back with more questions because they don't understand you but if you formulate it properly then i'm quite sure that within a few hours you'd have like a dozen answers hopefully and as i said thanks to a lot of people that actually answer those questions that's really great okay that's the end of the slides so let's have a few questions i'm going to end it there i think that's a good place to end it this was awesome you know i i hope everyone takes a little bit of time appreciate what bram has done for our programming world because even if you use vs code even if you use intellij even if you use pretty much anything the reality is that you're probably still highly affected by them the emotions are still talked about you're probably curious about learning them or you already learned them and you already use them all the time when you go into gmail and you press j and it goes down per email inspired by bill joy creator of vi which vim took its inspiration from and created by improved vim and so it's like the amount of just like peer influence that has come through this world due to vim is incredible and so it's fantastic yeah and if you haven't learned how to touch type vim highlights a very important aspect of becoming a programmer which is to learn how to program right this is the charity bram has been championing for so long i think it was even their treasure yes there you go and take a time like i said if if you could this week if you ordered doordash if you do whatever what i would love you to do instead is go or go get a bag of rice and beans have a simple meal and give to a charity in which people don't have meals i'll do it you do it everyone just go here and do this i think it'd be a huge huge w right so do that it's simple right it's simple i eat rice and beans only anyways well boom then you're good to go but i mean real real talk i mean dramatically improving someone's life is an amazing thing to do and so do it it's fantastic take some time bram championed that it's i mean it's been in there to help the children of uganda that's been that's been in vim as long as i can remember so go go do that just go do it it'll be fantastic i think that's about it for bram or for a little little thing for bread but i just wanted to do this you know i i felt hesitant about doing it for a couple reasons one i use neovim and i know there's some level of i guess beef betwixt the two which is stupid i think everybody on neovim has huge respect for bram i have huge respect for bram and what he built obviously if if bram didn't do what he did i don't even think i would have been a content creator like real talk the only reason why people watch me at all and how i started that is simply because i can edit code quick in vim like that's it i it's just a parlor trick bram created my content creation reality right and so yeah i for me it's like i'm i'm super grateful yes a brief between some people in the community but never beef between the maintainers yeah that's how it always goes anyways right the community misconstrues things and blah blah blah blah i started watching because of his tiny hands it is true my tiny hands and my in my little quick my quick vimmings is really what got me off the ground and not another dimension i literally did this that's how i got my first job but real talk you know it's just you gotta you gotta give respect where respect is due and i think that he did an incredible thing and it's amazing i i probably will never do that i don't think i'll affect nearly as many people's lives as bram ever did i think most of us will never get to that point a very few people get to ever do that and like in my own like personal heroes book i have like two programmers in my quote unquote heroes book i have carmack and bram right that's it not not a huge amount hopefully you guys all take a moment enjoy it don't cause drama because that's stupid but the other reason why i didn't want to record this i didn't want anyone saying that i'm trying to like get views off of some super unfortunate thing i had a lot of respect for i i don't know linus i really did not like how he treated people i know he's changed his ways i just never really liked how he treated people i i don't have to have respect for him right he even says have respect and i even watched a video about him talking and i laughed about some of the things he said but in the end i didn't have the same respect for him as i did say bram or john carmack right i just didn't i felt like they're more respectable people you know if i'm gonna hang around with somebody if i'm gonna learn from somebody you inevitably will also take a piece of that person with you it's just how learning works it's just how it always happens no matter what you think you will always become like the people you kind of learn from and so i wanted to take that time to you know i want to learn from the people that i have that i feel like if i accidentally took a small little piece from them it'd be okay you know what i mean i just think that that's just me personally and so brown was one of those people i think you could just take a small little piece piece from so anyways the name is the prime machine