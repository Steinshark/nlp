i actually can't get this off my mind and i keep thinking about this cuz the problem is is i see this all the time there's something i really like or something that i use and you have to ask yourself can the ship be steered enough to make it into something i like i really really like or does it simply need to be redone and i think this is the heart of this post that jared made he filed this issue and then started working on bun and during this little little exchange right here mato said i imagine a different world if you sent a pr to fix it and became a node.js collaborator making it faster and then bu then jared responded with buns existence is inspiring node and the broader ecosystem far more than me contributing to bun or to node would have and so is that is that true is that fair i don't know if that's true but i'm also curious because node will never take in typescript as part of their build system node's probably not going to provide a bundler node probably won't wrap np m for installing packages node probably won't do any of those things you know node hasn't really made the attempt to solve the esm versus commonjs problem and instead it's just emotional bruising the entire way it feels like even though this is about performance and what he said is about performance it's not about performance right to me it said to me it seems like even if he did fix this we would still be in the same situation and he would have created bun anyways yeah bun creates an ecosystem node is just one tool within an ecosystem i think that's fair i think neo so so i i do relate this a lot to neo ne vim was the response because bram bless his soul it was bram's vim is just bram's project right that's all it was he gave all of his money he made on vim to charity he was a a genuinely nice guy and he did all of that but it was still just his project if he wanted to work on x that's just what he worked on it didn't matter anything about what you wanted in i'm sure it did right he read feedback and he tried to make what he could the best but it wasn't the communities it was bram and neil viim was what the community wanted not what bram wanted and so this just reminds me so much of which is there's there's a breaking point that we come across and we do that and then this post came right afterwards so if you don't know this one this is the creator of low dash okay that one project that every single every single repo in the world has a reference to yet i'm not even sure if anyone actually uses it i had folks tell me during the days of low dash development that i should have opened prs to underscores those trash takes were shortsighted let me break it down for you i can get why mato did not like this response in the sense that those trash takes right what he's saying is that this response right here is a trash take i don't think this is a trash take because it could have been a different world would have node allowed bun would would node have moved in the direction that bun is or isn't i don't know and so he goes on and he talks about let's see assumes a oneoff pr and not a larger issue this is very very true fixing the fs would not have been the only thing jared was upset about it is very interesting though right and so you can see that it just keeps on going all these stuff and like is bun making it a better place right the response to this right where he says this bun's existence is inspiring node in the broader ecosystem i think it's putting pressure on node to become more performance focused and really to ask ourselves why hasn't the tooling around javascript changed in the last 10 years why is it still just a piece of crap right every six months a new bundler comes out every six months you're told that this is the newest greatest thing that has ever come along every six months you have to change all of your crap to be in line with the greatest thing ever to be created and then bun kind of comes along and tries to like change that no we will do the bundling no we will do like everything no we're going to do all of it i mean obviously the secret lie is they don't do at all right they're still formatting there's es lint there's prettier right so unless if they're getting prettier and es lint rules and all that put into place they're not quite doing it all there's still a ton of configuration right there's still a tsc there's still a package. jesson there's still all these things you still need a prettier rc you still need a tailwind thing right like to do all of web development there's just so much dependencies and so much incremental building that needs to happen i mean can bun truly fix it all and make it into the ultimate bun maybe but imagine like the undo burden on bun to make it into an the ultimate bundler right i mean they're going to have to support so much crap like that's why null ls right we read this not too long ago no null ls is being archived and the reason why it's being archived is because null ls like there just comes a point where you cannot maintain all of it right like that's my worry about bun is that they're going the direction of nls like we must actually make the all onestop ecosystem to build this in i just don't know if i don't know if web development is fixable like i don't know if we could really make it in such a way that makes sense and a lot of that just comes down to the insatiable need to not use the standard or what's available but instead continuously elaborate on what is currently there and to make it into like more abstracted like tailwind tailwind is great but it's just an abstraction over css it requires a build step typescript is great it's it has a great little lsp again you need an abstraction you need a build step over javascript bun made that a little bit better prettier es lint like everything it's just there's always some other thing you have to add and it's like emotionally draining how many are they going to go before they say this is all worth supporting what if types come out and now you have this whole type problem going on along with typescript when do you stop supporting typescript what happened if typescript fundamentally deviates from javascript types and you have this at ends kind of thing going on like what do you do then do you support typescript or do you support javascript with types from the committee a lot of yeah i mean and that's the biggest thing is that you go to any other language you go to rust you got cargo you go to go you got go you go to zig you got zig you go to o camel you got kind of of dune and and it's coming together it's almost complete and it's o camel like nobody works on o camel there's like 17 o camel influencers and they're all working on tooling and the tooling starting to get pretty good it's just an interesting world honestly it's just an interesting world php you don't like it but it it is the right tool they are all tj and jane street literally it's just tj and jane street putting it all together anyways i still can't for whatever reason i can't shake this and i can't quite figure out why this exch this exchange bothered me so much cuz i don't think matteo's wrong and i don't think bun's wrong i am unsure if jared could have made node into something that looks like bun and i am unsure if node would have had as much appetite to change as jared wanted and my biggest concern right now is that we've just fractured the system even more every library all 100,000 node packages by the way every time you say npm a new npm module is created so just so you know we've just created several thus far but think about the amount of prs right now that have if is bun and unironically or ironically i'm not sure if ly created this but there is an npm is bun module dang it why is this so hard to find what is it is it npm js. what yes i was looking at butt plug okay this is hilarious to me that there's a buttt plug development guide on np on npm and i think it's funny that there's also react butt plug as well react butt plug js i okay i can't remember what it is anyways is is bun look at this it was published eight days ago how much do you want to bet you're going to see this thing start to explode right it's just g to right because everybody's going to want that bun fast path so i'm going to have the is bun they're going to hack your ass they literally are going to hack your ass oh the reason why i thought it was funny is cuz there is something called react butt plug and and it literally has vibrator search buttons vibrator controls you can make a ui for your butt plug so that way you can control it from your phone just in case you know you don't want to have to be fangling jangling back there you can just turn it on with your little phone laugh now well guess what won't be laughing when you get that telephone app now will you typical javascript have anyways now that we've completely ruined the stream and my point is completely gone but i'm going to hot take this one which is i think bun is a really incredible product made with incredible effort that was a technically incredible piece that i think will be deprecated i know it's a little bit spicy the best part about bun is that i get to forget about dino yeah they said that about react look at where we are yeah i'm not saying that the world can be a worse place react made more sense because we were un we were unn knowledgeable about what it's like having having template engine and dom bindings in the same area right i think we are unaware of the downfalls of that just something to think about and i think you guys should also think about this which is when do you create when do you contribute versus when do you when do you burn it down and create your own i don't know i still i i and by the way i still think that bun should have used hermes i honestly think that it's it's that that's the reason i think that's truly the reason why it's not gonna it's not going to win because jsc is not compelling zigg is not compelling right zigg and zig and jsc aren't a compelling difference between c++ and js and and v8 hermes is very exciting every time i say hermes i swear you guys say her pie it's just such a stupid joke guys stop being so stupid why you got to make such stupid jokes all right the name is i actually don't use javascript on the server a suck on that a jet again got him