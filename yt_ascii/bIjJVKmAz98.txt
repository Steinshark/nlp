in this video we're going to be learning the basics of the python programming language as well as how to think like a programmer specifically using the python language the purpose of this video is teach you the basics of python so that you can get started with the language and sort of understand how the language works at a higher level as well as the basic building blocks and concepts of python and we're actually going to be coding a basic program using these basic building blocks to show you just how much you can actually get done just with the basics and lastly at the end i will direct you to the courses and resources that i recommend for you to keep going with python if you decide that this is a language that you want to master there will be both free options and the paid options if you're willing to invest a bit of money into your learning but before all that let's briefly discuss why python is such a great language for you to get started learning to code firstly it's the applications python has sort of emerged as one of the most popular languages in the industry and there's a humongous amount of demand for python developers at the moment or whether python is for you will actually depend on what sort of programming you're most interested in and i've said before that the best language for beginners learning to code is actually javascript and that still applies for a lot of people and the reason for that is that javascript is best for web development but for a lot of other things like for example data science artificial intelligence are super in right now and personally for me these areas are what interest me the most actually because python is the most popular language in these applications has actually pushed myself to switch from focusing on javascript to actually focusing on python the second reason is the syntax python is an extremely user friendly language the syntax is extremely easy and it's really easy to understand and because of that very easy to learn as well and the third reason are all the libraries and the support that exists for python essentially anything that you can probably think about doing in a programming language there's probably a library that someone else has written that you can essentially just import use the functions and objects that someone else has already made so that you don't have to do everything from scratch there's just so much potential with python and you can do so many cool things with it that's why i've started using python in a lot of my personal programs that i'm writing for myself like a lot of my automation projects like in this video right here but yeah you can just do so much with python that's why it's such an exciting language to start with and obviously lastly as i sort of touched on already the job demand python is one of the most in demand languages in the world so probably for a lot of people the thing you care about the most is getting your first job so if you know python there you go it's one of the best languages for that because so many companies need python skills so now as promised let's get into the tutorial part of this video where i teach you the basics of python so that you can get started with this wonderful language i believe that the best way to learn is by actually applying concepts immediately into something tangible and fun so if you follow along and build this program with me i guarantee you you'll learn a lot now normally code is written in something called a code text editor or just id which is basically just like microsoft word except for coding normally you have to install all these text editors in this program and you have to install python on your computer as well for even to be able to run it but for what we'll be doing in this video you don't have to do any of that because actually what we'll be writing a code in is this browser-based ide called replit we're also very kindly sponsoring this video replit is a popular free online platform that allows you to start coding without having to set up anything and they provide a social browser-based ide to build and host your project as well as collaborate with others and share your work i honestly think that this tool is absolutely brilliant for beginners and i use it all the time from even my own stuff if i don't want to go through the hassle of like creating folders and like setting up my environment and that kind of stuff so if you go down to the link in the description you'll be able to create an account with raplet and create a rebel which will allow you to code along with me throughout this video but this is absolutely fine to start with the free plan they also have this premium hacker plan which has a lot more cool features but for now just go create the account and let's start coding okay so we're going to get started by creating a repo right here we're going to choose python as the language and i'm just going to name it tutorial essentially what you see here is on the left hand side here is the area where you write your code and on the right hand side on the console is where you will actually see the output what you're coding and we'll see in a second what that actually mean so if this is your first time writing python that's absolutely fine we're going to learn how to print hello world you're going to write paint print parentheses and a quotation mark hello world and you're going to click run up here which is going to run your program and there you go you've written your first level python program congratulations so what's actually going on here is we're calling this function which is called print which is a function that is built into the python programming language so the creators of python have created this function i've defined this function called print this time we're passing a text string it just prints it so outputs it into the console the most basic function in the world but a really nice one to get started with later on we'll learn how to actually define our own functions rather than just using built-in ones like this we're gonna try this again instead of printing hello world we're actually gonna print a number and that's gonna print five as you can see right here when you're printing text in python and most programming languages what you have to do is use these quotation marks to essentially tell python that we want to use a text string you can use double quotes or single quotes doesn't really matter i think there's some minor differences but basically it's the same thing but with numbers you don't need to use quotation marks you can but if you use quotation marks with numbers the python language is actually going to interpret the number as a text string and this difference between strings and numbers is an example of data types in a programming language a number in python is commonly referred to as an integer and you can see that if you type int it actually shows all these things which it actually highlights it here is recognizing that int in python is this sort of special word another one is string which is abbreviated using just sdr but with these hints or numbers you can actually do math just like you would expect with numbers you can print no only just try you can print five plus six for example and well it's gonna output 11 and you can do anything else you might imagine and boom i get 22. so integers and strings are treated differently in python they're different data types they take a different amount of space in the memory but you get details which you don't need to worry about right now but essentially the first thing we need to realize about our programming language are these different data types and there's a lot more there's for example float whereas an int is just well it's an integer it's a single number without any decimal places if you write 10.6 for example the type of this 10.6 is not in its float and you can also do arithmetic with floating point numbers 2.5 plus 7.8 and we're gonna put 10.3 as it should there's a bunch of other data type for example we have boolean which is necessarily just true or false so we've talked about data types we'll talk about functions what about if you need to use the same either a number or a text string in a multiple places what you can do is store these strings or into whatever data types into variables which sort of stores it in a place of memory for you to access later you have a calculation right here this is let's say this is a really important calculation rather than having to type two times five plus six multiple times we can store this in a variable and we can do that by first writing just a name whatever name we want to give to it so let's say calculation will be the name of our variable equal sign and then whatever you want to store into this variable now whenever you type calculation it's going to go look for this value from the computer's memory so we've got print calculation and we run it zero print 22 which is the same as right here so this way you can actually start storing these values into variables to access them later and then you can do other stuff you can go print calculation times three for example and it's gonna return 66. i know that at this point you're probably feeling like this is a bit useless like where's the point of all these things i promise you in a moment we're gonna start coding an actual program with all of these things now we can store things in variables but let's say you have a lot of different numbers that are related to each other so you want to remember the ages of all your best friends and you need this information later so you create a variable h1 equals 22. so this is the age of your friend number one and the other friend is 35 so you will create a second variable h2 which is 35 and h3 which is let's say 43 something like that there's actually an easier way for you to store these kinds of related values that are really the same thing that you want to sort of keep grouped together than just creating different variables for them what you can do is use pythons built in lists the way you do this is you create one variable which is going to store all of the edges that you want to store so for example we can call this ages and then equal and then we're going to do something magical we're going to click curly brace and 22 comma 35 comma 43. now we've stored all these edges in this one ages variable rather than having separate variables for all of them you can see how this is a lot simpler to write and it makes a lot more sense as well so the way you access these individual items of a list in python is using this kind of synthetic you call ages curly brace and then the index of the item that you want to access and one thing you want to remember which is probably going to trip you on the big in the beginning is that in python and in most programming languages indexing starts from zero but this 22 is actually index zero so you would access this by writing ages curly braces zero and we get 22. if you want to access 35 we would go ages one even though it is the second item on the list you access it using the one index this is how it works this is index zero this is the next one for whatever reason that's how the creators of python have decided to index so you just need to keep that in mind and it will become second nature very quickly okay so my camera actually ran out of battery so for that reason i'm filming this second part of this tutorial actually in a different day you might even see that i've got a fresh trim just for you but let's get into actually making something with these basic skills that we've learned so far so we're gonna make another apple call it with game because what we're gonna be creating is a game that asks you questions you get an answer and then the app is going to tell you whether you're right or wrong just with the basics you can do quite a lot first thing we're going to do is create two lists we're going to create one list for questions of our quiz game and another list for the answers so the answers to the question we create a variable called questions so we're going to remember our bracket and the questions have to be string so you remember text is strings and what do we need to do with strings quotation marks so the first question for example should you subscribe obvious answer to that one is coding cool question mark and we need to remember the quotation marks which even i forget sometimes which always leads to some errors and then what we're gonna do is create a second list for the answers so we're gonna create a variable called answers we're gonna do these as strings we could also use boolean values if you wanted to then we want to be able to track our score so how many questions we've got right so far so for now we're gonna initialize a variable called score and set it to zero so you remember how in python i told you how there's functions like print and i promised you that we'll be learning how to define our own functions so we're going to be doing that now the way you define a function in python is using first a keyword called def it stands for define but whenever you want to define your own function you write def and then whatever name you want to give to your function so for us we're going to create a function called quiz game for example you can call it anything you want and the third thing we need to do when creating a function is we need to put parentheses at the end of the function and then the fourth thing the last thing is a semicolon okay so the editing me just realized that what i'm talking about here is not actually a semicolon i think it's a colon semicolon is something completely different so yeah don't put a semicolon apologies back to the video and then you're gonna click enter and you can start defining the body of the function what that function actually does and then once we run this function whatever we write after this def function name parentheses semicolon is what's actually going to be run so essentially functions allow you to save a block of code into this one package sort of thing so just as a test let's say we write print and function works so now whenever you run this function it's gonna run this line the way you run a function in python is pretty much the same thing as defining the function except you don't use the def keyword just write the function name quiz game parentheses and you don't write the semicolon you just write the function name with parentheses and now when we run this program this function is hopefully going to run let's see if that happens as you can see function works let's say we want to print our questions right here so we're going to the name of our variable inside the print function as well and now it's going to print the questions list let's see if that works and it works as you can see it prints the array of our questions so functions are a really excellent way for you to package multiple lines of code into one block of code so let's say you want to print all of these things at once in multiple parts of your program you don't need to write all of these multiple times instead you can just write them inside one function which you can then just run and this is a really important best practice in python and in programming in general is sort of encapsulating your code into these blocks of code which when your program gets really complicated it's going to make it a lot easier to write and a lot easier to understand obviously this is not actually what we want to do with our function so we're going to erase that what we're instead going to do inside our function is something called a for loop so for loops are an example of control flow in programming and this is where you're really going to be able to do some really cool things so let's say you want to print a number from 0 to five what you can do is instead of writing them print zero then one etc etc you can actually do this in just two lines of code if you write four i in range five semicolon print i let's just see what this is gonna do you're gonna write a number from zero to four because indexing again starts from zero five numbers starting from zero which is these two lines of code this is great power we're gonna even do this for 500. let's go run print all these numbers and all you have to do is write one line of code this is really powerful if this range and what you put inside of here defines how many times this loop has to run each iteration we're gonna have this i variable that's gonna represent a different number so what's gonna happen in the first run i is gonna be zero and whatever we do with i is gonna be zero and then the second run is gonna be one then it's gonna be two etc etc so let's say we wanna print each of our questions right here in this questions array we wanna run this loop one two three four times right so instead of printing i you wanna print an item from the questions array using this i asked the index gonna print the questions lists index zeros of this first question and then the second one we're gonna print this question so index one of the questions if you're gonna figure out how to do this already give it a try and now i'm gonna show you how to do it you're gonna write questions bracket i remember this is how we access items from lists in python but now what's gonna happen it's gonna run this four times first it's gonna print questions this is zero then questions one then questions two etc and i just saw that i forgot the print statement so that's why it didn't work and there we go now it's printing all the questions in order so this is how we can access all the questions in order from a questions list that's actually a better way to do this because let's say we increase the length of the zero let's say we add another question again obviously yes by the way if you enjoyed the video leave a like on the video right now let's say we increase the length of the list like this now we should run this five times instead of four we can actually access the length of the list by using this len built in function we're going to go length and then questions we're going to take out the length of this questions list and now every time we run this whatever the length of the questions list is that is how many times he's gonna run this loop let's see what happens and as you can see it takes in the last question as well for each item of this questions list we want to first of all print the question and then we want to also take as input so allow the user to input an answer and the way you do this in python is using this input built-in function and then inside of here we're going to type please answer for example so now what it's going to do is instead of running the loop five times it's gonna ask for an answer from the user so i can type whatever i want here and then after that it's gonna keep running actually one way to make this better as you can see we were sort of writing our answer right after this please answer text which is probably not what we want we want to print a new line to make it a bit better to look at so the way you print the new line in python is using forward slash and forward slash and it means printing new line in python instead of asking the right answer right here it's actually going to go below so it's going to be easier to see essentially this is a minor upgrade we're going to get the answer from the user and we're actually going to want to save that answer inside a variable we're going to define a variable called hands for example and then set it to equal the input from the user to so whatever they use their inputs as the answer is going to be saved in this variable and then we want to check whether this answer is equal to the answer that we want and the way we do that is using something called an if statement in python the way this works is you write if there's a keyword in python and equals and here when we are comparing two things we're actually gonna write two equal signs because if we were writing one python would be thinking that we want to assign something the answer variable which is not what we're going to do we want to compare two things we're going to do two equal signs so now we want to access the answer that we want to compare it to which is going to be the answers list index i so the same index as the current integration of the questions list we're going to access the answers from that list so then we're going to write a semicolon and then the way if statement works is another example of this control flow in python so whatever we now right here is going to only run if this condition is true so if answer equals to the correct answer then this thing is going to run if it doesn't equally it's not going to run it's basically going to skip so if you're correct we're going to print correct for example and if you're wrong now we're going to take out the indentation that now whatever code we write next is not part of the if statement anymore we want to do is so if the answer is correct we print correct and else so if the answer is not correct we do something else so in python the way you do this is simply writing the else keyword whatever right here is gonna be run if this thing is not true and if you're not correct we're gonna print incorrect you fool okay so it's gonna ask us a question should you subscribe yes of course correct yes now is coding cool let's say we answer wrong and we say no it's going to say incorrect you fool because we were wrong so it seems to work now the last thing we want to do here is remember that we wanted to keep track of our score so if our answer is correct we're going gonna increment this variable from zero to first to one the way you do this python and i score we're gonna reassign it so score is equal to whatever the score is currently plus one there's actually even shorter way to write the same line in python the way you do that is to plus equal to one basically just means the same thing it's just a shorter way of writing the same thing which is essentially just mean increase the variable by one and actually it's giving us an error so actually what we're going to have to do is take the score and put it inside the function i think so that we can actually access it and modify it and if you're incorrect we don't want to do anything so after all of these rounds have run we want to print our scores how many answers we go correct so we're gonna print score like that see okay so yes yes it's cool yes so that's gonna be wrong and is java a foreign language no correct again did you like the video let's say i'm a fool and i don't think we should like the video which we obviously should by the way right now and we incorrect and at the end we got three of our five questions right obviously we can do a lot of things to make it better to optimize it but essentially just with this very basic concept of python we were able to try a very nice game essentially like a real functioning working program which is pretty cool one more thing i'm gonna do here is show you how to use something called f strings so for the user it's probably better if he actually shows what this three at the end actually means so for example we might imagine printing at the end final score is score but as you'll see this doesn't actually work all right yes yes again it doesn't actually work because this score is inside a string so it's literally going to write score instead of taking the score variable so the way you get around this is using something called f strings in python you write f at the beginning here and we're going to put this score inside curly braces so this is actually essentially telling python that we don't literally want to type score we're going to access the score variable and print whatever the value of that variable is so let's see how this works now there we go prince final score three and whatever your score is it's gonna print it i know this is not even the optimal way do this if you know how something called dictionaries work in python you could actually make these questions and answer all as part of one variable but for the purposes of this tutorial we're not gonna go there essentially the purpose of this video was just to show the absolute basics and hopefully now you have some sort of an idea of how the python language works but certainly this is obviously not enough for you to be a good pride on programmer not enough for you to get a job so if you want to learn more about python there's a couple of resources that i would recommend if you want a free option there's an excellent course on coursera that you can order for free which is called python for everybody is one of the most popular python courses online and it was personally the first ever programming course i did myself so that's why it has a really soft spot in my heart it starts from zero and it goes into sort of maybe mid intermediate level or maybe lower intermediate if you really want to go advanced and you want to learn even more you're going to have to still do some more things to really become proficient in python this looks like the other resource i recommend if you are willing to spend some money with the python online bootcamp from xero to mastery which is probably the most complete python course online that i've found and i'm actually still doing it myself because it starts from zero and it goes all the way to the most advanced features that you might think about learning python so the most complete python course that i found myself so even for me there's still a lot to learn about python in this course it's a monthly or annual subscription that doesn't just get you access to this python course it gets you access to their whole catalogue of like thousands of hours of coding courses and my camera died again but as i was saying zero to mastery are amazing and i am their proud affiliate so if you want 10 of the coding courses you can check out the link below in the description and i also have a discount code thanks also replied for sponsoring this video i highly recommend that you check out that platform to start coding your own projects i usually don't do tutorials like this on this channel so if you want to see more let me know in the comments if this is something that you want to see more of and like the video so that you can indicate to me that you actually enjoy videos like this if you do want to see more python tutorials from me right now i actually did make one previous to this which is for an automation project which is a lot more challenging than this one but perhaps if this video was too easy for you you can check out this video next to see if it's more to your liking