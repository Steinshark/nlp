the first thing we've got to talk about today sean because otherwise i'll get it in the neck and so will you for not nudging me and reminding me yes everybody i know this thing here is still using windows 7 and the useful guys at work thanks for doing this chaps have assured me that the moment this filming session is finished if i bring this in they will upgrade that one to windows 10 as well we've been talking about regular expressions basically about the theory of them and the idea of them but we've not actually seen them in practice yeah regex regex res they are a very good illustration of where theory can meet practice but i think in the previous one we did a little bit of theory but what we ought to do now is just see them in action i think it's a difficult one for me to tackle is this i think you'll all i'm just trying to get sympathy here the span of what you either know or don't know you the audience is huge on this topic some of you know way more than i do some of you really are beginners and struggling to get used to the somewhat abstract notation and so on so apologies up front but this one will seem very simple and very straightforward to those of you who have got some expertise but i think it's important that we regroup and say look this is the notation we all agree on this because i have for the future got a very good example lined up of something where regular expressions if you like can only just cope i am doing my examples here in lex because i hope that some of these examples later on will transfer into being part of a little compiler of some sort and it's software i'm used to but it's very straightforward you give a piece of regular expression for a pattern you want to match and then you give if you like an action that you want to take now very often having recognized a piece of regular expression all you want to do is to echo it back perhaps with a bit of explanation as to what it means so here's my simple exercise i'm going to declare about seven reserved words in my language but my language is going to ultimately end up as being an elementary computer graphics language just like brian kernighan's pick so my reserved words will be things like circus circus [music] circle in fact i shall put in both circle and circus to see if it can distinguish between the two line arc spline box that sort of thing i want those to be picked up as being reserved words but then if it isn't a reserved word in my scheme and it's some other bunch of characters is it a bunch of characters that would do good service as being a variable name and as i think we've said many a time variable names in many languages follow the pattern that they must begin with a letter but then after that they can have any mix of upper lower case letters and digits in the name zero or more of them that's your variable name so reserved words and name variables of that type of that particular reserved word type that's all we're going to do today i have here a lex script which has got seven specific lines in for recognizing circle line arrow spline box arc or bonus at the bottom circus both start circ so when you look at it it's either going to match that or that or that or that all that the reserved words if it won't match any of those it keeps coming down trying to match trying to use the next regular expression to get a match and below here i just give 0 to 9 it says in square brackets plus and that's a piece of regular expression notation that says any combination of digits not to nine in any order going on arbitrarily long for the moment here those a to z or a to z choices it means anything in that range literally those characters in however many combinations are possible so i've put all this together i fed it into lex i compiled it all up for you won't bore you by doing it in front of you but believe me i have saved this as a binary executable it's called test re for test regular expression but it only handles these regular expressions i think we're all ready to go i just type in the name of the executable binary test re let's see if it works right silence signifies i'm happy yes it's waiting so go on tell me something just to try out shawn let's use the name bob bob you just want bob all on its own bob okay what will bob do would you agree with that bob is a variable name in other words it's a valid identifier for a variable of some sort fine yes there's nothing to stop you calling your integers or your circles or your lines you can call them bob if you want to that's fine since i'm saying that this thing has advertised really does treat words like circle and line as being special let's see if it filters those out and gets it right so i'll just say circle on its own lowercase look at that as part of my pattern matching circle is one of my entries in reserved words that must be recognized just as is lowercase notice and it's worked it basically says yeah got you circle it's a reserved word and just to emphasize i've got it it's circle right now this time i'm spelling it with a capital c and my guess my hope is that it will recognize the first circle as being a reserved word the second circle can't be a reserved word because it's case sensitive right it's circle all lowercase has been reserved but the version with an uppercase c isn't so therefore who knows it should be a variable let's see if that works yeah circle all lowercase is reserved echo it back just to be sure yeah i got it it's circle but circle is a variable name which i think sounds right think of something else that might break it sean go on well we talked earlier and you kind of said the idea of putting the word circus in there to throw it because it's so similar yes that's a good point let's just try circus is happy with that i did make it a reserved word but it hasn't sort of come up with oh i can't decide between circle and circus part of what i was saying in the episode last time is that one of lex's jobs is to say despite the fact that circle and circus have a common beginning i'm very clever and i can very efficiently factorize that beginning out and then say well after that if it ends l e it's a reserved word if it ends u.s it's also a reserved word but it's happy so a good thing to do now i think would be can you name a circus [music] better still perhaps how about this i want to name another circus but i'm going to call it circus one now that should be no problem because it's not saying circus circus it's saying circus reserved word of that category circus one can only be a variable name so it's using the space to delineate yes the way i've got it set up at the moment is i haven't told it to ignore spaces yet i've left them in because it it serves in the way of goddess at the moment is a very handy break between these various things which can then be analyzed separately this then is if you like aligning with the history of lex and regular expressions is that mike lesk put them in this front end to enable you to do reserved words variables all sorts of things like that but historically they then migrated out into things that have nothing to do with compilers many of you will have heard of unix orc and that was the great granddaddy of all sorts of things that you're more familiar with like pearl php python and so on orcs characteristic was it just did regex pattern matches then actions there was no context it was interpretive or you gave it the thing to do it comes straight back at you you didn't have to recompile it every time so here's the first beginnings of what we need for our longer example we've got the ability to take a choice of characters in any combination zero or more of to name variables fixed sets of characters of certain variety like circle line box are dealt with first so i think the thing to take away from this is that in programs like orc and lex you've got to remember that the various possibilities you give will be done in that order it's you've got to imagine that between the lines there's almost an or operation you start up at the top you say it will either match circle or it will match box or it will match line or it will match spline or it will match arrow and so it goes on and then down at the bottom the catch all is and if it doesn't match any of those let's just see if it could be a legal variable and then you just run out and i have to accept this if you put in a line of punctuation i think it would just echo it back at me and not do anything with it let's just see quote pounds dollar it just echoes back it takes no action just says i don't know what that is i think this has set us up now i hope into being able to do a longer example than this but to me at least regular expressions come into their own for this kind of thing one liners to name things you know match a pattern do that with it all over one line they're not all that well suited to doing very long range big strategic structure so many of you have said to me oh cover why regexes can't do xml properly well i might get on to that but yes you all know xml's got big tree-like structure regex says do not of themselves find it easy to do though can i ask one question if you had a real circus what would it call would it be like the great brills fordini wasn't there a circus maximus in rome there was wasn't it there we go i just think he needs a bit more of a showman's title and oh barnum and bailey is that right do you want me to try barnum and bailey