hey open source is not about you this sounds like a spicy take and i'm very excited about it the only people entitled to say how open source ought to work are the people who run projects and the scope of their entitlement extends only to their own projects fair take i think you could take exactly what he says rich here says and extend it to education as well i cannot tell you how often i will see people make these these really dumb one one-dimensional takes like education should only be free it's just like okay so you want a bunch of people who spend hundreds upon hundreds of hours to write these nice courses using specific technologies and you want them all to do it for free because you think it should be free why how about you let that person decide if they don't want it to be free it doesn't have to be free if they want it to be free then it can be free right like why are you making decisions for somebody else why does somebody else get to spend hundreds of hours and then bend to your whim right how about no i don't want to pay for stuff says the guy that probably has a three thousand dollar macbook m1 a 1700 iphone 200 pair of earbuds 300 dollar pair of facebook ray-ban glasses peg for stuff's i can't ever possibly pay for this what am i supposed to do i'm supposed to dish out 30 to improve my life yeah right yeah right yeah right so much virtue is going on right now the virtue is unstoppable all right just because someone open sources something does not imply they own the world or they owe the world a change in their status focus and effort eg from an inventor to community manager as a user of something open source you are not and thereby entitled to anything at all you are not entitled to contribute you are not entitled the two features you are not entitled to the attention of others you are not entitled to having value attached to your complaints you're not entitled tightered entitled for this explanation you know what i feel like i feel like we need teach on here hey i'm thdv i'm one of the core maintainers of neovim and i also wrote telescope i've helped a lot with neovim and various other open source projects plenty areas it's a lot of fun most of the time plentiary indeed bash hello my name is bash bunny i work at an open source company called charm which i will shell in the chat because you can even show via voice yeah so it's trump.sh and we basically build terminal tooling for developers so we build a bunch of go libraries to make your life easy if you're doing like two e's or making ssh accessible applications or doing like user like user auth management and stuff like that with ssh keys for your apps and things like that so we build a lot everything is open source and yeah so we i interact a lot with the open source community and my job is i'm basically their head of developer relations meaning that i'm helping both in maintaining the applications and with the like basically community management so i am working a lot with like all the open source people yeah okay that that is that's quite a bit so you both have had a fair share of issues and communication with the open source world you're familiar yeah yes okay awesome and then okay so who is who's rich by the way you're saying you know who rich hickey is and what's really relevant to know this yeah he created closure the programming language well uncle bob loves that one yeah that's achieved like a lot of commercial and open source success and he's also like if if you haven't watched a lot of his talks online you should watch them there's a ton on youtube and he has lots of really great ideas about programming some of them are not as like mainstream or obvious maybe as like what people might expect for example i think closure basically is like never had a breaking change more or less like think about that like from a language you're just like we just don't do those okay that's really good javascript he has a lot of really awesome thoughts about it and really interesting and pushes you to think in lots of new ways so i'm excited i haven't i haven't i had for once i haven't pre-watched the article ahead of time so i'm excited to see what rich has to say so basically rich has lots of thoughts about this and has also managed to make a very very successful project and like new bank this like the biggest bank in south america uses closure they've got like 1200 closure down or something like that right all this other so like it's very successful there's not that many people who've had like more successful projects you know in a sense yeah yeah that's great awesome and for those that are watching this on youtube bash will be joining us via radio she's calling in from the walkie-talkie and so all right i'm just gonna reread the previous sentence over you know over we're so over what was that we're so what it's my favorite it's it's my favorite all right as a user let's see hold on as a user of something open source you are not hereby entitled to anything at all you are not entire titled to contribute you are not entitled to features you are not entitled to the attention of others you are not entitled to having value attached to your complaints you are not entitled to this explanation now i think bash you're probably in a more interesting situation because charm also has a paid side with you know i assume with hosting with with various things with their ssh clients and all that and so you kind of have like almost a partially entitled complaint is that fair to make yeah i would say so like i would i would say like because charm is still kind of pre-revenue like we haven't launched anything that is paid yet but even still i i still would say that like we have a strong existing user base and because it is a company that's attached to it like there definitely is more there there is definitely yeah kind of this sense as a developer that i need to that i do owe the users something right it's not just like i'm volunteering my free time like i'm getting paid to work on these things so yeah there definitely is a bit more pressure in that regard and i would say that that kind of reflects in how we try to respond to issues and things like that i i wouldn't agree with the last sentence in this paragraph of saying you're not entitled to this explanation i definitely think that we tr like we're we always try and make sure that people are are like you know we're communicating well with them and that they feel heard it's an important part of i think community building and having people want to keep coming back to your projects because they're going to remember how you made them feel and how the prod like using the tools made them feel and i think that yeah like how you're interacting with the community is a big part of that but it can definitely be hard and especially as a company that is open source like there's things that are maybe on the roadmap or whatever that you can't share so sometimes it does mean that their questions kind of get just left up in the air because you can't share that yet you know you can't say why yeah yeah that makes sense i i don't think though like rich is saying you should like he's just saying you're not entitled to it as the person right like they you haven't entered into any arrangement or agreement or anything like with the people right who if you're like the maintainer there's like a random person and there's like yelling at you to explain why something isn't the way it is or whatever right they're not entitled to that now you it might be like effective for you to still like for the goals that you might want to have for the project to anyways respond nicely and like help them right but like the i think the point at least at the start right is about that i like like i said i don't know where exactly he's going but the being entitled to an explanation like i agree but obviously if you want of people to stay with your product and do these things you might want to like answer them nicely and do those things anyways yeah that's fair expectation of others that aren't being met those expectations are your own responsibility you are responsible for your own needs if you want things make them fair take it's a fair take in the open source world if you want things you can contribute it's not like the it's you know and if they refuse your contribution or do not like it you can always fork and do your own thing so it is i mean it is open and free for you to try to figure things out yeah i agree i would say yeah i would agree i would also say that like sometimes i mean sometimes there is a certain code standard that needs to be upheld but if anything at the very least you'd be learning something you know if they if you create an issue first then they can kind of decide like okay does this align with like what we want to be within the scope of the project and then you can p and then given that you can create a pr and ask to have it merged and then they can give you feedback on that pr and you know make sure it kind of keeps with the code standard that they currently have but in some cases like you're going to want a feature that is so niche that they don't want to maintain because every time that you add a feature it like increases the complexity exponentially it's just it's a lot more it's not just about like a one and done it's now it's available through their api and now you need to continue to make sure that works yeah yeah completely open i'm actually suffering with that with harpoon i've been wanting to rewrite it for like the last year invert the entire project because i don't want to support terminals i don't want to support all these things that people want and i realized i made a mistake fundamentally because i went like the null ls route where you are the maintainer of all things and then i i just have learned just say no to all things at this current point anyways and i'm sure tj you are smart enough to build a telescope with just more of the embedding of plugins kind of already pre-thought into it so it it just came out nicer yeah one of the things we did like at the very beginning that i did for it was like i knew there were going to be things people wanted to write things for and allow people to still like have those be discovered by users right and so writing like an extension endpoint where plugins can register themselves as like i do telescope things i was one of the one of the things that i did like at the beginning which is nice because then we can not maintain all of those because i don't want to yeah smart yeah yeah all right open source is licensing and delivering a delivery mechanism period it means you get the source for software and the right to use and modify it all social impositions associated with it including the idea of community driven development are part of a recently invented mythology with little basis in how things actually work a mythology that embodies cult like both a lack of support for diversity in the ways things can work in a pervasive sense of communal entitlement yeah i i mean like so i like this a lot i mean like i said there are ways that you might want to think about doing your project where you still are like accepting of people being annoying right and like you try and maybe educate them or do stuff like that but it's also like you only have a limited number of hours in the day you only have so many contribution time and sometimes you just have to close an issue and say like we're not going to work on this and then like that's it right or like yeah you're just going to close a pr that's done and working with tests because you don't think it's the vision that you want to do or like maybe you're like sql light and they just don't accept contributions basically from outside of their maintainers right like that's a pretty successful open source project i would say you know and not saying that though like then there's other forks of sqlite and they're going to do things differently and that's great like that's cool right but the point is i think that like you can have really successful projects that aren't doing this community driven development like idea that are still open source about people having like in in the ability to read the source to know what it is and to modify it for themselves right which is like completely i think that's a part of this part of the point of this article is like completely orthogonal right to this idea of like you have to do it for the community or something like that yeah i also think that there's a way to hear the community and translate that into what they actually want i think that a lot of times they'll ask for things and it's not what they're asking for is like kind of leading you towards what they really want but they don't really they don't know exactly what they want and so part of your job and i think part of where you can get the value out of even having developer relations on the team because that's a controversial topic in itself is where you have somebody that can translate those requirements and say okay the community here's like the trend of what we're seeing and here's what they actually need from that yeah i see rich harris did a really good job with this he talks a lot about the westfeld where he he says that what people ask for and what they need are often like actually antagonistic to each other and so he has to take all these different things people are saying okay what they're actually saying is they want this thing different i'm gonna fix this which will subsequently fix their problems or at least change the surface area of their problem into something different all right let's see if you think a cognatech i assume that's the one that's building closure is not doing anything for the community or is not listening to the community you are simply wrong you are not however entitled into it being the effort focus or response you desire we get to make our own choices as regards to our time and lives just i think every paragraph afterwards he just needs to have the giga chat like emote every time it doesn't i'm just like yeah yeah oh yeah exactly we at cognatech have to show up to work every day to make a living we get no royalties of any kind from closure we are in no way building closure for profit far fewer than one percent of closure users are our consulting or product customers and thus contributing to our livelihood hmm [music] i mean that's the pain of open source i mean try to make money off open source just in general as a it can be very emotional i think that i think that even if you are showing up and it is part of your living like people also need to understand that businesses have priorities it's just not it just doesn't make sense if they think that every single pr that they're making or every issue that they're raising is going to be like immediately at the top because it's important to them it's like it maybe if it's a bug fix or something like that that'll probably get merged maybe faster or like might get more attention because it's something that needs you know it needs to happen it's it's it's not adding any additional support like support yeah i don't know that's what you're saying we take it i think oh there's it's like some people in i can't tell if they're asking why is rich hickey complaining rich hickey isn't complaining rich hickey is stating what you should expect in return for giving nothing yeah right like he's laying down the expectations of what it's like to contribute or file issues for closure right so i it you know the title is open source isn't about you because lots of people come to a project they see it's open source say oh i'm the important one here why like so solve my problem like i see that you made this so solve my problem right so when he lists like far fewer than one percent of closure users are paying us he's just saying far fewer than one percent of you have any claim on our time right we you haven't gone into any any way that says like yeah we should do the thing that you're asking us to do right and so i like i don't read this as complaining maybe some people are reading as complain but i don't think that that's what it is at all right it's like he's just stating what should you expect from us and they're doing more than what you should expect right because they're already doing things for the community listening so anyways give me one sec sorry i don't mean to interrupt i'll be right back my dog is trapped i thought i heard a little dog woof i think this makes sense in the sense that like he's he's definitely he's he's trying to set the expectation you should have and i think that's a pretty fair thing to do because i i i mean i totally get it you're using a product something is not working out you come to file an issue because you find a bug or you find something and you i mean you feel like hey it's the onus is on them to fix it but the reality is i mean is it are you using it correctly have you gone through everything exhaustively like where does the fault actually lie and is it really their requirement to fix it i think it's often easy to come into something like that you know not intentionally or not trying to be mean but it's just like it just it's probably more normal unless if you've had the experience being on the other side yes and it i i don't think the article isn't saying we would never answer an issue like you know but it's also like maybe be nice yeah don't at me bro but we we we still we'll still answer think about not tagging every day and saying any updates or is this project dead or like yeah you know i think one thing that's really hard as well that i i've heard from other open source projects is like there's just there's also just so many contributions that you can get like especially if it's a popular project like you just can't stay on top of everything like and so it is kind of hard to balance like you know you don't want to be annoying and like pinging every day but then at the same time it's like you know sometimes they just don't see and it just hasn't gotten addressed yet which probably just means it's not high enough priority in in like what needs to get looked at all right we take some time of what we earn money that could be eg go into our retirement savings and instead use it to hire people to work on closure and the community outreach some full-time to be honest i could use that money in my retirement account having to pleaded it to make closure in the first place but i love working with the team on closure and i'm proud of the work we do alex miller is extremely attentive too and engaged with closure community he and stu holloway and i regularly meet and discuss issues alex at my direction spends the majority of his time either working on features for the community or assessing patches and bug reports i spend significant portions of my time designing these features spec tool depths error handling and more to come this is the time taken away from earning a living yeah i mean this is another good point is that some people they have to treat their open source project like a startup but the inversion is they don't have a product at the end that they're selling right like this guy is using his money to build something yeah you know and he can't necessarily work just like you tj if you want to improve neovim in unless if you're planning on having another kid you're not really going to get the time available to just simply be like i'm gonna not do work and work on an open source goodwill feel for the next month right it's very very difficult to do yeah and i think once again like this article is about setting expectations right it's not like about how to build a successful product right so this is just saying like you should recognize what it means to spend a long time on an open source project and like i'm getting paid you know getting paid way way lower than like minimum wage right for all of my any of them stuff that i've ever done which is fine like but it's just a statement of fact right i'm not complaining i chose to do that voluntarily i like working on it i'm having fun that's great and i think this next paragraph really like hits this idea and and maybe will like it's yeah it's good okay i'll read a couple paragraphs now at this point because i feel like there's not the meat was definitely prior and this is kind of more of like it doesn't feel like there's as many intense statements in one i am grateful for the contributions of the community every closure release incorporates many contributions the vast majority of the user community doesn't contribute and doesn't desire to contribute and that's fine open source is a no strings attached gift and all participants should recognize it as such yeah i feel like the point of the article nice i've i i'm fine with that take i think it's a good take yeah plus you probably wouldn't want everyone from the community contributing anyways you really just want the people highly motivated enough to do it for free as a gift as well in that align with your vision so like i just saw someone post something like when you grow a community around an open source project you can delegate all this management burden no you can't they do you can't just delegate away the vision of a project and like just say oh well this pr has tests so it's good or like it passes lint or something yeah no no no no like not even close that'd be just like you could just oh we don't need anybody with a vision at our company we just have managers [laughter] okay yeah you know that image of of javascript that's just like a pile of like organs and stuff and it's all stitched together and there's a head at the top and it's just like i'm technically functional that feels like what a community vision is for effectively any project yeah yeah we can always do more but it is serious to claim that the core team is standing in the way of meaningful contributions to closure as opportunities abound in library development outreach training tutorials documentation giving talks tool building etc and yes on patches to core did you know that most patches slash issues have poor problem statements no descriptions of the plan read my code no consideration of alternatives no tests no designs and are ill-conceived and or broken in some way community efforts to triage matter a lot in moving things forward thanks to nikola gotti and many others the time to re-examine preconceptions oh actually i do want to talk about this tj how often does that happen in bash how often does that happen for you guys where you just get like a quick code dump low expect explanation does github issues kind of what they're like formatting and question style templating does that help alleviate that problem sure yeah it happens a lot i'd say that the templating can help but like more often or like oftentimes somebody will still just like they'll still just enter in like a couple sentences in the first run and leave all of the other ones as like the default values for like the bug report or whatever or the feature request so yeah that happens a lot i would also say the yeah very i i'd say it's more rare that we get prs that include tests it helps a lot when they do include some tests even if they're just like hey this this one thing that i depend on wasn't tested so i added a test for it that's also helpful yeah we definitely get that a lot i even had i i have a specific github project specifically just for like managing like okay this needs like this needs more info this this needs to be reviewed and then of course ends up often needing more stuff on it and then this one's like actually seems good to go but like are we is it something that we'd actually want to merge or whatever it's down technically functional this is really good this is this is the mean yeah i'll also just add that like once again this is about expectations right so you submit a bad patch the expectation is maintainers will work with you to make it good that's not a good expectation the expectation should be i submitted this we'll see what happens right like that's that's the like preconception right that they're trying to like i think that he's bringing up is like hey you you submit these things then you're upset that we don't merge them well it was bad and i don't you can't expect someone to then make it good that's not a fair expectation now sometimes it happens it happened to me for any of them my first pr submitted to neovan was bad i didn't know what i was doing but you know what i was nice and i asked lots of questions that were good that i couldn't find just in the docks and i like i didn't want the dogs too i read the docs a lot and so so there's like you can encourage this reciprocal relationship with as someone who's coming to an open source project as well as someone who's maintaining one if that's what you want but that's the thing not everybody wants to do that some people just want to publish a project and like some people only want to publish like 60 done projects and leave them there forever like prime right like me and then just make solar mutex clean them up you know so it's like that's okay open source is is a free gift to everyone except for polar mutex it's a freebies it's just a bird exactly there's so much truth there that's why i've been stating lately that i do public source and not open source like when i put out my dot files i just don't accept changes because i don't want your changes in mind yeah yeah changes to your dot files that one always cracks me up like i get it for all the other ones but like actually brian i think your startup time could probably be improved by they're like you know you're really missing out on this prompt i currently have 17 pull requests in my dot files oh nice i'm gonna hilarious i'm not like dissing on anything you just got 45. i just want you know like it's just it's just mine you know like i really like this idea of public source like i'm fine letting you see what i'm doing right yeah totally okay with that but i really don't want to build a community around my dot files they're just mine they're personal for a reason are they incomplete in some areas do some things make me upset absolutely but you know like if you were to make a project like closure you have to necessarily do a community it's a little bit different right it's a touch different so i can see i can see these things all right let's i have a question oh yeah yeah yeah okay so i think i think part of the reason why a lot of people expect this is that they're hoping that by creating a pr they can get some valuable feedback from more experienced developers than they are like they they want that feedback so one tip that i would give and then i have a question for you guys one tip that i would give is try and do a code review on your own pr so like bring out the books bring out the docs bring out everything and try and like you know be really nitpicky about things that you could do better okay is this state like could i write the statement better is this is this idiomatic like whatever so try and do your own code review and then for you guys if you don't think that it's an effective way to get feedback from more experienced developers by creating a pr on some random open source project how would you go about getting feedback on your code when you're maybe out of school or self-teaching or whatever right i i do have some thoughts on this one so i i love that idea right it sounds really good on paper and i think it is it does sound really really nice one obviously make that communication like if you're gonna go about that route you should probably do some sort of level of communication right when you file an issue you can say hey i'd love to tackle this would you mind guiding me if i make a pr if i do these things right you make your expectations met up front it'd give people that way when you do make the pr they're like oh yeah i did say i'd help them out here let me you know and then all sudden boom it looks a little bit nicer so i'm totally fine with that approach the problem is is that getting someone else to guide you either technically or in soft skills or anything like that you're really asking for a coach or a mentor and that is a that's a hard burden to put on any individual and so it really has to be pretty scoped and very specific and i would honestly go for a little bit of advice anytime i attempt to make a pr on any open source thing i first say hey do you mind if i tackle this problem yeah and just give them the give them the okay yeah because if they know that i'm coming in with no context it means that whatever i submit is going to be bad it's just like it's by the very nature of it it's not gonna be good i have no context on your project i don't know what's good or bad right now i just jumped onto a new project at work and nobody makes prs but me because like i just have no contacts it's been going on for months and so i just i just miss a ton of stuff so i'm like okay why don't we do this oh okay yeah yeah okay okay so i have to gain it kind of like in the rear view mirror and i think that that's totally okay yeah i would say very similar lines to like what prime has said one you want to find a project that has some guidelines for contributing because that means they actually want contributors right so like that you can you can look at the project do they have a contributing dot md or do they have like some getting started on contributing thing on their website like that's them saying hey like my expectation is that i would like someone to come work on this with us and then you say cool that's also the thing i'm looking for right yeah so i think so i think that's sort of like stage one and stage two is you should actually read those so like all the way top to bottom maybe more than one left or right usually rtl yeah language yeah then that's also cool then you should do it rtl but you should actually like read the whole thing and i cannot impress upon people how much of a difference in response you will get if it's clear when you say i tried this and this from the contributing thing and it didn't work for me right yes as opposed to issue broken fix thing or something like this right so i think like those first two steps are really important and then if you're it's your first time contributing or whatever you probably want to like especially if you're very new you should just start off with i'm very new yeah like set their expectations so they know yeah that was me i just said i'm new at this i don't understand git i don't know what's happening you know and then they just like but i was upfront about it and super nice and trying to like i was just like a dumb college kid with i didn't even know what open source was i was my first prior for any of them and stuff like i literally knew so little but if you're just nice and you read you're way way way more likely to get some like actually good feedback and then the last piece of advice is after you've done those things then you should also look at the responses that people write you and take them in the best way possible right yes so i we could go and link like i could probably go find my original pr that i did and like we had this guy who was my favorite person when he reviewed my prs he was like this really straight laced russian dude who never said anything nice like he wasn't me i love that right but he was just like this needs to get fixed and this needs to fix this right this kind of thing right and like i loved when he reviewed my prs because he was way better at coding than me yeah and so instead of saying man he really never says like compliments to me about this right he just says the things that i need to fix so that we can merge i just said sweet here's a bunch of ways that i can get better that's what i want it yeah right so you have to be able to try and like look at the feedback wherever possible assuming you're doing all these other things and take it in the best way that you can as opposed to saying oh this like the expectation is that i want them to be really nice to me and take extra time of their day to point out like nice things or something i don't know like maybe that's what you really want but then that's not about getting mentored that's about something else right and so then you should think about what you're trying to do so that would be sort of my like guideline for how to do that yeah i agree with that i also really like when someone is really nitpicky and when they are like yeah they just like just tell me what's wrong it's okay no news is good news in my books if they're saying you know they didn't tell me it was wrong so it must be right yeah or like okay one thing that while you guys were talking came to mind as well if you're looking for mentorship on maybe an open source project or something like that or just in general if there's something maybe if there's a project that you're really interested in ideally a smaller one so that it's you know a little more contained a little less busy all the time is that if there's one activity that they hate doing and you're like hey listen i'm really looking to learn i'll do this for you i'll take on like maybe if it's documentation or it's whatever like just waste even as a newbie you are the best at writing i think documentation and making the like making the code comments or whatever like the godoc more readable making your your api easier to understand whatever you're a great person for that as a noob and you can kind of exchange the make yeah make an offering for ways that you can add value with your current skill set and ways that you're hoping to kind of get back from them which is improving your code generally that's fair trade yeah i could see a lot of people doing that and plus they also have discords things you can join where you can start chatting with some of the more regulars and thus you'll also just siphon off a bunch of of things you can follow pr's there's there's yeah there's definitely a lot of things that you can also try to gain from it right right like if you look at a pr then someone says hey you need to fix this you could try to figure out why they said that and then what the solution was and you can follow along too there's a lot of ways to even you know in some sense i forget i don't have the right english term for whatever reason but get it through osmosis there you go like kind of like osmosis that might be 100 that's yeah potentially don't underestimate immersion yeah right like if you can simulate immersion you don't necessarily need a one a one-on-one mentor but just like if there's someone that's teaching these concepts like just to try and absorb all that all right let me finish off i'm just wondering yeah before we finish it off like prime if we asked you to summarize everything we said would you be able to or would you only say true true true root back because i feel like i could tell i could tell you were like you were getting intruded by chat right now i'm getting rooted super hard right now but i could i could do it look get the look at this you guys see what i have to deal with i know but this has actually been very very good okay jokes aside this has been very good and i think a lot of people could benefit from this and even i mean just it's a good thing to remind yourself to do right i think sometimes it's easy to kind of run in a little too quick take a step back really kind of formulate even all you know all of your expectations and everything and then go forward all right let me read this we'll finish this off the time to re-examine preconceptions about open source is right now moral erosion amongst creators is a real thing or morale erosion amongst creators is a real thing generates yeah that too that too yeah have you seen prime's twitch check degeneracy at its finest your preconceptions on how you act upon let's see your preconceptions and how you act upon them are your responsibility and yours alone i'm not going to answer for them or to them if the way closure works isn't for you a process says which produced closure in the first place paradoxically so be it i'm sure you know better about the one true way to write software but kindly don't burn the community down on your way out with self-serving proclamations yes everyone is entitled to an opinion but tragedy of the commons and all that i encourage everyone gnashing their teeth with negativity at what they think they can't instead pick something positive to say they can do oh sorry let me reread that i've messed that one up i encourage everyone now you almost made it i know i'm so close i encourage everyone gnashing their teeth with negativity at what they think they can't do instead pick something positive they can do and do it beautiful line right there rich yeah nice this is i mean yeah this is just you just do this on twitter your life will become a lot better if you just do that or just don't go on twitter yeah or just don't go on twitter that's also will dramatically improve your life yeah let's see rich all right p.s my partners and co-workers at cognatech were not consulted regarding this message i am certain they would have dissuaded me these opinions are mine alone awesome pss or post post scriptum i think the vast majority of people in the closure community are wonderful and positive if you don't recognize yourself in the message above it's not for slash about you nice this is great i think you know even no matter how you know it's kind of like i know i bring this analogy up a lot because i feel like it's one of the world's greatest life lessons but golf is extremely technically hard and it's a it's a skill in which you forget to do the fundamental thing over and over again you should be told and you should tell yourself every day to keep your head steady and down right don't look at the ball i know you want to and after you get really good at it in one week you'll be looking at the ball before you're even swinging and throwing everything else off and so it's like there's like a thousand of these little rules and no matter how many times i'll do open source this is something that's even good for me for tj i think for anyone just to reread and just you know reorient yourself and go okay yeah i should do all these things before i start making these assumptions i should make all these decisions earlier on if i want mentorship i should be going about it in a way that's healthy both for the mentor and for me the mentee you know personal thought on this one another life lesson from golf that i've learned is it's similar to learning where like the more relaxed you are the more effective you are because i noticed like with golfing if you are too tense like you're not you can't hit the ball but if you're as soon as you're like nice and relaxed it's like you get the perfect stroke it's it's i know it's you know for those that have never had the privilege i grew up super poor so all i ever wanted to do i literally would sit in my backyard with a baseball bat and tennis balls and i'd play golf and set up my own thing i always wanted to play golf as a kid that's so good never got the chance until 35 years old is when i did my first real golfing and so absolutely love it and the amount of different life things i can associate with it is just out out of this world it's just weird how how much it's it's literally it's the it's the perfect representation of how flawed we are as people because it's a it's a it's a sport of extreme precision and i am extremely imprecise and i forget that i am every single day my favorite one is like so kayleen my wife like she you wouldn't understand chat yeah you win but like on discord my wife a real one like she didn't grow up golfing or anything right but like we've gone you know a decent amount of time since we've been married chat oh you wouldn't understand and so the like the funny thing i notice all the time for golf it like applies to this as well is like i tell her a bunch of things that i know are correct about golf and then i don't do them you know like oh you don't swing too hard you don't need to crush it and so when i'm walking up and i'm like oh i'm gonna i'm gonna show her how cool i am watch me just absolutely right like slice into the water blah blah you know right that's like exactly the same kind of situation here where you're thinking oh i i know open source expectations i don't need to worry about that and then you go into a project like why doesn't this work hey is that i'm gonna fix my issue what is zero five coming out i'm coming now hey if you don't swing toward it's actually better facts of life oh man all right hey thanks for joining us everybody bash where can people find you at well i'm i'm co-working right now so i guess here you can go over duration yeah you can actually just leave this no i'm just kidding stay with prime hang out with prime but you can find me i don't know i guess here twitter youtube whatever all right search for bash bunny and you'll find you'll find me there you go there's at least the link minimally into a twitch i can't shout you out for another 21 minutes and 59 seconds so i can't do that i would shout out teach but well i mean i'm a sus user right now he's been yelling about himself for the last year and a half so i think we i'm a sus user yeah like look at me hello the plus side though like i said earlier is like now it highlights every time like if i was gonna talk about a stream like if i was a streamer yeah it would show it like put the box around it if i were to type something you know it's like if i were to type about a stream it's gonna put a whole box around it in prime chat it highlights it that's really good look at that everybody can make sure they see it so when i have my chat on screen it's very obvious for all people the very obvious what i type all right hey also bash if you you missed it you should watch this clip that just showed up in prime chat as well oh that's all if you're on youtube sucks for you you should have been on twitch