hello and welcome to another coding adventure some time ago i made a small game we could enter a set of simple commands to guide this little mars rover through the treacherous terrain i quite like this way of interacting with the game world but i think would be far more interesting if you could create more complex commands like conditions and loops essentially an in-game programming language so today's episode is about my attempt to code a coding game starting with a little research i learned that by doing something like what you see on screen you can actually compile c-sharp code at runtime so inside a game i could now write a little script to generate a random color for this cube or move it around or really do anything at all for this to work though you need to have the monitor c shop compiler installed on your system and i really dislike forcing people to download extra stuff to run again if i done just a little more research however i might have discovered this project on github which through some technical wizardry allows you to include the compiler inside the project but alas i was already dreaming up my own terrible solution the idea was to define my own super simple language that would then sort of run on top of c sharp here you can see an example of it in action with a little custom code editor and even syntax highlighting it's extremely crude and slow but it was kind of fun to create and for anyone who cares he has vaguely hot wax the interpreter which is just a class written in c shaft has a dictionary with strings as keys and fruits as values this is to keep track of variables which in my language are conveniently always numbers so as it steps through each line of the players code root it checks for example if there's a single equal sun which signals an assignment operation then the value on the right gets assigned to the variable name on the left in the dictionary i also have to write a little expression evaluator to deal with mathematical operations making sure bot masses respected all that fun stuff i also added support for some simple math functions like square root + sign and sign and so on and even some syntactic sugar like x+ equals five or y- - which just get converted internally to the more mundane x equals x plus 5 and y equals y minus 1 then if statements work quite simply by skipping over the lines between the braces if the expression is false and loops just repeat the lines between the braces however many times so now that the player could program simple commands i started work on a little prototype here he plays this heroic blue cube who desperately needs to get over to the other side somewhat inconveniently there's this turret which blows you to pieces so you can only hack into its aiming system and modify the code to just aim in a single spot but now there's another problem the nasty red cubes so you hack in once again and on the right you can see the variables available to the aiming system there's the position of the intruder which is of course yourself and then the number of guards and their positions to solve this problem that you'll need to loop over all of the guards and calculate how far away they each are you then keep track of the closest one so that you can set the turret to aim at him with that done you can hardest run around while the turret picks off the guards one by one and then cilantro crossed to the other side now since the programming language is so crude i thought it'd make sense if the game took place on some really old computer i found a cool screen effect on shader toy which i'll link in the description and that effect is built up from scan lines even yet some sort of convergence error and finally some lovely curvature i then experimented with some different little tasks like predicting the path of a bouncing ball in order to win a game of pong or calculating at what women to shoot in order to hit an accelerating target i was struggling though to come up with challenges that were fun and felt satisfying to solve and after a while i started to lose my enthusiasm for the project ultimately i decided to just tell that for now but it's definitely something that i'd like to return to one day when i'm feeling a little more inspired i hope that you enjoyed this coding adventure despite my failure to create a game out of it like hedlund but in any case until next time cheers [music]