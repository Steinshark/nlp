all right welcome back guys today i want to show you how to use leap party and how you're going to start developing for elite party working at our local dev our local development server set up so you can start making changes making prs and affecting real users so first off here's the elite party chrome extension on the web on the chrome store i've already got it installed you can see here it is sorry i've got a lot of chrome extensions and so this is the way it works you know i just click start party i can click this at any time this info button that kind of tells me how it works there's this sidebar that pops up this sidebar gives you information about what's going on so you can see it gives it generates random name for you i could share this link with a friend that friend will be able to join this room with me i can close and open the toggle bar if i click ready up you'll see that pops up here in this information about all the users i could unready and ready up again you can see it kind of clicks on and off then if i click start you know the room has started and these are the users that have submitted their answers which is of course none i have a solution lined up if i click submit you'll see the game is over because everyone in the room which was just me submitted and you'll see the details for the submission and you can actually click on it and see the solution also if we go back up here you'll get a ranking of everybody that was in the game and if you click on this you can see a breakdown of the points that they got now you want lower points and you get dinged for things like your runtime your memory usage coding time this viewed code is if you remember i showed you you can look at other people's code after they they submit if you haven't submitted yet and you look at someone's code you get dinged for that so you know you can still toggle you can leave the game and and that's about it that's what we have for the chrome extension one other cool thing is if you're not on leap code you can click random problem it'll bring you to a random problem and that's pretty much the entire elite party extension as it stands right now we don't have we haven't had enough time to make new features that we want to do so that's kind of why we're making these videos to help you help us to create new features so that we can reach more people one thing i want to show you guys is if you go to metrics.leapparty.com you're going to see a bunch of metrics and this user stickiness is how oft if a user comes and tries us once will they come back and try us again so we it's pretty low right now but it used to be five percent we've we've gotten it up from five percent and now it's 11 which is good these submissions today were actually just me playing around we've got 175 users signups this submissions is broken here i've already created a problem for it there's gonna be i need to do some investigations to see why most of the rooms are still open i also think that this is not a great measure but here's one thing you'll see is most of the rooms only ever have one user so i think people install this they try it out without any friends and think oh i'll try this later with friends and put it away never use it again another thing is these i think are supposed to say zero and they say one so we'll have to fix that and i'm not sure that data is populating here correctly because it implies that only two problems have ever been completed and we know that's not true seeing as 101 unique problems have been finished on this platform so anyway i'm just kind of giving you an overview of the metrics board all right so let's get this kind of set up the local development version so let me remove this extension and let's get into it so first off let's get the back end up and running so go here to the delete party backend repository there's some steps to set it up first one is of course grab the clone clone this so gets get clone and then you're going to just paste in what you copied there if you're on windows make sure that you have installed git and i think it just comes for free with mac but i'm not 100 sure okay so since i've already done that i'm just going to go cd into it it says now we got to set up the database because we have this won't run it work if we just make run because we haven't set up the database so let's do that first things first go ahead install postgresql for whatever client you have i doubt you've got solaris but you could have downloaded that if you wanted to and then you're just going to create a new database now this this i have some local issue with with this it hasn't worked correctly for me so if i go into psql and i list all of my databases you'll see my elite party one is there it doesn't quite work when i try to connect to it and it might not work for you either is something i should mention something we talk about here this connects file this connects file is kind of what we the the actual data for the i guess we'd call it metadata but the connection data for the database so the backend connects to the database right and it has stuff like the username the password if you create database lead party you should be able to work for you but if it wasn't working for you like it doesn't work for me then what you do is just put your username in here which for me is jason goodison and you can find that out by who am i will tell you so psql will create a database with your username and for some reason this created one wasn't working for me you know i'll leave it as elite party for now and i'll show you how it wasn't working for me and then if you have the same error just change it to your username and the secrets file okay module.exports and we're going to create the secrets file in the config folder so in the config folder config secrets.js here i've already created it and you just go ahead and paste that in there now let's try to make run okay so if you get this air roll leak party does not exist just go ahead and type in your username here and there you go things are working it's set up every time you make changes to this backend it will automatically reload so even actually if i change this back to elite party and just saves the file it would break it right and i could just change it right back and i don't have to restart the server it does it automatically okay now we just need to get the front end working oh and and you're gonna have to do an npm install too i've already done the npm install but npm install will install all the packages make sure you do that before you do run make run all right cool so that works now for the front end you go ahead and clone the exact same way let me make a new terminal dev documents dev the party front end i've already cloned it here it is here's the front end go ahead and create an mv.js in the root folder this mjs tells the extension what back end it's hitting so the end point which back end testing equals true is a flag that we created that lets you make multiple people on one machine so i could make one room and connect in you know three or four different browser tabs if this testing equals true is turned on if that's turned off it's only one user per machine which would make sense intuitively but for testing it's not so great so just copy and paste these into the m.js and that will set up that's exactly what you need for the front end now also i should mention this port 4001 if you change the port on the back end you'll have to update the port here too but since we haven't done that and you probably won't do that this is good as is then what we want to do is go to chrome extensions chrome colon slash extensions make sure this developer mode is turned on load unpacked all right we've loaded it go and go ahead find any leak code problem i'm going to refresh the page actually i'll go to the inspect tab also if you see any errors in the expect the sorry if you see any errors in the inspect tab about trying to connect to local hosts and stuff that's probably red flag that your development backend is not working but for us i like to pin it so that it's easy to find let's go ahead and see if that works start party and there you go let's find that terminal the terminal is showing some logging there's a new user it's creating a new user it's giving this user id to our chrome extension and it's making a room for that user cool okay so i want to make my first feature for the delete code front end i've found a nice cool little feature to implement if i do start party and then ready up you'll see that this tab here this tab kind of explains everything that's going on in the the leak code party if i click unready it'll pop up as unready ready if i click start notice i didn't get any printing but we like to print everything there just to kind of inform the user what's going on in the room so how do we make sure that that's done well let's go to our front end you'll notice that we have this we're talking between the front end and the back end with socket i o so socket i o is a web socket between the server and the client think of a web socket as almost like a pipe and you can push things through the pipe to the other person and the other person just listens so the the client is listening to one side of the pipe the server is listening to the other side of the pipe and when they need to push information to each other they just throw something down the pipe we define the the you know variables that we're throwing down the pipe we're defining these message types so this one is a room closing message this one is a user left message this is a user ready up message and so that's kind of just giving you know state about what happened on the front end or the back end so the front end will say hey user submitted when you click the submit button now this listener here room started message this is what the server sends to the client when the room started and that's why when the room started you get all of this stuff updating you know begin coding it starts a timer all that kind of stuff is the server tells the client hey the room started so if we go to this handle room started function it starts the room and then it sends message to pop-up now i'm just going to explain really quickly how this works when you're developing a chrome extension you have content scripts and background scripts and the pop-up now this is the pop-up here this thing that i'm i'm kind of highlighting pau there's a pop-up javascript file there's a pop-up html all of the pop-up stuff is contained within this pop-up it even has its own console log so the content script kind of just runs in the background all the time the background script would too and the content script is responsible it's it's run in the regular browser window it's responsible for creating this sidebar now when they need to talk to each other when the content script talks to the pop-up script or the pop-up script talks to the content script they have to use the chrome api so we've wrapped the chrome api in this send message to pop-up function and on the pop-up side it would be send message to content script it's just a really easy way for them to talk again it's kind of similar idea to that websocket thing we talked about but since it's not going it's not going over any network or anything it's just these two scripts talking to each other so this send message to pop-up is good is what's actually going to you know change this to begin coding and put that timer on and say who's submitted or who hasn't submitted and you'll notice here in the game over one which we saw earlier the sidebar said game over everyone submitted so it must be that we just forgot to enqueue another sidebar event now this sidebar i should also also mention so i know this is a lot of information this is a lot of our code and once you're in it you'll start to really understand it i'm just trying to really go over the basics of it here so this sidebar all of the code for it is in this class sidebar sidebar.js we have an eq function and this enqueue function basically just schedules something to be shown on the sidebar you can schedule any message you want and you can create your own type basically so there's a user submitted type and this one gives all that additional information runtime language there is an error type which changes the color to red so you know you could say error user i don't know not submitted or something and you could put that in bold red so the user it really pops out to the user the default is just these default values here which is white as you can see right there now the enqueue event all it does like i said is it encues a new message so let's say hey youtube the room started and we we tend to use type info for just those basic events so there's info events there's user submitted events there's error events remember so info is just a regular event happened we want to run this now so we have to go into our chrome extension and click update that's going to update the chrome extension then we have to refresh the page start party ready up and now if i click start we should see that message hey youtube the room started there we go so now we've actually created a feature what do we do next we should get status we see the the thing file we changed here so a git diff will tell us what lines we've changed that's the only line we've changed so get status then branch you want to look at the branch so this branch is master you don't push directly to master you actually push to a side branch and then it's merged into master and the reason you do that is so that other people can look at the code before it goes into master and master is just the main code branch so git checkout dash b updating sidebar on room started i know it's a very long descriptive name get status get add git commit dash m updating on room started i'm gonna end up deleting this anyway because i don't want it to say hey youtube in it but for now whatever we'll commit it let's check one last time but we're on the right branch get status we've got all the right stuff get push this is how you create a new branch on github you have to run that so here i'll come to this is the back end i'll come to the front end updating sidebar and room started has recent pushes would you like to make a pull request so you make a pull request that's fine updating on room started it shows you the differences that you've made and then you just go ahead and say create pull request and see how it's merging into master wants to commit into master from this branch that we've made and that's about it then what'll happen is javin or me will come along and we'll leave comments on it well like for example i'll come here and say remove thing i'll try to remove my face here remove thing about youtube start a review you know and then i'll i'll leave the review request changes oh well i can't do it on my own i guess that makes sense so what will happen is then you'll come back you'll look at it you'll say okay i'll make the necessary changes you make those changes then you can just do this thing squash and merge and that will put it into the master branch and then the next release we do will have your code in it so it's really that simple there's not much to it and i really hope that you guys create some branches and and have some fun with this we've got this issues tab here which has some some bugs that we've noticed most of them are about the metrics page i showed you earlier and i really hope that you guys learned something here and if you guys have any more questions about how to get this set up if it's not working for you please let me know i'll create another video and that's it for today so thank you guys so much please get this cracking on your machines and i want to see your pull requests