in my adult life there's only been two revolutionary technologies in i.t one of those is the web the other revolutionary technology are distributed ledgers what we commonly call blockchain why i think that's revolutionary is that the distributed ledger technology of the blockchain technology allows us to share data in a tamper-proof way so the data can be shared in a way that we can guarantee that it won't be altered won't be altered by the sender of the data it won't be altered by an intermediary and it won't be altered by the recipient and this turns out to be really important in lots and lots of applications most people will have seen something in the title here relating to blockchain and straight away they jump to the conclusion that we're talking cryptocurrency is that the case not necessarily so so the blockchain the first blockchain that was developed was for bitcoin some of the other videos give you a good technical explanation of how it works what's interesting to me is that the technology was novel but its components were not novel the components were things that already existed in different parts of computer science and what was novel was the particular way they were put together the particular engineering it turns out there are lots of other applications besides cryptocurrencies i think the first ones that people realized were also to do with currencies foreign exchange trading i helped myself and some students helped a major global bank develop a prototype system for foreign exchange trading internally within the bank and that was so to see if they could use blockchain platform internal blockchain platform to avoid having to use swift transactions people saw those applications they then thought well maybe we can store other information or we can trade we can use this platform for transactions on other things virtual assets or physical assets it turns out if you're worried about tamper-proof data information that can't alter then it turns out another whole class of applications are to do with promises how do you store a promise in a way that it can't be altered that the person who made the promise can't deny later or repudiate later that they made the promise that if there's a counter promise or a reward for that promise that can't be repudiated where where do we find applications of promises in the business world insurance insurance is just a simple well usually not simple a complicated combination of promises i promise to pay a premium to the insurance company every month and the insurance company in return promises to pay me a large sum of money if my house burns down and under some under some agreement about what what the conditions are so we've made some interlocking promises how can i be sure they will follow through particularly how can i be sure if the insurance company goes broke and the policy gets bought by another firm or what happens in the longer term conceptually there's no difference between storing a promise on some data platform between storing any information so we get applications that involve for example the french ministry of education has an application where it keeps a record at every degree issued by a higher education institution in france so that employers can check when an applicant says i've got a degree from the subon the employers can check whether they actually do have a degree and when it was awarded and and so on and that's data that is not going to be it's not transactions it's just data that's going to be stored and stored one hopes permanently so there's a lot of publicity well there's also the marketing side of this right which is you know and we've seen xkcd comics about this you know the idea of okay we've got this new idea and what's great about it is got a blockchain and that's just the marketing department for people with that view in mind there's lots of there's lots of data there's lots of grist for the mill if you like so the example of the long island iced tea company might come to mind that was a company in long island that made fruit juices and beverages and some years ago they they've i think they're more than a century old this company some years ago their share price was languishing and they had the inspired idea to change the name of the company from the long island iced tea company to the long island ice tea and blockchain company and suddenly their share price went through the roof why did that happen it partly happened because there's lots of algorithmic trading there's trading by computer programs and those programs have been coded to look for certain keywords blockchain being a hot topic that was one of the key words so people programs tried to buy shares in this and the share price went up to my knowledge they still haven't done anything in blockchain i might be wrong but they they share price rows without them having to do anything in blockchain just by the change of name and a cynical person could easily think that that's that's that's this is all hype and there are lots of there's lots of scams there's lots of fraudulent activity in this whole space there's also lots of genuine business development people say why go to all this trouble to have complicated technologies like distributed ledgers and from a technical perspective many of the criticisms are valid so if you were just looking at technical perspective you might easily say we won't go for this complicated newfangled distributed ledges especially given all the height we'll get we'll just go for a centralized database and we'll put a dedicated team in charge of that there are two reasons why companies don't do that and the reasons are not technical the reasons one is legal and regulatory the other is commercial the legal and regulatory reason is that most western countries most countries in fact now have laws in place that prohibit what's called anti-trust behavior laws that encourage competition between companies one consequence of those laws and regulations is that companies generally have to be careful about what data they share with competitors i have seen blockchain projects where even to have the first meeting of companies who are in one industry for example in the oil industry might say we have this business process that involves all of us we've got oil companies we've got commodities traders we've got banks we've got insurance companies so let's have a meeting let's sit down together before they can have a meeting they have to check with their lawyers because having the meeting might be might be a restraint of trade might be seen as an anti-trust behavior and in my experience generally what happens is they before they have that first meeting companies have to sit down and agree a statement among themselves with their lawyers about what the meeting is for and what can be said and what can't be said and i've heard this quite often such a statement is read out at the beginning of the meetings and it says we're here to discuss the sharing of data in a technical platform we're not here to discuss pricing and we're not here to discuss strategy and if anyone does they'll be expelled from the meeting and that sounds onerous but it's required so if you're looking at an architecture for sharing data across some industry no single company in this group of companies can be the company that holds the data either they all have the same data and they share it and we have to do that in such a way that they don't see their competitors information or we give it to a third party so we could give it to an accounting firm or a law firm or a tech firm to run the platform and administer it centrally so we don't need this distributed ledger nonsense giving it to a third party leads you to the second reason which is a commercial reason why companies have opted for distributed ledger platforms having this pool of data under your control means you can make money from it if a group of companies have given the task of pooling that data to an accounting firm then who's going to get the benefit from monetizing it and the group of companies would say well we don't want that accounting firm to get the benefit we want ourselves to get the benefit and that will be most easily done if we are the owners if we are the ones who run and run this database that leads to lots of technical challenges these these technologies are still relatively new still relatively immature we still don't have good languages and tools that that will come and we'll look back in 10 20 years time we look back at how hard it was to develop distributed ledgers technically how hard it was to design how few people there are there were at this time who have the skills and good news for developers bad news for anyone else is how high the salaries are still for developers of blockchain platforms those salaries will come down as more people are are skilled but that's still there's still a technical challenge in designing them in in making the work when the tools the software engineering tools are still to be developed another big challenge is how you manage data access so we have a platform that might be shared between 20 companies they might do transactions two companies or three companies out of the 20 you might be doing transactions the oil company might trade with another oil company or make a futures contract with another company and for this oil that's going to be delivered in rotterdam in three months time and one of those companies the receiving company wants to commission an inspection company to go and inspect their oil to make sure it's the right color quality before it's unloaded that receiving company wants to give permission to the inspection company to have some information about where the deal is going to happen how much oil is involved what the required level of quality is supposed to be etc they don't want to give permission for all the data they just want to give permission for some of the data they want the permission to be just for a specific purpose for usually for a specific period of time they want it to lapse after that period of time they might want the inspection company to have the power to give further rights to someone else to a subcontractor or to an employee for example so we have all sorts of giving of permissions to access particular things which is much more dynamic than and much more decentralized than is traditional in the part of computer scientists it's compared to computer science that looks at access control so perhaps the most common method of access control in use in it commerciality is what's called role-based access control so we give people access to data or access to systems based on their role and the general assumption made with the deployment of these systems is that roles don't change very often but in this dynamic agile world of blockchain distributed ledgers in commercial world we want these this needs to be a lot more dynamic it needs to be decentralized so we don't have a single party in charge we have all the nodes having equal abilities to do things they need to be able to allocate rights to data that those who receive the rights can then allocate again under some constraints they need the rights need to be revocable there needs to be a lot more ease and a lot more user friendliness about allocating and revoking rights and controlling rights and i think the theory of access control is still catching up with the practice of of this in distributed ledger world the big it companies are developing methods that work with regard to dynamic delay dynamic delegatable revocable decentralized access control but i don't think we have that yet in the theories of access control i'm happy to be corrected if any any of the readers any of the viewers i don't want to talk about this there you go so here we have different quadrupeds today we're gonna see the spot one yeah just to give an idea of where we traveled this is all the way from where we were before here with the round table