ah let's learn how to codee today where do i start what the  okay so you want to learn how to code there's tons of resources and you somehow ended up here i am sorry to hear that but on a serious note learning to code has been one of the best skills i've ever learned you don't have to be super smart to learn it and there's tons of free resources on the internet the only thing is you have to work really hard but the problem with a lot of people who try to learn the code is they don't know what to work hard on so i'm going to teach you the areas that you should be working hard on so you don't waste time quick disclaimer here i'm not here to teach you how to get a job in 3 to 6 months because it's not that realistic i'll be honest is it possible yes have people done it yes and people have also won the lottery that does not mean it's going to happen to everybody i'm just here to give you everything you need to get started and i hope you understand that so with that out of the way let's get started number one learn how to learn now i know what you're thinking sloth i'm here to learn how to code what do you mean learn how to learn all right all right i hear you but this is really important i swear this will help a lot learning to code is not about programming languages it's about developing a mindset for problem solving and continuous learning this is what separates the beginners from the professionals the professionals know how to solve their own problems and learn new concepts pretty quickly so it's crucial that you understand how to learn but sloth is it really that important especially for coding yes it is let me explain why number one rapidly changing technology the tech world is always evolving new languages tools frameworks they're popping up all the time if you know how to learn effectively you can keep up with these changes without getting overwhelmed two problem solving skills coding is basically problem solving each line of code is a solution to a mini puzzle learning how to learn enhances your ability to break down complex problems into manageable pieces and find innovative solutions three adaptability this skill is gold in the coding world when you're comfortable with learning you adapt better to new challenges you're more willing to step out of your comfort zone and tackle unfamiliar tasks four independent learning you won't always always have someone to hold your hand through every coding challenge being a self-sufficient learner empowers you to find solutions on your own making you a more competent and confident coder five efficient learning time is precious right you want to learn to code as fast as possible well by learning how to learn you can tailor your coding education to be more effective where instead of taking 5 hours learning a concept you'd only need to spend an hour here's some examples to give you an idea you can use diagrams to plan a simple coding project then jump in and start building it and finally ask people for tips on how to improve it the key is to discover what works best for you and use it to make your learning as smooth and enjoyable as possible remember there's no one size fits-all in learning especially in something as diverse as coding while i can't directly help you find your unique learning style i can definitely guide you with general tips throughout the video to speed up your progress in coding and now for the big question where do i start coding is a vast jungle but don't worry i'll give you a map to guide you on the right path but i need to know a few things from you first what do you want to make why do you want to code do you want a big tech job do you have an app idea want to make a video game okay that might have been too fast let's slow it down and start with two questions what do you want to make your answer to this question will guide your learning path to make sure you're not learning something you're not supposed to and end up wasting time it'll decide the resources you choose and the projects you'll embark on remember there's no right or wrong answer here it's all about what excites you and what keeps you up at night thinking i can't wait to create that now for the second question why do you want to code are you looking for a career in programming do you want to bring a unique app idea to life or are you just coding for fun this is what's going to motivate you when you eventually hit that bug at 2 a.m. and can't figure out why your code isn't working understanding your why also helps in choosing the right resources if you're career focus you might lean towards areas that are easier to get a job in if it's a hobby you have more freedom to explore certain areas now that we've got your what and why let's talk about the how three what programming language should i learn the programming language you should learn all depends on your answer for those two questions there's no such thing as a best language but there does exist popular languages let me explain what what you should research based on your interest if you want to build websites or web applications start with html css and javascript these are the main technologies of the web html structures your content css styles it and javascript adds interactivity as you advance consider learning frameworks like react view spel or angular for more dynamic and responsive applications from there you can start learning some back end if you want to build mobile apps your path depends on the platform for ios apps learn swift it's apple modern programming language for ios for android start with java or cotlin cotlin is the newer language and it offers more modern features and is now preferred by google for android development if you'd like to do both consider learning react native or flutter for those of you who want to build video games check out some video game engines like unity gdau and unreal engine unity and gdau uses c and gdau has its own language while unreal engine primarily uses c++ and for those of you who want to take over the world with ai and machine learning python is your starting point this area is not just about coding be prepared to learn a lot about math especially statistics calculus and algebra python is the most common language in this field for its simplicity and the powerful libraries like tensorflow pytorch psychic learn and a lot of other libraries that support machine learning operations in each of these paths your foundation is crucial once you grasp the basics you can delve into more complex projects and refine your skills in your chosen area of interest there's a lot more areas when it comes to coding so i strongly suggest you check out this video here if you want a highlevel road map of every main area of programming to get you started now that you have an idea of what programming language to learn we can move on four how to start learning to code so far we've discussed picking the right programming language and understanding your why but what about the actual learning process you know how to code first off let's talk about resources there's a wealth of information out there from online courses youtube videos books tutorials and coding communities there's websites like code academy free code cam the odin project and corsera they offer for structure courses that are great for beginners youtube definitely has its fair share of tutorials but also don't overlook the power of books they often go deeper into concepts than many online resources however there's a common pitfall that almost every beginner gets stuck in that you should watch out for tutorial help a cycle of constantly consuming programming tutorials without being able to apply the knowledge in the real world and build real apps tutorial hell is one of the worst things to ever get stuck in you feel like you're not growing or improving where if you stay there you'll want to quit because you feel like this is not for you i was stuck at tutorial hell at one point and it was one of the worst feelings ever i really wanted to quit programming because i felt like this was not for me at all i kept watching tutorial after tutorial and i just felt like i never got better for some reason it's easy to get stuck in a loop of constantly watching tutorials and courses without really applying what you've learned while these resources build your foundation they don't always push you to the next level of solving real world world problems this is where the learning resources you pick make all the difference if you do prefer tutorials one of the best resources out there is today sponsored brilliant brilliant sets the standard for interactive learning for computer science data science and math brilliant stands out from other learning resources because it focuses on active problem solving and interactive learning which will help you get out of tutorial hell since learning is not about watching and repeating it's about challenging yourself and brilliant does exactly that by customizing the content to your skill level to make sure you're learning at a comfortable pace they offer thousands of lessons from basic topics such as loops and conditionals to advanced topics like ai and neural networks you'll never get bored since new lessons are added every month one of my favorite courses that they recently added is how llms work where you get to learn how something like chat gpt works they explore topics like how do they predict the next word and how they're so creative and the best thing about it is i learn and remember the concepts better because of how interactive it is so if you'd like to try everything brilliant has to offer for free for 30 days visit brilliant.org slthe coding slw or click the link in the description the the first 200 of you who sign up will get 20% off brilliant's annual premium subscription you're welcome enjoy it now if you prefer something other than tutorials then the key to breaking out of tutorial hell is to start practicing project based learning this means applying what you've learned to real world projects you can still watch or read tutorials like making a to-do list app but the key difference is to add on to the tutorial and build other features from scratch this way you're not just following instructions you're innovating and building your skills in a practical hands-on manner for example let's say you're watching a tutorial on making a calculator program they show you how to add two numbers well you can add on to the tutorial by adding a feature of subtracting two numbers it wasn't in it but you did it from scratch and now you're learning even better start with small projects maybe you want to build a personal website or you know the simple calculator and as you work on these projects you'll encounter real problems and learn to solve them which is a critical skill in coding not only does this reinforce your learning but it also starts building your portfolio which is essential if you're looking to pursue a career in coding remember the goal isn't to get it perfect the first time it's all about learning iterating and improving each project you build will boost your confidence and understanding of coding and let me give you a quick cheat code you can speed this up even more by having a coding buddy or sharing your progress online let people see what you're building let them make fun of it let them improve it in the end you're going to be learning a lot on what not to do and what to do better i truly believe if i was sharing my progress online sooner i would be so much better i would probably be 100 times better than i am today you can join my discord if you want to share your work i'd love to see what you're creating i just enjoy programming and that's everything that i have for you and i hope i gave you enough information to start coding so have fun build what you want and i can't wait to see what you build so i'll see you in the next video and have fun