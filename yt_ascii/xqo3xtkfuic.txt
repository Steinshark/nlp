this little bash one liner can crash your computer yep i'm not kidding 14 characters and boom you need to restart your system so what is the script doing how does it work and how can we make it happen in assembly all this today and more on the level learning security edition the code here is referred to as a fork bomb a fork bomb is a program that when ran creates two copies of itself every copy creates two more copies and this copying happens infinitely it eats up all of your ram and puts your computer into an unusable state no more memory means no more processes and no more processors means no more computer so how does a fork bomb work the first three characters here define a function with the name colon and then next we define the contents of that colon function inside of that function we call the colon function again creating function copy number one copy number two is created by piping the results of copy one into another call of the colon function which is backgrounded by the ampersand by creating two copies of this function we've forked and this forking happens forever as every call is infinitely recursive with no backstop we close the colon function off end the line with a semicolon and then start the chaos by calling colon all right guys and to show the fork bomb in action i've got it spooled up ready to roll here on the left i have top running you have your percent cpu utilization 15 doing user stuff five percent doing system stuff and then about ninety five percent of the time doing idle stuff so before i actually run this read the disclaimer two things one do not run this if you don't plan to crash your computer this will take down your computer so be careful and then two only do this on a computer that is yours and yours alone don't do it on your friend's computer your mom's computer whatever alright so here we go and you can see my computer is not very happy taking a long time to do a lot of stuff 88 in system time doing context switching here this will run forever and i could still do stuff actually but if you can tell like actually rendering the results of this function that doesn't exist is now like i can't use my computer so yes resource is temporarily unavailable i am out of process memory so this will go on forever okay guys and as promised i think bash is a little too easy so to wrap this video up we're gonna show you how to do the fork bomb in assembly so if you haven't seen my assembly tutorials in the past go check them out but we'll get started just like we do in all those videos step one is we expose the start symbol that's where our program is going to enter the goal of this program is to do a fork bombs to do a fork bomb we have to actually call the fork syscall to get there we invoke syscall number 57 or hex three nine we do that by moving the literal hex three nine into the register rax and then calling syscall and once this call gets ran there will be two copies of this you know process open and we will have that process set jump to start again and do this infinitely that will do the same thing that our bash one liner did so we'll go ahead and start this real quick and [music] my computer has now completely locked up i hope you guys enjoyed that one if you did make sure hit like hit subscribe and we'll see you in the next video i don't like recursion at all go watch this video here we'll see you guys there bye