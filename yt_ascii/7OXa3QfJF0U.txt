it makes you feel like you're a real programmer if you can code every single thing yourself but eventually you just drowned in the amount of code that you have to write you already have such a limited amount of free time when you're in university so i hate to be the one to tell you that you have to invest more time in creating side projects but that's just the truth of the situation nobody said it was going to be easy your side projects on your resume are the most important thing and i would say your gpa is probably secondary to that but really i would just focus on getting some really good projects on your resume so let's go through a few things that you need to consider when you're actually making a side project for fang companies or big companies to recognize you the first thing i want to say is that it doesn't need to be crazy if you're in first year and you only know how to write like sudoku solvers or sorting algorithms things that really only run on the command line that's fine like you just do that make sure you do one of those if i were you i would try to do something a little bit unique maybe i would make a game that's completely text based where you enter commands in that's something that i think would be kind of interesting something to set yourself apart but it doesn't need to be as this whole graphical interface and it doesn't have to be facebook and it doesn't have to be any incredible game it just has to be some basic program that you can run from the command line maybe it's sudoku maybe it's merge but again those things are going to be pretty common amongst everyone so if you can do something that sets you apart a little bit but i think that's a really great idea and then once you get into second year you can start stepping that up a little bit once you get into third and fourth year that's when you really have to kick in the gears and really actually make a fully fleshed project so this might you know have a basic front end a basic back-end storing user data in some way in the back end and working with the database all of these components you're going to want to show that you're able to do and you're able to kind of do the entire stack so you can do the front end you can do the back end and you can do all the database interaction now you could partner with a few other friends and make one really big project however i think definitely if you're gonna do that wait until third or fourth year wait until you really understand how design works in general you don't want to be jumping into that in first year i tried something like that it really just didn't work out we didn't know what we were doing we didn't know how to use github and that kind of brings me into the second point manageable is always better than big you have a really really great idea for this new company or some gimmicky really big project do not attempt that for your side projects that's just way too big and you're going to get demotivated halfway through and you'll never finish it what you should do is create a manageable application something that you could write all by yourself and that you will write all by yourself now what should it do what is a good example of something like this i always say the most important thing is actually make a project that improves your life in some way so look at your life and say what problems do i experience and what code could i write that would actually solve one of these problems for me and it doesn't need to be like i said it doesn't need to be the most incredible project in the world i'm going to give you an example of what i did i made this project called tldl and that short for too long didn't listen that's probably how you're feeling right now you always start with a problem the problem for me i started with was i cannot take notes and listen to the professor at the same time i'm just not great at it i feel like i'm i'm missing things so i came up with a solution where i built a small website a small database and i used a lot of libraries and essentially had this little application that recorded my lectures and then took that voice translated it into text and then uploaded it to a website where i could find it later so now i can just listen to the lecture but i'll still have those notes recording university lectures is not something new people have been doing it for decades this is just something that i implemented for my own life it has a little bit of a twist to it in the fact that it's uploaded to a server where i can look at it later and it really solves a problem in my life so find a problem in your life just a really small one it doesn't have to be big and find a way to solve that with code and then put that on your resume that is going to look really good because it's showing that you actually have ambition and passion to solve real problems not just do what you're told they want you to be creative they want you to come up with your own solutions they want to know that you are always looking for opportunity and if you can make your own product that solves a problem of your own it's going to show that way better than making another weather app or making another sudoku solver or something like that another thing you should do is make sure to use github so even if you're not going to be working on it collaboratively with a few other people you should really get comfortable with github so make sure your project is on github make sure you're actually making commits to it and you can use that link and put it directly in your resume that way if a recruiter wants to actually look at your code they can go ahead and click on those links now i've actually done a lot of resume critiques here at tech intern and often times people either don't really link their githubs or i go to their github and there's no readme so make sure there's a readme that actually has screenshots that shows what your project is and what it does and that way you know people don't have to fish through and try to download the code themselves and then run it i've tried to do that before and half the time the projects don't even work when i do that just take a few screenshots it's going to help everyone out a lot more you'll get comfortable with commands like get ad get commit get pushed get pulled these are all things that you're gonna be using on a day-to-day basis when you start at a company so that gives you a head start that's another technology you can put on your resume that's gonna set you apart from the other students that don't have that and last but not least i think it's really vital that you don't recreate the wheel a lot of the times when i started side projects i always tried to make everything myself because when you're in school they don't even let you use libraries half the time you have to make your own linked list implementation so when you get coding your own projects you think you know i'm gonna recreate everything i'm gonna write all the code myself and it makes you feel like you're a real programmer if you can code every single thing yourself but eventually you just drowned in the amount of code that you have to write and you never end up getting anything real or useful at the end of it i make projects nowadays and every single react component i use before i even start typing it i google if there's already an implementation for it i've used this for things like stop watches document viewers i've used it for drop downs anything you can imagine on a website i 99 of the time find an open source implementation of a react component and i just use that instead of recreating the wheel and this is this has changed my life so dramatically that instead of taking six months to get one really clunky ugly project that doesn't even work up i can actually get in under a month a real fast working product that people can start using to solve actual problems right now now there's one other thing i should mention i have a whole video where i talked about extensibility in code side projects and i actually think if you implemented all of those i think it's five maybe six tips i gave there this is going to set you way further apart from the competition so what i've shared today is kind of really the basics of what you're going to need to actually start building side projects the next step is really using that code base to set yourself apart to show that you are an exceptional programmer the way to do that is to watch the video i believe it's here could be there but i think it's here and watch that video and try to implement all of those in your project now i should say you're only going to need all of these extensibility ideas when you're in like third and fourth year and creating actual applications that other people are going to use i start building those side projects as soon as possible don't get carried away with trying to make the next facebook just start small start simple and you'll get your next internship for sure so i hope you guys enjoy this episode i will see you next week thanks so much for joining