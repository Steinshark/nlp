so hi i did give a lightning talk on [music] the charts in qt at the lightning talks and after that there has been one feedback and i've also found another library for using charts and cute from kdav so i thought i quickly you know update my slides and re-record this for you as this is the version which probably is going to be forever on the internet so let's make it a bit more complete than what it was prior to that and let's get started so i do like charts you probably have seen that through the survey for quite some time and i have some charts also which i use for the job fair and recently i've been playing around with the drop fair data to kind of see you know what what can we know about the candidates from various job fairs and so during that time i got to the question like you know how do i get similar charts into acute application what is out there and i've been looking for two ways for qml and cpus prosecute based versions and so there is q charts which is available for both in qml and attitude extension either way it's you know something so you have to install over the two maintenance tool there's an alternative which is typed s based and mit licensed for qml and for c plus plus there is qetq widgets for technical applications which is licensed as a modified lgpl though they have a bit of their own license name and it's basically an lgpl license where they wave some of the things in their code i think which otherwise would be under lgpl that's a file i understand it but i'm not an expert you know can you look at that myself and you probably also have to look take a look at that and kd charts is now since the research just happened like a few days after this lightning talk n3o which is now mit licensed and this makes it like as it's based on cute if you have if you use cute in an lg pl version that makes us supersede the mit license in my opinion and if you have a commercial license for qt then it's mit licensed so you can use it either way and it's it's not really like you know like cute shots so let's start with the qml alternative this looks nice on the first glance it's q char it's a charts.js and an old version 2.93 the 3-0 version of charge is something they could not use or cannot use for this anymore as that version uses web workers and that then isn't available to you in qml so they can't you cannot basically put that into it maybe that has changed in the meanwhile but that's today's way availability of libraries supporting this on github usage from the examples i looked at this was more like a proof of concept like i was wondering how i actually you know import graphs until from c plus the data into the graphs like if i have a a model or just a vector with this data and you know vector ins two two three five and i want to make a bar chart how do i do that and qml widget and q widget would allow to use this also with a queue widget-based application then q charts itself it draws rather nice charts and it's graphics view based as i found out when i looked at the qml documentation because there you are then finding it just disclaimer that you need to replace your q application class with a q application class because that's a dependency that you get through the graphics view framework is under gpl or commercial license and you need to install it from the cube maintenance tool so this is not include and it's not under the normal lgpl license of qt you need to go to the maintenance tool and select it and then have it installed once you do that it will be available to you in cute creator so this is a code example just been looking at this and this is basically yeah just just a quick hello world for charts where i tried to you know have one of those charts in a program and every time i click on the button it will generate a new random graph with three lines and random points it works rather nicely but there's a gpa of course you know i thought you know if i would need to really be based on that would it wouldn't have been nice to do to do something else with it what what if you know could put that in there in their own executable and not have us as a library which would have to be a gpl and a gpa license not lgbt and you know so we could make this a server class a server application right q test is tcp server class so when we use qt as a as a server we could use this qtcp server class which i think is all that that we would need and then you would have this application which probably has to be a gui application because the charts are drawn in a ui context and hence you need to have a ui application you would then send a chart request which probably would be json right and you would get a response and that could be either writing a custom response writing it as a binary or like as a base 64 string into json or like another second those actually two modes which i like to promote on this implementation kind of i would like to also have the option that the chart recurs already gives me a file destination and then the gui application draws a chart scales us to the to to the to the size and writes it to the file destination and the client would of course you know need to create those data objects would have a bit of an ap api for that it would write these to json it wouldn't need to figure out the size widget the graph should be and then where you know what destination mode you want to use like right to a file or get it as in as a binary which probably is also an image like a queue image and then read that and display it and of course you know cannot you know have a signal fired when when the chart is returned from from the server and i'm also kind of you know looking at the the charges example if it's working in q6 probably it does [music] just getting getting my fingertips a bit dirty with qml would be nice writing a small contained cute application as a server client displaying various things which are gpl would also be really nice and having a client with it and etc this is container nice nice things to do with that you know but you know if if you actually want to have grass on your application that's a bit not very lightweight right it's i don't want to call it heavy and in my own setting it would be okay but it's not really a big alternative dragging in javascript into qml and qml probably doesn't make your application lightweight if you don't have those dependency already and you know just having a second executable ah that's also it's okay but it makes things not easier right so i've looked at cute widgets for technical applications [music] that's in principle a good alternative if you need more complicated technical widgets definitely look at that for simple charts it seems to be a bit of an over kill in my opinion and i think the the better alternative is the kd chart library from from kdub which is now released in a 3-0 version which is you know cpus plus and q based it actually allows you to feed a model to to the chart itself and the chart just displays the model that integrates nicely into acute applications i do not really know if they support qml that's something you probably have to figure out on your own i guess they do but i is not my main code it's not my main use case so i don't know so that's an open question and with it i want to thank you for your attention and see you next time