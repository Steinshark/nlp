all right i've been wanting to do this one i'm excited jonathan blow apparently figure outs the problem long before this whole thing with the way open- source software is done right now where like there's a package manager and everybody contributes and it's like code sourced from anywhere in the world and you just auto download it that is not going to last that long and the reason it's not going to last that long is that i could almost guarantee you that there are at minimum thousands of people around the world whose job is to inject bugs into open he like literally called that xc stuff this was years ago too like like i know this was uploaded this was uploaded 3 months ago but this this video is from years ago l take have you seen what's happened dude giant tan literally slow rolled for years to put one of the biggest back doors oh my goodness oh l take is still the best i know it is i swear people just use it to get me man open source is auditable yeah okay so he's actually serious so your argument is that open source is auditable okay tristan why didn't you catch xz then it's it was it was auditable why why did it take 2 years for someone to accidentally catch x z one of the greatest exploits that almost just like literally made a set of versions of linux unusable like real talk trist like do you realize how dangerous that is we unknowingly just download [ __ ] tons of code and execute it assuming open source is altruistic how do we h how do we prevent this from happening in the future you can't you like genuinely you can't pre prevent this from happening in the future and what i mean by that another great example is remember during the beginning of the whole like the the ukraine russia situation when one of the npm owners had it so that if you have any sort of ip that might be from russia it would try to delete your roote directory and delete everything off of your system and nobody it was in some popular os some popular npn package like how do you know that's not going to happen another time right like that's going to happen it's not based okay that's not you're not fighting anything you're just you're just making life way way worse because now that's going to be used anytime like that's just it's just another awful thing exploits suck and that's the worst part is that security is on you you can literally never catch everything and that's why it's so difficult it's because like especially with the xe if you haven't seen this video if you go to the the youtubes low-level learning and i break it down i i thought pretty dang good we we we went through several articles and there's this one that had a really great bash one i i have a link to it yeah this one there's a link in there that's fantastic that just breaks it down completely we go over it i explain some of the things lowle learning explains some of the things and it's crazy like how cooked this this back door was like i mean we're talking like the build pipeline had three different stages piping input from one to the next cutting out stuff and putting it into another one to actually like eventually package everything together it is absolutely crazy how it created the x exploit and like no person no single human or ai would have ever been able to spot it cuz it is just like entirely too it's so novel it's incredible it's so clever was it made by russians we you know there's a gen i think there's a general consensus that it probably had some level of state state actors because these people had to be paid right like i mean it was a i mean years of effort went into this thing source software for espionage purposes like look [laughter] there are give or take 200 countries in the world most of those countries have spy programs you could type source code from anywhere it's very cheap you don't even need to fly a dude anywhere right how many people do you think it's their job to just check [ __ ] into github and ent pm and whatever that has bugs in it how do you think that's not a thing and how do you think how long do you think things are going to go once people figure out that's a thing i think everybody is is very aware of it now i think the awareness level is is is very is very high now it wasn't a bug yeah i mean i think he's using the term bug me meaning security security uh what's it called some sort of back some sort of back door yeah jaan isn't actually a legit chinese name i know they even went over that with j ja being like well no one no cantones would be ji and tan and it would be 10 and they went over it but i don't think ai is going to help in in these vulnerabilities yeah if anything ai will give a very false sense of security and any like obvious thing that could be wrong like i mean you you saw the reports we again just went over i just went over what happened to the curl library where they were receiving report after report of ai generated security issues that were completely stupid that were not security issues it was literally one line above check the length of the string next line stir copy and then it reports this whole gener it it started reporting stuff started making up code all that kind of stuff crazy it'd be it the thing is is having ai at least this generation of ai maybe this will change in the future i always you know you always you know i never thought i would i would see the days of llm level power like being able to see videos being generated on the fly right like i never had that kind of i never thought that i was going to see that stuff just because that that seems too futuristic but here we are and so is there a future point in time in which you can create a model so powerful that it could actually be extremely useful mayum copium but with maybe it's not really that novel this type of attacks happened a fair amount of times and have been happening in years business as usual i mean yes no the problem is is each one of these attacks are ve they're they're novel in their own in their own way like sure people are attempting to attack github but like the one that we just saw with xz is extremely novel on its own i mean we have people that are masters at bash masters at compression masters at security and we're still on like day six hundreds of hours being put into it and people still don't fully understand how this exploit happened this is not some oh yeah it's just a thing like it is extremely you know it's it's it's more likely that it's just robots from the future generated this than anything else okay we're actually just seeing the the tip of the iceberg for terminator okay that's all we're seeing right now the long kong the long kong is very very amazing it was very very very amazing it's a data compression library yeah who would have guessed who would have guessed a data compression library was that good in before everyone commits to self-hosting g te yeah it's coming maybe it was an ai i doubt that it was an ai it's it's honestly it's too clever ais are just the like average remember that so even their clever schemes are average the reason why you think ai is so amazing is because you look at pictures and pictures if i say draw a picture of a crab anything that looks like a crab is a picture of a crab that's the problem with ai but when i say draw a perfectly white picture and it struggles to do that that's because i just i gave it an exact thing to do and that's the big difference between the two how didn't they hack into the linux colnel yet i guarantee you they have i guarantee you there's like [ __ ] at least 17 serious exploits in linux man's just pulling numbers clean out pulling some prime numbers clean out the buns right there at least 17 minimum minimum 17 minimum specifically 17 exploits i don't know jb's take on this is me open source it can be hacked all right bro how i definitely think he's right that open source is as much of a blessing as it is a curse 100% and no matter what i don't think there's a there's a simple i don't think there's a simple solution to this xz 17 and roman numeral all right we got to keep going this is going to be a long video like easy ones i don't even mean like you know obscure things can i guarantee that it hasn't happened to the windows kel no i would bet that it has happened to windows as well the difference is with something like windows it's more expensive a because you have to fly someone there and they have to work at a microsoft office right yeah and you can fire them and all these things right b because you would have to fit the bug into a feature set decided by whatever project manager right so there's a level of check with open source software all you have to do is add some major useful functionality to some program that makes a lot of changes right but like look you did something really useful that every it's adding value for the people right and then you just put your bugs in there it's easy he does have a good point he i in some sense he does have a good point which is lg lgtm is a real thing lgtm is a most certainly real thing on open source right but having a closed source behind the garden thing is much more difficult right it is much more difficult l take malicious actors being injected into companies to work on close source stuff all the time i mean it' be hard for me to say the word all the time i'm sure it happens but i'm i'm sure it's pretty selective which ones they actually want to do i actually think that tj's is much more i think tj's is probably much more likely that the us government is like we don't want a back door we want a front door and this front door is either going to come with the fbi crashing through or with you giving us the keys you make the choice i think that that's much more likely than some back door back door get hired slow play tenear front door with the red carpet roll it out or here we go i think that that's probably more reasonable as far as this one goes i mean i i do agree i i don't think it's reasonable for big companies to maintain all those libraries yeah i i i'm on your team what's the alternative how do you build a secure thing is there is there a way that you can is is security just not real do what squeal light did computers are made by humans security is impossible yeah security comes in layers yeah it sure does but there's some things that need a lot more layers than others you know what i mean like here's the deal expressjs i would expect to have a higher security standard than is odd does that make sense there's there's kind of approaches that you take that make that that some things are expected to be more like looked at than others but i guarantee you expressjs is just not dude first project ever hacked was expressjs they've been long they've been long playing that thing for so long at this point you know when somebody else is deciding the feature that's harder it still can be done but c companies still have some degree of qa before they put things out the door unlike again the difference between an actual company and like an open source project is in an actual company somebody is responsible for the experience of the software right and that me a lot in terms of quality it still doesn't mean as much as it used to right and it does he is right i i i i can't imagine people would argue against that that you would hope that a company has more motiv to make their software better and more res resources oh no see see again you quit having stupid takes this is a stupid take this this is then l take take starts a lot of os projects have quality control he never said that he just said at the end of the day someone is paid by a company to try to do the same thing open source is goodwill right security is an afterthought yeah yeah at least somebody is paid to to make sure something is going on security becomes less and less of a afterthought as your company gets bigger right i think your very first ones the company is very small js on the backend is a scop by the russians js on the back end yeah and quality control does not equal security audit absolutely but as a company grows the more and more security they have like imagine the amount of security engineers at netflix right now in incredible number okay entire departments literally 100 people teach dera in two prime brain aable yep that's that's me all right let's keep on going doesn't mean that nobody ever does quality stuff in open source but like it does mean okay that that's a little intense i would say that there's a lot of quality stuff in open source i think jonathan blow generally has a very negative view of open source i don't think he's wrong in all of his takes of open source i think he's just a bit jaded there's just that extra layer of vetting that doesn't exist otherwise i also think a lot of the things he does he comes from he has a very positive view of companies comparatively to open source and i've seen some open source projects ran much better than companies but i think on average it's it's safer to say that a larger company has more effort to put into security than a lot of open source to put it in reverse right something like a compression library nobody no nobody's really thinking about like larger companies do security engineers at netflix even do anything yeah of course what what kind of like honestly what kind of stupid question is that netflix is like what a fortune 100 company you think that they just do nothing there's an incredible amount of effort put in to ensuring that things don't get hacked right like of course it would be crazy chad what are you doing what are you doing their team is security against password sharing that's not even that's that's a product team dummy how would you even know what security engineers at netflix i used to play ultimate frisbee with one of them how would you even know what security engineers at netflix do by the way prime yeah maybe maybe your boy prime accidentally created one of the largest security bugs at netflix ever to this date okay maybe on accident that happened so guess what i've been in a few meetings with security engineers it's really simple the the the the exploit was really really simple it was very very simple okay so imagine this you're on netflix and the first thing is like a big image right here and then there's these little footers right here and they go like this right and how far do you think they go well i don't know do they go 10 out do they go 20 out do they go 50 out well we do a lot of client side caching right and so what we do is we're going to request some larger amount of amount of data right that exceeds the bounds of what you can see this makes sense right and then we're going to cash those results into some javascript well what happened when i asked for the 10th item in this row but the 10th item does not exist or the 11th or the 12th or the 13th well i need to send back something that says you know what at 10 there's nothing here right there's nothing here so don't try to request more data there's actually nothing at this point okay don't because that way if we send back nothing and it tries to request again well what is it going to do it's going to go and request again well we don't want to just keep requesting empty data right so we send back a little little type a little type value a little box value that says hey this is we exist and we exist as nothing okay that makes sense well we created something on the server called materialize materialize and materialize what it did is that when you requested this it produced this little type value now this wasn't my idea and we had a version of this semi implemented in some way and when we did the big falor open source pushed i created the next version of said thing and made it fully beautiful and all that great stuff and what it did is it just ensured that all these pieces of data were well one day i was sitting there and i was programming falor blah blah blah blah and then i realized wait a second it just kind of like dawned on me it's kind of like shower thought style if i can request zero through 50 and it will give me back 40 empty items and falor allows you to do something like this 0 through 50 0 through 50 well then i would get back a lot more doesn't exist items what happened if i request 0 through 50 0 through 50 0 through 50 well i'm going to get back a lot more items that don't exist right right huh what happen if i keep doing that so i decided one day to send up a path to falor i did a little thing i went to netflix.com took a path evaluator request copied and pasted from curl put it into a shell script put a little while true on it and said instead of whatever path i requested let's just request z 0 through 50 0 through 50 0 through 50 0 through 50 0 through 500 whatever it was and did like a billion items right and just did it in little small little wild true loop you know and that's it and then i put a little amper sand on each on each one of the curl requests so that way it would just go into the background because it would just take forever per request just to see what would happen you know so we have this place called staging i did it again staging not not production because staging well if it went down people would complain but a bunch of engineers would complain not production so what' we do well i just tried it out i was able to kill machine after machine after machine a thre line bash script could hold down netflix at infinitum and here's the best part this change was like a year plus plus plus old multiple years old there was no rolling back there was only push forward you had to fix it dude i literally helped lc con netflix hard good luck finding that thing yeah it's just the thing you didn't realize that could exist right so anyways i went out and i wrote a little thing and i said hey by by the way i think it was kim i think my manager at that time was named kim i was like kim hey kim kimothy i think i may have broken n i think i i think we i think we've broken things i think we as the team have broken things and we should definitely think about we doing the right thing here so i cre a little jer ticket and people were like bro this is going to take forever to fix and it took so long it was a multi-year fix it took it was so hard to like get it all done and at like some point you could still kind of like it for a while it even could be like held down through like some cpu fixing are they still fixing it no no no no we did we did we did a conference talk on it someone someone wrote up a whole report it's called the repuls of grizzly attack it was awesome but let's just say we didn't fix the issue but man did i i made an incredible piece of software that could do it and you know the best part about the whole situation was is that the package name in java by the way it was written in java for those that for those that don't know anything about java i wrote it in java it was called there was a package that was supposed to be called exceptions but because i have such bad dyslexia i called it expections and i did not see it at all it was called expections so there's literally like falor do expections in there i didn't even see it that's the best part that is literally the best part i did not know that i know that's a brand new piece of information and when i when i told my boss that i also misnamed the package expections you know what he's this is later on satien you know what he said we're going to keep it there for posterity sake cuz it's too funny to change it my and so for a long time yeah yeah there's a lot of good one take prime when you can't read i know you got to take prime when you can't read it's a good story it's a good story anyways the linux colonel has police but like you okay you don't understand if you say that you do not understand the magnitude of the problem and how easy it is all right it's true it is so easy if you're smart imagine there's a programmer of approximately the same skill level as one of the linux colonel police those guys are busy all you have to do is make something subtle like you don't see here i'm not saying you add some lines of code that say switch to root and open a shell right like that's not what we're talking about we're talking about introduce very subtle situations where a variable can have the wrong value that normally that's fine but when you combine it with thing b and thing c it happens to produce an exploit right i'm talking about that things that you would not see by looking at the source code i guarantee you there are people around the world where that's their job yep that's where this differs from xz really tell me more tell me how it differs from actually gatan switch the a and the i becomes ji ji is the language he's producing jonathan blow also illuminati isn't that exactly what happened tell me how that differens well xz was one binary no actually it wasn't one binary it was actually two binaries and it was multiple stages of the build pipeline the first binary was actually a bad corrupted stream in which if you replaced specific characters it would actually become a good corrupted it become a non-corrupted stream and then that was able to produce a bash program which would then take the second binary blob and take that good big file i believe it was named literally good good large xz whatever and actually take that second one and then slice it up discarding one two to the 10 bytes excepting two to the 11 bytes discarding two to the 10 bytes excepting two to the 11 bytes and doing that over and over and over again until it sliced out its entire yucky program with a little bit of extras at the very very end and then put all those together and then had the run on top of it a some sort of crazy replacement cipher and then it could do the next level of ciphering after that some sort of rc something or another de cipher where it generates a key and it did that in a and then finally at that point after all rc3 rc4 yeah rc4 yeah it was dude crazy right at that point then it would be a binary that you could execute so yeah it wasn't just a binary that was exploited it was several several several several steps for someone to get there and it was hidden in plain sight how do you explain this in terms of basketball okay actually it's very very simple to explain this in terms of basketball okay so imagine this some dudes are playing basketball and they're going and they're shooting and they're shooting but when they're playing there's a group of people that are betting on the outcome of the game now the people that are betting on the outcome of the game what they don't realize is that one person on one side knows one of the refs but doesn't know them quite well right just only kind of knows them and by knowing that one ref they're able to talk to him now here's the deal it's not the refs throwing the game the refs is actually best friends with one of the players now one of the players is going to intentionally sink the game with some bad passes and some not awesome and stellar offense along with three other of his buddies so it looks like an off night to be able to lose the game to thus make the basketball players more money to thus make the ref more money to thus in the end make that one team or the one gambler more money so that's actually what happened okay it's several layers it's not bad calls the refs all look like they did very good it just looked like a slightly off night yeah so you're describing the nba yeah i describe the nba actually just perfect terms anyways there you go it's not even a foul ref like that's the best part it's not even a foul ref it's it's worse we're gonna stop here i think this is a good video i think we kind of get that we we effectively get the gist of it good video though appreciated it the name it's the primeag