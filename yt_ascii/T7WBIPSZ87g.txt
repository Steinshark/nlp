this is something that i has anyone actually used a one-base language for those that don't use neovim has anyone used a one-based array language yeah no i have a couple yeses which is odd because the people who said they use neovim did not raise their hands so i'm a little confused right now how did you guys do this yeah so if you ever feel like you don't have skill issues just go use a one based array language for a little bit and just watch yourself shamble for just hours on end it is it's it's exceptionally difficult so tj saying that we're wrong about zerob based i don't know does anyone actually think one based is superior we have one person as far as i can two we have two no one else why you're wrong about zerob based indexing and i know that this might be controversial i know this might be the last video that i ever make on youtube we already know that's not true he's gonna he's gna make more and he's goingon to tell you about it too by the end i know you're going to agree with me so let's get right to the chase argument zero look at this guy he you know you know right now he's laughing inside because he does he tries to he tries to do these all in one take but you know he practiced this like five times not laughing to himself well i'm so clever it's what tj sounds like if you've never heard him oh wait that's actually my first argument no one counts like this you're just pretending you're just locked in into the programmer brain if you think the reasonable place to start counting for a sequence of things is zero yeah why are you agreeing with him i mean it makes sense speaking but but we're not talking what because the thing is is that if you look at the old days this you know i i only learned this fact just recently but in c you can say array index number right or you can go number index array because it just takes those two things and adds them together and that's where you're at in memory i i mean it's a crazy feature right see again it's just crazy but nonetheless you can do that and be kind of fun to do that and just see people's general reaction because i thought it i was pretty confused myself but that's because computers don't start that way right so does any does anyone not know how arrays effectively work well okay we got we have at least we have one brave soul and a bunch of liars i appreciate you all it really is is just contiguous memory and that's it and you index into it and you hop by the width of whatever type you're using so if you're using a 32bit integer it's if you add one it just hops by 32 bits and goes to the next place and reads it goes to the next place and so that's why it makes sense all the time everywhere i've never seen in any of my kids books zero is where we're starting to count when we're thinking about learning and associating numbers with actual values in real life beyond that zero isn't intuitive at all it wasn't even around as a concept that we were using until like 300 bc in babylon and then india started is that a little weird like can you conceive of a world where you can't imagine zero doesn't doesn't even exist how does someone say i have that many items like i have zero skill issues personally how would i express that i try to think about what would it be like like how would how would you approach things if you actually lived in this type of condition where zero doesn't you know you don't even use the term zero and like i don't even have the ability to imagine what that would be like and that's just kind of a weird conceptual ground to know that most people that lived as far as time goes didn't have this concept and here we are arguing whether one or zero is the more appropriate version to start at it's just a it's just str actually doing things with it then it spread throughout the islamic world they had a bunch of great ideas about it too and then finally fibonacci sequences by the way sort of popularized the idea in europe with liber habachi which i probably slaughter the name for but i probably can't read the book anyway so that's fine the point is any readers no i didn't think so it it was a good try is zero as a concept as a number is less intuitive than the rest of the natural numbers or if you don't want to count zero as natural number that's fine too i'm just saying it definitely feels and acts different than all the other numbers and so now you're saying tj but what about c are you really going to say you're so much smarter and so much better than all the people made c no they're way smarter than i am but fortunately for me they never said anything about indexing c only talks about array subscripting and so you're saying what what do you mean array subscripting so this sort of idea is the subscript of like if you write a little a for array and you put a little zero on the bottom that's the same thing they say sort of like a subzero is the same thing as a with the curly braces right left and right with a zero inside and how do i know well i read the specification does anyone read the docs same guy who's not lying is now telling me he's ringing the docks okay sometimes sometimes you know it is kind of a superpower if you do that you know that right it's like one of the the best things you can do for i mean i don't do it but like i i want you guys to do it okay because it's it's that good but still teach i feel like tj's lying right here you know i feel like he's kind of skirting the issue a little bit which is like oh but it doesn't say you can't do that but then you're always wasting a little bit of space and you know at one point in life memory was a lot more like precious than it is now now you guys are run electron right who has slack open pretty much right now on their computer yeah yeah you're just like just destroying your memory i know it's free today but at one point it wasn't free i mean come on you really think it's going to be a teach video without me breaking out the specification 6.5.2 do1 of the c specification sub section two states that a postfixed expression followed by an expression in square brackets is a subscripted designation of an element of an array object for e1 left i just want to like i i feel like i want to punch tj like this is is this this is this what people feel have to brag it i'm gonna invite him to my house and insult that is the e to element of e1 counting from zero okay so there's no mention here of this concept of an index it is specifically talking about this idea of subscripting on a c array and what are c arrays when we're operating on array subscript we're saying that this is equivalent i didn't pre-at this okay i i did not pre-at this it just makes sense that this is the direction he's going to go and two the location right so we're looking up we're d referencing the location of the array plus the subscript or in english right want to get the location of array plus subscript so subscript is basically like the offset from the original memory location because in c your pointer is act the [music] array who did it it's okay no one's upset can i press play or is it going to blow out someone's ears and the first value so if you do the math here and you take an array and you say i want to get the address of the first element oh this just says seems so gross to say first when you're also going to say zero well then we do the math we cut everything out and we end up getting that's actually fair when you say first and you means i really hate trying to tell somebody what element to grab because i know when i say first it means not first and then you're like oh yeah it's the fourth one and then i have to count inwards because i know it's not i feel like an idiot it's like i could not explain that to my kids it just would not work out and so it may maybe tj is partially right on this on on the language translation problem here getting array is array so this is why in c it makes sense to use zero as the subscript or the offset of the array because what we're doing is actually pointer arithmetic with an array that has no additional information arrays don't contain information about their size or the elements it's just literally a pointer to a was that rust mentioned did we just get rust mentioned yeah maybe a little bit no no it's zig it was zig but in memory you can do all sorts of really bad things with pointer casting and everything else but but but the main point is that the array is actually just pointing to that thing in memory and so when we add zero to the array itself we get back that array but in a higher level languages this isn't the case we have some container object and we're not doing pointer arithmetic or messing around with the memory locations themselves we we have a list object right or some sequence object we can take for example is that true i don't think it's true in javascript i'm pretty sure in javascript it actually has a contigous memory region underneath in which it does the offset right yes no yes no no one knows i think he's just i think he had too much o camel right o camel guy right no o camel guy right there yeah yeah he's had too much oam it's not always lists right there's actual arrays this idea of then an index not a subscript right so what we have here is we're not doing subscripting anymore we want to point to or we want to indicate what element we are trying to get inside of this sequence and what's crazy here is we we know that indexes are meant to point to things that's what this is called index finger right here i'm using my index finger to point to my index finger and it say zeroth finger right how do we say one we point like this coincidence i think not we use our index finger to point to one so when you point at the first element there is something you point at one and if it were possible to point at the none or zer zero element that would be pointing at zero that's what indexes do they point at things and we can see this this is the language that's used inside other programming languages for example if you think about python this g item dunder method is what happens when you use those subscript operators although in this case they're sort of a g item operator and it's i want to let him cook you know like i i want to believe tj because he might be one of the smartest people ever but i i just don't i'm not buying it it's hard to buy because in my head still think like there still has to be like this subtraction that happens on every single indexing into every single array because you'd have to do something magic to know that one means one and zero doesn't mean one right right i said that right right first i didn't use the term first and so it's like i i i want this to be true because it also means there's a there's a second consequence which is like in a for loop you start at zero and you go up to the length but now you have to go from one up to and including the length and if you think my skill issues are bad now that one small little change is going to get you everywhere because all of a sudden every single api you ever use has to go from exclusive into inclusive because that means every ending one every time you do a substring and a str a substring you have to go to the end and include that number as well because that's now how everything works which just makes it much much harder to reason about i'm i am hoping he addresses this one but i i i struggle with this i actually do struggle with this being good say that again a language with both says for sequence types the accepted key should be integer so there's this concept of a key right and the key is what's pointing there and what's gets raised if there's an error is an index error so what we can think about here is anything inside of these brackets that's what we want to point to so when we have some person dictionary or something like this and we want to get the age out of that person we pass the age value and so then any reasonable person i think when they're saying get the first item what are you going to put in the question mark spot you're of course going to put one no it's only our tricked programmer brains the big industrial sea complex that is tricking you into thinking zero should go here it doesn't matter if you have a complaint about the speed or the math or anything else like that at least i mean he did just try to he just defeated my argument by saying you can't do that but i am i do think it i do think it's true and maybe it is the big c industrial complex that has influenced me is it is he giving me effectively when i say you have react brain is he giving me c brain right now is this like the equivalent of me being insulted i don't know if i like this that is tricking you into thinking zero should go here here it doesn't matter if you have a complaint about the speed or the math or anything else like that at least in python because you're already writing python you just can't complain about it right that's actually fair and what's great in a wonderful sort of twist of fate for me as i was doing this research i was reading the error once again from the standard manual from index error in python and what it says that's so great is it says raised when a sequence subscript is out of range and so with in this problem in python which is zerob based there's this this contrast this contradiction that you raise an index error but what you're actually talking about is a subscript that's the mismatch that i'm saying an index is not subscript in this case the way we're normally thinking and talking about these things and beyond that if we just appeal to our intu is this more nerdy by the way than tabs verse spaces index verse sequences is this like the new twitter argument that's about to happen i still just have a hard time conceiving of a world where this makes sense i mean i know it makes sense when you say it out loud which is a weird thing to also say now that i just said that out loud but it just still doesn't feel rights well come on we know what number points to the first position and we know what index we want to check when we're looking to see if we're in the first iteration of a loop but beyond that these are the ones that i think really you really have to admit what number points to the third position are you really going to tell me that when i ask what number points at the third position your first thought is two yes yes it is why would it be it's off i mean it makes perfect sense you're telling me you're not likely to accidentally do three instead of two when you're looking for the thir third thing in a in a tupal no really that's what we're going to say and the other problem is that this zerob based sort of copied idea is not just for things that are strictly arrays but we also end up using this thing for other data types too when we're doing we when we're doing this we lose the symmetry of having the last element equal the number of items so how many fair can we can we agree to this one i hate this one i hate i hate this one so much so yes i'm i okay i mean i'm feeling more convinced now we should have started here times you tried to get the last character or something like that in a string and you've forgotten to do length minus one right and now we would be able to just say i want to get the last character my string of my string. length we could just get it we could just forget about all the times that we've made other mistakes because we just cargo culted the idea of zero into these strings as well my last point here if you're iterating over something you're really going to tell me that this very lame indexing is better than just indexing from one to the length of the array that's an unfair comparison can we agree to that yeah yeah that's cheating he's cheating right there you know why because this is this is lua lua lang this is brazilian l they're cheating right there because in a normal one you just put length chea i call file on this one i i know we're used to zero i know you want to say tj it doesn't matter zero is the right way because that's the way we do it stop trying to convince me otherwise that's okay i know that's why you're feeling and that's why in conclusion all i have to say is please stop arguing about this this doesn't matter you should just be using iterators [applause] he's absolutely correct on that one you're fine with this what happen if you need to use a boomer loop the four loop those are just four loops that's nope no one okay i i mean i use them all the time geez oh and one more thing lu was right brazil mentioned neoven by the way thanks everybody and [applause] bye that was pretty good that was pretty good all right to be i mean to be fair i guess i've never i i've never you know just like i can't conceive of a world where there there isn't zero maybe i don't know what it's like only ever using one and maybe there's like a whole slew of off by one errors maybe the fact that we're always been off by one this entire time i now actually might agree with this i might actually agree with the fact that maybe just maybe one actually is the superior way i mean there has to be some people here who here in the last couple years would think that typescript was the single best language it's okay i'm no one's going to hurt you okay okay you're proud but at some point you you do something else right you can say this almost anything like hey i'm going to just tell you a real story here when i was in college i thought that using net beans in java was the only way a true developer developed net beans older than some of you java totally is awful right like no no one's like this was old java okay you had the public str public static string main ars whatever it was and you had to do all that and everything was a class one class per file you could have classes nested i mean i was in design patterns i had clean code oh i had everything inversion of control it was absolutely fantastic and then i used something different i went to javascript at that point which had no types in the language at least or you know as you type it and and i loved it i actually loved it using jquery i enjoyed jquery more than java but i would not have known that unless if i made that leap and so maybe there's something here you know maybe maybe just maybe we're all wrong just thought i keep being wrong in my life you know one of the i think the hallmark of a good programmer is not the amount of things you get right but the amount of times you've done the wrong thing because it's extremely difficult for me to tell you why you should do something you can see it can understand it on paper but until you've shot yourself in the foot i mean i can't even believe i have feet to begin with at this point but it's just like until i've done it for 20 years it's like every single time now now it makes so much more sense why i want to do something but that didn't happen because i had to fail over and over and over there's been times where i had to stay up all night trying to save something because i screwed up there's that one time i accidentally broke production with netflix when someone's show was released and it would freeze the website if you happened to be on it and no one was very happy including the creator but nonetheless i had to learn those mistakes and then slowly learn why like say testing is a good idea could have easily caught that but i didn't because i just it wasn't embedded in my brain i had to have someone yell at me for me to go oh yeah i guess this makes sense so it's like is this just yet one more of those maybe and maybe we should just use iterators yeah no why did it why did it start with zero oh oh it's memory offset right like that was the whole c thing right in the middle is just that you had like extremely limited computational resources and extremely limited memory and so you're counting btes constantly so if you're off if you start at one it's just taking the address of the thing you hand it plus whatever index and just adds them together and that's where you're reading from memory and so it's like if if you were to waste a bite or four bytes or whatever it was it would be like disastrous if you had a whole bunch of them and so now it doesn't matter like now ain't nobody going to miss a few bites like who here who here is concerned about memory okay come on okay pekka he's writing databases i i agree i agree you probably are more concerned about memory memory maxing yeah probably all right well hey this is pretty much all i wanted to go over this is all i wanted to do but i did want to leave a little something kind of special at the end here which is that you know i've been to a lot of places and it's pretty universal that there's a a general feeling of angst and like kind of an intensity right now i think that there's a lot of difficulty with finding jobs switching jobs there's a lot of difficulty just maintaining jobs i know there's been like a lot of layoffs a lot of people been hit by the stuff but there is something that's also super cool which is that none of us like got gatekeep in some sort of way to enter into this you just had to have a laptop and a willingness to learn and i think that if you can just maintain that you can overcome anything and like i i didn't get to start off good lots of difficulty to to get like hold on it was it was very difficult to get you know to the point of even being able to have the opportunity to do this and and i never once thought that i would have a future right i just knew that i was greatly upset at the current and so i hope that you have that same you know like that same drive that doesn't think about like that doesn't use the difficulties as a means to stop but the difficulties as a mean to kind of keep on going and push through because at the end of the day there's real value and real good things but they're hard they're very very hard and if there's one mistake i've made in my life probably more than any other one is taking that to the like to the logical conclusion and disregard stting people in my life or things like that so don't don't overdo it if you have a wife or a husband you know value them too don't do this to the detriment of everything else because you still have you know you still have a life to live and if you gain everything but you lose the stuff that's important what's the purpose right you lose it you lose it all so don't don't make that mistake my wife will tell you that like the first four years of our marriage were really hard hard and it's because i had my head really far up index zero and i didn't you know i didn't know how to like balance these things and that you know luckily kids and all that really like helped kind of make me realize like i'm losing time i'm not gaining time there's no time left for me to gain anymore i can only lose time from here on out and so i i just realized like just how to balance those two things if i had a perfect answer i'd give it to you but i don't i don't want you to leave like the thing are defeated and hard but i don't want you to work so hard that you lose everything in the you know in the transition so please live a good life value the things that are valuable because it's more than just work but man it's good to enjoy what you [applause] do bye [applause] all right i think that's it