most of you will know that you can build your own pc but have you ever thought about building your own graphics card at home sounds absolutely crazy but one guy actually did this recently software engineer dylan barry has put together a fully assembled prototype he calls fury gpu and we sat down with him to find out exactly how he pulled this off the heart of the fury gpu design is a custom zinc ultrascale plus fpga from zyink which is now an am dbrand and if you're not sure what an fpga is it stands for field programmable gate array essentially it's a device that you can configure to be more specialized for certain applications as opposed to a more typical desktop cpu that's designed in a more general way so it can run many different types of applications the fpga does include a small arm processor that can run linux but the rest of it can be programmed to render graphics with a hardware description language or hdl which tells the fbga how to actually organize its internal circuitry small cells that can accept many different types of logic functions using his knowledge of graphics engineering barry was able to build an architecture optimized for graphics rendering a process that took over 3 years starting from simply getting an image on a screen then building in support for drawing polygons applying textures and blending textures together because commercial gpu designs are trade secrets barry had to completely start from scratch instead of using a current gpu as a starting point explaining why it took so long but once the fpga is completed you of course need an actual board to install it on so it can act as a functional graphics card since you know you can't just insert a bare fpga into a regular motherboard i mean you can it just you're not going to have a good time therefore barry also designed fury gpus board a process he said took around 1 month and involved thinking carefully about how to lay components out on the board details like trace length were very important as the various traces that feed the pcie connector need to be very similar in length to help with signal integrity placement of these traces was also important to avoid cross talk you don't want them too close together and he also had to consider what kind of power supplies to put on the card as the fpga itself needs a different voltage compared to the display outs after barry got his board design right he then sent the files off to a pcb fab in china and got back well some pcbs but keep in mind these were only boards meaning that to get a working graphics card he had to install over 400 individual components such as capacitors and resistors himself which of course involved lots of tedious soldering assembling and testing the hardware itself took barry around another 2 months but at the end he had a card that wasn't too different looking from some graphics cards from the 1990s but with modern display outs and pci express x4 support and although current commercial graphics cards typically use x16 fury gpu gets away with x4 as it moves far less data than the gpu you probably have in your desktop rig we're talking less than one megabyte per frame as it was designed with mid99s games in mind but even a perfectly executed piece of hardware is useless without the right software so we'll tell you about the final piece of the puzzle right after we thank paperlike for sponsoring today's video protect your new ipad with a screen protector from paperlike paperlike 2.1 is manufactured in switzerland and is designed to help you write and draw on your ipad just like you would on paper it uses their exclusive microe technology called nano dos to emulate the stroke resistance of paper without sacrificing screen clarity and paper like is so confident in their screen protector they offer a 100 day satisfaction guarantee this means that if you're not happy with your screen protector they'll offer a free replace m or refund within 100 days so make sure to check out paperlike at the link below like any graphics card fury gpu needs some kind of driver in order to run barry said it took him about 4 months to get the drivers to work windows typically requires drivers to use an architecture called wddm and that requires support for hardware features you'd only find in mass-produced gpus such as support for modern versions of direct 3d to get around this the fury gpu driver is designed such that windows instead sees it as a kernel mode display only driver which basically means that it will consider fury gpu as being a simpler device that just displays an image instead of doing any actual rendering however the driver itself can switch modes and allow the gpu to actually render frames so it kind of tricks windows into thinking it's just showing the desktop when it's actually showing the game you're playing game cheats enabled the fin product uses a custom api that's similar to vulcan and barry was able to modify the renderer for the original quake from 1996 getting it to run at 720p at around 60 frames per second unfortunately it doesn't yet support modern shaders which would allow for more lighting effects and other kinds of eye candy we're all used to today barry told us that shader support may be coming in the future but fpga have their limits compared to mainstream gpus as they sacrifice performance for customizability we may also see other games from the mid90s get ported over to the fury gpu but can you actually get your hands on a fury gpu and play games on it i'm sure you're asking barry made it clear that this is mostly a passion project and that he doesn't have plans to produce the fury gpu for sale especially as it's a continual work in progress that's currently being operated in a full development environment so it's not like you can just slot it into your windows pc install the drivers and have everything work flawlessly still it's a super cool testament to what you can accomplish with enough time effort and patience with a soldering iron thanks for watching if you like the video check out our other video on how cpus and gpus are different comment below with video suggestions and don't forget to subscribe and follow techwiki you've watched a couple of other videos and you didn't do that so i'm just don't forget