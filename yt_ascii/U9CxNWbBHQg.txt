hello so my name is bav tanek i came from poland from university of kov and mostly what i'm doing is is research in computer vision now we have this revolution of m lai but i am also teaching and i am with c++ for over 25 years and i'm teaching alsoo c++ for over 20 years so i would like to to share with you some thoughts about teaching modern c++ so the question is is it a job or a mission so here is here is the plan we start with first things so know your students class organization time planning teaching but most of all motivation then we'll go okay overview overview of some teaching scenarios so i will talk about intro to programming teaching materials and this 2080 paradig so i will i will show you some some teaching scenarios with some some simple code and and we can discuss this what what is your approach in your classes if you if you teach so then we go into object oriented advance concept things like this and the question is can we teach swimming without going into the water so the well actually i'm a scuba diver as well so i'm teaching swimming so this is why this comparison to water but the actually the the question is about good examples so for me water are good examples in teaching tech subjects so and also code refinement and teacher supervision so these are important and we'll ask the question how to deal with legacy code programmer's life how it is like you know employers expectations so we are not in a vacuum teaching students so that's that's the point and then we'll go to some some hints tips and and helps in and also some some esel study groups i will tell tell you and then teaching materials and certainly chad gpt is number one today so we'll talk about this the teacher maybe as well so first thing why i was brave enough to propose this talk and get accepted if there are many brilliant talks like this by b st troop 2017 cpp con there is this nice talk stop teaching c by kate gregory and also by christopher debella so you can watch all this teaching recipes and then you can compare also with with my recipes so what i'm trying to do here is just to take the common point of all these approaches and discuss a little bit with them and now what i do and who whom i teach actually therefore i would like to share with you because i think we have big experience at our university sometimes we compare our university to a small city it is something like almost 20,000 students and majority of them are are tech oriented so what we teach in this informatica beautiful building and uh this this is computer science certainly we have actually five computer science sections in in my university at different faculties and but in majority of them we we teach computer structures algorithms but also computer languages like python java c++ c c and assembly back years so this is about myself so i'm i'm just doing research but i'm also a programmer for years so i joined this these two domains and recently i i moved i mean last 10 12 years i moved my my teaching materials from older c++ versions to to newer versions i would like to share this with you as as well okay first things first motivation yeah so i was motivated to to propose this talk and being accepted you are motivated to come here so probably you are involved in in some form of teaching so c++ we can say is probably the most powerful and versatile language used today however this makes it difficult to learn and and also to teach so learning can be compared to some takeoff and can be very stressful experience like a steep takeoff yeah so for for example especially first lessons can be difficult not only when learning c++ but what i would like to stress here this first contact with your students the first lessons are the most important ones the the way you start it will go this way further on so this is our duty to lead our students to this process in the best way and by the way regarding motivation the question is how much c++ code is in all this maverick toys but if we are talking about motivation this can be a motivation as well looking for what is really important in in in contemporary it i would say or society so we see that python is is is getting number one for for years that that's fine but this is quite different language and as i will mention the the best what we obtain in our project is just combination of both using some binders but if you look at this c is still on on second place but c++ was third fourth and now is third so we have this increase and actually this is what we cover in in our classes at my department this is what we teach there are some some faculties with c java a little bit but this is this is what i am teaching as well but the question is not what i am teaching but in this context in what order so our first motivation is to teach modern c++ then move to other languages if if necessary also if you look at this it spectrum rankings these are taken from nine metrics you can read how they compute this this is normalized the the the the the the the number one is normalized to one python but if you take a look at c and c++ together they are also almost summing up to one so these are quite useful things and however if what i read is quite interesting the black horse of of this let's say if you are looking for job it's just apart from learning for example c++ and python try to learn sql then you'll have better chances to to get accepted to to some some some good companies so this is what they state in it spectrum quite interesting but regardless of whatever we do we are all teachers at some point so or likely to become teachers even if we start as as juniors today in a year or three we will have our younger colleagues and we'll teach them because there is a a project that they need to integrate into this project and so on they need to help so i think this this lecture can be can be helpful for for everybody this talk so that's that's my mission today so we'll see if i can share with you something or maybe you can you can take some ideas from from from this s so first things first organization yeah so the key points to ask yourself nor your students yeah place the goals what do we want to achieve ask yourself is teaching c++ different than teaching math for example organize the the the the class organize the time and prepare good teaching material so regarding the students what what what's their background because how we teach depends on who are our learners are these absolute beginners or students of electrical engineering with some background if in electronics or they have some background in math or python or do they know computer science at least some other language or they just new to to this area maybe i have classes with people like this there are professionals that writing incredibly reliable software but they are using they they prefer to stick to to older versions because they are comfortable but they know they can gain so for some reason they are coming to us as and and asking if if they can they can use something for example coroutines or other other new libraries like ranges in in their in their work okay and or maybe kids sometimes we have kids so the question is if we start with c++ or maybe python and then something of the question is why why they wish to to to to to get in c++ sometimes because it is beautiful yeah that can be motivation as well well organized the classes and i put this image for purpose actually we forgot about blackboard probably many of you remember black birds i remember choke and black bird and white birds something okay so when you show the code to to to your students sometimes it is better to take a pen and and and and and write it by hand because if you show something something is popping up or even if you do live programming that's fine for professionals because they can remake it at home or at work but with someone who is who is just learning how you organize your mind when writing for example the main function it is not linear process usually it is just making a structure making the braces putting some comments yeah if you work with copilot for example this is the the way you put some comments and the copilot is is is filling this up we we'll come to to this later so have a plan but react on students progress and expectations we'll be talking about this as well be agile we know this from project development yes so are your teaching colleagues you are not in a vacuum as well what's their attitude and experiences so for example i have lectures but two of my colleagues they have laboratories with c++ so it it's supposed to be coherent and and concise what we are doing and not okay i'm i'm just criticizing using be new and delete and i are using new and delete so students are just in in in in two different realms so how to plan our time i like this this image so you can find it it's it's very important how much time do we have today for this lecture i have to control the time or for for teaching one week or a semester or three semester so how to organize the classes and the classwork well what about the teamwork it is better to separate students so each person is is is writing code by themselves separate separately or just make teams or two three four four people cooperating that depends that depends and probably from the very beginning it is better just just to take care of each person individually then you can create some some some things teaching materials websites books maybe chat gpt we'll talk about it later yeah so there are many books but you please remember if you propose one book then there will no time for for for the other probably so the the choice of primary materials is very important overview of some teaching scenarios let's go to some some some code sooner or later but let's let's try to propose some some methodology how how we can prepare teaching scenarios not only for for teaching c++ but other subjects in computer science you in electrical engineer or whatever and there is is this this concept of 2080 paradigm which is quite useful so whatever level we choose teaching basics objectoriented programming or advanced concepts well we we need to to ask ourselves what to start from at at each level what tools propose install gcc or use web compiler what are the consequences how to present c++ concepts and i don't mean c++ 20 concepts just just general ideas yeah prefer presentation or life coding or as i mentioned maybe whiteboard or blackboard but before let us consider a very useful methodology this 2018 so that's it probably you heard of this and you may think well some some some nonsense maybe people are just trying to to devide some ideas but it appears that it is quite useful when you are dealing with not precise information we all live in some kind of vague or fuzzy logic world so sometimes we need to take decisions but we don't know all the premises so this rule devised more than 100 years ago by parto called law of vital fuse states that in many life situations 20 % of causes is responsible for roughly 80% of consequences so he observes that 80% of land in italy was owned by only 20% of population 20% of workers contributed to 80% of results so just focus on this 20% reward them and but going into computer science some people say 20% of bugs contribute to 80% of of crashes so in we are limited in time so instead of dealing with the whole universe just concentrate on this 20% of bugs if if you need to deliver the product to your client 80% of cpu time will be spent in 20% of of of the code and so on of of just 20% of of of features so the key observation is that most things in life are not evenly distributed so some contribute more than than the other so we are looking for this point so in our preparation of teaching materials we try to find this golden 20% that can fill up 80% of functionality of our students what they need at at that time at that level so that's that's one of the ideas so focus on the important 20% whatever level you you consider just just okay make a list and then concentrate on 20% of of of items on this on this list show some con concepts get general directions and then work out the details yeah what features are most important and appropriate attention then move on to the more advanced material and try again to distill this 20% so so once we prepare something we finish a stage of of teaching then we can adjust another 20% and another 20% well as i mentioned it is not the brilliant discovery for everything but if we are dealing with such soft matter like dealing with people or or just having some some fuzzy information we can take this rule it was checked in many many live applications so also for for preparing some some some classes okay so let's start with some teaching scenario so let's assume we have one two three semester of c++ classes in our case at my university i have one lecture for a group this is one and a half hour and then we have a lab the same the same time so for example like like this and we we have one two or three semesters for a course of of c++ certainly we will start with some beginners or absolute beginners so define the main goals yeah so define the minimal set of c+ features as i mentioned for the student remember this 2018 possibility define the list of optional features because you will be agile so if you go fast have something just in in backup but sometimes you need to retract and and go to the to the be beginning again yeah so this is kind of a spiral model i will show you again in a moment so i would say keep things simple but this is not i stole this from from b stra lecture he mentioned keep things simple c is c++ is complicated enough but i would say keep things simple and in proper order so that's that's maybe more precise rule but be agile also when teaching we we know this paradigm of of of conducting pro projects it projects agile scram all these things they they they show up in in be good in in practice but we can also be aile in in so let's keep this ideas just in mind when when we are doing so in other words being aile is not assuming something from for stet you assume something but then you react you see your class how they how they respond respond to what you are doing how how fast they make a progress or they do progress or don't okay so we are at the point of teaching scenarios for absolute beginners well maybe start with with such a thing just make them know what is a computer before we start making software i'm fortunate to teach students of electrical engineers so they have special classes on each device from this from this picture starting from assembly a little bit these days but they know but i have also classes with with other groups so for for them a computer and processor with graphic cards is just a universe of something it is always better to know what's behind so we can start with this and just well it would take maybe half an hour to explain is is not that difficult everybody has kind of a computer then go to this this is api of c++ what is the minimum hardware to run a c or c++ program just a processor just a core with few the the core i started with 30 few years ago was with three registers and and and memory now we have all this hierarchy of memories it is also good to know because if we say okay prefer vector over list so if we say this ex cathedral is just okay someone said this but explain give the motivation so just explaining in terms of of memory access is is is such an explanation yeah but also explain the i would say i call the software development ecosystem so what we are doing and also if if they used to use other languages like python because the the this path is different for the common things and not common things for example debugging is is in every language but not every language is is compiled and linked the way c++ is explain software development step steps like like this what is requirement specification problem analysis implementation testing and and so on by the way you can include also some more knowledge why not to teach about some thinking of computer science like unified modeling language and this is not uh just how to express the algorithm how to draw the algorithm this is how to think and what we draw is just a reflection of this of this thing is just a result but for example use case scenarios so on the way of teaching c++ we we can teach much more giving good examples and just for very beginners we start with something like this just to show you some some some code i know this is terribly simple here but this is our absolute minimum so this is for for my first class if i see people just but amazingly this i would say boiler plate or a template of main and couple of instructions then with the for loop and vector can be amazingly robust if people get good grasp on on them yeah so in other words they can make a lot of good things just with with this simple stuff but explain for example going with the definition of what is an object double it has a name it has initial value but this is not the stop it has some meaning so express has this meaning in a comment start with comments self com documenting code from the beginning then show some web compilers or ids whatever is feits you we are using microsoft visual because it is easier but because these are electronic students so we also require that they can remake everything what they do on windows and linux also in terminal windows in terminal so so they are versatile and the minimum so what is our minimum main function include using dtive st se out in double no more it is sufficient for beginning st scene for for keyboard conditional if vector string for range for useful and that's all so some examples compound interest calculator counting ur of of characters in a text so i have for example like how to make such a histogram this is very good example for beginners we we checked that so people can the idea is you can teach a lot of things in the shortest possible software the shortest possible way so here is the idea well very simple string if if we don't have the input from the keyboard because we are in the in the web compiler then then we can just introduce the string like this then we have one lop st is alpha then we build a histogram and at the same time we are showing how to deal with other data structure so vector is is not only just just a vector of elements but it can be also a histogram and histogram is just an estimate of probability so we are just joining this domain so we are at at each stage we we try to to to teach more we show also how to write the code but then let them choose the the right well way of of writing code later on here is another loop well just just printing the histogram just simple thing so so i will not concentrate on this then we go to updated teaching model so again we think of this 2080 remember that we are based on already made uh lessons classes so we have this we on the shoulders of this of the giants somehow but then when we teach more we'll enter into kind of a spe so this is very similar to this spiral development model for for software projects for it projects so spiral by by bam is just is a development process which is characterized by this repeatedly iterations of a set of elemental processes and managing the risk so if we transcript this into well here's another spiral into the teaching activity not not making software but at the same time well we we have the the same methodology but now undertaking to the process of teaching repeatedly iterate a set of teaching processes increasing level of details so this is what we are doing what about risk management so i would say risk management is when we decide what not to show this is the tough part when preparing materials we have so many things but which is the most important where is this 20% so this is this is the risk maybe because i don't wish my students to have some some hols in knowledge after after my courses but i cannot show them everything yeah so that's that's the point okay so we we are here teaching basics so what we go further with with our list is more data types code debugging members of st vector a matrix example vector of vectors string auto common standard algorithms this is what we are teaching at at this level structures struct references statements functions certainly and struct versus class but only with constructor basics of software testing operators but also tules if we have more time structure binding remember be be agile so intro to random numbers pointers at some point because we have electronic students at some point we need to introduce pointers because they they they need to to to run some software connect to to some libraries i will be mentioning this and some tools see make stood ar at this point it can be earlier that that depends it is flexible list but anyway know your students and their backgrounds so maybe they wish to make game development so you'll go a little bit different way even if we go farther to object oriented and software design so again 2080 rule so consider what what is the the most important present some concept of design testing code refactoring tools teamwork at this point scram for example at this point so another list intro to op anatomy of a class wr references classes with all special functions move semantics at this level templates and generic programming they already use templates using vector but now they can write their own templates virtual mechanism at this point some patterns these are the most important design patterns in my opinion to to teach beginners rapper bridge proxy me me me memory management r what is r unique pointer shar pointer we can introduce and on on shoulders of this what are the more advance concepts what is important where to go from if if we make this let's say second semester so again the minimal list is class hierarchy file systems forward universal references regular expressions graphical user interfaces with some libraries clock chrono inter functional programming st ranges is is is good at this point and for example expression parying interpreter are more design patterns visitor composite is good at this point more data structures like this state machine part very useful for electric electrical engineers yeah if they make fpga for example state machine is a basic data structure and basics of power programming and okay we we teach st power that's the simplest sort st par but also how to use st thread but we concentrate on task rather on on threads therefore we we prefer teaching at the beginning open mp then go into lower level api well the all of good examples and and the swimming so what are good examples this is the most difficult thing actually even more difficult than than preparing the list to to to teach comprehensible certainly not too long you cannot present an example for for 10 screens so everybody will be lost and touch on real problems that's that's the keying and can be extended into more advanced versions so the the the good examples are are this which can be in the spiral model they can be continued by students once they get more knowledge for example on vector on other data structures to maps etc they can continue this the same for example simple database they can make it with graphical user interface and so on so we we don't jump from a project to project we just refine them actually and how a student can use an example just just compile it make it run debug that one way retype and example and make it run because you see the code just don't contrl c contrl v and copy copy paste just just retype it takes time but you will think as as a student how to make it but even better is just remember the idea of the problem in the example and then try to remake it by yourself then you will see what you know or what you doesn't know okay use a startup for your own project so from the projects we present this can be used to for for more advanced projects by students b but now some student projects yeah so they they can make on your own but what is important this feedback they they create the project you give them the note and that's it no you sit down with each in student individually and you do code refinement refinement under the teacher supervision and this is like code review and then then okay give them motivation why why you propose this or or other things so some examples quite fast this is my one of my my favorite still with one main one loop you can make such such a game quite easily then you can make it then you can make it in the graphical user interface whatever we'll return to this example in a moment other examples matrix is is beautiful for for examples vector vectors just for beginners that's a matrix it can be embedded into then into class so okay we we start with this couple of lines and we have a matrix real matrix we can use it we can learn how how to use vector how to use using and and so on but then we we go with this idea okay we have this real matrix vector of vectors but we put it into struct so it we can wrap it up and this is a wrapper adapter actually so we are teaching also how to compose the code something has something inside but this is still structure everything is public and we add a a constructor because we wish to constrain from making a matrix of zero rows and seven columns for example it must be at least one one or one two or whatever but how to check that condition okay there is a comment how to use this class but we can also teach how to use pre and post conditions so this is going into programming by contract how many of you are using programming by contract well i wish i i see more it it saved me my life so so many many times as a programmer naturally that it is just like a fuse in electrical circuit it just fires if something is wrong at the production of your your code of your thinking okay this is different level of just checking yourself with with your assumptions in the code this is not like if in runtime or throw in runtime this is just usually asserts are are gone in in release version but this is just to okay so we we are teaching students this and we have some helpers it is much easier now because you don't need to to call this this data f data size something you just get calls get rows and that's it then we go with with some examples of matrix multiplication again we have a contract checking some conditions we show how to build operator overloading a little bit later so we are in the domain of of functions but we are still an occasion we are teaching some algorithms because people these days they don't know the algorithms many of my students never implemented sord and they are just amazed with the first version of a s whatever it is but let them do it once in a life yeah just from scratch with loopes with some errors then they can call st soft whatever the algorithm there is yeah but but here is also how to multiply matrices then we go with the same example when we teach parel programming because just interchanging this loops affects performance of this of this so and here is the third step we just go into objectoriented realm we have everything private so data is private now we have the same stuff but we need to add operators subscript operator overloaded begin and iterator so we are explaining iterators other functions friends streaming things like this yeah well i will not go into too many details but uh you can you can find this code you have i i i will give you some some some links to this code and certainly we all have some some examples more advanced well such a simple thing for example just just recalculating the the the currencies in in poland we still have lot not euro so we we need to recalculate sometimes it's just simple multiplication so in a main just a one line enter the value enter the value the the the exchange ratio and and you're done right simple yes for beginners but then you can go further on step two would be just just think it's not that simple like this like multiplication well you can sell you can buy the the the currency rate is changing how often i don't know and so we have this this table and how to implement such a table yeah so we can provide such a data structure yeah step by step here is we have a map then we have another uml class diagram remember we are trying to teach more we are teaching software design so we we use uml we have t currency t currency exchanger t currency exchanger can contain t currencies and so on then we go to the code yeah well code is well for example using white strings just to print some international characters is is is is not that easy to make this programmer working equally on linux and windows for example that's that's the challenge sometimes so here are some simple functions just just to show some code and then here's another class with this st map or an ordered mod whatever but we see the private the public so now the students can write the convert functions in this environment but what we wish them to have show the concept of self-documenting code because everybody's just skipping comments there for for some is waste of time no just make the uh self-documenting code and if you are using co-pilot later on or something it can generate you some code then go with another step for advance with the same example starting from simple multiplication so show them components a pattern to to download http file in different linux and windows environments and show this sequence diagram so how many uml diagrams we can make at occasion of of of of some projects yeah and the last step in this development is just at graphical user interface if your components are separated enough you this will be easier going from terminal window to to graphical user interface yeah but we also teach if we have more more time make it in python make it web like and then make p binds 11 or something binders and and and call your c++ engine okay just just some example so code refinements that's remember what i mentioned this is very important students do something then don't stop go with them and show your opinion so you do code refinement very important process example of student pattern well like this this is from students code everything public i'm asking why because it's faster yeah no initialization why to speed up computations yeah so this this are answer of my students that's that's fine what about this yeah well some some card play game vector of pointers i'm asking why because card reference didn't compile well should it i don't know i ask not to use new this is what i'm saying yeah but i found this on the internet and it compiles that's the argument what about this vector of pointers why because card reference didn't compare and this did indeed this is what what a student had so how he or she can explain what what was going on some x memory error point to reference is illegal compiler is not helping maybe the next generation of compilers with ai inside will explain what's going on this is what we are working on as well as as scientists but this is not helping so i'm i'm this is not a surprise for me why the student tried to find the way and and and he did but with many many errors yeah and another way was it was not the idea of the student so so he was very surprised that it can be that simple like vector of in it can be vector of cards yeah well so this this code review actually teacher and student is also like per programming and code review methodologies so well we can build our teaching processes on some good processes from ware development which are checked in in practice yeah so and this is mentoring but the word didn't start today legacy code programmers life employer expectations so how to prepare students for the legacy code what is a programming life like tell me about it can it can we address employers expectations some maybe they're coming to us and they say okay you should teach this and this because this is library we are using in our code base and we are saying but we are not using this we are using other things so this is teaching see that bad maybe not the question is at what point so yeah teach modern c++ but remember of a more complex environment this is sometimes skipped by the by the academia okay by the teachers that the environment is really complicated with all these tons of legacy code yeah so even to to to use open mp open cv g we need pointers we need some unions or even a simple in main with all this double pointers here for students can be intimidated what what's that yeah so at some point we need to to grasp this to to to go into this so yeah they will find some some legacy code yeah how to deal with old code refractor or just i don't know but we can teach some technique this wrapping up is is one of of of the ways yeah so well so when we are teaching c++ we need to introduce this lower level constructions at some point so this is up to us at what point and and what construction so i remember my first job in in programming 25 here or something terrible but i was doing just translating 68,000 assembly into c because one company they had a really big editor on on apples and they were were in in in in deep problems when apple changed from 68,000 to power pc processors so it it couldn't be done automatically so i remember this so this is when i learned how to make old code run or make refactoring to c++ or sometimes we had to cut up the the the old part and and remade it yeah and also some some hints tips let's go fast through this yeah what i would like to mention is learn when teaching so we are just teaching and learning ourselves but in this in this spectrum what i would like to mention is this sg20 group so everybody of you can can help us i'm in this study group 20 and our purpose is to prepare this proposal for study group just uh jc vinl christopher debella couple of of guys we we are split into into couple of subgroups and we we cooperate and what we are doing is just building this preparing context and aim of of of of the guide it is not a textbook it is just a a guide if someone prepares a textbook or or just provide guidelines for content to be covered by courses i will not go into details but if you wish to join us i am in this group i think it is useful teaching materials fast reference fine but it can be intimidating for beginners is everything st overflow very good primary s of any information in programming but also troubles yeah remember some post can be old core guidelines brilliant but to improve if you know what you wish to improve books very good book a little bit outdated very good book this is quite new version of bj ster book but maybe not for beginners it's just for someone already programming in c++ but trying to get into modern c++ what other books i like this two but i wrote this one so if you are interested in in just a textbook with this three steps of semester one two three just you you can get the code for this one semester second semester third semester and some on computer arithmetic and and power programming as well and inner appendix prep processor basics of c cake git such a tools explained in appendix but here is the game changer large language models yes so what about this we have also this copilot we can you can use it yeah so here is my well experience with with the chart gpt so let's let's start with some with some examples can you show me me how to write a simple example in c++ well that that's it in a few seconds see out hello word and also it is explained what is hash include what is int main things like this even how to compile this with something what is this g++ okay if i know what i will do this but maybe i don't but anyway i can ask what is g++ and so on and so on probably if i know what to ask i will give the proper answer but what about can we implement an simple terminal based game yeah because i i know for main so i am a student that's it yeah in a moment few seconds yeah that's that's the the the second part yeah and also explain what about this secret chamber that's the challenge okay wow this is what i wrote and after 10 my it iterations 10 minutes i got this well not the way i wish it but it works it doesn't crash but if i were a student well can i submit this as as as my project or even if if we program in the companies i sure it is copyright free and the second maybe more important is it correct yes so maybe not well i wrote a question in in polish language that's well that's also very good thing is remember this is large language model so it understand languages our languages and computer language so it can be useful well why do we use rand function my teacher says it is outdated and that we should use well and and he's said that the teacher is right we should use stud random and so on with examples i'm i'm glad well so i have so not too many minutes left but let's let's go to to some well we we have we can talk about chat gpt for an hour or more but it it is a real revolution it's it's not only a tool we are just well 10 years ago i i published a book on and computer vision methods machine learning and it is outdated good stuff some tensors mathematics principal component analysis with mlii i had to change totally my laboratory my thinking so this is also going into programming in some way i don't know what way but some says they don't need junior programmers yeah so boss is happy i will fire you all yeah but the question is if we are talking about teaching so maybe they they need senior programmers but can you be a senior not being a junior before that w so ch gpt in my opinion will not replace a good teacher with a good lesson plan yeah so it can be it should be treated as a tool like well maybe like older colleague who knows better but certainly so can be a supporting tool but the key for students is to understand the code and to be able to control and all of us what ch gpt is proposing actually the problem occurs when someone instead of programming doing the stuff himself or herself takes shortcuts yeah and uses chat gpt and only copies the solution yeah so we need to be sure that we are not just making students to learn only how to make prompts and copy try without understanding what's what's going on this is very very important so we allowed to use this but this is the first what we are telling them how to use it yeah so now we are at the point of general conclusions from my my talk so i'm almost finished so the quality of software of the future depends on the quality of education today so it is true and probably will be true in 10 years so that's probably important and we all are students and many of us are become teachers on many occasions not only at academia but in many situations so the thing is know your student students their needs and wishes well organized the classes give motivation at work also these are all your students in your team think of choosing the right features to teach with this maybe 2080 rule maybe it is useful for you maybe not well i'm using it to to some extent therefore i i i i i present it provide good and practical examples so to have good examples think of them ahead of your classes when you program something and you find something beautiful c++ is beautiful yeah so if you find something nice and interesting just copy it okay just copy it for for a potential example then prepare for for for teaching this is the good way keep things simple and in right order be agile not in software projects but also when teaching teach in a repeated manner increasing the level and details remember about the spiral model it pays off teach not only c++ but c+ plus in the computer science framework so this is software design uml data structure algorithms we can do this to some extent don't forget about the programmers company's reality so show how to connect to the some libraries it is like legacy code and chat gpt is a great support tool but it will not replace a good teacher with a good lesson plan at least not yet keep on self-training also always increase skills of your team watch attend lectures so this is what we have doing and last thing i i asked a question in my title is it a job of a mission sometimes it is a job but best for the students is if they meet someone passionate about c++ like we all are thank you very [music] [applause] much some questions maybe yk thank you very much for the talk you touched on some of the methodologies of approaching writing code you touched on uml for example or understanding the domain around the problem you actually trying to solve but once the conception has been done once the code has been written there's also the validation phase usually in software engineering what's your experience with teaching things like test driven development or going into testing frameworks and stuff like this so how do you actually write not just elent code but actually functional correct code yeah very very good question yeah we we start from the beginning by step by step so the first thing is debugger is your friend so this is first thing and then we at at some point and in the well not very basic level but but when people can can can write something pend some libraries make a project we use some some platform actually for for my classes i use preferred g test just to concentrate on something but at the same time i i'm telling students that there are many other platforms you can if you wish you can use another one and we we also present all this it was on the on the beginning with this uml diagram activity diagram all the steps of software production are required even in our classes but with different focus so always is the step of of problem analysis don't don't write something because we we wish to to write at the beginning just think take a sheet of paper and and make an example of even with this matric is example something yeah then go to the code then validation and so on but certainly well for real stuff like continuous integration we have different classes about methodologies of projects for for this is not we are teaching at at c++ classes but we have lessons on this okay do you think it's beneficial to split it up into two different classes one about a c++ programming and one for testing because in in my experience it has been always beneficial to say testing in what form or whatever is an integral part of writing code this is what we are saying if if you take a look in in my code this is on on the on the github you you can google it up with my name or well probably somewhere here yeah you will find that that we add this g test quite early to the to the examples and we require then they have a home assignments for for half of a semester and i require from them documentation and the test as well okay thank you very much it goes on together i have somewhere this list oh here it is you can okay yep so do you think we should consider some prerequisites for teaching c++ and i mean you're talking about like learning or teaching from scratch right and i would add to this do you think we should limit this i wouldn't say we limit they think it's really the optimum way to do it that we teach that to computer engineering or computer science or electrical computer electrical engineers or well this is the question of of of motivation why they are here yeah if if someone is is trying to to become an electronic engineer this is our responsibility to to to to make a plan for for these studies and we decided that okay we decided that that it is important to teach some some some programming languages so for example they need to to to cooperate with operating system with linux make the embedded system so they need to program so therefore we we chose c++ back years we started with c then moved to c++ now it is vice versa we start with c++ this is very important to make this mental process modern then we go to c this is the way okay and also about the modern c++ would you say that we should stick to one version well not too modern okay so don't don't go with coroutines on on your first lesson okay well in in this book i i stopped on version 17 i mention ranges it is like with software development at some point you you need to say that finished yeah this is the the the the line yes yeah yeah so that's that's it and do you have a rough figure of the teaching hours like estimate teaching hours as i mentioned we have different assignments for one semester for two semesters or for three semester so depend ending on on this assignment you plan your your your classes and usually this takes one lecture this is one and a half hour more done today and this this talk and one and a half hour lab and also the project assignment for for self for students from self doing this yeah thank you this is like this at least at our university hello i've been entrusted with an apprentice a few months ago and i find find it very difficult to explain abstract concepts like design patterns yeah because i think the student doesn't have enough knowledge already to intuitively get that or make a mental map of that so i've been wondering how do you go about that very good question yeah well just provide real examples so what is the way to remember design patterns maybe this is not your experience but my experience was when i was reading about design patterns just to try to remember some real example when this handle body is useful so for example the first pattern is adapter what do i show in in in in this classes so this is a wrapper so i'm showing okay you can use vector vectors like a matrix but this is difficult this is difficult but when you wrap it in a struct it is easier so this is how to deal with old code and you go on then you show okay i can make something like a uniform class everything is we call this fat class everything is one class yeah but if you deal with this http connections with linux and windows so it is good to separate representation from implementation well it pops ups it is a bridge or handle body yeah so just always remember remember some real examples then you will remember the design pattern and don't go too fast because there is the other way people learn design patterns and they are very keen on putting this this or the other design pattern into their code even if it doesn't feed so this is you know just step by step thank you very much thank you for the great talk about that very important topic unfortunately we are out of time now but for anyone who wants to discuss about the topic about learning c+ teaching c+ a little more we got a track tomorrow in the lounge at 1020 so anyone who's interested to talk about that some great join us there i will be there thank you great thank [applause] [music] [applause] you