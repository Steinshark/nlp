so this video is gonna show you how to use mongodb with python and the python module pi now mongodb is an awesome database it's super easy to get set up and in this video i'm gonna be showing you how you can get 500 megabytes of free data in the cloud that you can use for any applications that you want so let's get ahead go ahead and get started setting up what's known as a cluster and then we're gonna start working with the actual python code and seeing how we can do different operations on our database retrieve information delete information add information all of that kind of fun stuff now just quickly before i move too far i just want to say that this is a beginner tutorial so i'm going to be showing you just kind of the basics of mongodb it's capable of a lot more but if i were to show you everything this would be hours long so i'm hopefully hoping this will take about 10 to 15 minutes and the python code i'm gonna go through will just show you the basic operation so like add search delete and find modify update that kind of basic stuff so that being said let's get started so we're gonna have to head over to mongodb comm and create some kind of account here now i already got one but what you guys need to do is just go ahead and click sign up or try for free and then it should bring you to a page that looks like this that is obviously once you've created an account so what we're gonna do is go ahead and click build my first cluster and now we're gonna select some options for our free cluster so you get one free cluster with mongodb in the cloud at least and you can also host this locally on your own machine but that's a whole different process that i'm not going to talk about today so i'm just gonna go ahead and stick with the default here so amazon web services north virginia obviously you're gonna want to pick the free tier that is closest to you so you get the lowest latency to your database but i haven't had any issues with speed or anything like that now obviously if you want to you can update some of this stuff and you will have to pay for it on a monthly basis or an hourly basis or something like that but i'm just gonna go through the free tier in north virginia and click create cluster now creating your cluster does take a few minutes because it actually has to set up and allocate some space on a physical machine for you so give this a few minutes should take about 710 that's what it says here and once that's done we'll get started working with the actual cluster alright so now that our cluster is created we're gonna go ahead and set up a sample database to start and then choose some connection options so we're gonna click right on cluster 0 right here we're gonna go to collections and then we're gonna create a new database so to do this right click add my own data and now type in a database name and a collection name so databases are like specific to your application at least that's the way that i typically do it so let's say we have an application maybe my disc or bought for example i would name this discord and then inside of collections that's going to be the specific information associated with that database so these are like kind of sub lists of the database so maybe you want to have your information organized by like users messages connections something like that whatever it is then you're gonna have three different collections for that now in our case we're just gonna have one collection and one database and i'm gonna talk more about this in a little bit once we actually get to the code so i'm just going to name both of these tests and click create you don't need to cap the collection although you can if you want so we're gonna do that it's gonna take a second load up and now we actually have a database and a collection so you can see that this right here that's showing is actually our database and then this is the collection and you can create new collections by just clicking add here and then adding a new collection like that so once we've done that we're gonna go back to project 0 and we're gonna go to this connect option under cluster 0 now this is pretty straightforward and it kind of walks you through exactly what you need to do the first step is to whitelist your ip so there should be a little button here that says whitelist ip just click that if you're gonna be working on a different computer again need to whitelist that ip as well this is just the allowed ip addresses to access the database then we're gonna create a mongodb user so that we can login so in this case i've already done one but just fill in the information user name and password next choose a connection option we're gonna go to connect your application we're gonna change this driver to python because that's we're gonna be using select the option or version you're gonna be using this case 3.6 or later for myself and we're gonna click on copy now once we've done that we're all done everything we need to do from the web browser side and it's time to actually run into our python code so i'm just paste that connection id that i had right here in my python code and now it's time to install the python module pymongo so to do this we're gonna go to our command prompt and simply type pip install pymongo now this will take a second and i'm assuming you guys already have pip installed on your machine it comes default with python but if for some reason your pip does not work leave a comment down below or click on the card that i'm gonna leave in the top right hand corner here it'll show you how to fix this command so if you type pip and you get something like pip is not a recognized command click that video it'll show you how to fix this alright so now that we have pymongo installed as our python package it's time to start working with it so the first thing we're going to do is import pymongo from the top of our code here and we're gonna say from pi import client now what we're gonna do is setup our initial connection to what that cluster is so that cluster is the first thing we created and what we're gonna do is we're gonna say in this case i guess we just did cluster is equal to client and then in here we're gonna put this url that we had inside of quotation marks so we'll put that in here and we just need to modify this slightly so where it says password in here where you're actually gonna just type in your password now my password was just 1 2 3 4 so i'm gonna put that there and for any of you that think you're just gonna go and mess with my database i'm obviously deleting this before i've released the tutorial so go ahead but you won't be able to now after we do that we're going to define what database we're working with and what collection we're working with so this is the connection to that actual cluster so the machine that's holding our database but now we have to pick what database we want so i'm gonna say db standing for database is equal to cluster and then just like you would index something in a dictionary we're gonna put the name of our database which was test inside of quotation marks inside of brackets like this now we need to choose our collection that we're going to be working with so now we've gone from client to database now collection so we're going to say collection is equal to in this case db and we name that one test as well so we'll put test right there and now we have access to our collection and we can actually start adding some into our database so the first thing i'm gonna show you is how to add something so to do this what we're gonna do is take collection dot insert underscore one like that and we're gonna put in here what's known as a post now it's time to talk about what a post is so the way that things work in mongodb is we have starting with our cluster which is kind of that space in the cloud then we have a database and a set of collections now a collection is kind of like a mini database that's the way you can think of it and each collection contains what's known as posts so you can think of them just as entries but we call them posts now posts have a few properties associated with them they look like a python dictionary when we're dealing withwith them in python code or like a json file or something like that and they always have what's known as this underscore id tag now this id is how you're actually going to access all of these posts so you want to make this something meaningful now when we start creating a post what we essentially do is just create a bunch of dictionary keys that map to values so in this case i have underscore id this is going to be a property of my post or an entry or some kind of information associated with that post and in this case i'm just gonna set like id 0 ok now maybe we want to have some more information in this post and we're gonna make me call this name so i'm gonna do name and then i'll set this value equal to 10 maybe i want to have the date or maybe i want to have some kind of number associated with tim maybe i'll do like score and this is going to be equal to i don't know let's say 5 so this is how you create information and as a post in mongodb so again we go from database to collection to post and then inside a post we have these fields we always have this underscore id field and if we decline to give it a value it'll automatically generate an id for us or some arbitrarily arbitrary number and then we can give some values here like name is tim and score is 5 so now that we've created this post i'm just gonna call this one post like that what we do is we simply insert it by just doing collection don't insert underscore 1 post now if i actually run this code and we look at our database you will see that i insert a post that looks like so let's go ahead and do this control b to run our code no output obviously because this is just gonna work now if i go and i have a look at my cluster and i go inside of collections and we go to test you can see that we have a post here and this is id 0 named tim score 5 now these are also called documents i kind of just call them post because that's what they do in the tutorial but they're known as documents or posts whatever one you want to call them and they have fields associated with them so id name score now i want to quickly show you what happens if i don't add an id so let's say id now insert something so named tim score 5 and i run this code now if i go and look at my database what you can see if i refresh this is give it a second here that we just completely create some random id which is known as an object id and obviously this does not mean much to us so i recommend that you always create some kind of id when you pass in a post or a document or whatever you want to call it into your database but again you don't have to one will be created for you if you do not alright so now let's talk about some more things that we can do with our database alright so another thing we might want to do is insert more than one post so to insert multiple posts and actually as many posts as you'd like what we can use is the insert many methods we're gonna say collection dot insert underscore many and in here we're gonna put a list of the post we want to insert so really easy straight straightforward similar to before where a new post one and post two which are two posts i've just created here again we're just gonna make sure they have an underscore id if you don't give it an underscore id it's gonna generate that gibberish that we saw before so i'm gonna run this we're gonna wait a second and have a look at our database and see what we got so we gave it a second and now you can see that we have id five joe id six bill alright pretty straightforward that's how insert many works next thing we're going to talk about is find so something you're probably gonna want to do with your database is find information now to do this we're gonna use what's called a query now query sounds all fancy and complicated but it's actually really easy and the way that this is set up in mongodb just makes it super simple so all you do is you put these dictionary things here like this and now you're simply just gonna type the attribute or the field you want to search by and you can search by more than one field so in this case maybe i want to look for a post that has the name bill well what i do is i put a name here and then i put the value that i want to look for so in this case we'll do name and we'll do bill and what i can do here is say like results equals collection defined and then i can print out results like that now if we give this a second we'll run the program and we'll see what we get by running that so we get this mongodb cursor object so obviously that's not very useful to us we don't really know what that means so if we want to actually look through all these results what we need to do is loop through them so we're gonna say four results in results and then we'll just simply print result like that and now let's see what we get so if we do that now you can see that we get this dictionary id six named bill and that is the result that we found now say you just want to access an individual element here so maybe you just want the name or maybe you just want the id of this result well you just do it like you access a dictionary you put your bracket so you put some quotation marks and then you put the field so in this case maybe you want to access what the id of our result was so we'll just put id run this and now you can see that it prints out six now if we had more than one attribute or document or post or whatever you want to call in our database that have the name bill that would return all of the results that meet this criteria essentially so this would give us more than one result to printing out now if we want to search by id what will end up happening is we'll just be finding one document so in this case we do underscore id and then here we put whatever our ideas so maybe our id is five again loop through this and i don't know let's just print it out and see what we get well obviously we get the id of five all right so that's kind of how that works for searching now if you want to do more advanced searching and finding you can actually use regular expressions so i could do something like name and then i'd actually don't really use regular expressions at all so i don't really know how to use them but you can just put a regular expression inside of quotation marks and it will search for anything that meets that criteria now if you want to search for what do you call it like different things as well like you want to search for name and id and maybe a date or you want to search by multiple fields all you do is put a comma and then put the other field you want to search by and it will return those results so you guys can mess with this and figure out how it works pretty straightforward and pretty simple now this gave us a cursor object which meant that we had to loop through all of our results but sometimes we just want to find one result so if we just want to find one result and we're certain that that's in the database or whatever we can just do fine underscore one and then what we can do in here is the exact same thing as before so we can just query by whatever we want and try to find one result now the important thing is here that we you're probably going to want to search by id because if you find more than one result i believe this returns the first one but it may actually run into an error so obviously if you're doing find one you're gonna want to make sure that you're only gonna find one so let's go by id and maybe in this case i go by id zero and see what we get as that results so let's do this i'm sorry i'm gonna have to print results and here otherwise you're not gonna see anything and give this a second and now you can see i don't have to loop through it to see the results i can just simply have a look at this alright so next thing after find and find one i actually started before i move on i want to show you guys what happens if you find and you don't put any criteria in here so if i just do find and i do that we'll have to go back to this looping example so we'll just say for i don't know x and results print x what happens if you just put brackets like this obviously this means you have nothing you're searching for but what it ends up doing is returning everything because everything fits this format of just being a dictionary so it's gonna return everything so if i do this and i don't know why i'm going to command prompt but i can just run it like this you can see that we print all of the results in our database and we get all four objects or documents or whatever is there so that's how you find that's how you find one and now i'm gonna show you how we can delete and then finally replace so to delete something is really simple as well all we're gonna do is just go in this case results equals collection dot delete and if we do delete underscore one and then in here maybe we'll do like hi underscore id : 0 well again it's just gonna find the one document that fits this criteria and delete it so let's go ahead and run this give it a second now if we go into our database and we have a look here we can see that id 0 has been deleted from the database so that's as easy as it is to delete more than one document we can do delete underscore many and then we can fill whatever criteria in here we want so maybe we want to delete all the ids that have 5 or maybe we want to delete any name that has bill or maybe we just want to delete everything by putting this in here well if we run that then it will delete everything from our database so now if i run this can i have a look here and everything is gone so a powerful command don't abuse it but that is how that works now i just realize i'm gonna have to add some stuff back in here because well we need to do some more tests so let's would he call it insert underscore many and just insert post one and post two here just so we can actually do some more tests and make sure that this is working so let's run that and now what we're gonna do is update and replace so sometimes you want to update entries in your database you don't want to just delete them and re-add them or have to do any stuff like that so what we can do to do that is update so in here we can say update and now again we need to update many or update one in this case we're just going to do update one and what we'll do is we'll do a search query for what is the document we want to update and then we're gonna add what's known as updates what does it update operators or something like that it will tell us what we need to update on so i'll show you how that works in just a second so if i put underscore id here and let's say we update what ids do we have id 5 now what we're gonna do is we're gonna put an update operator which is i'll talk about them in this second here so something like set alright and then we're gonna put a colon and the value we want to set so i'll show you how this works but looking up the documentation here so essentially what we do is we have something like increment or min or max or mol rename these are the different update operators for fields there's some update operators for arrays some update operators for modifiers bitwise i'll leave a link to the description down below but these essentially do what they say they do so set will set the value of the field in the document which we will define set on insert will do what this says unset will remove a field max will go to the max value of that field increment will increment it by a certain amount so if i show you guys how this works here essentially what we do is we go set and then we put : we put whatever the values we want to update so in this case maybe we want to update let's say name and we want to change that to be tim well that's all we do we do set name tim now if i run this here like that and we go into our database you can see that we've actually changed those things that were added so now we have an entry that says tim so there we go id 5 now says tim instead of saying whatever the other one did now if we want to add a new field here all we do is just write the field in so let's say like hello and maybe that's equal to 5 and we let that run well now we'll add a new field called hello and that will be a part of this document and give that a second and now you can see that we have hello and 5 so that's as easy as it is to update fields really straightforward if you want to update more than one you can do update many and then same thing here you can just change this to be what do you call it like something that will access more than one document and then this will stay the same whatever you want to set or change or update or increment or whatever that is will happen there so let's say i actually want to increment hello i'll just show you how this works quickly so i go increment and then i go hello instead of now just setting it to 5 what's actually gonna happen is we're gonna add 5 because increment means increment by whatever this value is so if i run this by hitting ctrl b we go back here we refresh now we can see that we've actually updated hello to 10 by using that increment set operator or update operator sorry and you can see all these are here again link in the description all right so the final things that we might want to do is actually count the amount of documents that meet a certain criteria so what we're gonna want to do to do that is you use count underscore documents so i can say post underscore count equals collection dot count underscore documents like that and then all i do in here is put some kind of query so what documents i want and if i print out post count it'll give me an integer value for all of the posts or documents that fit that criteria so in this case i'm searching for everything so it should just give us however many documents we have in there so let's go ahead and run this and you can see that we get two because again we only have two documents that are in our database so that is kind of as easy as it is to it you can see that everything is pretty intuitive we have count documents we have insert many insert one replace all that kind of stuff anyways i hope you guys got some value out of this video and now you're able to use pi and mongodb again a really awesome resource really easy to use for your own personal projects you want to host some stuff in the cloud you guys have any questions don't hesitate to leave a comment down below we're joined by discord server message me on twitter message me on instagram i'm always helping out people in that way and finally if you guys did enjoy the video and got some value please make sure you hit that like button and subscribe to the channel for more content