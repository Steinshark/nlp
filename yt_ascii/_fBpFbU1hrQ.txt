why everyone hates php and why you should too i you know i feel like i i could like php let's just say it like that php is terrible between all of the programming languages that have ever existed few of them are as hated as php is this programming language is hated by the coding community while still having a loyal user base but why is php hated by the community and is it actually as hated as the internet makes it look like you'll find out in this video where i'll also bring my php programmer friend who will tell us his opinion on the language and how okay real talk i think php is better than javascript like you guys think php is is worse than javascript have you seen how good php has gotten go watch the aaron francis video then come back to me and tell me about that okay the thing is is that if you think if if your version of php that sucks is version 5.4 you're right version 5.4 sucked but php today is not php from 10 years ago okay it is very very very very different but dog php runs most the internet that doesn't make it good okay that's not a way to sell me on on its goodness he thinks the language is actually overhated and pretty good php was created to be a general purpose scripting language made for web development it was originally created by danish canadian programmer rames okay that's entirely too many you danish canadian like does that also make you french by by by canadian roots should you toss up three flags up there how many flags does it make man get door in 1993 and released in 1995 it handles the back end of websites and is generally used to handle form data managed datab bases and create custom content for websites programming languages are supposed to offer a vast number of possibilities syntax algorithm that's what makes the beauty of it when learning python you can easily make any program you want that is not the case with php it's often criticized for its ease of use and lack of opportunities anyone can code in php and many inexperienced developers pick up the programming language and start writing functional but problematic code which is difficult to is that true i mean there's a lot of statements that just got said there that i i'm trying to like i'm trying to unwind okay first off python python easy yes python very easy it does python become hard yes python become very hard large python program very hard me grug brain me can't handle large python program large python program very hard is php hard php has gotten very interesting php has traits okay that makes it a completely different like that that changes it it's on a trajectory that's very exciting can you make php a mess yes even back in the day it was pretty easy to make php a mess but it was also really easy to actually have a decent organization in php like i made some pretty large programs in php and when i said large this was remember this was 200 this was 2009 internet backend okay these are not like large backends were not that large and i was sitting at like 25,000 lines of php library code and it worked pretty well and can we just just be real for a second the lamp stack sl zamp if you're on windows that was pretty awesome that was a pretty great environment anyone who says the lamp stack was was bad you you suck it was pretty dang good most of the internet applications that are horizontally scaling that have micro services that have all the latest things that has that drizzle or m feel on top of the keyley planet scale turo all this stuff blah blah blah blah you know what most of you guys have zero users anyways and so it doesn't really matter what you choose for your stack you got nothing and you have more servers than you have users and it probably doesn't matter as much as you think it would does as much as a very simple simple application just a little bit of php a little bit of my squeal bada bing bada boom that's i did my first startup i'm just saying phb has turo lib now okay php is awesome turo is actually really good again by the way i'm going to be starting a series i type one in the chat if you're excited about this i was sitting in a room with with one of the founders of turo and he's an old linux contributor he's been contributing to to linux for for decades and he was telling this story about how time goes backwards due to how the crystals work and how the resolution of the algorithms work and it just goes on and on about how like just like these crazy bugs were coming up in the linux kel due to time and i'm sitting there thinking you know we're missing we don't have the the oral tradition for all these just funny things that happened we're kind of missing that goodness maybe we need an oral tradition of just the dumbest things ever so you remember that one post where a lus completely tears apart that one guy that's like your cod is always [ __ ] you're always these things bl bl blah blah blah turns out that guy is good friends also with the founder of turo and he's going to come on the show as well and we're going to talk about it we're going to hear about these things we're going to hear about like the re the the good stuff we're going to hear about like the things that there is no story around there is no one knows it except for the people that lived through it and that's that anyways sorry very excited about it so one if you like that idea i think i like the idea personally the lore i just want the lore i just want lore php is good php is good dhh coming i i would like dhh to come on here i i think it could be i think it could be some of the best uh tech content of all time it's just deep lore that just you can't get the only problem i see with the deep lore is i feel like the deep lore is only best talked about at 900 p.m. at night after two brazilian mojitos okay i forget what the brazilian mojitos are called but you know i feel like there's like this there's just this time you know like there's a certain mentality you have to have understand and really messy without forgetting the lack of security in the web apps that result from that i mean php is a programming language like any other you can make anything you want with it but the difference is how you can solve problems in those lang wait what didn't you just say that you can't you can't solve every problem php was originally designed with a focus on web development and its primary use case is evident in its architecture while it is possible to create command line programs in php it wasn't the language really you can fully just create command line programs these days does that mean we get an exe you sweaty nerds or do we still get code do we get code or do we get exe which ones do we get yeah the campfire code stores yeah this is what i want it's something that i've been really thinking about you get code see i just want the exe you smelly nerds a zip you want to give me a zip dude there's nothing that triggers normies more than a tar okay if you tar if you if you tar bz those sons of [ __ ] oh man you just crossed a line that you can't come back from intended purpose additionally early versions of php were known for their somewhat makeshift nature ramis lerdorf initially conceived php as a template language for his web pages which influenced its early development i can go on reddit and write that i want to learn php and most of the answers will be to go for another programming language and get a greater return for your time they are not wrong since its reputation has taken over and people tend to recommend more modern and suitable languages just like python to beginners so why but like that's the thing you know they're saying that but again php has some of the most modern language features these days new php is more modern than javascript so what's that all about i waste your time learning that language well to see that let's analyze a snippet of php code together we're first going to start by installing the language and here is a sample code that will run this is a simple login page made with php and as you can see the code is hard to read this could maybe come from me i mean you just sped it up super super fast it's really not that hard to read it's just a template you're just looking at a template that doesn't feel hard i mean real talk that doesn't feel hard templates have never been hard templates are really easy okay they generally are just super easy i you know when you give me a 400 line function that's oh react with hooks and a bunch of use with use effects and all that [ __ ] in there and a bunch of components that it calls out i find that to be pretty hard to go through like real talk i find that to be really difficult to go through a bunch stuff have you not had have you not worked in in in professional environments you go into see the thing is is react and and some of these modern some of these modern ways of doing front ends are really nice until you go into a into a a program that's been programmed for the last 3 years and all of a sudden it's not nice anymore all the nesses died because that one product manager really wanted that one feature and then it completely destroys your life okay and it makes you emotionally painful and then people have have to naturally take shortcuts and those shortcuts end with just abominations that exist okay they just exist and it's okay it happens i'm not upset about the abomination okay but to just simply say that that previous thing was bad and nothing else was bad who hurt you i've been working in the industry for like 20 years okay that's who hurt me the world real products actual million line code bases okay they hurt you because that's how it works okay this is just what happens if you've never taken a shortcut on top of someone else's shortcut on top of someone else's shortcut on top of some system level bug to cover it up you have never done professional programming okay all you've done is greenfield weak sauce programs you need to be in the you need to be at the place where your comments are jira tickets and your jira tickets have a history of changes referring to other jer tickets for every shitty decision you've made for the last four years running okay that's real enterprise programming bro i created lola bro okay absolutely upsetting you guys me not knowing the language enough but the language is well known for its lack of strict structure and conventions which results in inconsist i believe there i mean i do feel like this was a super unfair comparison and i assume that this unfair comparison was made such that he's going to come back with his friend and his friend is going to say something that like kind of changes your mind because that was was just like look at the templating it's bad programming it's like yeah but that's just the templating part there's still like this whole there's still this like whole other aspect to life and difficult to maintain code auditing and maintenance become really hard well i mean just imagine coming back from a week of vacation and taking a look at that this has definitely contrib can't i feel i can't tell if he's being real or not i'm just waiting for the turnaround right and gotcha right because that's dude imagine going on a week of vacation and coming back coming back to this okay imagine trying to do math on on partitioning virtual boxes again okay look at this to-do i hate this interface i forgot to remove the to-do i now like the interface cuz i created a quadry parameter which has row depth columns and stride i use the term stride attributed to the negative outlook on the language and its bad reputation if you've been watching this long and have enjoyed the video consider interacting with the video in some way it helps with the algorithm now anyone can understand that if a programming language has high demand in the market and will make you good money and i'm not going to waste your time it doesn't most companies aren't looking for php developers anymore resulting in videos like php will make you poor by fire ship where he says that like right now if you're struggling to get into the industry and all you know is react and javascript java c php go like there's a lot there's like a lot of ways to start getting no i wouldn't say rust because rust only has like four jobs and they're all in cryptocurrency so like that's like you know you know that's it's a thing that you should be aware of goal actually is a shocking is probably a good way to get paid really well if you got if i i'm i'm talking about jobs okay real jobs you wouldn't understand if if you wanted to get a job and make some serious ass money okay ass- money kind of money or ass money honestly cobalt's probably the way to do it you could get paid like 400 grand within a year it's crazy it's actually crazy but the thing is is once it becomes a hype it will immediately crash and it'll be worth nothing so it's kind of like this really weird it's like this really really weird zone that it lives in nobody wants to learn it so it continues to be super valuable but if you do learn it you're going to make a lot of money but then if everyone learns it you're going to make no money it's crazy html programmers make more money than php programmers and we can definitely all agree that html is a programming language right well php can't be so bad right well no the language has its ups and is made for a wider community explaining its simplicity now my friend will tell us about his experience with php and why it's not actually as bad as people make it out to be i started using php in school it was pretty difficult to write a complex codes for a dynamic web i'm laughing because i just figured whoever was going to be coming on was going to be someone that was like maybe really well known in the php world it's just a dude writing php it's pretty great i mean that's pretty great dude here's my friend he writes phps he writes the phps just some dude this is pretty greates because of the syntax our code became very unreadable but then a few years later i stumbled upon lille a powerful but simple framework utilizing php to create web applications nl convinced me that php isn't bad at all i also did some scripting and i learned a lot from it plenty of libraries to build whatever you want in an efficient and secure way if you want to learn php to keep up with the industry no problem but nowadays javascript and java are at le javascript can be used for anything including strong back ends which can perform very well well conclusion of the video don't learn php let's just say it no the the the the the conclusion of the video was wrong the guy who just said that was wrong he just said that it creates high performance back ends that's not true it's not true at all he just said great laurel was and then he's just like java javascript car carpet like just make it go dude this it's just not true i think php is a great language there you go am i going to use php anytime soon probably not do i like php yeah i actually do kind of like php if i decided to go laring today and just write some some code that's unusual i'd probably go write in php cuz it'd be fun you know what it would be fun i just don't agree with this with this t take in the video i just don't believe it i think that that you need a little bit more substance in this because php you can't show you can't show templates and then be like look how bad it is cuz like if i grab any go template and show it to you or any template or just a bunch of jsx with use effects and scroll really fast you're going to be like what the hell am i even looking at there's so much of course it won't work right that's a hot pick of elon that is some hot elon right there young elon so hot the name is young elon so hot h