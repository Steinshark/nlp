how many old machines do you have out of interest i don't know i have a few back stations i have a larger vx which was from a friend i have another pdp-11 which is much smaller than this one it's designed for controlling a robot arm in a nokia plant i think pdp-11s are particularly interesting because it was the machine that unix was developed on and then probably also see after that you know they're building c on top of unix so quite a historical machine i think this is a pdp 1173 in a 23 plus chassis i think it runs at about 14 megahertz it has one megabyte of ram it's using this scuzzy 2sd adapter but at some point i hope to get my 10 megabyte rl2 drives which are about this sort of size but twice twice the height they're not working at the moment so are they hard disks and is that yeah they're removable platter disks so each platter has 10 megabytes and you can switch the platters between each drive it's kind of a mixture of of two machines i mean it has ram from one and a cpu from another but probably around 1983 so it's one of the later pdp-11s it doesn't have the toggle switches on the front for example so we can actually pull these cards out i'm going to disconnect it from from the mains i think it should be fine anyway but i will spin it around i'll just remove these ribbon cables and then yeah so we'll start from the bottom and then actually discuss them from the top that's terrifying doing this it looks pretty straightforward though the system of connections and everything yeah so actually what's going on in the back here is just it's just a bus there's just cards connected together in fact you have to have a card in every slot if you want to use the slot below it traditionally these would have been wire wrapped i think on on this machine it's it's soldered so this is kind of mass production pdp 11 as opposed to to handmade so this is the pdp 1173 processor one of these i think is floating point any other one is just just general arithmetic and you know standard move memory kind of instructions most of the logic down here is just for communication with the bus you know getting the voltage levels right and things like that this one has two serial ports and some status lights it's called a multi-function board so it actually has 128 kilobytes of ram separate from those it has these boot roms so you don't have to type in assembly programs basically to to boot from your disk and it also has some sometimes some kind of real-time clock as well which is useful for keeping time and things like that this is the first memory board it's half a megabyte and there's another one of those one of the interesting things about these machines is that every device has been allocated a part of memory and you actually configure the memory address of these boards by wire wrapping basically binary numbers onto the jumpers in my early memories of pcs we used to use dip switches is that kind of the same sort of thing it's a bit like that but you end up wanting to connect a lot of jumpers to different ones and every board is different so if you don't have the manual you can basically never get them working but a lot of the manuals for these machines have been archived actually which is great so the starting address of this is is zero it has it has 128 kilobytes of memory on it so it starts at zero this one then starts at 128. this is a clever board it does actually have dip switches this pdp 11 is a complete frankenstein of a machine so when we go to the center for computing history and talk to jason about some of the old machines it seems to be the case that they all are i mean these were functional things that were used weren't they yeah yeah they were just i mean i bought this card separately off ebay it wasn't that cheap either unfortunately but with without it i don't have a working disk which i could boot off well i have working disks for scuzzy but i also have you know an ro2 controller and a tape controller but i don't have these devices to actually boot the machine from so this one communicates with the disk so i could plug a normal deck scuzzy drive into this by deck i mean digital equipment corporation the people who make this a machine or made it they were sold to compact actually we can type in some basic programs in assembly well actually there's actually an octal and then once we get bored of doing that because it's a lot of work we can boot into unix and maybe play some games and show you roughly how similar it is now to modern linux and unix so i don't want to get those two cards filled up shouldn't we have static wrist straps on it at this stage probably but the nice thing about these machines is you can usually fix them when you kill them so it's just a bit hard but that's actually part of the fun of it if you just have it boosting unix i mean i can send email and where's the keyboard and all that sort of stuff the keyboard is all the way over there so this is actually kind of similar to what you would have in a company you would have maybe 16 or so terminals hooked up to a single pdp-11 and you would access them remotely because it was too expensive to put the hardware next to the terminal so everyone would share a single machine which i it's kind of coming back now with cloud computing and things so it's clearly a good model so okay so that's my virtual rz23 driver oh so that's that's pretending to be the hard disk yeah it's actually designed for an amiga backup [music] i will reset it because i want it to be in a mode that we can type there's a reset switch and that's just for you know basically hard resetting the machine it goes back to to its starting point there's this halt one which actually suspends the machine and at this point you can use the odt which is the online debugging tool to insert memory adjust memory look at memory look at the register state and that's actually what we'll be typing in a program in to do something very simple in a moment and then the last one is this auxiliary input which i don't really know what it does it if i don't have it enabled it won't boot unix i think it's sometimes some kind of clock that unix and other operating systems require for keeping time of things so we'll plug the serial back in this would typically go on the back it's actually the wrong back but he also has ethernet you would have seen this kind of ethernet port on the sun which steve did a video about we've got an ethernet port on here some switches some lights video connected let's go to our desk so this is the online debugging tool and from here you can you can kind of check the status of registers most of my team to be empty you can insert values into memory and then you know go back and check them so we just deposited four for example in address 1000 in in octal and we can go back and see that that's been deposited so on earlier pdp-11s the unibus machines you would have had to do this with switches on the front much like in the recent alter video yeah let's type this this program in all this program does is is allow you to type and see the characters back on the screen so normally if i if i do this it kind of works but it's trying to do something in odt which is you know causing an error so we'll type this program in i'll probably make a mistake and it'll take me a while to figure out what i typed in wrong so ctrl j is the line feed if you press carriage return it it stops and goes back into into normal mode this is one seven seven five six zero then we have one zero five seven one zero okay i think i've entered the program we can quickly check so we got this one this one these are actually raw assembly instructions so expressed in octal so you could turn these into binary and see the move instructions for example this top line here i can show you is moving the address of the serial card or the serial port into register zero so it knows where to to read and write from so let's try and run this program i think i have it in halt mode so i have to go back to the machine so now i can actually type words this is a bad keyboard it's just a carriage return so it actually takes you back to the beginning of the line there's no line feed like i think maybe i can press yeah i can press ctrl j now we have a if you connected this to a printer you would have a you know very expensive typewriter very expensive typewriter in the day yeah so that's yeah so obviously this is yeah my oh no there we go okay so the whole key isn't set up on here so if i want to reset it and we can boot into unix i have to go back over here and go on them and reset the machine it's the early days of computing [music] that's all you have to do i'm loading unix off the schedule sd card emulator i can press ctrl c here and it'll actually go into the bootloader so you can see a bunch of options for example i can boot off rl rlm1 or r02 which is five megabytes and 10 megabytes respectively rxo2 is the half a megabyte floppy disk they're eight inches wide the thing that we're booting from is du0 which is this mscp which stands for mass storage control protocol and this came later in pdp-11's life and just really simplified the process of booting into an operating system so we're enter du0 here which is the scuzzy disc which contains 2.11 bsd there was unix from att or bell labs and then there was a fork of that from berkeley which was called bsd this version of bsd is actually from the 90s it's kind of i think it's taken like the networking parts of a later bsd and moved them into 2.10 or something so this is 2.11 bst it's slightly improved so this is the actual unix bootloader once you get past the pdp-11 bootloader and this is where it starts to take some time it boots into single user mode first so you don't have to log in and you just automatically root and then once it's booted into that you can you can access it and it'll boot into multi-user mode and you know people can tell that into your machine i actually wrote a web server for this machine as well so when it's running at home you can connect to it and see a picture of it running it takes like three seconds to load the page it doesn't matter what speed your internet is it's ah i think we need to i haven't used it on this terminal before there we go okay so this is in single user mode we can do an ls and we'll see the root of the file system do things like disk usage to check the size so this is in one kilobyte blocks i think it's very similar to modern unix we can go into the games folder i think sean's been wanting to have a look at zork there's no secret that we've been doing a few films based around ready player one one of the key plot points in the book is about the game zork which i believe was developed on the machine like this so yeah you have it here then this is a variant of zork which seems to name various digital machines like the pdp-11 in it for some reason so this is the kind of format of zork it's it kind of tells you where you are gives you a description of your environment and you have to enter some commands such as in this case it says there's a small mailbox here so we can try and open the mailbox i haven't gotten very far through this game so it says there's a leaflet inside the mailbox so let's read the leaflet and i think it's quite long so you can pause it if you want to read it but you see here it mentions the deck system no deck system should be without one so i don't actually know do you have any ideas how to continue through this game the current version was translated from mdl into 4chan 4 by a somewhat paranoid deck engineer who prefers to remain anonymous all right so let's try help because i have no idea what to do i think i can pause like this but i think i've already missed the most important stuff can we go north or something i i've heard people do that you're facing the north side of a white house there is no door here go east i don't know yeah let's go east one corner of the house there's a window can we just slightly open the window let's see if that with great effort you open the window far enough to allow passage can i do this all right we're in the kitchen now that was easy clear gas bottle is here can i drink it one of the key things about this game and what i've looked into was that it was a bit more open to different commands maybe i don't know how it does it i guess that was one of the reasons why it was written in lisp originally it was commonly used at that time for artificial intelligence and natural language processing type applications like this but yeah i don't know how to get any further in this game maybe we can just go north or something but oh there's a wall that's good to know this could take some time yeah i probably won't bother but what's next for the machine then what's next for the pdp-11 or what's next for your collection what's yeah so i'm i'm still trying to get my my rla2 drives which is you know this 10 megabyte removable platter drive they don't work they saw they're getting there there's definitely something wrong with them still that's taken up my previous weekend and we'll probably take up the next few weekends as well but yeah i just want these things to work i think they're interesting machines and it's a shame if they're just lying you know in a skip broken or something like that [music] [music] you