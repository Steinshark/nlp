in a previous video mike was talking about how faceid probably work, and he was telling us that this is probably based on neural nets. [mike] exactly how this network works isn't clear, right? even to the people that trained it. in this video, i'm gonna be talking about fingerprint recognition as an alternative to do authentication systems. so we've been using for a while fingerprint sensors. so maybe on your phone you have one, on your tablet, or even on your laptop and maybe you're wondering is that also based on neural networks and deep learning stuff? well, it could be, i'm not saying otherwise, but it's actually not normally because you don't need that. you don't need to learn anything. you basically need to make able to distinguish if this fingerprint impression is the same as the one being used before. so basically what we're gonna be doing first is trying to extract meaningful features from your fingertip and trying to characterize your fingerprint and then whenever you want to identify yourself, you need to double check if these are the same what we call minutia points. so let's have a look on the ipad to two fingerprints. oh it did work. and so here we have two fingerprints. and so here i have a question for you, sean. do you think these two are from the same person? yes, or no? [sean] this is sort of... i'm gonna call it a roundy bit here and a roundy bit on that one. [sean] and then there's kind of a triangly bit there and a triangly bit on that one, [sean] so they look similar. um... [sean] i think i'd have to cut one out, overlay it over the other one and then maybe i'd be able to work it out. exactly, exactly. so actually they do belong to the same person. it's a good job you detected that correctly, but you need to be more confident next time. otherwise, how do you unlock your phone? and so... so the first process we do is call feature extraction. and what you need to do first, and most algorithms will do while trying to identify the region of interest. so basically that means you're gonna try to cut this out because you don't need it, right? and as you can see: there are two impressions of exactly the same finger and they do look slightly different because it depends on where you put your finger on the sensor, and also, it's all about the pressure that you use when you are unlocking your phone, for example. so that will change slightly the picture. so no two impressions of the same fingerprint will look alike. so then, feature extraction. there are so many different features you can extract from here. many of them, called level one, are all about orientations. what are those? well, you see here, the orientation of this fingerprint is just like that and it goes in this direction let's say. so this is what we call orientations. there are two singular points which are very distinctive in a fingerprint, and one of them is the core. if you look here on the left this roundy bit that you noticed, it's just a loop, right? so this is what they would call and identify as the core of the fingerprint. and you also actually noticed this very special bit here that looks like a delta on here. so these two are the two most important characteristics for a fingerprint. are they the ones that we actually use for recognition? not quite. it depends for classification, yes, but when you're trying to do the matching, they are important, but they are not the only ones. if i zoom in here, you will see those ridges on here. so for example, you see that this one actually ended over here. so what we are gonna be doing is, typically, you're gonna have this coordinate annotated and then you have kind of an arrow here saying, "well, this is the direction in which i found that minutia point." so that's how they call it. and you also will see nice stuff like this bifurcation on here. so all of the sudden the ridge did something funny just like that. so this is a very special point. so typically this will be annotated and saying, "well, this is the point it changes direction. exactly in that point." so if you continue you will see plenty of those on here. here is just an end of the ridge so you can do that and get plenty of them. how do you do that? will you just address directly the picture? well, not quite because if you try you're going to detect also minutia points here on the outside of the image. so the first thing is to try to cut out anything not from the fingerprint then there will be a thinning process in which using somehow kind of segmentation kind of techniques you will actually try to enhance those lines, those black lines here on your fingerprint something that's also distinctive is if you really zoom in here, you will see some pores within the range of your fingerprint. so they are quite distinctive but you require a very high resolution image to detect those. so that's why they are not normally used for fingerprint matching because you need a very high quality sensor. so they're gonna be based basically on when they collide, two ridges, when they are ending, when they just change. so these are the points that you want to get after a thinning process and a segmentation process. so there we go. we have the feature extraction done. so what is next? so what is next is called matching of the different sets. so anytime that you put your fingerprint on it, you will get a different copy, a different photo basically of your fingerprint. you perform a feature extraction process and therefore you will get different sets of minutia points. and as i said before, depending on how much you press down your finger you will get those minutia points slightly moved one side a bit up or a bit down if you want to. but you can also have a very, well, nasty user somehow, and then they said i just want to use this bit of my fingerprint or i want to rotate that. so the problem is not that easy. a matching algorithm is typically based on an alignment process of those sets and they, there are many different methods. there are local methods and global methods trying to get that match sorted. in this image, what you see is your original fingerprint. the one that you captured the very first time was neat, and so the one actually doing the registration ask you to put the fingerprint perfectly. so one thing that you may actually think are they gonna be storing directly the picture of your fingerprint? well, normally not. normally they just saved those minutia points because they don't need to the whole fingerprint. it could be, because there are different techniques for example of trying to do that correlation between images, but they are slower and they are not that precise and they cannot handle well the rotation i said and that differences between the relative position of those characteristic points. [sean] so what they've done here is, if you like, taking a fingerprint of the fingerprint? yes somehow yes. [sean] yes, so they've got these points and said, "right, okay, they make that image unique." [sean] so next time we just need to make sure those points are available. exactly. so next time so the algorithm will use this as the template points, and then whenever you have a different fingerprint and if you look at the one on the left, it's exactly the same one, but you've put the finger slightly rotated and you don't have the full fingerprint. so if you apply again the same feature extraction process you will get again a new set of minutia points, but they do not align perfectly because they are rotated. so feature matching algorithms they will try to find a local structure like this one highlighted in that square and they will try to first match and see if there are other minutia points that actually align well, so in the end if you look at it so you will see that actually this was the incline on that picture to actually get that. so the outcome of the feature matching process is basically a score that will be telling you "how similar. how likely is that this fingerprint belongs to this one?" and then we need to use a very simple thresholding approach to say okay this actually belongs to that person yes or no. all right. so this problem has been solved already based on feature extraction plus feature matching. there are other techniques as i said, but these two are the classic and the ones that actually work really well. that's sorted. [brailsford] so an executable binary. the net effect of slotting that t diagram against here slightly downwards [brailsford] is to show you [brailsford] that the c you've written gets converted into binary and the net output from this process. [brailsford] it produces out a program that you probably store in a...