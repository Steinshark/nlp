okay, bgp is the border gateway protocol, and it's, it's a routing protocol that evolved in the internet and it's, you can think of it as kind of the the top of the food chain in terms of routing in the internet it's the it's the protocol that's used to connect the service providers let's say primarily in the internet, so how does at&t exchange reachability information with bt with france telecom with you know and they have to exchange this kind of reach ability information, so that we can glue that these autonomous networks together because there is no one there is no centralized control in the internet you know so bt controls its equipment and it's part of the internet but at&t controls its part of its own part of the internet and they have to interoperate somehow they have to be able to exchange information about the ip addresses associated with their customers and etc so the border gateway protocol bgp is this protocol that has evolved to handle that job, right, to exchange information between autonomous networks okay, so without any centralized control. there are many interesting engineering problems, [they're] interesting research problems in terms of scalability and robustness etc and but i'm going to talk about it in really sort of elementary terms and i want to i want to be i want to talk about a simple graph problem as a reachability problem in graphs in simple combinatorial graphs with where we have nodes and arcs and we want to get from one place to another. you send a packet to your service provider it has to look in a table and figure out where to send that next and that packet may end up on the other side of the globe in a completely different network and and so it's that level you know it's it's how to get from here to there, so it's the foundations of the internet it's the basic global foundation of the internet. different protocols are used within these autonomous networks and i think more talked about that in a previous computer file, and you know for example you might use some kind of shortest path based thing within a network, but between networks what's interesting about this is that you know we want this inter domains or you know regional autonomous networks we want this routing to interoperate to work even when the service providers don't have common agreement about what is the best route for example? you know your best route might not look like my best route because we have different contracts with with different companies in the internet, and so we have different we will have different ideas about what is best okay, so that might be a commercial thing it might be our you know i don't want you to send too much traffic through me because it's going to cost me money to look that's right right and basically the idea is that when you're doing shortest path routing you want you know you want everybody to be connected with everybody and along the shortest path and in the internet you want you don't want traffic to be crossing your network unless somebody's paying you for that either the source of the traffic or the destination or a combination right somehow and so in other words the the protocol is more about limiting the connectivity rather than you know being generous about it and giving it to everyone it's kind of let's restrict this connectivity to those that are paying for it somehow. that's basically the idea but what i want what i want to think about is well, how does this fit into our notion of finding paths in a graph? because in the undergraduate computer science one of the things we teach in algorithms courses is you know a lot of shortest path algorithms so we we define a graph let's say that is nodes and arcs and you have a weight on these arcs and then you try to find the best paths between every pair of arcs let's say and we typically teach this and we teach lots of algorithms for doing this like dijkstra's algorithm bellman-ford warshall's algorithm so can we abstract away from the complexities of bgp and think about it in those terms? the thing is it doesn't quite fit in our models very well and and and i'll try to explain informally why not -well what doesn't fit the bgp or what doesn't fit? okay? so we normally think about shortest paths in terms of numeric values okay, so and we typically add those values as we go along a path right, so maybe maybe each arc has a weight one and we essentially count the number of hops that we're going through a path and then we would prefer let's say a shorter path one with fewer hops than a longer one so we're what we're using there are two operations plus and maybe an operation let's call it min okay, so we have these operations min and plus so min for minimum yeah, plus for adding up those hops yeah, right, and so what people notice that about 40 years ago is that a lot of these algorithms that we have for shortest paths dijkstra's algorithm bellman-ford can be generalized to a large class of algebraic structures called semi rings. i'm gonna show you. what is a really stupid question i'm sure okay semi ring i'm not familiar with a semi ring, okay? so a semi ring is a algebraic structure that looks like a ring so what is a ring a ring is something like the real numbers, so we have domain the real numbers and we have a plus and a times they are plus and times the the standard operations and a linear algebra is built on rings where actually we take matrices we multiply matrices we solve matrix equations things like that that's all linear algebra. well it turns out that semi rings and routing is also. it's kind it's kind of like a generalization of that where we we weaken the properties that the the plus and the times have to have right so for example a ring that plus has inverses we have negative numbers. so there's always a for every a there's a not there's a negative a that when you add them together you get zero okay, and the semi ring is like a ring except it doesn't have that inverse property you don't necessarily have inverses what people did back in the 60s and 70s is they looked at algorithms like dijkstra's algorithm like bellman-ford, and then they said wait a minute. let's work backwards let's look at these we see min and plus in the algorithms, but let's replace them by abstract operators and let's see what algebraic properties. we need to make this algorithm work still suppose. we want to pick paths that have the highest capacity okay, so we might instead of using plus. we might go along a path using min the weight of a path will be the minimum capacity link and then instead of using min to compare paths we might want to use max so that would give us the highest capacity path okay, so people noticed. oh wait a minute. you know this min plus and this max min they have certain algebraic properties that are true, and we can we can take dijkstra's algorithm, and we can replace the plus with min and replace the min with max and now we have an algorithm that does it works perfectly fine now it now it finds the highest capacity paths in the graph, and then we can build other things for example suppose i wanted to find paths that were shortest, but if i had two paths that were equally short maybe i want to break ties with capacity ok so then now i could have a path with two metrics. you know distance capacity right and then i could essentially you know a use shortest paths on that first component and then break ties with capacity okay that to that that that turns out you can make a semi ring out of this and then guess what you can use dijkstra's algorithm bellman-ford to compute with these as well if you compare things you know first distance then capacity kind of its kind of a lexicographic comparison there you can build a semi ring out of that and then and so these these algorithms are really generic you can just plug in you can plug in you know just an unbounded number of different algebraic structures to get what you want and use the same algorithms bellman-ford or dijkstra etc, so this might seem like oh now. we have this open-ended world maybe we can model something like bgp in this world turns out we can't okay and let me give you an example of that's easy easier to understand than bgp. okay. i told you we could do we could we could look at distance first then break ties with bandwidth suppose. we or capacity let's suppose we did it the other way around. i want the highest capacity path and if i have two best paths with high capacity i want to break ties then on the distance so i first look at the at the capacity component, then i break ties on distance that's not a semi ring anymore why is that? oh? it's not obvious that you know if you use some of these generic best path algorithms, it's something's going to break. maybe why is that? not obvious, but it turns out that one of the rules of that needs to be followed by a semi ring is something called just distributivity this is an algebraic property what it really means is that you know it doesn't really matter if i make a decision about the best path seeing all my past or you my neighbor you make the decisions, and you tell me what your best path is it kind of doesn't really matter because we'll come to the same we'll come to the same conclusion right, so that's what distributivity is all about and this this thing i told you about you know shortest path then capacity that has that property still but when i turn it around when i do capacity first and then shortest paths it breaks that property okay, and let me just give you an example of why suppose. i have a neighbor that sees two paths: one's very high bandwidth but also a very long path right and it sees another one with very low bandwidth or capacity but it has a short path and then i am talking to my neighbor over a very low capacity link so my neighbor picks that high capacity long path, but i see two. paths and i say wait a minute. this is kind of like a bottleneck link is sort of wipes out the the capacity you know it's the the capacity of both paths is now the capacity of this really lousy link as far as i'm concerned both of those paths that my neighbor is giving me have the same capacity because i have this bottleneck link with very low capacity so i'm going to break ties on the length and i'm going to break ties i'm going to want that shortest path, but my neighbor picked the longer path because it had a higher capacity but i don't see that you see so we're going to be disagreeing about this, okay so a similar thing happens in the internet for example if i'm a paying customer of a route of a path, let's say, i'm paying upstream, i'm paying for this route, but my neighbor is a service provider one of those paths it's not paying for because it's a it's their customer another path it's paying for you know. it's up it has an upstream provider so that that that path could be my neighbor would like the longer path because it's a from a paying customer from an economic point of view they like that longer path but i i see the two routes as well. they're both provider paths, they're both equally bad in that sense, so i'll pick the shorter one, so we don't agree there's one thing i should say about internet routing that i was i've been sort of taking for granted without really making it explicit and that is 99% of internet routing protocols only they they they're their traffic insensitive? okay, that is they're perfectly willing to route all the traffic along the most congested link in the internet okay, in other words. they don't route around congestion so this is the traffic difference between right yeah, and so telco protocols routed around things like congestion, but internet protocols have tradition. there are a few exceptions but generally protocols like bgp ospf is is and and rip do not route around congestion that's considered sort of a network that's at done that network management timescales so a network manager will see oh, we have congestion over there. let's adjust the link weights so that the traffic will be more or divergent the protocol doesn't do that the protocol just blindly follows those link weights those statically configured link weights it's not sensitive to traffic characteristics, and this is because in the internet those characteristics tend to change a lot and oscillate a lot and they tend to often oscillate in a at a faster rate than the control plane can keep up with and so you you when you try to adapt dynamically to congestion you tend to introduce a lot of instability in the routing plane and so these things are you know completely insensitive to to traffic conditions like congestion it's up to the network managers to set those statically configured link weights to avoid congestion so this is more like the road size. they tell you where those things go. yes, they don't change yes i think internet forwarding is a lot like those signs that just point you in that direction you know paris is in that direction. go if you're heading towards paris go that way a complicated thing of course is that when we have now these regions that are divided up into autonomous regions that have very different goals but they're forced to interact all right bt is forced to exchange routes with at&t because they're selling the service of global internet connectivity, so they're forced to interact with their competitors they they'd like to control the entire internet. i'm sure but they can't there's a balance you want to allow each network to tailor its let's call them routing policies or routing policies sorry, i've been in the uk for 12 years, so i'm saying routing now