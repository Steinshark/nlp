how's it going guys in this video we're going to be looking at github copilot labs which is currently an experimental plugin that they have in visual studio code and this is part of what we will probably see in the future and that is an ai which can actually help us translate our code explain our code or generate documentation and tests for our code so the difference between co-pilots and copilot labs is that with copilot labs we have this sidebar that can explain the code translate the code it has brushes that can fix our code and it also has an option for test generation so i'm going to be using this with my simple sentiment analysis script and all it does is import text blob so we can perform a very simple sentiment analysis and then get that sentiment analysis from the user input so if we run this at the bottom i'm going to be able to type in something to get a sentiment back so we can say today was a good day and it's going to tell us whether it's a positive message a negative message or a neutral message so it's a very simple script there's not really much going on here but it's perfect for experimenting with github labs so for example the first tab can give us some explanations so it can show example code it can say that the code does the following and so on but pretend we don't know what it does all you have to do is highlight the code that you wanted to explain and it already has a prompt here that's going to explain what the code does step by step so if we ask copilot it's going to generate for us this string over here that says here's the explanation for the code above we use the textbook we use the text blob class to get the polarity of the input message if the polarity is positive we return the string positive if it is negative we return negative otherwise we return neutral so it generated that for us and we can i mean if we want of course you can paste that into your script and that might help someone it's some documentation that is quite accurate that we did not have to write ourselves but let's highlight this again and this time let's select what the code does the code does the following and if we ask copilot it's going to tell us what the code does the code above does the following it takes in an input string it passes the string to the text block library the text blob library and it does the rest so you might also notice that we have these three buttons at the bottom because again this is an experimental feature which means it is far from perfect but it looks pretty cool so far so that was the explanation tab next we have the language translation so we can highlight any code we want and github copilot labs will be able to translate that into a different language actually i don't know what's going to happen if i try to translate this into html that might be really stupid and that's exactly what i probably should have expected we got two arrows because we tried to translate a python script into html but if we want to translate that into something such as javascript it might give us something a bit better and if you look at it inside here it does does look a bit better although i don't think javascript uses if name is equal to main so there are still some bugs to be worked out but maybe for something simpler such as this over here we can ask copilot and it's going to give us something that looks pretty good in javascript so i'm really looking forward to seeing how these features will evolve in the near future because the concept is absolutely brilliant and maybe we can change this to something a bit more fun such as c and if we ask copilot to translate that it looks like it did a good job i wouldn't be able to tell you right off the bat if that actually works or not but i like the concept next we can tap on brushes and brushes are essentially a quick way to fix our code or to make changes to our code with this ai so here we can actually highlight the get sentiment once again and we can choose to do one of the following if we want to document this we tap on document and it added the documentation up here or added the same function with the documentation so it returns positive negative or neutral sentiment for a given message otherwise i guess we can also highlight the whole thing and say readable and it's going to try to make it more readable i guess it just did some formatting there so that was something else you can do otherwise let's try to remove these types because i think that's what types does if we remove type here and type here this has now become a function without any data types so let's tap on add types and it effectively added the types back i wonder if it's going to do it with if name is equal to main so if we add type star it completely ruined my function let's try that again i was not impressed with that let's say while true instead it's having some trouble that looks like what if we just highlight that part and types i okay i don't know what it's doing anymore maybe if i highlight the whole code if i highlight the whole code it managed to add a list which we did not use so there are still some problems with this but i really enjoy the direction this is heading in next we can try to make this robust so let's highlight that and tap on make robust and what it did here is try to do all of this otherwise return neutral which i guess is an okay way to make this more robust now it's always going to return something regardless of the error although we might not want it to be neutral we might want it to return something else ideally so so far you can see there are some bugs here but the concept is absolutely amazing and test generation is currently only supported for javascript and typescript so let's do something super fun and let's actually let's make this a easier script we're just going to say print hello world and we have co-pilot completing that for us so we're going to save that script we're going to go inside here and we're going to convert it to javascript that was the worst translation i've ever seen that's not how it works so that is incorrect we'll try one more time there we go there we go we get the console log and we'll paste it in there and maybe it doesn't make so much sense having this in a pi file we might actually do better if we create a new file and call this javascript so we're just going to call this hello.js so now we have javascript here we can console.log that and we can test out if the test generation actually works so please select a function in order to generate tests okay i'm going to make a function in python real quick we're going to say def hello and it's going to take an item of type string and it's going to return to us a string all right actually it's not going to return anything it's just going to say hello return hello item that's exactly what i wanted now with that we're going to translate it into javascript so we got that and that and that looks pretty good what do i know and we'll just paste it in there okay i guess i guess this feature here was more part of typescript so we don't care about that but now let's try to create some test generation so we're going to select this and suggest a new test yeah so we get this over here and when we try to run it it's going to say could not find in closing package so i'm going to tap on unhelpful unfortunately i don't really understand any of that code right there i'm not a javascript guy but i guess in the future when i do understand this or when it does help me create tests for python it's going to be a lot more fun to play around with so that was a bit of github labs i would love to hear what you think about github labs in the comment section down below personally it does feel like a crazy experimental feature a lot of the features are just spitting out nonsense but i am super excited to see where all this leads in a year from now two years from now we are definitely jumping in a new era of ai do let me know in the comment section down below what you want me to try out with github co-pilot if you have any other questions i honestly want to experiment all this with you guys so if you have any suggestions i think it would be super fun to try it out together but otherwise with all that being said as always thanks for watching and i'll see you in the next video