in 1963, if you wanted to do calculations, you had a mechanical calculator like this wonderful odhner brunsviga, but it's all mechanical. this guy, 1962-63, bob ragen, worked at friden incorporated, maker of mechanical calculators, had this idea- let's invent an all-electronic calculator! indeed, nothing mechanical in it. it's all electronic, and i've been lucky enough to not just get one of them, but to meet and talk with the late bob ragen, who came by and helped me repair two of them. signed by bob ragen, august 2006. this is a cathode ray tube out of an oscilloscope, four circuit boards. it's all discrete transistors. each one of these is one transistor. each of these probably cost five or ten dollars in 1962. germanium transistors! resistors, diodes... circuit boards that are not just double sided but sort of, in an odd way, four sided! it folds in on itself, plugs in, and there are four different... but even that's not what i find amazing. in a calculator you have to keep track. you need a memory; you need to keep track of the numbers. where's the memory? this used a piece of piano wire for memory! you would tweak one end of the piano wire, vibrate, go around around around in a spiral, and at the far end there'd be a little microphone to hear it. each pulse was a "ding!" [imitates buzzing noise] "ding!" it was called "recirculating audio acoustic memory." it's all in here. the number 5- binary, 0101-had to have "ding," no ding, "ding." so a ding was a bit. it remembers in time. it takes about, oh, a hundredth of a second for these little bits to go around this long spiral. come on over, brady, check this out. [brady: oh!] now let's look over here. first you can see there's a spiral out here. every time there's a bit like the first, the first bit in the number 5, over here is a little speaker that goes "boink!" little magnetic coil. it goes "boink" and launches a pulse. a little "doink" goes around here on the spiral of piano wire, steel wire, it spirals in, then spirals out, and a couple of milliseconds later it gets to the far end, where there's a tiny microphone, a microphone over here, which goes out into an amplifier and then into the circuit boards. so the memory of this calculator is all acoustic. every time you type a number into it, the bitstream of the number is represented continuously as vibrations in this wire. the alternative, of course, is what we do today. you'd have solid-state memory well, solid-state memory, well, there's five, let's say there's six, entries in the stack, each one has say, ten digits. it's more than that, it's thirteen digits, well, let's say ten, times six is sixty digits, times four bits per digit... it's on the order of 250. maybe if i would need somewhere between 200 and 500 transistors and each transistor is costing me a dollar, that's big bucks. and on top of that, it takes up space, so rather than using transistors as we would today for memory, put all the information in acoustic memory. okay, i'm working on this, my problem is: in august of 2006 i got it working. it was working in november of 2013. today, i'm sorry guys, it's sort of... i'm sorry. it's sort of not working very well. and i'm going in with an oscilloscope. it's... the oscilloscope is there. okay, so unfortunately, you can see it's dancing around. if we type a number in, bam. i can see that two of the scanning boards are working. i can also see that i've got some troubles in the arithmetic board. and the logic. nope, i've got work to do. the happy thing is, alongside this, that bob ragen helped me fix, i've got a second one which happily, as of last night, was working. not sure it's working now, but let me give it a try. if i'm lucky... oh! we'll do all our calculations with seven decimal places. there is a stack of four... four numbers and i enter on the lowest stack, which should be brightest. i'll enter 22. enter. now i have 22. oh! i'm going to divide by 7. 7. divide. 3.14, an approximation for pi. we just showed that it divided. let's do a square root. square root of 2. 2, square root, watch how long it takes. boop! it takes a second to do a square root. let's actually go all the way out, do it to twelve decimal places. 2. square root. it takes the better part of a second to find the square root of two, but it does it, and in 1963, people were astonished. hey, when i first used this in college in 1971-72, i was astonished! bring the square root of two to a dozen decimal places in a second! wow! i don't have to look it up, i don't have to do an expansion, absolutely sweet! so this machine that i'm working on, i compare voltages to this working machine, so i'm in there... and you can see-i hope it's visible, brady-so now let's do the square root of 2. 1.414. let's crank the decimal place back here, clear entry, 22, enter, 7, divide. and there's an approximation for pi. a little bit lousy, you know, a few digits of approximation. and so to repair this guy, i'll be comparing voltages from this guy here into here. and check this out, of course: it's a continuing problem. "november 2013 repaired! ok." so this guy's working. why do i work on this? it's partly out of respect for those who came before me. brilliant engineers. it's partly out of a sense of appreciation for their work, for their use of the available technology, that today, people will laugh at it. discrete transistors? i'm not sure you can buy a discrete germanium transistor anymore, certainly not one made by texas instruments. it's admiration for those who came before me. and of course, it's also a wonderfully entertaining jigsaw puzzle. debugging software? hey, i don't need much more than a computer and a brain. debugging hardware: it means understanding not just what's supposed to happen, understanding not just what is happening, but also understanding what was in the mind of the people who created this. the reason for working on this isn't "oh look, i've got a museum piece." no, that doesn't mean anything. the reason is, it teaches me, gives me a sense of... of... joy that i've- i'm bringing to life what people who came before me gave birth to.