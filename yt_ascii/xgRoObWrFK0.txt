so javascript was again recently listed as the most in demand programming language in the world and i'm about to show you five impressive javascript projects for your programming resume now you might have been told that building impressive projects is all about building the most complex like technically really complicated projects that would take like 5 years to build but that does not have to be the case in fact if you make your projects too complicated it can actually be a bad thing if the complexity is unnecessary because in fact there are only three key features that a good programming project needs to have in order to show that you have strong programming skills that companies look for and as someone who has walked this path and seen what works and what doesn't i've curated these five project in such a way that they have all of these core features without having to be super complicated and difficult by the way i've let the best project for last but don't skip to that part because you actually need to understand the first four projects in order to understand the last one but before we get into the projects at at all we first need to understand a couple of things first of which is why is building projects so important in the first place the basic idea is that basically the number one problem and challenge we have as developers is that we have a lot of competition there's a lot of other people who would like to have the same job that you're applying for so then we need to compete and stand out amongst all of these people so how do we do that will we do that by showing to the companies that based on what they know about us there's a higher probability that we have the skills that they look for over the other candidates that they get that's really what this balls down to and the way you do that is first of all by actually being good at programming which in fact you get good at programming by building a ton of projects so that's the first reason and the second reason is that once you're good at programming that's actually not enough to get hired because you still somehow need to prove to the companies that you are good at coding which you do by building really impressive projects that showcase these skills now again and before we get into the projects let's go over the three key features that all of these projects need to have in order to be impressive on a resume before we get into that if you are learning the code and you are serious about it i actually have a full bank of free resources for you to download which i've collected in different notion templates for example i have a full online open-source computer science degree template that gives you a full road map on how you can essentially study an entire computerscience degrees worth of content online for completely free for projects i have a full pro project tracker template that you can use for all of the projects that you end up building for example from this video which you can get sent to your inbox right now if you go down below in the description and enter your email and you also get access to my free newsletter which i send every week and you can always unsubscribe at any time but with that let's get back into the video so as much as i said that these projects don't need to be like hyper complex and like and unnecessarily technically difficult they do still need to be somewhat complex so that they show that you have the skills to build something complex but there's a sweet spot here you just want to be able to show enough complexity without going too complex because if you go too complex and your project just becomes unnecessarily convoluted and like very difficult to understand then that is a big no no so the first key is that your projects need to showcase deep programming knowledge and the second key which might sound contradictory to the first one is that you want to make your projects as simple as possible what i mean by simplicity that it should be simple to use and simple to understand what seeming very complex to code you want to be able to turn like complex code into something that looks very simple and it's very simple to use aka that has a very simple user experience that's because good software is usually very simple to use like imagine if the iphone was like super convoluted like super difficult to use like android phones what then people wouldn't use it as much as they might be able to see like oh yeah there's some like complexity like behind the scenes on how the iphone was built they're not going to care they're just going to care about whether it's easy to use for them now finding this balance of like making something that seems to a technical person complex like they realize okay there's a lot of different features that have been built into this but it's at the same time very simple in the front end side of things can be difficult but that is exactly why you have these videos and these projects that i'm about to show you so you don't necessarily need to worry about this yourself now the last key is that your project should be unique in some kind of way so as much as i would love to just give you the code like literally give you okay just copy paste this exact project i can't really do that and i'd be doing a disservice to you if i did that because really what companies look for is someone who can think like a problem solver who understands that the purpose of programming is to solve real problems and to build something new and innovative you don't need to build something world changing or anything like that if can just show that whatever project you're building even if you're picking a popular project archetype like many of the ones we're talking about this video add some sort of unique twist to it some unique unque thing that is like perhaps really important to you or that perhaps not everyone else who has built this project has thought about that is going to be the kind of thing that is going to make your project stand out so now once we get into the project i want you to think about for all of these what would be something that you could add to it that could make it different that would make it your project so the first project is going to be some kind of an e-commerce website i have one example right here which like a really old e-commerce project that i built like a really long time ago where basic basically you have this like catalog and you can shop different sections and then inside of the sections there's different items and you can add them to card and then you can go to check out now you can see that the ui of this isn't like particularly amazing but once you go here you can like change the quantities you can delete them i haven't actually implemented the checkout here but you might do that there's also authentication so you can sign in or you can create an account or you can sign in via google so google o so if you think about this project through the lens of these three keys why is it a good project well first of all is it complex in the sense that there's a lot of different pieces that have needed to be put together to make something like this work you have a ui you have this card feature which is its own component this build in react by the way so react is a framework that is on top of javascript which you really really want to learn if you're building any kind of javascript projects and then what else do we have well we have authentication so we needed to figure out how to create users how to use google login all these kind of things and you can imagine there's going to be some sort of a database behind the scenes where all these users go so this is a good example of the complexity and simplicity balance this ui like when you're using this is very simple to use but in order to make it simple there's a lot of complexity behind the scenes now think about what could you add to this to make it slightly more unique to make it a bit different maybe you want to add like a chat b or something like that or like whatever you can think of i actually made this project based on a react course at zero to mastery which is this is coding course platform that i've used a ton that i'm also affiliated with if you haven't learned react yet i actually really recommend you go through that course because you're going to build like pretty much exactly something like this while you go through it so it's a really good way to learn and build at the same time so i'll leave a link to that down below in the description so this next one is some kind of a visualizer now i've got a couple of examples here so i've built this sorting algorithm visualizer where as you can see you can click on a name of a sorting algorithm and based on that is going to sort all of these like things using that sorting algorithm so why is this good well it's reasonably complex because not only did you have to implement these different sorting algorithms but you also have to figure out how to like connect that to the visual portion of this app and it also showcases that you have like computer science and knowledge like you actually understand like different sorting algorithms so this is good from that point of view it's also good because it's very simple to use it's very like anyone who lands on this page like if they're a technical person and they understand sorting algorithms like they'll immediately get it like okay yes so you click on this and it'll like sort them and stuff in terms of how to make this unique like this particular one isn't particularly unique because there's a bunch of tutorials online of something very similar but what you might be able to do is take this concept of visualizing computer science or visualizing some algorithms and applying that to some other type of algorithm perhaps like graph searching algorithms or something like that or you might just take this concept of visualizing something and just visualize like whatever is important to you for example i've made this app a long time ag go there a financial freedom visualizer where basically you can insert a couple of these things like starting capital monthly contributions interest rates like how many years we want to visualize this for like how much income i would need to retire like how much passive income i would need to fully retire and then when you click on that it'll show this visualization like okay this is how much wealth i would need that could then passively pay me this income in this case isn't even enough but if we had like i don't know 5,000 there then we can see that okay we will be financially free in 10 years with these parameters now because for me this whole financial freedom financial independence is something i'm really interested in making a visualizer for this like it really matches something that's important to me that can allow me to like tell stories about it when i'm talking about this in an interview of like how i had a problem of like visualizing this and then i just made code to solve it that's the whole idea of this this next one is a software management tool so what i mean by this is let's say you have a coding project or especially if you're working a job for a bigger company you'll have these software project management tools or like bug trackers where you're like tracking the different features you're building tracking different bugs like for our startup we just use notion where you have this like drag and drop thing where you have like features and bugs and then you have different stages then you like move them around i haven't actually built a custom one for this but that would be a great great project to build number one because it's actually something that almost every software like technical person who's interviewing you is immediately going to understand they immediately going to understand the problem that you're solving and that just mak it so much easier for them to like get it and like see the use for what you have built and there's going to be a lot of complexity behind the scenes that you're going to have to figure out like you might want to do like drag and drop stuff you might want to like add other stuff like you can assign priority to these tasks on like different categories but it's a really really great project to build if you can manage to do that and then again just add something to make it more unique like in this case like even just the ui like make your own ui that really works for you that can be enough project number four is going to be a social media visualizer right here you can see a video of a very old social media visualizer that i built like back in the day this is when i was doing cs50 actually as you can see this looks absolutely terrible don't like copy this ui or anything like that but the idea here is you want to like build your own social media clone essentially not an again not an exact clone of twitter or instagram that would be like very hard but something that allows you to perhaps make some posts sign in log out follow people edit posts like posts like these kind of things like a bunch of very like again there's going to be a lot of complexity behind the scenes and as long as you make the ui understandable it's going to be simple to use and again social media like liking post and things like this is going to be something that a recruiter is instantly going to understand you're not going to have to explain like what you're even trying to do here this is going to be very simple to make unique just like make your own social media like whatever social media you wish existed like make a very very simple mvp version of it and that can be very very unique and interesting and also interesting to talk about in an interview so for project number five i'm actually not going to show you anything this entire video we've talked about how important it is that you make these projects yours you make them unique in some kind of way with this last one i highly highly encourage that you build a project like this is that you just pick a problem in the world that you want to be solved with code and you just build a web application using javascript using react that solves that problem maybe this a platform that you wish existed for your industry maybe you want to build some productivity tool for yourself that you haven't found yet or even if you have found it but you want to build your own version of it that has some feature that some of the existing solutions don't have this is really what's going to make you stand out as a developer actually building a real piece of software what you want to do is think back to the reason why did you start learning the code in the first place for me i had so many of these moments like in my beginning stages of learning the code where i like saw like oh once i learn the code like i'll definitely build this like i want this thing to exist the thing is it kept me going in those beginning stages it kept me motivated sadly i still haven't built a lot of the things that are sort of set out to build i probably should but i have built some of them and let me tell you like once you get to the stage where you can actually build this thing that you never thought you could ever build in your life and you're actually able to make it work even a little bit is the most amazing feeling in the world copying projects and getting inspiration from other people is like super fine that you should do that but the best feeling as a programmer comes when you choose a project yourself you choose something you want exist and you just go and build it and you just don't stop until you manage to get it to work because when you do that you're actually adding things to the world like you're actually using your coding skills to build something useful and if you find this thing useful there's a very good chance that other people might find that useful as well and if that happens you might be able to to publish your application and make money with it and now you might not even have to become a software developer for a company at all because now you have a startup coding is a modern day superpower so don't waste it use it to make the world a better place so if you watch this video and you don't quite feel like you have what it takes to build really impressive project like this yourself then you should probably go watch this video before you start building these things because in that video i go through the precise steps that i would do this year to learn to code from zero if i was starting over right now because after that you can be 100% sure you have everything you need and build these impressive projects using javascript and get hired or perhaps build the next big startup good luck and i'll see you later