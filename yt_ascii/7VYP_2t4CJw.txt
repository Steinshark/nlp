all right we're going to do a new thing mojo if you haven't been keeping up with mojo and you don't know what mojo is by the way no it's not what austin powers lost in austin powers 3 but it is this new language in which is supposed to be like python or or pythonesque or python makes pythonistas happy but gives you all the speed of all the good stuff right it get it has types it allows for sim d's nuts it has all it will even do like variations on it to find the fastest amount of paralyzation you should be using per problem it has all these pr that are huge and chris lner i believe is the lead of this and he just open sourced it is that what we're seeing right here at modular open source is ingrained in our dna we firmly believe for mojo to reach its full potential must be open source i do agree with that any programming language needs there's just a couple things that are just required to make an op a language super successful one it has to be open source two you have to deliver on the promises you make so like v is a great example of this where they made a bunch of promises and people have felt like they have delivered therefore there's this like there's there's a huge amount of distrust there three tools tools tools tools and tools you got to have tools these days if you try if you're even remotely attempting creating a new language if this thing doesn't come with if this thing doesn't come with a package manager a build system an lsp a linter and a formatter like like it ain't happening hey prime how can vi motions help me in my daytoday life i will tell you later you just hold hold on we have been progressively open sourcing more of mojo in parts of the max platform and today we're thrilled to announce the release of the core modules from the mojo standard library under the apache 2 license we have always believed that building mojo in the open will lead to a better result because it allows its design to be shaped by the feedback from the broader community we released mojo very early and have been driving steady improvements since may 2023 see the change log building a language and its infrastructure is hard work and takes time and we're excited to move our from sharing our work to collaborating with mojo developers worldwide okay okay so does that mean mojo itself ste self is still not open source is that is that what i'm reading here correctly we've been progressing open sourcing more more of mojo and parts of max release of the core modules what are core modules is that is that how they're saying the standard library is that the same thing mojo's like a super set of of of python i believe it has some extra requirements it sounds like it not entirely but that's their intention yes the standard okay i'm i'm curious what's stopping them from open sourcing so for those that don't realize why it could be difficult to open source if you've never ran a large open source project it takes like literally multiple people to just deal with open source it's it's not easy to just open- source a big project with a lot of eyes it can be very very it can be very difficult i will tell you this much that when i did some open source work for netflix it was like 50% of my job was just like closing just tickets that you can spend five hours asking questions in in issues or you could spend 10 five minutes reading the docs falor mentioned yeah falor mentioned there are many ways to open source codes some projects make source code available but do not accept contributions some provide opaque contribution process without visibility into goals and road maps some open source and they don't actively maintain it shots fired at module at modular our team has either built contributed to or driven incredible open source projects like llvm swift tensor flow and pie torch and we want to make sure we do things right so that's some good street cred right there i would say that that's some decent street cred for some open source credibility right there okay what if you guys thought i don't know just like a little llvm swift tensor flow pie torch not a big deal you wouldn't get it you wouldn't understand this means not just making source code available but fostering and cultivating a vibrant and engaged open development community around mojo fire pie torch codebase sucks though you know what i got one for you i want you to go create a better pie torch right now okay i want you to do that i want you to go engage a community i want you to get people excited i want you to get thousands of people using it and then i want you to make a better a better code base i actually did a startup and then it failed yeah well guess what it doesn't sound like it doesn't sound like you have as much street cred buddy all right beyond just providing a source we're opening up revision history for see for the standard library at releasing nightly builds of the mojo compiler providing public ci and allowing external contributions through github poll requests this is expensive and non-trivial to set up yes it is extremely expensive you like i mean they literally have to pay multiple engineer out like yearly salaries just to maintain something publicly but in our experience it's critically important to allow the community to scale absolutely so why apache 2 we chose the apache license version 2 it contains a patent grant provision which provides legal protection to users and contributors of the soft the apache 2 license is a widely used and proven license and is familiar to many individuals and companies across the industry i actually have no idea anything about licensing okay i i i genuinely have no idea about anything about licensing one in the chat if you know anything about licensing not a lot of ones coming in right now for how many people we have now watch this one type 420 in the chat if you know nothing about licenses this is more reasonable here you know why cuz that's how this thing works okay i don't know if you know this but if you go to vim apm which is or not vim ap yeah vim apm i believe also has it let's go like this vim with me i think i updated its license just recently right now i have the good luck with that [ __ ] no llms public license okay so if you don't know the good luck with that [ __ ] license it's pretty good okay that means you you're the one putting it on your computer like that's your fault that's not my fault that's your fault okay you're putting what i wrote on your computer that's kind of a stupid idea good luck with that [ __ ] public license okay zero you do whatever the [ __ ] you want as long as you never leave a [ __ ] trace to to track the author of the original product or held responsible that's it you just hide that okay don't you dare try to tell people i did it don't you dare that's all i that's all i request we're keeping it simple the apache 2 license is a great start but our experience with licensing in the llvm project taught us that there are two small issues with it some people are concerned that the apache 2 license may not mix well with gpl2 code the linux kernel and the apache 2 license requires that you acknowledge use of the code in derived projects we want you to be able to use mojo without requiring you to acknowledge modular or mojo though of course you are welcome to do so and make it clear that it's fine to mix with gpl2 code as such we're including the llvm exceptions which were specifically designed to address these concerns oh hey that's pretty neat i like that i like that good job hey good good guy mojo right there you don't even have to site us you could if you want to but you don't even have to thank you i like that i love i like i love using projects that are more lax on their licenses cuz i don't again i don't understand licenses and i don't understand how i'm going to get screwed by it at some point in the future right i don't i i you know i have no idea i heard you were talking [ __ ] about docker and development and i love you though oh yeah i think docker and development is crazy okay can we just take one second here i don't see i have absolutely no idea how this is a controversial take but people get their their feathers are ruffled heavily from this okay if i had the developers hierarchy of awesome it would literally be all local right everything you develop is local it just works it's easy to run that's that next would be like you can do it local but there's like dev containers in here right there's some there's a little bit of docker you got to do a little bit of doing a little bit of docker through it and then of course the worst part of the triangle which is the bottom part of the triangle which is for a few people which is you actually just dev on a a prod machine i've done this devon prod i've done this okay we've all done this you know you've done this i've done this you've done this it's the worst okay don't do this who here has not edited some code in production at least once in your life okay come on we've all done it we've all done it devon mentioned let's go come on don't even try to be like oh i would never do such a thing yes you would and you have don't you're not better than anybody else okay but local like if you can be purely local dev it's just nicer you know what i mean it just is it will always be nicer docker is pretty nice too right like if you can throw up like a just like your database in docker or a couple items in docker that's kind of nice but we all know that eventually that it gets shitty okay like developing only in docker we believe this represents the state-of-the-art open source licensing for language and tool projects and recommend other mo mojo open source projects to follow the same approach we've been using this approach for our existing open source code and we continue to release more code with the same approach all right all right all right i like it early stages of our open source journey the mojo standard library is under heavy development and changing rapidly so we've started by open sourcing its core modules let's see as such we consider this to be an important starting point not an end at our open source journey we'll sim let's see we'll similarly similarly evolve and our development and contribution process as we learn together with the community we'll be opening up a lot more code over time including more of mojo parts and the broader max platform okay so what i would i really am curious if they could give us like a statement of things that they're not going to open source i think would be really nice can we all agree to that like what aren't you open sourcing if you could just be like hey here's the parts we'll never open source and here's the reasons why i'll never open source it if it's some sort of like way for them to be able to make money be able to do this that and the other like i totally get that i'm not you know i'm not against several engineers making something awesome and then making money off of it i just want to know what they aren't planning on doing you know what i mean all right we'll skip over the contributions i assume you can just read you can just read that right nightly builds for fast iteration nightly builds of mojo compiler are also now available awesome this allows you to test your contributions to the standard library against the latest version of mojo compiler that corresponds to the library source this is a massive step towards opening development of mojo compiler and allows magicians python with types magicians what is more cringe magicians or pythonistas what do you call what do you call a rust person do you call them like cuck lords like what do you call them oh rust station oh okay that's way off i was i was way off i didn't realize that one acoustic they're acousticians okay you wouldn't understand you wouldn't understand okay i'm trying not to get like i remember we're considering this like as a full a full-time yob here okay trying not to get banned this fast after watching casey's performance video i do think maybe increasing python speed by 35,000 is actually possible full time full-time cancel let's go bri's on hing day am i let's see to live in the bleeding edge of development if they choose and test against the current tree over time we'll expand the this nightly build to include the entire max platform make sure to check out the standard library development guide for details on how to get nightly builds all right version control history i assume we're releasing not only the code but also our commit history for the standard library how much cleanup do you think happened real talk how much cleanup do you think happened how many [ __ ] [ __ ] why doesn't this work squash me later just like you you know there's like an entire there's like an entire set of points there just was like anyways prime i'm the amazonian dad with questions the other day you're the amazonian dad what does that even mean get commit this time maybe yeah squash me harder daddy yep that's a good one all right we're very excited about the future of mojo and all the applications that people are already using it for we think this is a big step forward in openness and transparency yes again i would just love to hear what are you what are you going to open source what aren't you going to open source what are you iffy on open sourcing yeah cuz i think everybody if if if if you don't understand why it's difficult to open source that's okay i don't think you need to explain why it's so difficult i think you pretty much say it right there it takes a lot of money and time to open source anything that's that has a large amount of people and they want to be able to do it well totally totally get that it does it is an expensive and non-trivial to set up not even expensive and non-trivial to set up it's expensive and non-trivial to set up and to doing well open source is extremely expensive it is that's why you should you should give to neovin people open collective neovim go do it the name is i think i could i think there does exist a world where i like mojo you know what i mean there does exist a world where i could be a a mician i think open source does not equal communism don't even try that with me okay okay okay open source is opt in okay so don't even try that with me don't even try that with me the name is open source is not communism and i'm not getting baited into having a communism debate today okay this is not how we're doing it open source is much closer to charity than it is to communism okay so we're not doing this i'm not getting triggered why the hell would you say that a jin