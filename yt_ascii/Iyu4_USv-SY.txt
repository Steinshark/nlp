how's it going guys in today's video we're going to be looking at five different ways that you can annoy your colleagues in python starting with the first way to annoy your colleagues imagine you have a code base and the code that i wrote here doesn't really matter but what we're going to do is spice it up a bit and by spice it up i mean add semicolons everywhere because as you may know adding semicolons in python is completely optional i mean one of the benefits of adding semicolons is that you can continue adding separate statements on the same line but if you start adding semicolons everywhere i can guarantee that your colleagues are not going to appreciate it moving on to the second way to annoy your colleagues imagine you're using a popular module such as math or something that your project heavily relies on so right now we have our basic code if we run it it's going to give us the results using the math module but what we're going to do is something a bit evil first we're going to go go to the inbuilt math module and we're going to copy all of this code now you probably already know what we're going to do next we're going to go to our project and we're going to create a new python file called math then we're going to paste this code in now since a lot of this code is written in c we're not really going to get any of the implementations here and we're also going to get some syntax highlighting so anywhere you see this just remove it it doesn't really matter what matters is that it looks like the math mod and what we're going to do here is replace every single return with the number of 42 which is the answer to everything in life so it doesn't matter what function it is just return 42 and the next time your colleagues decide to run their file it's always going to return full he to and they will probably catch on to this quite fast but it should still be amusing to see how they react moving on to way number three in python when you create a class you often use the keyword or you use use self to refer to the current instance of the class and it's just a naming convention so you can actually put any kind of keyword you want here and that's exactly what we're going to do we're going to do something that's non-conventional and by non-conventional i mean we're going to use bob here instead of self now for any python developer who's been working in python for a long time this is going to trigger them big time because not only does it make the code much harder to read but even when you hover over a class it's going to say bob and what the hell is bob anyway thumbs up for bob even if at the end of the day it doesn't really affect the code or the functionality of the code it just affects whoever is working on the code but still one of my favorite things is that when you refer to the instance of the class bob is going to appear everywhere whether it's inside the initializer or in one of its methods up next we have something that i like to call a complete waste of time here we have a function that just returns a boolean and that boolean depends on whether a number is more than zero or not and to test it i created three print statements that use this function with three different numbers so the first one will return true the second one will return false and the last one will return false because the numbers that are more than zero should return true but let's spice up the return statement so we're going to return number is more than zero if the number is more than z z else we're going to return the number if it's more than zero so this is going to return true if this is true which is a complete waste of time otherwise if it's false it's going to return false and if you really want to spice this up you can also write if true else false and your colleagues are going to love this the functionality doesn't change at all the readability goes down by a million that's why they're going to love this and finally we have the final way to annoy your colleagues and this is personally my favorite one because it might be almost impossible to catch on depending on the complexity of your project but pretend you have a project that is as complicated as this and it relies on a lot of modules such as this custom module i created up here right now it doesn't have anything inside it just yet but we're going to import it at the top so import custom module just pr this is something that you use in your project and that your project depends on it so right now if we run the code it's going to run instantly we have hello printed to the console and the script runs as it should but what we're going to do is import time and call time do sleep for one second i really recommend you use a small number here to really prevent your colleagues from getting suspicious but now every single time they run main.py it's going to take a second longer to execute ute the code and considering you might run your script hundreds of times per day you've successfully wasted up to 2 minutes of your colleague's time for nothing per day now obviously i don't recommend you do any of this if you want to keep your job but if you hate your colleagues your boss your life or anything else these snippets of code can definitely spice up your life anyways i just thought that would be fun to share do let me know in the comment section down below if you have any good python pranks or if there was anything a bit mean that you did to your colleagues or to your boss in terms of coding but otherwise with all that being said as always thanks for watching and i'll see you in the next video