so i've been a programmer for a little over two years now for context i've worked for a big company in london as a software engineer before leaving that job to build my own projects and now co-founding a real tech startup but if i were to be smacked in the head by a wrecking ball and i lost all my knowledge about programming i would actually do a couple of things very very differently so i decided to make this video to tell you exactly what i would do if i was starting over from scratch because i imagine that a lot of you watching this video are in that situation right now and you have all these questions where do i start what should i focus on you an answer to all of this but it might not be the answer that you expect so to understand exactly what i would do i think we first need to understand what i did do so we'll talk about that first and also talk about the one massive problem with what i did and why you should probably not copy me and after all of that i will give you my conclusion as part of this video we'll also learn about trains i promise this will all make sense but before we go there i imagine a lot of you watching this video are perhaps looking to change your careers into tekken this is exactly what i did so i know how tough it can be one absolutely excellent way for you to change your career is through career foundry's full stack development program that is especially designed for career changes like you to take you from zero to job ready in as little as five months the programming is made out of three parts and into the front-end development which culminates in creating your own portfolio website a full stack immersion which is seven month long deep dive into programming and a full stack specialization where you'll specialize in python development other than more than 5 000 people who have completed career found risk programs they've seen some amazing career changings from uber drivers who have become web developers cabin crew transitioned into data analysts and much much and they also offer a job guarantee within six months of graduation or they will refund 100 of your tuition you will receive coaching from their career services team to ensure you stand out in interviews and build an impressive portfolio out of real world projects you can check out the links in the description where you can try out the free web development short course speak to your own program advisor or start the full program with a 10 discount thank you for career foundry for making this video possible and now let's get back to the story so i started learning to code when a couple of years ago i basically realized that the career path that i was on at that time was not the right one for me and for various reasons i decided that i wanted to become a self-door software engineer i started off learning the code by mastering the basics of what i thought to be the best beginner programming language which is python i ventured into areas such as web development and i started building out my first ever programming project and this whole period of my life is pretty some of the most exciting time of my life i was learning this new exciting skill i was going to watch this new career that i was finally excited about and i just loved waking up every morning and just thinking about the next thing i was gonna learn that day and i absolutely loved it after lots of twists and turns which we won't get into here because i've already talked about this in these videos i managed to land my first ever full-time job as a software engineer and i was absolutely ecstatic so i had made it right not quite because after i had done my job for a couple of months i realized that i had made a massive mistake with what i was doing i realized that the specific job and the company i was at was not right for me at all like i didn't find the environment exciting and i just came to the realization that i had gone for this path of becoming an employee at a big company not because that is really what excited me not because i felt like this was was gonna give me fulfillment but because that's what other people define as success so again long story short which you can hear more about in this video i quit my job to build my own project my own startup because at this time this youtube channel was also succeeding so i figured i can live off this youtube channel while i can actually work on the things that i want to work so what was the big mistake is it the fact that i realized that corporate jobs are soul-sucking and that you should not work a job you should start your own business it's actually not it's actually something slightly different and it will tie in to my conclusion as to what you should actually do before we talk about that there's also another thing that we need to understand because there's broadly four types of programming careers first the traditional nine to five big company stable job path obviously there's a lot of pros with this path even though that wasn't the thing that i ended up enjoying the most you have a lot of stability the pay in the beginning is going to be a lot higher compared to working for smaller companies because they just have a lot more money and the work-life balance and just how chill the job is is generally better compared to working for smaller companies or especially founding your own but the downside is that the long-term potential is much lower but it's more stable and more certain so like it depends on what you're optimizing for and for certain people like me the corporate environment might be a bit soul-sucking but then again for many people it might be the right environment so everything depends on you and your personality so what does it take to get into this career path well the bigger the company the more they will probably emphasize your degree the sort of prestige of your previous internships and things like this and specifically for the interviews on like how do you specifically get a job at these big companies is going to be a lot of lead code grind because it's these companies that usually test like these data structure algorithm types of questions and it's less about what you specifically know now and more about what type of person you are and what is your potential because these big companies they have the resources to train you so what about startups and smaller companies then well the pros are that you generally learn a lot more because you are actually working a lot more and you have a lot more responsibility and you're a lot more involved in the entire process the environment is probably going to be more dynamic which might be a pro or a con again depending on personality and long term the potential is to earn a lot more especially if you get equity in the company and the company in the sub doing well you could do really really well for yourself but of course if the company goes busts which is a lot more likely than with big companies then you might end up with nothing in terms of what it takes to work for a startup well as a startup when you're joining this very small company that doesn't have a lot of resources they're going to have much bigger expectations of you from the get-go because you're actually going to have large responsibilities which is great for the learning but it's going to be more intense and so they're going to emphasize practically what can you do now for the specific languages and frameworks that they use as a company is going to be critical and something like how much you know about computer science or data structure algorithms is going to be a lot less important what about freelancing now freelancing is interesting one of my coaching clients is currently a freelancer and the more we talk about this and the more i think about this the more i realize that freelancing is actually a lot more interesting path than the full-time job path in many ways because the pros of freelancing actually pretty great you get much higher pay because it's easier for the companies higher freelancing rather than a full-time employee you also get a lot more flexibility that you can just switch clients much more easily than switching jobs as well as you can often have a look independence and what it takes is pretty similar to startups to be fair because as a freelancer you're going in to do a specific job through your portfolio and your projects are going to be highly highly emphasized and lastly let's talk about founding your own company well this obviously has the largest long-term potential because if your company does well and you're a co-founder then well you can make a lot of money and again depending on your personality this is a pro or a con but for me it's a massive pro of not having to work for someone else but this is something that is not for the faint-hearted because it takes first of all the right idea it takes a massive amount of perseverance because in the beginning you are working for little or no money and no guarantee of future success and you're probably working much harder than in any of the other paths and it's just ridiculously difficult to found a successful tech startup which is exactly why i'm excited about it i'm weird okay but it's not for most people okay so bringing this all together what is the real point of me just listing out all of the different career paths and how how does this tie into the massive mistake that i alluded to before with what i did when i was learning the code well the best way to explain this is using trains so when i'm in london i often take trains from this train station called saint pancreas international the thing with this train station is that it goes into all kinds of places i could take a train and go four hours up to manchester but i can also take a train south across the english channel all the way to paris and these two trains won't go into manchester and one going to paris are sort of like the two career paths of a programmer where one is going towards building your own startup and one is going towards a nine-to-five job the two career paths require completely different things and completely different focus and most importantly a completely different personality the massive mistake that i made in the beginning was that it was as if i was at the train station and rather than stopping to think where am i even trying to go which train should i even get on i just sort of randomly got on a train that was going somewhere far because i was just like well as long as the train is going far i'm going to do well and so it wasn't until i was already on the train to manchester that i realized that well why the hell am i going to manchester it's a hole by the way i ended up just like getting on one train realizing that this wasn't the right one getting off then hopping on another one to go in this direction and then going a bit in the this direction before i finally actually stopped like right let me just choose the correct train and put all my energy into just getting on a freaking bullet train towards that one destination and that for me was the moment when i realized that as hard as i was going towards the goal of becoming a great corporate employee software engineer it was taking me into completely wrong direction but again the point of this is not to say oh f cobra jobs usually all like found your own startups because honestly for most people manchester is the right destination the corporate the stable career is the right destination so the point of this is that you should just stop thing but where are you actually trying to take your career what are your goals what excites you what is the reason why you learn the code in the first place and what is the kind of life you want to build for yourself because you don't wanna be stuck on the wrong train so i guess at the end of the day try to choose the best option for you given the information that you have and given what you believe your goals to be but if they change also don't be afraid to get off the train and get on a different one so as much as the point of this video is for you to stop and think and realize that different programming creates require different focus and require different things from you as a different type of person you really can't make the perfect decision ever so just make the best decision you can go to watch that direction and if you realize that it's wrong then just try again but the real point here is to keep your why in mind and if you update then you should update your direction and your focus okay so whichever one of these programming careers you focus on there is one thing that is certain it's not going to be easy and there's actually three things that i learned in my own journey that that had i just known them beforehand would allowed me the same so much time and make the entire process so much easier and i talk about what these three things are in this video right here so alongside this video i highly recommend you watch this video because whichever path and whichever why you choose these three things are gonna make your life so much easier so i highly recommend you watch this video next