- [narrator] so, many trapped in a world they think they can't escape. so, many with dread in their
hearts as 10 turns to 11. so, many unanswered questions. so, many to save. - for some, linux may be the answer they've been looking for. and windows 11 could be their
reason to finally try it. but anthony you say, installing linux is a
complicated and scary process. well, here's the thing it's really not. so, let's go deeper and see for ourselves how easy it really is. perhaps it's easy as checking
out our sponsor war thunder. war thunder is an online
military vehicle combat game that is free to play and a lot of fun. try it for free down below today and get some special bonus
items just for signing up. (upbeat music) conceptually, linux is very
different from windows, pretty much across the board. some of these differences
are primarily visual while others are much more fundamental. if you've heard of linux before, you've probably heard that it's open. now, evangelists will tell you that, that means free as in speech. and this is true, and that anyone can take a look at the source code and modify it as they see fit. but what it means in practice is that not only is it able to support a wide variety of hardware, it's also extremely customizable. with desktops that can
mimic the look and feel of any existing operating system or be something entirely unique. you get control. not only that, you'll hear people say that it breathes new life
into old pcs, but why is that? the reason is that the
open nature of linux means that it comes in
many different flavors, known as distributions or distros. there are distros with lighter or heavier system requirements, dramatically different aesthetics and even different ways
of installing software. now, here's some good full
feature, desktop oriented ones. if you've got one that you like best, let us know why down below. our example for today is going
to be pop!_os by system76, which is a good
recommendation for new users. not only because it's
part of the well-known and well-documented
ubuntu and debian lineage, but it's also because it
has a number of features and sane defaults that make it friendlier and easier to get up and running. start by downloading the iso. now, pop!_os comes in two flavors. one that includes the
very special nvidia driver and one for everyone else. you can use either, but it's easiest to download the iso that best matches your system to reduce the number of steps
required during installation. now, you could just burn it
if you've got an optical drive and a blank dvd, but if like most of us, all you've got is a flash drive, you can grab one of a
couple of different tools. the easiest to which being balenaetcher. it's so easy in fact that
it's just three steps, select the iso, select the flash drive, and then click flash. for pop!_os that's all you need to do. but if you've got an image
for a different distro, for example, that fails to flash this way, we look to a more
versatile tool like rufus. looking at the main window, ignore the persistent
partition size slider for now, and look at the partition scheme option. for most people, mbr is perfectly fine because it supports both
legacy bios boot and uefi. you'll really need to
use the advanced options, but the fixes for old bioses can help if you've got a very old
computer you're trying to boot. for file system, you'll almost
always want to choose fat32. now, ntfs supports files that are larger than four gigabytes, but it's less compatible overall. you'll also always, always want to choose the default cluster size. larger clusters can improve
transfer performance for larger files at the
expense of smaller files and vice versa. finally, you can choose to
create an extended label and icon files, which just
makes your flash drive show up in a fancier way on windows. if you fancy like that. all this left is to click start and wait for it to do its thing. if all went well, you're
now the proud owner of a flash drive with linux on it. congratulations, it's a penguin. time to plug it in and give it a whirl. power on your pc and enter the bios. we'll need to first make sure that the flash drive has shown up and is first in the boot order. and second, we need to make sure that secure boot is disabled. otherwise, you'll just
get this fun message when you try to boot. the doors and ubuntu both
support it, but as far as i know, every other distro out there,
including pop!_os does not, unless you do it yourself. blame microsoft. in most desktop bioses, disabling secure boot
requires the key store to be deleted like this, but laptops, all in ones and prebuilts
may have a simple toggle. save and exit, and you should be booting from your flash drive. i know you can do it. after the first screen, you'll
be treated to an impressive looking array of very technical
messages as linux boots up. these make troubleshooting a lot easier, but solves partway through. some distros cover them
up with a boot screen, but you can usually hit
esc to show them again. it may take a little while to
boot after the final message. so, give it a minute before assuming something is going wrong. if all goes well, you'll be
looking at the pop!_os desktop and an install pop!_os
window will come right up. choose your language and region, then choose your keyboard layout, english u.s. default will work for most, but you can choose
alternatively out here like dvorak and colemak. next, pop!_os will give you the option of customizing your install,
just like lttstore.com, lets you customize your water
bottle with free stickers. nice. now, if you're super eager to get going, you can go through the installer now, but if you'd like to poke
around in an environment where you can't break anything, now's a great time to do that
by clicking try demo mode. this is pretty much the same thing you're gonna get after a default install. and it's a great opportunity to make sure that all your hardware is up running. particularly your audio, your networking, and your display driver. once you're finished poking around, it's time to come back to the installer. a clean install is the most straightforward, so let's
go ahead choose that option. choose the drive you want to install to., and then you'll be brought
to the account setup screen. a username will automatically generate based on your full name,
but you can change it if you prefer. click next, choose a password, then the next step is
to install the files. once it's finished, reboot and you'll boot right into pop!_os. now, if you don't, make sure it's selected as
default boot device in your bios. it should show up as pop!_os like so. once you're booted in to pop!_os, log in and you'll be greeted
with the post-install setup, unlike a certain other operating system, this only features a
single privacy setting. with everything else,
being things like typing, time zone, and how you want
your dvorak and top bar looking function. i like it best when it's set up like this, but you're not limited to anyone layout. if you're okay with installing
extensions later on. pop!_os uses a common desktop
environment called gnome, but system76 is homebrew
extensions installed. here's my layout at home. it's kind of a not windows looking set up, similar to a different desktop
environment called plasma. depending on how fresh your iso was. pop! shop will ping you at this point saying that there are updates available. now, this is your app store. go ahead and launch it and
click the installed tab to download any updates that are waiting. then you can start to install your apps. it's ridiculously easy to do. discord one click, obs one
click, steam one click, needing game performance
metrics and lagging ? grab goverlay. emulators, they've got a
retroarch, dolphin, mame, dosbox, never even had to open a browser. i hate opening browsers. now, that's not to say that
the interface is perfect. clicking out of category will
just give you an alphabetical listing of software with no
sub categories or filters, which can be overwhelming to say the least when you're just browsing. and advanced users will notice that some under the hood packages
aren't listed at all with no obvious way to change that. you can install the
synaptic package manager to get both of those features though. the only problem is that
it's far less user friendly. thankfully, if there's
something that you need, that's simply not available at all, you can add an extra source
in pop! shop's settings. most software has a launch pad
or personal package archive that you can add there. as the name suggests, these
are curated by the authors or users rather than the regular operating system maintainers. so, only use these for software you trust. wine, the software that allows you to run windows programs on
linux is a good example of this because the version included
in pop! shop is quite old. however, the developers have decided to host their own and provide
instructions separately. so, we'll have to use
the terminal instead. now, don't worry too much. this isn't very common
and because we trust wine, we can just copy these
commands and paste them into the terminal like so. once you're done, go ahead
and type this command to finally install the latest
stable version of wine. now, you can exit the terminal. i also recommend installing
winetricks while we're at it, to manage our windows settings. and to be clear, you
don't need any of this to run games through steam, which launches windows
games through its own included proton layer. after all your installs are done, open the applications drawer, and you'll see that they're ready to rock. no extra steps required. steam opens right up and
you can log in as normal. before you go wildest on games though, you should enable proton for
all titles under steam play and steam settings menu, click okay, steam will restart and you're good to go. cool, right? like i can just straight up
install cyberpunk for example, and it'll work. in fact, it works really well for a game with a silver rating. like it must've been in like
a recent update or something. i don't know. you can check how well the
game is expected to run, as well as how it ran in the past, and whether anything
special needs to be done to get it working on protondb. the vast majority of
games work out of the box, although with some caveats,
we'll get to shortly. but first, if you have an nvidia gpu, shadowplay doesn't exist in
linux and that's a problem. but what if i told you, there's a way to get
something even better? it's a couple of extra steps
and we're going to have to use the terminal to do it, but
trust me, it's very worth it. first, download the code from
the nvidia-patch repository and extract the zip file. then go to the folder you just extracted, right click the empty space
and click open in terminal. next, type this command and hit enter. this will enable nvfbc
or framebuffer capture. the extremely fast method that shadowplay uses to capture the screen, and something nvidia normally has disabled for geforce cards by default. that wasn't so hard, but we still have to install
the plugin for obs to use. unfortunately, there's no package for it in pop!_os or ubuntu right now. so, we'll have to download it ourselves. to be clear, this is
one of the last options you want to use as far
as installing software. download the code from this
repository, then extract it, go to the folder and open it
into the terminal like before. now, we need to install some things before we can actually continue. so, type this command, hit
enter, and have your password. now, type these commands,
hitting enter after each one, and once that's done, you can go back to the files window, go to the build folder and copy this file. go to your home folder, show
hidden files, then go here, make a new folder called plugins. then in there, make new
folders that look like this and paste the file you copied
before, and you're done. linux veterans will point out that we could have done a
lot of this more quickly if we'd done more of it in
the terminal, and that's true. the terminal is really
handy for a lot of things, especially for tutorials
where it's the only truly common factor between
linux distributions, but contrary to popular belief, it's not necessary most of the time. it's just faster or easier if
you know what you're doing. if you weren't familiar with it, using it in short burst like this can help you get acclimated
and learn what can be done just by typing a few words. now, we can go to obs and add
the nvfbc source to our scene. and look at that, high resolution, high frame rate screen capture
with very little overhead, just like shadowplay. if you open up system monitor, which is kind of like
the windows task manager, you'll see very little cpu usage. you can combine this with nvenc for high-performance gameplay
streaming and recording too. oh, and did i mention
that most game controllers just work out of the box? the list of devices that linux supports is much larger than the list it doesn't. and the majority of those
are a result of a company not releasing the driver
or at least not releasing the information relevant
for making one from scratch. nvidia is much maligned proprietary driver on the other hand, works pretty well and has been getting
some serious attention of team green recently with dlss, and ray tracing support and more. pop!_os comes with the latest drivers and updates for them come
down through the pop! shop like everything else. so, if installing linux,
isn't that big of a hassle, why haven't more people jumped on board? well, the main problem,
at least in the past, is that for all the freedom and control you're getting from linux, you had to give up performance
or functionality, or both. especially in gaming, but since the release of
valves wine based proton compatibility layer in 2018, things have been exploding to the point, where the vast majority of steam games run flawlessly on linux with
no configuration necessary. the biggest issue for linux gamers is the fact that many anti-cheat programs still don't work properly at all. meaning that games like pubg,
apex legends, destiny 2, and rainbow six siege are
just presently unplayable. despite working in offline mode. this spills over into
productivity apps like microsoft office and creative cloud where their anti-piracy implementations fail to authenticate thanks to reliance on an integrated the internet explorer. yeah, disgusting. but compatibility is rapidly advancing. so, get subscribed, so you don't miss our annual-ish linux gaming update. at the end of the day, my personal advice is to use
the tools that fit you best, whether that's windows, macos, linux, or even something else entirely. and if these compatibility
issues are showstoppers for you, i'm not gonna no wag my finger at you. expect you to find an alternative. what i am gonna do though,
is ask you to give it a try and see if the alternatives work for you. i find immense joy in trying new things and finding better ways of
doing what i like to do. and with linux, the sheer number of different
ways of doing things means you're extremely
likely to find something. anything at all, that works better for you than what you're doing right now. you have only to look for it. and hey, maybe the thing is our sponsor war thunder. war thunder is a free to play online military vehicle combat game available on windows,
mac, linux, ps4, ps5, xbox one, xbox series
x, all with cross play. they're incredible arsenal of more than 1700 historically accurate playable tanks, aircraft, and ships from
the 1930s to the 1990s, have attracted more
than 34 million players from all over the world, myself included. you can take part in massive
combined arms battles on more than 80 major
battlefields from world war ii to the end of cold war. and it's still an active
development with free major updates every couple of months
and even more content always coming through, including vehicles, maps,
and new gameplay features. head to the link below to start playing war thunder for free. and you'll also get a free
premium vehicle for signing up. thanks for watching guys. go check out our recent video
on how to install windows 11, to get a sense of how difficult or not. this was by comparison.