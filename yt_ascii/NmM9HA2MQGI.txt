we talked a bit about end-to-end encryption already and a lot of the assumption is that we have some kind of symmetric key that we can use to talk privately so you and me have some kind of secret key and we use that to talk securely diffie-hellman is how we get that secret key diffie-hellman was first published in 1976 and has become pretty much a staple for any kind of cryptography at all right whenever we use cryptography we usually need to have a symmetric key and to get that we often have to perform some kind of diffi helmet it's so prevalent that your phone is probably doing it right now right you when you're logged onto the browser to watch this video you perform the diffie-hellman key exchange when you open up your phone and it connects to any server it'll almost certainly perform a diffie-hellman key exchange if not now then in the next few minutes right it's it's unbelievably important and unbelievably common the problem with diffie-hellman is it's quite mathematically complex it depends on your level of mathematics so what i thought we'd do is i thought we'd cover the mathematics in extra bits and then we'd look at a kind of worked example of what actually happens as an overview for those people who just not interested in mathematics because they don't need to implement it and they don't really really mind so we'll do both and that way hopefully there's something for everyone we shall see so perhaps diffie-hellman key exchanges is slightly misnamed in the sense that what we don't actually do is exchange a key because then it would be out in the public and we would see it what we actually do is exchange some public variables and we combine them with some private variables we've kept hidden so that we can both create the same key right so we're actually creating a key together in some sense so as always we'll go back to alice and bob for this so let's have alice over here right and bob over here i'm going to sort of spread this out a bit because we're going to bring these in and i don't want to run out of space right so alice and bob are here these are their own machines and this is the kind of public area so anything that alice and bob send to each other or agree on in public is going to be in this area so as an attacker if we want to break this key exchange if we want to find out what the secret key is we have to use these variables to do it right and that hopefully will explain why that's difficult to do okay so the first thing is right at the beginning of the tv helmet key exchange alice and bob have to agree some mathematical parameters that they're going to use this is a value g or a generator and a big prime number n right now for this example i'm going to use color mixing to try and explain this i'm going to write the letters in as well n won't have a color for the sake of this analogy g does right so g is going to be let's go with yellow right now i'm going to sort of squirt this in and hope that it doesn't go everywhere in fact we kind of need two copies of g really so let's just sort of fill it up here up to about i want to get them the same so far so good so far it's not all over my desk all right close enough right well it's kind of yellowy [music] often they're shared at the very beginning of the handshake sometimes they're just embedded in standard or everyone always uses the same one it depends on the on the situation it can take a little time an extra message to send these things across so sometimes having them stashed ahead of time is a good idea so we've got g right this is this is g now alice to begin with needs to calculate a private key right or private variable i'm going to choose red for alice there we go probably could use more food coloring it's kind of pale red is that red yeah close enough what do you think it's rose coloured now bob is going to do the same thing he's going to have a private value which is going to be blue right now i haven't chosen very interesting colors that's simply because there aren't that many colors available in the shops for food coloring and i didn't go through that much effort there we go i suppose blue now these two colors are in their private area this is this is a and this is b so i'm going to label these this is little a this is little b now the important thing is that these are never shared with anyone alice doesn't share this with the public alice doesn't share this with bob now the first thing that happens is that we need to combine the private key with the generator to before to produce a public key right now the point is that once we've combined them we can't unmix it right that's why people like to use this color analogy once we pour two colors together it's difficult to know what colors went in right because it yes okay so if i pour red into yellow it maybe make orange but it could be but it was a bit more yellow and a bit less red or you know it's difficult to know right so it's kind of orange for alice and bob's gonna take his blue i can't need them to be the same level really and it does kind of make green this is a bit orangy let's not critique me too much so yeah they're very different to the originals and the important thing is that we don't know what went into here right we know g but we don't know a and we can't find out so this is actually this here this public key here is a g in some sense it's got an a in it it's got a g in it right this one has got a b in it and it's got a g in it and we can't extract the a's we can't reverse this process now they then are going to exchange these two public variables but keep the private ones back so we're going to sort of draw an arrow over here and an arrow over here and they're gonna switch them like this right so they get sent out in clear text these are now in the public area because they've been sent in plain text everyone's seen them right so now as an attacker i know bg or bob's public part of his key a g alice's public component and g and n right i don't know anything else i don't know what a and b are now this is the final part diffie-hellman it's not actually very long you can do all this in three messages alice is going to take the public component that bob sent her and add her private key and bob is going to take alice's public component and add his private key so we're going to get in essence a mixture of a and b and g all right that's the idea so let's do that now so is that in the private domain yes this will be done privately because these are never neither never no so these go into the private domain now i mean i could make a copy of them let's not so alice is going to add her red in so let's go let's just add some red up to about there it doesn't really work because they're ready to be faint and then bob adds in his blue which is going to be like that and hopefully this is where it all doesn't work or does work these two values are kind of the same i mean they're not they're pretty close that's a little bit darker perhaps because the blue's a bit stronger considering you've done that without actually measuring anything yeah i mean obviously you would do this normally with mathematical with mathematical functions that are much more precise than my random squirting of liquids now so those two are now in in the private these are yeah this is private so alice has taken bob's bg and added her a so that gets a b g and bob takes alice's a g and gets a b g by putting his b in there right now the order doesn't matter remember just like mixing colors the mathematics is such that if we add in b first to g and then we add an a it's the same as adding an a first so these two values are exactly the same if you wanted to try and recreate this as an attacker you can't do it because you have a g and b g and g and so you could mix these two together and you would get a b g g in some sense mathematically this is a little bit tenuous but we'll talk about that in the extra bits the point is nothing in this public area can be combined in any way to get this value or this value which are the same the only way to do that is to find out what a and b are and the only way to do that is to split up one of these two public components which is very very difficult to do right and that's what's so cool about diffie-hellman in a few messages we've sent some public but some public numbers around and we've used our private numbers to get a shared secret that no one else can know now you would generally do this at the beginning of every conversation and you would use this number combined with perhaps some session variables something like this to derive secret keys for using things like aes right so this is actually just going to be a number which would vent her hash to turn into an aes key or something like that now the mathematics behind diffie-hellman is usually modular arithmetic recall that we have our public numbers g and n g is often very small it's usually a small prime number n is often very big and needs to be big for the security of this to work n is often 2 000 bits long or 4 000 bits is more common now