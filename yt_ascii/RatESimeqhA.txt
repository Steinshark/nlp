react has been so in demand for a while now 
and it's really made a spot for itself or a   name for itself it's it's not going anywhere 
so i'm really excited to go through a react   tutorial with you today as someone who's been 
a software developer now for over four years   it's something that i still get excited about is 
taking different tutorials and learning new things   react was actually my first 
library or framework that i learned   back i guess almost five years ago and at 
the time i thought this is impossible how   does anyone ever get the hang of this i'm never 
going to understand this but what you do is you   keep on practicing you keep on learning and then 
all of a sudden it becomes like second nature   now i'm really excited to do this tutorial 
with you because i haven't touched react in   for three years three and a half years i used 
to use it on some side projects but i've really   been for the last few years i was working 
with node and express and building apis and   working with databases so more back end things 
and then the current project i'm on i'm doing more   front-end things but not with react so i'm really 
excited and kind of nervous to dive back into it   for this we are going to be following along with 
react's actual documentation i mean what better   way to really dive into react than following 
along with their documentation this we are   going to be building a tic tac token so once 
you are done this tutorial you will be able to   say to all of your friends that you built 
your or you coded your first tic-tac-toe game   before we get into it though let's talk about 
what exactly is react google knows it all and   google says react is a free open source 
front-end javascript library for building   user interfaces on ui components so some of the 
great things that i really like about react is   you can really have different components for 
different kind of ui features so for example these   different ui features can be reused and rather 
than having to constantly build out the code over   and over again you can just reuse the existing 
components which is really great before we get   into it though make sure to hit that subscribe 
button for more coding and tech related videos   leave down in the comments other tutorials you 
want us to take together i thought this would   be a really fun series to kind of be like coding 
buddies continue to learn and holding each other   accountable to learn new technologies even if 
we don't dive deep into the technologies getting   an understanding for different technologies 
out there i think is so important to stay well   versed and up to date in the tech industry 
okay enough of me talking let's get coding okay so on screen here now we have the react 
docs pulled up to build this tic-tac-toe game   it's a very simple tutorial that we will be 
following along and the whole purpose is though   that they provided this on their documentation 
is because it gives you the skills that you need   to really build any react app and what i mean 
by that is there's only so much things that   you can do with react for the basics anyways 
and then from there you just build onto it   so if you are able to successfully complete 
this tic-tac-toe game there is so much other   things you can build with this and it really 
is a great way to understand the fundamentals   so as you can see here on screen we have the 
react tutorial and if i scroll down a little   bit you can see that we will be building the tic 
tac toe game and there are some prerequisites   there are two options when you are setting up this 
tutorial one is that you can set it up directly in   the browser or code in the browser or you can 
set it up locally for this tutorial when we are   following along let's set it up locally let's have 
a little bit more of a challenge and and really   dive into react so to start with we really need 
to make sure that we have both node installed and   as well that we have create react app installed 
i'm not sure i actually don't think i have create   react app on my personal computer right now so 
let's go through the steps of setting that up   okay so as you can see the first thing to setting 
up a create react app is we need create react my   app my app so just to make any first app 
and for me make sure you are doing this in   whatever folder or place that you want this app 
to live for me as you can see i literally just   put it on my desktop i'm kind of notorious for 
that i always regret it later because i'm like   oh there's so much things on my desktop but 
it's what i do okay we can see here that it   has successfully been installed so next 
up let's go right into the app so cd my app and then let's run npm start and as you can see i'm sure this came up for 
you as well we now have localhost 3000 running   let me show you right here there you go amazing 
first step is complete so now let's go back to   the tutorial and see what they are saying to 
do next they are saying on point number three   to delete all files in the source folder of 
the new project okay so let's go and open our   vs code our project nvs code and do just that 
also just so you know i'm going to stop running   on localhost right now because it's 
just kind of to test to make sure it works   okay so as it says here delete all files 
inside of the source folder there also   is an important note to actually do 
not delete the entire source folder   just the original source files inside it so 
make sure to keep the actual source folder   they give you command to do that on terminal 
i'm literally just gonna delete from vs code okay now we should have an empty source folder 
next step they are saying to add a file named   index.css inside the source folder and they 
are providing the css code to go along with it so they are saying to take this css code here from 
the tutorial and put it right in css file and this   the reason they're providing this is so we can 
really focus on the react part of the tutorial not   necessarily building up the css structure of 
it next step they are saying is to add a file   named index.js to the source folder with this 
javascript code okay we got this we can do this and they want it with this javascript 
code so i'm going to go command   a command c this is on a mac by the way go 
back here and command b and then they're   also saying we need to import react from react 
import react dom from react dom and then also   import the css all to this index.js file so 
let's do just that make some room at the very top and there we go okay now it gets to the exciting 
part they are saying we can simply run npm start   and then going back to localhost 3000 in the 
browser we should see a tic-tac-toe empty field so   this they really provided us a structure to start 
the tutorial without having to worry so much about   code that isn't necessarily relevant to the 
actual react part of this tutorial which i   really like that they gave it to us especially the 
css because that's a whole other tutorial on its   own react the react tutorial is not here to teach 
you about css so it's really nice they did that   let's run npm start make sure at this point also 
you are inside my app or whatever you named it okay we can see here we have an empty 
tic tac token okay this is great   okay now we got the basis of our project 
set up so now we can kind of dive into   react the exciting part of why we are all 
here so it says here that react has a few   different kinds of components but we'll 
start with react.component subclasses   okay so let's really look into what the starter 
code what they provided for us so as you can see   when we look on screen we essentially have three 
react components we have the square we have the   board and then we also have the game now usually 
at this point i would say especially when i'm   using code that i didn't build from scratch i 
always love to really what's the word kind   of reverse engineer what the code is on screen so 
this is just a little tip and what i'd like to do   is comment out different parts of the code to see 
what parts of the code are doing what on screen   so this is if you are doing any kind of front 
time project it's a great way to really have   an understanding of okay this component here 
i see if i comment it out it's going to break   the ui for this so that means it's doing this and 
it's a great way to really get into understanding   exactly what's going on behind the scenes now 
for this part of the tutorial i'm not going to   do that just because there's not even enough here 
to break the code at this point but we will later   on just to play around with it so what they're 
saying to do next in this tutorial is to pass some   data through props so let's try passing some data 
from our board component to our square component   so let's navigate together to our board component 
and we can see here where it says render square   what they want us to do is pass a prop called 
value to the square so change this from   here to pass a prop which would be value 
equals curly brackets and then the value   so right now it's just going to be i so whatever 
is passed into render square the value will equal next up they want us to change the square's 
render method to show that value we are replacing   okay so let's go to squares render method and in the to do that is where we are going to 
be passing in the value this dot props dot value   okay now let's save that and let's go 
back to our local host and we should see we should see some numbers now which is pretty 
exciting as you can see so prior there was no   numbers and now that we are actually passing 
in a value for the numbers we get the numbers so now we're passing the value but we really need 
to make the component interactive so let's go   back to the square component they are saying 
and they want to similar to tic-tac-toe   fill the square component with an 
x when we first click it so x and o   so first we need to change the button tag that 
is returned from the squares render component   or render function sorry so now when we are 
in our square component let's do an on click and at this point they want us to console log out   click just to really see that it 
is coming in so console.log click okay so let's go back to localhost our browser and then we should see if you 
go left or sorry right click   inspect into our dev tools go to our console and then if we sorry if we click on a 
number you can see click okay that's   pretty exciting especially if this is your first 
time using react or really any kind of dev tools   okay going back to the documentation you can 
see the next step is they want the component   to actually remember it got clicked right now 
we're logging it out to see that it's clicked   but now we need it to remember that and for that 
we use something called state so as it says in the   documents this dot state should be considered 
as private to react component that it's defined in   so in this case let's just jump right in and kind 
of go through it i think that will be more clear   than talking through it but it does give some 
examples in the react tutorials so it says let's   store the current value of the square in this 
dot state and change it when it state when the   square is clicked so let's go and go to our react 
component and now let's add in the constructor so now as you can see we set the initial state 
the value right now is just not so the initial   state is null before anything is clicked or done 
to it then if we go down in the tutorial we need   to change the square's render method to display 
the current state value when it's actually clicked   so let's follow the instructions it says to 
replace this props this dot props dot value with   this dot state dot value inside the button tag so 
here we go because now we are using state so that   makes sense and then the on click event handler 
obviously right now it's just logging it out   into the dev tools the click with exclamation 
marks so we need that to actually set the state okay so at this point as it says now 
that we are actually doing the on click   handler in the squares render method what this 
is doing now what we have done here is you can see   that whenever this button is clicked with this 
dot state dot value what it is essentially doing   is whenever this square is clicked to replace it 
with the x okay so let's test it out and ensure   it is working i always after i do pretty much 
any kind of coding even if it's a small amount   i always like to test it out because if you get 
too far into it without testing i think it's   it can cause a lot of problems especially when 
you want to see especially if you're doing front   end or even back into i test quite a bit all 
the time actually but it is a great way to   ensure that you didn't break anything or if you 
did break something you didn't change that much   code that you're gonna have to spend another hour 
debugging hopefully okay so let's go to localhost refresh what the heck there we go so now 
you can see here wherever we click   we get the x's and then when we refresh 
it goes back to resetting the game okay   we're almost there we have the x's coming up for 
tic-tac-toe so the next step under completing the   game and as it says here we now need to have an 
alternative placing for x's and o's on the board   so and it also says to check for a winner 
will need to maintain the value of each of   the nine squares in one location so now what 
we need to do as it says in the instructions   is the board component should tell each 
square what to display by passing in a prop   and just like we did when we passed in a 
number to each square and also here they have   highlighted in bold which is really important 
is to collect data from multiple children   multiple children components you need to have 
declared the shared state in the parent component   instead so that's really important to know and 
the apparent component can pass down the state   back down to the children by using props so when 
i was first learning react i always thought of   it like pretty much literally when parents 
are passing down knowledge to their children   okay so next up let's add a constructor to 
the board and set the board's initial state   to contain an array of nine nulls corresponding 
to the nine squares okay let's go do just that okay next up we need to now use 
the prop passing mechanism again   so what they are saying to do is we need 
to modify the board component to instruct   each individual square about its current value 
whether it be x o or null so now we need to go   back into the boards render square method 
and kind of update it so let's do just that okay so now that we have updated 
the render square method to include   the this dot state dot squares and whatever 
the value of the squares is hence the i   next up we need to change what happens 
when an actual square is clicked   so as it says here in the instructions we 
need to create a way for the square to update   the board state since the state is considered 
to be private to a component that defines it we   cannot update the board state directly from the 
square so that makes sense so what they're saying   to do instead is pass down a function from the 
board to the square so back in the board component i'm going to space this out a little bit here okay so next up we need to add some changes to 
the square component because we are passing down   two props from the board to the square so 
instead we need to replace this.state.value   with this.props.value in squaresrender method 
and replace this.setstate with this.prop stop   on click in squares remember method 
so let's go do all those changes and we can delete the constructor because the 
whole purpose of it initially was to keep track   of the game state but because we don't need it 
and it doesn't do it anymore we can delete it   oh and also i actually was just about to move on 
but i realized i didn't change this.value to this   dot propped stop value okay so as i'm sure you 
saw we did do a make method called handle click   or we're utilizing one but we've yet to actually 
make it so that's the next step so let's do that   within the board component itself and we'll 
do that right above the render square method it should be defined should it not be defined 
what's going on here oh i know why i have slice   here instead of squares okay this is why i'm 
telling you sometimes it just takes a long time   for the most simplest things okay please 
work yay okay we got it if that was you two   we figured this out together okay let's move 
on so next up what are we doing we have here   now this as you can see you can actually 
use this method and it will actually work   now let's we are so close to completing this game 
let's just finish it okay i feel like i keep on   saying this but we are almost there so one thing 
we're going to do is some code cleanup now so with   our square component because we are not doing 
any state or anything with state in it we can   actually just make this a function component 
instead so let's go back to our code base   and we can replace the current square 
component with this so let's do function square and then pass in props   then from here we can actually remove the render 
and remove the extra bracket and then now we don't   need to use this dot prop so you can just use 
prop start value okay oh and then also to make   sure if you haven't already for on click we can 
update that to simply be on click and make it   this dot oh sorry not this dot props props dot 
value props dot on clicks we're calling on click okay so now we need to ensure that the os can 
be marked on the board because currently if you   were to test it out the o's wouldn't be able 
to so let's go back to the board component there we go and they are saying we can set this 
by default by modifying the initial state in our   board okay cool so construction props we're going 
to go into the state which are saying we need to   modify and also add x is next to be true which 
is going to be a boolean so either true or false   based on determining which player goes next 
and the game state that will be saved okay   and they say we're going 
to update the handle click okay and just as the last thing let's change the 
status text in the board so the player knows whose   turn is next and to do that all you need to do 
is go in the boards component and under render   here instead of it just being a static next 
player is x let's change that to next player is x or is   o so now let's go back and view the full code at 
this point and make sure everything is working next player is up we're not getting any o's in our in our 
project so let's go back and do some debugging okay i'm not sure if this happened to you or 
if you already figured it out but for me what i   forgot to do is in the handle click method here 
i could see that the squares are always equal to x   and one way i kind of backtracked with that is 
saying okay if x is just always appearing where   is x being declared where is it first coming 
in and where is o supposed to be coming in   and then you go kind of backtrack okay 
on handle click obviously on the click   the square will be shown either x or 
o so that's why i need to go right   to the handleclick method and then 
when i'm there i can see squares is   simply just declaring x which we need to 
ensure is x or o so let's update that to this dot state dot x is next and then it will 
be x otherwise it will be oh okay let's go back   and give this a try x fingers crossed for o yay xo okay we just made our first react game or your 
first react game and it's pretty cool listen   it's a simple game but what i challenge you to do 
is continue on with this tutorial whether it be   creating more ui out of it creating maybe a back 
end for it maybe creating i don't know there's so   many possibilities but taking this project to the 
next level i always say one of the things that is   easy to do when we are learning something new 
is getting stuck in what's called tutorial help   so you take tutorial after tutorial after tutorial 
but in reality yes tutorials are important but   equally as important are building your own things 
and what i used to do is really build from this so   next steps there are more steps that you could 
actually follow for this react tutorial so i   challenge you to do that and then also to build 
something on your own see what you can create i   hope you enjoyed going through this tutorial with 
me i as i said i'm starting this series of doing   different tutorials together because i just feel 
like sometimes you need a coding partner coding   buddy to really dive into different projects with 
if you have any questions or got stuck anywhere   along the way i'm always here to help you so leave 
them in the comments and i'll do my best to debug   with you make sure to hit that subscribe button 
for more tech and coding related videos shout   out to some of these subscribers here thank you 
for being amazing and okay i'll see you all soon you