uh okay writing a node library in rust just recently written metlow is an open source api security tool you can set up in less than 15 minutes that inventories your endpoints to text bad actors and blocks malicious traffic in real time there's no way you're setting it up in less than 15 minutes that's like like we should test this fake news i i honestly i don't want to test it because two hours and i'm gonna be too upset to say to stop but also we do this by shipping an agent that integrates with any tech stack that analyzes and blocks api traffic as it's coming in okay the issue that we needed to make our agent support a ton of platforms like nginx node kubernetes go aws traffic monitoring etc so either we could reach three dots after an etc like that shouldn't just be one it actually no to properly do it in an etc you have to do two etc etc etc true yeah so normally you just do it twice you don't you don't ellipsey for dramatic pause and etc nice just throw that out there stop talking about my nods chat okay i'm just i'm i'm an empathetic listener okay i like how we do one video together and people are just like look at tj nodding along as prime is wrong about a concept hey at least at least they're dunking on me and not you you're just being a nice guy they're like look how nice tj is when prime's such a dummy i'm sitting over that moon but it feels like then all i didn't say anything all i did was just nod the whole time i have no i mean empty head i know look at that empty head you've got a see-through is that a skateboard ramp underneath smart about it i love the spice i love the spice of that statement it in came rust with its ability to create c compatible library that could be that could then be consumed by various ffi libraries on required language or using low latency communication systems like grpc or pipes nice i'm confused at this whole grpc in low latency talk just because grpc is i mean uses http 2 you know well compared to like json rpc it's probably low latency right well can't you just say you don't know right like are you communicating to the backbone and you're on the backbone or are you communicating crappy internet shooting through elon satellites bouncing across the world like i don't know what's happening here we'll explore how we did this for node.js using rust-based library called neon i've heard about this neon i've actually been wanting to explore this by the way i work at netflix did you know that tj holy cow that seems really cool i bet you get a free netflix subscription you will shut your mouth and no i don't anyways i i try to self-promote me working at netflix almost as much as you self-promote the fact that you stream on twitch.tv yeah oh i do stream yeah that's something that you mention it crazy yeah so i've actually i'm i'm gonna be investigating neon because i hear that you can you can it's it's actually pretty dang easy so i'm actually i i like this this is kind of exciting this is actually this article has got an except exceptionally more exciting so what is it i'm ready as described by neon itself by the way we need to quit calling things neon there is entirely you cannot search up the word neon plus it's like spelled the same as the actual like people do look up real neon things too there's also neon database provider yep there's just too many things called neon as described by neon itself neon is a library and tool chain for embedding rust into your node.js apps and libraries so essentially neon enables us to run rust code along with and inside our node.js code let's look at a timing example here npmnet neon hello world yeah that's kind of cool i didn't realize you could do that they're just using npm i mean isn't this 2023 why not like discuss the various merits of the different package managers you're right because we should have considered yarn or pnpm both harder to say and spell than npm yeah all right well whatever whatever don't worry it's 2023 lots of lots of time left in 2023 we'll have a fourth one soon don't worry i do hope so i think it's gonna be called neon which is crazy neon and it neon neon that's why neon neon or neon install neon this sets up an npm package with the starter code for for setting up a rust library here's the build cargo file okay beautiful beautiful blah blah blah blah dependencies got one of those the important bits that cd y live part yep the like lib yep that's anything that makes it special and you also need this thing right here so this is actually nodes api that's like snappy yeah nappy i always called it nappy but it's node api it's kind of like mouse it's it's not malic it's m alec i'm glad you beat i'm glad you beat me to the punch on that one i was gonna bring it up again don't want to nothing too interesting here but take notice of the crate type is not a standard bin or lib qtj but rather oh c d die lib which must mean c dynamic library i think so yeah okay what this means is that rust will create a c compatible dynamic library in addition there's a dependency already inserted for neon target the node api version 6 so the module will run fine on node 10.0 and onwards full compatibility matrix here oh gosh this is a matrix well i'm seeing i'm seeing numbers tj okay where was i do you know where i was we were on six oh which tab we were reading about neon oh it's just the back button sorry i thought i opened it in a new one i'm stupid don't worry about it what about the starter code that got generated source lib okay this looks good this looks nice okay context string function context oh cool this actually is it's actually looks pretty good that looks pretty good i i'm not i'm not upset about it so we have a function that takes that has the neon main attribute note that the function that's attributed as such doesn't necessarily need to have the name main that has one parameter cx which is a type module context this is essentially making an equivalent of node module here and then within the module we can export functions as we would in node project have you ever built a node native module oh i don't know i've written i've written stuff that runs on node but i don't know if i've actually had to do the very first step i don't know how anything actually works i just hope that the like npm run build works on whatever javascript project i pulled out you know i hope this you know last week i spent over a day trying to get esm to play nicely i i know that that's the word that you've said a lot of times and i just know that i've run into that before and that's usually when i just quit yes somebody else or if we're not using that dependency it's just the worst thing in the universe i'm like i'm i'm not a javascript boy you know like i'm gonna i just write this javascript for this one thing and then if it doesn't if it doesn't run then is that somebody else's problem i'll just i'll talk to devops i'm gonna build expert okay i'm not a build master as it used to be called yeah this is essentially making an equivalent of a node module here and then within that module we can export functions as we would in the node project here we do that with the function hello so this is pretty much identical to how you do a c plus one as well very very similar you kind of say like hey i want to export this function it's named this here's the function handler this is super common as well like i've seen this a bunch before for doing it with lua as well because i've done a bunch of like ffi stuff with lua and rust yeah looks it looks pretty similar i will say that i hate this convention with a passion that all on the same line both what you're doing plus a return statement if only there was a key word that would describe your intention of your code as opposed to its floating placement within everything all right let's close let's just close the article honestly who puts those on the same line i know that it's this is more offensive than an if statement with no squirrely brace that's true it is it's just like it is the epitome of the most offensive code i've seen in a long time anyways okay so let's see the hello function itself takes a mutable parameter context of the type function contest that exports a js result of type js string in that function we return a result containing hjs string the result automatically gets cast to ajs result also note that js string is constructed within the context of the parameter cx so the string constructed here is a valid.js string not necessarily a russ style string so in other words javascript needs to be able to have the context of it it needs to be able to store it on a heap it needs to be able to keep track of it that's why you have to that's why i assume you can create a bunch of rust stuff go real fast on the rust stuff and then at the end you create the little contact stuff and then go for you just basically write your whole library and then you just write like 10 wrap or functions i'm guessing that's what they're going to tell us yeah npm run build i i can't no way it works this command generates an artifact by the name of index.node strange this contains all the exported rust code and what we'll be using with node to communicate with now that we have the article index.node today bingo card of 2023 has been wild okay this is and this is one of them all right now that we have the artifact build let's add an index.js file which we'll use to test our code all right get this one and then we can go hello by the way not using import statements in 2023 offense well who knows what building thing they're using i still don't know how i still don't know the difference between require and import okay so require is a function that can be used [music] [laughter] we can see it outputs this okay nice little rock on a more complex example here okay so we can do a bunch of stuff we can do anime chan response okay i see why they put return values on the same line a result vector animation response request a request error okay blah blah no one cares get anime quote okay did they really choose this is like this isn't wait this isn't like their official thing for neon or is it their official thing for me no this is the official thing for this article okay but wait it's for a real they chose like all the examples in the world they're like let's make it anime anime chan an anime quote generator okay all right that's not i just i mean okay emotions wide okay tj some parts of the ocean's a little stranger than other parts all right all right yeah you know yeah i mean i'm not like opposed to it i just was all of a sudden i i blinked and you were like saying anime chan where we went from index node to animation out get out weaves it's a strange strange place to be that's a solid block of code what are we doing here let's look at the matrix opponent by the way with all that code and the fact that the top of this article says six minute read tells me one thing that nate nobody reading that anime code time to scroll oh yeah request that's a solid block of code what are we doing here let's look at the major components i didn't look at any of these components but you get the idea we we get all of this okay no i haven't been to anime chan but you get the idea okay we do a little bit of this we do a little bit of that get some of that and then we have a main that simply exports this and do that okay good corresponding node code get swappy starship what axios anime title all right id fetch rust fetch act axios test rust test okay okay there we go look at that you familiar with any of that everything looks okay so they're trying they're just trying it with two different ones they're like let's fetch some cool let's fetch some stuff with russ let's fetch some stuff with axios and see which one is good is that what they just did well they also put a start and stop on each one and i think they're saying they're timing it they're timing it which is this is not a very great time the timing thing there's just just a few requests but okay yep and the results are this i know again if anything has ever said micro benchmarks can manipulate it can make any point ever this would this is truly the greatest micro benchmarks can make any point ever argument is this not just like it's not most of the time just waiting for an http response yeah you can see it's a little bit faster did you see that okay guys they're gonna say this isn't worth it for this case true agree but the speed is definitely not worth it well because there is no speed this is amazing this is made up there's nothing here okay run it again and it'll be a different result anyways there is this difference is much more visible in cpu heavy tasks where russ is inherently in lean in nature and ability to leverage multiple threads shine even more let's try a few more rejections can i just say something yeah for like if if you're writing an article this is just like a piece of advice personally and your first example is saying it doesn't make a difference i would recommend not having that be your first example i just like i'm not trying to dunk on the article i'm just saying like in terms of providing a compelling article that would make you want to finish and not just finish because we want to publish this to youtube and so that people click like and subscribe on the prime time agent and maybe don't tv yeah oh dhtv is also a good channel yeah but that's just kind of it's just kind of weird right like you should there's these other ones are probably actually going to be a big difference so why would you pick the one that's not a big difference yeah i think what you'd want to say here is look at this what's the difference between these two pieces of code well as you can see there they look they look identical pretty much right yeah so i like that i can write the other part in russ like that part's cool like i would have just shown how to use it i think instead of trying to like compare the performance that seems better right and i also would have probably provided maybe similar apis so they look identical so you can be like oh yeah like look at that they're the same thing underneath the hood it is true that it's cool that you can just basically be like hey these look exactly the same you'd never know that this inner part's in rust that part's cool yeah that part's really really cool but don't ever compare network requests to some service you don't control yeah right like that's just it's just it's not it's just not a thing you want to do because it's just always will look bad all right let's create a similar package as we did above but let's see they're gonna add reg x's which i'm i'm a little offended by right now i just want you to know like they really made this article for you what if we request anime quotes and compare the performance and then next up we do unlicensed regex comparisons it's like they knew everything that's gonna trigger me and put it all into one article they did it they did it all right anyway so we have all this fun stuff a bunch of oh look at that a little huckleberry finn going on in there okay let's see read the string so apparently a bunch of reading to strings going on here i'm not exactly sure but there there must be a bunch of bunch of stuff all right so process this regex okay there we go let's see measure okay so i guess we're doing a measuring going on right here as well a little aztecs f64 okay also add this regex crate okay so we're gonna be doing some sort of measure you know regex pattern going on okay makes sense they're just going to compare how fast the regex's are i'm assuming and like russ should probably be fast i'm assuming yep and they have a bunch of stuff in here by the way g in the g command inside of javascript is not necessarily doing what you think it's doing it's it's kind of it's kind of wild it's a stateful command so what you get out will actually it'll actually flop back and forth it's really it's not javascript really said like let's make our regex's stateful what that was like patrick's is immutable and staple but if we did that hey man it's a push down automata of course it's stateful everybody knows that it's just like why would you do this to us so anyways they're gonna go through they're gonna do all this one so apparently they grabbed a bunch of timings none of this should be surprising at all so blah blah blah blah blah right fantastic improved ratio right no time like i don't know if again i don't think you can really some of them are worse yeah some of them apparently are worse which it just again just shows me that you're paying tax on things you don't understand right like why is this rust one that much worse my guess is because what's really truly happening is that this thing's matching a bunch of times and because this thing's matching a bunch of times and node is lazy you're getting you're getting the results in this very lazy way versus maybe the other one's not lazy and so you're only getting one result from node versus x results from rust i don't know right that's like the weirdest regex too something that starts with a through q and then but doesn't not u through z for the 13 of those and then an x yeah so just just so i saw this is starting with a through q and then 13 more things as long as they don't contain u through z am i correct on that yes anything that's not u through z and then an x well that's one it's a pretty common one for me so i probably will stick with the node.js regex engine i think that's a pretty common kind of thing that i'm searching for in my books your books are beautiful that's a pretty interesting result card the performance ranges from 0.14 x to 19.76 x with an average of 6.1 improvement also the 14 out of 17 regex's show is it i thought the plural of regex's was regrets hmm it's reverts it's regards no regards show better performance on rust compared to node regert's engine an interesting thing can i just say again like they said like an average like they ran a test suite that represents like normative regex running over projects they're like well you have a suite of regex that we've you know custom picked from you know millions of regex examples but they're like they said it like 6.1 x like you can probably expect on average to have a 6.1 x improvement for the rust regex crate again micro benchmarks what does that mean what do you what what agenda do you want to prove i'll make you one for the just that right like it just it's like they could have just picked a bunch more with whatever the weird thing that made it slow for the a through q one and then but like frost is seven times slower than javascript node.j has proven to be 10x faster than blazingly fast rust yeah oh that's actually a really good idea for a youtube video javascript is seven times faster than rust and then just like go through this and be like look at this look at that look at this and then end with no you're stupid that's not how it works right i feel like that's a good one i feel like there's something good there i don't know maybe i'll make that yeah i like it up or going to pi digits baby let's do something a bit more implementation agnostic and try to calculate the nth digits on pi for example the benchmarks game the algorithm used in the variant of sequential spigot algorithm speak it's the little tourney thing right that you get water on and off yeah okay i don't know this algorithm we will be using a rug crate okay oh rug for for working with because all the crypto stuff's made in rust these days or what maybe i don't know if they would have just chosen zig they could have just done an i-72 and just got it done with you know what i mean yeah true by the way that is by far the weirdest thing about zig it's just like well what size the ends do you have all of them oh you want a 167 fine by me go for it 160. that happened yeah just like i'm gonna make that happen why all right so here's some rust code they're just doing calculating pi we don't need to try to understand this again six minute average on read up top i don't believe this and the rapper for running the rust coded node okay looks good find pi 10 000 boom boom boom all right let's see here's the node code okay do all that crap and then we run it so i can tell you some things right away that are incorrect about this so there you go node massively slower so one thing that's very unique about node is for it to be able to optimize itself it depends on how many characters are inside of a function so since this thing has well a lot of characters and it's not minified which white space makes a difference you're gonna have this whole issue going on where it probably will need like 17 20 times to be ran before it actually does the jit optimization which means that you're running it once and taking the value so it's kind of a slightly unfair i didn't know node was white space sensitive that's that's news it's not known it's v8 if well v8 was white space sensitive i assume it still is white space sensitive right like it's well it's also just not how like like it's it doesn't just run something one time and then think now it's time to optimize right is that not oh no because jitting is a really expensive operation because compiling is really expensive so you wouldn't want to just jit everything you see because weapon if you get different arguments every time so they have to keep track of the type of arguments that's why node uses so much memory and it's not node it's actually v8 because they keep track of well it's also known but they just keep track of so much stuff to optimize every single function possible because if it's monomorphic they need to figure that out after x amount of calls and then they go okay this thing's monomorphic i can optimize it blah blah blah and so yeah you just jit your pants a lot of people jit their pants especially as they get older it's totally normal it is yeah that's an'x improvement not too bad yeah i i mean i would ensued assume interpreted javascript is by far the slowest possible thing out there you can also see some of v8 stuff so if you're curious about this there's a trace flag you can pass into node that will print out v8 tracings and you can also do it with like that chrome it's not chrome inspect i forget what it is but there's like the performance there's some performance tabby thing yeah it's not in the inspect one it's like a separate place you can go profetto yeah and you can go and look at the perfecto stuff and you can actually enable tracing on v8 and v8 will tell you a bunch of stuff it will also tell you why it is and isn't optimizing and so at some point i have to go break down why one of our libraries wasn't running fast and it's just like well look at this it it only optimizes after like the 9000th call because this function is 400 lines long like yes just don't do that just make it just just make it smaller let's see how we use the buttons at metlow these bindings make it possible to have a core library with battle tested code while still having native performance this enables to support multiple frameworks more or less out of the box with configuration requirements i mean this is cool i like this yes this is good agreed yeah fast if i all that all right i'm not gonna read this sorry or congratulations but how do you feel about this whole thing what's your takeaway from this tj well what i wish like they i i'd be interested i guess like the main thing is actually neon not really mellow for this which is fine like i would have liked to see how does like rust enums how do those get taken from rust go into javascript because like though the reason that i would want to write rust for it is that i have probably some performance critical part or some part that is like really complicated that i would like to solve like rust type system to help me solve right that we have some sort of part of our application where it's like oh we always do this and then get that okay we've been doing it okay so we know that it needs to go fast now can how can we make it fast but also still not have to delete every single line of javascript we've ever written even though obviously that would be the best course of action best course so i just don't that's the part that's like interesting to me especially for someone who actually has a real company that's doing things right not like oh i have a fun side project and i was the only one who did it and it was fun okay cool cool cool cool but like what does it look like if you're real so i don't know so that's kind of where for me like those were the things i was interested in seeing more about yeah not anime chan anime didn't happen yeah i think the price i i always think that the performance angle as like the primary selling point it's like only if there's a huge negative right like so if calling the rust code results in 100x worse performance but you want to use it because it is 100x nicer to use yeah as far as like the the enums i bet you i could just answer that anything returned from this api has to fall into a javascript value and since javascript doesn't have type discriminated values you have to create your own type discriminators so you'd have to probably return it as an object with like type my type and then you value do something with it afterwards yeah so you just create your own wrapper that's all you have to do yeah yeah the only like i would do this if i had some part that was like really memory intensive too i guess because you could really like cut down a lot on your memory usage if there was a lot of like you have one struct and you need to do like a lot of stuff with it and then you get out one struck you could totally imagine doing that part in rust and then and then dealing with it there that part would be cool yeah but yeah yeah so that's ex that's actually precisely why i was looking into this it's because it's just like well i keep having four gigabytes of of memory how do i stop having four gigabytes of memory my current answer is actually i import the v8 garbage collector and then i manually manage memory by setting everything to null oh nice that's pretty much javascript yeah yeah so after every line i have these functions called drain that will drain an array in reverse and then and then null it out and then what's it called and then call garbage collection just to keep my memory down so i got it down to so let's like it went from like two gigabytes to 200 megabytes and so i'm like all right rock on this is great but it's also literally 10 15 seconds slower because i'm just like garbage collecting not just started collecting dude it's just the worst it's just the worst and then the worst part is because it's on it's on a server i have to make you have to pay this expense and node where you actually have to create a bunch of workers to run your code because if you didn't every time a garbage collects all the things would stop stop it's not like you just get big pause you can just big pauses for everything so it's just it just it's just impossible impossible anyways all right i'd use this i'd use neon i think yeah i think i've actually i think the use case of having a really easy story of writing like javascript or some other like more scripty style language and then having parts of your application being in rust but it's like you know it's not no one has to know that it's in rust they just call it like regular javascript functions is really nice i've been doing this for some neovim stuff where i write like a lot of stuff that like talks to the database or like makes graphql requests or all these other things has to handle what kind of things we get back from graduate i write all that in rust and then i have a shared library or like inner process communication and then i do all the just like boring scripty mutability of state of like the editor stuff for any of him all in lua and it works really nice because you know that it's actually going to give you the data that you expect from rust and then i don't care about type safety for like which window is getting opened i just like make sure that that seems pretty good like that's a nice combo yeah but that's exactly what a scripting language is good at which is i don't want to have to think about anything this is why i use scripting language right i don't wanna i i agree is your windows id 0 perfect current window make it happen yeah right exactly you don't have to think about anything what is current windows for a while the global messages that i've received from this thing okay well cool just do it like yeah oh i have to make static const i need to wait i need a lot oh my goodness now i'm going to send this over here it's not send i got to make sure that my yeah actually i don't care let's just have some tables and some lists and we'll call we'll call it good get your arch arc mutacy out of here yeah all right well hey oh there's definitely there's definitely a good meme somewhere in there with rust arc and uh oh my goodness now i can't a mutalisk definitely some sort of mutilisk going on in here you could have some sort of mutalisk and have an arc mutilist i feel like this would definitely there's there's definitely something 30 people who will get that joke on twitter it's gonna really kill this is it's a great joke okay this is a great pretty good for a joke that you made up instead of stealing from my twitter still get oh man you like doubled my tweet it hurts oh i didn't just double it i i crushed you all right i know all right hey thank you for oh they're calling it a boomer joke that's not a boomer joke the name this is the boom origin the boom origin