titles even hard to read with the straight face hey raku a language for gremlins okay so i've never done raku i don't know what it is i assume we're talking about some functional programming here okay something like that and hence the reason why it's for gremlins right i just added a big new section to learn pla optimizing tla model checking i take a spec and then show 15 different optimizations many of them getting 10x runtime improvement patreon notes here besides that i've done very little writing in the last couple weeks i'm just in a slump i sit down to write and the words all come out wrong i get that that's why that's why god invented chad jeopardy it happens sometimes and there's nothing to do about it but wait it out it's reasonable does this ever happen to you guys it doesn't happen to me you know why because i don't write anything it's like a trick of the trade if you just if you do micro blogging called twitter you don't even have to worry about the fact that you have to write things that are intelligible or good or anything all you have to do is you just have to go here and you just have to simply take a tweet from tj and properly put a good meme to it and boom that's all you have to do i barely even read i barely even read okay it's a the trick the trick of the trade so instead of working i've been learning raku it originally got me i got on my radar after i ranted about dynamic languages and a couple of users told me i'd like raku i assume i'm saying it correctly no i finally checked it out last week to see if i'd if it'd make a good calculator language i use a hodgepodge of python j frank and excel to do math and they all have to do their own big drop or they all have their own big drawbacks so it'd be nice if raku could round them out okay that's where that python has a big drawback for math i mean for the most part you just throw that crap in pandas and call today after several days of experiments i am at a loss of how to describe [laughter] i've never heard a language described like this whatever it is i don't know how to describe it but what it is just hold on the best i can come up with is that the language was designed by a bunch of really intelligent gremlins gremlins who spend a lot of time gathering feedback from other gremlins raku has no qualms about using unicode operators you can check you can check set membership with fight dude people that do this stuff they're literally the devil there's also not in the set i forget what that one means and that one it's also fine with alphanumeric infix operators a string repetition op is x function composition is zero i don't know what this mean i don't even know what the honestly i don't even know what that means oh oh my goodness oh my goodness my i'm not even sure my f pointer to an f is a pointer to a squirt oh pointer to an abs is this a function syntax noise f minus three okay so the squirt the square the squirt of the oh okay okay so it squirts it absolute values then it squirts it okay okay okay okay okay that's like oh camel in the at ad operator okay i can't be like too upset about that x gives you the cross product of the list and xff applies f to each element of the cross product z of ff does the same thing with zip oh dear goodness gracious weird okay okay you know there's probably a certain set of of advent of code problems that just work really well for this kind of crap you know like because every now and then you run into this product have you have you ever ran into a problem like this right in real life i did once and there's like this small subset of problems that you just wish you had this right like the the the lock combination problem right it's just like sometimes you just wish you had something that you could iterate over the lock combination if f is an infix operator then f reduces a list and slash f accumulates it that's kind of cool that you could pass an operator into okay i mean it is kind of cool that you can pass an operator just into a list okay i'm just saying the double tilde is the anything goes matcher do the strings match true is abc a string oh gosh this is actually this is actually worse this is actually worse than javascript to quality checking oh my goodness this is the greatest thing ever chars equals three is the length true does abc start with the b false this is so good finally there's this okay i love this i like that i like that a lot oh my goodness how did it do that how does it understand patterns how do you even program that how do you i don't i'm not even sure if i know how to make that i feel like that is it's zippity five dude that is just straight i know because anytime you give chad jeopardy a series of numbers it's like i shouldn't play the stock market this looks like a series of stock market values i can't tell you the next value this disgusting dude it doesn't matter if it's guessing it looks pretty badass okay defining operator so you know how some languages let you define infix operators raku lets you define a new circumfix and opposed to circumfix operators what the hell circumfix a z z inner what the hell is happening right here no post circumfix bam bam you can hit him with one of those dude this is this language is crazy what i'm seeing here is just nuts i can't like okay i i understand this i'm taking like a list this must be a reference past and left i don't know what z star is so my guess is that z star must be multiplied so it should be 4 10' 4 plus 10 plus' is 32 right yeah it's 32 and so that means we're going to take those things we're gonna just dunk inside of this bs is that what the hell it's doing what the the they doing i would hate to read this language in addition to left and right associative index operators you can define operators to be chain associative like how x is less than y is less than z is x is less than y and y is less than z the list associative of a b op c is multiple dispatch so raku allows multiple dispatch meaning that you overload a function with multiple different type signatures and it will choose the appropriate one oh gosh no don't you do it don't you do it okay so at must be like a list dollar sign must be like a variable right so okay so you can just do okay okay at oh that is for iterable types okay so i was okay cool so this thing is an iterable type this thing must be a scalar value right this isn't weird this isn't weird yes it is lots of languages have multiple dispatch what is weird is that you can dispatch based on runtime predicate of the value yes that is weird okay so i'll get i'll give you that this is a runtime this is weird okay so run time multiple or yeah like this dang dang dang that's crazy also the signature of the function is a first class value as the parameters in the signature let's see int oh you can okay so you can put types on it that's cool that's cool where int is oh my goodness you can put okay so this kind of like this kind of like elixir right elixir allows for something similar right miscellaneous things if you define a main function any parameters you give it will automatically be turned into cli flags objects have way more pre-loaded methods than i've seen in any other language i and i used to do rails the list object has methods for getting all permutations all k combinations and sliding windows okay sliding windows that's rusters that junctions are the weird type value thing for doing multiple comparisons at once one or two expands to any one two so that one is less than one or two and one and two expands to all one where one one is not less than one or two or one and two what the hell oh yeah and you can negate any infix operator by prefixing this foreign this is like a bunch of gremlins gave a bunch of language use cases to other gremlins and then gremlin gremlins made gremlin language raku is the only language i've ever seen with a kebab case variable names in infix subtraction i'm guessing because sigils disambiguate oh oh yeah how do you do kebab case in that form of subtraction how does that i don't even know what sigils are how does that work the regex syntax isn't backwards compatible with pro 5. for 30 years languages have followed the pcr e standard and pearl sex just threw it all away [applause] get the hell out of here that's just a tiny slice of the weird raku feature since i've only been looking at a calculator application so far i haven't even learned about the object system packages or grammars and even so i still left out a ton of stuff like in the function body same with with call we'll call the same function with new arguments i think if i had to maintain a raku legacy code base my brain would explode i have no idea how people would manage to write this language in the large at the same time it seems incredible incredible for programming in the small one-off script computationals personal tooling all kinds of things i wanted to do so much in the first place i've also seen some really frustrating things the documentation is really pouring the heavy reliance on symbols that makes it hard to search for things i've learned a lot of poorly documented languages but raku is much bigger and more complex than any of them and it can be real demotivating the rebel crashes on windows if i type in any unicode laughs ah classic classic windows help the compiler is also pretty slow even with small files taking a half second or more iterating on things is painful i hate the sigil thing i spent a half an hour debugging a problem because i wrote dollar x instead of dollar or instead of at x oh yeah yeah overall maybe i'm just a gremlin at heart but i think i like this language you are a gremlin and i want it to succeed i assume i'll have a more balanced picture thoughts after i use it in anger i just hope that over time the compile times and documentation improve what are you thinking what are you how is how is this the how is this the conclusion you know i think there comes a point where learning languages is fun right and and seeing new paradigms is a lot of fun and i could see this as kind of like you know this is kind of like mental masturbation right you look at this there's a lot of things that are kind of fun about this especially like this kind of stuff you could come up with some super cool operators to do super cool things to be able to really enjoy super cool ways to do dumb ass but the reality is is that is this worth it at all is it really worth it at all i don't think i want to play with this language but i love the idea of just learning things just to try out new ways to exercise my brain you know what i mean maybe it has high ai resistance you know like sometimes you know sometimes going to the mental gyms a good thing to do you know what i mean sometimes it's good to just it's just good to go do a couple pull-ups at the mental gym and that's for me i mean that's why i go that's why i program in rust not because rust is actually useful for building applications but because it's like i since i gave up the old the old form version of masturbation i can now only mentally masturbate and you know sometimes i just gotta go out there and just get after it you know what i mean you just gotta get after it you know and so that's what i'm gonna do i'm gonna do that i'm gonna write applications in rust which by the way i am actually legitimately writing applications in rust at this point in netflix and and by the way i work at netflix by the way no i don't get a free subscription no i do pay for my own netflix but there is literal bathroom rum and by the way if you didn't know that there's an actual bathroom ramen at netflix it's so good it's so good it's so good self-satisfaction yeah brain goes the beast kill yeah yeah yeah i know all right hey the name is raku is the language for gremlins