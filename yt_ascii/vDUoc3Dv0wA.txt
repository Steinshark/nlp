all right there's a take i really don't like it's of course this right here that googling is the primary job of a software engineer and obviously 95 is an extreme thing it's still meant to be kind of satire tongue-in-cheek but i just hate this take because it is a mentality that i see among a lot of junior engineers that that is the job that isn't you just google everything you're perpetually googling at all points for everything you need to do and i think there is some truth to that in the sense that the newer you are to something the more you need to go look up how something works you don't even know the questions to ask you're just trying to solve it step by step i get that that's a real thing and your hope is that that goes down over time and it should go down over time right you shouldn't always be googling the same thing over and over again but there's something more to it one thing i see is that especially a young a lot of these newer engineers is that they that there's like this how hopelessness to them like this how do i solve this hey where do i start what should i build how should i you know there's this constant need to ask for direction there's the constant need to ask what even to do yet there's no homework being done there's no like hey i've tried these things hey i've done this you know this set of tasks instead it's just like i know there should be an answer i don't see the answer obviously tell me what to do and for me this is one of this is kind of the symptom of this whole thing which is like this learned helplessness this this idea that you cannot defeat your own problems something either gives you the answer or you don't know how to do it and i i feel bad about this because in my head how i look at things is google is akin to intellect right it's the ability to solve a problem you have a problem you put it in google google is going to give you an answer and you're going to solve it but that's not wisdom right wisdom is the ability to know what questions to ask to know what problem to solve and if you aren't striving for that if you aren't gaining that but instead you're always at stage one how do i solve x how do i solve x how do i solve x and you're re-googling you're redoing that you're never really moving fast on projects you're never really building out big things you're always in tutorial boot camp hell i mean that's tough i i feel really bad about that man i and i know there's a lot of you that are kind of in that phase and you know i'm sorry i wish i wish it wasn't the case but i really want you to take this home that to be a great engineer you do have to memorize a bit you do have to learn it you should sit down read some documentation really take things in rtfm right read that friendly manual you should you should just know that that's just that shouldn't just be part of the job that should be a lifestyle that should be something you want to do that should be something you strive to be at you know i saw somebody say well my goal isn't to be good at a language it's to be able to solve problems and though that is a take i don't really like that take in the sense that you should want to be good at the language that should be a goal that is a cornerstone of how to build good software is to be good at the language right i want to be good at rust for the sake of being good at rust such that when i solve harder problems i can solve them efficiently idiomatically and in a way that when someone else comes and looks at the solution they know how to proceed forward because i didn't just do something completely bizarre because i didn't know what i was doing and so taking pride becoming a great engineer isn't sure there's a lot of soft skills all that kind of stuff blah blah blah everyone will always preface everything you say but the reality is that there's also a lot of hard skills required take the time become good try to solve problems google is not a starting point google is the destination theo gave me that one right there and i really appreciate that right which is just hey when you have a problem can you solve it can you look things around what's going wrong can you identify the root cause can you make those steps forward towards actively figuring out what's happening when you hit a final breaking point where there's just no more going forward google is a great place to go to but that doesn't mean it's a great place to start it first try to solve things hey i hope you like this content you know i'm just kind of i'm just kind of like just doing it right there's no breaks here i didn't i didn't plan anything i just went straight into it spoke from the heart hey i really appreciate you guys if you like this this is the side channel type of content you're gonna get raw dog and prime the name is the prime machine