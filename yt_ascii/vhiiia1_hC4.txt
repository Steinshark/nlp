for years and years there have been as part of our civilization special purpose electromechanical computers and classic example of these is vending machines if you put in the right combination of money they will vend you a bar of chewing gum or whatever and they've been around for so long that they really are largely mechanical they're a bit more sophisticated now because they've got microchips inside them but they don't really need that we're going to look at the fundamentals of vending machines or if you like very similar how do i pay my car park charge and get a ticket that i put on my windshield and to say yes i have paid what's the process of saying you must pay me 25 p if you're in the uk in the states you must pay me 25 cents and i've got real live uk coins here this is one of the simplest finite state automaton examples i know of because i think you'll all find it familiar here in the uk if we're told we have to pay 25p typically you would have to choose from a five pence coin a 10 pence coin a 20 pence coin unlike the usa we do not have a 25 pence coin you cannot just as it were put one coin in and that's 25 and you're done you've got to build it up out of any possible combination of these and if you look at this diagram with me it's it's so simple it's just self-explanatory you start over here the machine has got no money in it you put in one of these five p coins and it goes chunk and it moves into what i should call the five state it basically is saying to itself i'm happy i've got 5p so far but it's not enough yet well all right let's be controversial let's make our second coin be a 10p coin now we take this transition out of the five state we've put in the 10 coin and it jet propels us into the 15 state the machine if only it had a brain is effectively smiling and saying i'm on the way i've got 15 p but the aim is 25 well there's two ways to get from 15 to 25 look you either put two more fives in that gets you there or 110. and when you get to 25 i put it inside a double circle which is the convention because that's the finished state you've put in 25p and eventually goes and prints you out a ticket and because you pay 25p it entitles you to two hours parking or whatever all that this is doing is encoding in this diagram all the possible ways that you can build up 25p and if you think about it in a weird way it's kind of like a language and the sentences in the language are possible ways to make up 25p so here's a legal sentence this is the other way to think about it a legal sentence in this language is five five five five five another legal sentence just using the words twenty and ten and five is twenty five that's a legal sentence except twenty five p how about ten ten 5 ah but then it could be in any combination there's 10 10 5 5 10 10 10 5 10 5 5 5 10 works so you can go through this if you want to work out all of the many many combinations that will get 25p it leaves you of course with situations like what happens if you over pay you've only got three of these 10p coins 30p many say if you overpay i don't mind it's more profit for me and you know i'll give you the ticket anyway some badly designed ones just seize up and sulk but then if they seize up in sulk the question is in the end is there a sort of reject button you can press which says i've given you too much now give it all back to me or does it just gobble it up and say i'm sorry it's an illegal amount it's too much and i won't print you a ticket and this gets people really really annoyed when this happens but you all know the symptoms of exactly this sort of thing and like i'm saying these are so commonplace they've been withers for ages but the crucial thing i want to emphasize is the following if you're sitting there in the 15 state all that this machine says or knows inside itself if you like is i am in the 15 state if you say to it but how did you get there it would say i don't know i just don't know i retain no memory of the coins i've had to get me to this state at all i just know i'm in 15 it could have been 10 and 5 could have been five five five who cares i'm in a 15 state so that is why these are machines with no need for memory there if you like a processing system that accepts coins and you could perhaps argue it it's the ultimate special purpose computer it's a special purpose done computer that vents tickets for a parking lot only thing it does need is when you put in a coin every single coin it needs a holding position you could think of this as being like a sort of register inside a central process unit it holds the current coin and often we'll examine it and of course in the early days all it could do to check it was valid was maybe weigh it nowadays you can shine lasers at them do spectroscopic analysis and all sorts to determine so the current coin is held in i will always think of it as a sort of register to hold it until it's decided to accept it and when it's accepted it drops into a pot of all the coins you've given so far and maybe we're in the 15 state we get another five we go into 20 but that latest five just go chunk and you hear it drop inside and it's in the pot but the pot is amorphous the pot has no knowledge of how those coins get in there and in what order it doesn't need to know that we've talked about vending machines we've talked about parking machines is there anything that they get used for in computer science maybe that's more of a kind of technical cult yes yes vending machines parking machines the simplest thing and what you're asking is what's the thing that really turns on computer scientists that's that simple i'll tell you sean what's that simple it's the rules for what is a valid variable name in a language now if you've done any programming you will know that the rule typically is a variable name an identifier as i sometimes call can be any combination of letters or digits in any order but it must start with a letter yeah so you can have sean dave they'll be variables you can say they're integers or whatever you can even even have k9 as a thing but you can't have 9k yeah because anything beginning with a digit could be the start of a number and what languages do not want to spend ages deciding whether 99999 really is meant to be a number or in some way weird way you're trying to name a variable oh no if it starts with a digit it's going to be a number isn't it if it starts with a letter it's an identifier or a variable name and you can see with that you could draw one of these diagrams you could say come in is it a letter fine next aid is it a letter fine go back recursively into yourself and expect more letters or is it a number loop back recursively into yourself again you've got a self incl a loop coming out back in again with letter on top of it and the loop at the bottom saying dj on the bottom of it and you can keep going round and round taking any combinations of letters or digits until typically what happens is you come to a sort of end symbol and in a program what will happen of course is you'll have a semicolon int shawn semicolon that says that's the end of the identifier or sometimes it'll be a comma if you're declaring lots of things but there's always some end symbol that tells you end of identifier and you say is that legal you don't need any anything fancy to recognize that that's a legal identifier you don't need stacks you don't need tons of ram it's just one of these things for example here's the table here's the floor where which bits of the floor and which bits of this table can i see so you have to do a lot of matrix solving to