today i'd like to tell you about a piece of math known as holomorphic dynamics. this is the field which studies things like the mandelbrot set,  and in fact one of my main goals today is to show you how this iconic shape,  the poster child of math, pops up in a more general way than the initial definition  might suggest. now this field is also intimately tied to what we talked about in the last video,  with newton's fractal, and another goal of ours towards the end of this  video will be to help tie up some of the loose ends that we had there. so first of all, this word holomorphic might seem a little weird. it refers to functions that have complex number inputs and complex number outputs,  and which you can also take a derivative of. basically what it means to have a derivative in this context is that when you zoom  in to how the function behaves near a given point, to the point and its neighbors,  it looks roughly like scaling and rotating, like multiplying by some complex constant. we'll talk more about that in just a bit, but for now know that  it includes most of the ordinary functions you could write down,  things like polynomials, exponentials, trig functions, all of that. the relevant dynamics in the title here comes from asking what happens when  you repeatedly apply one of these functions over and over,  in the sense of evaluating on some input, then evaluating the same function  on whatever you just got out, and then doing that again, and again and again and again. sometimes the pattern of points emerging from this gets trapped in a cycle,  other times the sequence will just approach some kind of limiting point. or maybe the sequence gets bigger and bigger and it flies off to infinity,  which mathematicians also kind of think of as approaching a limit point,  just the point at infinity. and other times still they have no pattern at all, and they behave chaotically. what's surprising is that for all sorts of functions that you might write down,  when you try to do something to visualize when these different possible behaviors arise,  it often results in some insanely intricate fractal pattern. those of you who watched the last video have already seen one neat example of this. there's this algorithm called newton's method, which finds the root of some polynomial p,  and the way it works is to basically repeatedly iterate the expression x  minus p of x divided by p prime of x, p prime being the derivative. when your initial seed value is in the loose vicinity of a root to that polynomial,  a value where p of x equals zero, this procedure produces a sequence  of values that really quickly converges to that root. this is what makes it a useful algorithm in practice. but then we tried to do this in the complex plane,  looking at the many possible seed values and asking which  root in the complex plane each one of these seed values might end up on. then we associated a color with one of the roots,  and then colored each pixel of the plane based on which root a seed value starting at  that pixel would ultimately land on. the results we got were some of these insanely intricate pictures,  with these rough fractal boundaries between the colors. now in this example, if you look at the function that we're actually iterating,  say for some specific choice of a polynomial, like z cubed minus one,  you can rewrite the whole expression to look like one polynomial divided by another. mathematicians call these kinds of functions rational functions. and if you forget the fact that this arose from newton's method,  you could reasonably ask what happens when you iterate any other rational function. and in fact, this is exactly what the mathematicians pierre fatou  and gaston julia did in the years immediately following world war i. and they built up a surprisingly rich theory of what happens when you  iterate these rational functions, which is particularly impressive given  that they had no computers to visualize any of this the way you and i can. remember those two names, they'll come up a bit later. by far the most popularized example of a rational function that you  might study like this, and the fractals that can ensue,  is one of the simplest functions, z squared plus c, where c is some constant. i'm going to guess that this is at least somewhat familiar to many of you,  but it certainly doesn't hurt to quickly summarize the story here,  since it can help set the stage for what comes later. for this game, we're going to think of c as a value that can be changed. it'll be visible as this movable yellow dot. for the actual iterative process, we will always  start with an initial value of z equals zero. so after iterating this function once, doing z squared plus c, you get c. if you iterate a second time, plugging in that value to the function,  you get c squared plus c. and as i change around the value c here, you can kind of see how the second value  moves in lockstep. then we can plug in that second value to get z3,  and that third value to get z4, and continue on like this,  visualizing our chain of values. so if i keep doing this many different times for the first many values,  for some choices of c, this process remains bounded. you can still see it all on the screen. and other times, it looks like it blows up, and you can actually  show that if it gets as big as 2, it'll blow up to infinity. if you color the points of the plane where it stays bounded black,  and you assign some other gradient of colors to the divergent values based on how quickly  the process rushes off to infinity, you get one of the most iconic images in all of math,  the mandelbrot set. now this interactive dots and stick visualization of the trajectory,  by the way, is heavily inspired by ben sparks' illustration and the  numberphile video he did about the mandelbrot set, which is great, you should watch it. i honestly thought it was just too fun not to re-implement here.  i would also highly recommend the interactive article on ako.net about  all of this stuff for any of you who haven't had the pleasure of reading that yet. what's nice about the ben sparks illustration is how it illuminates  what each different part of the mandelbrot set actually represents. this largest cardioid section includes the values of c  so that the process eventually converges to some limit. the big circle on the left represents the values where  the process gets trapped in a cycle between two values. and then the top and bottom circles show values where the process  gets trapped in a cycle of three values, and so on like this. each one of these little islands kind of has its own meaning. also notice there's an important difference between how this  mandelbrot set and the newton fractals we were looking at before are each constructed,  beyond just a different underlying function. for the mandelbrot set we have a consistent seed value, z equals zero,  but the thing we're tweaking is the parameter c, changing the function itself. so what you're looking at is what we might call a parameter space. but with newton's fractal, we have a single unchanging function,  but what we associate with each pixel is a different seed value for the process. of course, we could play the same game with the map z squared plus c. we could fix c at some constant, and then let the pixels  represent the different possible initial values, z naught. so whereas each pixel of the mandelbrot set corresponds to a unique function,  the images on the right each just correspond to a single function. as we change the parameter c, it changes the entire image on the right. and again, just to be clear, the rule being applied is that we color pixels  black if the process remains bounded, and then apply some kind of gradient to  the ones that diverge away to infinity based on how quickly they diverge to infinity. in principle, and it's kind of mind-warping to think about,  there is some four-dimensional space of all combinations of c and z naught,  and what we're doing here is kind of looking through individual two-dimensional slices  of that unimaginable pattern. you'll often hear or read the images on the right being referred to as  julia sets or julia fractals, and when i first learned about all this stuff,  i'll admit that i kind of was left with the misconception that this is  what the term julia set refers to, specifically the z squared plus c case,  and moreover that it's referring to the black region on the inside. however, the term julia set has a much more general definition,  and it would refer just to the boundaries of these regions, not the interior. to set the stage for a more specific definition,  and to also make some headway towards the first goal that i mentioned at the start,  it's worth stepping back and really just picturing yourself as a mathematician right now,  discovering all of this. what would you actually do to construct a theory around this? it's one thing to look at some pretty pictures,  but what sorts of questions would you ask if you actually want to understand it all? in general, if you want to understand something complicated,  a good place to start is to ask if there are any parts of the system  that have some simple behavior, preferably the simplest possible behavior. in our example, that might mean asking when does the process just stay fixed in place,  meaning f of z is equal to z. that's a pretty boring set of dynamics, i think you'd agree. we call a value with this property a fixed point of the function. in the case of the functions arising from newton's method,  by design they have a fixed point at the roots of the relevant polynomial. you can verify for yourself, if p of z is equal to zero,  then the entire expression is simply equal to z. that's what it means to be a fixed point. if you're into exercises, you may enjoy pausing for a moment and computing the  fixed points of this mandelbrot set function, z squared plus c. more generally,  any rational function will always have fixed points,  since asking when this expression equals z can always be rearranged as finding the  roots of some polynomial expression, from the fundamental theorem of algebra, this must have solutions,  typically as many solutions as the highest degree in this expression. incidentally, this means you could also find those fixed points using newton's method,  but maybe that's a little too meta for us. ight now. now just asking about fixed points is maybe easy,  but a key idea for understanding the full dynamics,  and hence the diagrams we're looking at, is to understand stability. we say that a fixed point is attracting if nearby points tend to get drawn in towards it,  and repelling if they're pushed away. and this is something that you can actually compute  explicitly using the derivative of the function. symbolically, when you take derivatives of complex functions,  it looks exactly the same as it would for real functions,  though something like z squared has a derivative of 2 times z. but geometrically, there's a really lovely way to interpret what this means. for example, at the input 1, the derivative of this particular function evaluates to be  2, and what that's telling us is that if you look at a very small neighborhood around  that input, and you follow what happens to all the points in that little neighborhood as  you apply the function, in this case z squared,  then it looks just like you're multiplying by 2. this is what a derivative of 2 means. to take another example, let's look at the input i. we know that this function moves that input to the value negative 1, that's i squared. but the added information that its derivative at this value is 2 times i gives us the  added picture that when you zoom in around that point,  and you look at the action of the function on this tiny neighborhood,  it looks like multiplication by 2i, which in this case is saying it looks like a 90  degree rotation combined with an expansion by a factor of 2. for the purposes of analyzing stability, the only thing  we care about here is the growing and shrinking factor. the rotational part doesn't matter. so if you compute the derivative of a function at its fixed point,  and the absolute value of this result is less than 1,  it tells you that the fixed point is attracting,  that nearby points tend to come in towards it. if that derivative has an absolute value bigger than 1,  it tells you the fixed point is repelling, it pushes away its neighbors. for example, if you work out the derivative of our newton's map expression,  and you simplify a couple things a little bit, here's what you would get out. so if z is a fixed point, which in this context means that it's one of the roots  of the polynomial p, this derivative is not only smaller than 1, it's equal to 0. these are sometimes called super-attracting fixed points,  since it means that a neighborhood around these points doesn't merely shrink,  it shrinks a lot. and again, this is kind of by design, since the intent of newton's method  is to produce iterations that fall towards a root as quickly as they can. pulling up our z squared plus c example, if you did the first  exercise to find its fixed points, the next step would be to ask,  when is at least one of those fixed points attracting? for what values of c is this going to be true? and then, if that's not enough of a challenge,  try using the result that you find to show that this condition corresponds to the main  cardioid shape of the mandelbrot set. this is something you can compute explicitly, it's pretty cool. a natural next step would be to ask about cycles,  and this is where things really start to get interesting. if f of z is not z but some other value, and then that value comes back to z,  it means that you've fallen into a two cycle. you could explicitly find these kinds of two cycles by  evaluating f of f of z and then setting it equal to z. for example, with the z squared plus c map, f of f of z expands out to look like this. a little messy, but you know, it's not too terrible. the main thing to highlight is that it boils down to solving some degree four equation. you should note though that the fixed points will also be solutions to this equation,  so technically the two cycles are the solutions to this minus the  solutions to the original fixed point equation. and likewise you can use the same idea to look for  n cycles by composing f with itself n different times. the explicit expressions that you would get quickly become insanely messy,  but it's still elucidating to ask how many cycles would you expect based on this  hypothetical process. if we stick with our simple z squared plus c example, as you compose it with itself,  you'd get a polynomial with degree four and then one with degree eight and then  degree sixteen and so on and so on, exponentially growing the order of the polynomial. so in principle, if i asked you how many cycles are there with a period of one million,  you can know that it's equivalent to solving some just absolutely insane  polynomial expression with a degree of two to the one million. so again, fundamental theorem of algebra, you would expect to find something on the order  of two to the one million points in the complex plane which cycle in exactly this way. and more generally, for any rational map you'll always be able  to find values whose behavior falls into a cycle with period n. it ultimately boils down to solving some probably insane polynomial expression. and just like with this example, the number of  such periodic points will grow exponentially with n. i didn't really talk about this in the last video about newton's fractal,  but it's sort of strange to think that there are infinitely many points  that fall into some kind of cycle even for a process like this. in almost all cases though, these points are somewhere on the boundary  between those colored regions and they don't really come up in  practice because the probability of landing on one of them is zero. what matters for actually falling into one of these is if one of the  cycles is attracting in the sense that a neighborhood of points around  a value from that cycle would tend to get pulled in towards that cycle. a highly relevant question for someone interested in numerical methods  is whether or not this newton's map process ever has an attracting cycle,  because if there is it means there's a non-zero chance that your  initial guess gets trapped in that cycle and it never finds a root. the answer here is actually yes. more explicitly, if you try to find the roots of z cubed minus 2z plus  2 and you're using newton's method, watch what happens to a cluster  that starts around the value zero and sort of bounces back and forth. and well okay, in this case the cluster we started with was a  little bit too big so some of the outer points get sprayed away,  but here's what it looks like if we start with a smaller cluster. notice how all of the points genuinely do shrink  in towards the cycle between zero and one. it's not likely that you hit this with a random seed, but it definitely is possible. the exercise that you could do to verify that a cycle like this is attracting,  by the way, would be to compute the derivative of f of f of z,  and you check that at the input zero this derivative has a magnitude less than one. the thing that blew my mind a little is what happens when you try  to visualize which cubic polynomials have attracting cycles at all. hopefully if newton's method is going to be at all decent at finding roots,  those attracting cycles should be rare. first of all, to better visualize the one example we're looking at,  we could draw the same fractal that we had before,  coloring each point based on what root the seed value starting at that point  will tend to, but this time we'll have an added condition of coloring points  that says that if the seed value never gets close enough to a root at all,  we will color the pixel black. notice if i tweak the roots, meaning that we're trying out different cubic polynomials,  it's actually really hard to find any place to put them so  that we see any black pixels at all. i can find this one little sweet spot here, but it's definitely rare. now what i want is some kind of way to visualize every possible cubic polynomial  at once with a single image in a way that shows which ones have attracting cycles. luckily it turns out that there is a really simple way to test  whether or not one of these polynomials has an attracting cycle. all you have to do is look at the seed value which sits at average of the three roots,  this center of mass here. turns out, this is not at all obvious, if there's an attracting cycle,  you can guarantee that this seed value will fall into that attracting cycle. in other words, if there are any black points, this will be one of them. if you want to know where this magical fact comes from,  it stems from a theorem of our good friend fatou. he showed that if one of these rational maps has an attracting cycle,  you can look at the values where the derivative of your iterated function equals zero,  and at least one of those values has to fall into the cycle. that might seem like a little bit of a weird fact,  but the loose intuition is that if a cycle is going to be attracting,  at least one of its values should have a very small derivative,  that's where the shrinking will come from. and this in turn means that that value in the cycle sits near some  point where the derivative is not merely small but equal to zero,  and that point ends up being close enough to get sucked into the cycle. this fact also justifies why with the mandelbrot set,  where we're only using one seed value z equals zero,  it's still enough to get us a very full and interesting picture. if there's a stable cycle to be found, that one seed value is definitely going to find it. i feel like maybe i'm assigning a little too much homework and exercises today,  but if you're into that, yet another pleasing one would be to look back at  derivative expression that we found with our function that arises from newton's method,  and use this wonderful theorem of vateau's to show our magical fact about cubic  polynomials, that it suffices to just check this midpoint over the roots. honestly though, all of those are details that you don't really have to worry about. the upshot is that we can perform a test for whether or not one of these polynomials  has an attracting cycle by looking at just a single point, not all of them. and because of this, we can actually generate a really cool diagram. the way this will work is to fix two roots in place,  let's say putting them at z equals negative one and z equals positive one,  and then we'll move around that third root, which i'll call lambda. remember, the key feature that we're looking for  is when the point at the center of mass is black. so what i'll do is draw a second diagram on the right,  where each pixel corresponds to one possible choice of lambda. what we're going to do is color that pixel based  on the color of this midpoint of the three roots. if this feels a little bit confusing, that's totally okay. there are kind of a lot of layers at play here. just remember, each pixel on the right corresponds to a unique polynomial,  as determined by this parameter lambda. in fact, you might call this a parameter space. sound familiar? points in this parameter space are colored black if, and only if,  the newton's method process for the corresponding polynomial produces an attracting cycle. again, don't worry if that takes a little moment to digest. now, at first glance, it might not look like there  are any black points at all on this diagram. and this is good news. it means that in most cases newton's method will not get sucked into cycles like this. but, and i think i've previewed this enough that you know exactly where this is going,  if we zoom in we can find a black region, and that black region  looks exactly like a mandelbrot set. yet again, asking a question where we tweak a parameter for one  of these functions yields this iconic cardioid and bubbles shape. the upshot is that this shape is not as specific  to the z squared plus c example as you might think. it seems to relate to something more general and  universal about parameter spaces with processes like this. still, one pressing question is why we get fractals at all. in the last video, i talked about how the diagrams for newton's method have this  very peculiar property, where if you draw a small circle around the boundary of a  colored region, that circle must actually include all available colors from the picture. and this is true more generally for any rational map. if you were to assign colors to regions based on which limiting behavior  points fall into, like which limit point or which limit cycle or does it  tend to infinity, then tiny circles that you draw either contain points with  just one of those limiting behaviors, or they contain points with all of them. it's never anything in between. so in the case where there's at least three colors,  this property implies that our boundary could never be smooth,  since along a smooth segment, you can draw a small enough circle that touches  just two colors, not all of them. and empirically, this is what we see. no matter how far you zoom in, these boundaries are always rough. and furthermore, you might notice that as we zoom in,  you can always see all available colors within the frame. this doesn't explain rough boundaries in the context where there's only two limiting  behaviors, but still, it's a loose end that i left in that video worth tying up,  and it's a nice excuse to bring in two important bits of terminology,  julia sets and fatou sets. if a point eventually falls into some stable, predictable pattern,  we say that it's part of the fatou set of our iterated function. and for all the maps that we've seen, this includes almost everything. the julia set is everything else, which in the pictures we've  seen would be the rough boundaries between the colored regions. what happens as you transition from one stable attractor to another? for example, the julia set will include all of  the repelling cycles and the repelling fixed points. a typical point from the julia set though, will not be a cycle. it'll bounce around forever with no clear pattern. now, if you look at a point in the fatou set, and you draw a small enough disc around it,  as you follow the process, that small disc will eventually shrink as  you fall into whatever the relevant stable behavior is. unless you're going to infinity, but you could kind of think of that as  the disc shrinking around infinity, but maybe that just confuses matters. by contrast, if you draw a small disc around a point on the julia set,  it tends to expand over time as the points from within that circle go off and kind of do  their own things. in other words, points of the julia set tend to behave chaotically. their nearby neighbors, even very nearby, will  eventually fall into qualitatively different behaviors. but it's not merely that this disc expands. a pretty surprising result, key to the multicolor property mentioned before,  is that if you let this process play out, that little disc eventually expands so  much that it hits every single point on the complex plane, with at most two exceptions. this is known as the stuff-goes-everywhere principle of julia sets. okay, it's not actually called that. in the source i was reading from, it's mentioned as  a corollary to something known as montel's theorem. but it should be called that. in some sense, what this is telling us is that the points of the julia set  are not merely chaotic, they're kind of as chaotic as they possibly can be. here, let me show you a little simulation using the newton's map,  with a cluster of a few thousand points, all starting from within a tiny distance,  one one-millionth, from a point on the julia set. of course, the stuff-goes-everywhere principle is about the uncountably  infinitely many points that would lie within that distance,  and that they eventually expand out to hit everything on the plane,  except possibly two points. but this little cluster should still give the general idea. a small, finite sample from that tiny disk gets  sprayed all over the place in seemingly all directions. what this means for our purposes is that if there's some attractive behavior of our map,  something like an attracting fixed point or an attracting cycle,  you can be guaranteed that the values from that tiny disk around the point on the  julia set, no matter how tiny it was, will eventually fall into that attracting behavior. if we have a case with three or more attracting behaviors,  this gives us some explanation for why the julia set is not smooth,  why it has to be complicated. even still, this might not be entirely satisfying because it kicks  the can one more step down the road, raising the question of why  this stuff-goes-everywhere principle is true in the first place. like i mentioned, it comes from something called montel's theorem,  and i'm choosing not to go into the details there, because honestly, it's a lot to cover. the proof i could find ends up leaning on something known as the j function,  which is a whole intricate story in its own right. i will of course leave links and resources in the  description for any of you who are hungry to learn more. and if you know of a simpler way to see why this principle is true,  i'm definitely all ears. i should also say as a brief side note that even though the pictures we've seen  so far have a julia set which has an area of zero,  it's kind of the boundary between these regions,  there are examples where the julia set is the entire plane. everything behaves chaotically, which is kind of wild. the main takeaway for this particular section  is the link between the chaos and the fractal. at first it seems like these are merely analogous to each other, you know, newton's method turns out to be a kind of messy process for some seed values,  and this messiness is visible one way by following the trajectory of a particular point,  and another way by the complexity of our diagrams,  but those feel like qualitatively different kinds of messiness. maybe it makes for a nice metaphor, but nothing more. however, what's neat here is that when you quantify just how chaotic  some of the points are, well, that quantification leads us to an actual  explanation for the rough fractal shape via this boundary property. quite often you see chaos and fractals sort of married together in math,  and to me at least it's satisfying whenever that marriage comes with a  logical link to it, rather than as two phenomena that just happen to coincide.