and with that i want to welcome and introduce our guests tonight for the ask me anything c plus plus she is part of the c plus plus community and this is part of the committee and there's a lot of other things which i don't know about what she does so basically thank you hello thank you jens for for having me today i'm really excited about uh about visiting even virtually and i heard really good things on the on-site conference as well so i'm really looking forward to that yeah so just to complete your list of things also the israeli and the chair and sg9 which is the rangers study group chair helping sometimes in library revolution as well which is the group that is responsible for developing the standard library and yeah and we also have an israeli conference which is which which i'm involved at course and i'm looking forward to hosting you there someday one day being there yes [music] traveling again and and you know having the words returning to a more normal state than we had in this year so there has been a lot going on about c plus plus in the last weeks and one of it was that prior to this conference there was a meeting in kona in hawaii where people talked a lot about c plus plus and i know that you have been in there and just you know what what was your experience like and what have you like you know unused about what happened in kona sure i'll be happy to so first of all if if people are interested in the details there's one post by herb sutter and one post in reddit that we've a few of us gathered and created together so i'll post that in the private chat and you can post it in the channel i think so yeah a lot have happened in kona that was actually first meeting on site after almost three years our last meeting was in i think february 2020 yeah almost almost three years ago in prague hosted by hannah which was by the way a great a great meeting so first of all to start with clearly just meeting people in person was was really special and great and i think when you work with people a lot of time as we do in the committee you know discussing we have a weekly telecons these days sometimes just you know being introduced to to some of those people that you've been working for for a while with is really helpful because because you just you know it makes the collaboration easier i have to say so i i am i'm i'm vigilant about the meeting step in-person meetings it's not easy to get to the you know for some people that live far away it's not easy to get to some of the locations makes it even harder when this happens three times a year so there's a there's quite a debate in the committee in turn intern internally in the committee whether or not we want to go back to full right now we're going back to to full schedule uh meeting approximately three times a year on site and having also some telecons but not in the same not as much as we had during the pandemic so i'm i'm i would in my in my personal view i think a great a great way to do that would have been meeting twice a year and having two virtual flanneries so every quarter we could uh have the in-person meeting say for the first quarter and then do telecons as we did for three months and then repeatedly i mean that's my personal idea of of balance but others may feel differently and this is as i mentioned a great debate in the committee but yeah going back to to kona meaning i think i think the meeting went great we've managed to do quite a lot of bug fix for 23. for those of you who aren't aware the c plus plus is the six of the standard is working in three years cycle and this was the last meeting i mean the one meeting before the last meeting on which we're going to announce 6 plus 23 so that was a bug fix meeting the next one which is planned in february in issaquah is going to be at bug fixes and then the official publication of 23. yeah so you mentioned 2020 you mentioned c plus 23. what's your view on the standard i mean it's the standard which is heavily influenced by the pandemic and what's that your favorite parts of that so 20 23 is not as large as 20 have been i think it's quite noticeable but i think that it makes sense in our way of work in the way that c plus plus develops we do get that sometimes we get a large version that is you know making significant changes having a lot of new features and then we have smaller version that basically addresses the issues and bug fixes and also try to improve the major features that that will we got in 20. so i mean personally i think it's a good balance i i'm sure i mean there's other people's that that have been longer in the community and may have different opinions but i think it makes sense moving too quickly can also be a bit intimidating for some for some of of the companies for some of the of the projects so so this is a good balance in my mind foreign yeah so uploading questions helps me in asking questions helps me a lot more so there's the first question which goes up gets up orders like some people like price level field isil is a disservice to c plus plus what's your opinion should c plus plus be developed outside iso yeah so i can only you know have my personal experience to to to get an opinion on this i mean my personal experience was that the process is relatively democratic i don't feel that there are you know significant you know that companies that try to affect or or get you know more benefits by being i mean i i don't feel that this process is is in a danger of being affected i feel that it is relatively democratic however i would love to have more people involved in the pros in the process and that means get technical opinions that means collect users inputs and users you know or preferences designing a language and a library is a really hard work to do when you got without the feedback i i mean we could as a group of you know 250 300 people that are currently active in the committee we could may have you know have ideas about what's important to us or what we think is is useful but i greatly believe that what we need to do is focus on what's important for the around five million c plus developers so i think in regard like to answer the question i think the iso process is reasonable in terms of you know getting decisions but i would love to have more people involved in the review process i would love to get more technical pins and users requests or you know preferences combined into this progress now we do use github we use you know i would i would call it modern software development tools in a way things that other languages also use to develop and i think it's great i think i still think that the discussions are important i think that i don't believe that we could have a full develop a full language just by doing a github issues or or you know opening tasks or whatever i think the discussion is is crucial and i just want to add to that i'm i'm i mean i'm not very active in the committee but in the community but i i am involved in in carbon as well i mean just you know taking interest in in the in the progress and participating in some of the meetings and i i mean i really value their way of progress i still think that the discussion could have been between more people so like i love the fact that carbon are trying to approach the community i think that both carbon and c plus plus could have done more to to get more opinions into into the progress but yeah true there is a simple question on what is the status of reflection on c plus plus well that's a that's a great question so first of all i just want to remind you of people that hannah is also in meeting uh she's a really nice person and she's the chair of the reflection study group by the way for those those of you who haven't and i think that we built i think there's a agreement among the committee people that reflection is a very important tool and that we should really uh pursue having that as soon as possible unfortunately this is a very very complex tool it's it's it's a it's a it's a toolbox it's you know a scope of things that you need to have in order to achieve the usability required so it's it's i wouldn't say it's designing a feature i would say it's almost as designing a new library a reflection library in a way and that's not an easy task and as in other things in the committee people have different opinions about how we should you know which design decisions should we do so i think that there's a consensus on the fact that we need to have that and this is an important tool for a toolbox but there's also going to be hard time in aligning everyone's you know opinion on how this thing should look like i think we did get to some agreement and if you see the reddit posts also have this so there's the reflection ts but there's also a new paper by david and others that currently fail to remember some apologize but yeah there there are directions that we agree on but it requires a lot more work and i mean i wish i could but i can't promise it will land in 26. i wish it will though foreign [music] let me quickly resort the submissions yeah so nikolai resort has painted a pretty grim picture okay so maybe first i want to ask you did you watch the opening keynote yesterday because i know you have the theoretically could have watched that you know but i don't know if you have that time yeah so unfortunately i didn't i didn't had a chance because i came back from corona around two days ago and you know everything is still trying to get on top of things i have heard about this in twitter where c plus plus is being developed clearly yeah i have heard about it i would love to watch his talk honestly i'm sure i mean knowing nico i'm sure he have a lot of useful and beneficial information to share yeah so i i can i can't address the technical part i've also seen the rip over briefly before it got down but i can address the technical part because i haven't seen the talk i can say that i believe that so i i want to say development of c plus plus is is is not something that you know that should be close in a closed group of people we love to get input we love to get people's opinions people experience people you know you know as as nico come over to us with a paper and with suggestions and we'd love to consider them i can only talk about sg9 you know as i'm leading this one but i i can honestly say that we're always happy to get input from people so if if i understood correctly nico have some reservation about how views have been developed and implemented and designed in in 2013. i would love to get his inputs as always we you know he's in our very list he sends occasionally he sends some examples and requests etc and i mean he have managed to fix a major you know arrange based for loop recently and i'm sure he we've been talking about that as well so yeah he knows he knows that our progress he knows our process and he knows how to give us feedback and i'll be happy to get his feedback okay so just let me know so nikolai has painted a pretty grim picture of youth notably the fact that they do not propagate constantness what is your take on the current design does it need modification to be safe for all those just or are those just as edge cases we should not worry about so yeah what what i remember from nico's keynote is like his main point is that constant propagation and constantness and views as such is currently in his opinion broken and as you are the the chair of this group what is your view on this topic and is there progress on this this is something which the community committee is like having in the view are what's your take on this yeah so yeah i'm i'm aware of nico's opinion [music] i can say two things first is that i mean we we do develop we do get features and into the language and a library from you know um popular repos popular libraries as as we did with fmt and format things that have usage and you know and also users like a large group of people that that want to have this thing that is using the feature and we usually don't get features without this so i mean we think quite carefully about what we get into the standard and that was the case in rangers as well so i mean i can only say that we don't do perfect work all the time but we do get you know we do try to iterate over proposals quite heavily before we decide to get them into the startup so what i'm trying to say is we would love to get fixes i don't believe that the problem is as large as nico is trying to represent it i i do think that nico have some good points there we also have you know although which can easily get dangling references and this is something that we use quite you know extensively and people are aware of how to use that correctly most most you know mostly so i don't think that nico's point the the point that nico is making that this is like completely broken and dangerous i mean yes c plus plus used incorrectly is dangerous that is true we we don't have you know we don't make it easier for our developers and i mean that's you could suggest that this is by design we want to give the largest freedom to use the language but that also comes with a cost of of having you know having have to to know how to do some things there are some pitfalls that you need to know how to avoid so my first part of the answer is i think that the problems are not as you know as presented and i think that the basic idea behind views is is coherent on the other hand i will say that we did discuss we do have some proposals for example by hands hennis sorry i think you may know him from germany a very nice person so he came to kona and presented a paper that brought up an issue that i i mean we all agreed that the issue is you know worth solving and i can i i can also post a proposal later but and it's addressing something very similar to what nico have brought up if francis correctly by not looking at the top by by you know the fallout but we were very happy to get hannah's proposal we were very happy to discuss it we didn't like the specific solution but we're planning to iterate over the design more and hopefully to get this ready for issaquah which is the last chance that we have to fix sql space 23 and i i really hope that we'll be able to to get those sort of those problems sorted out so i mean on the one hand i want to say we don't treat things lightly and we don't get things into the language and the library lightly we do try to do you know to only get things that have been heavily used heavily requested by users on the other hand of course we can fix things and we're happy to of course the limitation of api breakage and generally api breakage is is always there until you know at least for now until we'll decide otherwise if we may but but on the on the limits and on the scope of what we can fix we're always happy to to do that so yeah i'll be happy to ford hanna's paper in the chat and and everyone and and this is an open invitation everyone that feels that they have ideas or they they would like to contribute to making rangers a better it improves visibility of ranges are really always welcome to even if you don't know or you're you don't have the time to write a paper we'd love to have you know we feel free to join our reflector and propose things on a melon list we always have to get the good s which work is that to be an sg chair why do you do it and does anybody pay you for your synergization works [music] so i i want to answer a few different like for me personally and also also the general answer which is not exactly the same thing so to start yeah being an as teacher is is quite heavy it i would suggest it takes all the time that i would have liked to have for hobbies for example i gave up on the notion of having hobbies and instead i do a study group thing yeah i mean to to be more concrete yeah you have to you have to follow up you have to make sure that you know what's going on in regards to proposals that relates to your field even if the people proposing them not not necessarily you know or reference to you or to the group or you know even someone doesn't add ranges in their proposal if it's relevant you should be able to collect that and get that discussion in the group of course you you want to have like good people involved in the progress and that's actually you know it's not on me i mean i i couldn't have done that without are really really really helpful members so i can say you know very team steve that have been very helpful in kona and casey which is of course my co-chair um there's others that i might maybe oh michael miguel and others quarantine of course so it's not it's nothing i'm not doing that by myself and i couldn't have done that if you know without the the really great people and that are involved in the progress and this is just recently of course i don't need to bring out i think eric's name because i think everyone are aware that rangers have been you know have a father but so it's it's a lot of work but it's not just my work and definitely i think that i'm maybe doing the list of you know and our group members are doing a lot to both improve ranges and also help other people that are not familiar with the details to get into this work and and i'm really grateful for that does anyone pay me for that so the general question the general answer is that some people in the committee again are getting paid for for their committee work this is usually people who are in you know located in leadership roles etc i can't say i i mean i've just started working a new workplace there's no budget for you know a time budget or money budget or the eyes of work put in a slide the flights which i am getting paid for but again this is not a cross committee arrangement the different people in the committee are you know have different levels of financial support from their company they're working at i think that this thing no one does that because they getting paid or because they're getting you know benefits or whatever if you're not really passionate about c plus plus and about developing this thing that you believe in you know money is not is not is not the point here and you could get paid for doing that and get you know hold the official title or whatever be considered as a member maybe and do nothing and you could be like you know a student with a part-time job or no job and you know just doing that for fun and making a tremendous so i just want to emphasize this is not like a regular you know work uh that you do that you have a fixed time and and that you start you know nine to five and you decide that you're doing it's really up to you how much you want to put in effort in in this thing in the thing that's called c plus plus how much you care how much you you want to improve you can and and the range is really wide you know the level of involvement and also the level of financial support people that people are getting you have i think something people need to understand that there's some people being on the committee to be paid for it until the the voice of the employer of the company and there's people which are the representative of their nation as you all so you know already said that you're part of the israeli national body which is also like kind of a relatively new thing to exist so maybe we want to talk about that a little bit like you know how that is structured and how like you know the the national body works for for israel which are very important yeah sure so i'll be happy to i'll be happy to share so in fact israeli national body have started i i would say officially just before prague so how the way it started and i i think this is really worth mentioning bryce came bryce lalubach came to give a talk in our local conference in israel course cpp and he also gave a lightning talk about how israel should start the national body now this was i think our first yeah i think it was our first international conference i mean i wasn't involved back then in the organization it was adi and michael they did the work and i was just a speaker back then so yeah and i think at first people had no idea what bryce was talking about because you know it was the it wasn't a known thing in the community in the community obviously of local sequence developers anyway a few of us took this into consideration and uh scheduled a meeting a poster conference started working on that studying to understand what the meaning of having a national body is eventually we've approached our standards governmental office and started the national body so i'm the chair of the israeli national body and we're meeting approximately once a month we discuss papers we have people people in our group are on different levels of involvement as i mentioned before you that's also relevant for the national body so you could basically come to the meeting and just hear about you know the recent papers that have been published or you can come and ask for guidance for this proposal that you're working on we we also start like work groups i would say you know unofficial work groups inside a national body for example we've just recently started a reflection work group so what we're aiming to do is basically take the current implementation of reflection and give some feedback users users user side feedback on that and you know we that requires quite a lot of work and you know collecting the data from everyone etc so we also do that so i would suggest that the israeli national body is less official than others mostly because we you know sort of set the course by ourselves of course there's regulations in the governmental office is making the final you know the setting the the tone and but we basically build the progress and and what we want to have in in our group unlike the firmware for example the american the united states national body which exists quite longer and have more i would say official processes we basically focus on what we're interested what the members of the group are interested at etc and i mean for me at least i think it's a great experience i love meeting with people once a month and talking about you know things that i'm passionate about but yeah it's it's i mean it's an interesting progress but we're still learning and we're still developing and as naturally a lot of our members have less experience in this in the iso process than other members of the committee a sense we only exist for approximately two and a half years but it's a great it's a great national body and i'm really proud in all of our members by the way one of our members have also presented a paper in pona trying to fix content iterator etc so yeah we're doing a great progress ive so talking about the committee in the first keynote chat and also i think nico said that on stage there was right not so serious a serious proposal to have c plus beginners on the committee to lure the entrance barriers to the language and to get more feedback on like you know how to get rid of the outside of the group think what do you think about the beginner's ambassador role instead of help with that i will be an enthusiastic supporter i i i mean my opinion i think i make it quite clear in the limit of what i can do you know in in the you know the scope of rules of iso which is quite quite wide i mean we had for example i would i would mention that we had few of university students been invited by jens to the kona meeting and we also had a few high school students and i think this is a great tradition that we should continue and i've said that a couple of times so i hope we'll have that unisaqua as well in general i think as i mentioned before we need to get more feedback and we need to get more people involved in the progress and we need to get people feel more comfortable approaching committee members and experts and you know just talk to them about this feature that you know because we don't we are software developers or you know architects or whatever but we don't know all the answers we definitely i mean this is a progress and and we you know do our best and we try to to do the best that we can for the community for the community but we're not like you know we're not magicians we don't have all the answers and that's why the feedback is very important and specifically i can tell you that a lot of people are working really hard on improving the readability and the usability of c plus plus you could argue that it's that it's not achieving the goal or it whether it is or not but the core guidelines being you know by herb and brianna are an example for that so i mean the topic of making c plus plus easier both for beginners and for experts you know making this a proven readability improving the ability of developing large projects in c plus plus and maintaining them for a long time is something that we care a lot about so so it's definitely not not something that we just recently started to investigate and having beginners or you know beginners are representative come to the meeting and give us feedback is a great idea i would love to have more of those okay all right does the committee consider any breaking changes in the foreseeable future right so that's a that's a good yeah so that's that's question i have quite a lot of baggage that i'm not sure that everyone i'm aware of so i'll just very briefly scan so i i would suggest the committee is uh split roughly 50 50. i i would think maybe a bit less now since google have left and between people that feel that we need to maintain abi compatibility which is quite a challenge and between people that feel that we need to break this and move on and get improved improvements and optimizations that we are now unable to and this is a really like i would say even the hardest the the hardest disagreement point that we have you know as a committee which affects quite a lot of you know range a large range of a large scope of our work because you know making this decision basically affect almost every single proposal we can get and whether or not we can or can't improve certain things that we did in the past and again not everything is perfect we are just human so i don't you know reading the the atmosphere and the you know in the committee now i don't expect that we're gonna get a major breakage soon i think that the government in opinion right now is is not to do that however we do put a reasonable amount of effort in trying to have a solution that will allow us in the future to have some kind of compatibility and between versions changing abi between versions there's the epoch proposal by vittorio which i've heard unfortunately couldn't make it to the conference i wish him speed recovery but there are there are quite a lot i mean and this again as as other things have been in the committee there's multiple solutions there are multiple design decisions and directions and we discuss them quite heavily and there i mean the topic of of breaking simple spots between different standard versions is brought up quite often so if i would had to guess i would i would i would say that we're not gonna break anything in the near future i don't believe that we will apart from let's say very very small things you know the minor that wouldn't affect large amount of of users but it's also i i do want to point out that we're working really hard on you know trying to figure out this so this the best solution for this problem to allow us to progress forward and not to be held back by past decisions and i mean we do put effort on that and again as a this is a like a mantra during this the asking anything session but if anyone have some suggestions or anyone wants to be involved in those discussions we would love to get you know you into this into this into solving this problem i mean we we are i think that that it's an agreement that wide agreement that this is something that we need to address and hopefully solving it in next few years yeah i i a surprise present on this modern and there actually is a paper trying to kind of you know create an interface where you can break avi and conserve copy and i don't i think it's like the only way to move forward is to find something that solves this problem to to have a mechanism in the language that preserves rv but also allows us to move forward that's my opinion on that and i think the committee should work on that and i hope it does it's a bit difficult to find out what the current standard on that is one quick thing about this topic i also recommend i'll put that in the chat titus winters talk from the recent this year's first cpp north it's talking about software development language languages versus programming languages and you know of course having software development languages types of languages that you can use in order to maintain long-term projects and i think you have some really good points there so i'd recommend people to go and and and look at this and watch a talk and i think we should go towards the directions i mean at least consider the the alternatives as presented in in this talk in my mind so one of the views issues one of the views issues nico pointed was caching which okay one of the views nico pointed to in it's like an issue with caching which can bring unexpected problems when a view is reused and caching does not make sense when you don't reuse things right did you consider removing this at least making it like optional via template parameter okay so yeah that's an interesting question so i mean first of all i know i want to say like i i want to make a clarification before i answer my opinion on rangers is not like the absolute truth or anything like i'm just another experts that have interest except but like when we bring topics to the to sg9 we have a broad discussion and you know just the fact that one person thinks that something is correct doesn't mean i mean we can change our minds during the discussions in the group so i would say that i would think that this sounds like a good direction i would love to see a proposal on that just to give you you know a more wider view of this like generally of of the topic of passing parameters or you know making having a different flavors of the same thing so customization points i think are really important thing here we when we have for example a view we need to be able to ask the users like what do you want us to do with that just like over simplified model of the thing but what do you want to do with that do you want for example cash or no cash etc but on the other hand we can't have infinite number of customizations right because that that would be like it's it's a challenge to start using something that you need to pass like infinite like true or false i don't know five ten whatever start adding like more and more ways to customize the utilities from the libraries also not good so there's a balance and i mean i would from first reaction without seeing any proposal i would say that this sounds like something that could be reasonable to customize but we should also remember that we can't customize everything all the time because that would make the language unusable and again this is my personal view and it could be that this thing will be brought up in a discussion in sd9 that people will say no this i mean we don't want anything like that we don't want to involve you know implementation details into into the design scope of ranges which is also a valid claim so there's a trade-off to to be made here but be happy to see a paper or a proposal and we can discuss it and decide whether to move on with that so what do you think about undefined behavior and the standards why is it acceptable at all wow that's really good questions coming from your audience i have to say it's like all the edge cases and the dark corners of c plus plus are all being brought up yeah so i i i'll be happy to give you my experience with undefend so undefined behavior is indeed intimidating when you first stumble into that and when you first you know try to do something and it compiles but then later you are a composite works of course and then later you find out that you've been actually doing something really wrong wrong and and the standard was you know telling you not to do something like that and if you do then everything will burst into flames and it's hard to understand why do i mean this makes sense it works why do we need to not allow it so i think i came to appreciate undefined behavior more when i for example first went to clan sorry to llvm conference for compiler developers and there you start to see the scope of what the compiler can do with undefined behavior so undefined behavior is in fact a very powerful tool living things undefined is in a way letting the compiler do more do the right thing do more smarter things with your code that you're not necessarily always would have thought of yourself so undefined behavior have again i came to realize and that was definitely not my first my first you know inflation but i came to realize that i mean i i value this tool i think that we i would even say in a philosophical approach developers are probably less good in you know making the best optimizations and everything in comparison to the compiler most cases not always sometimes we have more information and we can do things better than the compiler because we know something about the program but power doesn't but in general i would trust my compiler to do things and undefined behavior is one of the tools that we give to the compiler in order to allow it to do whatever it feels or thinks that is best and i think that we should value that and not be afraid of undefined behavior because this is an important tool of course not to say that you know in some cases yeah it seems strange and maybe it doesn't make sense and maybe we shouldn't have done that so you know but yeah yeah so kylian asks who is the most hard-working person on the c plus committee oh wow that's i don't think i can think of a few people i i don't think it's like you know it depends on on a lot of thing a lot of ways you know sometimes writing the largest number of papers is you know considered doing the hardest work but sometimes also you know encouraging people to to propose to make good proposals is also really hard work and needs to you know needs a lot of time and effort and i think is also important so i think this question is kind of you know i can't i can't answer it and no yeah and not get people offended but i really think that we have a lot of people doing really great work and i try i do my best to to call them by names in my twitter posts and so if you follow up my twitter posts you'll probably see a few of the names of the people that work really hard but i would prefer not saying here because i'd probably forget someone definitely a lot of people put in a lot of efforts to two people that come to my mind as i remember that ian's maura is very much involved as a wording and the standard beast and that that is a tough job to to get that right to speak the language of the committee and the standard and to to make sure that you express what is the standard that that means what it means and i remember spending part in that group when i run that one i didn't join the committee but i was a guest in one of their meetings in cologne and yeah that's debating half an hour about a sentence and how to correctly order words or debating about which verb is tough and of course i think you should give a shout out to coreton who is definitely hard working member of the committee and i think that there's a lot of hard-working people and there's a lot of people who probably don't know about this are not like that public visible and generally yeah a lot of people work together in the committee it's not like you know the the hardest working person whoever that is is like having the biggest influence they're just one of many yeah and if we already bring up wording people then for library it's jonathan wickley and jeff we're in line that does that they are not updated so yeah i would i would agree with your perspective of having like the wording people are differently definitely doing a good job but yeah yeah there's a lot to do and and there's a lot of people that put their effort so i really think like i really appreciate every one of them so we're on the committee and you're chairing in a group like what just like the latest paper you have been involved with yeah so it's been a while attributes along the expression i think is the recent paper that i've actually yeah so that paper is with villain david and i mean i did it's part of the work that we did a lot of the wording and villa also and but i think it's a it's a nice one but i have to admit i would love to be more involved and have more papers in a way being a chair is actually prioritizing not the you know not your papers and not necessarily the things that you find that are most important but actually prioritizing the committee and you know the process more i think people sometimes don't understand that the chair actually have to be impartial they have to like in order to be a chair you cannot you cannot have preference strong preference even though sometimes i have them i really try to avoid bringing that up in the discussion because the the most important thing is to have the process correctly and to have everyone's opinion being heard and to have you know constructive discussion so yeah i i and not to say that there are many chairs that actually do manage to also do a lot of papers work which i really admire but you know do is doing this thing is currently more important to me than working on my own proposals i do hope to do that in the near future though i think that there's a lot of interesting problems that we have that are open that i'm i would be happy to you know get deeper into and propose some solutions but not right now what do we need in the next c plus plus standard versions for embedded developers anything you are excited about oh wow okay so i can say what i think is important and keep in mind i have nothing to do with the priorities of the committee i think that yeah i think that improving our exception mechanism and i'm not talking about having necessarily new exceptions even though that an option but having the the paper of low cost deterministic exceptions i think is really important and really beneficial and we should look different to that and maybe try to have that this is mainly implementation details but we still need to be able to allow that as part of the standard i think that that could improve a lot in you know the scope of embedded development which is by the way i think i think even you had a few surveys but also made one or two and you know about 50 of of the developers c plus one developers and a lot of them are of course embedded developers don't use exceptions and and this is a problem in my mind so yeah if you would ask me i think that improving the exception mechanism is something that we should definitely put effort on i think that we already did quite a lot for the embedded world i think that people are not aware that c plus 20 is giving us a lot of tools for compile time to improve our compile time development and i would imagine that reflection could also help so but we i think i mean we're in a much better shape now that we've been i'd say six years ago you know in regards to embedded development for c plus plus so yeah so more compile time tools i guess yeah we've made some progress on the direction that's true how much of the work you are doing in the iso is procratic not technical work does it feel it's more like unnecessary overhead or is it actually helping so again from my experience and you know the iso process i think it's good i i really do i mean the overhead the main overhead that we have is for documenting all the discussion and the decisions and that's a very important thing that we need to do in order to avoid repeating discussion so that that thing i think will not go away regardless of which progress which process sorry we're going to choose personally i don't feel a lot of overhead coming from you know just the fact that this is a standardization progress probably likely that that you know our convener and the chairs of the library and core groups that are basically the last stage before these things gets into the standard experience a bit of more of of the overhead but i think still again my personal view is that the progress is is is good [music] you know standard standardization may sound annoying and you know kind of you know a lot of governmental and bureaucratic things but and at least for me i don't think we feel that on the day-to-day basis in our work the discussions are technical the apart from you know documenting everything we don't need a lot of extra effort okay what should a person who has just joined the committee and has been reported to iso as an expert to learn the sc of the group yeah so first of all whatever the iso cpp org website actually contains quite a lot of useful information so first of all i think you should like if you've just joined you should first of all yeah thank you recognize which topics are you interested in and that's very important because you wouldn't be able to you know capture everything and all the information all at once you have to start somewhere so first of all identify which groups do you think are interesting which topics do you think are interested and start from there and i would recommend as i do for you know people from our national body that want to be more involved start by attending telecons of the study group that you're interested in the topics they're working on start to hear the terms and start you know getting the terminology to feel more comfortable with the terminology and this is very important because otherwise just you know popping in one of war group 21's meeting may be intimidating even though the if if there's one in your area i would probably suggest that you joined it still so first of all as i said join the groups that you're interested at follow up on the reflect or try to read more of the reflector posts and emails as you as you you know get into the topics and then the next thing i would probably suggest doing is trying to collaborate with someone and write a paper or at least you know try to start writing a paper it doesn't have to be something big it doesn't have to be like the the largest feature that we currently it doesn't have to be reflection but you should try at least you know and start working collaborating with someone and that's how you get to know the progress because in the process because a lot of people don't are not aware of like not exactly sure what it means to be a member of the committee etc the largest impact that you can do is actually by writing papers and by making suggestions by providing feedback to other people by the way that's a stage i forgot to mention also remember to give feedback to other people on their proposals especially if it's something that is close to your domain or that you do work heavily on in your day job for example that would be very helpful so yeah that would probably the process that i would suggest and of course attend the meetings attend the telecons there's a lot to do all right this brings us to the full hour and there's no more questions so thank you for coming thank you for being our guests from israel to answer all those questions and thank you for coming and your time was really a pleasure to have you in mind so final words are yours any products anything we should still know about you and what what you're learning up to i just want to say if anyone have questions or interested in a committee work you know to follow up on that feel free to approach me i'm i'm really you know excited about getting new people involved in the committee and i really think that we have as i have said a lot to do and there's plenty of work to do and i'll be happy to get your you know to get you approach me and and we'll move on from there and thank you jens for organizing this that was really fun i got to talk about all the the as i said the darker corners and all the the tough topics and that's that that was really fun and good luck with the conference that i hear is is doing great so thank you very much yeah i hope it's like two-thirds are done yes so okay i i think like we had a great day today and we generally had a good conference and it's so awesome to be back in berlin and i'm looking forward to have another day and this will be another awesome questions and in the years that's just an achievement conferences are fun foreign and with that i am going to close the live stream i'm going to take us offline i want to thank the audience and i want to thank everyone for the questions we might do that again in the future see you tomorrow everyone thank you for coming