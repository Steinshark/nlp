i don't know how this keeps happening but how do we go one month just just one month and we have a new javascript framework already okay or not javascript framework but javascript runtime okay not even a framework for those that don't if you don't know the difference between a runtime or what a runtime is let me just say this so remember javascript executes in like a little engine okay this thing takes care of memory management it takes care of like keeping track of acing tasks and all that kind of stuff okay whereas you need the ability to actually interact with like the file system right you need to be able to actually make requests out somewhere you need to be able to do like a bunch of extra stuff so this would be like v8 this is node okay so someone has rewritten node and potentially swapped out the engine let's find out the thing that they've done winter js 1.0 announcing winter js the fastest javasript damn they actually went for the fastest now that's kind of a bold move because at the end of the day you're still running javascript right and you're claiming to be faster than bun which is written in zig so i don't even know what is this is this is this written in rust is this rust versus zig the fastest javascript web server now also supporting cloudflare applications and react server components speed winter js 1.0 is finally here winter js is an incredibly fast winter cg compatible javascript runtime written in rust using spider monkey engine to execute javascript and tokyo to handle underlying http requests and js event loop winter js runtime can also be compiled to web assembly and as such is the first production grade runtime fully runnable in wer edge okay okay here's what we have accomplished for winter js 1.0 in just four months after our first announcement blazing fast speeds faster than bun worker d and node well i mean being fast than node we've all learned is not that bad and all you to do is just not implement any of the async hooks that bun does or that node does and boom you're faster winter js is now fully compatible you can't put an aster you can't you can't say this and then throw an aster i just want to let you know you cannot do that that's not allowed okay that's not allowed right there no i don't care what is what's the aster what's the aster mean well where the hell do they define the asteris what it can't be that one okay it is it this one back pressure and transform streams and some non-common crypto algorithms are not implemented yet oh it is this okay yeah that sounds like you're not fully compatible just throwing that out there fully means full shaft here okay i mean i get it you i get it is you're not like loosely compatible 97% compatible yeah 35ths compatible just wrap it with quotes compatible let's see okay oh well oh i'm stupid i'm stupid i'm stupid it says with the winter gc spec okay i said there we go i thought it was just i my bad but still you still can't say fully compatible you still can't say this you still can't do that cloud flare api compatibility web framework support nextjs supporting react server components hono astro seel kit now let's see more detail each of these features ridiculously fast winter js 1.0 is able to handle 150,000 request per second when executed natively natively just means running javascript right is that what this means in this in this l plus ratio plus stupid potentially that that literally just means running javascript right no no compiled to wx no i don't think so because it says 20k request per second when compiled to wasm using wasix wasix is just like a wasm spec right it's like extended wasm spec right as of today winter js can handle more requests per second than bun 117,000 requests per second worker d 40,000 requests per second and noj has 75,000 requests per second okay what kind of requests are we talking about here i do like that you put the lightning bolt on here okay lightning bolts you know this kind of lightning bolt holds a very special place in my heart because when i was a kid there was no greater feeling in the universe than getting the lightning bolt while playing mario for the super nintendo mario super mario kart for the super nintendo okay there's no greater feeling so when i see that lightning bolt it makes me feel warm inside okay all right i do want to see the benchmark all right what's the benchmark here where do you simple is kind of confusing to me because where do you where do you specify stuff is it something like this what is this worker c oh this must be some sort of cloud flare bsas flake oh man they're nixing oh my goodness nix boners are in the chat as we speak speak oh no nick boners here it comes all right so no simple ah but hold on may i say may i say hold on may i say hold on look at what's happening here everybody look at this new response hello i guess we're going to have to what what is a response i'd have to look at the source code for response to understand this okay but look at this one you have to create an object right here something tells me these these don't feel like necessarily the same that's a web standard i hear that but is that is that header being set by doing an object merge here or is that header being set in the zig level hey i'm just saying there's a difference okay writing a header at the point of request at like the the deep down zig level versus writing writing that header in as an object free floating in node remember i mean there there's just a simple there is a difference okay this is stupid if you're running native just use a fast language for  sake that's a lot of going on here buddy i can't take it anymore js is objectively poor choice for a general purpose programming language i do agree it is a very great language for ui just like lua i think lua is a great d i mean i think dynamic programming languages are great glue languages that's the point of dynamic programming languages why is there code uh true i agree base take out fast server that's the that's the f like that's the thing hey thank you p pp pph pp hav what a name what a name can we just get some claps in the chat for pp hav coming in tier three oh my goodness just give me the exe baby anyway so that's one thing i just see right away that makes me a little bit like curious and this also right here what's going on right here how's this how is this implemented right like i don't feel like in my opinion i again i we talked about this earlier right where there's these things that end up happening i think i actually already have the diagram yeah i already have the diagram right here which is these these dumb examples that are just these like super super super tiny examples and they're just saying like look how fast we are the reality is is like if you do anything like anything in javascript you're going to massively slow it down you run react one time to render a div which remember they're saying they support server side server server components right you write a by the way this is in invalid syntax sorry here let me properly close that div for us all right there we go you write a singular div right just one guess what like your 100k requests or whatever these things that they're trying to tell you is is going to happen it's going down lit by potentially 100x you might only be able to do this a, times maybe 2,000 times maybe 10,000 times who knows but whatever is happening this is getting dominated one of the greatest exercis i ever did in my lifetime was when i first started off trying to learn how to do game programming in xna you may have heard of it game studios microsoft c baby i was a c andy at one point i did years of z i absolutely loved it but one of the first things that i was taught is you always make a fps counter right away and you paint it in your upper left hand corner of the screen right that's like the first thing you build so when i first started off i saw man i had 3 thou i was going at like 3,000 frames a second oh i have i have frames for days and then i wrote a triangle and it's like 3,000 to like 500 or something like that you know just like a just a just a massive you know jump down in the amount of frames that i was having available and that's when i realized oh crap like you actually have to be really thoughtful about what you're doing you can't just simply assume that just because it starts off as a huge number that that number nicely goes down slowly over time even though you're adding tons of features no it's like a logarithmic curve it goes it it dies fast and then slowly goes down just add one json string of five json pars and the request handler and it's all over exactly the curse of fps i know and so it's one of those things that you get sold these kind of crappy examples of why this is super awesome the thing like i don't know what spider monkey has done does spider monkey have as good of json stringification and parsing that v8 does like v8 has some of the best json parsing there is it's sim deed out of its mind it's super fantastic it's faster at parsing jesson than it is at parsing javascript it is fast it is smooth and it can go really really quick you know for javascript and and and and and json and all those things right simd nuts exactly and so it's like one of those things where these kind of tests don't mean anything what about noes url parsing i hear it's i hear it's the tippity top i hear it's the tippity top yeah spider monkeys the firefox runtime yeah i i know but this is just like why this whole thing is just so uninteresting in the sense that when they say this it means nothing they need to show you a real thing right so what i want to see is build an application a to-do application that's purely server driven and then take that purely server driven application use your little react server components or whatever you want to use and see how fast you can run that that makes way more sense right i don't want to clone it investigate because i don't want to spend three hours investigating into something that i just don't really care okay i can just tell you right now this it's just like it's just it it's just plainly wrong and i bet you there's already somebody out there that has now coming and saying hey it's impossible watch this here comes i benchmarked using my main branch on apple silicon mini m2 bun on a single core serves 192,000 requests per second winter js utilizing three cor serves 880,000 requests per second so approximately 6x slower than bun i don't know where this claim is coming from and this guy's name is just js a very small v8 javascript runtime oh it's another runtime damn i just got owned by another runtime but hey i'll follow you what a great thing but i mean i think this is correct but also this is very interesting utilizing multiple cores h but this is a good point again this is why you don't trust any just don't trust benchmarks okay because who am i supposed to trust now should i trust winter js or should i trust just js which one should we trust like how do you even know this was used let's see this was using 64 connections two threads for work if you look at the bench they describe how they are obviously running on a machine with at least 12 cores and comparing bun and others to running on a single thread oh no did we miss that oh no oh no oh no this benchmark is a macbook pro m3 max laptop with 64 gb of ram okay so that must that must that's them saying this how do you know that it's working with that my my question is up let's see worker d darwin arm 64 serve do this thing like how do you know how many how many cores are being used cuz this thing say 12 threads this one 12 threads this one bun 12 threads this one oh this is how many threads are obviously being oh this is the what's it called this is the this is the work this is how many threads they're using for connections so that's the i mean that's the thing i don't get is how do you know how how do you know that this is using more more resources with winter js than the other one t12 yeah the t2 that's just that's just the worker threads right that's these guys right here that's this thing that's that's like you know like any of the any of the http testing frameworks you just know this so from this you don't know right cuz they're all they're all saying 12 threads because they're all testing with the same amount of threads you have to look at htop you have to look at something else that actually is doing it all right os threads potentially not equaling hardware threads winter js is a side project why bob left the it department six scores is pitifully slow anyways 19 17.1 n megabytes per second is pitifully slow got him i haven't figured out how to compile it on linux there's a c++ compiler error when it compiles a mjs cis after hanging for about 10 minutes tried using nick shell and als let's see and also without that yeah i don't even have yeah happened to be on ubuntu 2204 see i only have ubuntu anyways are you comparing native bun what what is this native what is this native business they keep saying it also seems to have some kind of massive memory leakage around 30 gigabytes rss after a few work runs let's go let's go again this is why be careful what you say i mean the wasar people are pretty smart people i'm not saying i i'm not like knocking them but this is why you should be very very careful saying these things okay i like the tweets so people can see it right when i like the tweet it shows up everywhere it's very interesting another javascript runtime another disappointment in the end i mean i mean like bun is bun is pretty cool but again bun still has this problem where it's just like how are you going to convince everybody to switch over from no. js to bun js like i just foresee that being very very difficult not only that but like what are you really buying yourself if you have any sophisticated logic at all in javascript you actually haven't bought anything i couldn't really tell a difference and i played with it for hours upon hours upon tens of hours trying to get a difference between v8 and bun and i could not really find a strong difference in the the actual javascript execution now there is a big difference when it comes to you know the runtime and how they handle async stuff and bun is just faster but bun has less things that you can hook into like data dog if i'm not mistaken does not work on bun because they don't have all the hooks now i could be wrong at this point in life i don't know if they've changed things but when i last looked at it you couldn't do all that but now you get into this whole idea that like we're competing on the dumbest possible access right like writing a fast javascript runtime and trying to like compete with bun or no. js i think you're just fundamentally doing the wrong thing cuz all you're really testing is how fast is my native code compared to your native code and it's just not real right it's just like not a it's just not a real test yes the only nice thing about bun is the tooling they built for like that's that's the reason that's honestly the reason to use bun is that they have an entire ecosystem and tooling around it right like that's much better the thing is is that you could write the world's most simple go server and you're going to be able to do you're going to be able to do a massive amount right you're just going to be able to do a really good job here you know what you know what forget about it i have let's see let's go like this let's go to personal hey flip you're going to have to edit this to make it like quick you know what i mean don't have all of this on here because this is way too much make go test go test go mod anit suck it.t v/ just it all right there we go we have this one uh command all right and main.go okay p perfect package main bum main here we go and just to make sure i have the exact same thing i don't even know if i have work installed on my computer all right so here's the command that they're running fantastic i love it and then let's see i don't even know how to do the http server right what is it it's no no no no it's http handle funk this guy and then what did they have i think it was just hello right what was it it was just hello right we have a writer so we have a what is it format f print can i just do that can i just print is that like is that something we can do is that all i need to do i you know that's the that's the thing i don't even know if i have to do that i never raw dog a little format server oh and then i have to go like this http what do we have to listen and serve on 80 okay fantastic go run command mang go and this may be in debug but who cares for a second htp whoopsies get out of here curl http 12700 01 8080 okay so we got the same hello i got a capital letter they don't got a capital letter can i do verbose real question does it set how do i view the headers response headers content length five text there you go see there we go so we have we're getting everything in here okay so we got we got it all we got it all good ip leaked 20 127 okay so do i have work no i don't have work okay hold on i'm going to pseudo app and we'll do this for a quick second hold on there we go first off i think i'm in debug build right now right this is just like nothing fantastic going on here okay so we destroy just destroyed absolutely just wrecked hands down destroyed demolished debug builded we go what how do you do a good what's like what's a good debug how do i do a debug build and go or a release build release build go i i don't even know i always have to look this up cuz i write this like once per docker file and i never look at it again default go build combin symbols and debug information however you can remove all this stuff and do go this one right here okay is that the one we want to do common go just just go build but it has all that extra crap in there i want like the the most the most smoothest most smallest possible one okay i got the same thing destroyed absolutely wrecked i'm on a sign i'm on a very my cpu is significantly weaker than anything they're running right first off if you cat pro cpu info right like i'm on a i'm on not nearly the same i am not nearly the same i only have i'm on like a little liir pro okay i'm i i am not on a very fast cpu right okay i mean good cpu nice but still a a it's a couple years old this there's nothing fantastic fc going on here right this guy seems mobile weare yeah exactly i'm not using a fantastic computer this guy's on an m3 max laptop with 64 gigs of of of ram okay right so it's like i'm not using a lot and i just destroyed it okay wrecked wrecked it apparently we can't get was winter js to easily build is that what we saw let's see if they may have fixed it already let's let's find out can i can i just do this h i don't want i don't want to i honestly i don't want to deal with building it and all that okay i'm not even going to do it i'm not cuz i got to go like we got to go like read stuff and build it and it's going to take forever to do stuff i don't want to do this we're not going to do it we'll do it later but just use the nyck flake i have to get nx install then understand how to nix it yeah just give me the exe all right there you go that's how i feel about the whole situation do with bun fine here i i'll do with bun there you go i think i have bun right yeah yeah yeah i i have bun bun update is that how you do it bun is there a way to oh upgrade there you go i'll make sure yes there we go there we go we upgraded upgrade upgrade upgrade all right so we'll this will give us a some light into what's happening here okay some light not like a ton of light but you know some light and then we'll do a bun simple bun. ts is that what you call these things i assume so bun bun ts fair fair okay there we go actually let's run it over here bun bun ts all right there we go so we got that 8080 and then now let's let's do a little work wrecked destroyed annihilated wck them so there you go absolutely grand absolutely grand not even close again but it's doesn't matter cuz again it it just it again it just does not matter everything we did here doesn't matter because none of it actually makes any sort of sense or is meaningful okay none of it's actually meaningful okay so again don't buy test okay see a real appload see a real workload okay like a real workload you actually have to have something that it does okay so here's a good here's a good story is i i had this like little example app that i built of few times it's a shooter app where you have two like computers come up and they shoot and they use websocket connections to do all that and we ran a test between how long can i maintain 60 frames per second updating in node versus go versus rust at rust i could have like 2,000 games running and i didn't drop a single frame everything was 60 milliseconds on the dot or 60 frames per second on the dot for 2,000 running games in go it was like i was dropping like 1% of frames that means when i say dropping that means going up above 17 milliseconds per frame that was wild right and so it's just like okay only 1% of them with node i couldn't get to 2,000 games and when i did get to like, 1500 games or whatever it was i was at like 20% of the frames were more than 17 milliseconds and so it's one of those things where when somebody tells you like a it's like so blazingly fast it's so amazing it's so this and so that it doesn't matter guys it doesn't matter shut the hell up about rust shut the hell up about russ cuz it doesn't matter okay it doesn't matter i was just showing you a basic point that if you can just launch up any other language it go super duper ultra dang fast okay just shut up it doesn't matter we're going to launch up rust and bam wow it's going to be like 220 holy cow it's so fast but nobody actually cares because it's not actually doing something amazing okay can we just stop with it like i was i was really hoping you would understand the point of this which is that these type of tests are synthetic and they mean nothing okay because when we add a bunch of workload you know what go's going to do it's going to drop by like 50% but bun is going to drop by like 90% and it's going to have much more variation in requests which is all very very very important to understand okay it's very important because that's where it matters it doesn't matter when it's just hello world it matters when you're actually doing something like actually doing something you assumed i understand anything think shame on you no no i will not coat in rust i will not my hair is not blue yeah guys i dyed i i i dyed my hair blue a long time ago okay i no longer have blue hair we don't program rust around here anymore benchmarks are more or less assume optimized code in reality that's rare yes like you should make things efficient because at the end of the day like inefficient code will truly cost you a lot of money as you actually get real users most of you don't even have real users okay you guys just just have a bunch of startups that have zero users it has only your test user so it doesn't really matter okay it doesn't really matter how you write your code so just use winter js or bun or go or rust or whatever the hell you want to use because it's not going to it's you know 95% of all startups fail anyway so it's not like you're actually getting anywhere you know i hate to tell you this you're dead on a ral buddy words hurt man sorry for just sorry for dropping at all only 95% what would be a real test in your opinion oh something that's rendering something something that's doing something ser how about this one simple serving htm x page with enough elements on it to be useful right like that's not that's not crazy that's like simple right it's easy it's not that bad okay do it then i again i'm not going to spend two hours trying to make this really great example because again i don't care we've already done it i already have youtube videos doing it if you want to go do it do go go go is faster than typescript one okay i did a whole thing on it we've already looked at this this is already a well understood problem if you don't understand the problem go do a little bit of reading go do a little bit of experimenting yourself doesn't even need oh i was just saying put htm x in there right do something do a little bit do do like put something in there right youtube's chat ignored but they got videos this is true youtube sorry the bots that destroy my wordpress site at the same time every day are real users the name is winter's coming js s jen