three irl use cases for python and hdmx this is not sponsored good i'm not sure who i got sponsored by big python i got sponsored by hdmx okay you think the horse the the posting horse horsehead language is gonna be sponsoring anybody there is nothing hmax does that you couldn't do in another way but hmx pairs wonderfully with traditional server-side frameworks and gives you clean correct results quite fast you won't get candy crush bling level oop i'm gonna turn this down with it but you will get something practical which is regularly all i want or all i need yeah this is a fair statement fair statement i added it to a quick and dirty dev tool so that i could so i could be dynamic with little cost i sparkled it on a personal project i want to know about sparkling how does one how does one sparkle sparkle it on for a time management tool to force it to send standard requests and i and i sold it to my not so good coder friend to make the team happier can we just take a moment and all recognize that we all have the not so good coder friend but we all love our not so good coder friend english is a second language confirmed yep that's me yeah yeah yeah hey hi it's me i know we all love we all love you mine personally is nightshade dude nightshade dude i really appreciate you nightshade dude i know that you're a great person but i would probably recommend htmx to you too also great mod nightshade dude great mod if at this point you're too afraid to ask but beyond a few months of hype and this hilarious twitter account by the way the the account is hilarious htmx has proven to be a valuable addition to my toolbox but i read again and again people wondering what use case would you find that it could be done a different way what the heck are those people laughing at drug memes for or drug memes using that stuff for first let's make it clear things up there is nothing hmix does that couldn't that you couldn't do in another way it's not htmx versus it's htmx also this is a fair statement this is actually a really good statement which is i mean you can build anything in react you can build the same thing since felt and you can pretty much build the same things in htmx as far as i can tell there's no hurdle that i have seen yet that can't be done like you could like you wouldn't really use react probably for a maps app for the google maps app i mean you could you could use it for all the chrome but you could also use htmx for all the chrome and then have the intense web component being the map itself or however you want to create that map right like there's no application that somehow too complicated or not complicated enough right you add the tool to the ones you can use depending on the situation yes it's funny to make jokes on obese client stacks complicated build workflows and so on but of course we use them too that's why it cracks us up oh while i'm a python expert i'm very comfortable with javascript and i use react and view for my clients what's more if you started web dev after 2015 it is hard to see how to do a site without anything other than client-side frameworks this is a great observation by the way i absolutely love this observation which is if you're not used to doing if if you've only ever lived in a world of frameworks or meta frameworks it's really hard to see that that's not the only way around it's kind of like picking up functional programming the first time there's something about doing functional programming that feels really confusing like i'm great with recursion not a problem i just don't reach for it as a way to solve all my problems and so when i start having to do that all of a sudden it changes like my perspective quite a bit and now i have to think in a much different way than i used to think right and so i think it's the same thing with htmx is that when you're used to object oriented getting tossed into a functional programming language would be hard it's a familiarity issue more than anything else because there's a way you solve problems that cannot be connected right like the way you do it and react cannot be done in htmx and if you try to make it that way which you can you can actually use react in htmx it just gets all effed up not the css tool i mean sassy hdmx is a good tech if you know how to wield it it's not going to change the destiny of humanity forever it does require the coder to think like php3 is a thing again but it has a lot of good things going for it sick bird man mostly it keeps the simple things simple that's pretty nice it does this is a great thing and most things you do i'm going to throw this out there web devs almost everything you do is simple you make it complicated i'm sorry i i know this hurts i know you don't want to hear it but most things are simple we've just made them really complicated and some complicated things we've made really simple so you know there's a trade-off i would say that web dev is in a much different area it's hard for me to call it simpler but it's hard for me to call it more complicated it's different there's a lot of niceties and there's a lot of horribles anyways about the use cases before we start with the use cases again i must insist there is nothing in those that could be made in another way you may think oh but i would have just you know you'd probably be right it's not about the best way it is it never is in engineering it's all about what was right for me and my context while reading them i i mean i mostly agree with the statement but at some point it does make a difference you know i i've gone to some recent websites that are selling like a very simple tool and to load the main page is 350 kb of gzipped javascript right like that's a lot for a simple tool it was literally a login and some payment things and it was pretty and it was 350 kb gzipped right that's like megabytes of javascript code that becomes tens of megabytes of javascript you know what i mean and so it is a little bit surprising right whereas like you could get an entire thing sent down you could get the ex same thing with the same functionality sent down by htmx in 40kb 30k 20 kb it's just different and it loads differently and it feels different to the end user and so there is a point in which going all in on these big tools can actually have adverse effects especially on phones not everybody's gonna be sitting around with the i have the latest pixel some people some people are dumb enough to spend 1700 on a phone i'm not gonna do that not gonna do it even if netflix could buy it for me i'm still not doing it they bought this one for me anyways use case one a quick and dirty dev tool working for a main client we started to have quite the sized core lib dedicated to tricky calculations one of my colleagues told me it would be nice if on the top of the unit test we could have a ui with all the params so that an intern could play chaos monkey on it and see what she finds since they already had fast api in their requirements files a web ui made sense but i started to think that if i created a new endpoint for this then i needed to make the whole logic in js which means adding js to the project that has been a pure headless python core it seemed unnecessary so i just went with regular html form plus table with a ginger template it's that it's the it's simple fast to make and as a bonus i could make the form emit a get request so that the intern could send us the url and we could just copy and paste it into or to replicate any bug on our side that's nice i like that it was easy to code uncomplicated nice i agree at some point though the intern was annoyed she had to click the button to see the new results she was used to apps that were automatically updating with her phone after all okay fair a bit of js and viola add event listener submits the form on change and we're happy but again the intern was not pleased changing one field would reload the page but dismiss her focus on the inputs okay i was not gonna do the full collection of the fields why are you guys all saying that why you guys am i just saying it wrong we are now a musicians we're musicians just it just accept the musicianness okay not to mention it would seem crafting the url manually to push it into the history especially given the delta of money the client spent on the intern versus me so as a good lazy boy i fired htmx the form now makes an invisible get request on the submit fetch is a very same page extracts the table replaces the old one and updates the url dynamically all of that for typing three lines of code dude hx select is so good look at this i knew it hx select oh dude i love hx select do you can also just go boost you can boost it if you're fine replacing everything but if you don't want to lose anything in the forums and you want to reload the entire page and just have it perfectly deep linked so you literally never have to think about anything this totally works this grabs the table the first take the highest parent table out of the response it targets the current the the whatever the the table is that it finds it does the get request on itself it replaces the url with itself and it triggers on change and it swaps the outer html of the table so the table replaces the table like dude this is sweet this is exactly it that's all you need as a bonus i said goodbye to my loan ad event listener roses are red my client is happy now i can play baldur's gate 3. that was a beautiful poem i'm gonna i'm literally gonna try that out on my wife tonight see if i can get lucky because i think that that is obviously the poem of the century i started a new habit anytime i spend playing games or watching tv shows i had to spend an equivalent time being physically active what a great the more i think about this this is great what a great kind of requirement for yourself given give and i practice some sports almost every day that mostly result in less screen time or me being too exhausted to go grab a drink with my friends but tracking this is annoying so i made what all good devs would do i spent hours writing an app to save myself a few seconds absolutely absolutely again since it's just for me i have zero incentive to spend a lot of time making a killer ui but one of the one button to consume a potato time one button to top to top it up that's not rocket science and apart from a few lines of alpine.js to make a timer which appears wonderfully with hdmax i could go full server side and get this this is wonderful you i mean yeah you can you could totally have the timer you don't even need the timer for with alpine jx or alpine.js you literally could just use a the world's simplest web component this is like the world's simplest web component and you're done it's like five lines of javascript look at that that's this is great this is great right here everything was working fine but i had to send a post request for everything and that bothered me it can it's completely pedantic but having actions in my urls instead of using the correct http verbs just doesn't feel right did i need htmx no it worked did i want htmx yeah i i like i like this guy i like i like this guy this guy is fantastic button button do a little put there you go look at that he's dude he's hitting the correct http verb right here i just want the effing put i want to update the thing i want to patch it and that's it now i have a real organic delete put request and and i feel good plus my django view blocks are beautifully segregated use case three working with my best nemesis i have a very old friend and we work on side projects all the time he is a terrible programmer and he hates it but but he loves the results in the same way some people hate running but feel but like feeling in shape hi so he made some personal websites and basically live off them okay it clearly does not sound like a bad programmer just made a couple personal websites and and and and then made a living off of it oh okay yeah so he sounds terrible he sounds like he really doesn't know what he's doing working with him is a blessing and a curse once one let's see on on one side his coat is dirty he has refused to learn get basics for 10 years and just asked me every time what to do and will blindly copy paste in a frenzy everything that comes out of stack overflow and chat cpt until something works that is annoying on the other hand he's incredibly hard working more than i'll ever be and has a great sense of pragmatism and a lot of experimental experience with b2c customers he keeps me grounded we make a great team i clean up his mess and he keeps the project on track plus it's just fun to be together it feels like being 14 year old again i love this there's this person named jj prum prum the micro king and me and him have started companies together and also of sandroston and i'd also do had enough those are like my my three best buddies of my lifetime and man i have a potential offer to go work with two out of three of them and get paid for it but it requires me to leave netflix and a man i've thought about that over and over again because it's just like i love it would be so sweet to work with them again you know what i mean it would be so sweet to work with them you know and so now i have to think about that i have to think about that you know i'm going to think about that let us decide no you guys are terrible at that decide based on chad paul i i abide by chat's results i'd be able to stream the same and make youtube videos more anyways but forgot about let's see but forget about a fancy stack every new project has an occasion not to add something but to remove something i use do it to abstract the entire project management for him i keep finding ways to make the client side simpler and simpler for him and he usually makes the ui we just moved to tailwind and he loves it i love tailwind too it's for us stupid people the templates are huge walls of infinite class blocks repeated by ad nauseam feels fine to me but having to make an api call every time he needs some data not so much he's not comfortable with asynchronous workflows the promise api is still a vague mystery after a decade of it plus depending on the framework where to put the ajax calls don't mention hooks he just came out of jquery we're really good at coming to the right decisions with very little consideration and incomplete data let us decide so i write the client i wrap it up in an object and i place it in viewer react component and we are bnf again bacchus noriform oh best nemesis friends that's not okay i thought he was talking about some sort of compiler i was like what about what am i reading here everything is kind of like this project at this time no more i just went full hdmx he got the concept quickly and now he is autonomous on his side of the project meaning i can focus on other things he doesn't have to wonder at something if something is mounted what is the await or if he has to write account color account color or account color no more state management outside of the db one single routing for everything permission and sanity are checked once plus it works with flash django or fast api all the same something you can't say about sending back a decent json these are pretty good there is no real conclusion as you've noticed there is never a need for hdmx but i was satisfied with the results every time i chose to use it so see that's the problem about defining the word need right because i mean technically we don't need javascript you can write that in assembly right coding right now on twitch is writing a web server using assembly do you ever really need any form of abstraction the word need is a funny you know term right need implies that it is a must requirement it's like i mean technically you can write all the way down to assembly and so if something makes your life dramatically easy over over over and over again i would say that you can put it into the quote unquote needs category of programming that's kind of how i live my life like if i use a tool and i absolutely love it and i can build fast and well then that's my new tool that i i need for working right so when it comes to building a simple cli or a test application or something i love rust i think it's the best right when it comes to web servers i'm really starting to dig on go i'm really really liking go i think it go in htmx i just it just feels the best for me and now i'll probably change that at some point but right now i'm happy with it that's kind of where i let where i land right i just need electricity yeah so go templates are beautiful i didn't stop let's see i didn't stop to use react view axios i didn't stop using a vanilla.js or alpine i actually sometimes mix them with htmx i do not use htmx more and more or i do use hmx more and more because it produces fast acceptable results i do value the short feedback loop do you want to post subscribers what a great what a great article so it's okay so my only my only thing i really want to take away from this article it's just something i've seen a lot in general is that it almost there's kind of two worlds that exist in in programming there's those that sh that absolutely were just just don't make an opinion about something like this this piece is like the refusal of an opinion right i'm not gonna say it's better i'm not going to say it's worse i'm not going to say i need it i just say that i personally like it that's that that right and i think in today's world people like to hear opinions they would rather hear an opinion from someone who likes x and then hear an opinion from someone who loves loves why and then try to come up with their best version of it or they usually just listen to one person and then they think it's the best and then if you say anything on twitter they say you're an absolute ridiculous person have you ever built a real app the dhh builds apps you could even dream of and so i i i'm more of the fan of just like stating more of a like concrete this is what i like and this is why i like it and i you know as opposed to like not really leaving anything it's really important to master tools that allow you to do large jobs yourself so they can prototype efficiently hmx is a much better solution for a prototype of an nvp than a massive freaking react thing plus a bunch of back-end services yes you can run quick to to to v0 or to v1 you can run to v1 super quick and that's what i really like the name is the htm exogen