if you keep doing this one thing you will literally never learn code i am not exaggerating this thing right here is what makes or breaks your success there's a certain way you need to think about it the process of learning the code and becoming a software engineer if you actually want to get there and sadly most people simply don't understand this before my job as a software engineer i've had the privilege of experiencing a lot of different industries through my internships and the one commonality that i learned from all of these is that companies in any industry especially in tech look for one type of person and if you're doing this one thing you are not this type of person i get a lot of comments how do i fix this random error code in problem set 7 of cs50 and i obviously can't answer every single question so what could you as a person who's willing to learn things on their own do to find answers to these questions obviously i want you to leave comments but the point here is that a lot of these questions are questions that you could literally find out on your own if you literally just typed them on google it would even be faster and more efficient to you to type your error codes on google and figure out that way how to solve them so this one thing that every employer hates in their employees and is one thing that is preventing you from learning to code or learning any skill in general is expecting other people to do stuff for you that you could and should be doing yourself in other words what you need to do is educate yourself and it's very specifically in the domain of coding i want you to get into a habit any question you have whether it's an error code or how to learn x type the question on google it's literally easier and faster for you to find the information yourself than waiting for someone else or some person some particular person to give it to you because this is exactly the quality that employers look for in software engineers in any of my internships in any of my jobs the one quality that these employees you always look for is people who are self-seeking people who are able to find things out on their own and solve problems without needing someone else to just hand them the solution because a lot of the time in your job you'll be solving problems but literally no one in the organization might even know how to solve when you're getting paid for anything when you're trying to create value you are by definition solving very difficult problems solving problems that other people don't know how to solve because if other people knew how to solve them you wouldn't be needed now i know this video might come across the wrong way and i'm probably going to get some hate for this i just want to make this clear that i don't mean that you should never ask for help obviously when you're working as a team and anything like programming with like communities and all that kind of stuff other people and communities are there to help what you need to do is adopt this mindset of being naturally curious and before you're asking for help you try to exhaust all possibilities of finding the information yourself first this is also what i learned at mckinsey before you ask your manager your help you're always expected to first just come up with something just put something on the paper so that you've actually thought about it before you go and bother someone else with it and in the context of coding what you should do is when you have any problem and you feel like you're stuck literally write something down anything you can write down on your code file just put it there and it's so much easier for someone more experience to then iterate over that and pushing in the right direction so that way you'll come up with this very specific questions i tried this and i did this and i got this specific error how could i go about solving this this applies to asking help from your colleagues if you're working or from the internet if you're just going for yourself and this is so especially true in the tech field where people always say the difference between a junior software engineer and a senior software engineer is that the senior is better at googling things more effectively yes even googly things is a skill that you will get better at people are too lazy to try to find answers themselves become the type of person who always exhausts all the available resources to find answers before expecting other people to just give you the answer because one time they probably won't be able to okay rant over but with all that said here's answers to some of the most common questions i get how to get started learning to code pick a course and just start if you want some suggestions i've literally made so many videos about this but here you go you want to learn computer science i recommend you check out my free computer science notion template it's based on the open source society university curriculum that matches the curriculum of actual computer science degrees simply compiled from online resources subject or one of the first videos i made on this channel and one of the first courses you do there is going to be cs50 and if you're looking for just one introductory course on computer science cs50 is the best one you're unknown coding specifically that will obviously depend on the language if you want to learn python for a free option i recommend python for everybody we will be linked down below i've obviously done a whole bunch of different coding courses the coding courses that i mainly use myself nowadays are by zero to mastery zero to master is essentially a platform full of i think they have like thousands of hours of coding courses for simply one subscription so essentially instead of paying for a netflix subscription watching all these useless series and movies that are not helping you you can instead be investing that money into your coding education nowadays whenever i want a course on anything new if i'm wanting to learn hacking or javascript or blockchain development the first place i look is zero to mastering and try to see if they've already made a course on this because i've subscribed to the platform anyway and most of the time they do how do i get a job as a software engineer first learn to code by using a couple of these online resources then build a couple of portfolio projects that are really good then apply apply apply and that's it what projects should i build you should build projects that you actually want to build projects that solve a problem for you because those are the projects that you will actually be excited to do so therefore you'll be willing to put in effort to make them really good so i need a degree to get a job as a software engineer no you don't but to be completely honest that is not the only reason why people fail to learn the code when you're coding the absolute best way to get quality work done is to achieve the flow state and in order to do that it has been shown that listening to certain kind of relaxing music can be very helpful so that is why having high quality noise cancelling headphones is a critical part of any programmer's toolkit which is why i am super excited to talk about these brand new space a40 earbuds by soundcore which they've kindly provided to me to try out soundcore spaceliner brings you the ultimate industry-leading noise cancelling experience paired with ultra long battery life so you can enjoy the extra personal space you need to get work done wherever you go the space a40s reduce noise by up to 98 and they are sgs certified something that's really important to me with earbuds is long battery life because i hate it when my earbuds run out of battery when i'm at the gym or something and then i can't listen to anything that's why one of my personal favorite features with these was their ultra long 50 hour playtime which is almost two times longer than the competitor's average the space a40 also uses adaptive noise cancelling to automatically identify noise around you and select the ideal mode which makes the noise cancelling experience really high quality and super nice to use and not only that the soundcore space a40 is the first ever earbud to use double a live bracket providing you detailed rich sound and high-res wireless sound and what i've also loved about this while trying them out is that they're really small and easy to carry so thank you for soundcore for sponsoring this video and providing these to me to try out i've loved using them and i think you will too so a link to try them out will be on the first line of the description okay with that if you enjoyed this video leave a like down below if you enjoyed this video you might actually enjoy some of my other videos if you don't know who i am here's a story of how i learned to code in four months and got a job as a software engineer if you want to hear more about this free computer science degree thing you should watch this video right here which explains the whole thing with that let's keep coding enjoy the journey along the way and i'll see you next time