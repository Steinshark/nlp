how many five-letter words can you find where 
together they don't have any letters repeated   so for example you might have a squiz at 
a panel squeeze and panel both have five   unique letters each with no letters in common 
between the two words or if that panel was a rom   now we're up to three words could you do better 
don't put that chunk in the mixer it'll be salty   you don't have to make a story that's optional i 
got a little obsessed with this and the question   is could you find four or maybe five and all 
started because someone said a problem into the   podcast i do called a problem squared actually can 
we get the logo excellent so i do that with back   hill some of you may know back hill actually can 
we get a photo back in can we oh excellent right   so if you watch tv in the uk you might have 
seen back she's got a children's tv show called   make away takeaway so actually we can get that 
get the photo out perfect excellent so we were   sent a problem in by someone named daniel who said 
pretty much this although they framed it in terms   of wordle they said how many guesses can you have 
in wordle before you have to repeat letters and i   should make it very clear this is not going to 
help you with wordle this is not a video about   wordle strategy check out through blue one brown's 
video for that this was a wordle inspired question   and i got pretty obsessed this feels like it could 
plausibly be done there are 26 different letters   in the standard english alphabet and we really 
need well five words with five letters each 25   we'll have one spare and there are five vowels so 
if we're frugal with vowels and each word just has   one that should all work and i was like okay i 
think we can do this and while a lot of people   would approach a word puzzle by thinking about 
words trying to fit something together i thought   well hang on what if we just check all the words 
and by all the words i mean all the words we're   not actually all the words if by word you just 
mean a five character string of letters because   there are over 11 million sets of five letters 
making up a word most of them entirely nonsensical   and actually a lot of them having duplicate 
letters if we only have the ones with five unique   letters we're down to just over seven million and 
most of them don't make any sense whatsoever and   there's no nice simple way of working out which 
sets of five letters are a real english word   versus a made-up word and this you just download 
a giant list of all the words which is what i did   and i already had a list of 370 105 different 
words that's all of them well the meaningful   ones at least i had that from the typewriter 
video where i want to calculate which words   your finger would travel the greatest distance 
when typing them on a typewriter a lot of fun   so i took the same list i've removed all 
the words which didn't have five letters   which whittled us down to just fifteen thousand 
nine hundred and twenty words and some of those   had repeat letters we don't need those once 
they're gone we've only got 10 175 left and   some of those are anagrams we don't have to check 
rearrangements of the same letters if we're just   looking for unique sets of five letters and if 
you remove all the anagrams there are a mere 5977 real meaningful words which have five letters 
that are all different and will removed anagram   duplicates now we just got to check combinations 
of them and how many can there be a lot there are   a lot of combinations if you've got 5977 
words and you need to pick five at a time   5977 choose five is over 63 quadrillion it's a big 
old number and if we want to check all of them to   see if they have 25 distinct letters well let's 
say hypothetically we've got a computer that can   check a million every second that's still going 
to take over 2 000 years and i haven't got that   kind of time so we've got two options we can 
either get a more powerful computer or we can   be a bit more clever with how we're checking them 
i went for option b be a bit more clever and this   is always the problem when you're doing some kind 
of exhaustive search or check involving computers   you've got to be smart at reducing the number of 
combinations to check as well as being clever with   the amount of computing power you have available 
until the two meet in the middle and then you can   do it and this was the issue in the second world 
war when they're trying to crack the enigma code   alan turing was both doing very clever maths to 
reduce the combinations you had to check as well   as increasing the power of this new thing they 
just invented called the computer so i really   only had a laptop that i was prepared to run this 
on i could have you know got cloud server time or   more powerful computers or worked out so i could 
run it on more than one computer but i'm like   no no i want to run something on an old laptop 
so i can just leave it going i need to get the   combinations down so i can achieve that within my 
lifetime i decided to go for aggressive pruning by   which i mean cutting off the branching options 
as soon as possible so instead of going all the   way to the end of looking at every single possible 
combination of five words any combination of five   you can imagine it as starting with just a pair 
of two words and then you look at all the ways   to add three more so i checked every single pair 
of words to see if they had 10 unique letters and   if they didn't i could ignore any other sets that 
have those two words in them and pairs they're a   way fewer specifically three million two hundred 
and thirteen thousand six hundred and ninety six   pairs of words which each had 10 unique letters 
at this point i didn't remove the kind of two-word   anagram equivalent i kept all of those in and now 
all i had to do will take every pair of words that   had 10 unique letters compare it to every other 
pair of words that has 10 unique letters see if   between them they've got 20 unique letters and if 
they do see if i can find another word to give us   five more now i could have been more clever 
because there are still loads of duplicates   in the way i was doing it and i could have kept 
trying to hone the code make it more efficient but   at this point i'm like look i've just got to set 
the code running and move on to other projects so   i did i just set the code going it ran for over a 
month sat there churning away it's like i'm about   to say it's like a less useful version of bitcoin 
but you be the judge it's sat there churned away   and then one day it finished and it came back with 
some interesting results if you're curious how the   code actually worked i'll put it all on github you 
can have a look it could be way better don't send   me ways i could have improved it i know i could 
have improved it the point is i knew i could just   wait for it to finish and here's what it found my 
coat had found 538 sets of five words that between   them had 25 unique letters i was super impressed 
and then i realized 470 of them we're talking 87.3   percent of all successful sets of five words had 
one word in common they all contained this word   fldx t pronounced fluid extract apparently and 
it seems my original list of words claimed that   was a word i thought people might be a bit upset 
in fact when i mentioned this in the podcast back   my co-host was very upset actually can we get that 
photo of back when i told her fluid extractors oh   there it is right yeah she looked she was so 
angry she put in a cardigan right so okay we   can take that out now there we go thank you right 
so back beck was unimpressed and i figured a lot   of other people would be as well the problem is i 
had initially cast my word net very wide and that   list of words i used is very very generous with 
its definition of what a word is it basically   defines a word as any string of characters that 
someone's likely to use or type at some point   i'll link to the database below if you want 
to check it out it's useful for things like   filling like auto filling in auto completing 
things from people are typing them and what we   actually call a word is a a stricter definition 
whereas this is just strings of letters people   might use and if you google fluid extract fld 
xt there's over seven thousand or at least there   were over seven thousand responses when i did 
this and i thought you know what i could use   google searches as a way to work out which 
are the most like a word so i wrote little   cheeky script that would take every single word 
from all the responses i had out of my original   code google it and then record how many responses 
popped up when you searched for that word i could   also use this google search record the number 
of results technique to deal with the anagram   problem because some of the solutions i had had 
words in them where i'd excluded an anagram that   had the same letters and that might be a better 
word so i also automatically googled every single   anagram of every word from every solution and then 
pick the one with the highest number of google   results to include that in the official charts 
i then removed all the ones with fluid extract   because apparently that's just a step too far of 
the remaining 68 i could then rank them by how   much a word google thought they were and here it 
is first word is vibex and you're already thinking   two vows oh that's a bold start followed by 
glyph there you are no vowels all averages   out then months dwarf and jocks and this was the 
top ranking one because months which is a word   about a type of metal i think that only had 740 
000 results on a google search but that was the   largest minimum value from all the results i 
got but that didn't feel a little bit arbitrary   instead of dwarf jocks you actually could 
have had wax fjord there you are fjord pretty   funny word be pleased with that and there were 
other options so you could have x p w y that's   pronounced expressway there you are sure for 
expressway hdqrs headquarters there's a lot   of abbreviations and then either flack and jumbo 
or flock and jumper i you can see how that works   in fact i would almost consider those that's the 
same solution just with a slight tweet anyways   people are going to hate this no one's going to 
like expressway spelled e-x-p-w-y i need a way i   can find which of my solutions are unambiguously 
valid solutions so no one can argue with me and   then i realized that the arbitrator of word 
truth was right in front of me the whole time   it's wordle it turns out in the original version 
of wordle so before the new york times bought   it and updated it the original code just had the 
list of acceptable words baked in actually there   were two lists one was all the answer words and 
the other one was all the acceptable guess words   that you could use to get to the answers but you 
combined them and you get the 12 972 acceptable   words in a game of wordle so i realized this 
was the definitive list of what is a word that   i needed the whole time so i took all 538 of the 
results i got i compared each one to the official   wordle word list to see how many of the five words 
from each one matched five of my solutions had   zero words in common with the word or list here 
they are these are the absolute worst there were   then 85 that had a single word in common 210 that 
had had two words in common 193 had three words   in common 44 had four words in common but when it 
came to five words in common a complete match all   five words validated by the almighty wordle there 
was one one single solution five wordal words that   use 25 unique characters and they are fjord good 
old fjord thank goodness gucks now gucks as in   ah there's some guck on this oh there's some 
guck on that wait these are different gucks   gucks nymph from both biology and greek mythology 
you've also got vibex yeah vibex is back something   to do with veins real word according to wordle and 
biologists and finally waltz and what a fantastic   waltz we have indeed been on the missing letter 
q there you are all 25 letters q left over so   there you are that is the only set of five wordal 
words that contain 25 unique letters i feel like   we've all achieved something here today foreign 
future matt here so the podcast episode went out   yesterday and within 24 hours someone says they've 
written code which will do what took my computer   a month in under a day so let's check it out 
uh they put it on gitlab i will link to this   below if you want to have a look at it they've 
got all the files and a bit of a description   down here including and this is i think one of the 
greatest disses you're ever going to see on gitlab   according to parker executing parker's algorithm 
on a laptop took about a month this appeared to   the author as optimizable in other words matt's 
an idiot i can do a lot better so i've already   downloaded all of their code let's go find that 
and how did they do it well in their tweet here   benjamin percent i think that's correct they 
said they did 22 minutes oh my goodness using   graph theory so what they actually did was make 
a network of every five letter word with five   unique letters linked together the ones that 
have no letters in common and look for complete   sub graphs so five of them that link to all 
of the four other ones in that subgraph and   if you have a look at the code that i've loaded 
up here there's two files one that generates the   graph and then another one that then searches 
for these sub graphs so you know what i'm going   to run it and we'll see actually you know what 
i'm going to add in i'm going to import time   and then i'm going to uh print the time so we 
can see how long this actually takes so i've put   printing what the current time is at the top and 
then people are going to yell at me i know you're   not supposed to time code this way i'm going to 
work that at the bottom okay what i'm going   to do oh here we go so there they've specified the 
file i'm going to put in the complete path i don't   think it's a security risk to show that let's 
you know i'm going to clear that message and try   again oh it's often racing it's building 
neighborhoods aren't we all aren't we all done it's writing to the output and it's 
finished let's see how long it took don't   judge me i pasted the times into excel 22 and a 
half seconds okay so that's our running time so   far now i'm gonna do is i'm going to clear 
the output from that we're going to switch   over to the actual file that does the business 
i'm going to add in again i'm going to import   time because i want to make sure that this is 
as fast as everyone's claiming it's gonna be   there we are that goes top and bottom okay 
so here we go oh it's loading the graph this will take long you know what i'm gonna head   out i'll come back later and 
we'll see how long this took okay so i'm back i don't worry i just 
went to the hotel bar i'm on the road at   the moment and it's evening time here don't be 
fooled by how sunny it is and it's done 800 131   that's more like on let's open them up 
and have a look okay i say to matt is a   csv file that i've opened here in excel looks 
like it's concatenated them all together but if   you pick on them they're actually they're 
separated by tabs and they're all here   and it occurs to me the reason why there are more 
because i only had like 528 i think the reason   there's more is they've included all the anagrams 
so i stripped out anagrams the way they've done it   they must put anagrams in and the fact that 
it's roughly one and a half times the size   matches up with the average number of anagrams i 
had before so let's have a look at how long that   took oh my goodness well let's let's add them 
all up for completeness sake and there we go 900 seconds oh that's gonna be a really really 
neat number of minutes oh my goodness 15 minutes   on the nose to find 831 so actually i think 
that ratio is about right they found 831 i   found 538 and so that's let's have a look 
it's going to be about 40 something percent extra   54 okay i reckon that's just the anagrams 
i'll double check that later to make sure   they didn't find any that i 
didn't because i was exhaustive   so there you go well done benjamin you were 
able to do what took me 32 days of computing time   in 15 minutes that's less than one thirtieth of 
a day i'm glad i interrupted my trip for this   back to you past matt thank you so much for 
watching the video i'll link to the word list   as well as my code below i know it's terrible 
code you don't have to tell me and finally a   huge thanks to everyone who listens to a problem 
squared and my co-host beck hill can we get that   picture back back oh we can there we go so 
actually can we get a different one which is   i thought we had a cardi for angry back but 
she's always wearing the same thing so just while   we're waiting for the people to fight they found 
it there it is wow actually can we get that but   looking more pensive taking one out for pensive 
one so if you go to a problem squared dot that was   quick.com you could now go back to the happy 
one let's hit the happy one again you can   pose problems for the podcast that's good where 
we all bet is still in the different different   outfit good good we have a bigger library of back 
photos than i thought so you can pose problems   that we will try to answer all solutions to things 
we'll try to answer but if you enjoy listening   to podcasts please do check out our problem 
squared with me and my co-host back hill wow