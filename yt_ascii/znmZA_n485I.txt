okay so jonathan blow made this man quit his job for real all right let's listen to this what would i say to someone starting their programming career at a web company using javascript okay i'm very serious about this okay so every single person who is listening has pretty much just got called out and is ready to get stomped on okay so everybody are you ready are you ready find a better job immediate get wrecked imately where you are not using javascript because this will affect your long-term development as a programmer the beginning of your career when you're young and have a lot of energy is very important you need to use it effectively because it'll determine your trajectory for the rest of your life okay if i actually really liked this take i know javascript is recommended as the beginner's language but there is something very valuable about struggling i remember my first couple years were spent on robots and there was a lot of struggle it's where i learned and loved printf debugging it's where i've i developed a lot of the ways i do things now is because of it there's definitely some very good parts to this that he's absolutely right on your desire and your ability to push through difficult things is definitely going to be proportional to how excited you are and people typically are more excited when they're young just real talk you're just you genuinely are more excited when you're young than when you're older not saying that's always true for everybody but i think we can agree that that's generally true if you start a career at a company that gives you mediocre things to do you're gna turn yourself into a mediocre web programmer that's just what happens okay you need to go outside that do anything go work at spacex go intern at spacex and bring people [ __ ] coffee that'll be better for your career long term than doing web development at a web company okay that is a bold ass statement i want to think about that more because i think i i i mean generally i understand the logic which is the more challenging and the more difficult the things you have to solve on the daily the more you're going to rise to the occasion i think that makes sense spacex is known for being intensely difficult so i i get the i get the idea like i'm i'm definitely not dunking on his idea now i know some people hate that they just hate the elon so they can't they can't even they can't hear the concept right they hear the word elon and they're just like like i don't care and so i can i can i'm going try to eat the fish and spit the bones here it's just a different way of saying that you should always be the dumbest person in the room sort of sort of the that's a very hard i've never liked that phrase either i've never liked the phrase like don't be the smartest person in the room or be the dumbest person in the room or whatever because inevitably it leads to all rooms being empty meaning that people will constantly use like how often are you if you are the smartest person in the room should you quit well the problem is is that i mean think about all the you know you the the problem with that statement is that no place could ever survive purely on that mentality right once you become the best you just have to move on now i just typically am just the dumbest by just by the sheer dent of who i am nonetheless jonathan blow you can't really make fun of him for using windows he also was using he was a heavy heavy unix man in the 80s and early 90s so i don't i don't think i don't think you're going to win that argument per se just saying again my rant about impostor syndrome is it's not so there is a real psychological effect called impostor syndrome but that's not what everybody on the internet is talking about right o i cannot wait for this i cannot wait for twitter twitter shambles here we go people twitter shames you're not even good enough to have impostor syndrome people on the internet seized that name and used it inappropriately for their accurate feeling that they don't know what they're doing at their job okay did you just hear what he just said the accurate feeling of you not knowing what you're doing because you are accurately un because you are not act you're not an impostor you are just not qualified no oh no diagnosis skill issue syndrome okay most people are bad at their job and don't know what they're doing that's not a syndrome that's an accurate depiction of the situation and so to pretend it's not true people want to pretend it's not true that they're bad at their job they want to pretend that they're actually good and it's just a mental issue it's just confidence or something right no it's just you're if you're bad at your job and your brain is telling you you're bad at your job then just pay attention to that and try to figure out how to get better the more i actually really did like that take that that was honestly a really great take if you think you're bad at your job you should be trying to analyze which parts you're bad at and how to get better right like that's actually that's that's like just genuinely great advice that's genuinely good ass advice go crack open a book get better and now i mean it's it's shockingly shockingly great the inverse of that also is that someone believed in you enough to hire you to set you in that seat despite knowing your experience meaning that they think you can do it so if you just put those two things together you know what i mean i'm just saying you should you should be able to do this time you spend working in that space of your approximation to the thing that you want the more time time you you spend becoming an expert in the field of this specific application that you're making the better you get at that subfield of programming and the better you get at that subfield the better you're decision making about technical issues in that field is going to be so if you make i do think that this completely goes away when we're talking about front-end frameworks because they keep inventing them so they just keep getting better at creating more and more abstraction so i'm not sure if that that is always true but i guess it is true they are better at creating abstractions but is it actually better i don't know hard decisions later they will be made better both by a more skilled person and with more contextual information than if you make those hard decisions early on okay so deferring these kind of decisions is actually important for good craftsmanship in some cases it sounds paradoxical because you would think good craftsmanship is just you see a problem and you like relentlessly solve it whenever you see one but i don't find it to work that way for new program i actually really i actually really like that take a whole bunch there is something about just time in the saddle that is just one of the most important parts of your day job just seeing the same problem four times you can do a really really really really good job your fourth time and it also kind of goes to show that you should write software in such a way that you have to kind of plan for its longevity like if you know it's not going to be a super long piece of software or you know you're going to have time to kind of rethink some of your assumptions and then it's better to get the speed to get the experience to understand what you're building than it is to just try to solve it correct the first time you know there's definitely there's definitely like there's definitely a a gambit you have to play here gramers what would i broadly say about choosing a career path in programming the same thing i always say not time in seattle time in in the saddle okay you don't want to spend any time in seattle okay you're going to get mugged you're going to die which is be careful what you choose especially when you're very young because when you're young it's the time when you're really learning and the time when you're still defining yourself i mean you're always still defining yourself but when you're young you're especially doing that because you have less history behind you and so if you go somewhere mediocre and you learn from people who are doing mediocre work you're going to be defining yourself as someone who doesn't do things that are particularly good or particularly special that's just reality people don't like it when i say that that way but that just is what it is that's what happens if you're lucky you can break yourself out of that later but better never to be in that situation so choose where you work and who you work with very carefully because there hasn't been selection that's very very good piece of advice right there honestly i actually said no to a masters because i did not respect the person who was giving me masters at a full ride free everything and i said no and the reason was exactly that which was that no matter what you become like who you spend your time with and so i i i wanted to be very careful about that and so i am careful about who i spend my time with and that's one of those things because no matter what no matter how much you no matter how much you you don't want it to be true you will be like the people you surround yourself with that's not true what's not true you don't ever become anything like you don't become like the people you surround yourself with not trill i am smarter than aristotle and solomon and everybody else behind me who's ever existed who's written about this you can decide good luck good luck with that one it's your decision yeah again good luck with that one good luck with that one way to fight against like just collective human and wisdom for for 3,000 years plus in writing yeah don't worry i'm better than that one this is what we refer to as a skill issue good luck sten good luck pressure on programming culture whether or not you believe me about whether the current culture is right or not you could at least expect that there's not that much reason for it to be right there's like a very mild constraint that your program does kind of have to run and that's a reality check but that's getting looser all the time anyway like look at how many more and more programmers are hired just to make a simple program run now right like people people spend years at web companies working on individual web pages that are about the complexity of something i would program in basic when i was in high school in like a i mean this is one of the problems of abstractions we we've we've tried to make everything abstract everything fall into these various patterns and we just don't do the obvious thing which is the straightforward thing which is just build the actual thing instead of building all these abstractions around it like you don't have to have a generalized everything sometimes you can just build the thing couple weeks or a week or something right it's just crazy at this point i think it's still possible to pivot later oh we're back we're back here okay we're back here this whatever this graphic is he has some spicy takes on whatever this graphic is on in life to try and pursue what you feel is your true passion while taking more financially stable choice in the present no i think people tell themselves all the time they're going to do that and then they just age into their financially stable choice that's just what happens i think i think either you're willing to take risks or you're not and your propensity for taking risks will only be reduced as you age you'll never this is very true you know it's not like you get 10 years older and feel like way more radical than you did when you were 23 that's not how that works okay really doesn't when you're 43 you'll have way way more reasons to be conservative than when you were 23 so if you don't learn to take risks now you will not do it later if you have that's that's also very good advice very few people are different than that and there's always going to be a person that's like oh i'm way i'm way more risk taking than i was when i was 23 now that i'm 43 but typically as you get older you get you get more and more kind of you you you you think about your choices and maybe maybe it's not even risk-taking is the right term maybe you're just more wise to see that some risks aren't worth taking right some risks as you get older you'll go oh yeah yeah that that doesn't that just doesn't make any sense i'm better and that's wisdom i mean that's just generally wisdom right wisdom is not the ability to solve a tough problem but knowing which tough problem to solve that's like an easy way to state it and so like there's always a tough problem there's always a risk you can take but which risk is the right risk to take and obviously having kids and family and other financial responsibilities you know you got to think a little bit more about it have money of any magnitude and you have a theory about how to do something productive then you should invest that money in your own theory because it i mean if you believe it has a good chance of being right because you're most in control of that and there are fewest middlemen skimming off of that right so the highest return comes from you investing that money in [music] your own idea so all these things like putting it in an index fund or you know a mutual fund or whatever or bonds that's all he forgot housing for if you don't have an idea how to make any money which is fine for people who don't want to have an idea or don't want to take any risks but if you do there are better things to do the people who i mean that's not terribly bad advice that's fine advice if you don't if you don't want to take the risk yourself and you'd rather try to put it into something that's more stable and and short there's there's different investments for each person index funds are for boomers yeah i mean i get that people put their money into various types of funds each fund has a different level in it but he is right like if you want the greatest potential for every dollar you put in it is like investing in yourself to create something that you believe is better than everybody else right like if you believe you can create the greatest version of twitter whatever that version is right i know there's always a new version of twitter that's killing off twitter twitter's dying this week it's going under maston's gonna get it right i get it but if you think you got that best one ever it is better it is better for the potential now the realization is where it all goes wrong right that's where it all goes wrong you might not realize anything and lose all your money i realized negative dollars when i did my last start up potential huge realization negative it hurt do stuff that nobody else was doing because the other people talk themselves out of doing the thing right that's the secret that you have to know everybody is talking themselves out of success all the time and i'm not trying to sound too self-help guru about that because selfhelp people give me the creepies but it's true agree with everything people talk themselves out of success every day it's weird like why would human beings do that but they do it once you learn to see it you see it all the time all right but you need to stand out from i like that i like that last one there's a typical phrase that i think is one of my favorite phrases i've ever heard which is seizing defeat from the clutches of victory like i i i do see this pretty regularly and kids are just terrible at that they'll be doing something right and then just like can't help but to start doing the wrong thing you're like you got it man just slow down just don't do it it's just like it just you can't even help it you can't even help it you just watch it the rust modotto it's the rust model rust literally has everything to do the right thing they just got to just what are you doing what are what are you doing foundation how did you create the craziest the the just the craziest setup like what are they doing it's wild thank you other people in order to really succeed at a lot of things and people are afraid of standing out from other people because when you stand out from the herd you get taken down by a mountain lion or whatever right so people have strong resistance to that certain people other people don't right people with high risk tolerance don't have those aversions to the same degree and so you might be doing that i don't know i don't know you i don't know what your personality is like but you might be doing that you might be just looking for ways to not succeed while thinking that you tried your hardest that is definitely a thing that people do for me me there's not that much question that i'm going to finish the things that i do because i've learned the secret of that i should probably pay attention to this section everybody pay attention finishing the things you start here we go and the secret of that is you just do the stuff that you say you're going to do it literally is the secret there is only one way to do the things you're supposed to do is by by doing the things you said you were going to do like that's honestly that is that is as good of advice as you'll ever receive if you think that there's some magic bullet to make you more likely to s like to finish a project sorry the answer is just do it it's really not hard but most people don't do it right okay this is the sad fact right most people are bad at programming most people who are good at programming are really busy they're not usually the people giving you advice about how to program by sturgeon's law almost all advice you will see on the internet about how to program is bad so i mean if you have absolutely no idea how to program then i guess you go on the internet and you look look for a little bit like enough to get traction but if you know how to program a little bit you probably know better than the average advice on the internet all right so what you need to then do is get better so that you have enough judgment capability to sift the good advice apart from the bad advice and the only way to do that is to program i really i did i did actually really like that i maybe maybe you didn't maybe you didn't catch that one which is someone who is he started off by saying someone who's good at programming is really busy and then goes into advice and what he was saying is that when you're listening to people who are regularly giving out tons of free programming advice and all this you are listening to people that aren't busy which means by his definition there you might not be listening to the best advice that's pretty good it's a it's a bit of a funny paradox which means that whenever you're getting like how often do you get code reviews and the people that seem to be the most active on code reviews oh [music] uhoh uhoh i don't know i mean it's just it's an interesting kind of paradox it's a it's an interesting problem anyways you're not really the best since you're here with us absolutely i'm not the best how do you level up as a programmer who's been primarily working with web framework stop doing web programming web programming is bad it will make you a bad programmer stop it work on other things in other domains that is step number one i think that's good advice it's like saying how do i become a better athlete when what i do is i sit around with all the guys on the couch with the bags of cheetos and we practice throwing the cheetos into each other's bowl which is kind of like playing basketball and it's like no just play basketball that's that's funny okay i like that i like that that that the analogy pretty funny but i like that i actually like i generally i generally like that whole thing beer pong is a real sport is it i get this [ __ ] all the time how do i get better at judo do more judo dude it the answer is almost always time in the saddle anytime you hear someone how do i get better at x they're almost never asking you to say the simplest an obvious answer which is just do the thing that's how you get better okay because yes there are some things that you can't quite do that with like golf you need to have someone show you the right way to do it then you go do the right way 10,000 times like that's just how it works is that you have to have some hint as to how to do better and then you just do it constantly over and over again every day always and that is actually what i'm going to go do right now because i have a very fantastic project that needs some wrangling and i would like to do some wrangling