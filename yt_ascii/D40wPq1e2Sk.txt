30 years since the birth of the world wide web i believe it so that would if it reassure me that we are now in 2021 so therefore we must be talking about 1991. that was a weird era i mean in my pronouncement so far i think we've got to the stage of the mid-80s where you had macintoshes becoming available you had other workstations beginning to become available from people like sun and apollo domain i think it was something like that so things were moving on but yet weirdly the world wide web which came after the internet remember is basically how should these internet capabilities be harnessed and packaged to be shown and cameraman friendly so the ordinary mortals can do it you know and it was not obvious in those early days i seem to recall there were information services when they're like archie waze wide area information systems people were really trying to find out well if we do have interconnected networks on computers how do you know who's got what and where everything is and i think the idea about ways was making basically catalogues of what's where and all this kind of thing but i think to be fair to him berners-lee's great achievement was being able to think out of the box perhaps it was the fact that he was trained as a scientist and not as a computer scientist and i don't know that he could think outside the box but basically the whole thing about you know the http and the internet protocol and all this kind of stuff really he managed to work out pretty something pretty robust about how this would work in the very early days i think we touched before you know in the fact that the gap between something becoming vaguely possible and something becoming commonplace could be anything up to 10 years did we once agree and here's a classic example of it i mean in 1991 yes i was very slightly aware of it but i didn't see it going to the internet such as it wasn't any development so i didn't see it as being massively essential well of course we didn't actually have the internet so the news wasn't traveling you had to read about it somewhere yeah in a print or some kind of mail shop yes that's right in fact my very earliest usages of the web when it became available were for really boring things like working out that so-and-so had got a set of files that implemented something on another unix machine so wow we didn't necessarily have to make a magnetic tape or burn a cd or whatever we could actually go to that site not just to pick up a bit of email because that was fairly straightforward but also to actually with permission download a whole suite of files what about photos then my memory about early attempts to download photos down an early web thing i mean honestly but my memory is of being at university and a friend of mine going on bbs's bulletin board systems yes and this was after the worldwide web existed but we had some sort of fractured connection to the web through a bbs yes and yeah occasionally you might be sent some photos and it took an age to download them and by the time they downloaded were they what you wanted in the first place possibly not yeah do you go off and spend another several minutes waiting for the next one to download yes i think this is where we would benefit if people wanted to say more on this from having got julian onions as part of the computer file team as it were because he was he was with me i think as i remember in that first phase of his career at nottingham i think he was with me till the early 90s and he would be pretty sound on which machine was it that first had a web browser on it capable of even visiting another site let alone doing anything serious the ability to actually have what should we say interactive video material made available at ultra slow speeds over the web may have been in the early to mid 90s among the ultra keen people who could just about bear getting it to work but how long does it take to become commonplace the answer as ever is 10 years my major concern at the time late 80s early 90s exactly this era for me was a transition from postscript to pdf now we've done videos on certain aspects of this but i think perhaps what i haven't explained about my great adventures in this regard was that in the middle 1980s and with the development and announcement of postscript basically as a graphics language available on macintosh's and notoriously available by having a laser printer running that language requiring enormous amounts of memory for the time costing a fortune it couldn't be got any cheaper than seven thousand dollars but it was touch and go i mean the hardware was only just fast enough to render that page at that time what struck me at the time and i was very much in the era of knowing that my future in some sense would lie in documents digital documents electronic publishing i thought you know there is something about this language because of course postscript is turing complete it's a weird language remember it works on a stack you overtly program in reverse polish you don't say a plus b or even plus a b you say a b plus and in a much more verbose way that is the way postgrit works on top of it being an excellent 2d graphics language moving beyond what most printers would have regarded as the toy of the laser printer people began to ask would it be possible to put this postscript language on real typesetters yes it would and a bit bemused i think by the runaway success of the apple laserwriter yes it was a liner type that took the initiative of saying yes to an idea internally about how do we try and migrate postscript onto a real typesetter because i've talked about my adventures with the 202 type center but it was not post group based but they tried one out just as an idea and people said oh that's wonderful we want it don't matter about the cost too much but you'll have to get it down quite a lot from that if you want to sell lots and lots of them so in the end then that convinced me that just in my narrow world of journal publication i wanted to create an electronic document learned journal which i did didn't run for very long because the electronic documents learned conference was far more popular than the journal so we started off with electronic publishing but then gradually it morphed into being a vehicle for publishing the proceedings of the document engineering symposium as it were and it's gone to great guns from there but anyway i was messing about then at an early stage with doing proceedings for conferences all in postscript and thinking well this is good because you're actually archiving a program and this could run you know although the hardware will be very different and maybe they're emulating a layer on top of it there will always be a way you can write an interpreter for postscript so here's my electronic archive that is potentially machine independent yes of course printers archived but they always archived on the basis that the world would be ruled totally by you know monotype and liner type and they are in charge and what they say goes and i was treated like a pariah for saying i'm sorry it's not going to be like that it's all about computer graphics and it's computing companies that are going to win out of this not just purely graphic type set of companies and i was right but nobody would listen to me at the time so yes this is perhaps another anecdote of how i met john warnock because people ask me and say well how did adobe get to know about your conviction that postscript would be a good archiving mechanism and the answer was that i was working with john wiley uk the publishers journal publishers at the time and suddenly my contact at wiley's down on the south coast got a dear mark behind that was a name we understand from our contacts that you are considering doing a future journal related to electronic publishing and that it might be under consideration as to whether to use postscript as the typesetting language and as the archival names would you care to join me and my colleague dr chuck geshke for tea in london at the park lane hotel i think it was signed your sincerely john warnock the two co-founders of adobe so mark rang me up in great excitement said well you know this madcap idea of yours of using the most expensive type setting software solution seems to at least have got the big boys interested and yes it was absolutely hilarious i mean john wasn't is a good friend as a result of this largely because it was clear he and chuck were such good friends and so much singing from the same hymn sheet there was nothing put on about it they just said we're delighted you're doing this and we'll give you every help obviously you know i think at the end of the talk they did indicate that there were works in progress that might come up with a sort of version of postscript that was much more suited to doing electronic documents i think the feeling was well postscript's wonderful but it is turing completion in a sense it's too powerful there is nothing in postscript to say here is my code for rendering this page it will be beautiful but tell you what just to annoy you all before i do this i'm going to use postscript to calculate ackermann 4-2 which was we all know takes 27 quadrillion years or even a command 3-mark 1 which might take 15 minutes of course you wouldn't do that but somebody malevolent might do that to you so in a sense postscript being turing complete was perhaps a bit too powerful for something that only needed a declarative statement of i want this to happen exactly this i will leave the implementation of it to you now in a way it rang bells when the web became available because here was yet another declarative solution but coming from a slightly different direction so this adobe thing which was eventually revealed to me as pdf and the other declarative solution which was not as how should we say dot for dot accurate at the time as per script i saw them very much as being complementary you know if you want to ultra super vogue fashion magazines electronically over the web yes it's going to be pdf if you just want some pretty decent graphics although it's developed a lot worldwide web but using a declarative model of the html language where i think as we've discussed the difference between an imperative language that can do ackerman's function and a declarative one that can't is that one can this during complete that can do anything needs to be able to ask for more memory and get it there is no way in pdf for overtly asking and saying give me lots of memory because i want to mess about and make you unbelievably slow and that's a great advantage to have a restricted language that will try and stop people playing games if you could have hidden things in pdf would it have would it have yeah would it have taken off i don't think it would and i think i remember hearing that there'd been a robust discussion at adobe to the effect that one or two people were starting to use postscript kind of preludes to do all sorts of weird and hairy things and wasn't this a fantastic selling point for pdf as a rapper format for anything and everything and the answer came back from somebody on the team there saying basically this is not a feature it is a bug and we have got to sit on it firmly people are now of course utterly aware of trojans and so on and so forth in a way that they weren't in the kind of early late 80s early 90s when this was just seen as oh wow isn't this incredible so that was the situation then you'd got like a a bit of a chasm between the two between html and pdf one of the things that fortunately happened around about the early 90s was that tim berners-lee and others headed off at the pass any attempt to make as it were the web be of property of either apple or microsoft or whoever he set up the world wide web consortium who's you know one of his founding tenants was to try and be platform neutral fair to everybody and to have clearly published standards the worldwide web consortium that everybody could agree to and nobody would try and pull a fast one on anybody else because i think even microsoft had to admit they'd try and rule the world with it but they wouldn't succeed but latterly of course what has changed everything and again this business about just faintly possible to send a photograph or a slow moving movie in the early to mid 90s everything totally routine and above board youtube 2004-5 something like that what was needed of course in those 10 years was not just any further realization about the language it was just the infrastructure needed to be faster so there of course you're up against telcos and telecom companies have to be sufficiently enough of computer companies or have big clients saying we need more bandwidth we do not want 38 kilobits per second out of apple talk thank you very much we would like it to be at least 38 megabits right factor of a thousand faster now get on with it but of course once it's been established that serious people with serious money will pay for that then development will follow but there is always a bit of a a lag a bit of a induction period there for people say yeah you know that idiot brush is right this is going to take off we better make plans rpc protocols and network stacks and so on and just quickly bolted on a thing that let it be accessed as a probably a gift actually size of it and the operator this is called select font so it binds this point size to this font and says right that's what we use