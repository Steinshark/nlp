the people defining what was called a standard generalized markup language sgml they took over the pointy bracket notation and actually used it within documents themselves it leads back into computer science principles in so many many ways and there has been so much confusion suppose you could say what this episode is about is sgml html xml what's the difference or are they all the same no they're not all the same way back in the late 1970s early 1980s a team at ibm led by a man called charles goldfarb who was trained as a lawyer came up with the idea that it would be really useful to be able to put tags into documents to say what the component parts of the document were like p for paragraph which of course is now so familiar to us from html as pointy bracket b close pointed bracket and they came up with this whole notation for tags that's what it comes down to it was a tag set notation people could see the advantage of this particularly if you had a huge collection of documents that were just crying out to be structured and there are quite a few of those it could be marriage records it could be specifications of stuff owned by the department of defense and indeed some of the earliest users of this tag set technology of sgml was the department of defense and a thing called the text encoding initiative and they were just going to tag up everything in the world that they could see with a suitable tag set to make it easier to access and to locate what you wanted if it was in the big database so that was the overall idea of it but in order to show you how this sgml worked let's start straight away with something very simple here is a sample memo there is a two part it's been sent to tony blair this is way back in the early years of this century around about the time of the iraq war i think is this fictitious memo it is from the white house the message is as follows and it says the president says thanks for your support simple as that so there's a two a from and a body a message body now as computer scientists we realize straight away that even if it's just a sequence you can still present it as a left to right structure within a tree so here's a structured tree representation of what we've just informally written down the whole thing look at the top is a memo and when you look below in the tree it says ah obviously a memo is a sequence of a two part followed by a from part followed by a body part great within the two part there's just some text it says tony blair the from part more text it's from the white house body part i've deliberately made this a little bit more complicated i've said that the body part can be if you like just be a single paragraph a p and within a p there could be arbitrary mixtures of plain text the president says or marked quotations because what i'm going to do is to say that thing that was in quotes is an example of a quotation so this if in future sean were to say to me go through all our memos and dig out the bits that are quotations or quoted speech then because it's tagged and marked it's so much easier to pick out of course from that tree then how does that translate into html notation don't panic it's very very similar to what you're now familiar with as xml notation right here is a tag that says this whole thing is a memo and this is where it begins a two tag is to tony blair but being a good boy i must remember to end the two tag from the white house end of the front part here comes the body now i typeset the thing previously as the word message but this is just to illustrate that if you're crawling all over this spec with a typesetting engine you could take the decision that every time i see the word body as a tag i actually put out the typeset thing saying message i could have said body but the tags themselves can trigger typesetting and stylistic decisions if that's what you want to do so here we come then here's the body of the memo and like i said it's got to be a paragraph denote with the p here's the free text that i'm allowed the president says and here is the nested quote inside the paragraph denoted with a q tag thank you for your support end of quote end of paragraph end of memo now some of you eagle eyed will immediately be dashing to the comments on this video right now hold on and we'll say you've missed out the end of body tag to which the answer is yes sgml allowed you to do that so long as you warned it in the spec that goes behind this of the legal tags if you said i will optionally make end of body be admittable then the biblical handbook here says you may specify that you want certain end tags to be omitted provided that doing so will not lead to ambiguity and therein lies a complete nest of vipers but in this particular case it's all right you could put in and replace end of body why did they do this well in charles gilford's area you have got to remember disk space was massively expensive and this sounds stupid but it isn't every single saved end tag all added up to so many 100 kilobytes that you didn't need because it could be assumed and safely replaced you hope so you know they were not off their heads they were trying to save disk space here's where we have to try and choose our words very carefully and say what you're allowed to say and what you're not allowed to say in terms of building memo out of sgml technology so let me begin with the bedrock and when i say html technology don't forget what i mean it's basically sgml is like specifying the punctuation if you think about it it's saying you can have any tag you like but the punctuation around it is pointy brackets so here's our bedrock on top of this using html notation i've devised a memo language so remember the right way to say this is that memo is an application of sgml in other words it uses the technology of you must not say memo is a subset of html because they're different things html is a meta notation memo is a specific tag set and just to tell you i wasn't alone way before me in the 1980s there was a initiative within the u.s department of defense and i think it was to do with requisition and stores and stuff like this i've even forgotten what the acronym refers to now called cows one of the earliest applications very big of sgml i thought it was great being able to attack things with what they are and what they mean there was also a more scholarly initiative called the text encoding initiative i mean one can imagine there's no end of literature is this an example of the early medieval subjunctive you tag it up to say yes it is everything was hunky-dory document professionals thought this is wonderful when computer scientists shouted at them basically saying you shouldn't have allowed emitted end tags you've no idea the grief you will get into the answer i think to that is if you're careful and if you take advice you can avoid the grief but in a closed world of document professionals where very few people see the markup this is all right then in the early 1990s oh boy did something happen that really blew it all wide open and led to a much wider adoption of sgml a certain tim berners-lee came along in the early 1990s it was about 1992 when it was first revealed to an unsuspecting world and tim said i like this html and for these web pages run invent my own tagging meta notation i'll use the pointy bracket notation of sgml but it was massively massively successful yeah it's great pointy bracket notation we love this specify our pages get them all out there well the weaknesses in html first of all because it didn't have a document type definition to say what was optionally admissible or what wasn't tim had a certain view about well for example end of para even nowadays in an xml compliant browser it's not gonna refuse to show your page because you go from p to another p without formally closing off the first paragraph i've hit another p i'm already in the middle of a p i think i better close off the one i'm doing go into another one fine but there were far worse problems than that and they really really came home to roost within the first' months in 1994 there was a meeting i was there at edinburgh where all of this came out into the open a full furious frank discussion took place about what was wrong with html could we ever put it right this has to be another story they wanted to be clear as part of the definition and they said easy we're not going to call it l or do a very quick report on how to do a subset of full hdml that's cleaner which insists