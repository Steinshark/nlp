google is trying to kill c plus well that's not entirely true at c plus north on july 20 2022 chandler kuruth from google gave a talk titled c plus what comes next chandler highlighted that every major language we know and love has had a successor c was followed by c plus javascript typescript and java kotlin but what will follow c plus plus a better question is why replace c plus in the first place the answer is that c plus plus is wrought with technical debt resulting from trying to keep it backwards compatible with a previous versions of itself and b its predecessor c as a result improving the c plus language is extremely difficult often resulting in confusing syntaxes and awkward interfaces also the c plus standard is governed by iso or the international organization of standardization which like any large international organization has its own complicated set of processes and bureaucracy that make agility hard to come by enter carbon an experimental language by google intended to succeed c plus plus like c plus replace c carbon is designed with the following requirements performance matching c plus plus which is one of the main reasons developers still use c plus plus in a world full of easy to use garbage collected languages like java seamless bi-directional integration with c plus plus otherwise what's the point and finally and most importantly a package manager because come on cbs plus wait but what about rust all right hold your horses if you're already using rust and are comfortable with your code base well keep going rust is a next generation language with safety and performance in mind just like carbon however carbon is designed for places where rust just doesn't work expanding a large c-plus plus code based into rust is near impossible and carbon attempts to tackle that through its backwards compatible c plus interoperability to install carbon use the homebrew package manager and install it on your computer after that install basilisk or basil also use brew to install llvm llvm is pretty huge with a lot of dependencies so this takes a few seconds with all that done use brew to export the llvm environment path into your local path on your computer with all that done you can actually clone the carbon repo and use basil to compile the carbon build system with llvm with all that complete you can explore how hello world works how carbon uses pointers and how carbon makes use of its new revolutionary generic type system to get around complicated c plus plus templates so is carbon ready for production no not even close there's a lot of work to do to get carbon to a place where it can start actually taking the place of legacy c plus code guys if you like this video leave a like hit subscribe and go watch this video i think you'll enjoy just as much