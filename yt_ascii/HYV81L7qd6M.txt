hey guys and welcome to another pi qt tutorial so in today's video we're just gonna be talking about menu bars now many bars are the things that you see usually in the top left-hand corner of your screen or the top bar whatever you want to call it it says like file edit forum views so how to set those up how to trigger different functions with them and methods like we did before with regular buttons and then how to set some stuff like the status tip the icon shortcuts for them you know all that fun stuff so i'm just gonna go in qt design we're gonna be working in here and what we're gonna do is create the gui export it to code and then kind of look at how the code works so i'm just gonna go and create a new main window here i'm an inside of here what i'm gonna do you start by just adding a really basic label which is what we're gonna use when we want to show like what button we press just as an example of how you can do certain things so i'm gonna set the font size a little bigger here just to see it nicely so we'll go 20 actually you know it's let's make it a little bit bigger let's go to 36 why not okay and i'll leave that as label we don't need to do anything more with that so whenever we're creating the file menu all we have to do really is just go where it says type here and just start typing and creating our file menu it's pretty intuitive so i'm gonna say file is my first one and edit as my next one and you can see that it kind of brings this thing down it says type here this will allow you to add all the sub menus so in this case our sub buttons whatever you want to call them so in this case i'm just gonna create new as one of them and save and we're just using these as examples it doesn't really have to make sense and under edit i'm gonna do copy and i'm going to do paste now if you want to add another menu to these copy and paste buttons or like cascade it down you can just click on this plus button here and you see where it says like type here you can add another submenu or whatever you want to call it and you can see all the buttons there as well and do the same thing that i had to show you with those buttons so let's go ahead and just start by setting up a few things for this new button under file so the first thing i want to do is have a look at this name here so it's called action name this is how i'm actually gonna reference it in the program so i want to make sure that's okay action new fine we'll leave that and what i'm gonna do now is set a shortcut for this which is a keyboard shortcut so the keyboard shortcut that i set will allow me to just hit like for example ctrl s or ctrl n or whatever i set it and that will trigger the like press of that button in the program so that all you have to do if you want to save something is you know hit ctrl s like you might do in this program right so what i'm gonna do is go ahead and say for new is gonna be ctrl n we'll save that here and the next thing i'm gonna add is the status tip now the status the status tip is what's gonna show up in the status bar and the status bar is in the bottom left-hand corner of your application so down here where my mouse is right where opengl widget is right below that is the status bar and you see if i go to like form and layout horizontally you can see that it shows lays out the selected which it horizontally so we're gonna create what text we want to show up in that status bar when we hover over that new button so in this case i'm just gonna say create a new file just some random stuff so that it kind of makes sense and we can see it when it goes there so the next one is save so for save i'm gonna set that shortcut to be ctrl s and the status tip is going to be saved a file and then we'll do the same thing for edit so for copy we're gonna say status tip will be copy a file and the shortcut will be ctrl c and then for paste we will have control v and we'll have the status tip as paste a file why not okay so now that i've done that i'm gonna save this and i'll just save this as test dot ui and i'm gonna save that to where does it pie qt tutorial so we'll go ahead and click yes make sure you know where you save this file obviously because now we're gonna export it to code and start actually working with it so what i'm gonna do now is go to my command prompt you can see i've already actually used this command twice what i'm gonna do is cd into the directory where my thing is i showed this in the last video so in this case is in pi qt tutorial and i'm gonna run the command pi uic 5 - in this case test out ui that's name the file i just saved and then dot o which stands for output file which in this case is gonna be tutorial for dot pod let's run that hit enter give it a second to go and now if i go into sub line text and i open up tutorial for i think i need to reopen it because i overrode it then you can see that we've created this this file thing whatever it is in code so let's run this and just make sure everything looks alright here and there we go we get text label we have file new save we have edit copy and paste now apparently my shortcuts for save and for paste didn't work but that's fine i'll actually show you how we can set those from code so let's quickly run through this code understand how it works and then we'll add some methods here that we can call and change the label based on when we press one of those buttons so let's go here and let's have a look so up here we're just gonna setting up the central window i'm setting up the size we already know how that works now here we're actually setting up a font object and that way we're gonna set the font size to be 36 for our label you can kind of see how that works i'll spread this out here main window set central widget that's just gonna be what's in the middle is obviously central widget which is you know the main window here now menu bar is gonna be the obviously that file menu bar at the top you can see that we're setting the two things here so a menu file menu edit and then we go ahead and change those names as well now what we do here when we set the shortcuts i believe it is here that we do this so what we want to do is actually add some other shortcuts to this so the way that we can do that is just using set shortcut so apparently ours like didn't work for two of them i guess maybe i didn't save it properly so what we'll do is we will if i can find which ones didn't work which was it paste that didn't work and save so for save if we want to set a shortcut what we're gonna do is i'm just gonna copy this action copy here go to save so where's that go right underneath and we'll just translate that shortcut so in this case we'll do main window we're gonna change this from action copy to action save i'd be like this and then instead of control see it is gonna be control s like that so use that one and now same thing for the other one that we need a shortcut for which i believe was pasted so down here we're gonna set change this instead of action copy to be action paste and we'll make this control beep so now those shortcuts are set up if i run this now we have control s and we have control be serving is working perfectly alright so next step is to make sure that we actually set up these buttons so that they do something when we press them so the first part to do that and we've already kind of gone through this procedure so i'm just kind of speeding through it is i'm gonna create a method that is going to be called whenever we press one of those buttons so in this case i'm just gonna call it clicked but i'm gonna do something differently here and we're gonna talk about how this works in just one second so inside of here i'm actually gonna take another argument rather than just self that is text and what i'm gonna do is just update the label so i'm gonna say self dot label dot set text again this is just how we change that label text we've already been over this and i'm gonna set it to be equal to whatever is passed in as text now next what i'm gonna do is i'm going to adjust the size of my label so self-thought label dot adjust size just to make sure that you know it resizes appropriately all right so now time to actually link up these buttons to our you know clicked event here so to do that is similar to what we did with the other buttons except it's just one different word and you'll see that in a second so what i'm gonna do is i'm gonna say self dot in this case we want to start with new so action new so self not action new dots in this case triggered which is different than clicked the book that we had before and triggered essentially just means pressed the reason it's called triggered is because you can trigger it using the shortcut as well and then what we're gonna do is dot connect and we're gonna say this method here so self dot clicked but the way we're gonna do this is using something called a lambda a lambda is actually just like it's called like a mini function i'll try to explain kind of how this works but i'm gonna do lambda and then in here i say self dot clicked and i'm gonna actually pass the argument text now text is gonna be whatever i want the label to change to so if you click new i'm just gonna say like new was clicked now i'm gonna copy this four times then i'm gonna explain what lambda is so we're gonna change instead of action new we're gonna have action save we're gonna have action copy and action paste and then instead of newest clicked we'll do all these other ones so save go copy like this and we will go pace all right so let's run this quickly and then i'll explain kind of other stuff so i go file new you can see new is click to go file save save was clicked edit copy and paste paste was clicked there you go that it's working now the reason i'm done i've done it this way is so that i didn't have to create four methods that each updated the label to be a different thing because with our previous knowledge all we knew how to do here was just put like self thought clicked and we didn't even put the brackets right we just put the name of the method now that's fine but the thing is if you want the method to work for a bunch of different objects which we do in this case well what i need to do is give it some kind of argument so it's different based on those objects but previously we didn't know how to passed the argument so the way that this works is this self dot action dot trigger connect it takes as its argument one function so before what we were giving was clicked and that was the function now in this case what we're actually giving it is a function and this is what lambda stands for sense stands for a function that's defined on one line and that function actually calls another function called self dot clicked but is able to pass it a parameter because before we couldn't pass that parameter but now since we're saying let's call a function that calls another function and pass the parameter that actually works fine i know it's a little bit confusing you don't have to really understand this to get why this but if you ever want to pass information to the the clicked you know method or trigger whatever it is then that's the way you do it so anyways that is kind of it for the menu bar you can see if i hit my shortcuts like control and control v control c those are all working as well and with that being said i will see you guys in another video