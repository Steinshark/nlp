so, a botnet is different than isolated pieces of malware in the fact that a botnet is a collection of infected machines which are coordinated through command and control by a central server, which is called a "command and control server", or, the c&c server. so the power of botnets is basically in the amount of distributed
computation and storage power that is available to a c&c server. [offscreen voice] it's short for robot, is it then, i'm guessing? yeah, so the "bot" is basically for machines that can operate in an automated fashion, which refers to the robot, the thing that you mentioned. [offscreen voice] okay, and a botnet is a collection of these that somebody's using for nefarious purposes; would that be right? [offscreen voice] or does it have to be? yeah, usually it is for nefarious purposes, so, the main two strengths of a botnet, from the point of view of a bad guy, is:  one, that there is, um, they are, like, bots on the order of hundreds and thousands of machines; so, there is a lot of distributed computing and storage power available there. and the other one is a certain delegation of responsibility or deniability, which the infrastructure affords
to the person who runs the botnet, in terms of, that the person conducts
all these nefarious activities from the platform of the bots, and not just directly. usually people are not aware; and, basically, stealth and botnets usually go hand in hand, because, from the point of view of the c&c server, it wants to ensure that the bots remain infected and available, and stay that way for the longest period of time possible. so, if the user is aware that, you know, it has been infected, then you typically, they would probably reinstall the operating system or take other measures to clean the machine, which doesn't work in the favor of the botnet controller. [offscreen voice] i'm assuming this starts from people opening dodgy emails, or something.  is that the sort of thing that starts this off for an innocent user sitting there using their computer? so, every botnet has a propagation mechanism; and, nothing stopping it from using
multiple propogation vectors. so, for example, a botnet can spread itself in passive ways, or in active ways.  so, active ways usually involve little or no user intervention; basically no user intervention in the sense that, if a machine has been infected, then the bot binary has inherent mechanisms to find other hosts on the internet to infect. for example, by scanning for hosts that have known vulnerabilities that can be exploited. and then, there are passive mechanisms that use -- that require some degree of user intervention. for example, drive-by downloads, which are websites that have, say, some active content like javascript, or activex controls. so just a user, when he or she visits the website, the installation of the malware takes place in an automated fashion. [offscreen voice] so, just because they visited that website, the website might be doing something that they think, oh look, flash, active this, that, or the other, and fancy graphics.  but in the background, it could be doing something much more serious. yeah, and um, there are other passive ways, also. i mean, social engineering is a very powerful way of spreading malware in general, especially botnets, which involves some kind of human interaction to convince a user to take steps that they would otherwise not do. for example, a pop-up thing that pops up and says, you have won the lottery.  click on this link to claim the money.  and you click on the link, and it initiates the download of the malware to your machine. and then, we also have propagation mechanisms like, uh, like media.  for example, usb sticks. which is potentially very powerful, because it allows the infection to spread to private networks which are otherwise inaccessible over the internet. i mean, usually the malicious binary is in the form of an executable. so, it just starts running, right, like, it doesn't need you to double-click it. [offscreen voice] where does the command machine come in? [offscreen voice] you know, is that being controlled by someone, or is that itself a bot? so, i think we can make use of some diagrams here.
[offscreen voice] yeah, yeah, absolutely. okay, so here is the c&c server here. and, here is the user. the innocent user. say that, through whatever propagation vector, either through clicking on some bad links, or through some infected media, the user installs the malicious software. if it's associated with a botnet, usually it's called a "bot binary". binary means the executable code which can be directly run by the machine
without the need to be compiled. by installing the bot binary, the user has got the infection, but it is not formally part of the botnet now. it needs to find some way to locate the c&c server to be able to exchange messages with it. so, it needs some rallying mechanism. now, the rallying mechanism can take place in the form of an ip address. that is, the ip address can be hard-coded into the bot binary.  or the user can obtain a seed list of ip addresses, which would be basically ip addresses of some other hosts which know how to locate the c&c server. so basically, like stepping stones between the c&c server and the user to locate the c&c server. apart from ip address, the user could also potentially use some domain name related to the c&c server, and the domain name could likewise be hard-coded into the bot binary; or the user can make use of some algorithm, which is known to the user, and to the c&c server to generate predictable domain names which are then associated with the c&c server. either way, once the user finds out how to communicate with the c&c server, it connects to it. now the user is formally part of the botnet, and it has kind of registered itself with the botnet. so typically, the c&c server wants the bots to carry out certain nefarious activities on its behalf.  it is able to access that particular bot. now, the purposes for which these bots can be used are different. for example, the bots can be used for the
purpose of information gathering, which involves, uh, sensitive information like passwords, credit card information, or information that is not of a financial nature but's still valuable, for example, intellectual property. the other purpose for which the botnet can use its bots is for distributed computing. for example, distributed password cracking, getting bots to solve captchas, basically, anything that requires proof of work, and is infeasible for, um, for the botmaster, the person who controls the botnet, to carry out individually. it can distribute it across the recruited bots and get them to do it on its behalf. [offscreen voice] the c&c machine is obviously under the control of the -- whoever the botmaster is. yeah. [offscreen voice] um, is that there usually their own computer, or is that again remote from them? [offscreen voice] so is there -- i was wondering if there was a way of tracing them? yes.  so -- it would be very naive of a botmaster to directly use its own machine for the c&c purposes. and, usually, how it evades detection is to incorporate several stepping stones between itself and the machine. and, for example, it could login to that machine or access that machine using the tor network. so that way, it is using that machine anonymously and remove all traces of its identity, and basically be untraceable. [offscreen voice] how many botnets are actually operating on the internet at the moment? [offscreen voice] is there -- can anyone hazard a guess at those numbers, or -- it's hard to say, because um, i mean, how can you count the number of bots that are controlled, right? like, if it's a centralized botnet, and there is, say, one, or like a limited number of c&c servers -- in one specific case, they looked at all the incoming connections to the c&c server, which kind of helped them estimate the footprint of the botnet, which is the number of bots that formed part of the botnet. but, who knows if there are other c&c servers related to the same botnet? because, you know, like, looking from the vantage point of one c&c server would afford you visibility into only its own footprint. so, there have been academic studies on estimates of botnet footprints. um, but one cannot really be completely accurate about that. [offscreen voice] is there any way that that kind of technology can be used for good?  or, is it always for nefarious reasons?  [laughing] well, -- it's kind of being used for the good, in the context of censorship resistance systems, where good users are trying to access some content which has been banned in their country, using more or less the same evasive measures which are used by botnets or malware to evade security people. so, it's the same model, turned upside-down. by subtracting these frames from each other, we can virtually shroud
[camera shutter sounds] the influence of daylight. so, we can even eliminate cast shadows...