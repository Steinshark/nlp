hey everyone welcome back to talk tech with tiff 
today i sat down with danny who is a software   developer however her story didn't begin there she 
initially was a writer and then transitioned from   going to a boot camp into a startup and now at a 
big company as a software developer this story was   so inspiring hearing her journey obstacles 
she faced and really how she overcame them   also if you haven't already make sure 
to click on the link down below to sign   up for my monthly newsletter where 
i share unique discount codes   personal stories and also a lot of career and 
tech advice okay let's get started welcome to my   new series called talk tech with tiff where i am 
sitting down with industry professionals to hear   about their career journeys and current roles 
i created this series to hear from people who   are established in the tech industry so that we 
can all learn what these individuals do in their   day-to-day jobs and the type of opportunities 
that are out there okay let's get started   hi danny how's it going hey tiffany i'm good how 
are you i'm good i'm so happy to see you we   for those of people who don't know we've worked 
together for quite some time so it's nice to have   have a someone i've worked with in the past on 
the podcast yes yeah this is really cool i've   only done one other podcast before and it was 
over the phone so this is a whole new experience   all in person i know you come in and there's like 
all this equipment and stuff it's like it's a lot   yeah it's it's cool though this is this is awesome 
and i'm really excited to talk to you because you   have such an interesting and inspiring story 
really transitioning from writing into into   tech into software development but before we 
get into it tell me a little bit about yourself   yeah so i'm a software developer i work at ibm   and i'm also a beekeeper and a gardener i do 
rock climbing all kinds of things so that's in a   nutshell i love it i know you you led some really 
amazing initiatives at ibm that that you you   brought me on to with gardening and planting 
and it's it's such a whole different world like   the garden and and the beekeeping and all 
that i think it's really interesting yeah   it's it's a lot of fun i kind of just stumbled 
into that so yeah it's good and i kind of   have brought my sustainability stuff into ibm as 
well so yes yes before we get into that though   tell me a little bit about your your transition 
really from what you used to be doing with writing   and and then how you it evolved into where you 
are today because i know you we went to the same   boot camp different time but same boot camp and 
tell me a little bit about your story with that   yeah so i was actually i was an english major 
in university i went to the university of guelph   and i wanted to be a music journalist so i big fan 
of almost famous i wanted to do that i interviewed   bands in the city in guelph and i made my own 
blog just so i could like post the interviews   and then after school i so i wrote for the 
student newspaper in guelph in the art section   and then when i graduated i became a content 
writer at a local radio station in toronto   and i did that for a few years and ended up 
getting laid off november 2017 okay and i   kind of wanted to do something different i was 
in i wasn't quite doing music journalism i was   doing content writing and it was just kind 
of a dead end for me it wasn't very creative   from what i was writing yeah in my position 
um so i was trying to decide if i was going to   go back to school i didn't want to do like 
a long-term commitment four-year degree kind   of thing yeah no and then i ended up running 
into a friend who graduated from brain station   which was the coding boot camp i went to and 
she did the ui program so i just kind of i   googled what it was i didn't know what a coding 
bootcamp was i saw the ui program and then i saw   the web development program and i kind of 
just went for the web development because i   i made that blog in university i kind of dappled 
in html and css on my own time yeah so i always   liked it i just never considered it as something i 
could do for a living and a lot of that was i can   get into it but just being discouraged in school 
from doing technical yeah subjects so anyway i   enrolled kind of overnight decision i did the 
full-time full stack web development program   january 2018 to march i want to say yeah 
and yeah went back as a teaching assistant   and then started working in the field and started 
doing software development and now i'm at ibm so   the continuous yeah evolution that's great i think 
that's that's a question i get asked quite a bit   actually is people who are considering going to 
a boot camp in their they haven't been exposed   to the industry like many of us who who went to 
a boot camp prior and they're uncertain should   i do the ui ux side of things should i do the web 
development side of things so for you you really   chose web development because of your past like 
in high school yeah exactly it was just i always   liked like i learned html and css like back in my 
space days i always liked building web pages i did   really well in high school in the web design class 
i just again i didn't consider it as a possibility   because i was not good at math i actually 
failed grade 11 math i took at summer school   i had my guidance counselor in high 
school tell me to stay away from technical   subjects and to do arts yeah so i just 
i really didn't think i had it in me   and in retrospect i see that that was because of 
influences that were negatively impacting me at   the time and so i kind of just i was really 
good at english i was really good at writing   essays i loved reading yeah so i just stuck to 
that yeah and yeah i mean i wouldn't i wouldn't   undo my english degree i loved majoring in english 
like that was great but if i could i would go   back and take some computer science courses or 
something because i just again didn't think it had   it in me until i went to this boot camp later 
in life yeah i was it was just before i turned 25.   yeah so yeah i know it's so funny i remember 
to and i still get asked this a lot too is i   thought i associated that you had to be so good 
at math and and science and all this in order to   get into coding like that the two for whatever 
reason were side by side which is not the case   at all and and i think it's still to this day 
dissuades a lot of people who hear that from even   pursuing it which is really interesting yeah and i 
mean even just getting into that later in life   and going to that bootcamp i learned a lot about 
myself in terms of how i learn yeah so i figured   out i was a visual learner would have been nice 
to know that like when i was actually in school   but i remember i had this ta 
her name's alice so shout out to alice   and she i so things got difficult because of 
my lack of technical background when i started   learning javascript that was very difficult 
for me and a lot of that was because i wasn't   trained to think in a problem-solving way and 
in that kind of technical way so i struggled   a lot to pick up javascript and i remember 
learning for loops and having a breakdown oh i   yeah yeah because i just didn't get it and i think 
uh for me what i learned from that experience was   i need to understand why something is happening 
for me to understand it and so alice my ta she   sat down with me and she console logged the 
iterator in a for loop and like what basically   showed me in the console what is happening like 
what is going on in the background and when i   saw that i was like it just clicked and yeah in 
hindsight now i'm thinking about like all the math   teachers i had in school and how like they didn't 
take the time you know yeah and unless it's all   it's that's a bigger problem in itself right 
like one person to like 30 kids in the classroom   that's a whole other thing like there's no way 
they could spare that time right but yeah i just   i had it in me i just learned a little 
differently than other people so figuring   that out was really nice and then once i yeah 
once i saw that for loop and what was happening   a lot of things kind of fell into place yeah i 
know it's one of the things i always say too is   when you're going into a boot camp 
especially like you and i did where we   had very little technical background or coding 
background you're also learning how you learn   and how to learn you know like it's a whole 
other skill set when you're learning those   for the first time about javascript or for 
loops or anything like that because you've never   it's it's a new way of thinking really and 
if you haven't been exposed to that or when   you're younger or taking those kind of like coding 
classes when you're younger it's just like a whole   you're learning how to code but you're 
also learning how to learn in in that way   yeah exactly and you know i think i really fell 
into that myth of being like right brained right   brain is the arts brain right yeah i was like 
right brain heavy and i just don't think that   that's real i think everyone can use their full 
brain and yeah we when we put ourselves into   boxes like that then it limits what we're 
capable of i posted on my stories this   morning if people had questions for everyone i 
was sitting down with and one of the questions   that i got asked someone asked for me to ask you 
was going from a writing background which they   said you know creative writing background and 
and being getting to use those that creativity   do you find yourself still getting to be creative 
in software development and what you do today   oh 100 there's all kinds of correlations i 
found between my writing background and even   just my english training and coding like 
picking up on syntax comes really naturally   to me and a lot of that is because of like writing 
essays and focusing on grammar and punctuation and   having that eye for detail which translated 
really well into learning new coding languages   and in terms of creativity yeah i think 
coding is really creative you know i can i don't know how to say this i hope you can fix 
this basically like there's a lot of room to   put your own way of thinking into a code base 
and like kind of look at different patterns   and writing different functions writing functions 
naming functions naming variables like there's so   many different things that are creative and also 
just like you know customizing your terminal or   customizing your yeah everything right and 
i think yeah i found a lot of creativity in coding   yeah i totally agree and and there's no 
one way to solve a problem and and then to   decide how you're going to solve 
that problem is creative in itself   yeah exactly and a lot of the time like i do 
mostly front-end development right now i'm   actually learning a back-end role which is new for 
me but i do mostly front end and a lot of the time   you have to like as a developer step into a 
user's experience step into like empathize with   the user and go through user stories and i think 
that is creative in itself as well yeah i agree   you are very big into in the sustainability world 
and green coding world for those of people who   aren't as familiar with what green coding is could 
you kind of break it down as to what is green   coding yeah so green coding it's a it's a new very 
new way of of thinking of approaching software   it really comes down to the carbon impact 
of the code that you're writing and you know   a lot of people are like well what does that 
mean and it really is like it's writing clean   reusable scalable code that's going to last 
you know long term and if we think about   the amount of data that we transfer in code so for 
example i use i use front-end examples a lot   because i think it's a lot easier people to kind 
of conceptualize but when you load a a web page   in your browser for example there's all kinds of 
different files that are coming to your browser to   show what it what you're seeing on the 
screen and those could be images videos   different styles of fonts like 
maybe you're hitting some google font   endpoint like urls and all those things are coming 
in and compiling and making that webpage but what   we don't think about is the amount of energy it 
takes to transfer that data across the network and   it also depends on where the server is located the 
web server and where your browser is located so   that distance traveled the longer distance 
the more energy is going to be consumed right   yeah so a lot of the examples i've used is like 
optimizing your front end optimizing your design   taking into it's like simplified ui like 
taking into account like how heavy images   can be how heavy videos can be does this really 
add value to your application or can you remove it   do you really need to use custom fonts or can 
you use system fonts for example like fonts   that are already available to you all those 
decisions make a difference in terms of the   amount of energy your website is consuming and 
you know this kid there's so many examples but   if you also think about optimizing data optimizing 
your cloud servers that are that are dead   and not being used are they still running are 
they still consuming power loops in your code   that are running in the background endpoints 
that are being hit that don't need to be hit   like are you are you calling data in that 
is like you're not even using it anymore but   you're still hitting that end point and still 
making that call that's all energy that's being   consumed right so a lot of that is cleaning up 
your code refactoring and yeah just making sure   what your the code that you're writing the 
software that you're building is basically using   as little power as possible and has a small 
footprint yeah it's so interesting i never had   heard about i mean i think i've heard maybe the 
term but until you you really highlighted it for   me it's not even something and i feel terrible 
saying this but it's not even something i really   thought about until you brought it to my attention 
and then but once you are aware of it you can't   ignore it you know but i think it's in this stage 
where a lot of people who are building technology   developers and many other roles don't aren't 
even aware of it at this point which i think   hopefully that will change soon yeah and it can 
be over really overwhelming to think about okay   well where do i start i've already i'm working 
in this legacy code base already that exists   and how do i what do i do like it's too much 
work maybe you don't have enough staff but   even just thinking about the environment that 
your developers are working in are you leaving   your monitors on all night are you yeah are you 
leaving your power bars on can you turn them   off is there anything that you're consuming energy 
like in your workspace that doesn't need to be are   you recycling are you composting like everything 
right it's not even just the software that the   devs are writing but also the way the devs are 
working it's like it's just like keeping in mind   basically the environment and everything that you 
do yeah yeah and have you seen more businesses   become curious about this or want to transition 
over when they are asking for products to be built   yeah so so i've noticed that there is a lot 
of software being built that is has the goal of   helping businesses reduce their carbon emissions 
by i don't know measuring esg data for example   that stands for esg is environmental social 
and government's data okay so basically telling   software that's being built that's telling a 
company where they can reduce their footprint but   my question is always what about that software 
so is that software you're running to help your   company reduce its carbon footprint is 
that consuming energy in itself is that   well written is this an application that's 
going to become obsolete in five years because   your code isn't scalable yeah yeah you know like 
thinking about the long term and that's a problem   with like our society has is not considering the 
long-term impact right so like are you building an   application that yeah is going to become obsolete 
in five years can you hand this off to a whole   new dev team and have them take over easily 
because you've written good documentation like   those are the types of questions i know and i've 
i don't think that that is being considered enough   and again i think it's a very it's a very new 
um way of thinking there's something called the   green software foundation and it's actually led 
by asim hussein who works for microsoft and he   is their green cloud lead at microsoft so he 
founded this foundation and all basically all they   what they do is they they do research around 
green software they're trying to come up with   open sort they're big on open source so like 
products that businesses can use yeah integrate   into their apps and yeah just kind of lead that 
way of thinking so i've learned a lot from them   that's really interesting it definitely 
see it's definitely at that point where   it's companies are starting to recognize 
how important this is and it's just going to   hopefully continue more and more in that direction 
yeah i think it has to it has to yeah it's not   even an option yeah we we really need to 
start considering our environmental impact in   everything not just software but everything 
we do i know and it's so it's easy to do   when i say easy i mean like simple things such 
as like you said turning off your monitor are   you does your office have a place to recycle 
or to compost like those are very easy things   simple things to implement but for whatever 
reason aren't in many companies or aren't   a lot of them it's interesting yeah yeah 
so i that would be my advice always is just   start start from the basics like start with 
getting a good sorting system for your garbage   and then go from there exactly one one step before 
another kind of switching gears a little bit here   i feel like we have quite a bit in common 
with our our journeys just from when i   i always struggle with this term non-traditional 
because i think now there is no one way to get   into tech or really traditional anymore way 
to get into tech or software development but   we both came from a boot camp and then 
you know now being in the industry   a lot of times of course you're working with 
people who went to school for computer science or   software engineering did you ever or do you ever 
face imposter syndrome as far as hey i don't have   that that plaque or i don't have that experience 
from the four years oh yeah absolutely i think   it's gotten a lot better now at this point in 
my life i've been at ibm i actually just reached   my three-year mark in in may and now i'm like you 
know i deserve to be here i put the i put the work   in and no one's gonna tell me otherwise that's 
my attitude but it took a while to get there   so much imposter syndrome even just 
yeah i just there were so many moments   i think for the first two years that i was in 
the industry just every day being like how am   i doing this like i'm a software developer now 
yeah i'm an english major this isn't right like   you know i'm i'm building this feature in this 
banking app that people are going to be using like   many people use yeah and a lot of that i it 
took yeah a lot of hits to my confidence a lot of   trying to work through that that imposter 
syndrome but i do i do think that everyone   needs to realize like especially boot camp grads 
like boot camps are hard yeah it's hard to go from   a boot camp to getting a job it is and the 
fact that you did that you deserve to like you   did the work and you deserve to be where you are 
so that's my that's my advice i totally agree and   for someone who's in that stage of of you 
know you mentioned those emotions you had   you know a while ago what would you what is 
some advice when they're like in the thick   of it like just feeling like they don't belong and 
they're why are they here and someone's gonna find   them out or anything like that like what is some 
advice to kind of carry through carry on yeah   so i'll just i'll just go through things i did to 
get me through and i also like on top of the upon   imposter syndrome i also have like you know mental 
health issues as well like diagnose depression and   anxiety and so i and i know a lot of software 
developers that go through the same thing so i   was also working through those barriers as well 
lots of voices in my head telling me i can't do it   and i shouldn't be here and i think ways that 
um ways that i got through it i think the most   important was connecting with other developers 
like you yeah my friend cincha yeah ibm yeah   like just being honest talking about it talking 
to other developers also taking breaks stepping   away realizing you are not code that's not your 
life like you have other things you know that add   value to your life kind of remembering those 
remembering the people that you're surrounded by   the hobbies that you have and and sometimes 
i would like do a fun project with a friend or   do some go on like a website and do some 
javascript yeah do something fun with it   again yeah just do something fun you know 
answer questions that you know you can do yeah   boost your confidence i love that yes it's so true 
for too long and it's something i'm still working   through it's not easy is not letting your code 
define your worth and i really that's something   i really really struggled with and i still do to 
some degree i'm working through it but if there's   something i can't solve or if there's something 
i'm like oh this code is [ __ ] or whatever   it affects my entire day even after work hours and 
it's it's not how it should be but to actually get   to that point where it doesn't is a whole other 
whole other ball game and yeah i say i've been   in those positions so many times still still 
to do every day and my biggest piece of advice   is just to walk away like get up get away from 
your desk away from your computer shut it down   i know exactly exactly yeah yeah shut it down 
i find i'm always late to the game when it   comes to leaving the computer i was like i should 
have done this so long ago like just walked away   yeah and honestly i still to this day get 
stuck on bugs get stuck on problems you   know my code's not running what's going 
on and i could easily just sit there for   10 hours straight freaking out yeah but i've 
noticed that if i just go do something else and i   come back to it it's almost like usually it clicks 
like something you know it's like your brain just   needs a break for a second to get those muscles 
uh healed and and come back to i totally agree and   on those moments where i'm still stuck i always 
think okay you know being stuck on something for   10 hours or x amount of hours this isn't moving 
the business or product forward and i'm here to do   that so just ask someone you know like oh yes yeah 
um anyone especially at a place like ibm they'll   always say please just ask because you know 
if you're sitting if you're stuck on a problem   silently suffering for two days and you don't 
tell anybody you've kind of wasted everyone's   time and you can delay you know the product coming 
out on time and it's like it's just so much more   efficient to just ask i know because it's usually 
something so simple too that you're missing you're   like oh yeah that's it like a light bulb moment 
then yeah i've had like i've had moments very   humbling moments this was not ibm it was one of 
the startups i worked at but just having a senior   developer who was in charge of me and he had 
a computer science degree from u of t and   both of us just completely stuck on the same 
problem yeah and we were just like both googling   the exact same thing and it was just it was 
so great to see that it was very equalizing   and i was very new to the industry as well so it 
was great to see somebody and he had a masters of   computer science right like it was just nice 
to see him type something into google that i   did the exact like i typed the exact 
same thing exactly like everyone   gets stuck tech moves so quickly you 
can't know everything it's impossible   if you try to it's just gonna yeah consume you 
it's gonna consume you yeah i totally agree that's   one of my favorite things too i'm really happy 
you you highlighted that story because it's such a   good story and it's so true that everyone is still 
learning and growing and you're never going to   not use google or stack overflow or and if 
you aren't using any of those tools you're   probably not building to something that's 
challenging enough for you you know like   you should always be learning and growing and 
using those so it's interesting to me i get   asked a lot of questions of how do you memorize 
all the code or did you memorize out of like   google all i know is google like i just got better 
at googling you have to know google yeah it's yeah   and it's not a shameful thing everybody does it 
exactly speaking of stack overflow actually the   client i'm working with right now we're using 
microsoft teams and and their senior dev   lead created a channel called stack overflow 
for us which i thought was really cool yeah   and you just share links of like different just 
to ask questions he was like this is your   for the devs to ask questions and call it stack 
overflow and yeah share links but it was nice to   just be like you know we're all on the same page 
yeah we'll do the same thing exactly bring it all   back down to the same level i feel like i could 
sit here and talk with you about this for hours   but to wrap it up what is some advice you would 
give to your younger self ooh so much advice   it's hard to narrow down but i think if you 
know just to keep with what we're talking about   the theme here is i would definitely tell 
her to take some computer science courses   don't listen to the guidance counselors in high 
school you know i'm not going to be apologetic   about that just don't like if they're telling 
you something that has to do with you not being   capable just ignore them because it's just you 
know i just learned this but our frontal lobes   are developing until you're 25. so what you know 
in high school is not what you're gonna know four   years later just if something if you're interested 
in something just do it like you can do it yeah   i would definitely tell her to ignore that advice 
about not taking technical subjects and just do it   that's amazing advice i totally agree danny thank 
you so much for taking time to sit down and chat   with me today ah thanks for having me tiffany this 
was so fun it was fun and i just always feel so   inspired hearing your story and and connecting 
with you ah you too though thank you thank you