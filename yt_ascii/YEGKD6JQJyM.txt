the stm32 blue pill is a small arm cortex m3 based development board with 64 kilobytes of flash and 20 kilobytes of sram and clockable up to 72 megahertz this board is great for the programmer who wants to take their embedded knowledge to the next level in this video we'll be doing a blink led example on the blue pill in c without using the stm32 cube ide i personally am not a fan of large ides like the stm32 cube ide so today we'll be completely on the command line leave a comment and let me know your thoughts on the stm cube ide and hit subscribe for more programming videos like this one to get started you'll only need two things one the stm32 blue pill with the swd or serial wire debugging port soldered and the st-link v2 stm programmer and debugger while the blue pill does have a usb header for some reason it comes shipped without a usb boot loader flashed onto the chip so we'll have to do our initial flash over serial wire debugging using the st-link to do this wire the blue pill to the st link like so one wire ground on the pill to ground on the st-link step 2 wire 3.3 volts on the pill to 3.3 volts on the st link step 3 wire the data i o on the pill to the serial wire debug i o on the sd link finally wire the data clock on the pill to the serial wire debugger clock on the st-link now before we go start plugging things in we need to make sure we have the tools installed for flashing and reading the board on our computer so we need to run sudo apt-install st-link tac tools to get those tools installed all right so let's write some code we could spend time in this tutorial hand cranking out the library to control the peripherals in the blue pill do all of the manual bit for bit banging on all the different busses but luckily that's already been done for us lib open cm3 for cortex m3 is a project to provide an api for the peripherals on standard implementations of the cortex m3 processor luckily for us they've created an api for the blue pill that we're going to use today we'll start by cloning their lib open cm3 template repo that comes with an example project to get us started don't forget to update your git sub modules to pull in the core library next we'll need to compile the cortex m3 code by running make in the lib open cm3 directory make sure you have the arm build chain installed before doing this now we can open up the example project and make changes so that it targets our blue pill step one we're going to actually delete a lot of the code here i don't care about really any of this i want to get rid of the shared directory i want to delete these two files here i want to change the project name to blink led i'm also going to delete the my common code repo as i really just don't care about it we're going to remove this here finally we want to make sure we change our target board to not the f407 but the f103 c8 so that gets our project ready to roll or it will now compile for the blue pill we want to go into our actual project.c file here that's the you know target of the code we want to use we're going to get rid of all of this stuff just so that we have only a main file and this should build and produce a blink led dot bin now we could in theory flash this code directly to the chip but it wouldn't do anything so now we need to actually add the code that will make the led blink to get started we'll include the reset clock control and gpio libraries from open cortex m3 these libraries provide the interface for us to program with next we'll enable the reset and clock control on port c which is the gpio bus that our led pin is tied to doing this is required for doing gpio next we'll set pin 13 our led to be a push pull i o pin toggleable up to 2 megahertz next we'll create the infinite loop that will contain the main logic of our program in that loop we'll put another loop that does nothing for a preset amount of time to create an observable delay between led blinks finally we'll toggle the output pin to make the led turn either on or off now we type make again and our code compiles look at that now we have to figure out how do we flash this code to the stm32 to flash the device it's actually pretty simple to do this we'll start by making sure that our os sees our st link we'll do this by typing ls slash dev in grep for st looking to see if a sim link was made for the device we can also run various st info commands like st info tact version or st info tactec probe to make sure that our computer sees a sane st programmer now to flash a device we'll run st flash tactic reset to the right command and we'll use the blink led dot bin at address eight zero zero zero zero zero zero and there we go the device is written and our flash is verified you should see your stm32 blue pill blinking its led at about a one second interval hey guys thanks for watching if you liked this video or if you learned something do me a favor hit like hit subscribe and i'll see y'all in the next video take care [music]