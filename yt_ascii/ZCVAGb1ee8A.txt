i want to tell you about a generalization of a problem that was first popularized by al cohen of york, who was an anglo-saxon really smart dude. the problem is: you have a farmer who comes to your river and with him he has a wolf, a bundle of cabbages and a goat; and there's a boat, that's there and it carry-- it can carry him, and one of his charges. obviously the farmer has to be there because he has to be rowing, and he wants to bring everything to the other shore safely. so that means that he cannot leave the cabbage with the goat, because the goat would be eating the cabbage, and he cannot leave the wolf with the goat because then the wolf would eat the goat. so how can he do it? and so of course we're assuming that the wolf cannot swim which is a question i get all the time, when i'm speaking to kids. so the wolf cannot swim neither can a goat or the cabbage. so the only thing you can do at first is to bring the goat. okay, so then, okay, the farmer goes back, and he-- takes, let's say, the wolf; but now he cannot leave the wolf with the cat-- with the goat. otherwise the wolf would eat the goat back. so what if he brown the cabbage instead? well, same thing if he brings the cabbage now, the goat would eat the cabbage. so the only way it can be done is you have to have this clever moment of saying "oh, i can bring back the goat". so, okay, he brown the cabbage over and now he brings back the goat, and now takes the wolf, brings it to the other side as well, and now he goes back just to get his goat. so... then you can generalize, you can say "well, let's say that this farmer had more things that he wanted to carry across the river". so let's say that i added a rabbit, so what can i do first? brady haran: what does a rabbit day with what? oh. brady haran: who is in danger from who here? yeah good question right, so the wolf would eat the rabbit, and... ah well the rabbit would eat the cabbage. we assume that the rabbit and a goat together are fine. there won't be too much violence there. the boat can hold the farmer and one of these guys. that's it, the farmer still has to be there. we're still assuming also that the revit cannot swim. so what can i bring first? can i bring the wolf? well, no obviously the rabbit and the goat would eat the cabbage. can i bring the rabbit? well, no again the goat would eat the cabbage, if the wolf doesn't catch the gold first. okay, can i bring the goat? well, no, the rabbit will eat the cabbage again, if the wolf doesn't catch the rabbit first. and can i bring the cabbage? no, because the wolf would eat the rabbit and the goat. brady haran: carnage. carnage, yes. blood everywhere no matter what we do or shreds of cabbage, one or the other. so the question becomes: okay, how big of a boat do i need? so if i'm given different things, and i know there's certain conflicts how big does my boat have to be? so here if i have space for my farmer plus two other things, i'll be fine. i could just say fine, i'll bring the wolf and cabbage first i'll leave them on the other side, come back, and get my rabbit and goat and i will be done. super easy! so the question is how big does it have to be? well, now we kind of want to start doing math, right? so how do we bring math in there? so we want to think about the conflicts as making a graph. so i have my-- wolf, and i have my goat; and so i cannot leave my wolf with my goat so i'll put an edge, the line, between these two points which are really normally called "vertices". brady haran: so edge represents bad news. yeah conflict, that these two things cannot be left alone unsupervised. the wolf can also not be left with the rabbit. the goat cannot be left with the cabbage and the rabbit cannot be left with the cabbage either. but the wolf can be left with a cabbage so i don't draw an edge there, and i don't draw an edge between my goat and my rabbit because it can be left together. okay, the point that we see is that let's say that i first took my rabbit, well, there's still some lines remaining, right? i am left with a graph with the wolf, goat and cabbage and there's still some lines that are remaining. and that's tree firing remove any of the corners. so what i want to do is take a set of my things, that will remove all of the lines, and that's actually a really important math concept. it's called a "vertex cover". so, maybe let's write down, what is the vertex cover.
"a vertex cover and a graph g is a set of vertices such that any edge is adjacent to at least one of these services". okay, so what does that mean? that means that if i want to take a set of points, where every line is touching at least one of these points, my goal is that by taking the vertex cover, i'm removing all the lines so maybe we can just draw a simple example. so, let's say that i have this graph. so, this is a graph so a graph is really just a set of points and set of lines called vertices and edges, and so i might ask myself "what is a vertex cover?" so i could start building one. so i could say "okay i'll take this vertex within my vertex cover". but that's not enough, right? so these five edges now are covered by this vertex right they're touching... this vertex, but the other ones aren't yet. now so i could ask "i could add this vertex to my vertex cover, and so i'm getting closer". but i still have this line that is not covered yet. so i could add this one now. and so these three vertices from a vertex cover every single line is adjacent to one of these vertices. brady haran: it's almost like how many hands did you need to cover the right number of spots? yeah exactly, exactly. so here in a vertex cover... what was it? well, yeah one is not sufficient, right? a single vertex is not a vertex cover. if i cover the rabbit and the goat, then they're covering all of the edges. there's no edges remaining so this forms a vertex cover. so that's why i need to have at least two seats, because the minimum size of a vertex cover in there is 2. so there's no way that i can do it if i don't have at least two extra places besides the place for the-- farmer. so in general i know that my boat has to have at least the minimum size of a vertex cover. right? otherwise i won't be able to make my first trip, because there will be some lines remaining in my graph, and lines represent conflict. brady haran: i imagine you could do overkill though, there must be as these things get more complicated. there must be-- vertex covers that cover too many vertices. oh yeah, that's a really good point, right? so in this graph for example-- so if i add this vertex, this is still a vertex cover, right? so, i really want the minimum one. so i want to say that the "number of extra places needed in my boat is at least the size of the minimum vertex cover". so in this graph here that was three. i needed to have at least three-- brady haran: because that final the smallest possible. yeah, you don't want to overkill as you said. so that's nice, but now you might ask yourself: will that always be enough? right? like-- sure you can do the first trip across the river, but will you be able to do all of them?
and so now you could check with some examples. so, i mean, we could try with a big example and see if it works out, and then... try with some other examples. does that sound good? okay, so maybe we need another piece of paper. okay so now we have way more things. and so now we need to think for a second, what is actually going to eat what. and we might disagree on some of these. i am not a farm girl so i would go with what i think. the wolf would eat the goose. potentially, the mouse if it's really hungry. told eat grass. it... won't eat the cat either, i don't think so. carrot or cabbage it's not a vegetarian. it's a carnivore so set a goat and the rabbit; and the goose will eat ahhh... the grass, i see geese eating grass all the time. i don't think it's gonna eat carrot or cabbage because it doesn't really have-- does it have teeth? does i don't think... i mean certainly if it's not cut up, you know, like it will have trouble it doesn't have hands to-- brady haran: maybe this does not the taste of cabbage. fine. i think the mouse will eat carrot, and... the cabbage and... the cat will eat the mouse, certainly. the grass will probably be eaten by the goat. i know that you can use them as long moore's. the rabbit might eat some grass?   cat i think it will just eat the mouse and nothing else will eat it brady haran: the rabbits gonna eat the carrot yes, so the cabbage yeah, that's true. so the rabbit will eat the carrot and the goat will probably eat the carrot too, and the rabbit will also eat the cabbage, and so will the goat, and then the goat and a rabbit are fine. i think that's that looks reasonable to me. brady haran: okay that will be air i guess... do you agree? okay, so let's say that i have a river how big it boat we need, and will the minimum vertex cover be enough? the first point i really want to make is that finding the minimum vertex cover is not easy. right. so, here we only have nine things. right? it's not that much, and to figure out what it is, well since this graph has some meaning, i'm going to use the meaning to help me. so i basically have like my carnivores, my herbivores, and then i have the poor vegetables and herbs. and so these three categories kind of help me determine that oh, maybe the goat rabbit goose and mouse. so my herbivores might form a vertex cover, and i think if i look at it, carefully, like if i were to really look at every single line, so actually yes, the mouse the goose the rabbit and a goat do form a vertex cover it's unclear if that is actually the smallest, i claim it is. it's not an actually such an easy thing to check, so let's just assume that i'm right. so what i'll do is i'll say: okay for my first trip, i will take my minimum vertex cover. right? so if i remove my goat, rabbit, boots and mouse; and bring them to the other side. i am left. i removed all of the lines, here, and so, okay, that's fine. so then my farmer will come back. we can only take four things, it will leave a thing behind. let say it leaves the cat behind and so he brings these guys. but certainly the wolf will attack these guys, and these guys will eat all of the vegetables and grass. so i'll bring them back so it's the same trick as we've seen before. i'll carry my cat over so that it doesn't eat my mouse just itself, right? it's just four places, but you can just bring one thing. that's completely fine. and then i will finally go back, so there's no conflict here. all right this was the original things that i had left at first so no problem there, and then i'll bring my four leftover... herbivores and leave them there. and i'm done! so i succeeded in this case, right? but that's not a proof, right? maybe... maybe i wouldn't need more, and certainly we've just seen okay finding your minimum vertex cover is not necessarily so easy so maybe let's do one other example. so let's say that i had just-- my wolf and-- my-- four herbivores that would get eaten by my wolf. if he has a chance. so my wolf would eat all of these, and none of these would attack each other, right? so i have my river so, i know that i need to have at least... the number of extra places should be at least the size of my minimum vertex cover, which here is easy to calculate. what is it brady? do you know? brady haran: it's one. it's one... brady haran: you should ... the wolf i'm very impressed. okay, so my wolf is my minimum vertex cover, so i need to bring my well first, right? that's the only thing i can do if i bring anything else. i'll be left with some conflict. so i bring my wolf over. i come back as i can only take one thing so let's say that i take the mouse. but they all really look the same, like the graph all looks the same for all of them, and these are cold different things, but it could have been called-- you know goat one, goat two, goat three and goat four. really, so i bring my mouse over so now i have no choice, but to bring the wolf back, right? otherwise my wolf would eat my mouse so... i bring the wolf back... and then, well, i'm kind of stuck, right? so either i bring one of these guys. but then my wolf would eat the two remaining guys. or i bring the wolf again, and i keep going like this, and i'm stuck. okay-- brady haran: minimum vertix cover doesn't work. it doesn't work. it doesn't work. so how much do you need how much bigger does it have to be? and the amazing thing is, you just need one more! at whatever the graph of conflicts is you will only need at most one more than your minimum vertex cover. and so the way to do it, is very simple you have these conflictual things that, you know, like, like your wolf here. so you just put all these conflictual indivi-- individuals in the boat with you at all times. so you can watch them, and then one by one you carry everything else. so here okay, my minimum... brady haran: so the wolf does every trip? yeah the wolf is with you the whole time. it does every trip back and forth. so, now let's say that i have the minimum vertex cover plus 1 seat extra, so i have 2 seats plus a farmer's seat. so i'll take my wolf in my mouse first, i'll leave the mouse there, bring back my wolf, take, now my goose with my wall leave my goose. come back with my wolf. take my goat in my wolf. but my go there, come back with my wolf, and then carry finally the last 8. and this will work no matter how big your vertex cover is, right? so, no matter how big it is you just keep it with you in your boat, and then one by one you carry everything else. that's pretty amazing, so you know that you need at least a minimum vertex cover, and you need at most the minimum vertex cover plus one to be able to do it. and the amazing thing is that distinguishing between both, knowing one you need one and not the other, is actually really hard. it's np-hard. so this is a recent result by three mathematicians: csobra , woegunger and hurkens. and yes, it's an amazing thing, this small difference of one is hard to determine. brady haran: so sometimes minimum vertex cover will do the trick. yeah, just like in the previous example. yeah. sometimes you need to go plus, one and to know which is which, just by looking at the graph. it's hard. so for certain classes of graphs we do know it, but for a general graph, we don't. and it's very hard. hard problem, actually if you can solve it so you'll not be a millionaire. so you know. something to try at home. brady haran: what's this problem ? so this is the alkene number of the graph? but so it relates because it's np-hard to determine whether you need a minimum vertex cover our-- the minimum vertex cover plus one, if you were able to come up with a polynomial time algorithm to determine for any graph, what it is. then you would prove that p is equal to np. so big problem.   this video was brought to you by the mathematical sciences research institute, one of the top places for mathematics in all the world. and whatever you think about the mathematics they do there... they must have the best of you of any maths institute in the world. san francisco bay, berkeley-- unbelievable. if you'd like to find out more about msri, i'll put some links in the description under the video. it's worth a look.