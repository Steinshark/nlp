vim won't make you more productive developer okay okay disclaimer i am playing devil's advocate i do believe vim makes me more efficient with some trade-off let's see we as developers spend a lot of our time on our text editor of choice yes choosing to use vim in my opinion ultimately won't make a huge difference with any other editor the majority of modern editors are more than capable to handle the task at hand and are much easier to get started with i can believe this this is true vim is definitely not easy to get started with absolutely you want to use them sure after you are vaguely familiar with it you will deep you'll dive deep into vim's ecosystem and soon learn about a variety of flavors of him comes in and many ways to manage plugins and configurations suddenly need the code in java well darn you need to expand your code completion syntax highlighting and additional functions like compilation after that going through all of that would you argue that you emerged out of its stronger better developer actually yes i would argue a really good point that you do actually end up a better developer in a sense that you know more of how the tools undergirding your system work and that's like a big thing that people always never really take into account which is when you press the green play button what happens what happens what is it calling how are you managing your dependencies people just never take those things into like into account and so using them makes you understand things at a different level i'm not saying it's a better level but you will be more capable than you were not using vim right it's just true sorry or would you say it was all but a distraction and time that could have been spent on coding and learning about other facets of programming again this is kind of like for me this is one of those false dichotomies that people make which is either you learn you you could figure and you do this or you could be good better at programming obviously you choose getting better at programming well actually no hold on time out time out there's a lot that goes into programming a lot of the time you don't spend programming you spend solving ancillary issues right issues that don't necessarily revolve around the main thing you're trying to solve but all that other crap and honestly becoming better at those means that you are going to become a better tools developer which i know a lot of people want to be a full-time tools developer it's very very hard and so one really great way to becoming a tools developer or an editor developer like what tj does working at sourcegraph on language stuff like all of that comes from understanding how these tools work right it doesn't it doesn't come it doesn't it does not come from you just pressing the green play button until somebody just says hey go do these things no you have to invest in how things work you know what i mean subscribe to tj please yeah agreed i use vim daily and i love it but it's kind of difficult for me to recommend it because it truly is a time sink this is i don't know i haven't touched my vim setup since i did my last rework so it's been like maybe two or three months since i've even thought about my config master your tools i agree with that always master your tools always master your tools it is one of the most important things you'll do even if the tools change understanding how they work like one thing that if you haven't written enough cli tools one thing you will not do when creating a cli tool is considered standard in and standard out properly and because you don't do that you're gonna like you're gonna leave on the table so many cool ways your tool could have worked because you're so busy being focused on this one thing oh i've mastered my tools really tell me more about it bisco what folks rave about is more about vim navigation and not vim itself and that is easily solved with vim mode which is available in most editors i do agree vim mode is or vim motions are really like it is such a great part about vim but also vim navigation is also it's more than just vim mode right like my file navigation right here this thing that i use all the time harpoon or this these are all or or alternate file alternate file walking up my jump list walking forward on my jump list like those are all very important aspects of using vim properly because if i want to take this thing throw that thing on there do i even have anything else in this project here let's grab the tamil there we go now i can oopsies i can go here take that i have two things in my list i can go really fast between them if i add a third thing i don't care what it was our third thing this file there we go because often i'm editing like three files right and when i'm editing three files this is fantastic i can go as fast i want between them right having like a really good amazing experience but we have this with vsco too while they technically took it from me okay someone made vs code harpoon and you don't have a jump list jump list is just not a thing in vs code i'm sorry you don't have jumpless you don't have jump lists okay i understand you want jumpless you don't got them but here's the so here's my two opinions on it vim motions you should always learn those those are just fantastic by themselves they're standalone they're fantastic they will always work for you in an amazing way vim the editor i i'm less sold on everyone needs to use them the editor i think that you should try it out i think you should use it long enough to understand what it is and what you have different between vs code and vim like i have used vs code on and off multiple times i've used vim on and off multiple times i've used neovim i've used do max bassmax just regular emacs i've played a lot with intellij did adam netbeans done them all ran the ran the gauntlet right and the thing is is that it's just not you learn what you like and you learn how to be super efficient and the thing is if you don't know how to use your editor that is more of a trav like tragedy than than anything else learn to use your editor knows that instead's not really available i think it just became available on linux and so for me like the big mantra here should not necessarily be vim but know your tools like how many times have i seen this really i've seen this happen too many times someone gets like someone you know gets a file right they they have some sort of something i don't know what it is right and they have something like this and they're just like oh man i have this log and now i need to get and i want to sum all these numbers right and they like just they don't even have the idea of using awk at all and i suck at using awk right i suck at using awk completely am i even correct on six okay i got it first try right i still even just do this i don't even know how to you know do the whole adding and awk i know it's there but i mean hey what the hell oh there's an extra new line at the end come on come on guy why is there an extra new line here why is there an extra new line why why porque maria why are you doing that why are you doing that now now look now you're embarrassing me in front of all my friends there we go are you embarrassing me in front of all my friends okay that was that was that was i'm sorry right like just knowing that you have a couple tools that work is really nice you know it's really nice to be able to have a couple tools to be able to do something and so often i'll find myself just using a couple little things right like tr is super useful just having that as like just a just a thing like just knowing that you can use tools and use them well is fantastic and for me this came from using vim right all of this stuff came from me using vim is because i i had to go learn different things like just knowing how to use grep knowing how to use find find is super useful knowing how to use xargs right adventuring outside of your editor your editor does not have to solve all of your problems you know i found that like me actually stepping away from using a terminal inside my editor actually made me have a slightly just better workflow i just use tmux now and because i started using tmux i developed tmux sessionizer so now i can go from say one of my projects right here and i can jump back to my other project and my other and i can just do this super fast or i can do in fuzzy find into it again so now i have two different projects with two different modes look at that and i can just jump back between them and because i also happen to have a really good like set of shortcuts i can jump on here copy this line jump to my other project going here and i can paste in that line from one project to the other project like just having a command over your system is worth way more than just simply using your editor and never knowing how anything works so that's my big takeaway from this is it's about knowing what's available and how to use it efficiently and it's less about specifically the editor you use and what i find is that many people default to vs code and never leave it and never learn how their system works just learn how it works please for the love of everything just learn how it works everything please please the name is the privation got him