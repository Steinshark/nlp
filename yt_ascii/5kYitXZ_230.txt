now look in 2021 when i myself started learning the code for the first time i had no idea what i was doing i had all these doubts i don't even have a computer science degree how can i possibly compete i'm not good at math how could i possibly learn to code and as we'll discuss later on in this video all of these fears were pretty laughable in all honesty and i'm not gonna lie the only reason i really stuck to it is because at the time i was so desperate to find a career that i could actually like i had tried banking i did a very prestigious internship at a major bank in helsinki in my home country and i absolutely hated it but what else was i going to do i devoted literally the past three years of my life into getting a job in banking into building my cv my cover letters my experience everything was geared towards going into a career in finance but i decided to throw it all away after i discovered coding coding just gave me this feeling that i was finally doing something exciting i was finally solving problems that i was actually excited about solving we which gave me this feeling that if i fail at this i literally don't know what i'm gonna do in my life so i forced myself to succeed so that i could actually get a job in this field so that i wouldn't have to go down this other path of finance which i knew i hated so much and if you don't have this fear to motivate you you need something else to keep you going and specifically that something else is a system of habits a system of daily practices a system of mindsets that if cultivated for a long enough period of time it would be unreasonable for you to not be successful because all these false beliefs about needing to be smart leaning to no matter all of this none of this is true i honestly believe that absolutely anyone can learn the code and i really hope and i really believe that if you stick to the habits that i'm gonna discuss in this video you are going to be able to be one of them so having number one is to assume you can code anything and act accordingly the more i have coded the more i have realized that is quite rarely the case that something is not technically possible to make with code and the reason why you should always assume that whatever idea you had in your mind is possible is because let's say you assume the opposite let's say you assume something is not possible what's going to happen right what's going to happen is that you're not even going to try because you assume that it's not possible whereas if you assume it's possible this is strange things start happening that you just find a way to get it done it's quite sad to see that in this day and age most people just have so little belief in their own abilities to code something amazing that they don't even try so if you just follow your instinct on this there might be 10 projects that you're thinking of building and in actuality maybe one of them is not possible right but if you follow your instinct you're probably going to assume that only let's say four of them are possible and six are not possible and this lack of belief leads you to not try to build these five ai projects that would actually be possible but you don't try because you don't believe it's possible so that's why it is always useful to assume that it's possible so what i want you to do is every time you're thinking of giving up or every time you're thinking that oh i can't do this so i'm just gonna give up i want you to imagine that i am holding your mom hostage and the only way that they're going to be released is if you figure out how to build that project even if you figure out how to do that thing if that were the case it would probably find a way to write and i really wish that i had this ability to think like this much much earlier and i just adopted the habit of just believing in myself even when it's irrational much much earlier and this also brings us to my second point which is to try to fail every time when you're coding as a habit you should simply be trying to run your code as many times as you can and just to fail as many times as you possibly can from observing other people there seems to be this phenomenon that people are afraid of error codes people are somehow afraid that their computer is going to explode or something if they code something wrong like listen your computer is not going to explode you're not going to destroy your entire code base with a couple of error code unless you're coding in c but why the hell would you want to code in c there's even a quote about this i can't remember the exact call like how it goes but it's something along the lines of the fastest way to increase your pace of success is to increase your pace of failure so to make this very practical for example right now i'm coding my first startup which is like a budgeting application and i need for example to figure out how to connect to banks via an api and a bunch of other things i have no idea how to do any of this and i still make the mistake of thinking like okay i don't know how to do this so then i end up procrastinating and all this but the time when i actually started figuring out how to do this is when i just adopted the mindset like right i'm just gonna keep running the code i'm just going to copy some starter code from the implementation or whatever we're running if it doesn't work and we're going to figure it out and to do this very diligent trial and error process i make progress the reason i've been slacking off on my startup series by the way it basically takes a lot longer to actually even get started than to make any kind of meaningful progress in a bigger project like this and the other reason is that i wanted to take some time to really figure out how i'm going to do the startup series and i came to the conclusion that i don't think it really fits in with this channel because i wanted to do it in a more like raw kind of vlog kind of style so i've actually released a second episode of my startup series but i'm gonna have this series on my second channel the second channel is called the founder from now on my second channel the founder is basically going to be thematically very similar to this channel except it's going to be in a more raw kind of log kind of format sort of more personal kind of way because i figured that not all of you who view this channel might be interested in that so if you are you can go on that channel i welcome you to subscribe to that channel and follow my journey in there and on this channel these regular videos that you'll be watching so far will continue unchanged going forward having another 3 is to think problem first i'd say that the biggest reason why people take months and years and i've even seen people say that they've been learning code for decades and still not many in progress which okay the biggest reason why people take this long without any making any meaningful progress because they're sort of approaching the process like in reverse in like the wrong kind of order let me explain i think for most people if you just decide like right i'm gonna learn python that probably isn't enough motivation for you to actually properly learn rather than just learning like feeling like you're learning without actually internalizing anything but you really actually learn them is by approaching your learning with the problem first you're first thinking about what is the problem that i actually want to solve with these skills what is the actual project i want to build what is the app i want to build and then after that figuring out what would i need to learn to solve this problem because when you're thinking about it in this kind of way like strange things just sort of happen in your brain because you're so passionate about solving this project or the problem that you're thinking about out like what happens when you go outside for a walk or in your coffee breaks you're still thinking about these things and you feel like well i have to learn this link what can i do to actually achieve this goal that i want to achieve i want you to adopt the habit of thinking about learning in a completely reverse order than what you might be used to while most courses and most teachers and most learning processes whatever think of learning as like theory first and then you use the theory to solve some problems what i want you to do is to first think about the problem and then think what would i need to learn to solve this problem and then you're going to be very very motivated to learn these things i guarantee you if you're just following a course even if you're just following my course and you're just doing their dumb practice projects that you don't really care about yourself you are not going to remember anything at the end of it because you won't have had any motivation to actually properly internalize the things that you're going through or reading or watching or whatever you should do those absolutely but then after that and this is what i also to emphasizing my course is that you should follow your curiosity and figure out ideally in advance what are the domains where you want to apply these skills the next very useful habit which i really wish i knew earlier because of how much unnecessary work it would have saved me is to be lazy it's very useful to approach your coding endeavors and your coding learning with the idea of trying to do as little unnecessary work as possible and instead sort of stand in the shoulders of giants like use the libraries use google use code that other people have written to like sort of leverage your way to be able to achieve much much more much faster imagine if every time you wanted to send a get request using python you'd have to go out there and like manually figure out how to access the ports in your computer using your code and like write all these code to like do it that would be pretty annoying right but luckily we have libraries like requests where you can literally just in a couple of lines of code send a get request using python code and better yeah even if you don't even know how to use this library you can literally just type on google or even better on chat dbt how to write a get request using python is literally going to give this to you that's the great thing about the programming in the community we can use libraries and modules that are built by other people so we don't have the so all the same problems that other people have already solved ourselves we can use their solutions use other people's code and then fast track our way to actually solving the problems that we are interested in yeah i won't go to the bins do all the situations where i wasted time learning something that i don't actually need to know in the name of being thorough and the name of just trying to learn everything to be the best as i can be the only thing that people at the end of the day will care about is does your program work or not does your app work or not does it do what it needs to do or not you obviously don't just want to copy something from the internet without any understanding about what the code is doing always understand the code that you're writing but don't go deeper than you really need to so the fifth habit is to think of your learning in terms of how would i explain this to a friend and this is massively powerful you can sort of insource that you're actually learning what you're learning rather than just learning or like performing as i like to say where you're making program dim some tutorials of course well when it actually comes time to use that information you actually don't know what you're doing by doing that you are forcing yourself to like organize this information in your brain in a way that actually makes sense because in order to explain something you need to have all the pieces together you need to actually understanding by having this youtube channel i've actually learned so much more of myself and even these topics that i teach like i python tutorials for example or when i'm explaining topics like this in the process of filming in the process of planning my video i realized that actually i didn't understand this as much as i thought and i'm not at all saying that you now need to go and start like holding youtube channel as awesome as having one is and i'm not even saying that you need to actually go and explain this to your mom your mom is probably not gonna care how python modules work or how freaking computer logic gates work or whatever all you really need to do is imagine yourself explaining it to someone i found myself doing this a lot whenever i'm learning anything just because if i'm interested enough in it i end up thinking about it sort of later on when i'm at the gym or whatever and i always tend to imagine myself explaining these things to my mom or my dad or someone else and it's only later that i realized that this process of doing this in my brain actually helped me learn this and solidify this information it's even some quote about this where if you can't explain something in a tweet you don't properly understanding and the same thing happened again as i was developing my python course i went into it thinking about it's gonna be easy i know python i've been coding in it for so long but actually while planning the course i realized actually some of the pieces i didn't actually understand as well as i thought i did i actually had to sit down and really like think about it is how i would explain this to my mom because i've literally approached it in the way like if my mom watched my course they should hopefully be able to understand python at the end of it and yes that is indeed a very not so subtle plug to my python course again if you're interested you can check out the description on my super peer account let me tell you making these courses was so much more works and i thought he would be but i'm yeah really happy the way it turned out really fulfilling as well and like i said also helped me learn if you want to hear my full story of how i learned to code my entire process or how i learned to call in four months and got a job i will leave the video where i go over this right here it's the most successful video on this channel more than 2.6 million views i think you guys have really really loved it so if you haven't seen it i'm really confident that you will absolutely love it so go watch it right there and for my startup update video from my second channel you can go check that out right here and subscribe to my second channel if you're interested in that kind of more blog style and raw content over there with that i'll see you in the next video