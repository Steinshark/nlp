don't mind me i'm just shuttling pictures of computer barb people's basis. it's not at all weird oh in the last video we talked about how do you find faces quickly in an image? that's i guess nowadays only half the story if you want to unlock a face of your phone or you want to unlock it with your computer or you want to just recognize who's in a picture? that's face recognition not face detection. we can't just train a classifier we can't just say here's 1,500 images of shawn and 1,500 images of mike what work out what the difference is because it will do that and then i'll say well here's a picture of steve and it will go mike you know because it's only got two options like so then we have to retrain it and you'll notice that when you sign up for your phone the first time and it recognizes your face it doesn't have to train a network right because that would take way too long. how does it do it? will be answer is basically we train a network to distinguish the differences between faces rather than actually recognizing individual faces i've got some printer here with his max here's me shawn and dave and so on right i've got lots of lots of computer power hosts in here so what i could do is i could say well here's a picture of max and here's a picture of mike so i have some you know some convolutional layers or something and i have a network here and that goes all the way deep network up to a classification but lights up with max or mike the problem is that we bring in shawn and everything's ruined you're put in a funny face that doesn't help the standard way of training a network which is giving it an image and a label and saying learn to be better with predicting that isn't going to work because we don't know how many people are going to use this system we can't put them all in all right, otherwise companies have been tapping you up for face pictures before they even release the phone we say well why don't we train a network to instead of saying bitties? definitely someone to just say these are their features, right? and hopefully when we if it's good at it, it will say that their features are different to someone else's features. that's the idea so what we're actually doing is we're training a network to separate people out let's say you put me in and this network that i'm designing has a lot of layers in it all the way along here but instead of outputting a single decision as to who this is it outputs a series of numbers so let's say a vector of numbers here like this i didn't maybe matter how many there are for now and what we're saying is when we put me in these numbers need to be different than when we put maxine or when we put let's see who else we got dave right when we put dave in his numbers come out different to mine, right? and it's those numbers which are kind of like a fingerprint for each person. so, how do we do this? well we use a special kind of learning or a special kind of loss function called a triplet loss right all this is one of the ways you can do it. there were a few so what we say is we say what we put in three images at once so we say here's two images of me and one image of dave and what we want to do if we want to change the network so that when we put these fujas through these two are rated very similar and these two pairs are rated is very different and actually what we'd usually do is we label this one and anchor this one a positive sample and this one a negative sample so we're saying but a distance between these two has to be very similar and the distance between these has to be very far apart so let's imagine it was only two numbers out. so we're putting ourselves on a sort of 2d. grid, right? so this this is variable one and this is available to that come out of our network, right? so this is our network like my anchor is is a picture of me a positive sample and a negative sample, which is dave right so i put them through the network and what we trained it to do is separate out the pictures of me in the pictures of dave so i maybe get put over here so i get a very high value for - and a very low value for number one. let's say all right dave gets a very high value for number one and a very low value for number two and then we start to repeat this process with different pairs of people and different positives and different negative samples. so let's say i mean, why did i shuffle these? that's a real? okay. so let's say two pictures of op miles. that's why he's not nice to avoid my printer and one picture of sean, right? so maybe what miles gets put over here near me, which is not so good but we'll get to that and then you're put over here like this and then maybe later on we have two pictures of me and one of rob which moves rob down here a little bit and then dave gets put over here and you know max gets put over here somewhere negative values are also allowed and what we're trying to do is make sure that everyone is nicely separate, okay? now if you do this for just a few people what you're actually doing is just classifying them but if you do this for thousands of different humans of all different ethnicities and different poses and different lighting conditions eventually the network is going to start to learn how to i mean actually that's not right because dave's far away from dave, right? so hopefully we start to come together but that's you've got a train for a long time and let's not let steve off. the hook is steve over here high value of two high value of one, whatever that means the interesting thing about this is we're not performing a classification which is performing a dimensionality reduction we're saying how do we represent people as just these two numbers right or in the case of actual? deployments of this maybe 128 or 256 numbers somewhere in this space when you put my face in i'll appear and when you put steve's face in it'll peer somewhere else and this actually solves a really nice problem right? it's called the one-shot learning problem how do we convince a phone to let me in having only seen one ever picture of my face? which is when i first, you know calibrated it the first time and the answer is we don't train a neural network to classify me we just use the existing network that we trained on thousands of thousands of people doing this to put me somewhere on here and then we record that location and then when i come in again and try and unlock the phone do does my new image go to the same place in this space as my last one? so let's say i get put over here with a high value of two and a low value of one i take another picture of myself on my camera and i come in over here and it goes well, that's pretty close okay, we'll let them unlock the phone. right but max comes in and gets put over here that's judged as to higher difference and access is denied, right this is how it works and this is really clever because it means that the actual decision making process on whether you're allowed in or not it's based on just the distance of these numbers right in which case is like 128 numbers. sure. this is susceptible to problems yeah so it is and this is one of the things that apple for example with their face id have yeah, if you bear in mind, of course haven't told me how they do it, right? so nor would they but we can presume it works something like this. we have a depth camera as well but they will have included in their training set pictures of people in masks and pictures of people with different hair and pictures of people in strange locations and things so the network learned to ignore those things, right? if you never showed it to the network, you're right b will just miss classifier all the time that's that's the problem if you only train this to separate me in day when you put steve in its behavior is going to be undefined right, so but that's kind of how neural networks work. they often undefined you hope that you put in a good enough training set so but for the vast majority 99.999% of cases it works very consistently and it says no they come out over here, which is not close enough so we're not unlocking the phone the interesting thing is it's much harder to gain this system than it is to gain a system based on simple decision-making, right? so yes, you might be able to trick this to unlock a phone once or twice, right? but if you try and recreate that same process with my face and unlock my phone, for example maybe you won't have as much luck because exactly how its network works isn't clear even to the people that chain to trained it which is quite kind of its strength in this case, right? maybe it's security for obscurity, right? maybe there's a certain thing you can hold up in front and it'll always unlock right? it doesn't seem very likely but we don't know until we find those things. so it's the air as an interesting one for further study i guess you were mentioning these features here people will ensure that as what can arise we've got all the hair we've got i mean, is that what's going on? okay, we don't know right so we call this feature space for latent space it's a kind of space just before classification where it's you've got features but these features in a deep network are or mean we've had a look at sort of inside and your network before and they kind of a sort of combinations of edges and things like this it is going to be bored leaf or something trained on human faces it's going to be broadly the kind of face related features because otherwise it wouldn't work as a as a trained network but exactly what it does. we don't know does it wait hairs more important than eye color i don't know and neither do the people that run it i expect they're trained with different haircuts so so that they forego this kind of issue but of course you have to be careful doing that, right? because if you can shave your head and still unlock the phone, is that as secure as a phone but you couldn't do that on my it's not usable so that's the other reason they do it, but you get the idea but you've noticed from this two dimensional space which i've done just for simplicity. it becomes difficult to separate out everyone in this space. so who else have we got? so you're in here you're in over here. so maybe your images are here blobs. images are here they start to take up quite a lot of room one got a few of them and that's a bit of a weird one, right? so that goes over here and and and maxes over here so it's getting a bit cluttered, right? so the decision on whether to unlock a phone becomes more difficult, so we don't usually do this in two dimensions we do it in 128 or 256 dimensions. so but spacing these things out for many many people is much much easier i would say that it's likely that someone on earth will be able to unlock someone's phone like this because they look similar enough to them but the chances of that person being the one that steals your phone is pretty slim so i really wouldn't worry about it too much and this pixel was going to be always three. so that's going to be 12 14 23 and now we fast forward while i do a bit of math in my head 8 on a computer. this is much much faster likely to be on a network which is limited in what it can connect to it's probably likely to be able to connect to other board management controllers on the same network