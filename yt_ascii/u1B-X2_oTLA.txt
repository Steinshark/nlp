all right the fall of stack overflow all right are you ready are you ready for this i don't think you guys are ready but here's the deal i think that if you didn't see this one coming you're probably using stack overflow okay first off just a couple quick notes about stack overflow obviously it's a place where you go to it's like it's like being able to combine all the best benefits of using reddit which is to get dunked on and the ability for people who have never programmed before to ask the same question 9 000 times like you get to put those two things together and this thing was like a hundred million dollar business absolutely brilliant on those people super impressed by it but we all knew that the fall was gonna happen the moment you saw an ll an llm right you saw that and you're just like when i saw when i opened up co-pilot for the first time i knew for a fact i never needed stack overflow again even for those dumb things where you search on the internet and it just happens to be the top it just happens to be the top you know resource over the past one and a half year stack overflow as long lost around 50 percent of its traffic this decline is similarly reflected in site usage with approximately 50 percent decrease in the number of questions and answers as well as the number of votes these posts receive think about the gold medal winning stack overflow question question answers that are just in shambles right now they're just in shambles their their karma is literally going to zero for value right now as we speak it's a fire sale and you can't sell oh man the charts below show the usage represented by a moving average of 49 days you know i'm not gonna lie to you that just seems seems like a strange number to choose okay seven sevens i guess we're gonna go with seven sevens the double luck look at this one page views 20 million like okay you see some nice like cyclical movements here i was in the wrong year this is about when co-pilot came out isn't it goodness gracious okay so it was right around in this time period this actually lines up fairly well for when things started to go on the downfall okay so november so we had the private the private beta which a lot of people got into but man and then it's just like it just tanked from there on out it's incredible to see this because all people were waiting for was a better search engine right you know it would be even more interesting is to see google's search trends like if you could see absolute numbers what happened to google searches as these new search engines are coming online are they going down i haven't been paying attention to any of their quarterly reports on the stock on the stock market okay i only i only look at netflix's quarterly report by the way and so it's like i'm very curious what has happened as well because theoretically that's going to be the same effect right google is just stack overflow just slightly more meta that's all it is right and so it's really interesting votes accepted votes look at this it looks like it's been going down for a long time though this has been people people they don't they're just asking questions and not even they they don't even want none of it man look at that look at that dude it is going so far down it's getting crushed i'm not even sure what this number means see but here's the here's the wild part something happened right here that really so that really tanked so this is probably the the thing that look at this it's because it's still growing right one can kind of say this is a gross we're in a growing pattern until right here this must have been co-pilot then right this is co-pilot and co-pilot truly started everything in motion that's my birthday that's why that is it but i think this what to me what this goes to show is that stack overflow was a tool that was great in its time but clearly not the right tool it just was the right tool in its time in its time period something that can integrate into your editor and give you the answer you're looking for right away was always a better tool you know what i mean like there's never been a better tool than that and i totally am on board in some sense with these ai tools like i really do think that these ai tools are very incredible but the danger i see about these ai tools is that it also teaches somebody something called learn helplessness if you've never seen a learned helplessness it's effectively where you can get a dog that doesn't know how to leave a pin that is a foot high it feels like it can't get out and there's like the and what happens effectively is that given enough kind of like defeating circumstances somebody cannot overcome their problems and so with these ai tools what's really phenomenal about them is that when you're thinking of an answer you get the answer but when you when when the tool itself becomes the pilot and not the co-pilot which is the case for a lot a lot of new people they don't have to go through the pain of just debugging these really annoying problems that they've created where they have to correct their logical thinking instead they're just trying to correct the prompt to get the right code to come out like until you kind of go through that that process it's really hard to really one-up your skills right it's like debugging is for me the truest sign of a senior engineer is not what they can build but what they can debug because debugging is when you actually is like it's like the truest understanding of a problem the best engineers i know no matter how horrible the code is can debug it and find a solution so fast especially for really large systems it's like incredible to watch somebody that's sitting there that is like okay so here's our c plus engine here's our javascript engine here's our you know here's our javascript we're having a bug right here it's actually traced all the way back inside of the bindings to the javascript engine where the bridge method right here that's but you know like they can just see so much further and they can put huge systems together and grab little points which is just really incredible to watch and so when you see someone that's super good at that absolutely love watching that and so for me that's the sign that's the truest mark of a senior engineer barring like social skills right and so i'm not trying to think of social skills i'm just thinking of purely engineering talent and i just think that that's great and ai yeah just like you said ai doesn't let you go deeper because ai is constantly kind of saving you from that going deeper and so for someone like me who i have a pretty dang good understanding of a lot of programming concepts co-pilot is a multiplier for me it makes me faster because it avoids a huge amount of boilerplate things i don't want to have to write things i don't want to have to do and i know when to enact it right i know how to prompt it in such a way to give all the boilerplate right away and i love that but the inverse of what i'm doing you know like if you didn't know what you're doing like you're gonna miss all these things right you're not actually going to learn those little teeny tiny technical logical thinking skills that are just genuinely required to become a great engineer you know like a good thing is we did this last night did this thing first try all i'm doing is using a unit 16 array buffer and going through there and trying to find duplicates by adjusting an index and then resetting the index and reinserting items until there is no duplicates for the entire length of the buffer and we did this first try and why did we do this first try because it was there's no problem right there's absolutely no problem to this because i've just done this type of problem 900 times right and so i just know it and so if co-pilot were to fill it out i could look at the answer copilot provided and go yeah that's how i would do it or no this is where they kind of went different why do they go different right and i think that's the big thing is that i have enough experience that when copilot gives me code i can ask why is it different than what i would do is it better than what i do rather than is this how you do it which is a fundamentally wrong question to ask when you're looking at code right that's not what you want to be asking right that that means you're doing something completely wrong you know that means you're you're solving something that's outside of your bounds but you're not picking anything out of it you're not getting something out of it anyways just some thoughts on it i'm really worried about i'm really worried about the whole ai revolution because i think that what it's ultimately going to do is it's ultimately going to create a entire entire lower section of just shitty engineers engineers that are incapable of like hurtling anything past the ai and i i think that's really sad right and then i think it's going to create an entire upper echelon of engineers that are going to move 10 times faster to the point where they're like unreachable if you will because they can start learning topics super super fast and so you kind of get this like i don't it's like a disparity in this really weird way and so the chad echelon if you will the giga chat echelon i don't know it just seems i mean for me it's obviously really great right it's really great because i can really use it to go fast you know what i mean how can you learn topics faster with ai i can overcome things really really fast like here's the deal is that when i'm i'm just gonna be i'm just just barely starting my o camel i don't even i don't even know what i called it a dune what the hell did i call the thing i'll have to even go find what i i did i name all my projects so stupid thinking it's funny and then i end up being really really upset at myself you know what i mean and so like shittier but when i'm using dune and i turn on copilot i could be like co-pilot how do i read a file and do with a with ocamel how do i do this how do i do this how do i do this and i can start getting things really really fast which makes my brain able to go okay okay this is how we do it okay this is how you do it okay this is how you do it and i can kind of go faster maybe i don't quite remember the syntax to do something i can start typing it out it just starts filling and go okay yeah match statements they have bars on this side okay we do this right you start moving faster in your head because you have something that just i don't have to stop what i'm doing i don't have to go to the internet i don't have to type in my question see the answer copy and paste it hope it's correct instead i kind of just get all of that i get the lsp combined with copilot all at once going yup this is both syntactically correct because my lsp isn't [ __ ] in the bed and when i run it it works right so it really aids in learning but you have to have that foundation to learn you know what i mean if you don't have that foundation it's it's really tough but i think this is a really good part someone just brought this up right here it's what's it called it's like right it's like it's like rapid shortcuts versus reading the docs yeah so there's something about reading the docs that is super important as well so right now i'm also in the process of learning htmx and just kind of going through it and i keep kind of hitting these roadblocks because what i really just need to do i just need to go through this and i just need the one by one read everything just so i'm exposed to all the possibilities that is available in htmx so that way at this point i know enough about it that i just simply need to broaden my knowledge so i understand every possibility with it and then from there do something meaningful do you know what i mean and so i i think i think there is a the thing is is co-pilot doesn't prevent documentation reading and if you don't read documentation because you have co-pilot then truly you're staying at only a surface letter level right you're truly at a surface level and that's okay sometimes that's all you want to be you know when i'm when i'm upgrading a website to use react on to use like a little chart that i've made for react i don't want to learn much about react i just want to get it done get the hell out of there never look at it again right if i'm in someone else's code base and all i want to do is just add one more function that looks like the rest of their code within the file copilot actually is really really helpful for mimicking the style that's already there now maybe it's a bad style but i want to be a good citizen even if a good citizen's leading the the whole file to hell right i still want to be a good citizen and so it's like okay i can kind of i can mimic what they would do and kind of see their perspective through the lens of an ai which i think is really again i think is really really cool hey i could help reading the docs absolutely if we can get docs if we can get effectively docs in an ai sense ported into an editor that would be so incredible i would love it i would love it anyways end of rant i know i haven't talked about ai stuff in a long time because i got so annoyed by the amount of ai you know what i mean like way too much ai articles i'm glad that the ai hype has started to slow down a little bit and now now it's kind of being relegated into the same thing as like nfts right where there's just a group of people that are just like hey i'm masturbation ai masturbation and they're like now they're kind of all by themselves and that's fantastic and now we're just like normal people not being inundated with ai constantly wait what yeah if you're learning how to program i think copilot will just spoon feed you whereas i think chad gpt is better because you're asking and you're interacting you know it doesn't help you learn it just get stuff done no no i can most certainly help you learn absolutely ai can help you learn what are you talking about dude just jump over to chat jeopardy and just be like oh gosh i mean these takes are just equally as bad right i mean these takes are no worse or better than the people that think ai will solve everyone's problems right they're just equally shitty takes that's all it is you know because you can be like this explain oh camel match a statements right and it's gonna go through here and it's going to give you something that's probably pretty good right you're gonna see some basic syntax you'll understand how it's working and the thing is is like it's like a tutorial generator which is pretty nice right because you get to you get to make the mistakes along the way which i think is really important i think that's the thing is that when you're when you read a tutorial you don't get to make any mistakes you get to simply go straight through oh you meant co-pilot okay yeah co-pilot i get that i'm worried about hallucinations absolutely you'll just have to fix those as code comes up i don't think i don't think like i don't think this is the end game right that's why i'm not worried about jobs disappearing i think just more i honestly think more jobs will become available right i think more jobs will become available as these ai tools allow more code to be written i have a theory that the more code written the more jobs available that's all there is to it right like you can't you can't somehow think that as we just we we're just gonna magically manage all this code right especially when there's you know when there's hallucinations and also and just like the thing is is even if your co-pilot gets 100 correct you still can fundamentally misunderstand the problem and interject a whole slew of bugs right like so it's not like it's somehow magically gone they're still there my job is basically to debug shitty ai code yep that's gonna be a real one i can't do you i actually there is literally a startup of ai doing ui they wanted the sponsor me to do a stream i've thought about it i've thought about it i've thought about it anyways very interesting the name is i i mean i see the benefits of ai but at the same time i'd be extremely careful if you're just learning how to code and using an ai maybe as like a question and answer you could certainly use i think chat gpt is a better learning assistant tool than copilot i think co-pilot will spoon feed you and ultimately just leave you fat and useless again