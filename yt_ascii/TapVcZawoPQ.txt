where do you start with the video? is that is that where we start here, asking where you start? that's a really good question to start with so when making a game specific video the first thing that i always research is what engine is the game using because there's a lot of standardization in the industry well, it's very common for most of the big games that are coming out to be on five or six major engines, especially because up keeping an engine, a custom engine, has become such an expensive task that most studios just license some other engine to use and often that means that, if there's a moving or modifying community, if there's a community of people who are examining previous games of the same engine there's a lot of things that you can learn from that that you can use -- even in older versions of the engine. very often when a new game comes out which is the first game in a new version of an engine the first thing that i will do is like research developer documentation for the previous version of the engine because they tend to be a lot of things that still cross over traditionally, a good number of pc games store the variables that the game uses to set up its graphics in a series of files. if you are lucky and these files are user reachable and that means that you can play around with them most engines have a dev console like the linux terminal like any console that you would think most of the time it is not user reachable sometimes it is so you just have to press the right letter and it comes out in older games it used to be always reachable, but sadly it's become a less common thing and, from there, it's a matter of experimenting. ok, like... let me let me let me find a very specific example frostbite, which is the engine used by the battlefield games battlefield games still allow user access to the console so a new battlefield game comes out. first thing i do is i know there's a variable that you can add to the launch commands of the exe that enables that developer console, and i start the game and i press the tilde button and it opens the console and then look ok let's see if there's autocomplete and i will start writing things and see if it's out of completing comments to me like like ok if i press tab, does it auto-complete it to me? okay so using that i will search if there's a command like "list all" "list command variables" or something to see if i can get a dump of all the things that are inside there that i can play around with if not, then it becomes a very painful process of going "a" and then pressing tab and autocomplete and see what comes out, and like taking screenshots and documenting all the little variables that are inside and then from the names of the variable experimenting trying to guess which ones are the ones that have to do with graphical fidelity, or graphic rendering in general and start changing values see if they can be changed in runtime, see if those values i can put in a certain file, and they will read them, and see what changes the game a lot of it is guesswork but once you sort of figure a certain engine, a lot of the games on the same engine thing tend to do something similar for metal gear solid 5, that's probably my favorite most proud case metal gear solid 5 runs in something they called the fox engine, and that engine wasn't made for pc, and you can often tell when an engine wasn't made for pc because it has no configuration files this all like a black box. it's all super contained but i really really like this game and i really wanted to make a video about it. so i was exploring what to do and i came through the game had a pretty big modding community. there were people making like model swaps there were people introducing like new weapons in the game through mods, and i kept telling myself like ok but how did they figure this out, like how they did this? so i started doing some detective work and this mod is taken from this mod that is taking from this mod that i started digging digging digging and found the first mods of the game and reverse google search them and trace them back to like a couple of forum posts so i searched that entire forum thread, and went through like the first post and started reading them and it was a post about like the performance of the game but halfway through like post 300 or something someone figured out how how they game encrypted its files and created like a set of commands that you could do to unencrypt them and someone made a tool about it and people started experimenting a modding with it and i remember finding this very specific post of someone who went "hey, i unencrypted the files." "i realized there's this folder here which has a bunch of lua scripts" which are what the game runs every time you change a graphical setting so and this is often how games do it like when you set shadows to low the game will search up a script and it will be like ok shadows to low means that this resolution set to this this resolution set to this and this draw distance is set to this so they have this on different pockets and i remember seeing that and being like oh, but now that i have access to this file i can change what that script does and i could instead of lowering the resolution of shadows. i could make them not draw shadows at all and i started doing this sort of thing and created basically a script that you could put in replace the normal script of the game and it will basically like not draw shadows and use a lower resolution texture than what it usually will do and it will be immediately obvious why the developer didn't do it? because it really screw up with the dynamic lighting system of the game. oh, but it before it was like a thirty five performance game. so yeah, that was amazing i remember dude. i was so proud of that i'm putting a video about it and someone else took what i did in the video and created a mod which was called like the potato metal gear mod or something in retrospective i wish i who could have thought of that and i could have published the mod instead of him but yeah that was that was an interesting contribution that i could do to that community and and i was a very fun process like vegan figuring out how to unencrypt it and seeing all those files there and play around with them that done it that always makes my day. so it was really fun the far cry games run on can't remember the name of the engine they use but it's the same one for all the far cry games it's just different versions of the same engine and it has configuration files that i read everything in xml. so i thought to myself oh, you can just probably find things there and change them, but it wouldn't really read it anything and i could not do like a really good video on several or most of our games for a while so i consulted with my discord community and someone reminded me that i think far cry 3 or 4 has a decent modding community so altogether, we started looking through the documentation of the modding community it had a bunch of encrypted configuration scripts that as most games do execute when you setup and the specific settings and people were putting around with those so i started trying to basically what i did with metal gear and figured it out if i could replace them and some very bold person for my discord just decided to copy all the variables from those hidden encrypted configuration files copy and paste them on the normal xm user reachable xml and the game read them all like the game read all the variables that were not supposed to be on that file perfectly flawlessly and from that discovery we were able to for example more dramatically modify the draw distance of different elements of the game so you will have enemies three meters in front of you and they will not be rendering and you can like it was obviously very impractical but it was something that you could play around with for extra performance and from that we made some interesting discoveries so an lod system in video games is basically, and i'm in a nutshell because it's a very big topic is when you create different versions of the models inside games that have different quantities of polygons or different quantities of details and then with low detail ones you display far off into the distance and if that things gets close to you you gradually replace them for more details. that way you can serve the pcs resources and player doesn't really have to notice that that is happening. but those usually are set to distances so x quantity of pixels you load a different model double x quantity of pixels you blow a different model when you play around with that interesting things happen, for example in the far cry games a few different objects seem to be in different pockets in terms of if they are drawn or not or if the use of lower version model or not i think higher priority buckets or to run farther which are critical things that the player needs to notice and not so important stuff tends to be not rendered at the same distance now there's the game called far cry primal which a happens during the stone age. we noticed that the clothing of the caveman was in a different pocket that the cavemen themselves and that means that if you set a really low value of your distance if you were a certain distance from the caveman they will be completely naked until you get close to them and the clothes will render so you will see them completely naked at a distance and we'll try to get clothes and the clothes and the clothes will appear and it's a makes you wonder how they sort of created this game, but those are the interesting things that happen when you sort of play around with the inside variables of a game that you were not supposed to reach in the first place and to their credit these variables that the far cry engine reads directly from the user reachable xml they have not been fixed to this day. the last game in the far cry franchise was released was for cry nuan and they just copied over the same set of variables that i've been using forever before cry video work at the first try. so thank you for that far cry team. thank you yourself. please continue doing that that is just very very fun that you can poke around in that eighty ninety percent of the work that i do is simply figuring out what are the variables that the game is loading? when you set up a graphical setting or when the engine is loading on the first time trying to see where the names try to see where the maximum and minimum values and trying to see if you can make them breathe and the main values and see what happens from there it would be i think will be healthier for the entire pc gaming ecosystem if we get more and more games that allow that sort of control over most particles a good example of someone who does that is it so the new newest versions of the eat engine used by the latest doom and wolfenstein games they have an user which able developer console it's you set over a variable and the lunch comments of the game and you press tilde and it opens up in most games and from there you can not only play with a lot of the graphical settings but also activate things like god mode or infinite ammo like you can use it for actual cheats but what i have always liked about this games is that if you open up the dev console and you type anything you get a message that says you have enabled dev mode and you will not get any achievements on the game like and i think that's a fair deal. you can play around with the game. all you want you can a custom settings you can play around with your graphical settings in no supported ways the game is just making sure you're not cheating your way into achievements seems like a fair deal to me and i and i wish more games that this because this is something that you can all other players can get a lot of benefit out of and iii have discovered a couple of things on the on that that console that makes both the new doom and the new wolfenstein games way more accessible and low-end pcs so that is a tradition that i that i hope it continues the worst cases are the games that are complete just bad ports from consoles they will try to grab the code base from the console and slight adapted as best as possible with limited resources to pc that means not many graphical settings. that means often that you will find quirks there's two two examples come to mind near automata and the latest monster hunter game both of this games and this is not me saying it this is that was a community discovery what are people started poking around the games and started realizing that the games use timing systems that are very common for consoles, but when you use that sort of system to calculate your timing on a pc. it causes stuttering and so when you notice stuff like that you're like it's a little bit irritating, especially because there's a tool that the guy who did the discovery developed a tool that will in real time intersect the calls that the game will be doing on the code and replaced them with calls that were more efficient for pc and he has been he added a lot of different things to this tool that improved it improved the cpu performance of monster hunter by a lot and that allow things like changing the global illumination for nier automata which completely makes the game playable in like anything that i owned. otherwise, it would have been impossible so for time to time the work is caught out to me by someone else who make this marvelous pieces of software but these pieces of software sort of exist because someone noticed that the code was written specifically for consul and he still has two quirks related to it and it's all been to the community to fix it, which isn't exactly morally right, but at least i'm glad that it exists so we can get to enjoy this games right. these are the kind of things that people who are writing computer games not me people who know what they're doing writing computer games are thinking about right. how can we do post-processing like motion blur and bloom and other kinds of filters that look good in a game, but don't grind a whole thing to a