in this video i'm going to be showing you a very peculiar feature that a lot of code editors have that we just don't use that often and this is something called noka and it stands for no quality assurance and what's really cool about this is that it allows us to write terrible code and the linta ignores the terrible code that we're writing for example if we go ahead and import something such as random and os and then we use this we type in random dot random and os.cpu count you'll notice that when we go over this comma it's going to say multiple imports on one line and it's a pep recommendation that we separate this but in case for some reason we do want to keep this we can go ahead and provide the comment of noka and it actually suppresses that recommendation so as you can see right there it helps us get away with writing non-conventional code such as having two imports statement but this can also be used in other scenarios such as importing something later such as numpy and let's pretend we want to use numpy we can say numpy dot array blah blah blah we create an empty numpy array if we go over the import statement it's going to say module level import is not at the top of the file and that's because all imports in general should be placed at the top of the file but we can also suppress this by adding noka or no quality assurance which tells the program or it helps the code editor that we know this is wrong and that the linta should ignore that and another example on how we can use this is if we create a function such as hello and not okay not hell but hello and we're just going to pass that and instead of giving it two new lines we're just going to go ahead and create the main check right below it and say pass usually you would get this lint error that we're expecting two blank lines after the class or function but if we go ahead and type in noka it's going to ignore that as well and you can place this anywhere that you see a lint message and it will take care of that and we can also do it for hello if we want we can type in noka and as you can see we have some very ugly code but we have no lint messages so that's exactly what the no quality assurance comma does and it works in pycharm and it should work in visual studio code and any other kind of code editor that supports linting but there's one thing to note and that is that if you go ahead and format your code in pycharm it is going to place everything into the proper position because that's what the formatting option does but it will still ignore conventions such as the import statements and other weird linting messages that you want to ignore but anyways that's actually all i wanted to cover in today's lesson do let me know in the comment section down below if you already knew of this feature or if you have some other cool feature that you would like to be mentioned on this channel but with that being said as always guys thanks for watching and i'll see you in the next video