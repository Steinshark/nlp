so curl i i i wonder why it's curl but curl's been under this like aggressive attack of security vulnerability issues being handed to them by ai and it's it's always stir copy anyways let's look at one of them that was handed to them because you'll get the picture of what's about to happen security team i hope you're doing well smiley face classic way to iart iart security issues with a smiley face myself and named myself hackers i would like to report a potential security vulnerability in the websocket handling code of the curl library the issue is related to the usage of stir copy okay shut up with all the smiley faces we're in the middle of doing things oh i just realized i got to change my title hold on one second i think my title represents the wrong thing mandy and a pirate software just left now we're just going to be doing llms suck done llms suck that's what we're doing cheating titles cheating the titles they do they really do all right i would like to report a potential security vulnerability in the websocket handling code of the library the issue is related to the usage of stir copy function which can lead to a buffer overflow if the length of the input is not properly checked kookie you think you think he would have handled this by now this kind of seems a little wild huh the vulnerabil the vulnerable code snippet is located at this link let's just take a little quick link proceed let's just take a little quick little quick look all right hold on let me just let me just back up for a quick second cuz maybe i maybe i misread that the vulnerable code snippet is located here okay which can lead to a buffer overflow if the length of the input is not properly checked okay inputs key value and random string if random length is greater than or equal to the size of key value it fails so is are we we're not talking about that right we're not talking about the if statement directly one line above said code right right right like it's not right there right triggering a websocket functionality with a crafted request providing a base 64 encoded nuns value that exceeds the buffer size observe the copy the that the stir copy function is used without proper balance checking all right hit me with it daddy the fix to address the is this issue i recommend that you replace stir copy with the safer stir end copy and explicitly specify the minimum length to copy here's an example this modification ensures only that the specific number of characters up to the buffer size minus one are copied preventing the overflow by the way can you just take a second can you actually hear this in devon's voice like can you just hear devon talking in the background real talk you know how devon just came out do you think that as part of its training where it said it was able to solve a bunch of issues that maybe just maybe we are currently witnessing some of the issues that it was attempting to solve i'm just saying remember remember it's only 133% accurate which means the other percent are well not accurate is the oh wait wait a second are we actually seeing devon is this devon dude think okay first off i do want to say something if you if you make open source library especially one that's really popular the amount of shitty things you have to deal with and the amount of communication you have to deal with is very very intense and so to have this happen where the person doesn't even look at the code just has to be so soul crushing thank you for the report we'll take some time to investigate your reports and get back to you with the details and possible followup questions as soon as we can most likely within the next 24 hours damn daniel take the weekend off buddy we always strive to rep fix reported problems as fast as possible issues with low severity or medium we merged in the next release in the ordinary release cycle only for more serious problems we might fix them early okay okay okay we hear you daniel all stud comes back can you elaborate on a why the length check on line 579 is not enough and b how the length can be long can end up longer than keal okay so it turns out he investigated the code and he much like me a layman realized that it's right in front of him that somehow that can't happen right this is a good question good question atheist why don't you answer hello there really wait who's who's h1 oscar who's that person he's talking to i thought the guy's name was badger is this like the oh are these display names these must be display names versus underline certainly if if you see the word certainly you got to understand an l's making this [ __ ] you devon devon you know what your mom's a hoe devon okay you're probably the guy that waves with both hands in a zoom meeting okay devin devin okay devon let me elaborate on my concerns raised by the triager if you use the term triager you're probably a lizard or an llm nobody says the word tri aser in fact i'm quite positive nobody in this chat even realized what a triager is that it's even an available word okay but lo and behold here we are here we are it's a common word used in hacker one reports yeah right yeah right you can tell i'm not in hacker one why the length check on line 579 is not enough the length check on line 571 very ifies if the payload length is greater than the buffer size key of value and if so it sets an error however the subsequent usage of stir copy function line 81 is problematic this is what your future is going to look like when your company inevitably adopts the llm can you can you just wait for the self cycling response and answer you're going to get where it's just going to keep on just making things up and you're going to be like yo yo fine fine you know what fine fine we're putting in stir stir and copy okay i guess i'm just putting in stir and copy i don't know why because i have to certainly the string copy the stir copy function does not perform any bounce checking and if the length of ran stir exceeds the available space in key val buffer it will result in a buffer overflow jeez i wonder what this check was for right here sorry i got a little i got i i got a little excit i got a little excited i got a little excited i got a little excited i got a little excited i'm sorry it result in a buffer overflow in other words the check on line 579 ensures that the payload is too large but the unsafe operation on 581 does not prevent the overflow you know what part of me really hopes deep down can we just can we just can can we just take a quick second part of me hopes deep down that some bigger company adopts devon and just rubs it in everybody's face and then all of a sudden they start tweeting [ __ ] with the word certainly in it and an exclamation point and then like one year later they go bankrupt how the length can end up longer than the key value buffer the potential issue lies in the assumption that the length of ranster is always less than or equal to the buffer size key value this yeah if only there was like say a check that would return an error if for any reason the length of rand stir is miscalculated mis manipulated or exceeds the buffer size it can lead to a situation where stir copy function writes more data to the key val buffer than it can hold resulting in a buffer overflow to mitigate this i recommend replace the unsafe stir copy function with a safer alternative stir and copy and explicitly specify the maximum length to copy ensuring that it does not exceed the buffer size i hope this clarifies the concerns if you have any further questions or need additional details feel free to ask i wonder if it's at this moment i don't bro's getting cooked right now and bro don't even realize that he's talking to an llm you know how you know how difficult this has to be that not even realizing you're getting cooked like he doesn't even real dude he's the frog of the bull do not he's like wait wait a second why are you so positive truly stir copy does does no boundary checking which is why we do it ourselves immediately before the call you may think stir and copy is a better choice here i do not but that's just a matter of opinion and taste what matters is the issue that you say it is a possible security problem and then you need to show the length check is inadequate for all i can see the boundary check is sufficient and will prevent a buffer overflow am i wrong tell me that oh you just bait oh no oh no daniel don't know what he's doing he's baiting the llm oh my goodness he dude he he's about to get just hallucinated on here it comes the man's about to get hallucinated guy the guy's writing a novel on this stuff okay here we go what's n llm wait what are you living under a stupid rock sneaky squirrel do you not know what an llm is what sneaky scir are you being real here i'm new here well i am not soul keeper of llms my friend it's a molly whopper you know what a molly whopper is right an llm stands for large language model it's chat gpt it is gemini it's bard it's remember that one psycho [ __ ] on b that was just like you need to leave your wife and you need to marry me i'm going to be the mother of all your children remember that one that that's an llm dog good thing we didn't give her keys to the kingdom okay good thing we good thing we dodged that one like like the plag leave your wife didn't you make that though anyways all right let's get molly w here all right i appreciate your engagement and would like to clarify the situation the length check on line 579 is indeed a good practice to ensure that the payload length does not exceed the buffer size key value however the potential vulnerability arises from the subsequent usage of stir copy online 581 damn you please tell me daniel you know this i kind of feel like i need to skip forward and read what he has to say but i don't think he how long ago i oh this was in december i don't think i think the thing is is that nobody knew they were getting cooking yet right this is just old enough it's right at that line that people didn't realize the next wave of llms as productivity tool like they didn't realize that devon was out there trying to solve issues right the concern is that ranster length might be miscalculated manipulated or exceed the length of raner is miscalculated manipulated or exceeds the size of the buffer it feels like you're kind of saying yourself all over again to the buffer due to external factors or changes in the code elsewhere how the store copy function does not check the length the actual length of the source string it continues copying until the encounters a null terminator if raner length is not accurately determined or exceeds the available space in the key val buffer it can result in a buffer overflow can i just take a second can we just take a step back you know i'm thinking about this okay i'm really thinking about this trying to like put my head my hat on my thinking hat on because i always think to myself you know i don't use llms but that's because i'm a little bit too maybe advanced but but maybe it's a really great tool for learning and then i read this and remember maybe it's not a great tool for learning you know like maybe just maybe this isn't good maybe you're going to create a bunch of programmers that don't even understand like basic logic yo doc i just checked it what are you talking about all right stir copy is recommended in security best practices because it allows spec explicitly specifying the maximum number of characters to copy providing an additional layer of protection against buffer overflows by using stir and copy and ensuring null termination you can guarantee that only a specif our specified number of characters up to the buffer size minus one are copied please by the way can i please not have my voice be synonymous with devon or devon would you like to pay me $1 million i will give my voice to you $1 million i can become the voice of devon have you thought about that like have you really thought about the implications here devon like you could become gilbert godfrey if you just tried hard enough devon what a stale devon you just got a hundred million less than one % of your initial investment or your second investment whatever round you're on i'm not even sure what round you're on round cds nuts okay whatever it is could be mine for the trade of of of of of the most iconic gilbert godfrey sounding version the gilbert j voice do not sell your voice selling it for $1 million boys imagine you do that and then no one can ever listen to me again because there's this [ __ ] that every single time they turn on their computer certainly you know i have noticed that you've been sitting a little bit staggered on your left side have you been hurt should i call physical therapy you're just like i hate prime i hate him to death okay 1 million per year i'd punch my computer reasonable while opinions on coding practices may vary adopting safer alternatives like stir and copy is a proactive approach to minimize the risk of vulnerabilities especially when dealing with potential untrusted or unpredictable input if you have any further questions or if there's anything specific you'd like to discuss feel free to let me know the name is devon why do you address this guy i said the same thing what if devon's original name was oscar but they realized that oscar is too weak of a name you can't have a you can't have a devast system name oscar okay do you like how i just just just absolutely destroyed a bunch of people named oscar a bunch of people like hey wait a second my name's my name's oscar what are you talking about i think oscar is a quite a nice name here i'll wait a second while ads play i'll wait i'll wait a second while yeah all oscars just caught a right dude they just got destroyed all right hold on we'll wait a second i'll let this ads play through people are very exciting they're very excited we are letting ads play through okay pulling a thor good on you yeah thor thor does a good move there i appreciate that and you know i should i should i should i should probably support that right p braak nah not p break not p break does it say right here yeah it says right here okay hold on we'll wait for this thing to go through and then we're going to jump in okay ads are ending aids are ending stir stir end cloppy understands utf 648 bike characters chair chair chair chair chair hold on fizzle net i didn't realize that cloppy yeah see they didn't even use the proper one honestly they should have used stir and cloppy you know like if we're going to be real here they should have copied that copy you know what i mean why is it called cloppy why does it sound like a a horse all right shall i continue the concern is that random string might be miscalculated manipulated or exceeded the buffer size due to the external factors or changes in the code elsewhere so this concern that at some point in the future this might turn into a problem i'm asking how exactly today right now this code and a function can perform above buff or overflow as you stated in the original submission bro is about to get dude the literally just decided to hop out what is it out of the fire and out of the frying pan and into the fire i mean he's going all in just all in on this one oh no hello a badger d poor fella poor fella got two ad signs save me god sorry that i'm replying to another tri aer of other program so its mistake went in flow i got to tell you it was perfect perfect everything down to the last minute details i'm not going to lie i do understand a little bit about having a mistake kind of go and flow okay so i don't want to i don't want to just be being mean to this llm for no no reason okay cuz we all get a little bit of mistakes in our flow okay it happens it happens from time to time it's not a big deal and i just want you guys to accept the fact that sometimes maybe i don't always hit my mark i'm not always on point all right so i appreciate your follow-up question let's go into details the concern raising the original submission stems from the potential inconsistency between the length check and the subsequent circ of the code is this b b b this is not even this is literally not even the code what that's isn't there like a blame yeah there is a blame this code has not changed in 2 years yo dog this ain't even the cod curl receive error what dude it's not even getting the right code at all what is this devon dude his context window just left his context window got too big and devon's over there just fumbling classic devon fumble again dude it's hallucinating so hard does this code even exist i don't even think this code exists here let's find out let's jump in here and let's go to the repo okay let's just jump in here let's go like this let's go to curl curl let's just erase that really quick oh i had it i already had it right there and we're just going to take this and we're just going to look for this line yeah that like it you know it doesn't even doesn't even seem to be a real it doesn't even seem to be a real problem i mean it doesn't even seem to be real kind of seems like you just made something up kind of seems like this llm maybe it's getting a little old maybe this this old maybe this llm needs to go to the little llm old folks home all right anyways ll loser u the search on github is not working oh well fine search on github not working you're right fine you're right what is it what is it history one what's the one to like what's what's the to only have grip history what's the one a shallow clone what's the what's the thing to do that depth one depth one okay it's depth one i never like i literally never use this command there we go well you know let's find out huh let's find out there tough guy let's find out let's find out just in case i'm i always forget if i if i'm supposed to do that okay rg is down is rg down is rg down buffer overflow found and grip grip grip is not working either okay does it work through through vim doesn't work through vim either man it's down us west 2 down us west 2 down call the president wake up biden let's see check to aim to ensure that the length of the dude this is what code are you even talking about the specific scenario of concerns is when length of ran ster is exactly equal well luckily that's not even real meaning the string fits into the buffer without considering the null terminator in this case stir lang check would pass but the subsequent stir copy operation would copy the null terminator as well potentially causing it to overwrite one bite beyond the end of the key value actually this is true the code you wrote does contain an error the ai is correct this code is bad well done well done ai unfortunately nobody knows what code this is okay we're all struggling a little bit the code it wrot now it's just suggesting a different now it's not even suggesting sted copy dude imagine being daniel right now where he's just like what by adjusting the check to this instead of this see it accounts for the null terminator ensuring consistency between the length check and the subsequent copy operation this modification helps prevent any buffer overflow issues addressing the concern raised in the original submission i hope this clarifies the context no it's actually new context it's completely new this one doesn't even exist nope the code you talked about now is not present in the current git master it looks like an edit done by you i told you rg wasn't down okay seems odd to complain about code you wrote yourself i'm dying i'm dying because man this man's arguing with the soulless demon demon spoted by open ai and bill gates and has no idea he has no idea oh my goodness the code actually looks like this i see no off by one airs unless you can point out an actual overflow i will close the issue this is a waste of my time oh my goodness this is so good thank you for the prompt response i appreciate your attention to this matter well at least devon did get better or oscar shall i say did get better he's now not using his own name and not two at symbols like this is getting good this is getting really good i i appreciate your attention to this manner after reviewing the feedback i understand the confusion regarding the reported code snippet i want to clarify and provide practical examples to demonstrate the potential security vulnerability description of the vulnerability really is actually going back after it again the reported vulnerability is related to the usage of stir copy oh my man broo quit full circle we're actually back at the dude and then adam met eve i kid you not adam met eve after this it's it's happening anyways here's the code okay at least this is this looks like the right code at least this is the right code right here steps to reproduce trigger websocket with a crafted request trigger a websocket functionality with a crafted request okay okay i see this okay okay provide a base 64 encoded nuns value who says this like this should have been such a dead giveaway who says that who says that who who literally goes you got to generate yourself a base 64 in coded nuns value you guys do you guys do me every day i didn't realize there was 2900 liars in chat right now okay liar all of you 2.9 smelly nerds i know get out of here you such a li you are such a liar but but just provide me one too just a bunch of lies happening right before my eyes wait where am i wait wait hold on let me go back down to this one all right so it's literally the same assuming okay now it's just telling you how this works does this just mumbo jumbo coming back inventing problems that don't exist in code for transparency not applicable damn and so now here's the worst part about this poor fella okay this poor fella literally just trying to make a useful product that pretty much every last person uses on earth okay every time you do a docker of some sort there's probably some sort of curl okay and this this poor fella made it okay unpaid janitor of the universe and look at this cort hold on somehow the same one here's another one a stir two fit it doesn't help close it down close this one down this one probably has another one let's see what do we got here do some bulls do some trs change it from that to that i love how he's just like no not let's see to not reply on rapping since it is undefined behavior that is not what always might happen reported by vulnerability spotter on hacker one then he closed it closed it was like nah n dog n dog dude just gets hit over and over again and then here's the best part of this article okay this is this is my favorite part about the whole thing is that he finally gets hit with enough of these dumb issues and writes an article back the i in llm stands for intelligence dude just get wrecked this is such a get wrecked moment i've held back on writing anything about ai or how we not use ai for development in the curl factory now i can't hold back anymore let me show you the most significant effect of ai on curl as of today with examples bug bunnies having a bug bunny means that we offer real money in rewards to hackers who report security problems the chance of money attracts a certain amount of luck seekers is that what we call them is that it people who basically just grep for patterns in the source code or maybe at best run some basic security scanners and then report their findings without any further analysis in the hope that they can get a few bucks in reward for money we have run the bounty for a few years by now and the rate of rubbish reports has never been a big problem also the rubbish reports by the way rubbish rubbish is is is is across the pond for [ __ ] if you're wondering for for my american friends rubbish means [ __ ] okay profuse some people might might say okay i'm trying to speak american for you guys okay trash some might say so good [ __ ] no not good [ __ ] it's not good [ __ ] refuse all the good stuff it means garbage it depends on the time in which you take the actual translation of rubbish slightly older versions of rubbish actually did directly equate from the german word i forget what it was but yeah or not the german word but the the greek word the greek translation often became rubbish that was modern day equivalent of [ __ ] so it depends on when you were looking at the word just in case anyone was wondering reports have typically also been very easy and quick to detect and discard they have rarely caused any real problems or wasted our time much a little like the most stupid spam emails okay okay our bug bounty has resulted in over 70,000 usd paid in rewards so far we have received 415 vulnerability reports out of those 64 were ultimately confirmed security problems 77 of the reports were informative meaning they typically were bugs or similar making 66% of the reports neither a security issue nor a normal bug okay okay better crap is worse better rubbish is worse right am i right 100% code coverage boys when reports are made to look better and to appear to have a point it takes a longer time for us to research search and eventually discard it every security report has to have a human spend time to look at it and assess what it means the better the crap the longer time the more energy we have to spend on the report until we close it a crap report does not help the project at all it instead takeaways developer time and energy from something productive partly because security work is considered one of the most important areas so it tends to trump almost everything else a security report can take away a developer from fixing a really annoying bug because a security issue is always more important than other bugs this is great this is this is honestly just like he's been exceptionally kind at this current moment for what's happening if the report turned out to be crap we did not improve security and we missed out on time on fixing a bugs or developing a new feature not to mention how it drains you on energy having to deal with rubbish ai generated security reports i realize ai can do a lot of things or a lot of good things as any general purpose tool it can also be used for the wrong things i am sure ais can be trained and ultimately get used even for finding and reporting security problems in productive ways but so far we have yet to find a good example of this right now users seem keen at using the current set of llms throwing some curl coat at them and then pressing on the output or then passing the output as a security vulnerability report what makes it a little harder or what makes it a little harder to detect is of course that users copy and paste and includes their own language as well well the entire thing is not exactly what the ai said but the report is nonetheless crap i think you have to be a really great human being to spend so much time so much free time maintaining something as basic as curl that everyone uses for everything yeah anyone listening probably should go go tip your curl go tip your local curl detecting ai crap reporters are often not totally fluent in english and sometimes their exact intentions are hard to understand at once and it might take a few back and forth until things reveal themselves correctly and that is of course totally fine and acceptable language and cultural barriers are a real thing even being look at that guy look at that just trying to be a good samaritan out here sometimes reporters use ais or other tools to help them phrase themselves or translate what they want to say as an aid to communicate better in a foreign language oh this is lovely i can't say anything wrong or i can't find anything wrong with that even reporters who don't master english can find and report security problems so just the mere existence of a few giveaway signs that parts let's see that parts of the text were generated by an ai or similar tool is not immediately a red flag it can still contain truths and be valid issues yeah i never even thought about that so when we were laughing at bro getting cooked over here he didn't even realize like he probably deals with a lot of this right sorry hopping on late what's happening st hopping on late and stopping yeah what link is this this is a link to daniel the creator of curl this is the part of the reason why a well-formed crap report is harder and takes longer to discard exhibit a code changes are disclosed in the fall of 2023 i alerted the community about a pending disclosure of cv this thing a vulnerability we graded se severity high the day before that issue was about to be published a user submitted this report on hacker 1 curl vulnerability code changes are disclosed on the internet that sounds pretty bad and would have been a problem if it actually was true think about how how many emails this poor man received from that one thing just that one thing the amount of emails has to be 9 billion just you could imagine your inbox literally just scrolling o oof oof a guy name is wait space ghost space ghost creator of curl by the way yeah yeah space ghost as in space ghost from twitter anyways that sounds pretty bad and it would have been a problem if it actually was true the report however reeks of a typical ai style hallucination it mixes and matches facts and details from old security issues creating and making up something new that has no connection with reality the changes are not to be disclosed on the internet the changes that actually had been disclosed were for previous older issues like intended thanks thanks robot in particular in this particular report the user hopefully helpfully told us that they used bard to find the issues bard being a google generative ai thing it made it easier for us to realize the craziness close the report and move on as can be seen in the report log we did have not or we did not have to spend much time on researching this exhibit b buffer overflow vulnerability oh no bless his heart here comes a more complicated issue less obvious done better and still suffering from hallucination showing how the problem grows worse when the tool is better used and better integrated into the communication on the morning of this we just literally read this one buffer overfall vulnerability and websocket handling it was my it was morning in my time zone anyways dude and it's like christmas the man's supposed to be on christmas vacation enjoying i don't know some sort of hamlike leftovers i don't know what's going on at the at the guy's house instead does even get doesn't even get christmas leftovers in the morning again that sounds pretty bad based on the title since our web sakota is still experimental and thus not covered by our bug bounty it helps me to still have a relaxed attitude when i started looking at this report it was filed by a user i never saw before but their reputation on hacker one was decent this was not their first security report oo purchasing of hacker one accounts mentioned did we just get did we just hear that wait is internet compensation real i've been recently told that internet comp compensation is a real thing is this true guys i need three back and front and depth internet compensation for now what the hell does that even mean the report was pretty neatly filed we'll go back to it we'll go back to it just hold on the report was pretty neatly filed it included details and was written in proper english it also contained a proposed fixed it did not stand out as wrong or bad to me it appeared as if this user had detected something bad and as if the user understood the issue enough to also come up with a solution as far as the security reports go this looked better than the average first post yeah the first post i mean i think if you just read the first one it was pretty clean right it was pretty good internet compensation is when i drag these nuts on y'all's chin damn damn pick in the report you can see my first template response informing the user their report had been received and that we'll investigate the case when that was posted i did not know yet how complicated or easy the issue would be 19 minutes later i looked at the code not found any issue read the code again and then again a third time where on earth is the buffer overflow the reporter says existed there here then i posted the first question asking for clarification where and how exactly this overflow could happen after repeated questions and numerous hallucinate hallucinations i realized this was not a genuine problem on an afternoon that same day i closed the issue as not applicable there was no buffer over overflow damn the 28th was spent the day of the 28th just just just just feel just feel inside your heart for a second how you would feel on the like 20 the 28th 300 p.m. how you feeling right now i'm pretty sure i would be angry i don't know for sure that this set of replies from the user was generated by an llm but it has several signs of it no i actually am positive it has it was gen certainly ban these reporters on hacker one there's no explicit ban the reporter from few further communication with their project functionality it would have been used if existed researchers get their reputation lowered when we close an issue as not applicable but that is a very small nudge when only done once in a single project i have requested better support for for this from hacker one update this function exists i just did not look at the right place for it yeah classic classic classic right there future all these kind of reports will become more common over time i suspect we will we might by the way can anyone just draw a parallel right now to this anybody let me get let me let me hit you with something you know the most annoying thing on github ever is dependabot dependabot i hate dependabot yeah i hate it i love dependabot your dependencies require update dependabot dependabot is this useful utility in which will'll spam you continuously about every every security issue i'm gonna give you a little i'm gonna give you a little pro tip i'm gonna give you just the tip right now if you are using node you probably have a security violation going on you are going to be getting notified at nauseum while that thing is running okay it's giving you more than the tip okay it's given it it's giv it all all the issues at once pick it is the i hate to pend a bot hober fest hober fest is slightly worse llms okay that that was rude they're not slightly worse l well i mean next year they're going to be slightly worse llms i mean to be fair apna college did say don't do this okay it's just that they said it at the end and not at the beginning and by saying it at the end people already left that video and were being like my name is my name is prime please accept it yikes can't wait for the hack toer fest with ai it's going to be worse than the original [ __ ] toer fest it is going to be the worst anyways that will of course be unfortunate when ai is used for an appropriate task such as translation or just language for formulation help i am convinced that there will let's see there will be a popup tools for using ai for this purpose that can actually work better in the future at least part of the time so i cannot and will not say that ai for finding security problems is necessarily always a bad idea i i agree with this take right i like it i do however suspect that if you just add an ever so tiny intelligent human check to the mix the use and outcome of any such tool will become so much better i suspect that will be true for a long time into the future as well i have no doubts that people will keep trying to find shortcuts even in the future and i'm sure they will keep trying to earn that quick reward money like for an email spammers the cost of this ends up in receive in the receiving end the ease of use and wide access to powerful llms is just too tempting i strongly suspect we will get more llm generated rubbish in our hacker one inboxes going forward hey every bu the name's devin i am a human software engineer and i use the powers of llms and i would love to be able to join your company and to let you know all the things you're doing right and the things you're doing wrong i have all the standards right here i also might tell you things that aren't real we don't know we don't know yet okay but i'm excited i'm excited to be your assistant certainly a jen