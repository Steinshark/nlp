it's a way of trying to put control of how the network gets configured in some sense into the hands of programmers rather than just leaving it to a bunch network protocols i've talked in the past a bit about ip routing and you've got the idea there that there's routers which are computers that have multiple network cards in that are interconnected and they run some software on the routers and the software implements a particular routing protocol link state protocol whatever it might be and so the software on the route has exchanges packets with other instances that software and they work out the state of the network and they figure out how everything's laid out and they work out how to route through that network and then when data comes in other packets come into the network all through just know what to do they look at the packets destination address they work out where to send it so it gets towards its destination so that's kind of traditional networking with software defined networking the approach is basically is essentially saying that you want to go from that quite distributed control where you configure things, but then the protocols is run in the background and work out what's going on to a much more substantial eyes control? so you have software running which is going to actually tell all of the routers or switches typically? it's usually done at the lower layer things, so it's usually done at an ethernet layer rather than at my peeler they tell the switches okay when you see this thing this packet come in you should do this with it, and so it's much more direct kind of poking everything internet but poking all the rules in and saying what should happen if you've got a sort of traditional network you might have a bunch of switches or breeders have you wanna call them let's take the case of ethernet spanning tree there's a protocol running called spanning tree which designates that this is going to be the root switch in the network and then that runs a protocol to work out a spanning? tree so this is a structure on a graph which is essentially the minimal set of links that? will allow you to reach every other thing in the graph every other node in the graph so in this case depending on how the network set up perhaps it would be that link would be in that link would be in that link might be in that link might be in and that leak might be in so these two links in that case would not be in the spanning tree so there's a protocol that runs in the background that maintains that so one of these selected links say this one would were to go down you'd end up with maybe this one would come in so it sort of responds to things like that, but all the switch is running that protocol continuously in the background and they're all kind of in some sense. they're almost running it independently in that they're all doing their own thing and participating this protocol with the software defined networking firstly on each of these switches you now have a piece of software running which is able to control the switch i'll come back to what exactly it does in a minute, and then you have another piece of software which is called a controller and this piece of software the controller makes a connection to each of these bits of software on each of these switches there's obviously a bootstrap problem here about how it gets to make that connection given it's about to control the network so that's a process. that's be gone through but basically you end up with a controller able to talk to each of these switches and then it talks a protocol called open flow this is the kind of the height what there are actually two or three other alternatives this p4 and puffs are two of them but this is the one that seems to have got out there in the industry and it's actually supported by switch manufacturers to some extent and essentially you can insert into each of the switches rules that say when you see a packet coming in that matches this each rule has got basically a match clause and then it's got an action associated with it and so it might be that a match says well if the source ip address equals 10 dot 0 dot 0 dot and we want to drop it or it might be that it says you know destination ip address equals 10 dot 0 dot 0 dot - we want to forward it out of port number 3 so it's more explicitly saying to each of the switches this is what you should do. this is what you do this is what you should do in these particular cases so it then becomes about explicitly managing those rules and because this is a piece of software here, you can write whatever sort of algorithms you want here to do things in different ways or to treat traffic in different ways each of these bits of software running on the switches that open for switch might have a default rule that says if i see a packet, and i don't know what to do with it i should send it to the controller so it can then send the packets. it's never seen before - controller controller can look at the packet and go oh this is somebody trying to make a connection to that web server i should put in a rule that says that make sure that that connection always goes through the firewall or make sure that that connection always goes through some of the proxy middle box of some kind. what's the main benefits over traditional math again? it gives you more explicit control so with these kind of methods either with this sort of protocol or with the ip routing protocols you essentially control everything by setting weights, and then you allow the network to work things out there's one way to think of it in this case you control things by explicitly saying what you want to happen, so you can and you you so you've got that the ability to be more specific about what should what should occur? so you can tell what's gonna happen hopefully more easily in practice is a very complicated network very complicated rule sets in might not be so simple but that's the kind of the map. i think part of the motivation behind it spanning tree for example it's essentially drop or forward out of a particular port in ip routing it's drop or fault out of a port and you do a couple of things in passing so you determine the ttl fields for example you might check it checksum and drop it it doesn't matter checksum but it's still fairly simplistic with the controller actions aren't just dropping forward or forward to control it you can also rewrite certain fields for example, so you might say well packet comes through here with these details in the header i'm gonna rewrite some of those fields before i send it on you've got more complex rule sets so you can with certain with more recent versions of the openflow protocol you can start to chain tables together this you say well, here is a table of rules, and then if it matches this rule it's going to go and be processed by this table of rules and you can build up state as you move the packet between tables so as you as you traverse through a sequence of tables you can remember things about how you got there essentially it's statistics for example about how many packets matched against which of these rules how many packets how many bytes matched against which of these rules and so you're getting this kind of? sort of feed of information from it's an interesting question there's a lot of research interest in these kind of systems and actually they go back to at least to the ninth 90s. there was work for example back in the late 90s. just around time i started my phd so i was done here in cambridge which was looking at how to do this kind of control system for an atm network so that a synchronous transfer mode not cash machines so, but it was a very similar thing where you'd have you have some kind of layer of software on each switch you have the ability for some sort of control process just put information into though into that software to say what should happen when? cells came in on particular virtual circuits that general idea has been it's kind of been around for a bit and there's a lot of interest in the research community that's kind of waxed and waned over the years probably the biggest deployment that i know of that is using this in some sense is google. so for google's network they use that apparently to manage their global network to make it work in the way. they wanted to more efficiently than they can achieve use into traditional kind of protocols i guess it's yeah, it's not unlikely. i don't know i'm not an expert on google's infrastructure, but it seems not unlikely that that's what happened hopefully at least 200 more we'd like to thank audible.com for supporting computerphile if you go to audible.com slash computerphile you can sign up for a 30 day free trial now today, i'd like to recommend a game of thrones everyone's been talking about the tv series, but the books are absolutely fantastic and what's better is the graphics are all up here? so that makes them quite a lot better than tv cgi in my humble opinion i've inhaled the books and i'm waiting with bated breath for the next one. i'm surprised i haven't actually recommended these before as i've just worked my way through them and just loved every second of it so remember audible.com slash competes file for that 30 day free trial. thanks once again to them for supporting computerphile the problem is that if i obtain a cookie of you which is supposed to be secure? then i can send that to let's say amazon or to a shop and say, i'm sure and please you know what's in a shopping basket. what's his address? what's his credit card details?