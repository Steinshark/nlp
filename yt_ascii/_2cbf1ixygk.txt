we will do this the best advice after 20 years of programming experience i've been programming for 20 years but i haven't been programming professionally for 20 years okay so let's find out what is up ladies and gentlemen in this video i'm going to share you what i have learned the past 20 years of being an engineer right the reason why by the way excal draw mentioned excal draw mentioned let's go let's go best graphing platform of all time let's go doing this is because i get a lot of questions of course people are asking me a lot of questions i see people a lot of people taking the wrong decisions the wrong road ps and most of all i think most of you are a slave of the tech community right you're basically hunting meta to meta to meta right oh there's a new language i want to have a job there we're going to learn that language oh there is another framework coming out we're going to learn that framework oh i don't like react i'm going to do spelt and and and so on right so basically if you're a developer if you're an engineer you're going to have a career pet right and that's going to be a timeline you're going to start your career pet and hopefully it's going to be a long lasting career you know what i mean full of happiness and joy you know what i mean that was a good point by the way i really did like the meta chaser meta chasing can be really really really painful i've seen a lot of people that that that they swear and die by like every new thing that comes out like i like i like a nice little quick investigation just to see what things are about see if if there's anything anything cool about it but often i see those things i'm like okay they're they're neat they're they're nice that i can see some differences i can see some things that are cool but at the same time i don't i don't really like it doesn't change anything we're doing right i know we talked a little bit earlier about like change in kind it's not a change in kind it's just like the same thing but from a different perspective it's one of the reasons why i've just really appreciated htm x is because htx felt like a a change in kind from just these react heavy front-end type things right it was really nice it was really nice just to be like okay we don't need that we can actually do things in a simpler easier faster way htx taking lessons from the past well i mean to be fair hdmax is just a rewrite of intercooler hdmax is actually just older than pretty much all technologies as far as the web goes hdmax literally improved my mental health sorry for not turning off the alerts and man was that loud that was loud i'm sorry flip take that flip you kind gentleman flip could you take that out and what you're going to do most of the time you're going to start with some kind of a language everybody needs to start somewhere most of you will probably have some background in c or yava or something if you're coming from uni i love the yava hell yeah get that y even even even the translation was just like yava that's that's pretty great that's pretty great that's pretty great u but this is true i mean my my initial experience was in it was in yava yava 1.5 and 1.6 and so yeah and then see right like that was kind of like my growing up were those were those two languages javascript only came much later for me javascript wasn't something that i did at first which is also which is also really surprising because i i realize you know now that i say this out loud there's an entire we we we also talked about this a while ago oh i don't have it anymore that like right now the slice of tech worker pie such a huge percent of of them are going to be boot camp right they're going to be these boot camp people that just went through 3 6 9 months of javascript right and like it's a very different kind of experience than what i had l circle it was an okay circle okay it was it was okay it was okay can we just at least agree that it was okay but i feel like you mean javascript yeah it was javascript it's kind of this interesting thing that's happening which is that so many more like you would think that people growing up in technology we would all have some level of something similar that we could kind of share and all be able to have like a common foundation of but i find that i like i don't have a lot of common foundation with a lot of programmers like we all have it's it's actually pretty surprising how much differences people can like come into programming i i mean i've met people that come in through programming through lua and roblox through java and and minecraft like unironically java and minecraft is a huge amount of people that come into the programming world it's it's pretty cool it's a pretty cool experience but it also means that we have a fundamental breakdown in in direction in how to become better and how like expectations of engineers not being able to exit vim real redstone problems i mean we all have redstone problems okay which is nice to have es i think especially if you have a c++ or a c background or very proficient in it i think that's a superow to have because then you actually know how computers work how memory work how memory is moving and all that stuff very important to be honest but nonetheless doesn't really matter you're going to start with some kind of language could be php for most that's how it started with me php javascript stript whatever right and as your career progresses you're going to be on twitter you're going to be on youtube you're going to be on reddit and i don't think that's a good thing it did he didn't mention twitch but we'll forgive him okay okay hey twitch you know you hey hey you guys hey you guys matter okay hey come on hey right now everybody tell anthony how much you guys you guys like him okay tell them tell them that quara everybody loves quara you know i turned and away just in time to see the the you know i i i i literally give you guys one opportunity to be on screen and what's the first thing you give me isaiah especially if you're young and you're very influential right that's that's basically what we are that's what i am we are influencers that's what they call us and we want to try try to influence you so we can sell something to you you know what i mean going to be completely honest here what is he selling and so what is anthony selling by the way if you don't know he is selling a right here 33% off his go htx and temple courses by the way you should probably buy that go hdmx and temple hell yeah hell yeah that's a w that is a w right there that is is not that's that ain't no bridge that's a w okay that's what i see that's a w right there temple os no temple the go jsx thing you know what i mean very very good i like it i like it the goth stack as some people call it you're going to see these things on twitter like oh there's a new a new framework and you're going to you're going to learn that new framework and then something else comes new language i don't know gleam what it's today gleam and then it's rust and and you have z and all that stuff you're going to learn all these languages you know what i mean and you're going to hop us from the moment they basically are being created right by the way i do think i actually do think there's some value to learning zig especially if you're if you're planning on trying to be more low-level hardware and stuff like that i think zig actually has i think zig's future in that area is really really big i think it's it's kind of proven itself in the sense that bun uses zig dropped rust tiger beetle uses zig it's just the right thing i think you'll just start seeing more and more zig ziggs where people struggle to make rust work i think they'll see zigg just because zig has 80% of the safety that rust has and about 80% easier to write you know what i mean it just makes life really nice i actually think zig is a really cool i think i think out of all the like trendy languages that have come out i think zig has one of the coolest concepts one of the coolest futures out of anything z is zig the new se i think zig is the new i don't think zig is trendy zig is definitely trendy zig is most certainly trendy okay zig is zig is in the trendy is in the trendy group of languages zig is incredible zig makes easy compiling of even c libraries in fact some libraries are so easy to compile with zig that it's easier to take a c program import it via zig and compile it via zig than using the c tooling to compile that c program like that's how good zig is i love it as a c compiler this you are literally not the only person that i see people talk about this like zigg is zig is shockingly it's like shockingly good it is great is there a reason to switch from c to zig yeah zig has a lot of super cool stuff i know this is this is about 20 years of programming advice and all this kind of stuff and i think i know where he's going and i really like the direction he's going but one thing to sell you on zig is that it has it doesn't have macros it has zig and so it can do compile time zig programming meaning that you can write code that executes at compile time to create zig so it's zig that creates zig so there's no special syntax you know just a just a just a just a good oldfashioned zoomer like me and you you know us youngsters right can just simply create compile time stuff they renamed it template macro oh did they well whatever they named it i i don't care it is it is it is zigg to produce zig comp time it's honestly one of the coolest like it's one of the coolest things i've seen in a long time because it it it takes all the suck out of writing i mean templates are are close enough generics are it's close to generics right it's really interesting it's very very interesting like rust is extremely difficult to write a good macros in to like to become good at macros it's really really hard and to become like really good at proc macros it's even harder there's no generics in z you don't need generics because you have comp time comp time comp time is is generics right it's pretty cool definitely it's it's worth just reading on and just knowing that it exists and if you're interested in like the embedded world it most certainly is like a real real real bright spot in that in that world but the problem is guys i was just like you right it's it's it's a face right every in your life you're going to have phases and in my opinion it's not bad that you're going through these phases yeah but what i want to do is to basically warn you that you probably or you're most likely going to to do the wrong thing in my opinion right you need to understand that the moment you're basically going to learn a new meta right the moment you're going to learn a new meta that's what's going on here that's the moment you're already shut yourself in the foot because these metas they're basically coming as fast as you learn them you know what i mean the h that's kind of a hard take for me to fully agree with i i'm i'm half on half off and what i mean by that is let's go with this let's go with oaml i spent a little bit of time looking at oaml i've never done a functional language now i'm vaguely familiar with the functional language i can kind of do a functional language i would still like to spend a lot more time learning about it i like to become proficient at it but it's just not on my things to do list right and during that time i also got to see a really unique way of thinking and there's something very special about that and what i mean by that is that when you get the opport unity to think differently it can it can flow back into your existing skill set to make you a much better programmer to make you see things in a bigger and more complete way so do i think you should be jumping all the time no i don't should you have planned meta learn sessions absolutely like abs absolutely i think it's really really important and so it's kind of like you got to there there's definitely a balance here and i i i think he's he's getting to this point i think what he's addressing is the hyper changers the ones that are you know that that just like like i spent two years doing rust because i just wanted to learn rust i wanted to get it i wanted to use it for every side project i wanted to really understand it now i'm going to do the same thing with go these are planned intentional let's get proficient at something different and i like that like for me that's really really nice and then i had my base which was working at working at my job building out network protocols or building out testing infrastructure building out simulations right like i had my core getting better at my core plus i had my ability to go explore different things and so i think when you put those two things together it's really good when all you do is hop i think it i think it kind of becomes frustrating or maybe it builds like an anxious feeling in your heart a little bit you know what i mean because you're constantly changing moment you're going to start learning a new framework a new language it's already too late because something else is coming up yeah you know what i mean the point is not to chase a fat i'm totally on his team and you're going to jump to this one and the moment you learn this one it's already too late because there's a new one you know i mean and this is going to block your whole career because you're going to do this thing you're going to be frustrated you're going to be back to php back to javascript and it's goaline that's rust and then you know what i mean it's going to be an endless this is really good this is a really good take which is you you should have a goal in mind you know what i mean you should have a goal in mind so like when i did rust i had had a goal in mind that i wanted to be able to write a basic c application as fast or faster than i do in node and i wanted to build a few of them and get good at acnc to the point where i don't have acnc skill issues and i wanted to understand rust at least at some level i didn't care about learning how macros work i didn't want to have to learn every last little memory layout thing i just wanted to be proficient with it and to be good good enough that if i were to jump on a team i could do that i understand lifetimes i can do lifetime annotations i can i can do most of it right i kind of can do traits and passing around things and build more like trait generic type type operations and and be able to build something that's more abstracted in the rust way but like not fantastic like that was kind of my goal was to get pretty good at the language right get pretty good async is a pain of course async is a people are saying async is awful async is a pain async is amazing async depending on the language is very very different async in javascript is just simpler than async in rust async and every language is a little bit different but i had goals i had i had an idea in my mind and as elixir became really popular as o camel became really popular as other things became really popular during my tenure in rust i stuck with rust though i did a brief moment to go like look at them for just like a day go oh okay that's pretty cool but i stuck with rust and that was an intentional thing because i wasn't you know i was not willing to go learn something different and so now i'm doing it again with go these are intentional thoughtful decisions and no matter what comes up that's really popular gleam whatever it is i'm not going to go chase it i'm going to stick with go and i'm going to really learn go and i'm going to see okay is this the thing that i want to specialize in for the next five years i'm going to do one year of go and if at the end of one year i've really enjoyed it i'm going to go for another year and if at the end of that year i really enjoy it i'm going to go for probably five years in it and really try to lean in on that if you know what i mean it's rabbit hole and it's never bad to learn new frameworks it's never bad to learn new languages but the most important thing is that all this stuff guys and like i said this is this is a video without any ads without any course selling shenanigans is just from me pure to the heart to you guys all the stuff here right is noise noise noise that's be noise noise yo you're nice you're noise in my noise my guess is he meant noise not noise right i think i think that's what he was saying there just in case anyone's just in case anyone's wondering i disagree it can be bad because you fool yourself but you think that is what he is saying not really sure what you i don't know what you're disagreeing with you say go is boring but i am having i'm heaving lots of fun learning it yes yes go is boring it's a boring language like genuinely it's a boring language really really boring language okay do do do you have these really amazing type unions can you do proc programming can you can you do procedural macros i mean do you do you have a bu do you can you take the language to build the language no it's simple it's boring it's intentional i like it right there's a difference right i like it not saying just because something's boring does not mean it's bad or does not mean it's like it's not fun okay like i mean if you really want to break things down elden ring is boring you walk around you know you're going to dodge you know you're going to fight and that's it like hold on hold on hold hold on hold just hey hold on the concept of elden ring is very simple everybody understood what was about to happen at after about 15 minutes of playing elden ring but i loved it i died over and over and over and over and over again and i will keep on dying and keep on loving it i could start elden ring right now and have a great time but i fully know everything that's about to happen there is no surprises there is no like holy cow i didn't realize you could fly right like there's no there's no things there it's fun it's it's it's it's amazing due to the fact of how simple or how boring it is there's nothing to it that's like crazy you get to discover and make little discoveries and all that absolutely love it they fly now like i absolutely love it right i absolutely love it elden ring and go share a lot in common amazing amazing right this is not some hyper complex world in which you have to be like super ultra super like you know like there's some games that are like they're so much to it it's extremely complex there's so many things you have to do this one's very nice very simple very to the point and you're just fighting and destroying oh my goodness absolutely love elden ring oh my goodness i love it i love it right anyways go by the way the moment that elden ring air tree comes out you know i'm going to play like 24 hours straight you know that right i'm going to turn into a crackhead and play 24 hours straight of elden ring you know that's going to happen right damn straight i am you know why and it's and i already know exactly what i'm getting into there's no questions nobody's going to be confused as to what's about to happen oh pick dude pick you can join in our worlds because remember it's like that they i forget what the name it starts with an s but they have like that leveling where no matter how leveled you are it will level with you i forget the name of it oh man i'm going to go deep pck you can come join me if we can finger each other or whatever you call it what what do they call nen ring huh we got to get like fingers and do something to get each other in the same game they called it sex is that what you do i know it involves a finger and then you get to come into my game i somehow made that worse i actually somehow said it in such a way that that's actually worse than what it pick you're not coming into my game okay fp flip take this part out you know just take the entire elden ring analogy out take it all out this was a mistake okay this was clearly a mistake here okay yavas script typescript bp bm react spelit it's it's it's it's super base and and that other thing that just remov their free tier planet scale noise this is not what it's what matters they they don't matter if they if they blow up tomorrow nobody cares that's what that's what it needs to be in your in your mind if if tomorrow goling explodes it's no big of a deal you know what i mean docker may slightly disagree with that statement but i see what he's saying if you could just no longer do goang tomorrow you could move on and and use something else right what does matter is this guys beautiful isn't it look at that this is a flag well done this is what matters isn't the american flag and this is basically the goal or the solution right because a lot of people are coming into programming because they see it on tik tok they see it from they they hear it from friends they think it's cool because we can wear a hoodie and a headset and we can watch we can listen to music what do you think he means by that real question like anthony what are you trying to say okay anthony anthony what are you trying to say here because all of a sudden i feel a little attacked and we can be ah coding and it's nice and we are hackers and and but i'm going to tell you something after a certain time this is going to be exact the same feeling as any other job on the planet you know what i mean at a certain time and it's not only with programming it's it's it's a life lesson everything becomes boring at a certain point of time i believe jr tolken said it best not all that glitters is gold i find the acceptance of being okay with boring makes things easier isn't that smashmouth yeah it's definitely smashmouth you know what i mean like when you accept the fact that you're you truly are doing the same thing over and over again it's all if statements for loops and variable declarations like at the end of the day like that's what that's that's what it is like all programs are just that you there there it hurts you can still like the thing is is that that's why i always i i say this a lot which is you have to try to find joy right you have to try to cultivate it you have to become excited about the problem you're solving think about the ways you can make something good think about the ways you can really like who is joy where is she you know it's something like even like right now one of my tasks at my current job is really really boring i think for a lot of people but i love the challenge of trying to make something stable how to improve logging observe a ability test ability change stabilization all that kind of stuff like really trying to make things like great i think it's like a it's maybe it's a point of pride or something but it just makes me happy you know what i mean it just makes me happy to do those kind of things whoopsies i just banned you you can be unbanned but when if you tell me what to do you get out just so you know it's a rule of mine you come in here and you tell me what to do you get you get out sorry you got banned whoever just got hit with the whoever just got hit with a straight sorry for that for a second i unbanned you don't tell me how to live my life okay i don't tell you how to live yours you don't tell me how to live mine it's the same with relationships you have a 10 years marriage that comes that becomes boring and then you think that the grass is greener on the other side and you're going to break up because some some beautiful girl is there but she's going to be beautiful and she's going to be amazing for six months girl mention i know a lot of you don't understand girl i know very confusing topic for a lot of arch users they do exist they they're not just an image on your body sized pillow okay they're they're act they're actually they're real i know hard hard to imagine but girls are fake government [laughter] drones but real dang it shut up but there is something very amazingly true about this and again i think the same advice i just said for programming actually works exactly what he's talking about i've been married for gosh 12 years 13 years something like that 2008 whatever wait 2008 what year did i get married hell what year did i get married 2011 i think i got married in 2011 anyways it doesn't really matter i got married at some point and it doesn't it doesn't matter you can send my wife that i don't remember what year we got married i'm pretty sure it's it's 2011 i' had like go back and look you don't have to take this out flip you can keep this in you can in fact you can zoom in flip that's not the important part right that that doesn't make it important right that doesn't make a good relationship what makes a good relationship is wanting to care for someone finding the joy even in the mundane things it's the exact same thing right it's it's it's all the same right he's already a dead man nice save nice safe you guys you guys think that this that i'm kidd i'm not kidding couch night absolutely not and then it's just back to the beginning you know what i mean that's what it is the grass is never greener on the other side of course there are at cases of course but in general the grass is never greener on the other side that's an illusion and the grass is always greener because we are bored right and it's the same in programming because if you write php for 6 years you're going to be bored you're going to be bored as you know what i mean it's it's the clos captioning just clos captioning just avoided the word did you see that no but this is a great take l take no this is a great take l take l take really bored and lambos okay hit me wi stinky potato bring it up stinky potato why is that an lake i do use a i do use a yoga ball just popped come on stinky potato bring it on bring it in programming for many years is fun that's your answer back first off is your name devon by any chance second off of course aspects of it become boring the thing i think you're missing here is when he says doing something for 6 years he means doing the same thing right ass mentioned let's go like if you are building the same type of application over and over again in php it's going to become boring you're it literally your life becomes boilerplate maybe you're making great money maybe you're doing great things maybe you're living that php lambo life but nonetheless you're still building the same thing i keep my job fresh by doing coke on the job okay interesting interesting move i mean that will make things feel more exciting probably mentioning mentioned let's go well it's true though like you can't the danger i the danger i don't want to see with people okay the reason why this is kind of why this is important to me the danger that i see with people is that they're expecting their job to make them happy you know it's it's like the inverse of what i said right when i say you need to find joy people are expecting happiness okay and those are very very different one is like watching tv it's just like it just hits you right the other one is like more like playing the game right you have to go out and you have to be active in the process and so they're like opposites you can't just just because you're doing the thing does not mean you're going to get happiness you know one of the biggest disappointments in my life was my first job my first job was so so bad that i switched to mechanical engineering okay that's how bad my first programming job i thought i hated programming i literally thought i hated programming you know i my expectations were all effed up and all that i think you're right but i still think it's an l take what the first off i'm not even i'm not even going to let you answer yourself for this but this statement makes no sense did you just call yourself at l like you know you're right he's out of line but he's right what the hell does that even mean gonna be a job like like like like anybody else like somebody is selling burgers at mcdonald's somebody is basically okay it's not that bad okay like i i've done many years at the fast food restaurant okay some of us were sandwich artists at subway and i'll tell you this much it can be quite mind-numbing okay you know what's really upsetting is when you use that that that tomato cutter and as you pull down because the blades have been overused they get a little bit dull and you squash the tomatoes instead of cutting the tomatoes okay you know how effing annoying that is you know what that feels like if you don't know what i'm talking about you've never had a shitty job okay you stamping papers each day you know what i mean counting sa sausages it's the same thing everything becomes boring i heard picklex count sausages what you need to learn guys is that you need instead of having joy right instead of having because like i said if you're writing javascript for five years and then suddenly oh rust w rest gives me so much dopamine it's such a joy to work with our engineering team is so pleased they are so happy that we can use rust they are so productive no they were bored that's what it is right and now they are productive right but in six months they're going to shoot themselves in the foot you know mean back to typescript you know that circle circle of life instead of having joy out of your noise right instead of getting dopamine out of your vim configuration instead of getting okay may maybe maybe that's like a a bridge too far okay handcrafting artisanal personal development experiences can be a joy that can be had for many years making things the exact way you want them i find that to be a nice i just find that to be like a nice leisurely activity you know what i mean i do think that that's like a leisurely activity is taking taking the time to build something the way you want it to be i find that to be very very nice and so though i understand what he is saying again which is if you're using your vim configuration to escape the boredom you are going to like that's that's there's there's a problem there but if you use your vim like what i do is i use my my vim configuration as a way to just make me better at my job right i i i i find the things that i find repetitive and boring and try to automate like automate it into a very nice little set of keystrokes or something that makes life easier right this video is just calling out prime it could be i mean i like anthony i think he's great maybe he is calling me out maybe he isn't i don't think he is but i think i understand this like i think there's something he's trying to say in here and maybe he's not expressing it with the right words which we just i mean it's this right like being happy with what you have versus trying to make it be the meaning of your life right like work has always meant to be satisfying it's never meant to be the meaning and i think a lot of people kind of confuse those things like when you work really hard and you build something you're proud of it it feels it feels amazing right you're like i built that and it doesn't really matter what it is from some stupid farming thing because you you guys think you're all farmers or or some programming right you're happy that you built it that it's your work that has produced it and that's being satisfied right there is a satisfaction of it and so that's where that's what i want to i say you know finding joy i mean becoming satisfied and and and expecting from work the thing that it can bring which is satisfaction it may not bring excitement it may not bring all these other things absolutely having a better vim configuration doesn't make life better right it may make a few things nicer for you but it doesn't fundamentally alter anything it's not a change in kind it's just still the same thing just slightly better dopamine about your camel you need to find joy first off don't hey first off don't make fun of o camel okay o camel's very interesting okay i can't believe he's dunking on o camel poor o camel okay this now now it does a feel it now it does officially feel like it's targeted okay it does productive right but in six months they're going to shoot themselves in the foot you know mean back to typescript you know that's that's that's the circle circle of life instead of having joy out of your noise right instead of getting dopamine out of your vim configuration instead of getting dopamine about your closures and your old camel you need to find joy in your goal and your solution because this is where the money is right and it's not about money i understand but who doesn't like money you know what i mean idiocracy quote did did i like money i feel i mean i feel like we're on the same team right i feel like we're on the same team i like money right which is you should this i mean this is this is much nicer right change is fun change is good change makes things feel better but be finding the joy is good pre-at pre-at i knew it this is where the money is right your goal and solution should be your main driver of your reward system the goal and the solution should be something that you want to chase time after time after time it's your high it's your cocaine you know what i mean but that i mean the fun so the problem with what he's saying right there is he's literally recreated this part over here and just did it again right don't chase the high right like that that's fundamentally what he just got done saying for so long don't chase the high right the high that's what caus you know that's that's proba i think one thing i'm gna i'm going to make a real hot statement here okay we're about to make a real real hot statement are you ready for this one which is that i think one of the fundamental problems that is going on here in this entire solution right here is that we make enough we make more than enough money and i think that once you get past the struggles of life and you no longer worry about the requirements but you worry about the wants i think that things can become very muddled and very difficult i think it's very easy to become dissatisfied once you cross a certain point and so there's something very interesting about this that some of the problems that we're even discussing right here is due to the fact that there's more than enough money that you're earning like software engineering tends to be disproportional to the median income of any area right typically typically that's why people call us adult that's why literally google's referred to as adult daycare right typically it is in the us it's also true in other places too the median income tends to be disproportionately you tend to be higher than the median income in most locations not all locations in a lot of locations i want to go to $300,000 adult daycare yeah i know but the median and the median is where half the people live okay it is a first world problem i'm just saying this isn't it it these boxes aren't far apart and i wonder how much is created i mean i'm just hypothesizing here which is how many problems are created because need is not quite there right how much of these things that we're experiencing is because of that like you know we we we saw earlier with the dhh article that he was claiming i don't know if it's true 97% of the world had the farm i'm not saying farming's fun i'm not saying it's good i'm not saying it's a great time i'm saying there's plenty of terrible things that happen with farming people always just take the stupidest the stupidest roads when you mention anything and they just go right to the dumbest thing oh yeah well back then people died more you're like yeah you're right that's what i was talking about i was saying let's die more no people were a like your work directly went straight to your life like you had to perform this task to continue to live like there's a little bit more need in your work your work actually had real purpose now it's like hey i increased viewership by 0.01% this month you're like does that really does that really do anything for you it doesn't really do anything for you you like you don't feel more like oh yeah i did something right and i think i i think that's why it's so exciting to work at a startup sometimes because you're actually feeling like you're you're steering the ship or you're doing something you're actually building something your direct work over a like over a product you have more control it feels more exciting you know what i mean anyways and if you change your mindset on your goal and solution everything becomes clear in your path because you're not going to care about the noise anymore of course noise is important here right these languages are important right but if you take about if you think about a goal and a solution if you think about efficiency right if you think about life is a business you don't even though you're not an entrepreneur if you're not self- dependent of something it doesn't really matter life is always a business you want to do some things the most efficient way in the least amount of time you know what i mean that's what you want that's what generally i don't agree with that with all life advice not everything is done to be efficient i think sometimes one of our biggest curses right now is is the desire to make everything official this is might this might be the one place that anthony and i disagree here which is is that i i don't think efficiency is top shelf we're going to let the man cook but i we're addressing this point because if i let him cook he's going to change topics and then then all a sudden we can't go back to this okay i do think the continuous drive for efficiency can really hurt relationships it can really hurt a lot of things just because sometimes the point is to be inefficient like if i'm hanging out with my wife the point is to just hang out with my wife the point is to be there in the moment right it's not to be like all right we got to have like a really great date starting now and ending now it's like no there's no there's let's be loose on the start time let's be loose on the end time let's not try to optimize it let's just let the things happen because honestly if we're going to be optimized we should come in with a preset of questions we need to ask each other we should come in like with with some thought through answers of how we're feeling about situations we should come in already like it's going to be a one-on-one with your boss but it's with your wife right like that would be efficiency fun engaging we will ask questions until connection is improved right but it's that's like that's not how you that's not how you build something not all things need to have a jer ticket you know what i mean you know my wife is is my boss at at least she thinks she is okay well thank you brand new chatter appreciate that and so i you know i don't want everything to be about efficiency i build projects sometimes just to build a project just to learn your take is a w but your example is l really enjoy just enjoying the time just to enjoy it as an l i i don't i don't i don't think so because if you're if you are efficient you come in with pre-planned stuff you don't have to come in with pre-planned stuff like my only plan is to find out more like that's it to discover more about the beautiful wife a lot of l chatters today but really i i don't want i beg you don't make efficiency your number one thing like you should be efficient when it comes to efficient things right like if you want to if if you have to go and go through 100 tasks and do x on each one of those tasks yeah be efficient absolutely but there's some things that you got you just got to around you know what i mean sometimes you just got to go and explore sometimes you want to make tcp connections to a golang server from vim not because you can't not because you need to but because you can we do what we must because we can aperture science okay sometimes you got to live that aperture science life that's basically what every ceo or cto is looking for they're looking for developers that can do stuff as efficient as possible in the least amount of time and come to a solution yeah that's important i mean that's true and it doesn't matter if you pick something from this right it doesn't matter if you use goaling or php or javascript or alexir or ruby or python it doesn't really matter i will say that how anthony just said elixer was probably the sexiest thing i've ever heard to my ears just going to be real here okay i can say that about another man totally normal but i'm pretty sure that was asmr i'm like 99% positive that would be considered asmr do stuff as efficient as possible in the least amount of time and come to a solution that's important here we go and it doesn't matter if you pick something from this right it doesn't matter if you use goaling or php or javascript or elexir or ruby or figh it doesn't really matter you pick something that elexir that was so good that was so good it was so good it it was good that was great i mean i'm i loved that you're just proficient then that you're that you master because people i can i see a lot of i do want to i do want to time them out though for a quick second here he mentioned a bunch of different things and sometimes your job will require different things for different reasons and engaging in the noise to discover efficiencies can make you even more efficient at your job because you know which noise to listen to right there's definitely there's definitely a thing there there's definitely the which noise he don't noise my noise right like there's definitely like a thing there that can be interesting right it's it's hard you have to engage with the noise don't make noise your personality of conversations where people move language think they're going to get being paid more right oh i want to be a going developer because i'm going to get more more money i'm going to be a ris developer because by the way i that's why i didn't chase the o camel stuff even though i really think o camel is super cool i really like the idea of becoming much better at o camel it's just that i realize that every single day average people are not going to see the benefit of using o camel and i did not want to do that and make a bunch of people excited and learn something in which they're going to get besides for like the spiritual benefit of learning about functional programming they're not going to any have any sort of real practical goodness and and and it's part of my responsibility to make sure that if i'm going through something i want to be pretty serious about it you know i want to be i i i want to be serious about doing that what what i mean by spiritual is like it's it's you know it's it's the ability to look at a problem differently right the ability to see a plane of existence in a different way and so it's like it's it's a different experience right it's a different experience than just simply always doing oop or always doing procedural it's holistic development right and so i love the idea of writing o camel i think it has a lot of really super cool positive things but i realized that if i were to go down this i don't know like how great i'm doing to the broader stuff and so that's why i'm try i try to focus on what i think are really great future things i think rust has a lot of potential and i think go already has the potential plus has more potential to come that's why i' i've switched from rust to go is that i think it's probably the best possible future for a while for a while because they going to pay me more if that if that is your of course you want to make money i understand that i want to make money as well right everybody wants to make money but this is the bad driver you know what i mean that's the the the worst driver you can ever have because what you're going to do is you're going to block your yourself right because you're going to learn a language for 30% and then you're going to learn another language for 20% and you're going to learn another language for 10% and then oh this is not good enough you're going to take this language well look at that it's bending even you know what i mean and you're never going to be proficient you're you're always going to be frustrated you're always going to have questions nothing is going to be clear you're not going to see the patterns you're not going to see the building blocks because and they are in every single language the same all these patterns all these ways of constructing something letting your imagination letting your creativity to work to come to a solution and then make it better and even maybe then make it faster listen every single language the same and if i need to make something for a client if i need to make something for my for my company or you need to make something for your company as fast as possible you most likely are going to pick the wrong language because you're getting your dopamine from that language and you're not that's why i've pretty much written every last internal tool i've ever written for netflix in javascript not because i think it's the best i've even stated that i think it was one of the worst languages i possibly ever chose because it made it take seconds longer to execute but i knew that it interacted with the system the best i knew that i was going to make the best decision for my career by choosing the language that is most supported despite it being the objectively worst language to choose like literally objectively worst language to choose all i did was for loops like millions of for loops it took seconds upon seconds i changed from dot four each to literally four const of seconds of improvement in the program it was shocking that even that alone made a big difference and so it's just like dude man i i know for a fact i chose the wrong thing no recursion at all why would you use recursion imagine recursion in javascript like oh yeah that's what i need i need it to be even slower and use more memories i don't need that i i don't need that in my life i was already i was already under emotional duress which would with what was happening you know what i mean so your iq bumps 20 points if you do cion it does it does anyways so it's just like a thought like i've intentionally chosen technologies that i'm not happy about but i did it now i did a quick brief exploration into my recent tool i did the initial exploration in rust because i knew i was going to throw it away no matter what because i always do that whenever i do a first kind of run i know that i'm throwing things away super proficient in rust built it using rust it was a lot of fun and i said okay now now that i'm done using like now that i know what we're building i rebuilt it used typescript because i already know or actually i used js do i actually didn't use typescript i used js do which by the way way better holy cow was that a much better decision to make i used js do and it was super super awesome such a good choice very very happy very very happy with that decision and did i like it no i really wish i could have kept it in rust but rust was my explorator exploratory language right it's what i used it was in the noise section getting your dopamine from the goal and that what was the tool a way to analyze large sets of data again and going through we had no idea how much things were crashing on an internal service we had no idea in fact there was just no answers to anything so i said i know how to interact with the mongod db i will get out all the data and figure this out myself that's what i did that's why you want to pick the wrong noise you know what i mean and that's for everybody different right like i'm very proficient in goaling because i stick with goaling for 10 years already right i saw goaling i i thought it was amazing and i i'm using this for for all the time pick mention that's why i'm very proficient in it does it mean that you need to pick goaling of course not you can pick something else doesn't really matter i would pick php for example why not i will interrupt a little bit on that one you should pick which ha what has the most overlap for what you want to do i think that that's really important like if you want to learn and be in the embedded world you should pick c or zig probably c but maybe zig if you want to do certain types of backends php can be very useful laravel is fantastic but you're probably not working at a fortune 500 company using larel i'm sure there's a couple that actually do use lar but it's it's not it's not going to quite be the same thing using go on the other hand you're probably going to be trying to get into a midsized company right you you like you're you're making these choices as you pick a language as well larel is great to be honest yeah it is it it's it's incredible it's it's it's the php answer against like this crazy javascript world i actually think it's i i think it's very very nice soons are blocking javascript from being good we're not talking about tric erance all right anyways it's just something i'm thinking about because again it's all about your goal and solution and that's where it really really matters right that's where ceos cto and companies are looking for where co-founders are looking for they're looking for goal-getters for problem solvers because you can be the best engineer in the world right you can be so proficient in your language you could be you know everything about pointers speed heap stack closures structure but you can still be you can still suck you can still be a bad programmer why because you're focusing on the noise but that's not needed you need to focus on your goals you need to focus on the solution you need to focus on problem solving i have met a lot of people that can solve problems really well and are still bad programmers you know i've seen it okay i know some very successful programmers that write some really shitty code and i mean i think all codee's shitty just so everybody knows i'm not over here thinking there's good code and bad code there's bad code and there's worse code all right that's basically what i want to tell you guys you could say there's a lot of but it's not trust me i learned i learned the same i think i learned the mistakes right i made a lot of mistakes you need to do your very very very best if you want to make as much mistakes that i made in my life and still of today i make them professionally i think one of the hard hardest parts about this is that most people can't learn from someone telling them something they do have to make some of these mistakes themselves now since you've heard this maybe the amount of mistakes you will make is less for you to come to a similar understanding but it is i i personally find it extremely difficult to learn without making mistakes i mean that's what experience really is but also in life with friendships and relations right making mistakes every single day and i need to learn from them right and sometimes it it takes three or four mistakes the same mistakes in able to learn from them you know what i mean true i just want to warn you pick the right tool for the right job o that's a hard one that's hard one sometimes pick the wrong tool for the right job i pick typescript for a job i should not have picked it for but it was for the job not for the tool sometimes you sometimes you got to pick the wrong tool sometimes you have to and i don't think it's great right i don't think it's great right i'm not happy about it don't be the job not the right tool because they're it's changing every single day today it's a tomorrow it's b and next year it's a again you know what i mean and focus on your goal on your solution i've seen a come back that's i swear to god your future will be much brighter than it is right now see you soon thank you for giving me my own video and yes that's gleam finally released let's go let's go hey that was great that was a w anthony that was a pretty good video i think there's a lot of way i think there's a lot of people that could learn from those things i think a lot of i it's probably better heyy by the way thanks for the hype train that apparently i have seven minutes left i i do think that i do think that there's a lot of lot of wisdom in the in exploring the noises in exploring those things in making mistakes don't be afraid to make mistakes don't be afraid to to goof up to do the wrong thing i i don't think most people will get to where they want to go without making a few mistakes like the more mistakes i made the more i realized what i'm interested in you know like if you would have asked me what i was interested in day one it would be a lot different than what i was interested in day 10 versus year 10 versus year 15 right it takes sometimes you got to explore sometimes you got to make mistakes it's just part of life you know what i mean i i learn a lot from mistakes i also learn i don't like the idea if i learn more from mistakes i learn a lot from doing something right when i realize i've done something right that's also very powerful experience and also don't delad prod db it's really really bad for you it just never works like like that's a mistake you don't need to make okay i can tell you right now that will never go good for you there's no learning there's no learning from it okay just don't do it a jen