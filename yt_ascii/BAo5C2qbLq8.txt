today we're looking at network time protocol and this is how you synchronize a couple of computers well well in fact the whole world potentially i got into this sort of by accident i met dave mills who is the godfather or something of ntp he did all the early work on it and i think he's still involved sorry i happened to meet him at a conference and he was telling me a few anecdotes about it and so when i got back home i thought all right i have to have a play with this because at the time we only had a few computers slightly networked and it didn't really matter too much whether they were running at the same time everybody you know just looking at wristwatch typing the time that's that's good enough but there are some applications where you really need the time to be a lot closer particularly when you share file systems so if one computer writes a file and puts a timestamp on it and the other one looks at it it's not too bad if this one is behind that one but if it's ahead of it this computer gets a bit confused and says well this time hasn't happened and some will make crazy decisions based on that particularly with the make program that looks at time stamps a lot so dave mills came up with this process to synchronize computers and i sort of i remember chatting with him and thinking that's an interesting problem how do you synchronize because if you go and talk to that computer and say what time have you got and it comes across and it says you know the time is 10 32 and 57 seconds or something like that you think well is that now or how long has it taken to get from here to there if i do it again it may well be different because it may come out quicker or it may come over slower so anyway that's that's kind of where we got started with this and sorry had a beer with him or something i i forget it was a long time ago but anyway so i thought it would be interesting just to to show how this this all works so it's all based on an ntp packet so there's a this is 32 bits i think across here so there's a whole lot of little flags and bits which you often get in protocols in the very first bite that tell you i think this is the version and this this one actually tells you where there's a leap second happening today because it even caters for that and there's a stratum here and i think that's the version i forgot what goes in there but it's not quite so important then there's some other stuff but the key bit are some time stamps that come in so there's a t naught t1 t2 and there's also a t3 but that doesn't actually appear in it and then there's some other stuff down here which is to do with authentication and authorization so if you need to make sure that you're not getting bogus packets from places so this didn't used to be in the first version because everybody trusted everybody back in the year back in the day but since then everybody's got much more focused on security so what you do to synchronize clocks is we have a client on the server and the client wants to synchronize to the server so it sends out a packet with its t0 which is this is my time this is what i think my time is and as soon as it arrives into the server it stamps it with t1 that's the service time so this would then t1 minus t0 is is how long it took to get across there that would be if the clocks were right yes but but at this point they're not right we're almost always the case so then it does some processing internally because it might be handling lots of things and then eventually it's going to send back a packet and it will put t2 in which is my time when i have actually sent this out and when it comes back in that you do record when it comes back in t3 and you don't need to fill it into the the protocol packet because you're finished with that so you can see probably that these two times on the same machine so they are relatively the same you know if you subtract t3 minus t0 then that's how long this whole thing has taken but you can improve that by also removing the t2 minus t1 because that's how long it took to process that this gives you a fairly good estimate of the round trip minus the service processing and then the the difference in clocks is t1 minus t0 you know this is the service clock and my clock and you know that that equals zero then they're synchronized it never does but you want to get closer and closer to that so it's i guess if it's negative it's one way and if it's positive it's the other way you then have to adjust your clock and say oh we're out by three or four seconds so that's usually where you you apply this clock skew algorithm to say right keep we're a bit ahead so keep taking instead of every second moving on a second we'll move on you know 0.99 of a second and eventually we'll get closer and closer to the real thing that's actually now a system call to do that so that in certain unixes anyway believe windows has something similar so that you don't get these huge jumps in time that time moves slowly and imperceptibly onwards but to get it even better you do this a number of times and you also do it to a number of servers if you can so you get a sense of different times from different servers and they should all be fairly close if they're all sort of playing the game but some of them you will get much better round-trip times but more importantly some of them you'll get a very stable round trip time so it doesn't vary you know if one takes a second and then the next one is five seconds you never quite know where you are so it has within the the protocol or the protocol state machine a way to work out which is the best and say well this this one is a very good source of time but it's it's moving around too much so i'm not going to trust that the communication links are just too bad it's perhaps in south america or somewhere like that but this one is not quite as good but at least it's stable and this is where the stratum comes in this st so you can have 16 stratums i think what does stratum mean then so zero stratum is a is a really good clock so it's like an atomic clock or a gps clock or something like that and the stratum one is a computer that's using one of those to synchronize itself so you never actually talk to a stratum zero and the stratum two is something that's synchronized for stratum one and a stratton three to just kind of tops away from the from the sources yeah so that all sort of feeds into it it would prefer to synchronize to a stratum one because you're closer to it but this jitter and the fact that quite a lot of the stratum one clocks are kind of a bit locked down don't trust anyone because otherwise everybody would sink right to that so you you go backwards and forwards between them how often is this happening happens quite quickly initially i think it's every minute but once it's settled down decide where it is it slowly backs off until it's about every 10 minutes it sends a packet out and says are you still right because by now it's synchronized it but not in originally we had connections across the internet to just one place that had one of the estrada one or two things so we were setting it from that and then we're distributing it all around the department because we only had a very thin wire at that point which was great because you so you'd see the stratton one come in and we would all be stratum too because we were connected to that but when you lose that connection it's quite interesting what happens so each of the computers looks around and says oh i've lost that one but there's a whole load of stratum twos around here so i'll synchronize to one of those and they're all saying oh yes there's a i lost that but there's a whole load of stratum twos so i'll synchronize to that so that makes me a three and this one says oh that was a two minute ago it's now a three so i'm now a four and this one says well that that's a four one out so i'm a five so they move up until they get to 16 and then they sort of they kind of tap out at that point and say well yeah there doesn't seem to be anything anything reliable anymore so that's kind of where where they give up on that and how accurate can it be it can get very very accurate you can certainly get to milliseconds or or even better now i think i think the protocol has it down to microseconds what are the things in my late night conversation with dave mills is he spent half his life i think watching clocks and seeing how they drifted so when the uk first came online and started synchronizing he was watching some of the early traffic across that and he noticed at sort of five o'clock all the clocks started to drift and then they sort of got back into sync at about seven o'clock only by small amounts and this was because you know that is when everybody gets thrown from work puts the kettle on the power grid suits up and the 50 hertz signal slowly moves slightly as they try and maintain the grid level but that influences the clocks so the clocks will sort of drift and then when the load diminishes they put it up a bit so all the clocks move back a bit but he said i can tell you know i can tell when coronation streets are holding on i can tell when the the adverts are on because i can see see this gap so for those not in the uk these are kind of popular soap operas television with a break halfway through that everybody rushed out and put the kettle on to have a cup of tea you know being british so he could detect that he reckoned them in one case there was an earthquake in san francisco i think and he said the clocks went a bit spooky beforehand i could see them drifting around i wonder if i've got an earthquake detection through eyes i don't think he ever followed that up but there's a few cases like that where he said you know i could see strange things happening because i got this high level of precision fun for robotics and for problem solving which is your by choosing the car 10 of your journeys take you 71 days die a b c and d and i tell you that die a has a value of 4. how much did you learn about the data set