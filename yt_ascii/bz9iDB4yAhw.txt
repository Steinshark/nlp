while there isn't any magical formula to learn coding faster there is some different tips and tricks that will really help you accelerate your learning process whether you are learning your first programming language or maybe you are already a developer and just picking up another one these are some tips that i have found really helpful in my journey as a software developer to quickly pick up new languages frameworks or really even outside of coding i really use these tips to learn faster before we get into it though make sure to hit that subscribe button for more tech encoding related videos and okay let's just jump right in also i have some very exciting news that i want to share with you i am going to be attending the interact conference on april 7th and this is a completely free virtual conference and i really want you to join me this is a community driven conference that is put on by linear b this is a conference for engineering teams vps ctos and really anyone looking to improve themselves and their teams and even if what i listed is not your current role there is so much value packed into this conference with so many incredible speakers you do not want to miss it actually there is over 30 billion in engineering wisdom that will be at your fingertips at the interact conference on april 7th you can join with me engineering leaders from netflix slack stack overflow american express and more at interact which is a free virtual community driven engineering leadership conference it is one day and there is 20 speakers that are all selected by thousands of engineering leaders in the dev interrupted community if you are a developer team lead vp or cto looking to improve yourself or your team this is a conference for you not to mention one of my favorite things and i'm really looking forward to doing is once the conference is over you can stay connected to the community through the dev interrupted discord server this server has over 2 000 enlightened engineering leaders that are sharing different ideas and helping each other grow i put the link to the interact conference in the description down below so make sure to click on it and sign up and join me there on april 7th [music] when you start your coding journey it can feel as though you have such a long way to go are you ever going to get there are you ever going to achieve whatever it is you set out to learn whether it be a new programming language whether it be a new framework or library it just seems like there's so much to learn and it's really never ending and yes well this sometimes feels like the case and sometimes is the case with tech as it's constantly evolving and changing there are some different things that you can take into practice to really help you accelerate your learning the first thing that really helped me and is often surprisingly overlooked is to focus on the fundamentals i remember when i first started to learn how to code i was so excited to learn react and just jump right into a library that i kind of pushed away or pushed to the side the fundamentals and in turn throughout my career when i was first starting out there were large pieces there was large gaps i guess you could say where i didn't take the time to really focus on the fundamentals and building blocks and that caught up with me really quickly and while it might be a quick way to learn the newest and trendiest thing it won't give you a solid base to learn things quickly as you grow in your career the next question you're probably asking me is tiff you say focus on the fundamentals but what does that really mean what are these fundamentals everyone's talking about and where does it become where is the line from fundamentals to this new and trendy framework or library or language what's what is the difference well that can vary based on person to person role to role but for me fundamentals means not only understanding a programming language or any kind of piece of technology that you are learning but also understanding the why behind it and what i mean by this is when you are learning something new understand why it is why was it created why do people use this why do they gravitate towards this for example if you are learning say angular instead of just learning angular take a step back and learn the whys behind it why would you choose angular over react what are the pros and cons and vice versa when you really understand what the benefits and the cons are of a different technology it will really help you understand the fundamentals of it as to why this is important why it was created and why you chose to use it for the project you are working on the second thing that i did not do for so long and i really struggled with for a long time was know when it is time to ask for help how many people give this video a thumbs up if you're one of these people because i could raise all i need more hands for how many times this has happened but when you are learning something new whether you are a senior management or even a junior whatever level of role you're in when you're learning something new you wait a little bit too long to ask for help you stare at the screen for too long you get frustrated you get annoyed and if you would have just asked for help ask that quick question it would have made your learning process speed up so much more we often let our egos get in the way when it comes to asking for help egos or maybe it might be feeling like you're bothering someone or that you should know this it's a silly question any of those reasons you just have to push them to the side be humble and ask questions now there is a fine line with asking questions just to ask questions and asking questions when you really there really is a need to ask a question and that's a question i actually get asked a question of a question that i actually had asked quite a bit is well when do you know it's time to ask a question to someone else and for me i have a process that i've shared with you before but i'll i'll summarize it again which is if i'm learning something new or stuck on anything but need to ask a question i have a little bit of a mental checklist that i go through the first one is of course researching if i can't find it on research though i'll move to talking to the rubber duck method and i truly do this where i speak out loud to myself i don't have a rubber duck but i just speak out loud to the air and voice what problem i am trying to solve and when you actually articulate into words what problem you are trying to solve a lot of times you end up realizing that you didn't even weren't even focusing on the right part of the problem if that still doesn't work for me i am a walker i love to go for walks i live in canada so sometimes that can result in very cold walks but nonetheless i still stick it out because it's a great way to step away from the computer clear your mind and when you come back you might be surprised that you just think of the solution at this point if i'm still not able to solve the problem that is where i will ask for help and what i do is when i ask for help i don't just like kind of word vomit onto screen to someone else i rather i say this is what i'm trying to solve this is what i have done this is exactly what i need help with i get very specific because not only will it help the person who is about to help you but it will also help yourself have another clear understanding of the problem or the learning curve at hand coming in at number three is build and break things i used to be so scared of breaking things and now i break things all the time intentionally and unfortunately unintentionally but anyways tear yeah no breaking things is a great way to really understand what part of code is doing what and it's a great way to teach yourself too about okay so this does this and why does it do this kind of taking things apart alongside break things goes from learning with the errors and a lot of times when we see a bright red error i don't know why we've made errors so unfriendly looking but when we see a bright red air we often just kind of get freaked out and walk away from it or turn away from it but in reality when you take the time to read exactly what is going on in the air more often than not you will be able to resolve the issue at hand or at least know what better to to google based on what the error is giving you so don't be afraid of bugs bugs are kind of our friends at the end of the day because they give a clear message hopefully usually to what is going wrong the next one which is so important if you are working on learning how to code or learning a new language and you want to do so faster is having clear goals set out clear goals if you just say to yourself i am going to learn python you probably will never learn python if you say to yourself i am going to learn python in three months and break it down i'm going to spend an hour every night learning python monday to friday et cetera with a clear path laid out and clear goals you are way way more likely to actually achieve this goal than if you just kind of be cloudy about your goals and not set specific timelines so set those timelines okay this went blank it's okay and the last one is be confident i know this is hard to do when you are learning something new but believe in yourself speak to yourself how others would speak to you or you would speak to others i should say because a lot of times we it's our own self-doubt that gets in the way for going after our goals or learning something new and especially learning something new faster because we put so much self-doubt on us that oh i shouldn't be i won't be able to learn that or this will take a long time to learn no be your own biggest cheerleader pump yourself out if someone else can do this you can too and that's kind of my motto in life i feel like it should be my bumper sticker and that's really what i face so many things around that hey they can do that well then i can do that too why why not me and i really encourage you to get into that mindset because it's a great way to be more be less what is the word be less be less fearful that's what it is be less fearful and actually go after what you want and start learning that new language or start working towards that promotion whatever the case may be but taking on new things and doing so more quickly like i said at the beginning of this video there is no secret formula to learning how to code or learning anything new faster but rather there are different strategies and tips that i just shared with you that will really help accelerate that process it's kind of like it's kind of like when people go on diets or go to the gym there's no magical formula although so many magical formulas are promoted to us at the end of the day you just need to put your head down and get into the work thank you all for watching this video i hope you found it very valuable and helpful when you are picking up your next new programming language or any kind of technology and want to learn it as quickly and most importantly as efficiently as possible thanks all i'll see you soon you