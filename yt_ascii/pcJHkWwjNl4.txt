today we're going to talk about sorting and in particular we're going to talk about two very well known sorting methods one is called selection sort the other one is called insertion sort and when people learn about sorting methods they usually learn about these as being two completely different ideas you have selection sort on the one hand and insertion sort on the other hand and what i'm going to show you today is that these are actually the same you can regard them as being equal the trick is that you just draw pictures of them you don't need any coding to see this you don't need to know any fancy stuff in fact you don't need to know anything about computer science at all if you just draw a picture of selection sort in the right way and a picture of insertion sort in the right way you see that they're actually the same thing and this is kind of a secret about sorting methods that even people like me who've been doing computer science for many years most people or hardly anybody actually knows this little trick we'll start off by kind of refreshing ourselves with pictures about what sorting actually is so let me draw a box what we're going to do is put some numbers into this box doesn't matter how many numbers everything which i'm going to show you is completely general but we'll do it with five so suppose we do a five and a two and a three and a one and a four these are the first five numbers and in some kind of random order here but the key thing is they're not sorted they're not in ascending order what we'd like our sorting box to do is give us the same numbers out but in sorted order so we'd like to have one two three four and five coming out let's start to think about how we might construct a little program which implemented this kind of sorting procedure here the most basic building block which you can think of is just a little box with four sides what this box is going to do is on the left hand side and on the top side you're going to have two numbers come in and then at the bottom the smallest number is going to pop out and on the right hand side the largest number is going to pop out so you can think of this as being like a little sorting box for only two numbers so for example if we put the number 1 in on the left hand side and the number two in on the top then what our little sorting box would do is give us the smallest one at the bottom and it would give us the biggest one out the right hand side so this is a sorting box for two numbers and it doesn't matter the order in which the two numbers come in so if i swap this around and if i had a two coming in here and a one coming in here it doesn't make any difference the smallest one is going to pop out the bottom and the biggest one is going to pop out the right hand side so the game here is we've got this basic building block and we want to kind of plug these together and just with pictures and see how you can build a little sorting program the trick is that you just build a little triangle of these boxes so let's put a bunch of these things together there's a little triangle of these boxes and we're going to just wire them together in a very straightforward way we'll just draw the obvious little links between them and each of these boxes just sorts two numbers like we saw a few moments ago so let's take our little example and just push it through this little sorting network and actually see what happens so i think the numbers we had were five two three one and four so at the bottom we hope to get one two three four five so let's see what happens so we're going to treat the first column first of all and we'll see what happens so it's really simple so you've got the two and the five coming into the first box so the smallest number pops out at the bottom so that's the two and the biggest number comes out the right hand side so that's the 5. and then we do the same with the second box in the column so we've got 2 coming in and a 3 coming in so the smallest number pops out at the bottom and the biggest number comes out the right hand side and we just do the same again then we've got a one and a two so the one comes out at the bottom and the two comes out the right hand side and then we've got a four and a one so the one pops out at the bottom and the four comes out at the right hand side so what you see is that the smallest number which in this case has one has kind of rippled its way down to the bottom so what's happened is this first column has selected the smallest number okay and it's quite easy to see that that's the case because the top box selects the smallest from the two numbers it's given and then the second box selects the smallest numbers from the two numbers it's given and so on and so on so kind of the the smallest number is going to ripple its way down to the bottom so it's selecting the smallest one then we do the same with with the remaining columns and we won't be surprised with what happens so we've got a three coming in and a five coming in so the three will pop out and the five will pop out here then we've got a two and a three so the two is smaller so it pops out and the three comes out here and then we've got a two and a four and the two is the smallest and then the four pops out the other side you see what's happened again from the remaining numbers five three two and four the second column has selected the smallest one and then if we just complete this it's obvious what's gonna happen we get a three here and a five here three four four five so what you see is that our little sorting grid has taken five numbers in a mixed up order and just by pushing them through one column at a time we've ended up with the numbers in the correct order and this is known as selection sort because each column just selects the smallest number from what is left okay so nice and easy you don't need to do anything about computer science anything about algorithms anyone can understand what's going on with selection sort here but you can actually view this picture in another way so let me redraw the same picture okay so just wire it up in exactly the same way as before and we'll push exactly the same five numbers through so we started off with a five two three one and a four so what we did last time is we treated it in terms of the columns but actually you can do exactly the same thing in terms of the rows so we'll do one row at a time and actually see what happens so if we consider the first row it's the same as before we get the two and the five coming in and the two pops out here and five pops out on the right hand side because the two is the smallest one so we'll do the second row so what happens so we've got a two and a three coming in so the two is the smallest will come out at the bottom and the three is the biggest so it comes out on the right hand side and then we go over to this box in the row we've got a three and a five so the three comes out at the bottom and the five comes out the right hand side so what's actually happened is the second row has taken the two and the five which are already in the right order because the first box did that for us and it's taken the three and it's put the three into the correct place so maybe if i use a different color here you can see this so i've got a two and a five here and then i've got a three coming in on the left hand side and what the second row does is it puts the three into the right place so at the bottom you get two three and five so what the second row has done is inserted this number into the right place and let's see what happens with the next row so then we've got a one and a two coming in so the one comes out the bottom because it's the smallest and then the two comes out here and we've got two and a three so we get the two and the three and then we've got a three and a five and the three is the smallest so it comes out here what you see is exactly the same thing has happened again we had a one here and then we had two three and five which is already being sorted by the grid above us and then this row here is just going to put the one into the right place what's popped out at the bottom of this grid is one two three and five so we just complete the picture we'll get the expected result so we've got a one and a four so the one is the smallest so it pops out the bottom and the four goes around here then we've got two and a four so the two pops out and the four and the three and the four so three is smallest and then we get the four and the five this sorting method when you think about the rows rather than the columns is called insertion sort and it's called insertion sort because each of these rows just inserts a number into the correct position in a sorted sequence so for example if we look at the bottom row here the input on the top is a sorted sequence one two three and five those are in the right order and all the bottom row is doing is putting this four into the correct position so that we get one two three four and five previously we had exactly the same picture and we said that selection sort if you view it in terms of the columns and if you take the same picture now and view it in terms of the rows this way around then we get insertion sort so for me this is a bit of magic i've been doing computer science for a long long time i was thinking about how to teach sorting algorithms to my students a few years ago and i came up with this pictorial idea and i didn't realize until then that insertion saw and selection sort are exactly the same thing but you only see this if you look at it in the right way using the pictures basically it all comes all down to perspective right yes exactly it's it's this if you look at stuff in the right way then you can see things that you couldn't see before so if you write programs to do insertion sort or selection sort the kind of structure here which is the same as being is being kind of hidden from you but if you just draw some simple pictures and forget all your fancy computing then you end up with an observation which is quite interesting have you come across anything else that is kind of a similar have you gone through other sort of algorithms and thought thoughts about them this way yeah so a colleague of mine from oxford a few years ago we i was showing him this to him and he said oh we we can write a paper about this so we we tried to look at like quicksort and merge sort and see if they were have the same kind of duality but it didn't quite work out at the time and we kind of gave up writing the paper about it but i think this is just a simple observation in its own right here it's very difficult for a firewall or something to notice this because these are valid http requests they're just super slow and you know maybe i've just got a really bad internet connection maybe