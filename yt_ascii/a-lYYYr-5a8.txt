i've only made it through a little bit of this book so i'm actually curious what his take is on this one because this is something that i'm very curious about there are plenty books about goink like for any other language and most of them about learning go like beginner stuff and when it comes to that i'm pretty sure there a bunch of good ones but what i read and what i covered is a book by the way beginner programmer books are kind of crazy can i just throw that out there can i just throw it out there that beginner programmer books kind of crazy explain there's two types of beginner programmer books one there's i have never programmed teach me what programming is and how it works now that's probably better done through a series of exercises and guided course right and then there's number two type of beginner programming books intro into goang and i just have to ask why why would you buy an intro into goang why would you buy an intro into anything when they're just simply available now there's there's like how to use go the most canonical way right that's good like that that could be a book you'd want to read because you're like hey i can learn to program that's not even hard like i'll go build a server for two days and figure that out pretty easily but now it's like more i need to figure out how do i write go code that looks like other people's go- code how do i do this so that i understand what people generally think about what is the best ways to write go code because i'm new to it and i'm just going to write a bunch of crap cuz i don't know what i'm doing like give me a book on wisdom don't give me a book on how to write an if statement in a programming language you can literally look that up okay it is available co-pilot will write it for you chat gpt will write it for you the internet has thousands of copies of it just go and look it up right it's just so silly to buy a book to teach you to write an if statement or a function or a struct like there's plent like that content is freely available everywhere you want to you want to buy a book for wisdom you don't want to buy a book for intellect if that makes sense or for knowledge like anyone can simply buy a book for just like simp like you can just look up the pure simple knowledge it's that wisdom it's like how do i translate what i already have in my head to fit best into this new paradigm known as go or whatever that thing is like the rust book gives you everything you need to know about rust but where where's that book i know it's somewhere around here dang it where did i put it that's somewhere else anyways like zero to production with rust that's a great book because it shows you okay you know how to write rust we're not going to talk about if statements and borrow checkers or any of that kind of crap we're going to show you how do you write a production styled application in rust here's all the steps now that could have just been an online set of you know tutorials or it could have been a book right like that for me is like a wisdom book it's like how this is how you build the best possible most canonical style of something and i really enjoyed that book so there's like a difference it just seems silly to learn how to write an if statement from a book it just does especially when you already know how if you already know how to program like what are you doing doc just just take one second to google it called learning go an idiomatic approach something like that i recommend it because i think i think when you learn a language it is really important to learn the idiomatic approach to solving particular problems and stuff like that right besides these there are there are books about specific topic within a within a language like for example this one concurrency i do like that specific topics is pretty cool having someone who is really good at a specific topic i think it's really valuable to have them and if they choose to write down their stuff in in a book like it can be very beneficial i definitely have some go books that are just like specific knowledge about a topic and i like that like i like that a lot the problem i have with like especially that idiomatic learning go problem is it mixes learning go with it like i feel like you could condense that all down to like 20 pages 30 pages 40 pages of like this is how you approach this problem here's a problem let's walk through how you'd approach it the goway and people don't do that and it it it just drives me nuts i don't want to learn an if statement i just want to learn how you do that that's why i typically like topical books like that concurrency one probably really good like here's here's how you really want to think about concurrency and everything like to me that sounds like a great book sounds like a fantastic book to read if you're by the way if you're not reading books this is a crazy statement this is a crazy statement right here understanding documentation is better than reading a book i don't think you can relate the two at all documentation is just the basics the atomic building blocks it's the berkeley sockets of how of how the programming language works whereas a book is like here is what i've learned here is what i've written here is how you should approach problems they're almost exclusively different and if your documentation contains that it feels a little weird and if your book contains documentation probably pretty weird right there's different problems they're like they're not even they're not even the same you're not solving the same thing you should always read the effing manual but you should also read books books are fantastic ways to learn there's some really great wisdom in books go in in go but what i think the most useful book like overall for for any level of experience is a book called 100 to grow mistakes i literally have that on my nightstand i'm on to like mistake five the problem is the first five mistakes are like very generic stuff that apply to all languages so i was pretty disappointed by that i wanted to see some go mistakes and so i was really excited for go stuff like stuff i don't want to oopsy daisy on go so i'm going to keep on reading that and how to avoid them if you were programming in java like i did before moving to go you are probably familiar with a book called effective java so this by the way the java to go pipeline is real i i genuinely think there's going to be this large renaissance i wouldn't call it a renaissance i think the swell of available go jobs and growing go market is only going to get bigger because i think that pipeline going from java to something else seems really really natural transition because you want something that's compiled and a lot of people don't want to write rust or javascript right those are like the two other ends right you have like go you have you have go and java in the middle in rust and javascript on the ends and people don't want to do javascript and some people just don't like rust like that's just the reality right they're just not ready to become a furry yet and so it's just like java and go they just feel in the same market well c is like the same thing right c is just java right i put c and java in the same i know they're like very different languages but i put them in the same category and so then then there's like the hop from cotlin also falls into the hop from right so cotlin would also be in like this the go camp where they just want to learn something different or something that's that's newer and so this is basically like effective java in go and if you know effective java is like the book for for java programmers the book is written by author called tia i hope i didn't didn't butcher the name and which which at the time of writing the book i think he was working at docker and now he's a senior engineer at google i guess having a book in your resume is like good thing right the book itself is like full of information that that's actually kind of interesting i you know you remember how on github there's all these like just hundreds of  pr so people can say they contributed to open source are we about to get the hundreds of books because having a book on your resume is better to get hired for and so now here it comes here it comes the low quality the low quality book the low quality book tour is about to happen ai gener ated book let's go it's already happening that's what we want to talk about it is really really nicely presented and that is what one of the one of the good good things about it right it is separated separated in the into into various topics and within each of those topics the author mentioned and covered most known mistakes that we as go go programmers did or could do in the future my number one mistake i still make regularly is that maps are initialized to nil i really wish there was an option type i really hope that as go goes on with the generics that they make some sort of option type that also works well with javascript so that if it's a nil it's an option none like i i'd love that i i'd love that just because my number one oopsy daisy i personally make is is null pointer exceptions right like that's that's my biggest oopsy daisy it's like my my just my great it's it's a skill issue for sure absolutely all things boil down to a skill issue it's just that some skill issues i'm just worse at and i can't seem to get better i literally cannot seem to get better no but you're right don't don't jk don't hey don't don't whoa whoa whoa whoa whoa whoa whoa we're not hey we're not that kind of people around here okay when you say something you say it you say it with your chest okay you said skill issues and i agreed with you you can't come back and jk me now okay you lean in you lean in and be ready skill plateau yeah skill issues you suck thank you okay you go you own that okay don't don't don't be trying to like change your opinion around here we don't do that okay you lean in and you say what you got to say now if i make a great argument for why you're wrong then maybe you can change your opinion but you can't just change your opinion because i agree with you okay that somehow makes it feel worse it actually makes you it actually makes me feel like my opinion is so shitty that when i agreed with you you realized you were wrong and you went back on it that hurts me physically okay like you think i like that you think i want to be a that i don't think so that's ridiculous right or maybe doing right now the topics go all the way from from project organization to to subjects like goal and concurrency and go performance and optimization what do i like by the way i really like what he's saying i got i'm going to go through the how about this one i will go through the 100 mistakes of go over the course of the next month and i will report back and i will do a like response short to this sounds good you guys in for that cuz i can't stream it i don't know if i'm allowed to stream using the book cuz you know you know how it goes like someone put a you know i don't know if you can really do that but i've been wanting to go through the book i'm a couple in i feel like i feel like it's time to just go through and just finish it off because everything he said are things that i want to know about like what are the common mistakes you make especially when it comes to concurrency because i again i'm not super familiar with go i want to i want to jump charge super charge ultra charge turbocharge my go knowledge and the best way i see is to you know to read some of these the primen book club i've been thinking about doing the primen book club the problem is is that some books i start reading and i don't like and if i have to if i have to like you know like commit to one and i don't want to read it anymore book clubs are good for like one to two weeks exactly may maybe we'll do it maybe maybe someday i'll do that i've never started a patreon but one of the ideas i had was to do effectively like a book club mentoring type patreon where it's just like you guys want to do that i want only committed people cuz the problem about like book clubs is a lot of people they they say they're committed and then they just fall apart and they don't do it at all and so it's just like if i can if you put like $5 on the line all of a sudden you're reading that book and it's like you oh yeah book club dune four children the children of god or whatever it's called it's just like damn now you got me right five like right it just makes adhd stops me from reading that's why money tends to be a really good motivator right if you can make people have to pay children of doing that's what it is children of dune if you can make people pay they will just tend to complete things more so are there any good books about approximator neuron nets i'm sure there's plenty the most is that before going and explaining the mistake itself pay for shut up the author always gives a really really good introduction to basic concepts about the subject right but when i say really good i mean like really really good like it is useful for beginner programmer in general but also has meat for a for a experience developer like for example a section a section about go concurrency so this is a hard topic in general but here the author did an excellent job on explaining like everything from the go run time and how go routines are managed and scheduled all the way to go to go memory model specification itself right and if we talk about go memory model this is like one of the best explanations about the topic and i covered bunch of bunch of them and okay okay good i it sounds like this is a cell for me for the book yeah it's a sell for me it's a sell for you i think let's get sold on that one because that sounds very that sounds really good i like that just that when you like read about go concurrency in general you you will rarely come across about go memory model like in this whole book on the topic right you will not for some reason read about read about go memory go memory model and here in this book that talks about a bunch of different things you will you will find really good explanation java is less than anything else not true okay if you are building enterprise fbuds you would only use java everybody knows that like that's how you enterprise about the topic and this just shows you how much there is really good stuff in here and no this is not a paid commercial for the book right i simply really like it it helped me a lot when learning the language and like when when when when programming in go like on on daily basis it is actually usually on my desk like like a reference when i stumble upon something i don't know i simply highly recommend it and i'm pretty sure you're going to like it as well like always thank you very much for watching i really hope was that a transition or did this camera just wig out there for a quick second you liked it and if you did maybe give me a thumbs up and maybe consider subscribing why not right so you don't miss the next video and until then byee this was a honestly this was probably dude enel i'm first off i am hitting the subscribe button i am hitting the thumbs up you know it i have not seen someone just give me the effing meat and give it to me raw in a while on youtube like everybody is out there giving me just the slowest role to get to the meet and it's just so dang frustrating you know what i mean this was refreshing it was it was just the introduction was fairly short and it wasn't just like an intro like hey you know my name instead he like he he didn't just give us the tip okay we're talking like this was the full shaft learning here i'm very excited about this this was fantastic very happy about this i would love to see more of this right i want more of this huh huh no theo i understand that that exists what do you think i was referencing i i get it you got quit just trust me i get it i get things i for the most part when i say things when i say java enterprise fizzbuzz like i specifically called out the language and the name of the repo and you spammed it like six times theo theo you made it into this effing video because you kept saying it theo theo you said it there and then back up here you said it again you've said it at least three times theo theo pick get your together theo a jet