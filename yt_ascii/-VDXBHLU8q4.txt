i want to tell you how i learned how to code from completely zero completely on my own in just four months and i even got a job as a software engineer after that i don't have a computer science degree i didn't do a boot camp in fact i've never paid for any materials i've used to learn coding because in this day and age coding is a skill that you can learn for completely free on the internet i am proof of that and in this video i want to tell you how i did it so just a few months ago i had no idea what coding even was i just had this vague idea that something related to typing complicated stuff on a computer to get it to do something and that's essentially what programming is it's you speaking to a computer to tell you what to do but a few months ago i had absolutely no idea what it is what all the other languages do anything related to it got the idea of learning how to code after i graduated from university with an economics degree now most people who do economics end up doing investment banking consulting and these types of things and i did an internship at a bank but a long story short i absolutely hated banking i wasn't passionate about economics and i certainly wasn't passionate about working in finance or many of the other industries where economics grads used to go to i could have easily done it and gone on to make a lot of money as a banker but i just hated the lifestyle the work wasn't inspiring to me so it was clear that i needed a new plan so why did i decide to learn coding i wanted to find an industry where i could still make a lot of money but also have a more humane lifestyle and work on problems that i'm actually excited to work on so i discovered software engineering so i learned that in order to become a software engineer all you really needed was know how to code so i went on google typed how to learn how to code and i ended up starting with resources called python for everybody and the ori project these are both completely free resources that i found online the former introduced me to python one of the most popular programming languages of today and the latter introduced me to web programming so i learned how to build a web page using html css and javascript and stuff like how the internet actually works and what it actually means for you to open a webpage on your computer and i was absolutely fascinated by all of this so the next step was to take a proper introductory course in computer science and i decided to go for harvard university cs50 which you can do for free on edx and i've done a review on it which you can watch right here long story short it's an excellent course in fact it's one of the best courses i've ever taken in my life i was absolutely blown away i came out of this course wanted to consume all the information there is in the world about programming and computer science that is how excited about this field i was and that's when i knew that this was the field that i really wanted to go into cs50 was very challenging it's hard programming is very difficult the thing is i really like working on difficult problems like this and by the way this kind of problem solving is not for everyone and that's completely fine the problem says of the course absolutely kicked my ass but i really embraced the challenge from this course i learned the c programming language which got me introduced to the lower level implementations of a lot of the functions that you will take for granted in a language like python the course does use python as well so i got even more comfortable with python i also got introduced to web programming which i had already been doing as part of the odin project i also got introduced to how to use databases via sqlite but most importantly it taught me the fundamentals of how computers work at a low level this is what i feel like many people learning coding neglect especially if you're self-taught i think it's really valuable to at least get some kind of an understanding of how computers actually work because i could actually make you a better programmer down the line in case you're not aware of the difference computer science studies how computers work whereas programming is more like how do you practically create program how do you talk to computers together to do stuff but the better you understand computers the better you will always be as a software engineer or a programmer as the final project of cs50 you're going to be building a full-fledged web application using the stuff that you learn in the course so at this stage you will essentially know how to code you'll be able to build very simple things it'll be a struggle but you will have an understanding of what it means to build a front end of a website and what it means to build a back end of a website and what sort of languages i used for all of these and how to actually connect the front end with a back end using a framework like flask which is the one that you will use in the course so after doing this before venturing into other areas of programming i wanted to get even better at web programming specifically so i did cs50s follow-up course web programming with python and javascript and this course is essentially a continuation of the extremely engaging and exciting style of cs50 but it's just even more focused on a web programming specifically rather than computer science as a whole and be warned this one moves at an even faster pace than cs50 you'll know from my cs50 review that cs50 is very hard and the continuation course the cs50 web is even harder every single week pretty much you'll be building full-fledged web application this time using the django framework it will really really push you to get better but the great thing is that every single week you're building an actual application which you can then put on your portfolio later to apply for jobs again they are simple compared to the stuff that you'll be able to build if you've worked as a software engineer for a long time but again for entry-level jobs they don't really require that elaborate stuff it took me a while but i came out of this course having a pretty decent understanding of web programming the point that now if i have an idea of building whatever i can just go out and figure out how to build it on my own i don't need a course to hold my hands anymore and that's really the goal of these courses is to hold your hands to the point where you know just enough so that you can go into the world yourself and build whatever you want to build so if you do all of these steps and you do them properly you will now know how to code i did this all in around four months it might take you longer if it does that's completely fine i had a lot of time to put into this i was able to work on all of this for around a couple of hours each day it's absolutely fine to take your time but before i get all the experienced software engineer typing on my comment cool you know how to create a simple web program as nothing look hold on i understand coding is a skill that you will never really master it's a field where you always need to keep learning new things because there are always new technologies coming out software engineering practices changed and that kind of stuff so when i say you will know how to code i don't mean that you will be a master i don't mean that you will be a great software engineer what i mean is that you will know enough to start creating simple things and you will know enough to get your foot in the door in the industry than to get your first job in terms of web programming for example you will understand what the front end and back end means and how to connect them using a framework like django or flask and you will sort of know how to navigate yourself into tech world and that is what i would call the first step of getting into the software engineering industry and then when you get your first job that's when you will keep improving down the line obviously this field is something where you will need to become a lifelong learner you need to be someone who likes learning new skills and updating their learning all the time if that's not you then this field might not be for you i know it's for me because i love learning new things that's why i'm so excited about this field just keep in mind and think to yourself whether this is actually something that you want or that you don't want but i will tell you that in this day and age coding is sort of the closest thing that we have to a superpower it's one of the most in demand skills in the world so if you just learn enough coding to get your foot in the door you'll pretty much be good for the rest of your life there is so much demand for these skills there are so many jobs of software engineers i know it's not going to be replaced by ai anytime soon if it does please kill me in fact if you look at any other predictions from people and my own opinion there will just be more and more software engineering jobs in the future and currently there are not enough software engineers in the world to fill up all the positions that are available so if you learn this skill you will have something extremely valuable and it's a pretty good feeling to be able to offer something that's genuinely valuable to the world okay so i didn't talk about my software engineering job yet so here's how that happened the truth is that i got slightly lucky because what actually happened is that during this process that i've described i did a non-software engineering internship at a big company it was a business kind of internship and it just so happened that i was in a division that also hired software engineers i did well in the internship and they wanted to give me a return offer so i just asked them hey would it be possible to get that return offer as a software engineer because actually i've been learning coding so i was basically just able to convince them of my potential and motivation as a coder person to get them to give my return offer as a software engineer so you could say that i got slightly lucky but what this goes to show is that you should always ask you should always try before you think you're ready at this point i was around two months into my process i certainly didn't think i knew enough coding to actually apply for software engineer jobs directly but what this goes to show is that try before you think you're ready you never know what's gonna happen and even if i hadn't got this job i think with my skills now i would certainly be able to apply for a software engineer jobs directly i have a lot of side projects i've done in my portfolio and i can talk about my passion and motivation to this field in a very genuine way and so what i'm doing now while i wait for my job to start i'm building projects on my own to get even better and i'm digging deeper into computer science itself and i'm doing this completely on my own without paying for anything as well and actually created a full system to track my progress learning computer science using materials on the internet using notion and i made this video about it the response has been amazing i'm sure you'll love it go watch it and if you want to follow my journey of self-teaching computer science and life as a self-taught software engineer make sure to subscribe