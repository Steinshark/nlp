hi everyone in this episode we're going to be adding ability to create multiple shapes like so and we should be able to jump between editing any of these shapes very easily all right let's go to the shape crater class and here we've got our list of vector threes for all of the points in a shape so it makes sense that if we want to have multiple shapes we could just have a list of list of vector threes however unity currently doesn't support the serialization of lists of lists so we wouldn't be able to save that data to get around that we're going to create a public class called shape and this shape class is going to hold our points list and we're going to mark the class as being serializable with this system dot serializable attribute and over here we can just now make a public list of shapes which i'll set equal to a new list of shapes so in this sort of roundabout way we've managed to get the list of lists that we wanted all right let's save that and go into the e shape editor class where we now of course have loads of errors waiting for us let's start with the draw method here so you ain't want to loop through all of the shapes so i make a for loop for int shape index starting at zero while shape index is less than shape greater shapes count then increment shape index by 1 and i'm going to put all of this stuff inside that loop then we can say shape i'll call this shape to draw is equal to shape rated shapes with an index of that shape index and then we'll have to adjust some of these things so instead of shake rated or points count we've now got shape to draw and dot points dot count let me just copy this name shape to draw so i can basically replace shape creator with a shape to draw in all of these instances here like so and now the draw method should be relatively happy let me copy this for loop here because we continued again in the update loss of info method so here we'll want to copy that in place all of that inside of the loop and instead of shape to draw and we call this something more sensible in the context i'll just call it current shape all right and then just replace shape croatia with current shape and let me copy this here and we're going to want to do this once again for this a line check loop so i'll paste that in and once again replace shape crater with current shape alright so i think that method is now happy as well so we can move on to the next method that has some errors which is this handle left mouse drag method and here we want to get the points from the currently selected shape and currently we don't have any way of knowing what that is so let's go down to selection info and create a public inch i'll call this selected shape index and then just as a little shortcut i'll make a shape accessor here call us the selected shape and in its get block will just return shape creator and dot shapes with an index of selection info dot selected shape index alright so coming up to this handle left mouse drag method i can now say simply selected shape dot points blardy blardy blar so let me copy selected shape because that's how we're going to fix all of these other ones in the other input methods as well just replacing a shape creator with selected shape i think there's one more error just over here okay so now we have no more errors left but of course things aren't going to quite be working yet first of all there's currently no way to create a shape so the shapes list is just always going to be empty so let's create a method called create new shape and this will just say shape crater and dot shapes dot ad and we'll add a new shape object to that list we'll want that new shape to be selected by default so let's say selection info dot selected shape index is equal to the index of that new shape that we just added to the end of the list so we can of course get that index by saying shape crater dot shapes dot count minus 1 and we might as well add the ability to undo any new shapes that we create so we can say undo dot record object will record the shape greater object and i'll just call this action create shape okay so now we need to figure out when we want to actually call this method so you can imagine that the first time that the user left clicks in the scene there may be no shapes in the shape list so let's go to the handle left mouse a down method and just say that if that's the case so if a shape greater dot shape star count is equal to zero then we're going to want to just automatically create a new shape but then subsequently let's say that if the user wants to create a new shape they'll have to shift left click in the scene so i'm going to create a method here avoid a handle shift left mouse down i'll take in vector 3 in mouse position and let's call this i'll just copy this handle left mouse down code here and instead of saying gui event modifiers is equal to none we'll say if it's equal to okay so it will say create new shape after shift left clicking to create a new shape i think one would expect you to also add in a new point at that location so we now want to run this sort of create point code over here but of course it's a bit tricky because it's all tied up in our handle left mouse down method so we want to separate this logic out into a separate method so let me cut that out and over here just below create new shape i'll create a void create new point and it will take in a vector3 position and we can just paste this stuff in and instead of mass position we now use position all right and let's also say needs repaint is equal to true and whenever we create a new point we also want that point to be automatically selected so let's have a separate method here called select point under mouse and this will just say selection info dot point is selected is true and can also say that mouse is over point is true and because a point is selected let's just make sure that a line can no longer be selected so i'll say selection info dot mouse is over line is false and selection info dot line index is negative one or we also want to set selection for dot position at start of drag equal to the position of the currently selected point so that would be selected shape dot points with an index of selection info dot point index finally we can just say needs repaint is true so when we create a new point we'll call select point under mouse immediately and then in the handle shift left mouse down method after we create a new shape we'll ask it to also create a new point at the mouse position and in our regular handle left mouse down method we can say that if selection in photo mouse is over point and then we simply want to select the point under the mouse otherwise we will create new point passing in the mouse position and we no longer need the rest of the stuff all right i realized i made a small mistake earlier which is just that i'm still calling handle left mouse down in this shift case where i first want to call handle shift left mouse down and we'll rehear just for this handle left mouse up i actually don't care what modifiers are held down so i need to remove that ok let's save this and you're into unity to see where things stand at the moment so on the shape create a game object go to left click to automatically create a new shape and place a point and now to make a new shape manually i'll hold down shift and left-click and that will create this new shape here and we can start adding in points for it and i'll do that once again ok now our first thing we notice of course is that when i'm hovering over a point the corresponding point in each of the shapes is being selected so let's go back into the shape editor and in the draw method we all want to know if the current shape that we're drawing is the selected shape so we can create a boo shape is selected which is true if the current shape index is the same as our selection info dot selected shape index then i'm still going to define a color here called the d selected shape color and i'm just gonna set this equal to colored gray so i want to draw all of the points and lines of the non selected shapes just in a single color this deselected shape color so over here where we're drawing the lines let's say that a line can only be selected if it's part of the selected shape so i will say and shape is selected all right otherwise if this is either not a selected shape or just the line isn't selected then i'm going to say that if shape is selected then we'll draw it in its usual black otherwise i'm going to draw it in the d selected shape color and then i'm going to do the same thing here for the points so here i'll add and shape is selected and here i'll say if shape is selected then draw it in white otherwise draw it in the d selected shape color okay yeah let me save and give it to unity so now this is looking a little bit better we've got our selected shape here which we can interact with and the other two shapes are grayed out but if i hover my mouse over this point for example it's still going to highlight the corresponding point on the selected shape so that's a bit weird what ideally like is that even on a great out shape if i actually hover over that point for that line then it will highlight in just that point your line on the a greyed out shape and then if i click on it this will actually become the selected shape so how to achieve this first of all in the selection info class we're going to need another bit of information a public inch for which shape the mouse is currently over so i'll call this the mouse over shape dex we will be setting that in the update a mouse-over info method so just like we've got massive a point in dexia let's add an int massive shape index defaulted to negative 1 and whenever the mask goes over a point we can also say mouse over shape index is equal to the current shape index referring to the shape index in this loop up here alright so now in this if statement we're saying if mass of a point index is not equal to the selection in for point index and we'll say oh the mouse over shape index is not equal to selection info dot mouth of a shape index and we'll want to set selection info mouse over shape index equal to the mouse over shape index that we've just calculated and the same thing is going to apply for the lines so if we found a new closest line index or we can say a mouse-over shape index is equal to the shape index and just like we did a moment ago well here also say or the mouse over shape index it's not equal to selection in photo op mouse over shape index and we'll set it selection for dot mouse over shape index is equal to mass of a shape index okay so what can we do with this new bit of information well first of all in the draw method or we can create another bull mouse is over shape and this will be true if the shape index is equal to selection info dot a mouse over shape index and one we're deciding whether or not we can show the line in its highlighted color we don't really care if the shape is selected we other care if the mouse is over this current shape so let's change that over here for the points as well and mouse is over shape all right so let's save this go into unity and see what this is doing now so once that compiles we can see this is working here and we can also highlight the points and lines of the grayed out shapes of course at the moment or what isn't working is if we actually click on say this point here it's just going to interact with the selected shape so we want to tell it when we click on a new shape that should become the new selected shape index so back to the script and let's come somewhere up here and create a new method called select shape under mouse and this is going to say that if selection info dot mouse over shape index is not equal to negative one then the selected shape index will be set to the selection info dot mouse over shape index and will request a repaint okay so whenever we left click before we go about actually selecting a point for creating a new point we're going to want to select the shape under the mouse all right finally whenever we create a new point we're going to want to say selection info dot mouse over shape index is equal to the selected shape index all right let's save this and see how it's doing now so wait for it to compile and then we can try interacting with this shape here and then i'll left-click to interact with this other shape and see it's now become selected and we can try doing things like splitting the line and that should work as well let me shift left click to add in a new shape that's also working as expected the one way we might be able to break things a little bit as if i press command z a bunch of times to actually undo that shape that i created and now the selected shape index is going to be equal to a shape that no longer exists so if i left click we're going to get an argument out of range exception so the way we could handle this is by detecting whenever an undo operation is performed so let's come down to someone at the bottom here and create a method called on undo or redo and in this method i'm simply say that if the selected shape index is greater than or equal to the number of shapes in the shade greater then we'll want to set selection in photos selected shape index equal to the index of the last shape in the shapes list so shape crater dot shapes count minus 1 ok now in order for this method to actually be called we need to subscribe it to the undo dot undo redo performed event so just say plus equals on undo or redo here in the on enable method and we should also unsubscribe this when it's done so in the on disable method i'm just going to copy this and instead of plus equals of course have minus equals so with that done that little bug should be fixed so if i create a new shape here press commands edge we can now see that the last shape becomes automatically selected so if i left click now we'll just be interacting with that shape all right now i have found one more bug which is that if i hover the mouse over a line and then shift left click to add in a new shape we get this argument out of range exception so let's go up to the create new point method and what's happening here is it's saying that the mouse is over a line and so it's trying to insert a new point based on that line index but since we've just created a new shape that line doesn't actually belong to this shape so what we can do is just create a bool mouse is over selected shape and this is true if selection info dot mouse over shape index is the same as selection info dot selected shape index so we only want to insert a new point along the line if the mouse is actually over the selected shape so if we save that now we should see that that problem is gone i'll clear the error there and shift left click and we can add in a new shape along a line like that ok that is everything for this episode so until next time cheers