you probably know we transmit all our messages on 
the internet in 1s and 0s and it's kind of   like a morse code, imagine beeps going around 
the world, these are our 1s and 0s. what   happens if something goes wrong? right, when your 
transmitting a message a 1 turns into a 0 or   0 turns into a 1 which means the other person 
receives the wrong message. well how can we fix   this? well we're going to fix this by turning your 
message into code words - that's what they're called,   code words. and these code words are a bit more 
distinct from each other and the idea is kind of like   the phonetic alphabet? have you ever tried spelling 
out like a word or name using the phonetic   alphabet? that's that alfa, bravo, charlie thing? 
the reason you do that is because when you're   spelling out a word the letters kind of sound a 
bit similar, they can get confused. the letter b   might be confused with the letter d because they 
sound similar; but then bravo is less likely to be   confused for delta in the phonetic alphabet, so it 
helps you transmit messages without mistakes. so   let's say we're trying to transmit something like 
a coin toss, right? heads or tails. when i get a head   i'm going to transmit a 0, and if i get a tail 
i transmit a 1. but when i'm transmitting the   result a mistake might happen. so just to be sure 
i'm gonna transmit 000. if i get a tail   i transmit 111. then it's less likely that 
i'm gonna get a mistake here because if a mistake   happens - for example if i got something like 100 at the other end you know something's   gone wrong because i'm expecting one of these 
answers. so something's gone wrong. now i don't know   which one it is, but i would say it's more likely 
to be heads because there's only one mistake for   it to be heads. if it was tails that would be 
two mistakes so i might interpret that as heads.   in the same way if i received 010 
or 001 i would say those are heads;   if i received 011 or 101 or 110 i think 
they're more likely to be tails. so that means that   this list on the left gives me all the messages 
that i'm going to reinterpret as heads, and the   list on the right gives me all the messages i 
reinterpret as tails. so it helps me fix mistakes.   well we can actually think of this geometrically: 
think of these 0s and 1s as coordinates,   coordinates in three-dimensional space. let's say 
this one down here is 000 and then this   one would be 100. this would be 010 and if i go up 001. and let's just   fill in the coordinates we've got here: 011, 110, 101 and up here this   is 111. so all the possible messages become 
points in three dimensional space. now imagine we   have a sphere centred on those code words. so 
let's have a sphere centred at 000 and another sphere centred at 111. and 
let's say the sphere has radius 1. that means   that these messages that are closest to heads are 
all contained within that sphere; so a message that   is contained within a sphere is interpreted as the 
code word that is at the centre of the sphere. now   it would be nice if we could fit more code words 
in, that means we could transmit more information,   not just heads and tails - we could transmit more 
things. so the more code words we can fit into   that space, right, the more things we can send.
i might use instead as my code words 000 again, let's use 011, 101 and 110. so i've got four code words, they're   packed in a bit more densely; but the problem with 
that is, if i use those as code words, if i have a   mistake, if i had then 111 which would be 
a mistake, it's actually quite close to two code   words so i don't know which one to pick. although i 
can tell there's a mistake that's happened i don't   know how to reinterpret the mistake. now that 
is a more dense packing though so that is nice;  in fact if you extended that packing there forever 
you get hexagonal packing which is the densest   packing possible in three dimensions. but let's 
try another way of sending four code words. so   i'm rolling a tetrahedral die, i'm trying to send 
the result, and i'm gonna either get 0, 1, 2 or 3. 0 is going to be transmitted as 00000 - so five digits. i'm gonna have   1 be 10011. 2 i'll transmit as 
11100, and 3 i will transmit as   01111. so they are five digits long, 
they are coordinates in five dimensional space. so these would be our code words as points in five 
dimensional space and then imagine them surrounded   by a five dimensional sphere as well. so if you 
get a mistake then - let's say i get something like   11111 it would be closest to 3, 
that would be reinterpreted as 3. actually i'm   going to kind of draw this out just to show you 
what it kind of looks like, it's going to be   2-dimensional of course. so these are going to be 
our code words, so let's say this is 0 here, this   is a point in 5-dimensional space surrounded by 
a sphere. that's a 1, that would be code word 2,   and this would be code word 3. this is only 
a 2-dimensional slice of what i've done there   but that's not the densest packing possible. let's 
see what is the densest packing possible. first of   all what's the density of this packing? let's just 
treat it as circles here. if this extended forever   we would have a packing of circles. let's just 
create a unit that i can repeat over and over   again and then that will be the full packing 
and if i can work out the density of this unit   i've made then i've worked out the density of the 
packing. so i've made a little square here, and if   i just repeat that square over and over that means 
i get the whole packing. well that square contains   one circle. so the area of that circle, it's pi 
r squared isn't it? let's say it's radius 1 so   i'm just going to say the area and then is pi. and 
what is the area of the square that i've created?   remember these are circles with radius 1 so it's 
just 2 x 2 so that's gonna have an area of   4. and the density is going to be the area of 
the circle divided by the area of the square that   contains the circle - pi over 4 - which is equal 
to 78.5%. so that's the   density there; and that's not the best density, we 
can do better than that, you might be able to see   we can do better than that. a better one would 
be this, we have the circles here and then we can   fill that kind of dimple there so we've got this 
kind of packing that would go on forever. i'm just   going to split it up with using this parallelogram 
that is containing one complete circle, just like   before. and it will have an area of pi and now 
we're going to look at the- i'll just call it a box,  that parallelogram. what is the area of that? it has 
a base of 2 multiplied by the height - with a bit   of pythagoras that's going to be square root 
of 3. so the box has an area of 2 times   the square root of 3. and then the density: 
we divide one by the other, which is equal to   90.7%. much better, much more dense. so if you 
can pack in these code words more densely you're   going to be able to fit more code words into your 
space. so that is the best density for circles,   let's have a look at other dimensions. because 
we're going to have to use higher dimensions for   this idea, let's have a look what the best possible 
packing is in all the dimensions that we know of.   so in dimension 2 is what we've just done, pi over 
2 root 3, the 90.7%. proven   to be the best possible by a fejes toth in the 
1940s. dimension 3 is pi over 3 root 2 which is 74.1% which was proven to be 
the best possible by thomas hales in the 1990s. the   best we've found in dimension 4, pi squared over 16.
that's 61.7%. in dimension 5 pi squared   over 15 root 2, 46.5%. in 
dimension 6 the best possible is pi cubed over   48 root 3 which is 37.3%. for dimension 2 we've absolutely   proved it; dimension 3 we've absolutely proved it. 
the ones i've shown you so far, best known, 7 is pi   cubed over 105 which is 29.5%. and now in 
dimension 8, the best known is pi to the 4  over 384, the density 
of that is 25.4%. in 2016 this was proven   to be the best possible by maryna viazowska. not 
that long ago. and that's because in dimension 8   there is a particular structure - it's called e8 it 
has a name - where the gaps become big enough that   you can start to fit in extra spheres into those 
gaps and then the structure becomes rigid again,   and then you get this properly dense packing but 
it's also been proven to be the densest possible;   including regular and irregular packings. when they 
did that they very quickly then showed that you   can do the same thing in dimension 24. and in 
dimension 24 they showed that the best packing   is pi to the 12 over 12 factorial, 0.19%. 
and that structure is a regular structure called   the leech lattice. and john leech who came up with 
this leech lattice in in the 1960s was actually   studying error correcting codes when he discovered 
this structure. but it was maryna and others that  showed that this structure was also the densest 
possible in dimension 24. 
- (brady: in dimension 24 - that's) (that's not very dense is it?)
- it's not dense, it's not very dense. however we do use dimension 24, the   leech lattice, or e8 in dimension 8 we do use those 
structures in error correcting codes that we use   today to transmit our messages. yeah, so every 
message is transmitted with this kind of idea.   so i mean i was talking about rolling a 
die or just sending heads and tails but yes,  if you're sending a message on the internet, so 
you're sending an email, so your the letters of   the message gets turned into a number - which 
is not that complicated, a's 1, b's 2, z is 26.   then you transmit that number. now you could 
just transmit that as a binary number if you   want to, which is kind of how ascii works, 
or you can use this bit of a code word   idea, have a bit of extra redundancy in there, 
just so that mistakes don't happen along the way. so this was the third part in a trilogy of 
sphere videos and they were brought to you   by brilliant. brilliant is an excellent site, 
it's full of puzzles and quizzes all about   science and mathematics, computer science, 
all designed to really help improve the way   you think. but one of my favourite things on the 
site are their problems of the week, have a look   at these, these are just for one week. you can 
see there are beginners, intermediate, advanced.   you can try and answer them but you can also 
go down below to a discussion in the community   all about the problems, it's really great. go 
to brilliant.org/numberphile to have  a look at the site. there's loads of free 
stuff but if you use that url /numberphile   you can also get a 20% discount on their premium 
service which unlocks all the good stuff. i'll   also include a link in the description to the 
problems of the week so you can check them out.   our thanks to brilliant for supporting 
this trilogy of videos all about spheres.