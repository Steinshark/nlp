i've talked about gpt engineer on my channel before the video received a lot of heated reactions ranging from this is a completely useless tool to we're all going to be replaced to why the hell does your keyboard sound like you're shaking maracas wait nope you need to get your maracas checked out by a miracologist because apparently they sound like a keyboard anyway i don't think we're all going to be replaced anytime soon but already right now i don't think it's a useless tool either i've actually found it very useful for a specific type of job but before i talk about that let's take another look at what gpt engineer actually is and what you can do with it and what's not so good about it let's get this party started like i showed in my last video gpt engineer allows you to write a prompt and then basically let it build the application for you and before you can do that it will typically ask you a number of clarifying questions in the previous video i only had access to gpt 3.5 but now i also have gpt4 so let's recreate that same application and see what the difference is so i'm going to use the same prompt for this particular test application in this case i want to create an api that generates random ids and we have a couple of ids that one sports uid object id numeric at least random string ids and wep keys and then you should be able to generate a single id or a batch of up to a thousand so i've already exported my open ai api key you can also define that as an environment variable and then it's going to work but what i'm simply going to do is call gpt engineer on the folder g test and that contains my prompts so now i would ask for a few clarifying questions so the first question is can you specify the exact format and length requirements for each type of uuid object id numeric id random string ids and the keys and this actually also shows also some of you mentioned that in the comments of the previous video that in order to use something like gpt engineer you actually need to know what all of this stuff means because if you don't know what a wep key is well how are you going to specify the length and requirements right so let's say we want wp keys should be 156 bits we want random string and numeric ids should have 32 characters i don't know i'm just randomly saying something and i think the uid and object id should follow the standard format because i think they're actually standardized remaining on clear areas so it's come to ask another question clarify if the batch of id should be of the same type or it can be a mix of different types patch should always be off the same type now the next question is could you please explain the process for requesting a single id versus a batch of ids so a single id should be generated by just doing a single get request and you should be able to get a batch of ids by providing the id type and the batch size maximum thousand there we go so how should the system respond if the request for a bad size exceeds the maximum limit of a thousands in that case the system should respond with a 4000 http error and now gpt engineer creates the classes functions and methods for us using gpt4 now it's done it asks us if we want to execute the code and yes we do want to do that and actually now we run into a problem that the generated code didn't run so i'm just going to press no here this is actually a problem of using an older version of flask so i've updated the requirements file to move this to a more recent version of flask and now we're finally able to actually run this application so here i have my web browser open and i've just created a uuid so that actually works so in this case the code didn't initially run at a fix on requirements issue and that's something you're going to encounter with gpt engineer when you actually start using it so this was created with gpt4 let's take a look at what the code actually looks like so there's an id generator that does the actual id generating tasks so it simply is a class that has a bunch of methods to generate the various types of ids then we have a batch generator that has a generate batch methods that gets an id type and a bad size and then simply uses the id generator to generate those ids in particular i think the problem with this is that the generate batch method now is has hard-coded dependencies on a specific types of ids that are being generated so i think a better option would have been that this thing here was defined in this file and that this simply provided the mapping from that dictionary from the keys in the dictionary to the actual functions there's no need for class here either so that's how i would set it up differently and then generate batch could simply call the specific function by accessing the dictionary so it wouldn't be dependent on specific types of id generators so the design is not ideal but at least it split up this operation part from the actual app.pi which is the routes and the did and that sounds a pretty decent job and that it returns a json string it also has a try except so if there is a key error then it's going to return a 400 status message so it actually did what we asked it to do now let's see what happens if we use dpt 3.5 instead of gpt4 before i dive into that let's talk about how you would actually host an application like this in the cloud and for that hosting are the sponsor of today's video is a really good and affordable choice hosting our offers a vps service that has really everything that you need you get full root access dedicated ip address that multiple operating systems include of course different distributions of linux that you can choose from and much much more hostinger's vps service devices powerful hardware including nvme ssds and amd epic processors and with kvm virtualization your app or website can benefit from separate resources leading to improved performance and stability the kvm2 plan is a really great place to start at only 7.99 per month and when you select the plan make sure that you add the coupon code orion codes and then you're going to get an additional 10 off so don't forget to do that once you've selected your vps plan it's really easy to set up in hostinger's user interface you start by selecting the location for your vps so i'm based on the netherlands so let's select the netherlands and then you can choose what kind of vps you want so do you want an os with a control panel just a plain operating system or do you want to use a content management system like wordpress i'm going to pick os with control panel because for me that's a bit easier to manage so i'm going to pick ubuntu and then simply click continue now we can create a camera password we also pick a root password if you want to access your server remotely you can already provide an ssh key right in the setup process so here's my setup and now we simply click finish setup and in a few minutes your vps is ready to go especially when you've already created your tool with for example gpt engineer then now it just takes a few steps to create a server and host your application on that hostinger offers 24 7 support so you're never going to feel lost they have over 2 million users that use their website service and on top of that they have a 30-day money-back guarantee so there's no risk to you click the link in the description of this video to get started with hostinger and don't forget to apply the ion codes coupon code for an extra 10 off thanks to hostinger for sponsoring this video and now let's get back to gpc engineer so i've still got questions about the areas that need clarification there's actually more questions here than in the previous set that might be just happening by chance we'd have to look at multiple projects to see if this really makes a difference but we also get one question with all the errors and then we need to answer everything all at once so the experience is a bit different so we've now provided answers to the questions and now it's generating the code for this particular application but this time using gpt 3.5 so now create the server and actually it also works so it creates a bunch of ids and let's try something else so if we do if we want 500 uuids then that also works and let's try something else say we want an object id that also works you see that it looks a bit weird you see that actually creates incremental object ids this sort of makes sense because often when you're using a database and you want to create incremental object id values it might be nice to actually have some control over that i did define that in the scope of this project so it doesn't really matter but the basics of the application works so in this case strangely enough it seemed that the gpt4 version actually didn't run initially but that was mainly due to a requirement issue that was easily fixed but i do think it's interesting to take a look at the difference in the type of code that gpt 3.5 versus gpt4 generates because there are quite a few difference especially in terms of designs and the gpt4 version we have this class id generator which has all the id generating stuff and we have a batch generator class which deals with creating batches of ids so how does that look like in the gpt 3.5 version so here we also have an id generator which is a class with static methods which i actually kind of prefer of the gpt4 version and this has all the generate id methods but it also has a static method generate ids that does the batching work now the design of this is honestly pretty horrible because there's like a lot of duplication you see all these fl's loops this is like completely coupled with all of the different id types i think it also would make sense to turn id type in an enumerator type and that's basically way too much duplication i see that the main difference between gpt 3.5 and gpt4 in this case is that at least gpt 4 sort of try to make this a bit simpler by introducing a dictionary 3.5 didn't do that and it just generated a bunch of if else statements so that's not great i would definitely have to spend quite a bit of time refactoring this code and making it cleaner i would probably re remove this and do it in a completely different way by just using a sort of dictionary with a registration methods mechanism so it's a starting point but it would still require me to do quite a bit of work also what i noticed is that i got more clarifying questions with 3.5 versus gpt4 so it means i also spent more time with gpt 3.5 to actually make sure that it generates something that is actually useful versus gpt4 which seem to pose less questions and come up with a solution quicker now the other thing is of course that well gpt4 is more expensive and it takes more time to generate the code versus gpt 3.5 which is quite a bit faster so it's also kind of a trade-off between okay how much time do you want to spend waiting for the code to be generated or do you need something really fast and then just spend a bit of time modifying the code because in this case i would have had to modify the code in any case for both gpt4 and the gpt 3.5 generated code so what do you think do you prefer performance quality over speed or the other way around let me know what you think in the comments now how is gpt engineer actually useful some things that it definitely can't do is take your existing code base and work on that and that also means that once you generate the code i don't think there's an easy way to actually update or modify it and does keep track of the prompts so you can actually let it like replace the code that you created but i haven't figured out a way to iterate over the code and improve it over time but as far as i see in the github repo studio working on adding these types of features because that basically comes down to working with an existing code base and then use that to add improvements i think being able to work with existing code is a really important feature to add to tools like this because that's what most developers will be doing most of the time you won't always generate new applications from scratch in fact that's quite rare in my experience that also means that it's still a valuable skill to have to know how to review and improve and refactor code and if you want to become better at that you should check out my free workshop on code diagnosis you can get access to that by going to iron mod codes slash diagnosis in this workshop i teach you a three factor framework that helps you identify design problems in existing codes effectively and efficiently it contains ton of useful advice and practical examples that you can apply right away to your own projects so just go to iron dot code diagnosis to sign up for free i've also put the link in description of this video so now you might say okay so if it doesn't really work with existing code then what use is this actually well one thing that i found it personally very helpful for is to quickly generate some boilerplate code it's like it's not perfect right but it's a pretty nice starting point and there's a few things you can do to make that easier for you one thing that you can do is actually be very explicit about what you want the application to be like so in this case i have a prompt where i specifically say hey i want a boilerplate backend api application and i'm already supplying some information so here for example this an application to create read updates and delete users a second thing that i'm doing is that i specifically indicate that technologies that i want to use so by default it's going to generate like a flask application and perhaps i want to use fast api because i prefer that framework over flask but i also mentioned sql alchemy and i mentioned a sql lite database and i even specify some details like it should have a single model user that has these following fields right a unique email a name and an id so now let's run gpt engineer on this particular boilerplate application so it wants to load a specific version of fast api and sql alchemy maximum length for the name and email fields and a couple of other things so again it now tries to run the code but it actually doesn't work in order to get this is working out to clean up some imports and install a missing pedantic email validator package so it's definitely not perfect well that was like five minutes of work and if i look at the code that actually generated it doesn't look that bad you know we have the operations layer getting a user creating a user updating users so that's all there we have the database bit which is also correct then we have the models so in this case just the user model which is also correct so that's the id name and email just as i wanted so having this ready for me and then i can just work with this actually saves me a bunch of time so even though it's not perfect it still requires you to do some work i do think it's a great starting point if you need a new project another thing to realize that you don't necessarily always have to start a new project with this let's say you have an existing project an existing api that you're already building out and you want to add some feature to it this actually what happened to me and i wanted to have a feature where i could via my api get some information about some of the youtube videos that i posted on my channel so what i did is i created this prompt that you see right here just to create a simple api using fast api because my own api also use fast api and that allows me to get basic information about the youtube video so that created a youtube surface file which has a get a video info method given a video id and that uses pythube which actually i didn't hear of so i also discovered a new library this way and then i can use this code as a starting point to integrate it into my own api so that's also how i've been actually using the tool and actually the code that gpt engineer generated for retrieving youtube video data is something that i'm currently using in learntail which is an ai quiz generator that i've been developing over the past weeks if you want to try out the platforms simply go to learntil.com you can join for free and generate quizzes about any topic that you like if you want to learn more about how to build an application like learn until how to set it up in the cloud how to create an architecture that suits this type of application you should definitely watch this video next because there i dive into the details thanks so much for watching and take care