in today's lesson we're going to be learning how we can handle keyboard events in flat and our project is going to look like this so right now we have a window that tells us to press any key with a combination of control alt shift and meta and meta is just that command key on mac and i'm not really sure what it is on windows but watch what happens when i press a random key if i press a it's going to register that i pressed a and if i do some sort of combination such as shift option plus command and and l we're going to get this as an output so this will register any keyboard combination that we input as long as there's some sort of character it can even be with a number if we want so this is me holding down 9 plus shift plus control plus alt plus meta otherwise we can just hold command and u and it will work like that so it's quite a simple project but it's good for understanding how the keyboard events work in flat but let's get started immediately with creating a new empty python project so we can get started with importing and the first import we're going to add is the flat import as ft then from flat we're going to import the page the row the text and the keyboard event and as always we're going to create an entry point which will be main and that's going to take a page of type page and since this doesn't return anything we're just going to specify that it returns none the page. title is going to be set to keyboard pro for marketing the page do spacing will be equal to 30 so we have space between the text the page. vertical alignment is going to equal the center and in previous lessons i showed you that we have some sort of main ais alignment enum that we could pass in but for some reason that does not work with the horizontal alignment and we want that in this case so i'm going to just use the string so now we're going to type in page horizontal alignment and that's all also going to equal the center again i don't know why the main access alignment enum doesn't work here it only works when you pass in the string of center but for vertical alignment you can use that main ais alignment so it's a bit confusing i'm just going to stick with the string version up next we're going to create the text views so first we want to register the key which is going to be of type text and that's going to equal a text of key as the value and it will be a size of 30 then i'm going to to duplicate that and change this one to shift because we're going to create one of these for each one of our keys and by keys i mean the special keys of course and this will hold the value of shift the size will be of 30 and i'm going to also specify a cola which will be set to red now we can duplicate this three more times and just change them real quick to control alt and meta and i'm just going to fast forward because all we're doing here is changing these text values to their corresponding keys so as you can see i changed each one of the values to the corresponding keys and i added a new cola for each one of them next let's take a look at how we can register the keyboard events so that we can actually display these according to the input that we provide so right below all of these text views i'm going to add a comment that says handling the keyboard events and here we'll type in def on keyboard and that's going to take an event of type keyboard event and i didn't mention this earlier in the previous tutorials but the event can can actually be of several different kinds so it really matters on which context you are using it it's not always going to be the same event that i showed you in the previous videos so that's something to keep in mind because it can change from time to time but in general you can just use the regular event if it doesn't matter that much and this is going to return none now inside here we're going to update the ui depending on which keys we press so for example the key. value is going to equal the e do key which is the event do key and shift. visible is going to equal e do shift and these just return boolean depending on whether they are pressed or not so we're going to do the same thing with the control with the alt and with the meta key we're just grabbing the event. control the event. alt and the event. meta because that returns to us the boolean of whether they are actually being pressed or not and if they are being pressed we want the visibility to be set to true also we can print the data because here you'll get a lot of information back from the keyboard events and this should actually be e. dat and of course it's important that we update the page or we will not see anything happening but that's actually not enough to make this work because we need to still link this on keyboard listener to the actual page so here we'll add a comment that we're linking the keyboard events to the page and we will type in page. on keyboard event is going to equal on keyboard and we're not calling it we're just link linking it and then for the rest we're just going to do what we usually do we're going to add a page and for the controls we're first going to add a text that says press any combination of keys and i'm not going to write that long string from last time i actually took that directly from the documentation so we're just going to keep it simple as this and we're going to add a row that's going to also contain some controls that's going to equal a list of key shift control alt and meta since these are all text views and the alignment for this is going to equal ft main access alignment do center and all that's left for us to do is to create our if name is equal to main block and run our app with the target set to main and just like that we can finally tap on this beautiful green arrow and if everything goes according to plan we're going to have our text at the top top that says press any combination of keys and as soon as we tap on a key it's going to display that character since we're not holding any special keys all of them are going to default to false which means they're not going to be visible but if we hold command plus i it's going to say i meta if we hold shift plus o to say o shift and we can also combine all of them together so now i'm holding down all those keys plus p or we can also do control and option plus l and it will be able to register that now going back to our console you'll see that the data that we are printing actually holds a dictionary of everything that we've done so at one point we held the key l with shift set to false control set to false alt set defaults and meta set to false the fourth time with p we actually held all the keys down so we had all of them set to true so from this point forward it's up to you how you handle these values because all of these return booleans so you need to do some boolean check let's say for example if you want to register shift plus p you're going to have to check that if the key is equal to p plus shift is set to true then you can do the following action and from that point forward you can start creating your own shortcuts which can be something super cool for your application but that's actually all i wanted to cover in today's lesson do let me know in the comment section down below if i missed anything regarding this or if you have anything to add all the input you put in the comment section will help improve the future videos i create with flats i'm new to this i'm reading the documentation as i teach it so it's always nice to get some input based on what i'm teaching because i'm probably going to make some errors here and there as we learn this together but anyways with all that being said as always thanks for watching and i'll see you in the next video