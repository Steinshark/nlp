uh hello everybody i would like to thank you everybody i would like to thank everybody for attending this talk i would also like to thank eating c plus and jens for organizing this talk and this talk hopefully by the end of this talk you will have a more understanding of how to approach this wonderful language how to approach teaching and learning c plus plus okay after this talk also there will be a q a session in the track a launch in the hubilo platform i guess we can start now so a little bit of introduction about this talk this talk is divided into two parts part one deals with how to approach learning c plus plus and part two discusses how to approach teaching c plus plus from a teacher's perspective or a c plus plus trainer's perspective we will also discuss some of the challenges and possible solutions when dealing with those subjects a little bit about me i am my name is tobaden dmitrovic i am a c plus plus trainer i have been working as a software developer for almost two and a half decades now my time is fully dedicated to simplesplus training writing books and coaching others i'm also an author of a couple of books and one of them being modern c plus plus for absolute beginners i like to refer to my book by its second title which is a friendly introduction to cpus plus programming language also i specialize in providing c plus plus training courses for teams and you can contact me on at my personal email listed here on this slide okay so let's start with the first part how to approach learning c plus plus how indeed let's see what is cpus well c plus plus is a programming language it's a tool a more broad definition can be that it is a multi-paradigm object-oriented systems programming iso standardized programming language so when we say we want to learn c plus let's see what is there to learn actually there is the language itself right followed by the c standard library and finally we should get familiar with modern c plus plus standards or rather notable features inside those modern c plus plus standards and i strongly feel that when approaching learning c plus plus we should start in this particular order with these three things of course there is much much more to this subject of learning c plus plus but our goal is to establish a solid knowledge base that will enable further progress so it's safe to assume that we need to get the basics first and we need to get them right and right the first time okay so let's look at all of these three sections in more details let's look at the c plus plus language itself the language itself can be divided into roughly three categories so the first category is makes up the basic language facilities right another tool are abstraction mechanisms such as classes and templates and this combination makes the zippers plus language one of the most powerful programming languages out there in my view the next thing is the c plus plus standard library so it is a library of useful containers and function functions we can use in our program every c compile simple plus compiler is accompanied by the cpus plus standard library or rather it should be accompanied by the cpus standard library so let's look at the third thing which are the c plus plus standards so there are different c plus plus standards throughout the years they describe the language into greater technical details we do not need to know their instruction for compiler writers and specifications for the language itself so we don't we need not know the entire c plus standard by heart but rather what we should get familiar with are notable prominent features introduced in each of these simple standards so throughout the years there were a couple of standards listed here in chronological order and we should also understand that everything starting with c plus plus 11 informally called zippers plus 11 is referred to as modern c plus plus while some sometimes the the new the newest standard c plus plus 20 is referred to as post modern c so now that we know what is there to learn let's see what are resources available to us first and foremost there are books and i strongly believe that we should approach learning c plus plus from books if possible at first then there are online courses there are online video trainings there are live training sessions with simplest trainers and there are blogs and other online resources such as stack overflow and so on so you can see that i've bolded a couple of these bullet points and i will explain why i did that i strongly believe that first you should consider starting learning simple from books in today's world i understand that printed media is often gets sidelined but i think that if you start learning simple plus from books it will give you if anything it will give you a competitive edge over other developers and people who are learning from other resources i strongly believe that and also i'm a bit biased because i'm a supersports trainer but what's so special about c plus live sessions with trainers arguably can help you achieve in days what would have otherwise taken you months to achieve on your own because those people they go through great lengths they need to explore everything they need to research everything and then decide what is it that really is important to you as a beginner in c plus plus so if your company or yourself if that's an option for you i strongly suggest that you also consider live training with zipper plus trains okay also it is you should not start with only one one of the one book but rather a couple of books and as you go along it is okay to put one aside and say i'd rather learn from these two books than from this one so it's perfectly fine okay when learning c plus plus we do not want to learn c or some kind of mix of c and c plus plus so we we want to learn idiomatic portable c plus plus programming language so with that in mind i have two columns here the left-hand side column which showcases some of the basic building blocks in idiomatic c plus plus and if a resource teaches you things like these then you are on the right track i strongly believe whereas the right hand side column teaches you teaches you stitches you see with classes and c plus plus is really not see with classes so let's start with a the basic hello world example so on the left hand side we see a basic hello world example followed by a new line character and indeed the stoozy out object lived lives inside the isle stream header whereas the right hand side showcases supported c library and uses the old school printf function to output data to the standard output ultimately it doesn't really matter that much but if we are to learn c plus plus then we should think in c plus plus ways so also if you look at the main function signature you will notice that the proper signature for c plus plus is in main and also there is other signature that accepts arguments but for now we will stay with this simplest one whereas on the right hand side there is some thing that was brought over from c way of doing things also when working with strings in c plus plus we should employ the stood string type so that's the ideomat idiomatic way of dealing with strings in c there is no c there is no string type in c and there are options there to use pointers or character arrays and so on also a class is a type class name is a type name in c plus plus whereas in c it is you need to type def the entire structure and then give it a name so this should give you an idea of how to make a distinction between a resource that's teaching you the right things the right way and a resource that's that tries to teach you some old ways that is c with classes so a lot of work goes into making a distinction between c and c plus plus and for all the right reasons so this is just something to keep in mind when starting when deciding on which resource is best for us when learning c plus plus just a short introduction how not to approach learning c plus plus in my view we do not want to approach learning c plus plus by guessing it is impossible to learn cpus plus by guessing impossible to learn it rights while some other languages might be learned by playing a guessing game this one cannot simple plus is arguably challenging to get right and but it's not so challenging to get it wrong so you you need to be aware of those things also try not to draw any parallels between c plus and other languages because siblings plus is in a league of its own we might assume that what works in some languages directly translates to c plus plus but that's not really the case also try not to think about c plus as c with classes and it's definitely not a subset of java and should not be learned nor thought that way so let's look at some of the topics that make a knowledge backbone in c this is only some of the topics inside the column that represents a basic language facilities you can see some of the topics that need to be learned and need to be adopted and learned well while we can negotiate about the amount of theory you as a beginner in cipa spots should be exposed to what we definitely should not compromise with are these topics in particular and in this particular order right so it makes sense to first learn about types declarations definitions and then slowly build in complexity so operators and operands make an expression an expression ending in a semicolon makes a statement and then we are building as we go along let's look at the middle column about classes and templates so these are some of the topics that in my view are must have when learning c also one of the challenging things for authors is how much of template introduction is too much template introduction for a beginner in c plus plus so i strongly believe that we need to be introduced slightly into templates and if we want to go into greater details that's a topic for some other time let's look at the simplest under library column so it is a collection collection of in-memory containers and useful functions we can use in our programs so the question now comes to which containers there are many containers and which containers should we learn about and which containers can we do without it is a tricky question but let's say everybody knows what the stood vector is stood arrays stood set stood map so i strongly believe we need to know and we need to learn about these containers and it was also very well pointed to me that for example in academic circles one of the widely used containers is toothless so it depends really on the on the target audience and on the subjects we're trying to teach we should definitely be aware about iterators and so on so now the question comes to which functions should we learn about well one one of the guidelines can be let's learn about those functions that are most widely used so stood sort stood reversed stood fine stood copy and so on and so on min and max and there is much much more to this topic of c standard library but when we are getting introduced to this wonderful world of c plus plus then we need to make a distinction between the topics we should learn right away and topics we can delegate to some later times and later trainings in a nutshell we need to build a knowledge backbone solid foundation we can build upon and also finally let's look at the modern c plus plus standard speeches so the question comes should i know about all the novelties introduced in c plus for example 11. no we should not but we should definitely know about those prominent features introduced into into a language such as automatic type deduction range based loop smart pointers move semantics and so on so c plus plus is a complex language it really is complex language but it's no rocket science although using one i think bjarne said that so if you are scared of the complexity here's how to tackle that problem it really isn't that much of a of a scary thing it isn't that much of a it is as complex as we want it as we make it so how to tackle this issue build a solid base first we definitely do not need to go into every detail i often get questions as there is so much about this language and i can't learn everything by heart and my answer is always the same nor should you you don't need to know everything and don't need to go into every nitty-gritty detail just build a solid base first and once you have that in place it is much much easier for you to decide in which direction to proceed also it is okay to learn a subset that best fits your use case another thing is about a simple standard library it is a vast universe and we definitely do not need to know everything inside the standard library by heart it is here for our own convenience but it doesn't mean that we need to learn it by heart definitely not just because the language is complex we definitely do not have to make it complicated so it's nothing to be afraid of believe me one step at the time and you are on the right track don't be afraid of it why should you learn c plus plus well first and foremost it's an immensely powerful language so we have a language that is capable of manipulating individual beats in a byte and efficiently mapping its language constructs to the hardware itself while at the same time providing us with abstraction mechanisms such as templates and classes so by definition we are covering a lot of ground with this language we can get both down to the metal or we can soar high with obstruction mechanisms and facilities they are all inside the language and that's what makes it so powerful language it by having those facilities it covers a lot of a lot of domains arguably it has almost everything c has plus more also c plus plus due to its nature and the domain it domains it covers it potentially gets you places if you like to travel and a well-known secret that it's certainly pays well i mean your mileage might vary but it certainly pays above some level of of average what other languages pay definitely if you like to learn new things as most developers do then this language is almost a constant source of learning for you it will keep you entertained and and that's a that's a huge thing in that regard it is so rewarding also cpus past developers are in high demand so let's look at some of the topics i hear some of the things people tell me they say when i started with c plus plus i almost lost all interest in other languages and i could relate to that those were my sentiments when i was starting with c plus plus and still are to this day if you are into research and development they say that this is the research and development engineers paradise and it really is it is it allows you to to perform to make to do things in various ways there is no one way to rule them all but it gives you flexibility and liberty to do things your own way so in that regard i strongly encourage you to to consider learning this wonderful wonderful language also wonderful product of human intellect in my view okay this concludes the first part of this presentation which deals with how should you approach learning with learning c plus let's move now to the second part of the this presentation that deals with how to approach teaching c plus plus from let's say university professor's perspective or a c plus professional c plus plus trainer perspective in my view we should all teach the same things so cal what to teach to a beginner in c plus well definitely the simple plot programming language at first only then move to the c plus plus standard library and only then move to modern zippers plus standards features also teach basics at first that's extremely important try not to overwhelm the trainee with topics such as design patterns and too many language guidelines at first in the beginning our goal is to build a solid base first try to show the trainees the power of this language its beauty its elegance try to deliver precise and concise information do your best at not going into too many details and definitely do not insist on border cases that's one thing that i think is particularly important there's plenty of time for that so be decisive in determining what makes a solid knowledge base and what are the board cases let's see what not to teach to a beginner in c plus plus and i should emphasize these two beginners in c plus class it doesn't matter whether the beginner in c plus is someone who's just starting in programming or it is an established developer but who is completely new to c plus we should all teach the same things the difference is with software engineers experience we can grow in complexity and cover more ground in the same amount of time so what not to teach i strongly believe that in the beginning while you are not while the trainee is not yet familiar with zippers plus we try to avoid teaching how to consume oil specific interfaces in any in any operating system because that's a topic of its own whether it's msdn on windows or linux interfaces it doesn't matter so try not to insist on those when teaching cpus plus in the beginning also try not to insist on teaching third party libraries to begin with in c plus that's something that's a topic of its own and should be delegated to some later times we definitely do not want to teach design patterns to beginners because that's a topic of its own a complex topic i also believe that any use of third-party libraries including graphics sounds and network should not be taught to simple beginners because if a book says c plus plus introduction to c plus plus and teaches you graphic sounds in network then it's limiting ourselves to a particular domain so that's a subject of its own our goal is to teach platform agnostic hardware agnostic portable c plus plus and not domain specific use cases here i have a couple of bullet points that that make up something i call the structured approach when learning c plus when teaching c plus plus rather so you as a trainer should decide on how topic x relates to topic epsilon which one should you do for which one should you teach first that is a challenging topic and that is a challenging question so it boils down to the personal trainer's preference but in in saying that i strongly believe that you should consider teaching things in a certain sequence in a certain order in a way that topic app epsilon for example builds on topic x builds upon that topic so we are increasing as we go increasing our knowledge as we are progressing also this is a second bullet point is quite i think important i think we should keep the theoretical parts at the minimum while not compromising with the factual content or the terminology i think that is extremely important it is up to you as a teacher to decide how much theory is too much theory also we should accompany the theoretical introduction with plenty plenty of examples this is very important let's start with example one and make it a very basic one now let's move on to the example two make it a bit more complex but make sure this example expands on example one and builds upon it if possible also break the complex topics into smaller pieces start over if needed and remember i think this over often gets overlooked examples are extremely important and i think my approach is to use generic examples that are not specific to any domain also make sure you deliver the relevant information do not compromise with the facts and the final bullet point is also very important keep in mind that you are teaching beginners in superstars not other trainers so that's something that often gets overlooked so be mindful about your target audience and the and the topics you are trying to teach to them not to fellow trainers or other professors okay so all of this talk about the structure approach in a nutshell should be decide on the topics and the scope it is up to you as a simple spot trainer or a professor or a coach to decide on the amount of topics and the amount of scope the second also important thing is to decide in which order to teach these topics in which sequence makes sense to first introduce the basic language facilities followed by built-in statements followed by functions and only then when we have all these things in place can we jump to classes also i try to do the theoretical introduction to keep it at well not bare minimum but as minimal as possible i think try not to overwhelm the reader with too much information as while doing so trying to compromise with the terminology deliver the relevant widely accepted widely used terminology in when teaching c plus plus i think that's extremely important for example literals are one thing in c plus plus and string constants are another thing in c and so on and so on so make sure you don't mix the two make sure that you deliver the relevant terminology while it is not often possible to avoid completely forward referencing i think we should do our best in trying to avoid forward referencing as much as possible so when we are teaching the subject all of the previous subjects should bring us to this point where we are teaching about the new subjects and if for the referencing is absolutely necessary then be decisive in saying okay just take this part as for granted and we will explain it later on also decide on how much information is too much information try to deliver the facts the value to to your target audience definitely and also please have in mind that it is a constant balancing act in in a way that you are constantly balancing with the amount of theory and the amount of examples that's that are just right for your target audience let's look at the sum some of the challenges and possible solutions when teaching c plus plus for example in modern c plus plus the use of raw arrays and row pointers is largely discouraged so do we teach this this was also my concern when i was writing a book there was some back and forth discussion with people who were assisting me and doing the reviews if we are teaching more than c plus plus who where the use of raw arrays and raw pointers is largely discouraged should we should we introduce them in the first place one feedback i received is that we should not but i definitely felt the need to include those because the reader is likely to encounter them in real life scenarios for better of worse but in code there are a lot of throw arrays and raw pointers left over so i will introduce those topics but only if to discourage the use in favor of stood vector stood array smart pointers and so and so on let's look at the second bullet point the stool string the stood string type is not part of the cpus plus language itself already but rather it's part of the simple standard library but its use in c plus plus is is so integral to a language and everyday operations so it is okay to teach stood string when discussing basic language facilities so my point is this is that for every rule there are exceptions and we should not be afraid breaking those rules if it makes sense at that point another thing can be which guidelines do you teach at the beginnings there are so many guidelines and i think the most important guidelines should be taught at the beginning because we all know for example that you should pass complex complex types by const reference so that's that can be one guideline and also when progressing there is there are guidelines and there is there is software now that does this for us but for example what was eye-opening for me when back in the days when i was starting with people's password for example scott myers books that explain those things in very engaging and very very easy to understand manner so those are some of the the challenges and possible solutions okay with that in mind i would like to thank you and give my final thoughts and final notes so climbing mountains sleepless plus is a challenging task but i can assure you that it is also a rewarding task so once at the top of this mountain but you don't even have to get at the top halfway through and i can assure you that the view is breathtaking i strongly encourage you to take this journey i strongly encourage you to to take on the task of learning c plus plus because it is just simply an amazing product of human intellect it is an amazing tool it will give you it's it will give you much pleasure in learning the language itself and building things in c plus and so on and so on okay so with that in mind i would like to thank you and we can progress on to q a session in the lounge in hubilo so thank you again so i hope you can hear me now yes yes and thank you again for the wonderful talk i think we still have a lot of time here so we can also do some q and a in in here first if you want to because we also have the curator so if there are any questions feel free to use the feature or write it in the chat and sure so let's look at some of the chat questions okay currently there are no questions are there any questions feel free to write them now at the time for example ahmed sultan says that he agrees that it's absolutely necessary to teach about road pointers to any newbie if anything to motivate him to use smart pointers and containers and to learn about dynamic programming so also for legacy code yes i completely agree with that there is this notion in modern zippers plus that we should definitely completely depart to smart pointers but given the amount of legacy code and some border cases where it's more more efficient to use draw pointers in passing data we are role pointers than in then it makes sense yes we should definitely be aware of those things if only to to the to discourage their use well thank you everybody who said who like the talk i'm very very pleased that you liked it and jen's asked in the chat if you have any bonus threads to show us we still have some time we don't have bonus slides we can fire up we can fire up some container either feel free to ask anything in chat and i will reiterate here or oh wait the q a type actually there is a question now oh there's two questions someone asks as a trainer i have trouble dealing with companies expectations in terms of delayed topic selection but also when the guideline in practice is promoted by the company against what i want to teach any advice yeah sure that's a quite challenging thing because when you are dealing with companies well first thing you should make sure is that you are on the same page when teaching c plus plus so the contract basically covers those topics the contract covers the topics introduced i as a simplest trainer and certainly at liberty in suggesting that we should probably do things the other way of or modify the training list that it better fits what i think that will benefit the trainees more so yes that was the that was the case basically when i was doing simple first training i can't say which client but what i can say that i was at liberty of tweaking the subjects in such a way that i think that will much more benefit the employees than what was on the slide so yes it's a good question it's a tricky subject but one that is ultimately solvable okay the next question asked by peter wolfe if i pronounce it correctly i'm coaching development teams on more complex cpu plus topics like custom allocators template meta programming compile-time programming any tips on how to approach such deep topics topics for an experienced audience i would say do proper research go into every detail about these topics know as much as you can also on this subject i can i can say this it's on overlap these topics are overlapping for example what some companies consider these advanced topics some put it into intermediate levels so it really depends on the client and his expectations as to if if you are dealing with such a specific part of the topics i my my advice would be that make sure that your audience has a solid base first and if you insist on teaching those custom allocators and so and so on and so on make sure the audience first has a solid base in understanding what is the automatic storage what is the dynamic storage how you should rather prefer stood vector and stored array to raw arrays and row pointers so make sure that is in place first i hope that answers and on the subject of templates that's a universe of its own so it really depends on how much in depth you want to go with your training cool the next question is about videos and online courses and someone asked basically if you do recommend any courses i think at some point we should mention that you yourself or for trainings again yes yes indeed i offer live trainings not so much video courses i'm not familiar with video courses i have seen some video courses out there ultimately it's up to you to make an informed decisions whether it's it's it's relevant to you it suits your uk your use case as with anything video course is very in quality so it's up to us to make an informed decision about which one are good or or or something some that leave much to be desired cool and the last question we still have left is someone asks you to talk about the book accelerated c plus plus yeah unfortunately that one i skipped my knowledge base was mainly i was building on biannual's books scott miles books anthony williams also i like him but my main goal to resources when building a solid base are bjarney and scott myers definitely scott myers is his work is what got me into this wonderful world of simplest plus in the first place that was my motivator back in the days okay another question popped up about your own bookmark how did you organize the production of your book modern zip trust for absolute beginners i ordered it and was told that it has yet to be printed so i wonder if it gets a continuous update yes i think the second edition should be around the corner but that's up to my my publisher generally but if this is the third time people ask me if there will be a second edition i'll i'll do my best to to prepare the second edition yes definitely wonderful how do you assess the knowledge and skills of a student before you start teaching them i first have a conversation with their principal engineers and their management and in discussing with them i establish a picture of what is it that they want to learn what is the knowledge base of their developers their people and then we try to find some sort of equilibrium in what topics do we but i'm not really that much concerned about the prior knowledge when teaching c plus plus i have my start smaller building complexity methodology so i'm not really concerned about their prior knowledge also you're critically assuming no prior knowledge and working from there exactly exactly and if they can't guarantee that there is some prior knowledge then i can skip a couple of steps and jump right right into more complex things fascinating another question appeared again what's the minimum knowledge one should have about programming in general memory layout heapstack before actually start teaching cps plus specific topics that's a great question my approach is to teach portable zippers plus and in doing so i will on these topics i will introduce you to the automatic storage i will introduce you to the dynamic storage i'm not concerned that much about the academic academic methodologies in terms that they insist of knowing about data structures and so on and so on those are not my concerns when teaching c plus plus my main goal is to to properly introduce you to c plus plus language itself its facilities its methodologies so that you are so you can start doing proper work and be productive and so on and so on okay i think that's all the questions we have i assume you'll still be available for further questions in the lounge on this yes i will be in the lounge and happy to answer any questions and to do some more advertising i think you'll also be at the book and tool fair and present your book modern for absolute beginners there yeah and tomorrow at 4 20 pm if i do that correctly exactly there is a dedicated room where i will also be today and tomorrow wonderful then thank you again for the wonderful talk it's a wonderful q a and see you in the lounge thank you very much