our uml diagram is completely useless pretty much here's what i do this is what i find every single okay so every single time i i do anything with uml diagrams i always do the exact same thing right i start off and i write a square and i go hmm that looks good i like this i kind of do a little like maybe a little notation and then i draw another square of my program and i start doing a second bit of notation and by the time i get to the third square i go what the am i doing i should just actually code this out and put that in i'm spending more time drawing out stupid ass ideas when i could just take a singular file it with all these ideas and see if the thing works in like 12 minutes you know why because i type fast i write slow i type fast i have a great setup i have a great editor i have great integration with my environment i will get this running in two seconds or i can spend my entire day drawing boxes of arrows that mean nothing in the end i hate uml hi just i just yeah i can't help okay i can't help but how much i just i just i just i just i just wanna i just want to die when i write uml every single time okay the only times that i don't just start writing code is what a problem is so sufficiently complex that i instead of actually like writing out stuff i actually start drawing a picture and let my brain stop thinking about it for a moment and when i stop thinking about it for a moment and just relax and i'm just drawing all sudden the thoughts start flowing and then it starts happening and then i stop drawing my picture and boom problem is solved i don't i you know just back brain the sob and that's that you know what i mean sequence diagrams are great sequence diagrams are different sequence diagrams for like displaying how many teams have to work together passing messages around fine i i will accept that tvi client sends this message to server to say it's starting server receives this message sends message that it's starting client does whatever when it's done says i am done server then finishes off and says it is done logging slash a b test slash canary goes okay i expect start start stop stop right like that's totally fine sequence diagrams are great for aligning multiple teams oh yeah i gave a course i gave a release useless version because i'm not going to go into some detail with 400 separate events right like look at tcp for a second tcp makes perfect sense to have a sequence diagram because it is complex as you know rtp why don't you go look at rtp and how it works and all the different versions and fact and uneven level protection forward air correcting and read solomon and sending all that crap everywhere guess what you're gonna want a little sequence diagram to go like hey i send this message you do this thing you send this message i do this thing right like you just want that in network protocols because it makes perfect sense it just simply makes sense sequence diagrams are fine for a very select few things that is that okay okay why are you guys so cool did my internet break did i break the internet