what is a negative number in algebra the answer is really simple a negative number is a number with the negative sign prepended meaning it has a negative value anti-value dark value anyway when we add a negative number to a positive number the value of the positive number is lowered so for example seven plus negative four equals three easy but how does this work in binary binary numbers are represented as a series of ones and zeros to represent value in the form of bits so for example this number here zero one zero zero zero zero zero one represents the positive value 65 or the ascii letter capital a and this is how all values and computers are stored strings numbers memory addresses everything is represented in binary the problem is there's no negative sign in binary i can't just stamp a minus sign on the front of the number and then call it negative so then how do we represent negative numbers or do math operations with negative values it turns out there is a negative sign in binary sort of this concept used to present negative binary values is called signedness and no not sign like stop sign or that movie sine meaning negative or positive sign values can be either signed or unsigned if a value is unsigned it is positive that is it no questions asked but if a value is signed that's where things get a little interesting to check whether or not a value is positive or negative we can look at the most significant bit or the bit that holds the highest value for that number if the most significant bit is zero well then that number is positive however if the most significant bit is one well then that number is negative that's our minus sign i know that's a lot of information so to explore this more let's go back to that first example seven plus negative four first we represent seven just like we would any other normal binary number next we do the same for four but four isn't negative yet to make it negative we do what's called the two's complement to do the two's complement flip all the bits in the number four and then add one this new number is now the negative value of four then just like any normal binary operation do bitwise addition and then out pops 3 which is the answer to this equation when coding with numbers mind your types what i mean is make sure you understand what type you're working with when doing math in your program in this example i use two numbers one signed and one unsigned to subtract one from zero when i run this code the first one gives me the right answer negative one but the second one gives me maxint the wrong answer which could introduce bugs into my code later on in the future while the numbers have the same value in binary because one is unsigned and one is signed they represent completely different concepts if not handled properly anyway guys that's all i have for today go watch one of these videos right after you hit subscribe