in this video i'm going to be showing you how you can create a requirements file in python how to use it and the benefits of having it so to get started let's just list some of the benefits and here i've listed three there are some more but these are the three major ones and the first one is that it allows us to keep track of all modules and packages that we're currently using in our projects this is quite important because because later on in your project as you start to install more and more modules and packages it becomes really easy to lose track of what you actually have or need in your project number two it simplifies the installation of all the packages and modules needed in the project in case you want to share it with someone else they can easily install all the packages that you need without having to type in pip install for each one individually and number three it makes it very easy to share your project with others since it installs the same versions and this has a lot to do with number two it really simplifies showing your projects because not only does it show which modules your project actually needs but also which versions worked with the current project that you have built because of course if i were to create a chatbot and i would to share that chatbot one year later the dependencies or the modules might have changed drastically which means an updated version of the module might not work with the program that i've created one year ago so having a requirements file will make it very easy for whoever is copying my project to make sure they're using the correct version with the program that they're trying to run so this is just a very stable way to maintain a project or at least to maintain the current project so you can share it without having any installation errors but with that being said let's go ahead and install some packages so that we can start using this immediately first i will try to install the request module just as an example and we can also install something else we can install open cv python and that's a bigger package and these are the packages that we're going to use in our project and then i'll just clear the console and close this now we're going to import requests and we're going to import opencv which i believe is just cv2 and we're going to pretend to use them we will say r equal requests and cv equal cv2 now this code doesn't do anything don't pay attention to the code i'm just going to show you how we can create the requirements file so other people using this project will be able to install these with their current versions without having to type in pip install for each one of these so let's open up the terminal again and the first command you need to be aware of is the pip freeze command so you want the pip freeze and you want to create this requirements.txt and by doing that it's going to generate a new file for us inside our sample project and it's just called requirements.txt and as you can see these are all the packages that we have currently installed in our program so now we have all of the modules and packages needed for our script to run and it saved it with all the version numbers inside this requirements.txt file so that's great now we have all the dependencies we need for this project and we can actually copy this and we can create a new project and it doesn't matter what the project's named i'll just call it abc123 and create this project in a new window so now i have this magnificent project abc123 and i want to use these dependencies so what i recommend is you paste in the requirements.txt file and you'll see everything is highlighted in yellow but inside this project we can now open up the terminal and use a special command to install it if you are using an ide you might notice some yellow text at the top that lets you do this automatically so you can click on install requirements and it will install everything you need to make this script work but let's also copy this sample script in general this probably will be much bigger or it might be definitely much more useful than what i did here so now we have the script and we need to still install the modules to make sure that everything's working so inside the terminal we'll type in pip install and we're going to use the dash r which stands for requirement and we want to install the requirements of requirements.txt so this is the text file that's located right here and we want to make sure all of these get installed so all you have to do is tap enter in the terminal and it's going to install everything from this requirements.txt file then as soon as it's done indexing the errors will go away and we will have all of the modules with their correct versions that are needed inside this script and in general it's a very good practice to set a new environment before installing packages with your requirements.txt file now i want to show you an alternative to pip freeze because pip freeze is quite nice it installs all of the packages in our project but sometimes you're going to have these situations where you have packages installed that are not being used in your project who knows why maybe you forgot about them maybe they're just not needed anymore but they're still in your project so there is a different command that includes only the packages that are actually being used by your project so for example let's pretend we're not using cv2 anymore and we're actually not using it at all and we just want to make sure that we install the requests or we just use this module here if we do pip freeze.requirements.txt we're still going to get everything installed including numpy opencv and so on so we don't really need all that stuff we just want the requests module so what we're going to do is type in pip install pip requirements and this is going to be a helper package that allows us to list only the packages that we're actually using so now we can use the command in the terminal paper x and it's going to tell us that the requirements.txt file already exists so we need to use the force option if we want to overwrite it so we're just going to do that we're going to type in paper x and force and it's going to overwrite that and if it successfully does it it will tell you down here now if we go to the requirements.txt file you'll see that it's only listing the requirements that we actually need and are using in our project at the moment so it's not going to list all those random requirements that technically are in our project but it's only going to list the ones that we're actually using so as soon as we type in import let's say cv2 again and we create something down here cv equals cv2 some random code and we rerun this command and try to force it again you'll see that in the requirements.txt file it's only going to install the bare minimum and that means exactly what we are using so using the pip requirements can be a much cleaner and more efficient approach than using the pip freeze because as you can see it only lists what we are using instead of everything that's included in the project so that's something to consider when you're working with the requirements.txt file the last thing i want to cover regarding the requirements.txt file is that you can manually add and remove modules here so here you can type in for example discord and it's going to give you some yellow highlighting and you can install this chord version whatever it is and it's going to add it to our program so now we have this chord 2.1.0 installed and you would probably want to include that in the version number of course and we can remove all of that and we can do pip freeze arrow requirements dot txt and it's going to put everything in here including the discord 2.1.0 so you can see that was actually installed but it is important to remember that you need to run the command every time you add more modules or remove modules because you want to make sure that that requirements.txt file is up to date so i'm just going to run the same command from earlier with pip requirements double dash force because i think that's much cleaner and since we're not even using that discord module it's not going to show up here so that's definitely the cleanest approach you can take when it comes to creating requirements so whenever you make a project and plan on sharing it do create a requirements.txt file because people are going to be able to use that to ensure that they're actually installing the correct versions of whatever module or package your program is dependent on and that can save them a lot of time with having to play around with finding the correct version number or trying to find out why the package doesn't work but with all that being said as always thanks for watching and i'll see you in the next video