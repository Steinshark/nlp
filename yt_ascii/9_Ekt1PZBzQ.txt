i've never fired an engineer because their code ran too slow i wonder about that if you chronically programmed really terrible where you just constantly every single project you ever came on though completed just was terrible and people had to clean up after you there's a maybe there there's a maybe you can write really bad code you can make it so other people have to constantly correct you i'm just saying they couldn't implement bubble sword from memory well i mean i'd be surprised if you can't implement bubble sword from memory come on people it's literally you just imagine bubbling up to the top it's like the simple thing bubble sort is not effing hard okay it's not hard you should be able to bubble sort just do it their design implementation wasn't pixel perfect okay that's fair oh no do it now do it now okay how about this one tough guy how about this one what are you putting on the line tough guy 100 gifted subs i'll do it right now if you're if if you're if you're g to talk a big talk put your money where your mouth is put your money where your mouth is three subs take it or leave it you're not even subbed world series of ghosts do i even believe do i even believe how about 10 gifted subs you're on let's not program in rust let's go like this let's do a little let's do what is it a pam i'll just make sure we have a nice little numbers numbers there we go so now all we got to do is sort this okay okay hold on co-pilot disable there we go not using co-pilot for everybody let's go like this for let i equals z i has to be less than numbers. length i++ there we go we start here now we're just simply going to walk through and at this point all we have to do is just walk a cursor up okay over and over again that's it okay that is it all right so now let's make sure that we got this idea so we're going to go like this for let j equals 1 j has to be less than numbers. length minus i okay this is the right way to do this okay j+ plus there we go okay look at that i put the j on the wrong side for does anyone know what bubble sword goes in there we go so all we got to do is just simply walk up the line over and over again getting smaller and smaller and smaller and smaller and smaller and smaller and smaller yeah yeah yeah yeah yeah yeah do we need to do jd equals this n let's just do that we can do it as zero we can do it as negative 1 you guys want to do it as negative 1 i'm kidding negative one would be terrible we're going to start with zero so now all we do is we just simply go to we just simply go all the way to the end and that's it o s n squ is bubble sword yes n squ is bubble sword well done it's t it's technically n * nus1 / 2 but you know that's just that's just what it is okay that's just what it is and so then i believe we're going to do this and so now all we have to do and we're going to want to go like this plus one by the way you got to get that little plus one in there right because you don't want to go to the end because we're going to be grabbing the next one forward every single time all right let left equals numbers j right equals number j + 1 if left oh wrong language is greater than right well then numbers j equals numbers j + 1 i'm not going to do that i'm going to screw it up we're not going to i'm not going to get clever con oh i did bunch of lets wrong language wrong language here people we do con to have non-constant const in in this language i forgot equals left oh i i guess i don't even need to create that huh numbers j equals right n plus one i already had these there we go fantastic we just swap them we just walk the highest number all the way up then we walk the next highest number all the way up at the end at the end of this we know that after one iteration we have the highest number in the highest position then we do it again then we do it again then we do it again insertion sorts very very hard insertion sort is extremely difficult all right i i'd have to think about it again and by extremely difficult i mean you actually have to like do all the right things insertion sword's super annoying insertion sword is so effing annoying anyways here we go so bubble sword did i do all this right yep let's see right equals that left equals that we only swap on this one and we're going to start at zero and we're going to go all the way up to the length we're going to start right here and j as long as j is less than this we're going to keep on going j++ there we go sounds fantastic all right i believe this should be it can anyone give me a nice case they want to see anyone want to give me a nice little case they want to see here i'm going to also return out the numbers just to make it easy on me all right 3 2 one all right 1 2 3 4 5 6 7 all right one two oh my goodness two oh my goodness three four five six 7 anything else 146 4 okay negative no all right fantastic anything else all right a he fudge off sort o sword an empty one oh that's a that's an exciting one all right all right i like i like what you guys have done now we're going to do an old figh in oneeyed kirby for a quick second we forgot about the old fighting oneeyed kirby there all right there we go all right what the hell did i call this file it's like not even [ __ ] hard it's bubble sword dog thank you thank you let's go we got him boys we got him boys we got got him thank you radius appreciate that also i appreciate the 10 gifted subs now do quick sort that one might be a little bit harder i'd have to draw it on i'd have to i'd have to draw it on the whiteboard first before i could do quick sort quick sorts not hard you just have to partition and shift things around on code quality we had a guy who wrote oh my goodness we had a guy who wrote some bad code and we fired him but it wasn't about the code it was his attitude about the code he thought it was good and it was unwilling to accept criticism that's it's not about the code being bad because you can't you can work on that if you're willing i'd say it's it's a little bit of both right what happened if the guy was really really responding to criticism but just kept writing shitty code like every single time you'd be like okay can we not do that write shitty code okay can we not do that rewrite shitty code okay can we not do that rewrite shitty code over and over and over and over and over and over over over over again right it also means he can't accept criticism and learn i want to see people the the reason why this in some sense i understand why you' never fire somebody oh my goodness thank you again thank you again beautiful wife for this delicious beverage i love you the reason why i would not fire someone off obviously you would never fire someone for this but what about the principle the principle being can you take a concept you have in your head and produce it into code reliably that's really what this is bubble sort is just a representation that's how i look at this problem their design implementation wasn't pixel perfect yeah absolutely they deployed a bug in production depends on how many times if every single time you put something into production you got a bug and it can depend on the severity of bug too and here in europe we don't fire people that's your fault you guys also have a third of the salary of america so trade-offs trade-offs dude i can't wait for well actually did you know i don't want to hear about it okay just let me just say something and just let me say it and we'll just walk on we'll move on america has 17th the quality of life last time i checked i live in a field do you live in a field tough guy no you probably don't you probably live with a pomeranian okay you probably live with a pomeranian in an apartment okay that's three stories tall and 17 feet wide pomeranian dad hashtag hash pom dad pom dad hashtag no one cares about your pomeranian let's see when i fired people something something culture yeah when i fired people it's because they were unable to receive understand and grow from feedback okay fair fair they didn't collaborate well with others and were unable to change okay that kind of falls into point one i like this they didn't work on team or company priorities despite feedback and direction what what do they work on then what does that even mean they've consistently shared rude or passive aggressive comments to peers passive aggressive comments or rude is getting weird in our day and age i one time said that somebody communicated poorly and they said that i tore apart their work so i'm just saying that people take things extremely personal these days and sometimes things that aren't meant to be passive aggressive they just literally feedback can be taken as if they're terrible right skill issues i knew you were evil i know i'm evil po requests comments aren't insults i know if you say this code is bad is it really like an insult i've had someone recently tell me that i i i uploaded some sloppy code and they were right yeah i could have slowed down a little bit on some things you can't take it personal did you learn anything from that or how you just interacted no i think the guy's a dork sometimes sometimes the person is a dork too many engineers over index on their technical skills and one of the most critical parts of their role their behavior again i think i just said it said it earlier just smile more it almost always helps just be someone who you want to work with and it almost always is a w almost always but i work from home how do i smile more you're going to be on a video camera just be friendly and agreeable when you're on a on a camera you can be you can be difficult and give hard feedback while still being a friendly person a real friend is somebody who when they see somebody doing something wrong takes time and tries to you know help him out a bad friend is someone who does it in all the shitty ways and i i can think of a couple different ways that i've seen it done i had like one person that i had personal talks with very very personal talks with about how they've communicated publicly and that they should take the time to reach out with people individually within one week did it again and so i was just like you're just a really shitty friend that's it i tried to be good and you aren't good i don't want to be your friend any longer i told the person i don't want to be your friend that's that if you're actually friendly to people it definitely signals in more than just your face you are let's see it's in your wording your pace of response your ideas etc it's not robotic correction thing exactly don't smile like mark zuckerberg it's terrifying you can communicate in friendly ways you can you really can i i mean i like in general i like this take but the problem is is that this take in its most simplest form is absolutely true but there's that phrase all shallows are clear meaning that if i can't get somebody who can't create ideas from their head into code at any sort of reasonable pace that's a problem if we can have a talk about it and then they need to ret talk about it or have me re-review it or have many talks about it because they don't have the ability to execute from an idea in their head that's a real problem if they consistently produce lowquality code over and over again especially in especially in internal services like highly error prone code code that just inc decreases overall reliability over and over and over again there's a real problem here this one probably less i mean again even in this one you could read something deep into this one their design implementation wasn't pixel perfect fair what happen if they keep doing that again if they can never seem to do what the person asked them to do there's a problem there these are all non-f fireable offenses until they're fireable offenses i changed design because people don't verify them yeah the problem is that the guy is talking in absolutes and absolutes are [ __ ] yeah exactly absolutes are bullshits i've worked with people that don't communicate very well and aren't always great to work with but they produce really really good code at a really great rate that's kind of okay with it i didn't like how they talked but i lived with it cuz the usefulness was really high you know the inverse the inverse can can exist too the work speaks for itself but you know there's there's definitely a tipping point right there's definitely a tipping point because what happen if someone is really great at all these things but produces [ __ ] code all the time there's like also a problem there it just is what was lacking about the communication it was just hst and often come off like offputting i've had people that also that are just like highly pedantic bike sheds and that's hard it's just a emotionally hard to work with people that are really that bike shed too hard like there's a certain level of bike shedding you should do to protect the quality of your work but there's a point where you have to say i don't care and i don't what's a bike shed google has a really good definition of bike shedding that they took from wiki def i believe which is a futile expenditure of time and energy discussing discussion of marginal technical issues pretty good terminology bike shedding commonly referred to as being acoustic yes you got it the name hey i i i i liked this but i also didn't like this it feels very vp of engineering you know what i mean it's very vp inspirational linkedin of engineering a gen value both your technical and your personal skills