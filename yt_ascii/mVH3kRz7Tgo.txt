okay so there are many ways to become a software developer online but i think the best and fastest way to do it in 2023 is to learn full stack web development and here's why it has the most demand for jobs has very good salaries and yet it is very accessible to learn online in just four to 6 months with no cs degree required but i can tell you from experience that it's very easy to get lost as a beginner it was so difficult to find the right road map to focus on and it was easy to get lost with all of these different things where i didn't know if if i was learning enough or if i was learning too much and that is why i wanted to make this video today i will give you a full road map on all the things you need to learn about full stack development to get your foot in the door in the industry we will go over a very simple overview of the three parts of full stack development including what you should learn in each step to be good enough and a step by step path on how to learn it and i will even give you one key tip to give you a massive edge in interviews that almost all beginners seem to miss so what is full stack development well to put this simply on the web we have the front end and we have the back end the front end is the visual part of the web that you see on your screen in the case of youtube you can think of the front end as the video that you see in front of you like for example the like button that you can click below if you want to at the back end the magical youtube algorithm that decided that this video right here was the video that they were going to recommend to you and the front end and the back end together alongside something called devops which we'll talk about forms the full stack of web development which is what we're learning today now of course you might worry that even once you learn all of these you will still not be able to get that job but don't worry we'll also talk about that at the end now the first place for you to start with your full stack developer journey is with the front end and the reason you want to start with the front end is that you can build full applications just with the front end but you cannot really build full projects just with the back end because any project like it needs to have some sort of visual component first let's go over the basics of the front end and after that will give you an actionable plan on exactly what you need to learn and how to learn it the first thing you'll be learning are the classics of web development html css and javascript html or hypertext market language is all about defining the structure of the web page what words what text which images and in what order you want all of these to appear so this right here is the youtube homepage and what you can actually do to see the html that actually makes up this entire front end of the youtube homepage is about right clicking on anywhere on the screen you can click on inspect to open something called the chrome developer tools and instead of here for example you can find the element that corresponds with these videos in here and if you go deeper and you can open these tags by just clicking on them right here and you can get as deep as you want now this what you see here is the html so this right here defines what you see on the page but that is actually not enough because if you just use html your websites would look like this and that's not ideal because ideally we want to also be able to customize what our web sides look like aka is the styling and this is where css comes in now css syntax looks roughly like this and the way it works is that you first define something called a selector and then you define styling below the selector just like this for example you can define colors fonts etc and then using these selectors you can apply some of these styling blocks that you define into some of these html tags that we just saw earlier either one of them specifically by using an id selector or a whole bunch of them at the same time using something like class or tag selectors but this is still not enough because we also want to make our websites interactive and dynamic so that the web page can actually change and sort of respond to what the user does and this is where javascript comes in for example when i click on the site menu here on youtube and it pops out just like this or when i click on a video and i see all these interactive elements like the like button for example on this very video down below click on if you want okay so now you know how to build basic web pages using html css and in javascript now your only problem is how do you get the code that you defined to be shipped via the internet to be displayed on someone else's computer screens and the way this actually happens is that when you publish a web page on the internet you define something called a url which is basically a route that someone else's web browser can navigate to to then request this web page code to be sent to their computer for it to be displayed and also one does that that code is actually shipped directly into your users browsers every time they open up your web page from something called the website owner server and we'll talk about later what that means and then your user's web browser opens and runs that code on like google chrome or safari or even edge if you're a peasant and your browser then renders that code and shows the website that you have coded and this is why you need an internet connection to view web pages because this code actually needs to be shipped from somewhere else in the world in order for you to view that web page so in your first step you will learn the basics of these three languages html css and javascript as well as how to link them together and build basic web pages then after you have done that it is time to throw them all away into a trash can because in 2023 no one actually uses plain html css and javascript instead what people use are something called frameworks for example react or nextjs what these frameworks essentially do is they make the process of writing html css and javascript automatic so instead of writing all these three languages individually you can just write a react code which is meant to be an easier way to write web pages and then to react engine will automatically convert that react code into the plain html cs and javascript which is then rendered to actually display the web page similarly for styling no one wants to write plain css anymore so that is why they styling frameworks called tailwind that make write the styling easier and then automatically render into the plane css behind the scenes but thas why did we need to learn basic html css in javascript if we were not actually going to use them okay that's a that's a fair question actually so vanilla hml css and javascript are basically like the found foundation of the web and frameworks are like a layer on top of them like an assistant that allows you to write them faster and more easily because basically every framework in the front end is built on top of them in order to use the frameworks and to understand them you do first need to understand the vanilla front end unfortunately trying to learn a framework straight away is sort of like trying to learn a calculus before you even know how to do basic addition or subtraction even though once you are learning calculus you just use a calculator to do the basic subtraction and addition anyway so now it's time to get into the back end so for the front you only really have one option to start with which is what i described but for the back end you actually have tons of different options and these options come in the form of different languages as well as different frameworks for the back end for these different languages some of the most popular ones are python with jango javascript with node.js go java like literally there's so many options and i honestly wouldn't worry too much about what to pick because once you learn one language and one framework it's it's very easy to learn in another one straight away because the ideas are very very similar i would just focus on learning the ideas the concepts with whatever language or framework that you pick but seeing as you're going to worry about this anyway just start with a popular option like python javascript or go so once you pick a language or framework before diving in let's first get an overall understanding of what we are actually learning the way the back end works is that it's essentially all the custom sort of secret logic that the operator of a website or a web app needs to run like managing users storing files handling credit card payment like all the logic that you don't see as the user but nevertheless needs to happen behind the scenes for the website to actually work again like for example the youtube algorithm so essentially you can say that my entire youtube channel success is all in the hands of some backend code just to give you another example this right here is my app boxio the front end of the app is this sidebar that you can see on the left that you can open and close as the user the way this app works is that you can create create these boxes with different project let's say this is a box for a video project and in the future like files and apps and things like this you open when you have a box open will then be automatically opened and closed when i switch to a different box just like this they all went away but when i go back the same tabs open when i go to a different box with different things open boom different stuff opens up on my screen now the frontend of this is easy to understand it's just this sidebar you can imagine that there's a lot of code sort of behind the sc like you might be asking okay how is it that we're able to just open and close tabs from your browser how is it that we're able to like for example link files into these boxes like this or link drive folders all of that is handled by the back end of our application by the way if you want to download this app it's completely free and you can do it down below subtle plug so in this stage your main task is to simply understand what i just told you at a conceptual level and to understand how to set up a server how to connect a server which is just a different word for backend to the front end and a lot of the common tasks that i backend usually does like user management authentication session security all of these topics you want to just dive into one by one and once you're at the point where all the things that i just told you make sense and you would know how to implement them in whatever language or framework you're using that is when you know you're ready to move on to the next step now the easiest way to do this is to simply follow one program that teaches all of these in one place and at the end i will give you some options for that but before that there is one crucial thing that you still need to understand and that is the scary world of devops i'm kidding it's not actually that scary what it is if you go too deep into devops it's pretty terrifying actually but here i'm just talking about learning the absolute basics that you need to know because i actually think that just learning a bit of devops before going into applying for jobs is a massive opportunity to give you a massive advantage over others because most people will not do this like most people will go into interviews knowing absolutely nothing about version control about github about tools like this that are absolutely crucial tools for developers to use so here's what you need to know so to understand what devops is imagine that you built an amazing lego castle you want to show it to your friends but there are some challenges first of all it took a lot of steps for you to build your castle and sometimes you made mistakes or you wanted to make some changes and you need to wait to remember how you built it and once you are at the friend's house you might want to change the cle or add more parts you need to remember what changes you made so that next time everything still works well now let's think of your lego cle as like a computer program that you have built like a full stack website now what devops is is like a magical guide book that helps with all of these things that we just talking about just like you need a way to remember how you build your lego castle devops gives programmers a tool called a version control to remember every step they took to create a program so they can easily go back to a previous step anytime they want and devops also has tools to track changes just like you want a way to remember which parts of your lego cle you and your friend changed this way many people can work on the same program at the same website at the same time and make improvements without getting in each other's way so practically what you want to learn are the basics of git and github and to really impress them you might even want to learn the basics of tools like docker or major cloud providers like aws google cloud as these are the tools that you will eventually have to learn as you get into the professional world so you might as well become familiar with them early on to show them that you are ready to take on the task of becoming a full stack developer for them now this these are the three key elements you need to become a full stack developer what you still of course need is to actually get a job that's what most of us want anyway not what you can do is learn all of this on your own and figure out on your own how to get hired on your own and if you don't have any money like this is a great way to do that it can be done but if you do have some money and you want to invest in yourself and your career to do this faster what you might want to do is follow one program that takes care of all this for you and i'm actually going to give you two options for this right now the first program something brand new that my friend tim from the the channel tech with him has been developing for the past 6 months in it he not only teaches you everything we just talked about in one structured program but crucially they also offer you career guidance with experienced mentors tips for interviews help for polishing your resume and a dedicated platform where employers can actually find and reach out to you after you complete the program and this perk is like literally insane and the reason they're able to do this is because this company course careers has contacts to a bunch of tech companies who want to hire developers and because they've v and develop the program in such a way that the companies know and trust that whoever goes through the program is good enough to get a job these companies can just literally get all these prev vetted candidate from the program directly and so this program is not cheap but if you have the cash for it it's probably the fastest way for you to get a job and that is why i was actually able to partner with course careers to offer this program to you so from the link below you can take their free introductory course to software development to see if it's the right fit for you and if you decide to join the full program they will also kind enough to give me a special link below that gives you $50 off your first purchase if you don't have the cash to pay for the full $800 price for that course and you don't really value all the extra things you get for less than half the price i do also have my own program python developer boot camp with more than 400 students in roll where i teach you all of these including how to get a job but you will have to apply them on your own whichever option you choose i benefit equally because one of them is mine and for the other one if you sign up i get an affiliate fee so whichever way you go you also support me at the same time so just pick whatever fits your preferences and your budget the best and before you get started you just have one problem left to get a job you will also need to pass the dreaded coding interview now this video is too long to talk about it now but luckily i also previously made a full video on how i personally mastered data structures and algorithms and you can watch that video right here and i recommend you do that because you will also need to do that if you actually want to get hired