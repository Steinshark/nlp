so if i was starting over here is exactly how i would learn data structures and algorithms really fast before we get into the exact road map i would take as well as exactly how i would to make sure i learn data structures and algorithms in a way that actually allows me to pass coding interviews we first need to understand why data structures and algorithms is actually a lot more important than you think and no it's not just about the coding interview the importance of these topics in my opinion goes a lot deeper than that and i learned this myself when i was first learning these topics and i don't want you to make the same mistakes i did which was to neglect it for such a long time and it's after i learned data structional algorithms properly that i really started appreciating sort of the magic of programming and it made me a better programmer in general and in this video i'm going to explain exactly how i did that how i learn data struction algorithms and how you can do it as well and know it does not require you to memorize a ton of lead code problems but first to understand all of this we first need to understand what data structure and algorithms really is at the end of the day so when we talk about data structure and algorithms we have obviously two parts we have data structures and we have algorithms and these two parts together really form sort of the foundation of programming let me explain so if we talk about data structures what is the data structure first like try to answer it for yourself do you know what a data structure is well in its simplicity a data structure is simply a way of organizing data so any function or any program that you have you're going to have some sort of data that you're dealing with it's sort of like when you're preparing a meal like a meal of vegetables for example and rather than just directly putting the vegetables in the oven you first cut the vegetables in the proper way to allow them to cook in the best way and the way you cut this vegetable is sort of like using the correct data structure to get the best meal or the best and most efficient program that you can and the oven however is sort of like the algorithm it's the process that then does something to that data or these vegetables to produce the output that you want in the case of program programming it's some sort of series of logical steps so essentially you can just think of like lines of code that you're doing in a particular order to turn this input data in some data structure into some output data which will also be in some sort of data structure but now that we understand what data structures are and what algorithms are why are these so important well if you look at this what we just described is literally what programming is programming is simply about taking in data doing something that data and getting something out of that data or producing something from that data that is all that programming consists of coding is the process of writing up these lines of code but programming is knowing how to write these lines of code in an intelligent way that produces algorithms that are fast and efficient aka algorithms that don't take up a million lines of code when they don't need to and that don't take up too many resources in the computer's memory because the computer is a finite thing it has a finite amount of resources so we want to make our algorithms as fast and efficient as possible and this is why algorithm design is so crucial and it's also why knowing which data structures we have available to us and which ones to use in which situations is also so crucial because certain data structures make certain operations faster and easier than others so data structur algorithms is really the foundation of programming and that is why they're so important and in a second i will give you an exact road map with the exact topics around data struction algorithms that you actually need as a programmer but first before we can get into that we also need to understand what is the proper way to learn data structure and algorithms in a way that allows you to remember it and actually apply these topics to solving problems because the real goal for us programmers with data structure algorith is to be able to use this to become better programmers and yes of course to know how to pass coding interviews i know that's why most of you are probably here okay so how can we study these topics properly now this is something that took a long time for me to learn so if you appreciate me just giving it to you right now in the next minute then you can leave a like down below in the video all right so if i was starting over today with d destru algs the first thing i would do is forget about trying to learn data structure algorithms let me explain the biggest mistake you can make in the beginning with data structure algorithms is to try to learn the maths or like the very theory heavy side of data structure algorithm this is not necessary there's already people like very smart computer scientists that have proven the maths of like certain algorithms they've proven that they work they've proven that they're efficient like in a very mathematically rigorous way we don't need to do any of that stuff it's good to understand the high level of foundations and the methods but going too deep into the theory will just waste your time but at the same time we can't go too far in the other direction of not learning them at all and just going and doing problems because then we have no foundation based on which to like have the frameworks to solve these data struction algorithm kind of problems so what i found to work the best and this is the method that i recommend to everyone is to do sort of the hybrid of both both of these things and the way you do that is to enter a loop specifically the learn practice learn practice loop meaning what you want to do first is learn the foundations of some topic again we'll get into what these topics are in a second but then after you learn the foundation you understand the high level like logical side of how this concept works then you want to go and try to do problems related to that topic probably easy problems at first you'll probably struggle at this point but this will actually allow you to start seeing the kinds of ways where these topic let's say heaps or graphs can be used how they're implemented in code and these like of things okay then you try it for a while and then you go and study the theory a bit deeper now you really starting to understand how it work and all these kind of things and then you go and do more and more and more practice and you just go in this loop of learning practicing and then when you get stuck in the practice you go and learn what you need to learn to solve these problems or whatever then you go and apply them into the problems again and you go through that loop until you really internalize and you really understand how to solve problems relating to these topics if you're an aspiring junior developer and you just want to pass junior level interviews a good benchmark is when you're able to pass medium level lead scode problems you know in lead scode they've got like the difficulty levels you got easy youve got medium you got hard once you're able to reasonably comfortably pass medium level interview problems using that topic let's say graphs that is a sign that okay now you know enough to move on to the next thing and of course even when you get in the next thing you still want to go back and do problems related to al topics and things like this but now you have the foundation so you can just focus on practice so that is how i would do it so now that we understand that what are the actual topics that you need to master as a beginner when it comes to data struction algorithms now of course there's not like a single list that i can give you data struction algorithms is a massively deep topic like you can go to the wikipedia page and you'll see just how many different data struction and just how many different algorithms there are so really what we need to ask ourselves is what is our goal now for the purposes of this video i'm going to assume that your goal is to just learn enough to learn how to pass coding interviews the level that you need as a junior programmer to solve the problems that you need to solve and to be able to function as a professional programmer and so for me i did a lot of research a lot of study on like actually what are the topics that are tested in interviews and through my own process of interviewing i learned what sort of problems i needed to be able to solve and what i didn't need so that is what this list is made out of it might not be perfect but it's certainly what has worked for me first before you do anything you want to learn big o notation what is big o notation well big o notation is sort of the language of analyzing algorithms and data structures so if you're wondering how to answer the question of when is an algorithm fast when is an algorithm slow bigo notation will give you a framework and a method of essentially talking about these kind of things in addition it allows us to talk about when is an algorithm or a data structure taking a lot or little space in our memory and this is massively important because going forward in every view every coding problem you will have to use this because you'll have to be able to give what's called a big o of any given algorithm so super important that you first understand how big o notation works really really well when it comes to data structures the topics that should cover like 95% of what you need are going to be arrays linked list cues and stacks trees graphs and hashmaps and at the same time you also want to get a very good primer on how the computer's memory works so the way the computer's memory works behind the scenes is that you've got like these sort of memory slots or like memory boxes that hold bits that are essentially the smallest unit of value inside of the computer's memory and what every data structure does is it essentially allows us to access data inside of this computer's memory in different ways so that even though in reality the computer's memory always looks somewhat like this it's just these memory boxes in these rows inside of the ram but when inside of the program you design your code in a specific way it makes it seem as if your data is actually stored something that looks like this which looks like a graph now in reality it doesn't look like this inside of the memory but by learning how to implement a graph you can then access this data as if it is stored as a graph like this you'll also learn about something called pointers which is what allows a lot of this data structure stuff to happen then when it comes to algorithms what i would learn is array algorithms recursion which is less an algorithm more of an algorithmic problem solving technique we learn sorting algorithms graph searching algorithms so this is bread for search and depth for search search perhaps also like dyra and some of the more complicated graph search algorithms i would donear dynamic programming which again is more of a problem solving technique rather than algorithm but anyway i'm just putting in the section anyway and i would also learn about common problem solving patterns so what are the patterns that you can usually use in many kinds of problems and how to recognize this and things like this there's for example the two-pointer technique you got the sliding window you've got a lot of stuff like this that's way beyond the scope of this particular video but that is a list that you can just like jot down some somewhere and start going through one by one and then inside of lead code or whatever platform you're using to do coding problems there's going to be problems relating to all of these topics and then you can go through that process that i described before of doing the learn practice learn practice loop and that should allow you to absolutely master data struction algorithms from completely zero and all you need to do that is the basics of programming essentially so it's pretty awesome that as long as you can just follow the right process it doesn't matter where you come from it doesn't matter if you're smart or not you just practice enough you just learn these topics you learn how to understand them properly conceptually then anyone absolutely anyone can learn these topics and have the skills to pass pretty much any interview because if you just learn these topics properly you learn how to solve these problems then you have the keys you have everything you need to pass any coding interviews and that's the best thing about the tech field for a large part at least compared to a lot of other industries it's a meritocracy as long as you learn these skills you can be a great programmer because as we discussed data stru algorithms is the foundation of program so if you get really good at this if you get really good at this problem solving you'll just feel like a freaking superh humor you feel like you can do anything with code and that is the most exciting part about learning data structure algorithms and that was the most amazing feeling that mastering these topics myself gave me so i highly recommend if there's anything that you take seriously as a programmer it is these particular topics now with all that said you can take these methods and this list of topics and go learn it on your own online there's going to be a bunch of free resources where you can do it it's going to take a bit more time it might a bit more difficult to find the right resources but you can do it but if you have some money to invest this is the time where i'm going to plug my own program that i've just created it's called algo university essentially it's a program that is designed based on this exact system of learning it this proper way and learning all of these topics that i just listed and i've taught them in a way that i wish i was taught myself i struggled so much to find a good resource that didn't go too far into the theory but still taught everything that i needed so now that i know exactly what is needed i just put put all of it into one structured program that you can go through where we specifically study these in a way that you will understand them and you will then know how to apply them to actual problems to solve any coding problem or any coding interview you can use the code imc for a special discount as a reward for watching this video all the way to the end again if you don't want to buy it you don't have to but if you do it also supports the channel supports me and allows me to keep producing these free youtube videos on this channel so if you want it you can click on the link down below in the description if you want to start learning immediately and you want to learn the basics of data structures for completely free i have this video right here where i go through it and i have this video right here where i teach the basics of algorithm so you can watch these two videos right now to get started immediately and then if you like my teaching style and you are interested in my program you can then check it out afterwards with that i will see you in one of these videos