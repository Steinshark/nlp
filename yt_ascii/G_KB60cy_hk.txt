hi everyone in this episode we're going to briefly discuss prefabs just what they are and how they work so in time-lapse mode i constructed this little chair object it's just made out of different sized cubes and they're all parented to one empty game object named chair so i can easily move them about now say i decide that i'm satisfied with my chair and so i use this object everywhere in my game sometime later perhaps i suddenly decide that i want all of the chairs to have a cushion on them i'd now have to search for all of the chairs scattered around the world and individually add the cushions to them should be a bit of an effort this is the main problem that prefabs address a prefab is essentially the master version of an object so if i take one of the chairs and drag it into the project window we've successfully created a chair prefab this master chair is now saved in our project so we could safely delete all the chairs from the scene if we need to chair somewhere in the world now we just drag and drop from our prefab so having repopulated the world with instances of the chair prefab let's look at how easy it would be to add a cushion to all of them now so just quickly fashion some sort of cushion out of a squashed sphere and just have to parent this cushion object to the chair so that it belongs to it and then if i select the chair object we can go up to the top of the inspector and apply the change to the prefab and behold all of the chairs now have cushions on them you probably noticed that next to the apply button there's also a reverse button so if we make some change to one chair that we don't particularly like we can revert the object back to the state of the prefab so we've seen that we can manually drag a prefab into the scene but what's also very useful is being able to spawn a prefab into the game world from a script while the game is running so let's look at how to do that i'll just delete all of the chairs that i have in my scene and let's create a new c sharp script call something like furniture spawner and i'll create an empty game object over here old furniture and can just attach the furnitures bonus script to that let's open the scripts up and let's begin by getting a reference to the chair prefab so we can say public game object share prefab and then if we go into unity that should pop up over here and we can just drag our chair prefab into that slot so let's say we want to spawn a chair in at a random position whenever the player presses the spacebar so inside of the update method let's just say if input get key down kieko dot space then we can choose a random position so vector3 random spawn position it's equal to a new vector3 on the x-axis we can use random dot range between say negative 10 and positive 10 and then for the z-axis just the same story and then maybe we can have a random rotation around the y-axis as well so let's just say vector 3 random spawn rotation is equal to vector 3 dot up x random range somewhere between nought and 360 all right so now to actually spawn the prefab we make use of unities instantiate method this takes in our share prefab object and we can also supply a vector 3 for the position and a quarter nyan for the rotation so we've got our random spawn position and then we just need to convert the random spawn rotation vector into a court onion and the quaternion struct has got a method for doing this it's called euler so we just pass our random spawn rotation into that very nice let's save go into unity and press play so if we just press the spacebar now a chair has peered off over there and you can press it a couple more times because we're not checking to make sure that they can't intersect with one another so that's a bit ugly but it's definitely working which is nice now it's often the case that we want to get a reference to the thing that we've just instantiated so if we take a look we can see that the instantiate method returns an object now because we're passing in our chair prefab which is a game object we will be able to convert the object that it returns back into a game object so if we write game object a new chair is equal to this object that won't work straight away if we save and go into unity you'll see it kicks up a fuss about it not being able to implicitly convert between object and game object however does point out that an explicit conversion exists and it asks us if we're missing a cast which is exactly what we're missing we need to cast object to a game object now if you're not familiar with casting it's fairly simple we just open up parentheses and we write the type that we want to cast to so in this case we're casting to a type of game object and then we close our parentheses so this is our source type the object and we're telling it to cast it to our target type the game object all right so now if we save running this won't do anything different but we can verify that it's still working and just to do something with our reference now we could maybe make it parent the chairs that instantiates to the furniture object just to make the hierarchy nice and tidy so we could say new chair dot transform dot parent is equal to the furniture transform now if we go into unity and run this fit press spacebar a couple of times you'll see that all of these are being parented to the furniture object very nice all right so that was a brief look at prefabs and instantiation until next time cheers