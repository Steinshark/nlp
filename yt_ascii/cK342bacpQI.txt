thomas cannot seem to get a job no matter how many projects he keeps building for his resume nothing seems to be enough to get him past those resume screens this results in being extremely frustrated because these dumb recruiters who don't even know anything are still not even giving him a chance even though he's a really good coder 10 20 50 applications later he still doesn't have a single interview and as a result he ends up getting demotivated he quits coding altogether and goes back to his old job as a truck driver but you don't have to be like thomas you see the reason he's not getting interviews is not because he's not good at goading and certainly not because recruiters are just stupid it's because he's building the wrong kinds of projects i remember this like literally when i was beginning to learn in the code there were so many things i could be building so i just didn't know what i should be building from all these opportunities so through my own research into like literally listening to what recruiters actually say and people with some real experience will actually hire people there's certain things that they look for that i have identified so in this video i'm going to show you what those principles are and at the end i'm going to give you three examples of excellent programming portfolio projects that implement all these principles and that are proven to successfully get people interviews and jobs at really big tech companies so with that the absolute first thing you need is a change in your mindset thomas has built 87 different python scripts he puts them all in his 50-page resume but no one is responding to his job applications what could he possibly be doing wrong principle number one stop focusing on quantity and start focusing on quality when you're like building your very first project you should even do the opposite of focusing on quantity or focusing on getting the reps in and building a lot of basic things to get these basic programming concepts into your mind but once you've done that once you get past the basics at some point you need to sort of graduate to building real projects and i know this can be scary and imposter syndrome is very real in the beginning certainly was for me you look at an example of a complex project and you'll be like well i could never do that but that's sort of the point of being a program when you're a programmer your job is to figure out how to do things go fearlessly towards newer talents that's how you actually grow with anything you try to build something that's more complicated than the previous thing you build that applies some concepts that you haven't used before because that is how you learn these things that is how you keep building projects that are more and more and more and more impressive and when you apply these tips i'm about to talk about you will be able to build projects that will actually impress recruiters so that they will actually give you a chance by giving you an interview because that is at the end of the day the point of building this project because especially as self-taught programmers we don't have the degree or like internships to necessarily show that we know what we're doing so the reason why you need to be building these projects so that you can then show them to employers so that they can see that you actually know how to code so then to actually show these projects do your is you will have to first deploy them somewhere obviously i want to quickly show you the strategies that i use to very quickly deploy my projects on the internet using hostinger who are very kindly sponsoring this video posting allows you to host your programming projects by this very sleek h-panel dashboard using a custom domain which will also get included if you sign up for one of their web hosting plans and this applies to any programming project you're building like for example your react applications or your websites or whatever you're building really and just to show you an example i'm gonna be using this react e-commerce project i'm going to be hosting it using hosting as shared hosting service so once you sign up you essentially get this introductory questionnaire where you just answer a couple of questions about the type of website you're building and they actually get your code here we're going to go to file manager then if you're doing a react project like me essentially you need to go to your code in your package.json file and make sure that the top four lines look exactly like mine then we're going to do npm run build and then it's going to generate this build file you're going to copy the contents of this build file into the public underscore html folder inside your hosting a panel after that you're just going to create this dot hd access file back in your dashboard when you click on your domain voila your website is now live the reason i use hosting is number one because with my web hosting plan for only like two dollars which is literally less than a cup of coffee here in london i can host up to 100 websites number two because of the hassle free and intuitive dashboard number three because they are extremely reliable and have 99.9 uptime guarantee performance developments you can check out their plans below the one that i have and i recommend is the premium shared hosting and now it's also a great time to pick it up because they're actually running a black friday sale and on top of that you can use my code internet make code and with all these discounts you can get up to 91 of regular price which is insane thank you for hosting her for sponsoring this video and for being a long-term sponsor of this channel and now let's proceed to talk about what kinds of projects you need to build to post your resume okay so thomas cuts down his resume a lot and it focuses on improving a couple of his projects and really put effort into them but he's still not getting results what could he be doing wrong principle number two you need to show a range of skills while you definitely not expected to like build an enterprise level application on your own you need to be someone where you're showing that you at least understand how to combine some of the technology together like how to wire a database to your application or at least like how to get a front-end and a back-end to work together because that shows that you are someone who understands that they are taking different technologies that need to work together and you understand at least the basics of getting this basic building block building blocks to work together in your application because that's what you're gonna have to do your actual job so by applying this principle thomas now creates an innovative new ui for his tinder applications and now he's ready to start applying again he sends out more and more applications to all kinds of different developer roles but still no responses what could it be doing wrong in general there's two types of jobs there's jobs that hire based on potential and there are jobs that hire based on skills in general the big companies like big tech companies like googles and facebooks they hire based on potential because they are so big and they have so many resources that all they care about is hiring someone who's really good at problem solving someone who's really smart someone who's able to learn very quickly because they know that they can just teach you whatever language and technology they use on the job however if you're buying for smaller companies especially if you're applying for startup those companies don't have as many resources then they're not as willing to train you up so those companies will be looking for you to already have the skills that they're looking for so if a startup is hiring for a python backend developer you better be someone who can write python back-end code you want to make sure that your resume is tailored to the language that they require like look at how you can show with your projects and with in your resume the specific skills that they literally list in their in their resume just think like a recruiter when you're applying after three years of blood sweat and tears thomas finally gets it's an interview he prepares for it he grinds lead code for two weeks he can't wait to finally get a job as a software developer and while the interviewer seems somewhat impressed by his skills it doesn't seem to quite understand what his projects do and what problem that trying to solve so he ends up not getting the job and he goes back to writing angry threats in reddit serious career questions you want to get a job you want to be someone who can provide value to the business because as much as you might not be interested in business like when you're working for a company you're working for a business that's trying to make money so ideally you will be someone who at least someone has an understanding of the business side as well who can solve problems for the company so that is why when you're building your project you want to think about building something that solves an actual problem it doesn't have to be super complicated but like don't be like a snake game or something like that as much as you can spend your free time coding up like small fun project if you want to get paid you need to be solving problems so if you can show that you can think in this way they're going to be a lot more impressed by you and they're going to be a lot more likely to think that you're someone who can then solve problems for them so if you apply all of these principles you're going to do well but if you want to stand out if you actually want to be really impressive there's one more thing that you need to consider hello by the way i recommend you go follow me on instagram right now i've sort of got two accounts and i know i've sort of been going back and forth with this this is the instagram account that i want to use for this community to speak to you guys i want to post stories if you want to follow my personal life as well you can follow this one as well but basically follow this instagram account right now if you wanna see behind the scenes of my coding that's where i'll be announcing stuff yeah go follow me on instagram let's take a step back who is a programmer what is a programmer what's the role of a programmer well as a programmer you are a problem solver your mission is to solve problems for the company that you work for therefore the purpose of your projects the projects that you're building is to show to your employer that you can solve problems what does this mean it means that you shouldn't just be copying projects that you see in your tutorials again in the beginning it's fine to build projects from tutorials to like get the reps in and stuff like that i know my tutorials the past but that's why i don't focus on making so many tutorials on my channel because i believe the real core things that are gonna make you a good programmer is simply having the right principles and then utilizing these to build your own things to solve the problems that you actually want to solve if you're a recruiter you see the 101st resume that has all these exact same projects in it are you gonna be impressed by that are you gonna go wow this is so impressive definitely gonna give this guidance to you no you're not gonna think like that so how do you actually then build something that's a bit more unique well i wish i could give you like one blueprint to build the most amazing unique programming project for your resume but if i could then by definition they wouldn't be unique anymore because 10 000 of you would just go and build the same thing but what i can give you is this one sort of hack this idea is it's actually pretty important it's from a book called still like an artist but this book basically says is that nothing that you see in the world be in art or like movies or youtube videos is ever really original because all of it has always been inspired by some other work the difference between being inspired by something and copying something as if you're copying something you're just copying one source you're doing exactly what someone else did in the exact same way therefore you're not really solving any problem you're not really showing any original thinking but what inspiration is about is you take 10 different sources so for example this is literally how i make this youtube video you can watch so much youtube on my free time i'm constantly exposed to really great youtube videos from all sorts of niches and like i start just like gathering these ideas on these impressions of them so then when i make my own videos i can apply these principles that i've learned from all these other youtube videos and then i apply my own flair to it my own touch to it to then make these videos unique that is how you should also be approaching your programming projects it's completely fine to look at like 20 examples of projects that you seen a line of tutorials and something like that and then you can just take ideas from them and see like okay in this project they apply this api in this way oh i could do that except in this other way and another way to do this is to take an existing thing that has been done and just doing it in a different way that has been done before this is how successful businesses are mostly built anyway it's very rare that you see something being built that is like a completely revolutionary never seen before idea it's usually about taking an existing problem that already has an existing solution but just doing it better this is how netflix was built there were people who wanted to watch movies and they were obviously already solutions for watching movies there were cinemas you could rent movies but what netflix came up with was the idea of having this streaming platform where all these movies are just available in this one platform online existing problem that already had a solution but they just did it better and with all of that now is the time to talk about the three projects that i think are really excellent projects to build for your software engineer resume number one is some sort of visualizer app the reason why something like this is a great project is because number one it shows that you have an understanding of some computer science concept number two it has complexity and shows that you're able to combine different technologies and number three it is something that's very easy for interviewers to understand extremely quickly and it's something very intuitive second grade project is something called a bug tracker this is something that i am personally also building right now there's a great tutorial for this by coda foundry but again i want to remind you don't just copy exactly what they do use this idea and make your own version of this this is a great project because number one it solves a business problem and it's something that software development teams use all the time number two again e requires complexity and number three it is reasonably unique i haven't really seen many people do something like this a third grade project idea is a stock trading app or some sort of personal finance dashboard the reason why this is great is bluetooth number one again this is useful and easily understandable number two if you're making a stock trading app like i did it requires you to talk to an api and understand how all of that works and number three it probably requires you to work with a database which again is super super in demand in the software industry i know what you're saying building all these projects is hard all these principles they're like very hard to implement right and i'm not good enough at coding yet to actually do this if that's you make sure to watch this video right now to learn how to make coding less hard with that i'll see you next time foreign [applause]