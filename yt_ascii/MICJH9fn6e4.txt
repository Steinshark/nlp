hacker news hates neovim all right at least that's what i've been told by tj is this true well yeah it looks like a few people have finally gotten to the top with a little bit of a positive attitude but when i checked this earlier today all the top comments were just like yeah man why would you even ever use neovit my just use vs code for anything more than simple text editing simple why would question is why would you use vim for simple text editing that actually sounds like more of an inconvenience to use that one program you never do with arcane motions and weirdnesses like yeah that actually seems like it works all the time to right just have vs code and you're like dude i don't know i'm just gonna edit some simple things and you're like well you already you already have several gigs dedicated to this vs code instance why not just use it you know something tells me maybe there's a there's a flaw here going on right so obviously so how it all got started is that there's a getting started on lazy vim now lazy vim i'm not sure who sets this up this looks like tokyo night maybe so i'm just gonna assume falky or someone that's a faulty notice falky okay this feels like a falky this feels very falky so this is very good lots of stuff obviously it does all the things you might want in here blah blah blah blah blah easy to get started lazy fam and then hacker news saw this and someone posted it tambourine man tambourine man and there's 420 comments just sometimes is it not just like things line up perfectly it just makes me feel good in my life when this happens dude do not refresh do not i don't i'm not gonna represent i'm not refresh okay okay okay let's let's read what some of hacker news has to say because you say now that there's some more positive comments kind of coming in all right yeah we can we can also go you know we can maybe find some of the ones where people were just complaining that's maybe where it's a little bit more fun to chat about but some of these are i think pretty reasonable takes about lazy maybe like just a quick background on lazy then but how familiar are you with like this as a distribution i i'm not familiar i just assume it's another version of lunar vim where it's just like hey you can effectively initialize any of the plugins to your hard contents but maybe it gives you a bit more control yeah so the main thing that from what i've seen the difference for lazy them for some of the other distributions is lazy them is really focused on not hiding anything about how plugins work so if you like read the readme of a plug-in then you like can still configure it exactly the same that you would otherwise so like if you want to add your own plugins or do whatever it's very easy to do all those kinds of things but there's like some simple ways that you can kind of compose the configuration so maybe lazyvim can provide a default like setup for something and then you could add three key maps to it right so there's some sort of like this way that fulkey set it up with both the distribution and the package manager that you're able to kind of oh i still get the benefits of like things mostly work right away out of the box oh this plug-in updated and so like the base distribution updates but my my additional configuration still works so i kind of feel like lazy vim is a really good alternative for people who want to still change a few things for themselves or maybe a lot of things but also don't have sort of the experience where oh every time well i don't personally experience this but like the meme version of like every time i update everything breaks like that meme yeah that it doesn't really happen for this and so like i consider it a really good on the like spectrum of distributions like there's kickstart which is like basically nothing right it just has it's just a small yeah just as one script and a setup and then you're supposed to take it yourself like lazy bim is the next step on that one where you would want to do and then there's maybe some other ones i don't have as many opinions about like the further along that spectrum okay so it's like a partially opinionated vim setup but it allows you to do a lot of things yourself so i could do my own after folder and then perhaps configure the plugins the way i want to in my own after folder and it doesn't feel so like because that was one that was one of my big gripes with lunar vim even though i mean obviously i'm not saying anything against chris hat machine great guy did a great job with it but it's one of those things where if you want to change something you have to learn both how the plugin works and how how chris app machine has set up lunar vim such that you can now make edits to it and that's a little bit more confusing yeah there are some specific ways to lazy them that you can configure things but like you can also go the default way for other stuff too so they're sort of like a range for how you can do it okay okay let's see let's see if there's anything oh let's let's try to find some some good juice okay many people complain about the time you need to have a proper vim in computer security i learned to make my own tools to develop my own scripts that match what i want to do scan for vim this is exactly the same i started with python so my vim became the best python ide for me and that's all what i said to junior dev is here's my vimconf you're allowed to copy and paste only what you understand then this kind of this sounds a little neckbeardy you may only copy and paste what you understand it could be in a nice tone like hey here it is like just only copy and paste the stuff you understand there's a range that that could be read i think medical that we read doesn't mean that everyone's talking exactly like that it could be okay you're right then i did some typescript and added a configuration that works for me thus the pain point came from my old config in python i found a new good plugins added them and so on with rust and ruby and everything is committed so now and on a new machine it takes me the time to copy paste my config and write plug install every time i test vs code it does not do what i want and when i look into it i can't configure it correctly vim has always had oh yeah so this is like your classic reason why you'd want to use vim right is that i'm the person that wants to understand how things work and i want to be able to make it exactly how i want it not because i mean the reality is 99.99 of the time i'm on my computer using my keyboard for my setup without anything else so it's like i don't care how you do it i don't care that you understand how i do it i type in dvorak by the way like i just want to be like as netflix netflix by the way i want to be as like dumb and dorky as possible on my thing right yeah i think the other thing too is like there's a really good sort of idea that's presented there which is you don't configure every possible thing of everything you might ever want to do yeah you started with just okay well i do python so i'm going to figure out how python works good and i'm just gonna like oh i don't care that there's this other plug-in that also manages every single distribution of all the things that ever well i want to buy them to work let's get python to work okay then later nice i'm now i'm mad now i'm gonna do some typescript i mean loud and it's not nice but it's like i guess we're doing typescript now so now i need to figure out how to make typescript work and so you just do it one step at a time instead of thinking can i build the whole entire world into my config like on day one yeah yeah that that's the number one demise right is either you have to keep up with every new plugin right i used bundle for well past bundle's life because it just worked right there's no there's no strong wind going to packer other than it's like slightly nicer to configure right that's what really what you're doing if i'm writing a brand new one with lua then okay packers the better choice but now as the next one comes out it's again you can make that change but it's not needed it doesn't buy you anything other than slightly newer version to do something and that's how i always look at is people just there's this idea that you have to have the newest thing or it has to be most up-to-date it's like nah you can just use whatever for a lot or like you you just look at what the new features are and decide if they're worth it for you right like maybe there's you know there's like lock files in packer or lazy and that's like worth it to you so that when you install on a new machine you can keep exactly what you had before yeah yeah that's great okay cool so so then change it but if you're if you never have the problem or you never switch machines or whatever then then don't change it yeah you know okay cool that's good that's good whatever right all right whatever all right i want to find some of the juicy ones where's some of these juicy ones no this is another one that was although i still don't understand people who the flip side of people who basically do all their development on just basic them with nothing else yeah am i crazy so i know one person that did a lot of server work so they're on the server performance team at netflix and so he always this is some coding guy he still does it he still just programs i think in vi most the times where it's just like he's just like i'm always on a server when i'm at work like splunking through things turning on program counters all that kind of stuff and so it's just like i'm very good at this one thing and for me it's just like that's why i don't do anything undefault meaning i only use most default items and so yeah the only thing i probably that's probably my non-default true non-default would be either telescope because there's just like that's just not a thing or harpoon which is just like now i'm using something that is replacing global marks and global marks are really the thing you should be you know swift at so when i go on a server i just use global marks and then i'm happy and boom it just works i've never had to log into a server anything i have to do it like twice a week yeah but even then i still feel like i'm always just surprised that you wouldn't want to have a few more lines of config even just that you could paste into a server if you really needed to if you were going to do you know like a day's worth of work on there that maybe you would want to paste in or like put it on a macro on your keyboard i don't know you literally like just something like you really don't have any keyboard shortcuts that you want to do you type out every command or i just i'm always surprised when it's that small and it's your primary dev environment i did that i actually did that for a while i had on my previous previous kinesis i had it so that i'd just press one button and it would just be like you know like set tab four use expand tab you know like leader pv is yeah like just sex bang right like just like did a couple things just so it's like okay this is easy this is nice i can use this that's funny just because it is it's a super pain in the ass when you don't you're not using yeah in case in case they say you can't copy and paste anything on there well i'm technically not copy and pasting it's all getting typed from my for my keyboard all right am i the only one using vanilla vim with minimal configuration file less than 50 lines i said tabs to four spaces i put syntax highlighting on set background to dark add fuzzy finding and configure netrw very easy setup moreover when i am on a different computer and open vanillavim without any configuration i know that everything is more or less the same as my default vim environment i think it's not that hard to learn developing on the default vim environment with some minor tweaks go go to definition and it depends on your language i guess so i know there's some people in this thread that are like well in ruby i just have to control f for everything so like okay i guess sure that's fine you're already used to not having a language server because you don't believe in types like that's fine i get it but that's the one i would miss from that setup i mean a lot of my stuff i could probably drop if i had fuzzy finding and telescope or like or fuzzy finding an lsp i mean basically like if i have those two then i feel pretty good this is a great this is a great video though if you've never watched this one we had one on vimconf right like two or three years ago first leroy made one right yeah leroy made one where he just effectively did everything with just vim instead of all the plugins setting up c tags doing all this kind of stuff it's pretty cool yeah all right so i you know i'm not gonna lie to you wait hold on did i just replace it is that what happened i think you replaced it yep it's so weird all right where where are some of these people who was the greatest i think it's the next one probably otherwise i can find yes this is here you go here you go all right i've been using vim for years switch to neovim and at this point i'm ready to throw in the towel and just use vs code for anything beyond simple text editing the amount of work needed to get a basic ide up and running for your language of choice even for commonly used languages such as python or javascript is far too much for someone who wants to get on with their day job or hobby coding and doesn't want to spend precious hours fixing obscure issues in lua seething right now furthermore the commute is angry very angry so edgar furthermore the community does not have a good culture of documentation and learning i feel like neil van plugins tend to be one of the easier ones for the most part and when i can't find the answer because i'm bad at using documentation i just look at the code and usually it's pretty easy to tell what's happening yeah i would say well you know certainly there exists plugins with no docs like okay yeah yes but i wrote those yeah right your plugins no i'm pretty sure polar me a text came in probably and wrote them yeah he did but certainly like the base editor and the way that you're supposed to do things are all extensively documented right and those sometimes plugins i would say maybe assume that you know some of those things but what is the point of writing down what's in the built-in standard library docs again in your plugin if it's expected that you should know that already because there's doc somewhere like you didn't read the first one i know you're not going to read the second one it doesn't matter how many times they put it in front of you you know yeah this is true all right too many plugins have very sparse docs or other online resources such as the neovim subreddit are hostile to newcomers with read the effing manual a common answer oh my goodness wait can we stop because the first thing is it doesn't have a good culture of documentation and then the second part is people say read the docs which tells me the answer might be on the docs hold up hold up they just never have any docs and also people tell them to read the docs so it's i will say i mean to be fair as someone on the outside reading neil van dock sometimes it's hard to find the right one right like i find that there's some times where i i'm i'm off in the wrong area looking at the wrong thing i feel most people though in the places mentioned like neovim subreddit or wherever else you would be coming don't just say literally rtfm they say help and then a thing yeah call and help you know rap or something right if you want to learn about tech strap and then and then yeah and then you just go there and then read it right that's not that's not saying rtfm find it yourself that's saying here's where you could read it then you should you need to go do that yeah i so i don't know and that's identical to just like giving a link to a website and saying hey the answer is right here i'm not saying it means that it's easy though for people to get started right that's not necessary like those aren't the same things i'm just saying for this particular point i just don't really agree because i do think there is a a culture of documentation and learning and that people when they give an answer generally except for a few angry people on the subreddit are legitimately giving you the right thing but why would they try and write it in a different way if there's someone there yeah exactly the community is also fragmented with too many ways to do the same thing in the name of the same platonic ideal of personal freedom over practicality in some sense this is true there is a lot of package managers right at this point there's been a lot of them i can think of at least about seven over the past six years name seven all right bundle plug packer lazy you have the vim default plug-in manager that gets used by those but sure oh there's a pathogen okay sure if you want to call that a package manager it was literally a package manager and then there was one more besides for bundle and pathogen that i'm trying to remember that was thursday and i'll give you a hint you can bear again that's fine i knew there was one more i'm like i just haven't done i used pathogen then i used more ways to try and build a javascript bundle though than that right like i mean just i so i get the complaint that there's what multiple ways to do things but i don't really get what the solution is that people expect right like yeah what's the solution i think the solution is that i mean i think really what it comes down to is people want them to do this yeah sure okay right and i get that yeah i'm saying but like what's the solution i would also like if my computer never crashed but like that's also not what just happened and then it just randomly turned off like i don't know what to tell you there there's like there are some things that are difficult to solve this is true this is why there's seven separate package managers just because no one and and each of them are legitimately like some of them are in some ways a succession to the other ones and some of them are legitimately very different like danes focus is on you configure via tamil files and it's like very declarative and you set it up and it runs these things and it does other stuff right versus like pathogen or neovins built-in packages which like to be fair we inherited from them so there's some choices there that maybe we wouldn't have made right are literally like how do you modify the runtime path to add these versus like lazy which is trying to be in a lot of ways like in next-gen lua one that integrates deeply into the ecosystem so you're like okay but those are legitimately different things i don't say that people are making them for the platonic ideal of personal freedom right that's like a straw man argument about it like the reason is because people have different wants and desires and they do happen to be free to be able to make those choices like yeah that's better that's fair yeah yeah i don't think it's often because of that it's it's not because i just want my own version i almost know i almost know nobody that's this like i'm gonna i'm a free man i write my own scripts for everything all right a simple question i think well to be fair though that is a perfectly fine reason to build something and i don't like i think it's cool that the of them lets you do that like that's a benefit i think even if it makes it like harder for someone new it's cool that you can just build whatever part you want for any part of your stack for this and just do it that's cool yeah i think that's cool a simple question like how do i set up black with neovim to format my python files on save will yield a dozen answers each with a someone's favorite plugin setting up that plugin will require another plugin and so on until you end up with a jenga tower of dependencies so that it doesn't quite work the way you want but it's too fragile and time consuming to tweak correctly i mean that's true this let me let me i know tj you're not you're like no this is not true but let me tell you why in some sense it's true one reason why it's true is because what someone will do inevitably is on save they will just simply execute like a shell command to save the script and pipe black into it and fix it but then you don't get a refresh on your on your current buffer and then you get this weird like hey for you to save you have to do yes or no and taking the newest version and you feel kind of all goofy so then you try to look for a plug-in that does the thing you want it to do and then you end up in these weird areas where you don't quite know what one to pick and then it gets kind of confusing you can say the same thing with like pretty or all this even though it is a solved problem you just have to kind of know what you're looking for yeah i think four languages with a reasonable lsp this happens automatically now with basically no config you can just use bim.lsp.format right like i use it all the time so that one is so like for languages that have a cohesive ecosystem then that's easier right or you can try and install like a distribution that handles those things right like in the sense that's what you're doing with vs code or other things i'm not formatting is like one that's currently kind of difficult and we actually talked about this recently on the nala last one right in the sense that like for typescript you have tss server that's going to format you have eslin and you have prettier and then like also someone on your team added some new one because they want to you're like okay well now there's like five different like separate executables that have to run on your file every time you save that is somewhat like difficult to manage and a lot of people i think like it just it just works in vs code as in like it happens to go this way and so that's what we chose that's not really like the same thing as vs code always fixing the problem as it is like oh well they happen to enjoy a large market share and so then you know you you end up picking those things sort of by default which i'm not saying that that's like wrong or bad or you shouldn't do that i'm just saying that you know picking any of them i think you kind of sign up to do some of those you recognize that you're not the most popular editor in terms of users yeah that seems that seems fine so i so that is a good point which is that you know when you use rust you know rust by the way or go or zig there's a singular tool to do a singular task so formatting is a solved simple problem we use typescript it's not simple it is just it will never be simple because there's not a single tool to do any single thing in fact even the most singular tool which is npm actually has yarn and pnpm and probably there's another one soon to drop any moment it's just like yeah we're waiting meta tool to manage your tools and even so the funny thing is after we had this talk with null ls where we're just we're joking about the formatting that exact same day i had to write a class in javascript that also implemented something that took in a generic and it crossed my 80 line boundary and i didn't realize i had an eslint rule that would move a parenthesis to a new line in a prettier rule that would move it to the same line and so until i committed it and ci failed and i was like oh i didn't run prettier weird so i ran prettier saw the change committed it pushed it and then it failed on eslint and i'm like oh gosh no and then i realized that i have two competing rules one that would change it one place one would change the other and i realized that you know the problem is is that eslint is more than lint it also formats in some certain cases turn it off right so i'm like i'm going through turning off the formatting but nonetheless like that's a real problem that's the problem four matters it's very very you can run into that anywhere right it may happen to be that you run into that more often any of them i'm not trying to make the case that it's easier to do that any of them than it is in other places but like i also never have to think about formatting for the languages i write because i have one lsp i think that's like three lines and that turns on the formatting on safe which you don't have to do if you only want to do it when you're running it you know manually which i know is your preference then you do it only when when you want to run it so i think that part is kind of like there's some difficulty in the fact that python also has multiple different ways to do dependencies and and also i i always find it's sort of like okay if you search something online and there's 10 results and some of the results are 10 years old and some of them are from six months ago i i don't always think that that's like a crazy thing to try and evaluate which one seems more relevant to today's world that doesn't yeah research javascript and you just take whatever one was from react from five years ago and everyone's doing hooks or i don't know maybe that was only two years ago i don't know anything about you you clearly have no idea hooks are people still doing hooks maybe i'm wrong so this was like seven years ago man i don't know i don't know anything about react all i know is what i know from people getting angry on twitter but but you wouldn't you wouldn't say that react you know isn't well documented or something because there are answers on the internet that are out of date you should go to you you know you go to maybe some so not saying that it's exactly the same situation again but i just sort of feel like i don't know you can go and look at the answer and if one project's getting updated every day in the last six months and one hasn't been touched since 2017. i don't think that it's super confusing to be like which one seems like the modern way to solve this all right in the meantime i can just control p and install what i want in vs code and be on my way in a few minutes or control capital p i don't particularly that's not true malki had to make a whole video about configuring vs code after he switched so i know there's a whole bunch here that he's not that you know the thing is is that when you use vs code and you want to make any customization you also have to find the right json property in the right json file to go jsonify and you have to you know it's it's not as simple as it is made to be i don't particularly like vs code it's heavy and slow and janky particularly on older laptops i don't like being sucked back into the microsoft ecosystem after spending years getting away from it but ultimately i just want to get on with my job and my job is not lua developer or neovim plug-in expert reasonable that part's reasonable i get that i mean world you know that's an obvious thing that we're trying to solve generally speaking i'll just say oh you want me to give my hottest of hot takes that i've been thinking about lately it's not that hot but it's like i i just got done i just got done making a smoldering take on you did all right so mine will be safe yeah yours is safe you're it's like that one meme where the guy's standing and catching all the arrows yeah you know and i'm sitting here with with my hot take so my hot take is if i have something that is approximately as effective and it's not from microsoft even if i'm say let's even say five percent ten percent slower or i have to do extra work i'm gonna try and pick the one that's not for microsoft there you go yep that's my hot take i'm on that team too i'm literally on that team 110 which is if i can avoid the one that's just like microsoft's entire goal is to get you to use vs code because they're going to use all that knowledge that they're sending back with telemetry along with you having free repos on github to train an ai to make a bunch of money off of you like that's literally what microsoft is doing they're using it as a way to make money off of you because it's not free there's no way they're paying 30 developers out of the goodness of their heart because they're like oh we have a couple extra billions laying around let's love on developers no they know you give a lot of money and you make a lot of money and they want to make a lot of money off you so chad saying stop using github no i said if it's approximately equal i'm gonna choose right i don't think that a lot of the other competitors get up right now are approximately equal which is why i'm still on github today like neovim gets a lot of extra contributions and a lot of extra things happening because it's on github versus somewhere else right and it's a direct competitor to vs code like if you think about it so we're actively using what like microsoft has done right and so then that's fine so i think that there's so i'm just saying i'm not saying microsoft's like the most evil company ever or whatever i'm just saying yeah if if if i have the option between those two then i'm going to choose the one that like isn't with microsoft so if it requires a little bit of extra time for me then i would pick that anyways i think that i i like neil them better anyways then vs code right but i'm saying even if it wasn't there i think it's a win for me personally i'm not telling you what to do chat yeah chat yeah let's see on the amount of work i needed to not only get a basic ide up and running for your languages of choice and even the commonly used languages such as python java is far too much for someone who wants to spend their day day job or hobby coding and doesn't want to spend precious hours fixing up scary issues in lua okay here we go here's the response yep this airplane is the choice of professional pilots the first thing we advise you to do is turn the yoke upside down it's much more ergonomic like that also you probably want to rip out the altimeter and replace it with a custom one that has more features and bring your own gps unit and tape it to the windshield because this plane doesn't have one by default and of course remember that unlike in your car left actually means right in this plane this is the professional way ah yes when you fly over canada you will see a blinking warning sign telling you that you're out of fuel that's just a small glitch caused by the metric imperial confusion it has been known for 23 years but we haven't quite gotten around to fixing it yet don't worry this plane is still excellent for professional pilots if you feel otherwise you're probably not a real professional so i'd assume this is a seething or a scathing review of neil vim i can't tell which one i know i can't tell if this is like ironic or unironic well i can't tell if it's saying basically like you know oh well you shouldn't want to switch anything because someone else who's way smarter than you made all the choices and so you're just a dumb idiot you should trust your microsoft overlords or if it's saying microsoft can't fix small things so you should try and do others i literally can't tell which way i'm trying to be convinced by this so what i so how i read it is this is that the airplane of professional pilots is neovim so to be able to use neovim you have to go through all these complicated steps that are really confusing and sometimes it doesn't work like the canada out of full thing fuel thing and if you don't use it you're actually not a real professional right that's literally checking it is going it's pro neovim and then the next one this is auntie neopin and then the next one 100 microsoft shown posts it's literally the heisen post no one actually knows what's happening right now all right okay nice let's see okay let's let's keep on going i mean these comments are kind of funny more that you want they are yeah more that you want to carve a bowl out of wood vim is like a knife with some modification that you can turn into a carving knife vs code is like a chainsaw that has attachments that have been made for it and also the bowl carving attachment next level wizard comment here 's next level wizard i am on that level hence the reason why i'm struggling here if you don't know your tools then you can easily mess the knife modification and not end up with a carving knife the chainsaw with the ready-made attachments is easier to get going but in return you have to carry the chainsaw with you and if there is any problem with the tool itself you probably aren't going to be able to fix or modify it yourself so there's a bit more like trading initial speed with more precision but also being able to do more after initial learning curve oh baby is this are we getting into full oh yeah pew's coming back okay so i think i'm right on how i read it because pew's coming back he's getting ready for the okay i'm ready we'll finally have clarity on the first comment now that's good that's good yep the chainsaw with a ready-made attachment is way easier to get going okay well you remember that this is where your analogy breaks down from me the chainsaw vs code is absolutely perfect for the tasks i'm using it for when i write python code the python extension gives me exactly what i want that's because the environment it creates has been fine-tuned based on feedback from thousands of users with similar requirements to my own there's no need for me to modify anything any more than i modify my own car or my trousers trousers nice classic classic trousers it's simply ready for me to do professional work and whenever i have a special requirements i know that i will find an extension that caters to them also i don't need or want to reinvent the wheel that has been invented hundreds of times already and polished to perfection through more man-hours than i could ever hope to invest myself this guy loves vs code he really he really thinks they've got every single thing perfectly fixed that sounds great then he should use vs code yeah that sounds good is he he has trees and he has a chainsaw let's go yeah it seems like vs code is working great for him that's good i don't okay sweet you should keep doing that that sounds awesome then just use the chainsaw and accept that the knife may be absolutely perfect for tests for for of somebody else wrong this is hacker news no no download him download him now can you even download i don't even logged in not even close you're exactly the same functionality with neovin plugins the only difference is that because vim has been open source for decade for decade for decades there are many more plugins and hence the choice is harder to make vs code also helped improve the neovim experience language servers true comparing vs code and vim is like comparing a standard calculator with an rpn one what's an rpn reverse polish notation oh i just didn't expect to see reverse polish notation here i'm like over here trying to think of a calculator i'm like is this like a ti-86 like what are we talking about like oh i'm pretty sure yeah okay the only difference is because vin has been open source for a decade there are many more plugins no the main difference is the quality of plugins not how many there are for example rust analyzer provides an official vs code extension which is professional maintained by members of the rust core team the extension is part of the rust analyzer project itself and can be installed with a single click at which point it just works for vim you have to manually download and update ran rust analyzer binary i mean to be fair when you update rusty also update the analyzer so it's like it's already kind of that's true it's it's kind of it's kind of a thing already install a third-party plug-in configure them to work together and hope one that the whole whole thing doesn't break when the plugin or the language server is updated in two that is con concoction provides a tiny fraction of the functionality that the official vs code extension does just going down a dumb hole of people arguing like if there's ever been a time of people arguing over wasting time this is like the most ironic take of arguing over wasting time let's keep on going it's just it's just flat false i mean maybe for vim some of that's true but for any of them is not true so first off when you use rust up you can just add the component so every time you you can every time you install your latest version of rust it'll install the exact right version of rust analyzer with that which is good yeah what you'd want so that part's not true you don't need to install a third-party client because we have built-in deep like built-in lsp and you don't even need lsp config you just can use that if you want and then what was the last part i forgot the third one you have to if you update it doesn't it doesn't or yeah the last one which is just awesome i can figure them to work together the concoction provides a tiny fraction of the functionality that the official vs code extension does maybe if you wrote it in like a really small font it would be a tiny fraction but otherwise it seems like basically the same otherwise i don't know i think i had this okay so here you go i'm just gonna keep this here for a quick second i forgot why i was doing that i think i was here i'm gonna all right let's just get rid of this stuff all right here someone says oh look at this see here you go you'll notice that i have context of where i'm at look at that nice beautiful context see i got that vin that's beautiful right that's 52 lines up 43 lines up 37 up so if i go 52 up i jump right up to the look at that jumps right up to it look how beautiful beautiful it's beautiful it's beautiful russ typescript someone said it's something about rust you can go in here you can see that i have here's a here's a warning shape is not defined there's the hover menu i can see where all these things are created i can hop through them nice and quickly i can actually see that all myself all my switch statements or my match statements don't have the proper exhaustive pattern everything's done it's that simple that's not a plug-in that's built in lsp oh so that's just i thought editor are you sure it's not an extensive and amazing collection sucks and it provides tiny fractions tiny fractions look at the fractional speed i'm using yeah i i don't know i that in my i have a fairly incomplete very simple ls like setup i'm using almost all just plug-ins just to do it just to try it out i guess though i guess what's probably true is since it maybe isn't official like you couldn't put the tm next to it so maybe that's what he really likes like he likes that the vs code one can have rust tm on it but ours we can't put the tm there because like it's soon it's not official yeah and this the suings will happen all right yeah let's see for what it's worth i just needed to install the default neovim lsp can plug in it's provided by the neovit maintainers and it doesn't do anything besides provide default lsp server configs for a lot of languages built into the yep that's why you install it is just because you don't want to learn how to configure your own which is perfectly fine the key binds recommended by the readme and call lsp russ setup and then lula that's literally what i do to start it and start whenever rust analyzer is in path seems to work well enough i don't think i'm missing any functionality you are it's a tiny fraction tiny the tiniest of fractions i agree with your main point you have to do quite a few things to configure these plugins and some of it's not straightforward however i program rust using lunar vim default configuration for vim and has been very straightforward i have all the features i need to program comfortably and i didn't say and i didn't need to configure anything the defaults were good enough for me so that doesn't mean that vim cannot do the same easy of use if oh ah it doesn't mean that vim cannot have the same easy of use if there exists some same default configuration you can just install i'm happy with it and not going to change to vs code or something else wait is chad actually saying that doing the the things listed above were 10 obscure things it's simple they're literally just what's provided and told you to do in the docs like go to help lsp read the steps and then do it yeah like i'm not saying that it's intuitive is just made up because it's about what people's our expectations are it's like it's vs code isn't intuitive for me yeah right so it's very confusing because i'm not using so you're wrong because it's not intuitive for me so there you go you assume we can read the probable alone that's truly the problem all right let's get let's do a little bit more and we'll be done no the main difference is the quality of plugins not how many there are no i don't think that is true if you browse the vs code marketplace and search for python you literally get hundreds of plugins if you scroll down only a bit you quickly end up with plugins that only have a few hundred to a few tens download or a few 10 downloads i highly doubt that the quality of these plugins is better than the plugins for neovim for rust analyzer plugin example i can install rust analyzer with mason in a few seconds as well and then if you have set up lsp zero it just works trademark but i agree keeping a bim configuration is akin to a hobby which i enjoy quite a bit but damn yeah i think this is all fine i cannot believe how long this argument to have anything more from pewpp oh they're just so mad they're just gonna keep going that's the best part too is like it it basically the reason that i don't like the tone for how some of the vs code people talk about it is basically like it's just stupid to use anything else yeah right but that's a i'm not saying it's stupid to use vs code i'm saying it's fine and like mr microsoft out there at pew if you really like vs code and it does everything exactly the way you want then you should keep using it that seems fine yeah what's the problem use your chainsaw yeah use your chainsaw with the carving attachment that's what you want to do that's what you want to do i i me personally i don't really like configuring vim that much i like having the option to build my little plugins that i like like our little little text scroller thing that we were building and all that oh yeah that was a lot of fun i had a lot of fun doing that and so it's just like whenever i want something it's fun to have that choice and the api is super simple to build your own plugins other than that i just use like the default everything i just don't even care i don't have time i don't i don't got time to be configuring every day i got a life i got kids i got a wife yeah i don't use it that's the that's the other thing i guess like it's not it doesn't really bother me but i also get sort of i don't know confused because people talk like they're always configuring any of them and i don't really get that like as someone who's i'm very involved in the community and like in the editor itself and i've spent a lot of time you know writing plugins and stuff but i don't actually spend very much time changing anything in my config yeah that part for like a week or two days really really do it over a weekend and i'm just like that is my new config for the next for 2023 to 2024 the end all right that's enough of this this is ridiculous i don't know why people get so so upset about things i like how it's sharing like hey here's a cool way to use neovim and someone's just like you know what sucks they're using vs code you're like how did you arrive to lose we're not even talking about them hey man yeah i just want to show you this cool new thing anyways the name is the primogen