so i want to look today out as an automata i was teaching a python module but this has stopped and i teach a module on on formal languages and automata theory which is theoretical computer science this is like state machines and things like that yeah the final state machines yeah and regular expressions but today i think we just look at a deterministic finite automata but what i what yeah i i don't want to give up this python thing altogether so what i'm going to do is we're going to implement automata in python what is the language well it's a set of words i suppose yeah the language is a set of words that's very good well done what is a bird sets of characters no it's a sequence of characters a sequence of symbols actually a sequence of symbols and actually this is the same as a list a special list of symbols what's the symbol alphabet yeah it's an element of an of an alphabet and we we usually use a big letter sigma for for the alphabet it's a final set of symbols and often in in when we do theory we often have very small alphabets and one symbol or two symbols but yeah that's very good for examples so let's start with an alphabet with sigma you see if you do if you do some math we need to have some greek letters that already shows and then some math is coming and let's just say we have a and b our symbols and our language is a set of words and it's all the words so let me write l are all the words the a's come before bees very simple language okay so that's some example so let's say a a is this okay yeah okay [music] he's definitely before bees okay what about ba well no no okay and what about a b a no that can't be and what about epsilon epsilon is the empty word oh okay yeah so that's okay though that's okay okay so let's now build an automaton so i'm talking today about d f a which is short for deterministic finite automaton we will see in other types of our terminals or for example the nfa is the non-deterministic ones and we also see regular expressions which are related to the same class of languages which are called irregular languages but today look at the simplest case of an automaton a dfa and an what's a dfa so we have a finite set of states then we have transitions between states which are labeled by the by the symbols have some initial states we have one initial state and then we have some final states so i start with the state 0 and since this is a start state okay throw an arrow that's when i start it's like a very simple game right but it's also a final state because if i if you've seen if the empty word is in the language so let me do a double circle to say that this is like a ghoul you know final step now if we see an a we stay in this state we have just seen ace if we see a b we go into a new state one which also is a final step we have some seen some e's and one b so let me do this turns into a final state i may have seen more bees that's fine i stay in the state but it could happen i see an a in which case i'm unhappy so i go into state 2 which is not a final state but it's my error state and now i can have transition for a i stay in my unhappy state be i also stay in my unhappy state now actually but look at the examples we have so how does this work so a a so yeah we start here a candle with a finger once we go to the non-deterministic one i need several fingers and i think i'm going to do with markers but i'm here i see an a i stay here i mean i continue i go back here a and now i'm finished i let my a and i'm in a final state automata says yes now a a b b what is this a a now i have a b another b another b i mean the final state i'm happy now ba what happens i start here b i go there a i go there and i finish and i'm not on a final state so i have lost okay and now let's try this one a b a bad state and this one the empty word i start i'm already done on an empty state okay so the language of this automaton is exactly what i wanted to describe the words where the a's come into before b's so here we are in in python and the spider and i want to define a class of dfas and i do the usual boilerplate so i define an init method which says okay what is the dfa we have to have a set of states so i'm going to use the set type of of python there is a set of symbols which is called sigma i don't know how to do greek letters in in python i think it's possible but i haven't yet figured it out there's another greek letter the delta which i also spelled out which is the transition function which gives tells us if you understate and you have a you have a symbol what is the next state and i'm going to use a dictionary for this transition function as a dictionary so we have an initial state which is the one where the l goes in and we have a set of final states and i also have a simple print function so let me define our first automaton so this is the one whereas all the a's are before the b's and the set of state is 0 1 2 the set of symbols it's just a b and here is our table if i find the automotive which implements exactly this automaton so it says okay from zero if you've seen a you get to get a zero from zero if you set a b you're going to state one and so on from one if you've seen a you go to two and so on the left just encoded this little graph as a dictionary in python now when i say 0 is the initial state and 0 1 is a set of final states okay so now we have to do something versus automaton so let's implement a run function has a one function so i say here's a word which i will just use a string to represent it so initially my state is the initial state and then i'm going to eat the word so why the word is not empty i'm using my my delta to say okay i'm in state q i see the first symbol of the string and i'm going to go into the new state and assign it to q again and then also cut off the first symbol and when i finish this i return a boolean which says there's a q is in set of final symbols okay i did something wrong oh i did my indentation level okay okay now it works let's try our examples if i find them again so here we run a two that's one d0 a a b b so this is two and now let's run ba oh d0 i mistyped okay as false oh let's do the the empty it's doing which is fine okay ended up with one more let's let's be complete it will test sweet thoughts so it seems to look bed stairs is red and football is green right it's a terrible example because hill's already the most likely there could be many hundreds of words we could i'm happy again but now i have to say oh what happens if i if i see a b here