okay we are back if you are just joining us you'll want to go to the first video we're setting up a project that interacts with the spotify api in python and we're using flask to do it we've talked about oauth in the last episode we got all of this preliminary work done set up we're just going to finish off the interaction with the oauth interaction with spotify right now and then we can get whatever information we'd like okay so first things first let's get ourselves a new one of these objects we'll do a session.clear because if we're in this redirected state we want to kind of get rid of any the other state there's been and let's get ourselves let's get straight into getting ourselves the code so go request.request.args dot get and then we just get ourselves the code now one thing that i'm going to point out is that in other programming languages and frameworks you might have the request parameters given to you as parameters here that's not the way flask works we have to use this request object which is kind of strange i don't like it but whatever i'm not going to change it so let's get some token information we're going to do this auth object dot get is it access get access get access token code and then we're just gonna set that session let's make a a constant up here we'll call it the token info and this is just going to be a key that we use to get information in a dictionary in this session dictionary the reason i put it up here is because last video i had been typing it out in every place and i had a typo in one place and the whole thing didn't work it took me like an hour to debug so might as well just put it here and get it over with basically we're just oh not that one basically we're just saving this token information in the session what's really cool about this is let's give this a shot okay go to the inspect tab i always forget which one it's called whoops not that application cookies there you go there's our cookie jason's cookie i mean we can't really read the value there but you can see the cookie and we are saving our authorization we're saving our token information there and the token information is going to have like a few things it's going to have that refresh token we talked about it's going to have to access token it's going to have an expires at so that tells us when the access token expires and look we're just saving it so that's it there's not much to it and now now that we know that we've got an access token let's redirect the users again to the get tracks get tracks i wonder if i could just use the url for here also let's just give it a shot see what is external for just always use external though i've never really understood why i've never googled it take two minutes to google i should just do it okay get tracks and let's see if that goes ahead and works there you go so we're now on the get tracks page we have this session token we've got the session cookie that's got all this information in it that we can use and now we just have to go ahead and use it like there's not much to it first things what i want to do though is say token information equals get token i'm going to write this function get token and what get token is going to do is check if the token is the access token is expired and if it is then it's going to get us it's going to get us a refreshed one also if somebody tries to access this page right now and they're they're not logged in like if i could go in this incognito tab and go right to it and look it works once we start like pulling data from spotify this will blow up and we don't want that to happen so what we're going to do is also in this function check if there is any token data just ensure that there is token data and if there's not then we'll redirect them to the login page okay so token info equals session.get token info whoops not that token info now this is going to basically get that value from the dictionary we're going to say if that value doesn't exist just return none so if not token info this means if if it's not none then what we want to do is sorry if if not token data so if it is none what we want to do is throw an exception and i'm going to raise an exception just so that i can catch it here except say you know print user not logged in you could do some fancy stuff and like return but it's just easier to do an exception here in this case and what we're going to do is we'll redirect them back to the url4 i wonder how you do url4 of the index page can i just do that well whatever i'm redirecting them back to the index page that's the login page right okay so we have token data for them they are logged in now we just need to check the timestamp on that so let's say now equals int time.time and i believe that's a function make sure we import time let's say is expired token info get expires at minus now if it's less than 60 what we want to do is say basically let's just go ahead and get a new one so if is expired we want a new one of these sports dot gets refresh refresh access token i think that's it refresh access token what we want to do is pass in the token info access token just make sure that that's the right key there it's refresh token sorry i want to pass in the refresh token and then last but not least we're just going to return it cool so now we're here we've made sure that we've got this token information and it's it's up to date it's fresh so now we can just go ahead and use it spot a fo spot of pi dot spotify and we pass in our access token auth equals token info access token let me again make sure that i've got the right key there let's just return i just want to make sure that this is actually working i don't have to make the data look very nice right now so sp dot sp.current user saved tracks limit i believe that the upper limit is 50 and then we're going to set this offset to zero so this is going to give us the first 50 if we wanted the second 50 we would put the offset to 50. we're feeling that this might not work oh it did what are the chances like i feel like nothing ever works on the first try okay so this is massive there's a lot of stuff coming in here one thing i like to do check how this information is coming in go to the network tab just see how that data is actually coming in you can see the response you can kind of get an idea of what's happening in it and i believe i saw this items items there you go so we want to grab the items key because that's what's actually going to have our our list of songs in it although you can't return a list from this route so let's just turn it into a string and you know what let's go one better and just return the first element to that so we can kind of see how each of them looks i've got to restart the server wow okay still a lot of data in there but there you go some song that i'm not even sure what song that is thesis so go ahead and do that so that works and we have a working solution you know if i try to enter this from an incognito tab now what's going to do is oh i've got an issue here with that token info reference before assignment okay user not logged in i have to return that redirect all right well good to know that makes a lot of sense there you go redirects us there doesn't react redirect us on the one but we already are logged in so there you go we're good to go we've got songs we're getting data now you might say well jason this whole thing this whole episode you're supposed to be getting us a list of all songs and how can i do that i'm if i can only get 50 at a time i mean it's simple you just do a loop right and the loop should stop when i ask for 50 i give a limit of 50 and i get less than 50. if i get 49 then i know that there's you know there's no more songs left if i got 10 back i know there's no more songs left because i asked for 40 more than i got and that's about it i mean you can just keep a running tab here you could say all songs we could say iteration equals zero and put the offset as iteration times i like to call it itter but i don't like that it kind of looks like it's a keyword i'm not actually sure what it's a keyword for iteration times 50 and that we do is just iteration plus equals one and make sure that we're actually saving this items adding it to the list all songs and here what i'm going to return this time is just all songs just the length of it because it's a lot of data we want to make sure that we're actually getting all of them i think i have something like 300 400 songs now so let's just get an idea uh-oh seems oh yeah okay okay that makes a lot of sense i just kept going i told you guys all about how we need to make sure we stop and i didn't even stop so if length of items is less than 50 break i talked about the base case like for like five minutes and then just didn't even write it there you go 392. so you can go ahead start poking at songs start looking at them just to kind of give you a brief idea of what we're doing next we're just going to start downloading these songs from youtube we're going to use this thing called youtube dl we're going to grab the songs we're gonna grab the artists we're gonna put that in a string we're gonna search youtube for it then we're gonna scrape that yeah so we search youtube we scrape the video id and then we use that video id to save it and we're gonna save it in our download folder and that's it and we're gonna use some stuff like beautiful soup to parse the html responses and it's gonna be fun so thank you guys for for watching this episode i was really happy to see people requesting it and i'm more than happy to do things that you guys request so you know keep watching the videos keep letting me know what you want to see and i will see you in the next episode