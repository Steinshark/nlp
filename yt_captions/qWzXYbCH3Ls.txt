the all-new dxr8 Pro there are no privacy or security issues to worry about it's a closed-loop system I guess we'll have to see about that oh something's happening my wife and I are having a baby baby monitors have been the target of tons of security research over the last 10 or so years mainly because of the sensitive nature of the data that they transmit it's a lot of really good information for a criminal who may want to do not so good things so with that my wife and I decided on the DX8 Pro by infant Optics the high price point gave me some sense of security but that's a decision that we'll make here in this video and so the security audit begins while they waited for the baby monitor to show up I did some initial Recon on this device I was not able to get firmware for this device so while I waited I went to the FCC website to see what I could find out if you're not aware of this for a device that transmits wirelessly in the US it legally has to have an FCC ID to get an FCC ID they disassemble the device and do a full board teardown of the device and put those pictures on the internet while I was waiting for the device to arrive on the FCC website I found a couple pictures the first one not being so interesting just a CPU board and some Ram however the back side of the device provided something that I found extremely interesting what we will explore today in this video on an embedded device typically a row of four unsoldered exposed pads indicates a uart bus if you're not familiar with what uart is uart is universal asynchronous receive and transmit typically in the embedded World a uart bus is going to be used to host the serial console and more importantly the command line for your device a lot of the times manufacturers will close these things off so the end user cannot get a hold of them but also a lot of times they are left open for the user to possibly get a root shell on the device so today we're going to break down the dxr8 pro and see what trouble we can get ourselves into on this device after some fairly uneventful Recon where I definitely didn't cut my thumb open several screws are revealed that will give you access to the rest of the board there are some cable searing to disconnect that pops up pretty easily we'll kind of leave the board open like this now you may already see what I saw on the FCC diagram here we have a row of pins that say 3.3 TX RX ground and some other ones that I'm not too sure about so I'll validate that the ground pin is actually on the ground plane by touching it to somewhere else it's an exposed metallic on the device that there means that these two the ground pin and the ground plane are touching also we're going to measure the voltage across the 3.3 volt pin and the ground it should read out to 3.3 volts and minus 3.3 because we're backwards so that's correct there the TX pin should be reading some kind of voltage if it's outputting text we'll make sure that the uart is actually outputting before we go ahead and hook it up to the O scope it's pretty hot right now it's a full 3.3 volts so this device is outputting text on the UR panel pretty cool when you see it fluctuating there because there are things going on and off at all times RX pin nothing too crazy going on there that typically floats at around 3.3 and I might move around we actually give it input all the voltages look good on uart let's hook it up to a device to actually be able to use the serial Port as intended after a questionable soldering job I have four pin headers here soldered onto what used to be the 3.3 volt transmit receive and ground normally in these videos I've seen on YouTube a lot of people use kind of fancier tools like bus pirate I wanted to make this video as approachable as possible to somebody who may want to take this side idea on and do it with a home router or an iot device instead of one of those tools we're actually going to use an Arduino so because an Arduino is actually two chips it's an Arduino and another Arduino that acts as a serial converter between the board and the USB port we can actually just hang the at Mega chip that the board comes with in reset mode by tying the reset pin to ground this is green cable here and that will actually just turn this whole board into a TTL logic to USB converter that will show up as a serial device on your computer step one we need to tie the receive pin to the transmit pin then we plug in the transmit pin to the receive pin and then we have to just tie together the ground of the two pins to make sure they have a common ground and then with those two things set up this board will actually Connect into my computer and let's see if we can use this to get a console on the device so here we are we are back in our Linux environment we plugged in the Arduino and if the Arduino is seen by the computer we're gonna do LS slash Dev grep for ACM it's going to show up as TTY ACM zero awesome now we can use one of two commands to actually view the serial Port here so the one command is going to be a screen or the other is going to be minicom I like minicom because I'm more used to it you do need to use sudo if your current user is not in the dialer's group and we'll do minicom Tech D for device and we'll do Dev TTY ACM zero at this point we have to set up a few things to make sure that the baud rate and the parity bits and everything are set up so that our device can talk to our Arduino and then to us so to do that we'll do Ctrl a and o letter O and we'll go down to serial Port set up with our arrow keys and hit enter you can assume that a device is one of two baud rates either 11 15 200 8n1 or it's 9600 8n1 the 8n1 is pretty common but this almost never changes but the baud rate is one of those two we're going to start off with this one we'll change it later if it's not and then also we want to hit F to disable Hardware flow control bring it out of here by hitting escape and enter or Escape twice and then this is it we're gonna power on our device and see if we get ourselves a little shell oh something's happening okay all right we got a lot of good data here this okay so first of all first try getting the data off the bus like this it's almost never happened um I'm not seeing anything very Linux like I'm seeing a lot of gpio LCD stuff well there's the the name of the LCD screen I can probably use this to buy a new one that's pretty cool let's see if we have an actual Shell let's see we got going on here oh interesting so a lot of the times these devices they actually ground the TX pin or the RX pin when you uh when you ship it so the fact that we can actually interact with hitting the enter key is pretty cool but it doesn't look like we're actually in a shell so either we're in Linux and we're in a program or we're in a limited shell and maybe like an art house so let's do a help menu and see what we got going on here okay so this is looking pretty heavily like a rtos here let's do VCS and see what's going on let's do VCS all interestingly here are the libraries that we are looking at so we have everything from oh Cipher nice okay that makes me feel good because it means that there actually may be in ciphering going on on the uh the RF side of this which I'm pretty happy with but we'll take it we'll check that out later um I want to make this battery ADC thing go away so we'll do help and I think I saw a yeah we'll do set level zero and now only the speaker message comes on which is good cool so we're in a limited shell um I do want to do some Googling and figuring out what this Sonics thinks oh interesting okay Sonics is the board manufacturer it's an arm cortex m0 CPU based off the RTX real-time OS interesting I'm in an rtos I probably can do something where I can dump memory system yeah physical memory read write sweet there we go Okay cool so what I could do is I could write a script where I rip the memory out of memory based off of the registers thanks for watching this video I appreciate it we'll see you in the next video where I rip the firmware out of memory either through this console or using the Spy flash chip we'll see how it goes see you next time go watch this video go go click it's good I promise I promise it's good