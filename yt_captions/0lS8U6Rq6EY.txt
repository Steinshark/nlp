how one line of code caused a $60 million loss 60,000 people lost full phone service half of AT&T's network goes down and 500 airline flights uh were delayed on January 15th 1990 oo this one's oldie uh AT&T's new joyy Operation Center detected a widespread system malfunction shown by a ple of red warnings on their Network display despite attempts to rectify the situation the network remained compromised for 9 hours leading to 50% failure rate in call connections AT&T lost over 60 million as a result with over 60,000 of Americans left with fully disconnected phones furthermore 500 flight airline flights were delayed affecting 85,000 people damn from one line of code and it was started in new joisy new joisy was the first people to recognize it this seems great this seems great and well 60 million of course that's low but but you have to remember this was the '90s okay like the amount of airplane flights is not the same as it is today the amount of people like say using cellular devices not as much okay so imagine if they just completely borked the network and everything for nine hours due to one line of code today it would be billions of dollars okay so put it into perspective understand it AT&T's long-distant network was supposedly a paragon of efficiency handling a substantial portion of the nation's calls with its Advanced electronic switches and signaling system this system usually completed call routing within seconds lightning fast blazingly fast however on this day a fault originated in the New York switch cascading through the network this was due to a software bug in the recent update that contained a critical bug affecting the Network's 114 switches when the New York switch reset itself and sent out signals this bug caused a domino effect leading to widespread Network disruption okay what is it what is it interestingly this small software patch was not tested damn they tested in production dude AT&T tested in production in the 90s man the 90s were crazy okay the 90s were wild uh testing was actually bypassed as per Management's request because the code change was [Music] small got to love management management knows best people management has always known best okay so next time you're in a meeting and some managers like hey guess what we don't need to do X Y and Z like let's just pretend you're going to have a submarine that you want to take to the bottom of the ocean and you want to bypass a couple safety features well guess what management is always right don't forget it the root cause was traced back to the coding error and software update implemented across the network switches the error within a c program involved a misplaced brake statement oh yes oh just the worst feature of the all which is switch and now you're telling me it's a prank statement to cost $60 million oh my that is beautiful within a nested conditional statements leading to data overwrites and system resets the pseudo code while ring receiving buffer not empty and side buffer not empty initialize pointer to the first message in side buffer you know they it T&T with them side buffers or ring receive buffer get copy of buffer switch message if incoming uh if sending switch is out of service if ring right buffer is empty send service or send in service to status map else break this was the error and if there was no else there's no l statement here there's never been an L statement and they made one on accident by accident for accident damn here's the yeah opt yep there you go process incoming message set a pointers to optional parameters break yeah yeah you done you're done messed up blocky you can tell right away that this was this is not it dude no brackets either I know in this pseudo code disgusting the problem the ring buffer uh let's see the ring right buffer is not empty and the if statement on line seven skipped let's see is skipped and the break statement on line 10 is hit however for the program to function properly line 11 should have been hit instead yes this process business right here that's what they're talking about when the break statement is hit instead of the incoming message being processed and the pointer being set up to to optional parameters then data the pointers that should have been held is overwritten the error correction software to identified the data override and initiated a shutdown of the switches for a reset oh my oh my this issue was compounded because this flawed software was present in all switches across the network leading to a chain of reaction to of resets that ultimately crippled the entire network system oh boy every time this was hit it would just chain re action shutdown oh despite rigorous testing wait what you know if this was one of those really highly edited reaction videos right now it would play me being like you know you don't test nothing says management and then all of a sudden despite rigorous testing and network designed for resilience one line of code was able to bring down half the country's main line of communication the fix it took nine or it took Engineers 9 hours to get AT&T system back or fully back on they did so most let's see they did so mostly by rolling back the switches to a previous working version of code it actually took software Engineers two weeks of rigorous code reading testing and replication to actually understand where the bug was little lesson here two hours of software engineering time is totally worth the tradeoff of $6 million okay that's what I that's what I'm reading right now that's what I'm reading get blame I know get bisect I know so I that's what I'm okay so right away that's I those are my first thoughts is where the hell is get bisect when was git invented created create discovered uh in 2005 this is 1990 there's no get okay all right no G you can't even get good okay you can't literally you cannot get good you have to use tortois SVN when was tortois SVN created everybody's favorite uh SVN created uh when was SVN created uh sub version also called SVN was created 2000 okay so still a decade we're still a decade off at this point there's no walking back commits okay we all got we we're all weak programmers using svns and and GS and all that okay maybe you forgot how awful those back those days were back in the day conclusion uh for AT&T unfortunately this was uh this wasn't even their biggest system cra crash of the 9s they encountered many more issues later in the decade I mean they also were I mean think about what AT&T was doing I mean they helped you know part of the creation of this giant Network you know what I mean so it's like that's real you know what I mean we got to give them a little bit of credit imagine doing nothing and then doing something that has never been done before that requires thousands of people to be in order creating the largest software project potentially ever wild absolutely wild today's companies have an even better process in place and even then bug slip through Google wrote a great retrospective on 20 years of site reliabil reliability engineering where they uh oh I might I'm going to look at that thing at some point where they reflected on YouTube's first or first Global outage in 2016 the scale of outage for companies is huge and there is lessons to be learned from each outage for most however outages come down to human error and gaps in process you do you understand that spicy wiener you get that you got a firm grasp on it spicy wiener telepon in the US has always been bad compared to Europe I'm going to say something that may be factually incorrect but my American mind can only comprehend it in one way which is the following thing I'm about to say out of my mouth hole which is we made it first so we got the worst version European mind can't European mind can't comprehend being first okay this just did hot off the presses European mind can't comprehend being first got them these nuts lay it down so good um oh man rage [Laughter] detected I'd rather have V2 yeah think about the brain implant coming I'm definitely not going for V1 V2 V3 V4 I don't want any of them okay until until someone like you will you will get one I ain't getting one okay sounds terrifying the name America number one come on let's go prate CH let's go yeah get it