absolutely beautiful this is a great this is an example of a glorious Title by the way because now we have a dog in the fight now I want to read this understand it and disprove Lane by the way this is a sponsored read I want you to know that use code primagen or the primagen to get 15% off the reason why I like boot. deev is that they have an amazing uh backend learning anyone that's in chat that have used them has said specifically that boot dodev is really really good that's why I've continued to work with him uh he is fantastic and I really do appreciate him so hey hashtag add a little bit but I really like his articles I have not read this yet I've been told it's a pretty good argument with some or a pretty good article with some pretty hot takes in there okay this sounds like a tweet from you it is it does sound like a tweet from me that's why I like this okay all right so let's do this one of the marks of a good senior developer is that they have lots of interesting opinions let's go I'm interesting I am interesting uh after years of working on different software projects they'll be able to passionately explain why they think mongodb is ass pair program is no fun and GitHub CLI changed their workflow okay this does feel a bit targeted okay this does feel a bit targeted and I feel a little called out right now I agree with all these points uh I have anecdotally found two things to be true senior developers without opinions tend not to be very good oh I love that take because you should have opinions right if you've been doing something for five years you should have an opinion I really don't like uh the pragmatist right uh the pragmatist is always like well you know it just depends really pragmatism is an excuse for laziness pragmatism is often an excuse like I'm just not going to do any actually strong research I'm not going to have any real opinion I don't want to actually have to fight anybody I don't want to actually have to have a real stance that may or may not get people upset like it's okay to have stances that are different than other people like you just got to be able to hear other people's opinions and consider them right you just have to I really do think good good like you I I really do think you should have opinions by the time you've been doing programming for 5 years if if you don't have an opinion after 5 years you should ask yourself what the hell's going on how do I not have an opinion after this long right it's crazy had a issue yesterday query took one minute for a sword yep welcome to every time I meet someone that is from they always say that can be much faster every time I meet someone that's using  in production they always Mong Go's too slow it's beautiful it's like this beautiful irony it is it is it is just like communism agile and everything  you're just not doing it right okay you're just not doing it right if you just simply did it right Scotsman you'd be a real Scotsman it's just like it always seems to fall under that um Junior developers with many opinions tend not to get good quickly and are annoying AF o oo I love it oh this is a great one um I totally agree because as a junior you don't even know what's good you literally have never tried anything or have very little experience so stop having so many opinions that your one thing that you've ever done is great the amount of the amount of hate I get is always from people that have been programming for a little bit of time and it's always like they've seen one technology and whatever their soup dour starting technology is which is almost always react they will go you're wrong you're wrong you don't even know about DX you don't even know about the DX and you're just like okay give me your DX boy let the gatekeeping begin yes as a new developer it's smart to consume developer content however when you listen to Prime okay call me out Dax Theo or myself Give opinions you need to remember that our opinions are not yours perfect that is a perfect way to State it Theo often makes me think if my opinions are correct or not correct I actually really like what he has to say okay even though I disagree with a huge percentage of what Theo has to say the reality is that Theo has come to his conclusions for real reasons and he builds real products so you should consider it right same with Dax Dax has built a lot of good stuff you should think about what Dax has to say even if it hurts you emotionally I think this you think this use HDMX use HDMX I think this let's go HDX mentioned hashtag hasht that uh don't misunderstand me I my opinions to convince you to join my cult go is based but taking my word at face value does a disservice to yourself if you simply regurgitate another developer's opinion not only will you stunt your learning but it will look bad in interviews and on the job it's obvious when your opinions haven't been forged in the fires of your own experience that is real true on an interview when I ask somebody and like if someone says oh I really like X and you're like ah tell me about X and they can virtually not tell you about X like it shows a real weakness in how they think this is a very very very awesome observation please take this to Heart Take It hyper opinionated Junior versus unopinionated Senior I think they're both not great uh context specific opinions there are many kinds of developers out there front end backend mobile embedded Etc yeah you know often we're always arguing between these two points and we rarely think about these points right all of our opinions about typescript go and all this completely fall short in the embedded world they're like what the hell are you talking about you mean c are you saying C you keep saying go what the hell what the hell is this easyc you keep talking about I can't use that right we don't just discriminate uh on tchack there are also many kind of companies Venture back startups Indie hackers established Tech incumbents uh non-tech companies with internal software consultancies Etc no matter what advice you're hearing about technology you need to remember that the speaker comes from a specific background opposing hot takes coming from people with different backgrounds can both be uh can both be great takes yeah that's actually a fair statement that's a fair statement if your world was built and embedded and someone says typescript is great and you don't think it's great well I think typescript I mean if you're going to program JavaScript I think typescripts a great choice I'm starting to love JS doc though but I'm just saying typescripts a great choice so they can both be correct right uh do you need to scale computing power across a cluster of machines kubernetes is good are you building a per uh a personal site for uh your dog kubernetes is bad I work mostly on back in HTP servers and go and I think debuggers are a waste of time the state of the program is easier to uh produce or reproduce John carmac does a lot with game engines and love de buers the state of the program is hard to uh reproduce that is a great great take right there love that Theo works on a startup where product requirements are constantly in flux and performance isn't a number one problem he likes time script the prime gen that's me works at Netflix by the way and works on performance issues where product direction is relatively static he likes rust I do like rust I don't get to use rust for all the fun stuff though I really want to do Rust more stuff and by the way I think it's probably uh better to state that I don't work on performance issues I'm a glue engineer I do all the things I get thrown on projects and then I have to come up and I I my goal is to help projects that's it I'm I try to be a helper I'm a hey helper 10 I've had to work on performance a lot of times but I do but that wouldn't performance wouldn't be my primary role it would be more glue engineering right um and so I I prefer to be the the GL the the glue engineer anyways I think it's more fun you get a lot you get you get to do a lot more uh you get to do a lot more programming you get to do a you get to do a lot less meetings and you come in at usually a pretty good time which is still Green Field right now the best opinions uh tend to carry the infamous it depends as you keep digging for exactly this reason however if you are a zitter enjoyer like myself you need to appreciate the context is never contained in the tweet I never do it depends in a tweet cuz that's stupid to do you only begin to understand the context surrounding a hot take once you're familiar with the author the point if you're new to coding understand that this stuff is nuanced but adding Nuance to titles thumbnails and tweets never gets clicks absolutely you can't you actually can't and people I like there's this whole notion that oh you should never do clickbait the problem about that whole notion is that whatever you're talking about then no one's ever going to read right you're not qualified to talk about tdd notice that we have talked about tdd yet this is displaying the emotion like I didn't realize that this wasn't about tdd or at least currently it has been about tdd I have not read this yet and so when I read this I realize that this is something to get me like this is about the heart of the issue you know what I mean it's about the heart of the issue which is great it's actually a really good title in fact I like it even more okay now we're talking about tdd okay maybe maybe  maybe I read this a little too soon but uh I really like it I'm fine with clickbait what I don't like is scam bait scam bait is where somebody says something and then doesn't do anything about it you know what I mean like that's scam baiting and I don't like that like I want something that actually gives me the meat and gives it to me raw but I want a good title something that engages the way I think and this is a great way to uh engage it it's not pre-read okay all right test driven development is somewhat controversial uh development methodology some developers love it some hate it NBAs always love it because it makes them feel safe tdd falls into the same category as a few other hot button topics pair programming agile scrums solid principles micro oh solid principle uh microservices versus monolith FP versus o op no squeal versus squeal Etc uh there are things that you uh you'll hear about often and most developers tend to form strong opinions about them here's my advice if you haven't used it in a real project don't hate it yet like that that's good if you haven't used it yet don't hate it I've used tdd twice the first time I used it it was excellent the second time I used it it was awful and what I realized is that when I really understand the problem tdd is fine it works but when you don't understand the problem tdd is God awful and that is like 99% of problems I take or I have to take on are problems I don't understand rarely do I get a well understood problem uh that's why it's literally impossible to hate hll no one has ever tried it in production yet let's go hll mentioned we got a hasal mentioned let's go let's go be a humble Junior Dev I wasn't uh one of the biggest mistakes I made early was simply assuming I knew more than I did I uh would push for refactors that made no sense to get away from technologies that I thought were old or bad I wanted to rewrite perfectly stable parts of the code because I thought the new hotness was more m maintainable me about to rewrite it and react perfectly fine jQuery login page I mean it's this is actually a really fair take there was this there is this problem of continual progress that makes people think whatever is newer is better and whatever is older is worse like there has never like not only is that untrue in life it's also untrue in programming right just because something is older does not mean it's worse right it just doesn't mean it's worse a cold fusion is worse but true yeah that's fine some things are old and bad totally true but not all old things are bad I'm not even going to read that that word uh Boomer take you will be a boomer too so don't worry I can't wait for your Boomer days your Boomer days are going to be awful because you're gonna be like back in my day we used to have react server components okay you're going to sound like an old grandma from kit Boga stream it's going to be great uh by all means consuming coding content online but try to understand the reasoning behind the opinions you are hearing try to think about the context the speaker is coming from then you when you have the chance try the thing out yourself before making your own bold claims PS the only exception to all of this is Scrum scrum always sucks you can just trust me on that one it sucks regardless of your company religion political beliefs or sexual orientation this is the greatest statement of all time it's an equal opportunity suckiness is Scrum everybody gets the chance to just suck when it comes to scrum this is absolutely true 100% 100% this is a great article by the way by the way I love Lane's reading and so I've just really I I also really love this meme right here because I feel like it's a personal attack against me and I just think this is fantastic this is pretty much me I am this person right here uh SC scum is the worst uh must confirm scrum sucks yes I know scrum does actually suck so again hey this was a sponsored read but I knew Lane was going to deliver some good stuff and he did deliver really good stuff so hey check out boot dodev code Prime Engen if you want some percent off your first uh payment uh honestly a really great place to learn backend development in fact I even plan on going through some of it and they have a huge amount that's just for free so I actually really like them I really appreciate them yes I do front and Master's courses so you can see that there's a conflict here and I'm even promoting someone that's not frontend Masters right it's because I think they're a really good company the name is the primagen