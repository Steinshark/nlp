hey let's look at the rust annual blog survey I did want to see this okay I want to see this okay it's February 19th the rust team's annual blog survey all right the rust teams is excited to share the results of the 2023 survey of the rust programming language conducted between December 18th and January 15th as in the previous years the 2023 state of rust was focused on Gathering insights and feedback from rust users and all those who are interested in the future of rust and more generally the eth edition of the survey surfaced new insights and learning opportunities straight from the global rust language Community which will summarize Below in addition this blog post uh this year we have also prepared a report containing charts with aggregate results of all questions in the survey based on the feedback from recent years we also tried to provide a more comprehensive and interactive charts in the summary blog post let us know what you think all right exciting our sincerest thanks to everyone uh every every Community member who took the time to express their opinions and experiences with rust over the last year your participation will help us make Russ better okay here we go participants survey okay slightly better or slightly less better a shockingly small amount of growth the views confuse me though can we agree that the views are confusing you had less people view it but more people comp like try it out so you had like 50% even try this one had a much higher than 50% try it had like a 75% try less people cared interesting as shown in above 2023 we have achieved 37% fewer survey views oh oh views oh I see I'm stupid okay okay people are just viewing the surveys less okay okay but we saw a slight uptick in starts and completions there may have be there are many reasons why this could have been the case but it's possible that because we released 2022 analysis blogs so late last year the survey was fresh in many restation mind this might have prompted fewer people to feel the need to open a more uh the most recent survey therefore we find it doubly impressive that there is more starts and completions in 2023 despite the lower overall view count okay fair fair the Karen ratio increased significantly is that the problem all right let's see this year uh we have relied on automated translations of the survey and we have asked volunteers to review them we thank the hardworking volunteers who reviewed these automated survey translations ultimately allowing us to offer the survey in seven languages English simplified Chinese French German Japanese Russian and Spanish that is so many languages to offer a survey in uh we decided not to publish the survey in languages without translation review volunteers meaning we could not issue the survey in Portuguese Ukrainian traditional Chinese or Korean Brazilians and shambles right now Brazil is explicit explicitly not mentioned this is like anti- Brazilian technology right now how does Brazil feel Brazil now mentioned Brazil officially hey we're mentioning them now okay we're mentioning Brazil can we get a Brazil mentioned Brazil mentioned let's go Lua Elixir we don't forget Brazil yeah we're a big Brazil fans around here okay we're not we're not weak okay hey hey too Tech Prime Brazil I will be in Brazil I will be in Brazil soon I will see you and we will crush brail all right the Russ survey team understands that there are issues with several of these translated versions and we apologize for any difficulty that has caused we always are looking uh for ways to improve going forward and are in the process of discussing improvements to this part of the survey creation process for next year we saw a 3 PP increase wait what what does pp stand for can somebody help me here I don't know what a three PP increase is but I'm like I'm too um I'm too much of a child to understand to to I'm I think they're talking about we I think this dick mention did we just get a dick mentioned penis it stands for penis points penis points three percentage points increase in respondents taking the surveys uh in English 80% in 2003 uh 77% in 20 uh 22 across all the language we only saw minor variations all of which are likely due to the offering few uh fewer languages overall this year due to having fewer volunteers I wonder it's a lot of effort for something that is not used that much uh users resp uh rust user respondents were asked which country they lived in top 10 countries in order where United States Germany China United Kingdom France Canada Russia Netherlands Japan and Poland Brazil not mentioned again dang we were interested in seeing a small reduction in participants uh taking the survey in the United States in 2023 down three pees from 2022 which is a positive indication of the global growing global nature of our community you can try let's see you can try to find your country in the chart below Brazil Brazil Brazil Brazil Brazil Brazil Brazil Brazil Brazil mentioned oh man look at Brazil we can find it boys we found it Brazil mentioned Brazil mentioned let's go let's go let's go Brazil 160 160 160 people you saw it I saw it all right once again the majority of respondents being reported uh being most comfortable communicating on technical topics in English at 92.7% a slight difference from 93 uh in 2022 again Chinese was the second highest choice for preferred language for technical communication at 6.1% a classic rust loving loving loving China they love the chain all right here we go a lot of good ideas they think they love they love to be able to really you know be in control of the product uh anyways we also asked whether resp uh respondents consider themselves members of a marginalized uh community of those aners 76% selected no 14% selected yes and 10% preferred not to say uh we have asked the group uh selected yes which groups they specifically identify being a member of the majority of those consider themselves a member of an underrepresented group or marginalized group in Technologies identified as lesbian gay bisexual or otherwise non-heterosexual the second most selected uh option was neurod Divergent at 41% like average Twitter user uh followed by uh trans 30 uh 31.4% going forward it will be important for us to track these figures over time to learn how our community changes to identify the gaps we need to fill everybody everybody on Twitter is Nero Divergent like I it's it's shocking o wow 8% are considered uh unique due to their religious beliefs I wonder what that means political beliefs they feel different on that's weird I wonder how they get all these things all right as Russ continues to grow we must acknowledge uh the diversity equity and inclusion related gaps that exist in Russ Community sadly r is not unique in this regard for instance only 20% of 2023 repes uh respondents to this represent uh representation question consider themselves a member of a racial or ethnic minority and only 20% identify as 26% identify as a woman dude I got I got 1.5% women viewing the YouTubes okay so okay this seems like flexing to me I don't know if you know this this feels like flexing uh we would like to see more Equitable figures in these categories and other categories I 26% seems very very high just like in general in general that seems like a very high number for Tech in 2023 the rust Foundation formed uh A diversity Equity inclusion subcommittee on its board of directors whose members are aware of these results and are actively discussing ways the foundation might be able to better support underrepresented groups in Rust and help make our ecosystem more globally inclusive they're going to walk around I mean I'm confused at how just in general when it comes to a programming language what does this mean right like what are you how how do you do that as a programming language marketing does any really Mark really so if you saw a sign like anybody that starts using rust the rust Community is one of the is is the one group that is most likely to prevent rust from being Mass adopted in the long run the one thing holding back rust is rust itself it's weird because I don't really understand how that works at a language level because you have to convince somebody to like a language and convincing somebody to like a language means you really have to fall into like a a you have to fall into like dork who likes memory management it's too complicated to do basic stuff yeah I don't know it's confusing how one would even try to you know if if that was my strategy if my goal was to do that I would even be sure how to do it one of the essential goals of the rust Foundation board subcommittee is to analyze information about our community to find what gaps exist so the information is a helpful place to start this topic deserves much more in-depth or much more depth than it is possible here but readers can expect more on this subject later okay rust usage in 2023 we saw a slight jump in the number of respondents that self-identify as rust users that's such a strange ass way to say it can you just say people who use rust like what the hell does it mean to self-identified rust users what does that even mean what does that mean what are you saying no I have never used rust before how are you taking the rust survey never using rust before there's more people wait is red I can't like dude I can't I can't even look at this is red supposed to be um oh okay 2023 is blue still 3.3% 397 people are like nah I'm not using rust but I would like to answer a survey about it no I don't currently use rust but I have in the past okay still wow it's wild of those who use rust in 2023 49% so did on daily basis or near daily basis a small increase of two peeps from the why am I such a why am I such a child I am a child um that's weird okay this is actually super confusing thing daily or nearly so increased weekly or nearly so went down all the other categories went down but daily went up I guess that's not too weird right people are just using it more or are you indexing into people who are using rust daily to fill out your survey I can't tell 31% of the people who did not identify as rust users cited again this strangest strangest way cited the perception of difficulty as the primary reason for not having used it was 67% reporting that they simply haven't had the chance to prioritize learning rust yet which is once again the most common reason I haven't got around to it more people now that's a really interesting one this chart more people just haven't got around to it it's going up in time not down in time uh too difficult to learn or learning will take too much time I mean this is real to learn rust very effectively it does take a lot of effort right it it's one thing to understand the basics of the borrow Checker to but to be good at like how you understand it works and everything it it is very difficult anyone who tells you otherwise is I think they're just making things seem too easy I prefer to use another language has gone up whoa that this one is wild right here look at this oh I guess it's not that wild look at the count this is stupid the Count's two there's only two it's not even it's not even that exciting it's not even real data of the former rust users who participated in the 2023 survey 46% cited factors outside their control uh a decrease of One PP sag uh 31% stopped using rust due to the preferring another language oh really is this like actual people no see this again this is such small people that this is is this even a drop can you say it's a decrease of 1% you can't because you got to remember like if you look up here at the tippy top where the hell was it there this one no I don't currently use rust or this one I don't even currently use rust or no I don't currently use rust you're thinking you're looking at the difference of 392 people versus 4 uh 63 last year like the one person is like huge in the amount of different like in the amount of difference 250 people are representative in statistics that's just not true I know people like to say that and people people want that to be true but it's like literally not true what we have found at least doing ab test that unless if you are having not just 250 unless if you're having millions upon millions of people you cannot detect real behavioral difference it's taught that way it doesn't mean it's real it's stupid like to to understand people you have to have an incredible amount of Statistics because you'll see things that just don't exist like any major test at Netflix is we're talking like tens of millions of people people are going into it right some heavy claims have you seen statistics have you ha have you been surprised recently at statistics saying that this is impossible than it turns out that it's possible when people say one thing and then it turns out their life is not representative of what they say I mean if you have 250 people and some people not quite saying exactly how they feel which happens all the time or recency biased or just got excited about something something or something in their life changed maybe somebody within your life like just the idea that that is not it's just wild to think that you can get any sort of any sort of information out of 250 people and assume that you can you can uh what's it called apply that to humankind like that's crazy that's crazy and and people should feel ashamed for saying 250 people represents the world anyways in terms of operating systems used by rust stations the uh the situation is very similar to the results of 2022 with Linux being the most popular choice of rust users okay followed by Mac OS and windows all right no who wants to use Windows boo oh wow almost the same percentage use Mac and windows wait which operating systems do you regularly use for rust development that this this doesn't this adds up to like some percent this is like 150% who are these people regular what is this these graphs are just what am I looking at I can't even like I can't even make a I know it's still it makes it make no sense okay this I'm struggling trying to understand what this means who did this R programmers get like I mean I would assume that most people use one operating system a lot and one sometimes and few people use it like equally I know very few people that use it equally like as a multiple usually when someone says you know regularly I guess we Define regularly different I use Mac Windows 550 interesting I use Windows Mac and Linux equally really wow crazy you guys okay maybe I'm wrong I can be wrong rust programers Target a diverse set of platforms with their rust programs even though the most popular Target by far still Linux machine we can see a slight uptick in users targeting web assembly lepos mentioned embedded mobile platforms with speaks to the ver the versatility of rust so versatile okay again this is one of those which operating systems or run times do you develop rust software for people be we got like 200% 200% um I still feel like I need to see this thing normalized I I just have a hard time trying to understand like where the emphasis is but it seems like Linux and windows I'm actually surprised that Windows is is higher than mac like to me that's that's pretty surprising especially with this if Mac OS is 2% bigger then how is it 15% smaller just a little confused about like how's this working out which operating systems do you use regular well because if you one one would assume if you use Macintosh regularly you would also probably have a somewhat reflective amount in regular for for what you're developing for but it's not like that's that's what's confusing me what's what's your you're regularly developing rust for developed on vers versus developed for okay fine maybe I'm old man yelling at Clouds here just seems a little strange uh we cannot of course forget our favorite topic of many programmers which uh which IDE do developer environment use Visual Studio code still seems uh still seems to be the most popular option boo Russ Rover which was released last year's gaining traction VI Vim neovim Bas Bas I still I know I know you guys hate this but I still struggle with the fact that this doesn't add up to 100 who are these people using multiple programs regularly I'm just okay I'm struggling here I'm struggling rust at work we are excited to see or can Let's see we are excited to see a continued upward year-over-year trend of rust usage at work uh 34% of uh 2023 survey response use rust in the majority of their coding at work an increase of five PPS from 2022 of this group 39% work for organizations that make non-trivial use of rust all right so yes okay so okay interesting yes uh the majority of my coding okay so it's gone up okay I feel like there's selection biased in this one meaning that people who are trying to use rust all the time are gravitating for and using rust more I I really don't think this is an indication that people are that there's more rust jobs and that's the hard part that's like how what do you read from this how I read this is like like people who use rust very well could have gravitated towards using more rust yeah and also it's a 100 people difference here 100 people difference here 300 people difference here more copium you think this is copium which side's doing the copium I guess is the real there's nothing to read from this the whole survey is nonsense it feels like it's yeah it's well it's a super self- selecting sample yeah I'm having a hard time like what what what do you what do you get out of this once again the top reason employers of our survey respondents invested in Rust was the ability to build relatively correct and bug free software at 86% dude I love that answer this is the biggest cope of rust damn son I still I I still definitely build bugs in my rust programs I don't know if I don't know if you know this but but son I I still write bugs like yeah I can't f up I cannot f up the memory side cuz I can't write crazy memory lifetime converter thing but I can most certainly write bugs I most certainly write bugs for its performance uh speed memory footprint okay and then let's see it's uh security and safety uh priorities are important for us okay see this makes sense like if security and safety were your priorities then this makes sense uh we find it enjoyable and fun to write okay that's these two seem very reasonable we need precise control over exactly how our software runs okay that's a fair that's a fair one we already know rust so it's our default Choice oh interesting I I assume that would be really really small we find it easy to uh prototype with okay there's some things that can be easy to prototype with I guess an increase of three people though thanks te for the raid I appreciate that hey te hey te say hi te te say hi TJ say hi TJ say hi hi TJ TJ say hi TJ say hi TJ hi hey we are pleased to see an increase in the number of people who reported uh that rust helped their company achieve its goals at 79% an increase from 7 PP from 2022 77% of response reported their organization is likely to use rust again in the future an increase of 3 PP from the year before interestingly we saw a decrease in the number of people who reported that using rust has been challenging for their organization to use 34% in 2023 and 39% in 2022 we also saw an increase of respondents reporting that rust has been worth the cost cost of adoption all right let's see how let's see okay so okay slight increase about 99 people oh hey beautiful thank you you look wonderful oh look at that my wife gave me a little little protein shake you know something that I'm not thinking about oh my goodness you're totally right I just realized something that I I I realize is super stupid about this whole thing can we just take a second someone just mentioned in chat and they're 100% correct guys let's go back up to the tippity top here there's 500 more people who started it there's 300 people more who completed it that means that when you go and you look at something like uh something like this one would argue that relatively the percent went down the counts make no sense different people I know but the proportion of people going through I'm having a hard time with the whole proportion of people going through through stop the count it's basically useless comparison percentage of all respondents what technology domains is rust used in your organization oh cool serers side backend applications cloud computing distributed systems cloud computing infrastructure web assembly wow a lot of web assembly that one's a bit the damn lies and statistics yep dude this is I'm having a really hard time reasoning about what what's going on but I mean this is is cool I think this is actually a really cool graph um I think comparing it year-over-year makes no sense too okay so we can keep on going with this one you can scroll to the chart to the right to see more domains that uh note that the database implementation in computer games domain were not offered as close answers in 2022 survey they were uh merely submitted as open answers which explains a large jump okay that's fair programming languages and related tools that makes sense this should be a very this should be the fastest growing topic right here I think this is where rust really shines in LSPs programming languages stuff like that that like this this is so much better this is so much better like I think that that's a really great place for R very great place for us as challenges uh one of the main goals of the state of rust surveys is to shed light on challenges concerns priorities of rust on Rust stations mind over the past year of those respondents who shared uh their main worries of the future rust the majority were concerned with rust becoming too complex it does change really fast I think that's rust big weakness right now is that rust here's so here's a big weakness I have or a fear I have with rust is that right now if you were to have anybody come out and say Here's how you accomplish this complicated way of doing something with rust right afterwards somebody else who's also good at rust would go no no no no no no no you would accomplish it this way and you could probably have a third person come in and say no no no no no you don't do it that way you do it this way and a fourth person can come in and say no no no no no no you can't do it this way you should actually do it this way that's one thing I see about rust is that making educational content is really difficult because everybody thinks somebody else isn't doing it as good 5% increase from 2022 42% of the responds were concerned about the lowlevel uses of rust in tech industry 32% of respondents in 2023 were concerned about rust developers and maintainers not being properly supported can you ever be supported what what do you think you're going to get out of these things I mean typically any of this kind of anytime you like think about the guys who developed Tokyo I forget I forget his name um you think he's getting anything out of this the world's most used rust package uh we saw a notable decrease in respondents who were not at all concerned about the future of rust 18% in 2023 and 30% in 2022 okay my guess is that's probably 2022 was closer to all the uh rust uh trademark issues that'd be satday Saturday is also it's a lot it's a lot of effort all right what's your big worries about rust Futures becomes too complex I think this is I think this is very very real language is changing very very frequently continues to change there's still a lot that has to be done I think there's a lot of ways to skin the cat and rust uh I think to become really good at rust and to write really good libraries it's like you have to use proc macros proc macros are really difficult like there's a lot of difficulties in this 28.4% of the uh this year we let's see was worried about the foundation wow yeah not enough usage in the tech industry yeah that that will be a real one let's see in terms of the Future Let's see uh features that rust users want to be implemented stabilized or improved the most desired improvements in the area of traits trait aliases Associated type defaults constant execution generic constant Expressions const trait methods and async dude async async can be hard there's some things with async they're difficult all right people don't care about Tri blocks I don't even know what I mean honestly I don't know what Tri blocks are can I be re real here I don't know what a tri block is a try harder oh I mean I do I do know what they are but I don't know what they are in terms of rust because I don't use TR catch they don't have do they have a TR catch aka the devil yeah that's what I nine K that's what I'm thinking uh acing closures yes this is a real one I wish there was just a really simple way to understand how to do I keep playing around I've played around with it a few times now maybe spent I've only spent a few hours so I guess I need to spend more time but how to do just simpler streams like I want to be able to just do streams that are simple and it feels it still feels very complicated like I want to be able to take a websocket that's streaming in things to be able to like map and reduce and then pass that thing around so I can add in more things and then at the end be able to like pull things out I find that to be a very hard activity to do still with rust just use go that's the problem is I just use go I just end up using go all right improve traits yeah that seems like a big one this makes sense these are all really good uh some of them I don't understand generators co- routines uh if while let chains yeah this is like a huge thing I want you I and you can now do it under a features or unstable and it's super useful this is super super super useful enum variant types too stupid to understand that allocator trade better o handling too stupid for that stable ABI La laughs and see uh man I missed you I missed you too it's why is it super hard and rust if you don't understand why it's super hard and rust you need to go program rust the borrow Checker and stuff like that makes it really hard that's effectively the best way to put it is that it's not simple that's it it's just not simple it is interesting that 20% of the respones answered that they wish rust to slow down on the development of new features which is likely to go hand inand with the previous mentioned worry that rust is becoming too complex the area of rust that rust station seem to struggle with the most seem to be a secrist rust traits and generic system and also the borrow Checker did they just did they just literally say rust you know the thing that rust stations are really struggling with uh in Rust is is rust what is there besides for the borrow Checker generics traits and async what's what's left is there is there is there more macros oh macros they you know macros are in fact indeed even more confusing if you struggle with with any of these then guess what all right this one seems interesting uh let's see async traits borrow Checker macros macros are right here I'm surprised they didn't also add macros right here so there's pretty much everything pretty much everything right here okay let's see uh respondents of the survey want the rust maintainers to mainly prioritize fixing compiler bugs I guess I've never used rust in any sort of complicated way so I've never I've never ran into a compiler book what's the borrow Checker do the borrow Checker determines who owns what variable the borrow Checker okay here here we here you don't know what the borrow Checker is here uh we'll we'll we'll make this easy okay um yeah don't look at that uh here I guess I already have test rmrf test here I'll just make this very easy for you uh here you go test there you go personal test cargo anit so if I go like this let a equals VC this right and I have a I have a function called Fu that takes in a which is going to be a uh a VC i32 y not if I go like this if I go Fu a and then I go print uh hello world and just print out a this causes oopsies print l in there we go this causes a problem and why this causes a problem is that this right here oh owns a a is a vector I pass a into Fu a is not borrowed it is the thing so I move a into the function function Fu now owns a a is not returned from the function we cannot use it afterwards so you cannot Ed moved Barrow of a so if you want to borrow you'd make it into a reference and now I have to pass it on so now it owns effectively you can imagine that it owns an integer that is the pointer to the VC it doesn't own the V itself does that make sense there you go so that is what that's how that's like the basics of the borrow checker for anyone that's wondering face reveal when what am I not face revealing now go now teach us go ch no so that's like the basics of it okay as a python user what the f it's very very simple the thing that makes it really really nice is that if you use if you use these semantics it's really really nice uh because you will know who owns what and who has permission to mutate variables it can be very very nice like I'm not against I'm not really against some of the borrow Checker rules honestly thanks for the hype train again people jeez jeez as some recent years respondents noted that uh compilation times is one of the most important areas that should be improved however it is interesting to note that respondents also seem to consider runtime performance to be important or more important than compile times really really really thank you I'll come back and say thank you to that here in just one second anyways we are aware that rust uh that the survey contains some confusing uh confusing questions we will try to improve them next year's I think the big thing is I would like to I think what I okay so here here's something I'd love to see Russ survey I'd love to see it that your first question is how many of you are returning from last year reans answering this question and then I'd love to see the change in people's attitudes over time cuz I think that that would be very very interesting at least second separating out new versus old like there's something very very interesting about those kind of things because this is just like a hodg podge of like I don't even understand how they're coming up with these percentages maybe some more normalization maybe ask questions that lead to more answers here because it just feels confusing you know what I mean like when you say what's the like even giving a radial button version of like what's the worst thing for rust development not what are the things you struggle with like what is the worst one cuz what it's just like what's the worst part about rust where is that where where did that one go hold on this one what's like the worst part you're just like yeah so most people find like a third of the people find everything about rust hard right okay but which one half the people find Asing hard right it just feels like everything just feels so like the information just feels hard to consume and then the comparison between the year before is just like this feels like stats cherry-picking you know like look at this you're sitting there like this one whoa it's practically up 5% right here this one what happened oh that's a difference of of seven people actually let's undo that I just read this wrong it's actually more hilarious than that look at this for a second look at it for a second it is a difference of seven people but seven people less okay because seven because there was less people who answered this question which means there was less people who answered but the proportional percentage of people answering went up it's like it doesn't even make any sense okay I can't read that like this is this is impossible to read you would think more people using rust has been worth the cost of adoption down absolutely by seven people oh my gosh there has to be some sort of normalization right this is actually the funniest thing I think I've ever seen in my entire lifetime right here using rust has been worth the cost of adoption up 4 and a half% down absolutely by seven this is like the this feels like I mean honestly when I read when I see this stuff this this literally feels like startup trying to say why they're still making money hey Thor's dad like that's literally a startup being like well actually if you think about it we've increased a dang it we've actually we've actually severely increased our recent you know and you're just like what have you increased you haven't increased anything oh my goodness hold on there we go I wantan I want to take a picture of this because this is this is just like this has to be the funniest this has to be the funniest picture of all time where' it go this is the funniest this is the funniest thing on the internet today don't you it is not man oh this is hilarious what are you talking about of course this is funny this is this is hilarious what are you talking about how do you not think that that is funny I think it's just I think it's hilarious okay I'm loving it I'm loving it you guys don't have to love it so conclusion seven p seven people use Russ less all right hold where is where is it all right anyways yeah I'd love to see this thing just like some sort of some sort of like I should have used 4.4 PPS I didn't there should be some sort of like understanding here because this it just I can't understand like nothing here makes sense this was this is actually a terrible survey results not not in like see the problem is is when say that someone's like I put so much effort into it he's being mean it's so it's like no first off again I've said this before people don't care about the effort I understand this was hard to compile and it took an effort from a lot of people to make something the problem is is trying to read into what the results are is meaningless okay it's a meaningless the data the data is there the presentation is just confusing I don't I I can't take anything from it got to try like stop having confounding factors in all this a Jen