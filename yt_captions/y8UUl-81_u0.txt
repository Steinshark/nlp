in Python 3.12 we have much cleaner Syntax for creating type alyses and this type alas which you can import from typing is deprecated as of python 3.12 in favor of the new type statement which is a soft keyword and this type statement creates instances of something that's called a type alas type which natively supports forward references anyway let's get started by creating a type Alas and then I'm going to show you how we can use the new type statement to achieve the same Purpose with some extra benefits so on this example we have a type called int or string and as you might have guessed it this can either be an integer or a string and this will be of type type alas so here we're telling the static type Checker that this is a type Alas and that's of type int or string and that works perfectly fine but as of python 3.12 we now have this new approach which I personally Al think is much cleaner and to use it all we have to do is type in type and we will do the same thing int or string and that's going to equal int or string and in my opinion this looks much more beautiful it's much easier to read the purpose of it makes much more sense than the old verbose syntax and if you start to group these for example if you have a coordinate as well which is of type Tuple of float and Float you'll see that they just fit nicely together now we know exactly that these are meant to be types but there's something else that's nice about it and to demonstrate that I'm actually going to remove all of this and I'm going to be creating something that's called fruit or none and here we're going to create a type which is of fruit or none so now we can create a class called fruit and this code will run perfectly fine even if we created the class of fruit after we created the type of fruit which is pretty cool if you want to create a type out of something that doesn't exist just yet and finally this also works with generics quite well for example we might have something called my sequence which takes a generic type and that will equal sequence of this generic type and that's all it took to create this generic type so as you can see python 3.12 completely simplifies the process of creating type alyses in Python but that's actually all I wanted to cover in today's video do let me know what you think about this new syntax whether you are excited to use it or whether you prefer the old syntax I would love to hear about it in the comment section down below otherwise with that being said thanks for watching and I'll see you in the next video