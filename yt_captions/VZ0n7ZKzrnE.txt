so I still have the stereotype in my head that PHP is just doooo garbage but I know it's changing and I know it's changing fast so let's check out what's new in PHP 8.3 and here's the best part is that the old code to the new code will also probably give you some good ideas as to what's happening in the last wild okay PHP is a major update of the PHP language then why isn't it not called PHP 9 why is it 8.3 if it's major it contains many new features such as explicit typing of class constants deep clone of read only properties and additions to the randomness functionality as always it always includes performance improvements bug fixes and general cleanup okay interface I uh we uh naively assume that PHP constants are always a string but now I can hit that as a string okay okay fatal error cannot do that not an error okay hey this is a positive move forward positive move forward I like this why would you want to deep clone readon properties that's a good question okay that that's a fair question why would you ever deep clone read only I don't know maybe there's more to the story that we don't understand all right Dynamic class constants fetch okay so we got a little bit of this V dump constants Fu class searchable contents okay hold on hold on hold on I don't I don't get this I don't get what's Happening Here Conant oh oh oh oh oh I don't know if I like that I don't know if I want to read code that does this you know what I mean maybe there's more to it that's nice maybe I'm being ignorant but whenever I see two colons that's that's like static access right right so that's like access to outside class I mean I know we can do it in JavaScript I'm not saying that javascript's good okay I get that we can just take a class and for each over some keys and see if they exist on a class okay I understand that uh no it's not it's dynamic dynamic static access okay it's class level access can I just can is is that a phrase I can say accessing things that appear on the class not on the instance is that fair new override attribute okay use PHP okay I don't know what these backslashes are but this person must be working on Windows that's my only possibility here all right final class my test extends test case protected log file do all this do all this nice tear down tear tear down tear down boy we're gonna tear it down we're gonna tear it down boy okay okay calm down um let's see the log file will never be removed because the method was mistyped oh nice ooh ooh this is nice uh F fatal tear down has override okay I can like that I do like this idea it's kind of rather an old idea I mean PHP is catching up to Java 1.4 I don't know if you really like want to brag about that one you know what I mean because I'm pretty sure Java 1.4 had this I know it had it in 1.5 hands down used it all the time but 1.4 maybe 1.3 but it prevents you from breaking stuff so love it absolutely good stuff okay deep cloning okay I want to know this what is this why would you deep clone cuz I do like that I do like what someone said why would you deep clone read only stuff because shouldn't you just pass references around at that point you know no one can change anything it just is what it is let's we got a little class we got a little read only right here public function clone P this. PHP equals clone this. PHP PHP is what public PHP construct this bad boy okay so it's some it's it's this class all right readon properties may now be modified once within the magic clone method to enable deep cloning of readon properties I mean modified once so does that mean cloned can't be re like set i'm I I'm a little bit confused as to this line right here like what's what is happening here what am I what am I missing because it said because it says read readon properties may be let's he may be modified once within the magic clone method okay but this is not in the magic clone method right this is outside the magic clone method right here I know clone calls it right here which I get that it it calls this underlying clone function okay it provides obviously this becomes it must clone the magic clone method must instantiate a new object no I actually don't get this at all I don't get it at all I'm not sure what's happening here okay I I don't think I get this uh the food class is readon so why so so isn't PHP readon then oh I think I see it oh I okay so this is a huge distraction right here okay this is a huge distraction I see I see I see I see this function right here cannot be modified that's why we're getting this error therefore in this one we're able to do it therefore we're able to exercise this upcoming line which is we are now using PHP 8.3 I see I see I see I see okay I get it I get it I get it I get it I get it I get it I get it so you get one chance a readon class you get a chance to alter some of its properties on a clone I'm not exactly sure why you would do this can we agree to that for me that's hard to understand wh why this would exist but I can total I I just don't understand why okay that's it new J Jason validate okay cool okay okay cool cool cool cool all right let's see Jason validates string string bull decode last Jason air okay V dump Jason validate true V dump Jason validate true Json validate allows you to uh check if the string is syntactically valid Json while be more efficient than Json decode nice nice nice that's actually really nice that's a that's a great feature right because checking to see if something's a Json string is significantly cheaper than attempting to De decode a Jon you know what I mean no need Json if you use hmx this is a fact unless if of course you have other servers giving you Json then you're totally screwed uh new randomizer get bites from string okay oh yeah you just get random bites from a string this just grabs random thing you can do this now you can just go randomizer I really don't understand these slashes is this a thing in PHP these slashes I have clearly not been in PHP for a long ass time to not realize that there's slashes okay it's namespace I understand that it's a names space but what why why why did they choose that why did they choose that I don't know why why okay so they have this new randomizer okay that's cool you know how many times I've written this exact line of code you want want to know how many times I've written that line of code a lot of times okay A lot of times I've written this line of code a lot of times the amount of time really you zero times you're telling me you've never jumped over to some code I'm in Lua apparently and had some sort of function like uh uh you know uh Rando list right and you take in a list item I don't know how to do a random number is it is it math. random random okay can I just do that yeah and have you ever not done this return uh list math. floor math. random. uh list length like you're telling me you've never done where am I yeah this thing and then you build like a string from it you know how many times I've written this this thing a countless number of times countless number of times infinity times that's how we generate passwords at nice okay well whatever uh anyways randomizer get float and get uh next float oh interesting uh returns a random float between Min and Max both including okay this algorithm is biased for specific inputs and may return values outside the given range what it's what I don't even know what that means uh anyways there we go uh let's see uh CH uh chance for True uh might return and an upper bound Okay small bits what what does that even mean I'm not even sure what that even means randomizer get randomizer boom get it got it looks good next next float okay uh userland they think they're operating uh system I know random stuff is uh hard it is hard random stuff is super hard command line multiple files all right command line lter supports multiple fires nice nice I like it nice nice random is fake yeah Dev Dev random yeah it's fake this is great this is fantastic I am happy that PHP in some sense are catching up to Modern programming languages of of 2015 like this is good I mean I'm seeing I'm seeing 2004 stuff coming in I'm seeing 2015 stuff coming in also innovating innovating right here I like it I like this Innovation okay this is good new classes deprecation of uh and backwards compatibility breaks interesting they're Brave they break stuff I didn't realize PHP broke backwards okay let's go calling get class and get parent class without arguments are deprecated why would you do that why would you call get class oh do you do it inside of a class and just knows it does a lot okay nice anyways well well done PHP 8.3 you deserve all of these little fire firecracker effects creating here I appreciate that I I don't know PHP is kind of nice I could I could use PHP like honestly if I had to use PHP it wouldn't it wouldn't be a gam stopper for me I could just use it I could just do it I feel like I could just just do it you know what I mean like I could get there if someone's like hey you need to build this in laravel I think I could read the docs and you know like I wouldn't I wouldn't be stoked to do it but I wouldn't be unhappy you know there's worse things you can build in absolutely I mean have you have you built with react got him got him so good the name is the PHP aen