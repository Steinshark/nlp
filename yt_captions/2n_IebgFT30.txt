if i had to learn from scratch how to code 
again this is some of the tips that i would   use to do so things that i wish i knew when i 
was first learning how to code before we get   into it though make sure to hit that subscribe 
button for more tech and coding related videos   shout out to some of these subscribers 
here thank you for your comments questions   feedback you know i love you all so 
much okay let's just get right into it i remember when i was first learning how to code 
one of the biggest things that i kept on running   into was there is so much to learn i felt like it 
was never ending all the new things that i had to   learn tech is huge and it's changing so quickly 
the thought of being able to catch up to it or   to be ahead of it seemed impossible every time 
i felt like i was getting ahead on something or   learning a new framework it would be the next 
framework would come out that's more popular   or changes to the framework would happen and it 
just made it feel like i would never catch up   one of my biggest tips or pieces of advice 
if i was to learn code all over again or   start from scratch would be to not obsess over 
what framework or programming language to learn   now i know this might seem kind 
of controversial in the sense of   well tiff i need to know which one to choose 
to in order to get a job which one is in demand   you're already thinking too much at the end of 
the day pick a very popular programming language   or framework to learn and even if the jobs that 
you're looking for require a different language   or framework they're not going to completely mix 
you out of the candidate or process when they are   looking to hire just because you don't know that 
specific language trust me as someone who has been   on the hiring side as well if someone knows python 
and we are hiring for a javascript developer we're   not going to completely write off the person 
who knows python not at all we know if you can   learn one programming language you can easily 
pick up another and same goes with frameworks pick a programming language and just stick 
to it that's my biggest piece of advice don't   just start learning something and then switch to 
another programming language or another framework   before you have really mastered the first one and 
that brings me to my second tip which is ask for   help i feel like especially as beginners way way 
too often we put off asking for help in fear of   looking silly or stupid that we won't that's this 
is something that we should know the answer to   when in reality no one is expecting you to 
have it all figured out when you are learning   something new actually let me rephrase that no 
one is expecting you to have it all figured out   ever and if they are clearly they have their 
expectations completely out of line and because   it's so unrealistic because tech is changing so 
quickly so often i would put up asking questions   out of fear of looking silly and it would really 
slow down my growth and this is something that   it's a fine line when to know if you were asking 
too many questions if you didn't spend enough time   researching it like how do you know when is the 
right time to ask a question which i think is   a skill in itself especially when it comes to 
tech roles because did i do enough googling did   i google the right things should i ask this person 
a question and i'll give you a little insight as   to my process when i am asking questions what i 
first do if i'm stuck on something is of course   google it break down the question and google it 
actually no before i google it i will actually   break down the question and it sounds so silly 
but oftentimes i find if i actually speak to   a fake rubber ducky then it will actually really 
help me understand what is the problem i am trying   to solve it really highlights just how often i 
actually don't even know what problem i'm trying   to solve and i think that's a very common thing 
we think we know the problem we are trying to   solve but when we actually voice it out loud and 
say i am trying to solve this defect in the code   because it is causing this button to break or 
whatever it is when you actually step back and   reassess why you are trying to solve this problem 
and what the problem is it gives you a much   clearer understanding as to what to do next and 
what i mean by that is even what to google next   from there i will start googling my heart out 
going to stack overflow trying different terms   different ways i'm googling googling google i feel 
like i'm saying googling a lot but googling is   really an art and it's something that the more you 
do it the more you will get better at it and get   more comfortable with it so you just need to start 
if i kind of give myself a specific amount of time   to google something and after that period of time 
if i'm still stuck then i will go to help and or   ask for help and when i ask for help i do it very 
specifically i go to the senior person that i   am supposed to ask questions to and i really break 
down the question i have so this is the problem   i'm trying to solve this is what i have tried to 
do as far as googling or solutions implemented   and this is still the outcome i am having and 
when you really break down the problem that way   ask a question in a way that the senior person 
understands what the problem is what you have   googled and what you have tried it makes it 
much easier for them to a want to help you   and b have a clear understanding of what the 
problem is they're just getting you know notice   of this problem firsthand from you they're not 
they haven't spent days on it or a day on it   or hours on it like you have so you really need to 
break it down clearly for them also i really think   this makes you a better developer because it shows 
that you can communicate in a really efficient way   and that brings me to my third tip which 
is it sounds kind of silly but when i was   first learning how to code or when i started 
if i could start all over again i would tell   myself to be kind to myself i feel like when 
i was first learning how to code i was so   hard on myself i think it's because i wanted a 
job of course but i would put so much unrealistic   pressure on myself that hey tiff if you don't have 
this mastered by this point you are never going to   get a job you're never going to make money and it 
was just so stressful the amount of pressure i put   on myself so if anyone out there is learning 
how to code you're watching this video and   you're doing that as well by putting all that 
unnecessary pressure take a step back speak   to yourself how you would speak to your friends i 
really want to highlight that because we are often   so much harder on ourselves than we are on others 
or we speak to ourselves the way we would never   speak to anyone else and i really just wanted to 
include that point because it's really important i   think you know when you're learning how to code 
learning this new skill it's a whole new world   and it's easy to get caught up in i'm never 
going to learn it or i'm not smart enough   my tip for that is if you know millions of other 
people did it so can you and that really helped   carry me through as well as recognizing that so 
many people have learned to code before i'm not   unique and if they can do it why can't i and that 
really kind of helped boost my confidence there   my fourth tip on the list is to recognize it's 
impossible to know everything we kind of touched   on this earlier and i think it's so important 
to really highlight as its own tip because   when you're first entering the tech industry it 
feels like you need to know everything i need   to know and be an expert on this or be an expert 
on that and in reality no you don't you need to   know a little about a lot of things now i'm not 
talking about being a generalist here although   you can go that route too but you know even if 
you want to be a specialist meaning really focus   in or hone in on one technology having insight 
and knowledge as to other technologies out there   now you don't need to spend time on them or 
anything like that but understanding as to when   certain technologies are used for certain 
things i think will really make you a better   developer or any role in tech really 
by understanding technology as a whole   and my last tip is when i was starting to 
code and i kind of attached things earlier   but stop jumping around and trying to be an 
expert so quickly focus on the fundamentals   i was so excited when i first started to 
learn how to code that rather than learning   really really the basics and having a strong 
understanding of those i quickly went to react   i went to view i went to express note so i was 
so excited i was like oh whatever i'll learn   the basics later but in turn it really slowed 
down my growth later in my coding career because   fine i knew all these really cool frameworks 
or languages but i didn't really understand   why we use them the fundamentals of them how they 
worked kind of what was going on behind the scenes   and that made it harder to debug and to find or 
implement solutions that were were best for the   code base so if you are learning how to code once 
again make sure you really go back to the basics   and have an understanding of the fundamentals okay 
those are my five tips that if i was to start over   start from scratch learning how to code these are 
the things that i would really implement or try to   implement it's easy to say that you would but when 
you're in those shoes or in those that position of   learning something so new it's really easy to 
feel like um to have that sense of overwhelming   or to feel like you're never going to get to where 
you want to be but really keep these tips in mind   because they will truly help you in your 
coding journey and get ahead a little   bit thank you all for watching this video i 
hope you found it very valuable and helpful   make sure to hit that subscribe button 
for more tech and coding related videos   give this video a thumbs up if you found 
it valuable and i will see you all soon