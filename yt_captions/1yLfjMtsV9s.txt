today I'm going to show you the easiest and most efficient way to create a Discord chatbot in Python so let's get started immediately with our python project file right now I'm running this on python 3.10 in pycharm and I recommend you do the same especially if you are a beginner otherwise if you have Visual Studio code or some other code editor it's going to be very similar but it's not going to be exactly the same but here we're going to go ahead and type in PIP install Discord in the terminal and make sure you are in the terminal and not in the python console once you've installed Discord you can verify that by typing import Discord and if you don't get any errors there it means we've successfully imported this chord now inside our Discord folder we want to go ahead and create two new python files and one's going to be used to handle the responses and the other one is just going to be the bot code itself so go ahead and create two new files here one that says responses and one that says bot now for a majority of this program we're going to be working in the bot section but it's good to have these three files so we have some order in our project now earlier in our main file we went ahead and imported this code but we do not need it here we actually need it in the bot section so go ahead and import this code and before we move on with writing code I'm going to go ahead and show you how we can set this up on the developer website so we can get the API key and we can actually authorize our bots in our chat so to do this you want to go ahead and open up your browser and you want to type in developer Discord and it should open the Discord developer portal and I already have a bot here called happy bot but I'm going to be showing you how we can create a new one of course so the very first thing you want to go ahead and do is click on new application and give this a name this is not going to be your bot name it's just a name for this bot in this developer portal so I'm going to call this project 777 and we have to agree to these terms and conditions and we will create the Bots now the first thing you can do inside here is give your Bot some information and this is what will appear in the server so go ahead and pick some icon for your Bots I'm going to pick Patrick Star as my idol I will just call him Mr P and here you can give your chatbot a description and this is what people will read when they are getting your bots so hello I'm a test exclamation mark and then go ahead and click on Save changes so now we have Mr P and his information enabled next you want to go ahead and click on the bot and here we want to go ahead and add the bot so we'll click yes I do and Mr P will be transferred here and you'll notice that we'll get this button here that says reset token and tokens can only be viewed once so we don't even have a token yet but we should click on this so we can get the token so we're going to reset the bot token and we're going to copy the token then we're going to go back to our python file and as a temporary spot we're just going to type in token and create a string and paste it inside there this is what's going to connect our program to the bot so it has to be the exact same key as the one you find on the Discord website now as of Summer 2022 you do need to go ahead and enable the intents if you want to receive messages or follow along with any of these features so what we really need here is the message content intent which allows us to read the message content of the messages from the users in the Discord chat so to do this we're just going to go ahead and toggle that and and with that being done we can save the changes next we're going to go to the oauth 2 section and create a URL generator and this is used to invite people to our bot and here we can just go ahead and tap on the Bots and we need to also decide which permissions we want to include and anyone who invites the Bots has to accept these permissions or has to choose which one of these permissions they want to accept for your Bot to actually work on their server so I'm just going to add all of these and of course make sure that if you give it administrator Powers you understand that it can delete your server so be careful with that and read messages view channels pick whatever you feel like you want your Bot to be able to do and then it's going to give you this link over here that is used to invite the bot to our server so once you have this link you can open a new tab paste it in your browser and we're going to have Mr P which can be added to our server of course you need to have a server already created on this quad to be able to add it to the server for me I have a server called my server so I'm just going to go ahead and tap on that and I'm going to click on continue and it's going to show me all of the permissions that this bot can have on the server and since I've created these I'm absolutely fine with them I already know my bot can't do anything at the moment so I'm just going to authorize this and I need to prove that I'm a human luckily there was no capture there and now if we go back to our server we're going to have a new person Mr P and right now it's offline because we haven't created the code for it but as soon as we create the code and run the program Mr P is going to be online and ready to answer messages so the next step is actually to write the code now I'm trying to make this as beginner friendly as possible because I know a lot of people who try to create Discord Bots don't have much experience with python so I'm going to do my best to explain everything as we go so you don't miss anything and so that you have your chatbot up and ready as soon as you're done with the tutorial so right now we have a token and keep in mind that this is in capital letters and in Python you need to know that it is extremely important whether you have token in uppercase or token in lowercase or token with random capitalized letters all of them mean different things so make sure every single detail of this tutorial is written exactly the same way with the exception being my API key of course that's going to be completely different for you now the first function we're going to create is called send message so it's going to be an asynchronous function and we just need to type in send message so what it's going to do is take a message and a user message and the user message is what the user writes in the chat so whatever the user writes is going to be inserted here and we're also going to check whether it is a private chat or a public chat because if the user types to the bot in private we want it to respond in private otherwise we wanted to respond in the current channel so here we'll go ahead and get started with our function and we want to insert this into a try and catch Block in case anything goes wrong so the first thing we're supposed to do inside here is create a response that we can return to the user as soon as they write something to the bot and this is where we will process the message so right now we're just going to have to go ahead and say needs to be implemented because we're going to switch to our responses.pi file and create the functionality for that and this is where we create the actual responses for the chatbot so go ahead and double on that and as soon as we do that we can go ahead and start creating some responses for our chatbot now keep in mind this is not a full chatbot tutorial this is how you can set up Discord with chat so if you want to learn more about creating a chat bot I'm going to leave a link to that in the description down below so you can make it much more powerful but for getting started with this chord I'm going to show you the extreme Basics so first we're going to go ahead and import random which is part of python and we're going to go ahead and get a response and the response is going to depend on what message the user enters which will be of type string and it's going to return a string now the processed message is going to equal message dot lower and the reason we use dot lower is because as I mentioned earlier python is a case sensitive language which means if the user says hello and we try to check that the user said hello it's not going to be able to understand that these are the same thing we need to make sure that hello is exactly hello for this to be the same thing even if the user says hello with a capital l here for some reason the program has no idea these are the same thing unless they're written exactly the same way so that's why we need to lower case the message and make sure that these two are going to be exactly the same so that's the processed message and just as I showed you in that example we're going to check if the process message is equal to hello then we can go ahead and return hey there so as you can see you can add whatever phrase you want to be inside here but you need to make sure that it's going to be exactly the same otherwise if the message is equal to roll then we can go ahead and return the string of a random number so Random dot random integer from one to six so it's going to return a simulated dice roll and finally if P message is equal to we'll do exclamation mark help then we can go ahead and return and I'm just going to copy and paste this in it's going to say this is a help message that you can modify and notice these accent marks I couldn't find how to do it on my keyboard but if you go online or you go on Discord you'll notice that if you add these accent marks they're going to make the message up here in a cool way in this chord and just to make it convenient I'll actually leave this in the description box down below so check that out if you want to copy these symbols or maybe you're smarter than me and you have better knowledge on your keyboard and you can just do it immediately that's up to you I'm just leaving I'll just leave it down there for convenience finally we're going to return a message in case the user didn't type any of these inputs because the bot can't handle everything unless you make millions of these of course so here we're going to write I didn't and we need to escape here so we can use the apostrophe I didn't understand what you wrote try typing exclamation mark help exclamation mark and as you can see this chatbot is extremely basic of course you can add many more phrases and many more responses but again you're going to have to watch a separate tutorial to see how to do this much more accurately so that your Bot can respond to plenty of things but for this example that's all we're going to do so we can now go to bot.pi and inside here we're going to go ahead and Implement what we were supposed to implement so inside here we now have to import the responses and here we can go ahead and type in responses dot getresponse for the message that we get from the user so user message then we need to go ahead and call await Dot message dot author dot send and inside here we're going to add the response if it is a private message otherwise we're going to have to go ahead and do something a bit different we're going to have to go ahead and send the message in the current Channel and inside here we're just going to add the response again so as you can see this sends it directly to the author if it is a private message otherwise it's going to send it to the current Channel I also we're going to go ahead and create an accept block which is going to accept this exception as e and in general if you are a python node you'll know that this is a bad practice there are plenty of Errors you want to catch but for this tutorial we're just going to add exception as e to make it as simple as possible so we're going to print the error and this will tell you exactly what happened in case this didn't work now we still have a bit more code to write and here we're going to create a function called run Discord but so this is going to be the entire bot that we need to run and we're going to grab this token from above and we're going to insert it inside here just to keep it a bit more clean and to keep it out of the global variable namespace now as I mentioned earlier this year they introduced new restrictions to Discord I believe for security reasons so now we need to go ahead and create intents so here we're going to type in Discord dot intense we're going to get the default intents and then we need to go ahead and say that we need intense Dot message content to be set to true because we want to be able to read that now we can go ahead and create the clients and it's going to be a Discord dot uppercase client and inside here we need to insert the intents which is going to be equal to the intense and finally we can get started with doing some cool stuff so here we're going to go ahead and type it at client dot event and it doesn't need that parentheses at the end we're going to go ahead and add async def on ready and this will trigger each time we run our code and the bot is actually ready to be used on the server so here we can go ahead and do something such as f so we can format the string and we can insert these curly brackets which allows us to add some variables we're going to say add client user is now running exclamation mark So this just tells us that the server is running now the function that we really care about is going to be the client dot events and inside here we're going to add the async def on message so this will handle all of the messages that come into our Discord server and how we respond to them and this will take a message now there's one very silly thing we need to do and that is make sure that the message dot author is not the client user and you might be wondering what exactly does that even mean and that's pretty much what you would call an infinite Loop the client user is the bot and if the client user creates a message it becomes the message author so if we don't include this it's going to infinitely respond to the same response that it gave and we don't really want that so we're just going to return out of this and ignore it then we can go ahead and get some primitive information such as the username that is being used at the moment so string message dot author so that's whoever is writing then we get the user message from them user message is going to equal the string of message dot contents and there's a huge chance this already returns a string but I just like to be safe and make sure it's a string anyway so that's why I convert it to a string and we're going to go ahead and get the current channel so string of the message dot Channel and again make sure that every detail that you're following along with is exactly the same as in this tutorial this also goes for indentation if you have something wrong such as this your program is not going to work it's not going to understand what you're doing so make sure that everything is in its correct position now for debugging this is what I usually like to do I like to create a print statement and it's going to be a formatted string that says username said the following and will create some double quotation marks and we're going to pass in a user message and we also want to show what channel that was written in so we're going to create some parentheses and insert the channel inside there now I promise that we're only about three minutes away from actually running the bots so let's go ahead and show the bot how to respond to people so here first we're going to go ahead and check if the user message at the index of 0 is equal to you can add any symbol here and this is just going to help the bot understand that the person wants to write in private to the chat so for this case I'm going to add a question mark and here we're going to get user message it's going to equal the user message and we need to slice this so we're going to add one and a colon which means it's going to remove this question mark from the user message and it's going to process the message as normal and to show you very briefly what that means pretend that the user wrote something such as help me please like that what this over here is going to do is say hey we're only going to read this part of the message here so it's going to remove the question mark and it's going to be able to process the message as normal because this can easily throw off your chatbot of course but anyway we still need that so that we can tell the Bots that we want to send a message in private so wait send message we're going to have to pass in the message and we're going to have to pass in the user message plus we're going to have to say is private is going to be equal to True else we're just going to do something super simple and return it in the current channel so send message it's going to be exactly the same thing message with the user message with is private set the false and the moment we've all been waiting for all we have to do now is run the bot so client dot run and we're going to insert the token and what I did here was a huge mistake so you don't want clients.1 token to be inside the client event because the program will never reach that client.run is going to create an infinite Loop and it needs to be in the main part of the function on the same indent as token so make sure it's not inside the on message but as soon as you have that done we can go ahead and import the Bots and I'm going to create this if name is equal to main check because it's very good practice in Python to have this to make sure you're running the code in the correct file and inside here we're just going to type in Bots dot run this codebot and as simple as that we can go ahead and run it and as you can see it's going to start debugging immediately and Mr P hashtag 1535 is now running now if we go to our Discord server we'll notice that we have Mr P there and as soon as we type in something such as hello Mr P is going to be more than happy to write to us and we can also say something such as Roll and Roll again and Mr P is going to continue giving us the response or we can go ahead and say help and as I mentioned earlier it's going to give us this really nicely formatted text that can add some helpful messages now as I was trying to explain earlier we can do something such as question mark hello and that's going to make you feel good because Mr P is going to go through the hassle to actually write to you in private and not only with that being done we can also write inside here and Mr P is going to continue to write to us so with that being done we've successfully created a chatbot on Discord now all that's left for you to do is to decide how you actually want to work with this what kind of responses you want to add to this what kind of functionality you want to add to this that's up to you and once again I'm going to leave a link in the description down below to how you can create a more accurate chatbot so that you can plug this in inside here and so that your Bots can have a lot more functionality inside the chat of your Discord server and finally you'll also be able to log the messages in the console so you'll be able to see how things actually happen but anyways guys with that being said that's actually all I wanted to cover in today's lesson do let me know what kind of Discord Bots you are creating I would love to hear them but as always with that being said thanks for watching I'll see you in the next video