we have left the cloud by dhh the man with very little opinions since it took us years to get into the cloud in the first place I originally imagined it would take us years to get out as well but all that work to containerize our applications and prepare them for the cloud actually turned out to make it relatively easy to exit and now after six months of effort it's done we're out the last application was brought home to our own Hardware on Wednesday Hallelujah wait they're running their own stuff is that what we're reading here like literally like in-house servers wouldn't it be excessively easy to DDOS something isn't that like part of the fun of not managing your own stuff is that you have cloudflare don't get ddosed okay uh in in those six months we brought home six Heritage services that we're no longer selling what is that what is a Heritage service but we have committed to supporting for existing customers and users until the end of the internet classic end of the internet uh base camp classic high-rise right board campfire backpack and ta-da list are all over a decade old but continue to continue to serve tens of thousands of people there's dozens of us and generate millions of dollars of Revenue okay that's pretty good but now we'll be spending far less to operate them and as a bonus to those users provide a considerably faster experience due to the powerful new hardware okay okay um you know it would also be better stop writing Ruby you know just throwing that just throwing that one out there that might that might just provide a dramatically faster experience as well but hey uh but the big move was hey this is an application that was born in the cloud we never run it on our own Hardware before and it and as a full featured email service it had a lot of moving Parts but the team pulled this off without a hitch by doing the move in several stages with different databases cache servers mail services and app instances moving independently over the course of a few weeks our stack for bringing home all these applications is entirely open source we use KVM to slice our new monster 192 thread Dell r7625s into isolated VMS then Docker to run the containerized applications and finally manage remote server containers belt with a K uh with mersk to to do zero downtime app deploys and Roblox the rollbacks the setup helped us Dodge the complexity of kubernetes and avoid uh any sort of Enterprise service contract entanglements ah I wonder how much they're spending I mean real talk I just have to think when I hear the term tens of thousands of users that's like 25 000 users okay because if you're above 50 you're gonna say 50 000 if you're above 100 you're gonna say hundreds of thousands so I'm thinking like 25 000 users okay and so then I'm thinking 25 000 users why isn't that off of like two Nano nodes and a database on the Node for like forty dollars a month what's going on here why do you have this machine what's this machine doing how are you using all of that for that many people like what the hell I don't I mean I guess to be real I don't know what campfire backpack tadao right board high-rise and base camp classic do okay I don't quite know uh but I would like to say that it does something that seems like it does a lot of things that it doesn't necessarily need to do okay bisco what the hell is it privacy but that's just their legacy users but that's just for their legacy I know it's for their legacy users teach I'm I'm on your team I'm just saying how does it take this much compute power to run some Legacy users what are they doing what is this thing doing what does campfire do that it requires this it just seems kind of wild to me that 25 000 people require that much uh the back of the napkin math is that we'll save 1.5 million per year what are you doing by owning our own Hardware rather than renting it from Amazon remember I mean you still you pay a different cost though the engineering is definitely different uh I guess it depends on how many engineering hours are used right uh and crucially we've been able to do this without changing the size of the operation team at all okay okay running our application I mean it would be better if you could downscale your operation team right your operation teams didn't need as many people then you'd really have a win here running our application is in the cloud in the cloud just never provided the promise promise productivity gains to do with any smaller of a team anyway I'm curious about this because there's a lot of questions because once you run your own stuff you also run to the next problem which is when you want to hire somebody they have to there's like a whole scale up thing right and the whole scale of thing is real you know uh and then you know there's going to be new tasks because right now your Hardware is fantastic you're running off a what appears to be a single machine uh at some point things start breaking and you start having to hire people and stuff goes wrong and you start getting ddosed and just [ __ ] hits the fan like that's real that's that's a real problem this is possible because of the way we operate our own Hardware actually isn't too dissimilar to how people use rental clouds like AWS we buy new hardware from Dell have it shipped directly to two data centers we use and ask the white glove service hands to uh at Deft to rack the new machines okay then we see the new IP addresses pop up online and immediately put them to work with KVM Docker and mersk okay I mean interesting uh interesting yeah hopefully they have a lot of you know backup and all that good stuff the main difference here is that the lag time between needing new services and seeing them online yes it is truly incredible that you can spin up a hundred powerful machines in the cloud in just a few minutes but you also pay dearly for this privilege and we just don't have an uh an unpredictable business as to Warrant the premium given how much money we're saving owning our own Hardware we can afford to dramatically over provision our server needs and then we uh then when we need more it will still only take a couple of weeks to show up it's it's funny they used a very hilarious term right here which is the word need typically the word need implies that you need it now and then the word a couple of weeks to show up I mean it's just kind of a funny phrase like we need it when do we need it in a couple of weeks uh I hope you're very good at being ahead of the schedule look at it this way we spent about a half million dollars buying two pallets of servers from Dell which are a combined 4 000 vcpus and a butt ass amount of gigabytes of RAM and a whole bunch of storage to our server capacity okay I mean that's a lot this Hardware is more than adequate to run all the Heritage Services we brought home yep together with hey and give our base camp operations our Hardware refresh it was less than a third the cost of what we predicted uh will be saving every year this Hardware will be amortizing over five years I mean I totally get this argument I I'm on this team in some sense that there is a lot of value you can I mean you're just not paying for someone else's infrastructure it's not like Amazon's easy it's not like you just press a button and your application works you still have to do all the infrastructuring and when you do all the infrastructuring it's not impossible to imagine that you've built it so that it's going to work without Amazon as well at this point but at the exact same time there's a lot of headaches I guess Deft makes it must make it a lot easier I don't know anything about Deft but okay that's it's I mean it's it's easy it sounds neat that they have like a in-between hosting Network right let's like host your own Hardware but you don't actually host your own hardware and hey we're hooked into the backbone I mean that's cool uh no wonder uh let's see no wonder that sharing our experience with the cloud exit has made a lot of companies think twice about the insane Cloud rental bills that are incurring every month our Collective Cloud budget last year was 3.2 million dollars and this was incredibly optimized with long service commitments scrupulous right sizing and monitoring you know they also use Ruby so again incredibly optimized and Ruby you know what I mean I mean can we at least can we at least agree to that like maybe it's not incredibly optimized maybe it's well optimized maybe it is incredibly optimized for Ruby totally by that argument uh just without any specification this seems kind of uh a H you know I don't even believe it the DB is the bottleneck well then if DB is the bottleneck also very interesting I wonder you know what are they doing with the replications why is DB the bottleneck very curious hey it was less than a third of the cause oh yeah we already read that blah blah blah blah our Collective Cloud budget was 3.2 million we're incredibly optimized blah blah blah blah there's a lot of companies paying many times what we did for even less benefit the potential savings are as large as the AWS quarterly results are staggering AWS generated over 5 billion in profits for Amazon in just 2022 Q4 yeah I mean that makes sense they offer a whole bunch of tools instant scaling and a whole bunch of benefits that are impossible to get doing it yourself right so I mean that's why they make money I get that uh as I've mentioned before I still think the cloud has a place for companies early enough in their life cycle that the spend is either immaterial or the risk that they won't be around in 24 months is high just be careful you don't over or look at those lavish Cloud credits as a gift it's a hook and if you tie yourself too much to their proprietary Management Services or serverless offerings you'll find it very difficult to escape once the bills start uh going to the Moon I actually I mean I agree with this take it's one of my big hesitancies about serverless which is that once you're serverless it can be tricky right you've built an application it's why I'm a bit hesitant about companies who build themselves like when you build a product around a company and what they have to what they have to offer there is danger in that now it depends on the product if like like if it's a very simple product that has a you know you have a one-dimensional product that's offering a single thing to users I could understand why you do that hey it's easy we know we're not going to overspend that's just that but as it grows things can be kind of tricky if you don't have a single like you know Netflix would be impossible to do that that's why a cloud agnostic options uh like open a fast exist yeah I can see that is Netflix serverless Netflix is not serverless um yeah this is obviously different than Theo stream uh Theo Theo has much different opinions than me but that's okay that's the good part about being on the Internet is that you should you should most certainly listen to a bunch of different people's opinions even though I think this guy is a dummy it doesn't matter I can read what he has to say and there are things that I can even agree with what he's saying I don't think is what he's saying is is bad I just think that it also can be very tricky and it's not something I think he does a great job right here like hey if you're if it's a new company maybe you shouldn't worry about that part because you haven't grown to the point where you can actually go and get uh you know enough Engineers to really consider this option you know what I mean and so all right I also think that there's a there are probably some companies that have such high variance in their loads that renting makes sense if you only need to plow Thrice a year love it it doesn't make sense to keep the barn uh unused for the remaining uh 363 days yes yes uh I mean I don't think that's how Barnes and uh plowing Works uh you know Real Talk uh plowing you don't like you don't get something to put in your barn after you plow okay plowing is what you do before you put the stuff then you grow the stuff and then you harvest the stuff and you put it in a barn and then it's this I mean a little different uh you know plowing is important but plowing is not quite the right term here uh but most established companies can amortize Capital Investments uh you plow The Bard baby you take that pound truck to plow town uh let's see but most established companies can amortize Capital Investments over a few years should seriously reconsider the cloud craze the benefits have vastly overstated the cloud is often just as complicated as running things yourself and is usually ridiculously more expensive that I cannot qualify either direction right so that's the thing I don't know I don't know what Deft is like when you're not a bigger company what is that like you know what what are you going to get out of using Deft how what's their uptime do they have potential risks um at least you know the risks going into say AWS versus something else right so you know I I don't know uh but I'm also not against what he is saying and when it does not and when does it not agreed I urge you to do your own math consider whether you have the services that really benefit from constantly scaling the capacity up and down then have a serious look at what your own cloud exit could look like we pulled out seven applications in six months you can do it too the tools are there they're free so don't just say in the cloud because of hype okay it's actually not the worst article I actually came into this thinking this is going to be a terrible article just because I think I have uh you know there's this whole thing about communication I just got done watching which is like your view of a person can change how you interact with them so imagine this situation that your wife whoever walks in and slams the door because a breeze came in and accidentally slammed a door for her now if you have a really positive view of that person you're gonna be like oh what happened but if you have a really negative view of the person you'll be like I you know like don't slam the door why are you slamming the door right like and so you can like hear and read what people say in your reaction to what they have to say completely like change how you feel about it even if it's true or false right uh so we're gonna give them we're going to give him a semi W I'll give them a semi w a half W okay I'm gonna give them a v we're giving them a v can we get a V's in the chat for for dhh we'll give him a v I'm not willing to give him a full W yet but we'll give him a v okay can we do a v can we do some V's in chat it's a half dub okay it's a half step I'll give you a half dub because I don't think you're wrong but I also am not sure if you're right the article is a Big W I'm not sure if it's a big W but it's certainly really good uh to I think to to think about these things I think people don't necessarily no V is not for victory it's for half a w okay that's why it's called W it stands for two v's duh and do you know in French if I'm not mistaken it's Dublin versus Vey Vey being um yeah if I'm not mistaken yes I actually did want to read this one as well right right I think there is a use case on uh for on-prem but 15K users doesn't seem like that yes I agree I I agree with this too right like what is the use case how big does your place have to be where where does it make sense I don't know you know what I mean co-location is hard as well yes very very true this is very very true uh yes yes and so that's another really good point which is um what happen if you need a bunch of different locations throughout the world you know it's very hard to self-host everywhere around the world very very hard the name is I'm not sure what the exact answer should be but you should be able to individually compare it for yourself and make sure that you have enough users and spend to be able to try out each thing's agenda