ladies and gentlemen welcome to one of many today's beginning of AOC or Advent of code a coding challenge that happens every year where you whether a beginner or an expert coder can learn something new now I am definitely the former of those two things but I like a challenge so to challenge myself even further than I normally do I'll be selecting the language every day to use an advent of code for from this wheel here if I complete the challenge in the first try I will get to choose what I replace that language with choosing a language probably that I already know if I don't get the challenge done on the first try chat will choose the language in a poll now I've just made that rule up on the spot I'm very likely going to regret that rule but anyway here we go chat so we have a couple couple options here we got you know the the basic ones we got like python we've got Js uh we got PHP floating around in there we got C C++ a few times rust go go a few times um we're we're using languages to begin with that I myself am fairly comfortable with but as things start to go a little Haywire uh chat May begin to choose languages that are are not very good maybe they'll get some some Visual Basic in there some visual CP and we'll see where it goes let's spin the wheel and see what we're going on AOC day one let's begin come on python C C++ dear God okay C++ so what are my thoughts on C++ it's a language that was meant to just be C with classes but has since gone a little overboard I think in what it's trying to do it's trying to now be like a rust clone um well uh okay ladies and gentlemen C++ AOC day one let's begin so a couple of things to think about here um I want to talk about the rules of AOC real quick you know I really think that AOC is a great place for anybody who has a lot or no or just any range of programming experience to learn about programming that being said there are some ethics that are associated with Advent of code first of all the fact that I'm even streaming right now is only allowed uh because the leaderboard that exists has filled up to 100 so every day when a challenge goes live uh there is a global leaderboard that is up to the 100 top scoring people so I will not be streaming until the leader board is popular ated that being said let's dive into the challenge for AOC day one I think step one is to make sure that I actually have GC g++ installed I did thank God okay that would have been really embarrassing it's like oh you're going to code in C++ cool you don't even have the compiler installed if you're not familiar with like what Adent of code is again it's a coding challenge but it's all story driven so typically every year Santa's elves have been caught in some kind of predicament and Advent of code is meant you know it's a story where we write code to help them progress in in their issues let's read the the story today for Advent of code day one day one tret something is wrong with the global snow production they've used stars to Mark the top 50 locations that are likely to be having problems you've been doing this long enough to know that to restore snow operations you'll need to check all 50 stars by December 25th collect the Stars by solving puzzles two puzzles will be made available on each day of the Advent calendar the second puzzle is unlocked when you complete the first you can solve the onear solution but then when you solve your onear solution it unlocks a two star solution and that gives you access to a maybe a an input to your program that's a little more complicated that accounts for more edge cases that a new programmer may not get but an experienced programmer may get so each puzzle grants one star and that one star unlocks two star solution you're trying to ask why they can't just use a weather machine not powerful enough they say and where they're sending you the sky they say and why your map looks mostly blank you sure ask a lot of questions they say and hang on did you just say the sky of course where do you think the snow comes from and this is where treuchet is probably uh coming into play when you realize that the elves are already loading you into a trebuchet please hold still we need to strap you in oh dear God okay as they're making the final adjustments they discover that their calibration document your puzzle input okay so again Advent of code right what they what they do typically is they give you some kind of text as your puzzle input and then your program has to do something to it and output the proper output and that's the solution to your problem so as they're making the final adjustments they discover that their calibration document your puzzle input has been amended by a very young elf who apparently was just excited to show off their art skills oh dear God okay so we are uh we're going into a truche being calibrated by a young elf wonderful the duly improved calibration document consists of lines of text each line originally contained a specific calibration value that the elves now need to recover on each line the calibration value can be found by combining the first digit and the last digit in that order to form a single two-digit number okay so 1 2 2 38 [Music] 25 7 okay we got to figure out how to count for that too oh it's 7 seven here okay so first and last are are always two okay so we just walk left to right easy in this example calibration values uh of these four lines are 1 2 3 8 1 577 y uh and adding these together produces 142 consider your entire calibration document what is the sum of all the calibration values okay let's do this real quick so this is pretty simple so the calibration values are going to be this puzzle input we're going to download this real quick boom go like that great so then we'll do we'll V A make file keep it simple real quick uh default g++ uh solution. C++ t o solution we'll run the solution I learned C++ in like 2010 so I'm probably using the wrong version of C+ well first of all let's get let's just get the the main prototype going in main int RC car star pointer arv um and then if RC not equals 2 we'll do God standard C out actually no there's standard print F now right standard print F the thing is I could do c standard IO but I don't want to use standard IO because then I'm just writing C and that like defeats it defeats the purpose so we'll do standard IO stuff for printing cuz I hate I  hate C out I think the C out op operators with the carrots and stuff yeah like Lucas is talking about it makes no sense to me I can't I can't stand it uh we'll do print F usage percent s and then we'll do file name otherwise dude I'm so bad at this language so the whole point is we have to create some sum right so unsigned is you went 32t a type in C++ yeah sum equals zero and don't forget so what we have to do is iterate over the file for every line Walk the Line left Walk the Line right cast those to an integer add them to the sum right so we'll say String Line while get line from input file I have to open it first uh input file my file is equal to rv1 good if not input file. is open print uh printf failed to open input file wonderful so what we're going to do right now is just test this real quick this is like basic did the file open type and then also input file. close be be good programmers close your files oh dear God there is so much wrong with this oh standard if streams standard string okay cool okay so we build it good solution boom we'll do input file okay so we run this and we get no no messages which means that it open the file perfect okay so we're good while get line from the input file into the line buff ER what we're going to do right now is just print F the line right uh what is it line. Seer perfect so this will print every line awesome so now we have a way that we can iteratively check every line in the code and then go walk left walk right get the digit and then there we go we're cooking with elf grease I think is what the kids would say we're cooking with so now we have to do is create a leftmost equals z now we're going to do is we're going to walk left we're going to walk right ooh okay so there's we can how can we do this in one swoop well let's do it in two swoops and see if we can figure out how to do it in one swoop because what we could do essentially have two passes where the first pass goes like this and hits the first digit and then the second pass goes like this and hits like the first digit from the right but then complexity wise we're doing like o of 2 N and there's got to be a way we can do this in O of n when we walk in a one pass we'll walk it until we hit the first digit that is the leftmost digit and then we'll keep counting digits until we get to the last one so yeah if when we hit leftmost left and rightmost are that digit and then when we keep going to the right yeah okay perfect this is we got this so so first of all if you notice from the input none of the digits are negative so this can be our placeholder for a notet value right we're doing this in one pass guys we're doing this in in one pass this is uh this is pretty good so first of all we're going to print the line and then we're going to do is we're going to say one pass O N I have to iterate over the line right uh well I is less than line. length uh I ++ if is digit um Stir of n we're just going to have it print percent C we'll do Stir of n line of i i n classic mixup so cool we iterate over the string for every line and we print every digit so here it's 9 8 6 here we find a four a four a five a seven and a seven wonderful so what we're going to do now when we enter the logic there is a digit if leftmost equal -1 meaning we haven't found the leftmost yet leftmost equals line of I and we're going to do a to I right this converts to an actual number and we're going to do rightmost equals a to I line of i as well rightmost equals a to I although I'm realizing now no this is fine go like this so that means we found both the digits we're going to print at the end of every line print f um percent D percent D is the digit it's going to be leftmost rightmost invalid conversion from allocator character to constant care pointer okay so we got to figure out how to convert this to C++ a to I is a a cism C++ is not happy with me so let's do we're just going to do it the simple way guys this is this is literally how you down convert a character to its ask you value ready boom get solution input so let's let's talk through this right make sure we have all of our good inputs here uh 49 99 8 88 6 66 47 47 4 4 4 56 56 u in 32t total is equal to left most * 10 plus rightmost and then sum plus equals total and then at the end of all this we print sum is equal to okay solution input less um go to the end okay so in theory I think my logic is sound my sum is 5333 4 I'm really trying to think through any edge cases here we go guys have code day one answer 5 2 three 4 woo got the right answer you are one gold star closer claps in chat everybody claps in chat what does that mean what does that mean t++ off the list and I'm going to replace it with I really want to do more rust so we're going to add uh rust here Boom Baby Rust it's going to be rust the easy one is part one most of the time and then part two is part two it's it's a harder version of the first problem so let's go check it out calculation isn't quite right it looks like some of the digits are actually spelled out with letters oh dear God okay oh my God z18 so does that mean that one is the left most and that eight is the rightmost so that'd be again I can't tell if this is like the C++ way to do it but I want to do it this way I got the first part okay hold on I got the first part done C++ guys I I don't feel bad doing it this way so what I'm going to do is we going to do type def an anonymous structure uh a lookup T basically a standard string stir and an in I lookup t g table is equal [Music] to do like standard stirring of one one I'm I'm literally messing up basic C syntax no way that compiles okay that's in chat so I'm effectively creating a lookup table and I'm going to iterate over the lookup table and compare the first value to the number so now I need to create a function to essentially compare this is making my algorithm so complicated though dude make a function effectively that says you 32t match that'll take a or in IAL z i less than 9 if lookup T of I doer. compare if not uh compare it to the slice turn lookup T of i.n otherwise return negative 1 right so we're walking the lookup table we're comparing the slice to every string it's going to make us the algorithm so slow though but I don't think I care honestly good again we're just testing right where's my function yeah it's not look up T it's G table ah so got a stir match five beautiful three so this should have been left most oh oh oh it's it's not doing a full stir compare I mean it is doing a full stir compare but it has to do a stir end compare so bro okay no no no no no no no I'm not dealing with this we're we're going to do if not stir and compare gtable of I doer. Seer to gtable uh no no no slice. seaster and the length is gtable of I doer. length I ain't dealing I'm not dealing with that C++ nonsense  there we go okay we're finally getting some matches here dude holy okay so now we have to do is once this matches just literally copy this code but we're going to change the logic a little bit so left mostal 1 actually all that's going to happen in here so if it's not equal to negative 1 go like this go like that boom cool um and it's not going to be this it's going to be match them 49 perfect 8 nine perfect okay I think we're good ladies and gents drum roll in chat we get a drum roll everyone do a little bit of this at your house wherever you're at maybe you're on the toilet I don't know um here we go no way it's done I got it woo let's go anticlimactic clap chat yes first day AOC randomly selected by my wheel back here C++ at the beginning the solution to the first part was definitely C++ towards the end here I was getting a little stressed I was getting a little sweaty I may have implemented a SE like solution where I create what's most likely a c style lookup table and then I do definitely a CA style skare compare this is what we're doing for the next 25 days I'm getting up at 5: in the morning I'm going to get on that wheel I'm going spin it we're going to choose a language I got a lot of options here we got rust we got go we got Zig we got Nim we got Odin a lot of these languages that I've coded in but have little experience in if I get it wrong in the first try chat gets to erase that board and put on something a little more spicy maybe it's Cobalt maybe it's brain maybe it's Elixir but if you enjoyed this video go watch me solve day two in the next video and I'll see you guys there take care