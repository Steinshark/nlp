mastering full stack development is still the fastest way for any average person to break into the tech industry today but as we are all aware the tech Market is not very easy right now which means that the days of Simply learning HTML CSS and JavaScript and Landing 100K job without a degree are over and there's still way too much BS advice that doesn't recognize this reality but there is still hope it's simply the case that what it means to become a web developer worthy of getting a job in this market is different to what it was before so in this video I'm going to give you the fastest updated path to learn web development from zero including all the topics that you actually need to learn today and how to do it as fast as possible in 2024 and Beyond so that you can still land a job and stand out in this crowded Market even if you're self-taught and even if you don't have any previous experience but before we can get into that as well as the way that you can actually do this much faster than you might think like in as little as 3 to 6 months even today we do need to talk about why specifically web development is what you should choose all right so let's start with the basics which is why why do we want to learn web development over different types of development like iOS development or developing the software for microphones or something like that well the reason is is that for you if you want to get a job as fast as possible what we want is ideally best returns AKA highest salaries and most amount of jobs available for the lowest possible effort web development happens to be probably the easiest area of programming to get into as a beginner AKA to get into the industry you need to learn the least you just need to learn a couple of Basics which we'll talk about in a second but despite of that unlike many other things in life where usually it's like the more you learn the higher the returns and things like that with web development you also get the highest possible salaries and the most amount of jobs available despite the fact that it is the easiest to learn because of the fact that in the world in general there is simply a lot of demand for web things companies need websites startups need web apps websites need to be maintained for corporations like right now you're watching this video on youtube.com that is a website that has been built by web developers and you bet that youtube.com is making a lot of money which means that they have a lot of demand for web developers so then how do we get started with learning web development well this is obviously going to depend and there's going to be different options that are right for different budget levels what you can absolutely start with is simply by going on YouTube and following different web development tutorials that you will find or you could go and take on a full $10,000 coding boot camp that is in person that with like a full curriculum or something like that that is going to be right for someone but again what you're probably looking for is the best bang for buck and I believe the best bang for buck platform out there for learning programming is zero to Mastery now I've been a partner with zero to Mastery since like the beginning stages of my channel because zero Mastery was actually one of the platforms where I personally learned to code myself what I especially recommend is the full web development boot camp that essentially takes you through everything you need to learn from Front End development backend development devops and you can access the entire course as well as the 60 plus other courses that they have in their platform for a single subscription where the price is less than a cup of coffee per day but it doesn't even end there because on top of their courses they also have a full support Community with over 400,000 fellow students who you can learn alongside and keep you accountable they also have full project related courses where you literally build out a project as you go through the course and I'm actually developing my own project course for them as well so you'll have that to look forward to in the near future so if that sounds like a good deal to you you can get an even better deal by using my code friends 10 right there so go and sign up down below so that takes care of where do we start next we need to talk about what are the actual topics that you need to master to get enough knowledge in web development to actually get hired so let's talk about that so your first step will be to learn HTML CSS and JavaScript and you might be saying like oh didn't you say right at the start of the video that learning HTML CS in JavaScript isn't enough I did say that and it is not enough to learn these topics but you should still start with them because HTML CSS and JavaScript is still the foundation of web development trying to go and learning react or some like fancy Frameworks before you've even learned these Basics is sort of like trying to go and learn a calculus without learning the basics of addition and subtraction first so what are HTML CSS and JavaScript so let's think about for example this web page that you're viewing right now where you have this video playing so what are the different components that make up this web page well first of all we have the actual content so we have the text that you can see below this video you have the titles of the videos that you see on the right hand side with the suggested videos and that information has been defined using HTML and you can actually view the raw HTML of this very web page if you're on Google Chrome and you right click and then you go to the bottom and you click on inspect that will show you the raw HTML tree and if you click on the different components you'll be able to click down to for example where it actually defines the text that it goes into the description so that is HTML it defines the actual content on the page okay so what else do we see on this page well of course the web page is a lot more than just the raw text and the content when it's on the page we also care about what the page looks like we like the fact that my YouTube channel for example has the icon on it we like that the like button looks the way that it looks looks like the like button so the way that the web page looks like is defined using CSS which stands for cascading style sheets the final component that makes up this web page is any interactive elements that you'll see so for example whenever you click on the like button you're going to see this little animation show up which you can test right now by the way by clicking on it just for Illustrated purposes you know all of that interactivity within the page is taken care of by JavaScript code so these three pieces HTML C and JavaScript make up the basics of what make up a web page and this used to be what web development was but as the industry and as these technologies have devolved we have realized that simply writing raw HTML CSS and JavaScript can be quite pedantic so we have written something called Frameworks on top of these Technologies to make this whole process easier so let's talk about that all right so after you learned the basics of HTML CSS and JavaScript I want you to move on to Frameworks and this is where we are sort of dividing up our efforts into the back end and the front end of the web so front end is what we just learned about essentially and this is all the stuff that you actually see on the web page now there is actually another side of the web which is called the back end which is like The Logical sort of behind the scenes stuff that happens like you might be wondering for example where did you actually get this video file that you're watching right now when you logged into your YouTube account where is this data stored like all of these kind of things like when you pay for something where does the actual Payment Processing happen like all all of this is what's happening in the back end so somewhere out there in the world Google has some computers where they have specific programs called the server running that take care of all of these details now you could do all of this simply using a raw programming language like python or JavaScript or Java but to make this easier for us programmers somewhere out there in the world have developed something called backend Frameworks to essentially take care of a lot of this for us so when you're learning backend what you need to do is just choose one backend framework and this is going to depend on the programming language that you want to use in the back end you can use any language python Java JavaScript and all of them are going to have their own backend Frameworks that essentially do all of the same things there's like just Niche differences and some are better for some purposes and things like this really it doesn't matter just use one backend framework for example on zero to Mastery they have a course on no. JS which is a great choice because given that you have now learn JavaScript simply using the same language you can also develop in the back end using the nodejs JavaScript runtime and the Express framework on top of it and then on the front end side while you can build great websites simply using HTML CSS and JavaScript nowadays we don't really write raw HTML CSS and JavaScript anymore usually we will use a front end framework like for example react which is the most popular one that essentially combines HTML Cs and JavaScript in such a way that it's much easier to write much more like quicker to update the pages and things like this so in this step you'll want to learn a front end framework and a backend framework and I want you to try to move onto this step as fast as possible I know it's tempting to like try to learn all the details of JavaScript and like all the CSS syntax and all this all of that in my opinion is a complete waste of time we'll talk more in a second why that is but essentially all the syntax is something that you'll just build up as you go as soon as you understand sort of the basics and the ideas and the concepts Behind These you can just move on to learning these Frameworks and after you've learned the basic of one front end and backend framework we can get into the next step which is going to be devops so devops might sound like a scary word well actually it is kind of scary if you really go into the rabbit hole of devops but essentially it just talks about like all the infrastructure around making our website work so let's say you learn react and you learn Jango in the back end how do we connect the react front end to Django backend that's devops how do we connect our back end to a database where we for example want to store information about our users and things like this that is going to be Devo how do we maintain our code how do we update our code so you might have heard about tools like git or GitHub that is going to be devops really you want to learn just the basics around a couple of these links like git GitHub as well as how to deploy your website so that just essentially means how do you actually get the website that you code to show up somewhere on the web using a URL that anyone can navigate to Once you do that you now have all the skills to build a fully fledged website which means that your next step is going to just start building as fast as possible I think the real new way to learn full stack development as fast as possible is not to like obsess over all the details like learning every detail about every language and these Frameworks in fact that never really was the way anyway the way you learn this stuff fast is that you learn just the basics just enough to stop building and then you just stop building as uncomfortable as it sounds for you because the thing is that learning programming or any coding topic is almost like learning to ride a bike you're not going to learn to ride a bike by reading a book about learning to ride a bike sure you're going to have to learn the basics of like the mechanics of how to like pedal and like all these kind of things but the real way to learn to ride a bike is just to ride a bike as much as possible and that is the same thing with coding so what I want you to set for yourself as a challenge as soon as you've gone through like a course or whatever you're doing just pick up any project that you really want to build using code and just start going through it step by step where you figure out how to do each individual part as you go through the project that is what I found to be by far the best way to learn and that will also allow you to then have projects that you can put in your resume and actually show to potential employers to prove to them that you actually know how to code this is the way that we can stand out in this industry even above people who have degrees in things like this so now that we understand what we need to learn today to actually call ourselves full stack developers this might sound overwhelming to you like like all this all these things that I will have to learn but the thing is that as much as the stuff you have to learn to break in has increased learning these things has also become much easier but you need to know what you're doing and this is what gets us into how do you do this for and this is all about becoming what I call the AI driven developer we have trbt we have a GitHub Code Pilot we have all these AI tools that can Aid Us in writing a lot of code so whereas in the past if you wanted to do something in code like for example use the map function in JavaScript and you don't remember how to use it you would have had to go online you would have had to go on stack Overflow you would had to go to the documentation to like figure out how to use it and then you would have had to manually write out the code to use the map function to for example map an array in JavaScript into divs in react or something like that but now with the help of AI you no longer have to necessarily do that so let's say You're Building out a project and you don't know how to do something just go and ask AI how to do it there's no reason for you to obsess over like figuring out everything on your own from the documentation or something like that and this might be a controversial take there's going to be people who disagree with me but I just think it's much more efficient for you to just figure out how to build something as fast as possible using Ai and then after that go through and understand the code that it has written for you and then if something doesn't work or if you just have no idea what it has given to you you can go and learn that concept learn that topic enough for you to understand how to fix it and how it works this will allow you to stop generating these portfolio projects that I talked about so much faster than ever before so coding has changed it has changed a lot to me right now coding is less about actually understanding these like very detailed and individual coding topics like remembering the exact syntax of the map function or something like that it's a lot more about understanding concepts understanding the high level of what it means to connect a front end and a back end when do you want to use a timeout how do you use State Management if you focus on understanding the concepts and you don't obsess on the syntactical details and instead let AI take care of the Syntax for you whenever you don't remember it you can start generating a lot of really high level projects very very quickly and that is the way that you will learn much faster essentially Outsourcing part of the learning that you would have had to do manually before into AI as I said before if you want to learn any of these topics I recommend you go down to zero to Mastery they have individual courses for each of these if you want go and specialize in any of these particular areas so go check them out and remember that as much as you might feel like this is overwhelming and like you can't do this if I was able to do this if so many other people were able to do this you can do it too it's just about doing the boring and uncomfortable work of building out these projects and using these topics as much as possible and if you just do that and if you just don't quit you will be able to do it and if you don't believe in yourself like I freaking believe in you remember that with that thank thank you for watching and I'll see you in the next one bye-bye