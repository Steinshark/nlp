all right people how to never get a job all right because I know a lot of you are always asking me hey how do I get a job well guess what let's work on how to never get a job and then we can go backwards from there okay so number one so you have the coding skill you are really good at it and you want to get a job you have to improve your let's see you say you want to improve your skills and become a better programmer but your actions tell me otherwise and your actions always speak louder than words this article is coming out the gates and it is hot all right I I'm loving this okay I'm loving this right off the rip this is gonna be super exciting here we go as we enter a more complex Financial environment and companies are laying a lot of people off it has never been easier to lose your job or be unable to get a new one in this article I want to present to you a step-by-step approach to guarantee that you won't get a new job let's go let's go oh yeah the article is assuming you're absolutely right the article is assuming assuming you're you're a piece okay and guess what maybe I agree with them maybe I also think the same thing about you okay all right first off nice wallet jerk what's that thing uh let's see always stick to your current tools message for the typescriptors message for the typescriptors always stick to your current tools be overconfident in your skills you know enough you have learned jQuery in 2017 that's great it gets the job done and maybe you're even able to make a few portfolio websites back then why would you waste your time learning new technologies if tool you already know works just fine sure it creates less maintainable code in the end actually unsure about that argument with jQuery I don't know if you've been in large react projects okay oh no trust us trust us this is maintainable Code by the way every two years react will change its mind and completely deprecate everything you've written forever and ever and ever and ever and trust us it's actually good after did not create a Twitter movement don't worry um sure it creates less maintainable code in the end is isn't it as modular and doesn't fit the architecture more complex modern applications but it works also nice period also it's not like the other tools uh like react or if you don't have their own problems and why would you add problems to your life hell yeah girl um you should learn obviously some sort of top-down rendering type system like react or any of those because it's good to understand kind of how the UI works and then you pick a real proper Library like solid.js or something like that don't switch up paradigms you're a front-end developer at heart that's right you pixel Miner whoopsies I just pressed check mark I don't I what wait what the heck what did I just press I hate these sites where when you highlight something little bubbles pop up you know I'm reading okay I don't need your bubbles I don't need your bubbles I don't need your bubbles in my business okay don't worry the recessional and chat Jeopardy will shut down and your skills in designing beautiful browser boxes will stay relevant forever love it don't look into other aspects of programming like back end or devops or security you don't need that extra work time that you could instead spend on the latest Netflix series okay hey you know what stream Berry does produce some good stuff okay okay I'm just saying I'm not talking bad about some of the stream Berry stuff and hey the witcher's about to come out okay I'm just saying like you can spend some time on it you know what I mean just like not all the time okay uh I really wait for a job offers to come to you let's admit it applying to jobs is hard dude with what dude nothing is okay so real talk about applying to jobs there is nothing more inferior why where's my bubble okay now I highlight and there's okay there's the bubble um no bubble bubble no bubble bubble I found a bug I should be a QA give me a job whatever website this is um let's admit it applying to jobs is hard you need to maintain an always updating resume search for companies go through interviews and probably get rejected by some of them my guess is that it does not bubble for complete senses nope my guess is that it doesn't bubble for anything that starts at the first character nope and it bubbles again damn it I've been had wait what happened if you start on a period damn it okay I have no idea how I how I had that for a moment anyways all this stress why bother applying uh for jobs when you can just sit back relax and wait for the offers to come to you I recommend you avoid all job search websites and don't bother networking keep irrational hope that off job offer uh falls into your lap without any effort on your part so this is actually extremely good advice which is when you are looking for a job networking is huge most your jobs are going to probably come from you knowing somebody else like knowing somebody being able to interact with somebody being able to prove to somebody you're a competent coder is just an amazing experience to be able to uh get people to like uh you know get you a job it's like it's it's really really important so I would highly recommend networking in the rare case that a job offer does come to you in some miraculous way um it shouldn't be miraculous it's important to keep this one crucial step in mind whether it's during the technical interview or the take-home task if you ever feel stuck give up okay so a big thing about tech interviews is that you have to be able to stay focused you have to like I always every single time I get asked any question in a tech interview I completely and absolutely go I don't know the answer I don't know what at all I don't know how to approach any further and I have to like take a step back and go okay hold on whoa whoa I actually do know the answer let's just step through what I know okay what do I know about data structures what does linked list arrays trees crafts okay now that I know those things let's take the next step what does this problem look like what can I draw out of this problem how can I you know go from point A to point B and you have to kind of take these steps slowly and honestly it gets really easy to solve a lot of these problems I have virtually never practiced a I think I've probably done a total of maybe 20 leak code uh questions in my entire lifetime and the reason why I can successfully do interviews is because I just know data structures and algorithms well and you can just apply that to almost every single problem you're going to uh interact with um it just makes life a lot easier if you go that route and so whenever you give it you get stuck just taking a step back and walk through what you know is huge right it's not like they're going to be uh it's not like they are paying you for it anyways the actual job was probably going to be too low and uh too low make up any other excuses you find fitting and then let's say and just get back to your own Super interesting stress-free life this opportunity this opportunity came from nowhere so probably a lot more will come it's true uh so I I like this I love this piece of advice uh as long as you can apply that that the giving up part I think that's the hardest does that hear anyone here does anyone in here kind of like do you struggle in the technical interview press one in the chat if you struggle with the technical interview all right how about this one let's see I don't know I've only done one in my life how about how about this one let's let's invert it 69 in the chat if you don't struggle with technical interviews okay so there is there's definitely a lot of non-strugglers as well okay so so it's kind of it's kind of both so here's the real question okay so just so just a real question it's this can be a two-part question out of all the people that have pressed one how many of you have practiced tons of lead code questions how many is tons more than 50. so there are a lot of zeros in here which is a bit surprising which is kind of interesting how about this one out of all the people that struggle type one in the chat right now if you have a strong grasp on data structures and algorithms you should struggle a bit no you shouldn't there's no should there's no there's absolutely no should okay interesting some zeros and point fives some question marks I just find it interesting because personally strong grasp you know uh you can do a you can do a linked list stack queue uh you can build a binary tree General tree you can def first breath first search compared to Binary trees do dijkstra's algorithm do a couple sorting algorithms like you understand how to do a binary search is a pretty simple thing uh a heap you should know what a heap is uh let's see I had a great piece of advice for my mother-in-law that the biggest issue with the current education system is that it teaches people patterns uh to memorize rather than understanding the actual process yeah that's pretty good you should be able to assert dominance in an interview and just write it in Rust I love that part I know but real talk like I don't I don't think struggling in an interview is a requirement I think the thing is is that clear communication is the requirement so if you understand the problem and you know how to solve it you like the thing that the interview is looking for the is that they want to know that you can hear what they say conceptualize it turn it into a step-by-step Pro like answer and be like here's what you said here is how I'd answer it here's what the complete solution would look like and I'm going to take all these ideas upstairs and I'm going to turn it into code that you can understand right like that's really what I like to look for if you can do that without like any hesitation I am shocked now most people struggle in some way and that's totally fine and a big thing is can you recover from struggling that's like also a big thing so me as the interviewer I'm going to be really there trying to help you yeah big companies test DP sometimes I know but those are so stupid honestly like when they're like give us the maximum subarray you're just like gosh dang it I don't remember how it works let's just try to play around with it you're like maximum Subway okay how could it possibly work well if at any point it goes uh zero or negative then that means the that is the maximum part is within there okay right I hate I hate that any good DSA course funny you should say that I have a free one on front end Masters right here free forever um I was a memorized only student and now I struggle visualizing complex recursive functions yeah and dynamic programming definitely not this uh just real talk like knowing those incredible what you can open the doors with I don't think Lee code is a great way to become prepared for interviews I just don't I truly truly don't think it's good I think understanding fundamentally the basic algorithms are going to get you ninety percent of the way and just make you more useful in actual programming you know what no one cares that you can solve this the cityscape program or the cityscape problem no one cares no one cares I'm sorry I'm sorry no one cares right no one cares about your twosome right Lyft lead code is fun knock yourself out great way to train right it's a great way to apply what you know to continuously practice fine enjoy it I like problem solving I kind of like doing problem solving stuff I was I I got regionals in ACM programming competition I was kind of into it right like I used to do it a lot in college I was totally into ACM programming competitions I get it you know lead code is necessary if you want to be in defense uh no it's not I'm in Fang I got into Fang before there was such thing as Lee code I got into a second Fang without ever doing a thing of Lee code I've been I've had offers in three things without ever doing Lee code Netflix by the way you don't have to do it lucky guy maybe maybe it was luck but I personally like to think that it was uh a decade of applying myself extremely hard and having an opportunity to show my skills that's me personally maybe I'm Different uh never challenge yourself with coding projects programming is a job it isn't a hobby use your free time for a stuff that's less laborious labor intensive play video games watch TV and daydream about the future you're gonna code a lot in your future career anyway so why bother now don't even try to contribute to open source Foss is a scam you you shouldn't code for other people for free exactly because GitHub co-pilot's gonna steal all your codes anyways just use what the open source Community creates and never give back 100 stay on the surface don't bother with the intricacies of the tools you are using why would you learn how react Works under the hood or how TCP handshakes work who cares your language server communicates with your editor I actually really love this paragraph right here this is this might be my favorite piece of advice of all time the fact that most people don't even realize like I mean how many times so one thing that just makes me understand you've never looked into the tools is when people be like oh yeah well you know uh vs vs code autocomplete blah blah blah and you're like well actually it's a language server and that's available everywhere just saying just saying what you're saying is not quite right I don't know if you know this uh into IntelliJ autocomplete is greater than LSP now now IntelliJ on the other hand actually built their own thing right that's different uh it's just it's different let's see uh vs code python autocomplete is proprietary now is it act wait did it went proprietary now I thought pylance was always proprietary unless you're talking about C plus plus and telesense or a pylons well yeah a jet brains has c-line which has a lot of their own stuff totally okay with that all right totally okay uh who the hell spends their entire life no one spends their entire life studying for a sixty thousand dollar job but you got to get a sixty thousand dollar job okay buddy okay because here's the deal when you do nothing and the other million people do stuff all the time guess who ain't getting that you know what I mean uh that's just how it works uh trade all these like black boxes and never look deeply into them even if it breaks it's not your problem it's the problem the person who made it in the first place going back to the first point stick to the tools you know including your editor Vim or emacs or these other extend uh extensible customizable editors are nerdy waste of time you're better than that this is actually a very common view ignore the benefits of content creation on the topic of never giving back you shouldn't educate others by the way this is not an educational Channel as I've been accused of okay uh you are you are good at what you do so you should guard your secrets so why waste your time creating content like blog posts tutorials or even tweets don't bother contributing to the community or building your personal brand ignore the fact that content creation can lead to professional opportunities and help establish your expertise in the industry remember staying in your comfort zone and never sharing your knowledge is the secret to staying ahead of the Curve hell yeah this is a Lifestyle Channel it's slowly going to become my workout channel here soon avoid professional development opportunities by this time you're almost guaranteed by the way one little bit on this one even if you don't ever create content try building a course Real Talk try building a course it's actually incredible the amount of things you will learn on a topic you already know a lot about do you know what I mean hey Prime how much do I have to pay for an interview for you here's the deal Alex you're asking which means it's too expensive it's crazy how much you will learn just writing through everything because that means you have to take what you kind of know in nebulous form and defend it into concrete form which is shocking how much you've assumed you know versus how much you actually know by the way it is five dollars a month even if you get twitch Prime that's for free except for the 80 or 120 or whatever it is cost you a month the year you're paying use that uh let's say avoid professional development opportunities by this time you're almost guaranteed to not get a job wait you mean you're guaranteed to get a job but just to put the nail in the coffin you should avoid all professional development opportunities this includes networking making friends who are also programmers and participating in hackathons you should also ignore any programming content on the internet like courses for free uh for courses or free YouTube videos don't bother participating in anything that could potentially enhance your skills knowledge or brand image uh at the end of the article I want to remind you that life is short you're not always going to have tomorrow enjoy today and make sure you spend as much time possible not working get out of bed late in the day never exercise scroll social media this is actually super good uh you know this last one I personally find that when I scroll Twitter I actually get anxiety every single time I can actually like feel it boiling up when I make it past like the first two pages I can feel anxiety it's crazy it makes me like sick I don't want to use it so I like I stay away from scrolling I don't read Twitter almost anymore it's just like I I literally only post at this point it's too scary it's too much it's too much Doom scrolling YouTube shorts I also stay away from me as shorts for this exact same reason I I feel like it would suck my time away um thank you Bill Burr I like the Bill Burr compliment uh I'll also accept Steve Carell even though you did spell his name like a crazy person hey yeah yeah yeah that's not how his last name's uh you know typed uh looking uh like looking at a car crash I don't want to see it but I can't look away lately I've had uh see I have had oh camel manual on my phone in an open Tab and I'm just reading the whole thing in downtime interesting I like it I like it it's not a bad idea I was doing that with zig right I think it's pretty good uh me personally I can't recommend any of the freak the free things I think front end Masters personally again is my favorite place to go here's my courses which none of them are actually front end but there's tons of front-end stuff on it and so I think that they're one of the best uh solution to the npm mess um oh I don't I don't think that well also one is blue hair there is no blue hair stop asking for the blue hair the name is the blue herogen