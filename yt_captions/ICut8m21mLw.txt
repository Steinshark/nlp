now I know what you guys are thinking and I'm thinking the same thing why am I wearing the same hoodie in every single video and the answer to that is that this is my recording hoodie now I only wear it when I'm recording but now that we've gone ahead and gotten that out of the way we can actually talk about something even more serious and this has to do with optimizing code in Python and I thought it would be a good subject to talk about because a majority of the time when I'm looking at stack Overflow answers and reading comments in videos on YouTube I see a lot of people pointing out that you should not even bother with optimizing code in Python you should rather use a language such as Java or C plus or something that is much faster because it's useless to do this kind of thing in Python and I have really big mixed feelings about that statement I mean a lot of us learned that I forgot where that quote actually came from so I'm gonna have to do a quick search pretty much optimization the root of all evil and I'm sure that you are familiar with that famous quote that premature optimization is the root of all evil and that's just to quote Donald Knute or this other man which honestly I don't know which one said it first but there's also Tony Hawa and maybe you can tell me in the comments section below how they were actually supposed to be pronounced but but these are some very popular quotes in programming and they have a lot of Truth to them essentially you shouldn't be trying to optimize your code immediately as you start programming because it's going to stop you from doing anything productive you're probably not ever going to even have a product if all you do is concentrate on optimizing these small details now optimizing Is Not a Bad Thing per se and I personally really like to optimize the small details in Python and that doesn't mean I'm going out of my way to optimize them but I just like to know the tricks that make sure that my scripts get executed in a relatively fast fashion in Python and I'm not going for the fastest execution time ever I usually just go for what is acceptably fast in Python because if you're going for the fastest time ever you probably will be wasting your time in Python there's just so many other low-level languages that can help you achieve that speed in a much easier way than Python and it's also important I mentioned that you do not sacrifice the readability in Python the whole purpose of us downloading python was for its Simplicity and its interoperability with many platforms I mean the Python language was built around legibility and simplicity if you really want to optimize Python and you end up making it unreadable you might as well go for a language like C because I mean if it's going to be unreadable anyway you're using python for the wrong reasons but moving on to the argument that you shouldn't try to optimize python code at all and I really hate reading comments online that say you shouldn't be in Python if you want to optimize your code and I have a lot of mixed feelings about that because of course there are some simple tricks in Python that can make your code run faster and when I hear people saying that you shouldn't bother with trying to make your code faster I feel that they're just biased against python because it is slow compared to many low-level languages and python receives a lot of hate for that and a lot of people don't even consider it a real language but personally I think there's plenty of room for optimization in Python and I'm not talking about maximizing the speed of printing hello world I'm talking about some simple optimizations that we can easily miss when we're creating our programs such as using list comprehensions instead of the for Loop to create some very fast lists and so on there's plenty of small optimizations to be made in Python here and there and sometimes saving half a second can really change the outcome of your app for example if you create an implementation that saves one second now if you have to run that implement annotation or you have to run your app more than a million times a day which might be quite unlikely so let's go ahead and say if you need to run it even 10 times per day you're saving 10 seconds per day using your same script which if you have to do it over the course of a year you're saving a lot of time there and that's why I think it's important that we do our best to create the best implementations we can with python not to the Nano second level which which can be done but I believe that when you try to aim so low for those nanoseconds you really should be using a low level language instead of python but if you want to optimize some functions and save a couple seconds I think that makes sense I honestly think it's a great idea if you can optimize a function that takes one second in Python and make it go down to half a second I think that half a second is definitely worth it but again this really depends on what kind of script you're writing if you're going to run it only once a day optimizing it probably doesn't make sense because you're going to click on it you're going to wait a couple seconds and it's going to give you a result but if you have to run this script many times per day the optimization is definitely going to be worth it because you're not going to have to waste all those seconds and it really depends on you and how many times you need to run the script but all I want to say is that optimizing in Python is not always a bad thing so you always need to consider whether something's worth optimizing or not but as a common rule don't do it until after you've completed your app I mean if your app is running too slow definitely optimize it but if you don't even have an app there's no point in optimizing something that doesn't exist yet so maybe leave a note next to the function saying this is not the best implementation and then you can go back and optimize it but I would really recommend just trying to get your app up and running before doing any premature optimizations but that was just my opinion on optimizing code in Python I'm really curious to hear what you guys have to say about optimizing the code in Python whether sense whether you should go to a low level language instead and that's actually all I wanted to cover in this little video so with that being said as always thanks for watching and I'll see you in the next video