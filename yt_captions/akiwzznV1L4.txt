we wear a lot of hats as programmers obviously there's the core skill the one we're known for which is we can speak to these infernal machines and get them to do what we want but there's lots of auxiliary skills we must have as well we are designers of systems of repeatable engines when things go wrong with those engines we become diagnosticians or detectives sometimes big part of our job is simply as clarifiers of taking vague requirements and making them so specific even a computer can do them but on top of all those skills there's one we really need but we don't talk about as much that's the ability to tell stories to communicate to people to explain to them why we're doing what we're doing and how they can benefit from it you know this from experience even if you haven't thought about it you've read a really good read me and a really bad read me and that good or bad difference can make or break you using the software right it's their ability to communicate the what and why of their software that makes it useful or useless so that's the topic for this week's podcast how can we get better at talking about our software and unusually and quite delightfully we got to record this episode in person I happen to cross paths at a conference in California with this week's guest Francesco tiso and as you're about to hear he counts his ability to talk about the software as the thing that's really separated his career made it stand apart and made his career as a programmer actually really work for him so let's get talking and tell that story I'm your host Chris Jenkins this is developer voices and today's voice is Francesco [Music] tissia [Music] joining me live at the current 23 Eve I want to call it we're here for the conference tomorrow is it Eve land midday I I don't really know what time is it now I reckon the day before any event is event Eve that's the way it works right yeah Christmas Corner that market anyway true Francesco tisso good to see you coming in from Italy directly from Italy yeah and uh have you adjusted to the time zone yet uh I woke up at 4:00 a.m. this morning and I managed to work with all my European colleagues though okay but you got kids so waking up early as normal yes and the the interesting bit is that my kid didn't make me sleep the night before my first flight so I had to wake up at 4:00 uh Italian time without sleeping the night before then fly for like 14 hours now not sleep for another a couple of days but that's that's okay right so you're vaguely oriented in your own skull at the moment I'm in my own time zone right good it's good to own your own time zone time zones are a whole other topic we can spend the whole podcast on CU those turn out to be a lot trickier than people think yes but there's another part of programming that faces every developer as well as time zones and that's read me which I thought was a pretty simple tell me what the project is about tell me how to configure it but we got talking and you've got a whole Rabbit Hole of thoughts on this yes I believe Rhymes are beautiful and tricky at the same time it's kind of the entry point of people to what you have to share yeah so it's your chance to tell a story to make people realize that there is something interesting in the piece of code which is behind me yeah yeah storytelling is a key word there I often think as programmers right we don't think of ourselves as storytellers and yet in a way everything we do is telling a story to a computer we have structural storytelling skills but when it comes to talking to humans suddenly we I don't know if we lose momentum or we get lost I believe programmers like to tell stories to computers because it's easier to predict what computers will come back with I would say easier is not always accurate but it's easier 99% of the time yeah with humans the reaction can be way different yeah yeah I believe if you get the analogy uh well not if you get I believe a good analogy is basically trying to program for all the different operating system uh OS device type in the word at once right from scratch every human being is a different slightly compatible operating system exactly this is the beauty of trying to design for humans on top of Designing from machines okay do you think do you think that if we can bring a better sense okay actually let's go back before that what storytelling skills do you need in a readme why does it even matter so as I said the rhy is usually the first touch point of potentially new people interested to your project and your project so what storytelling helps helps you bridge the Gap in different ways to the people so maybe you have an advanced audience that knows already the problem space and says I want a quick link to the code that uh makes everything run or maybe you have a less Advanced person that arrives there and tries to understand is this something that solves the problem that I have in my company so you need to have a little bit of Storytelling to be able to take back in a wide variety of people maybe talking about the problem that you're trying to face maybe talking in different ways not only you know in text but also maybe adding some visual that will help understanding the architecture or the flow so you can make whatever Beauty you are creating the back also understandable and interest and interesting in on the front yeah yeah so you're is it is it beauty is it Clarity is it bringing the whole thing to life it's a little bit of everything I would say let's say that you know your C which is what you rate as beautiful it's the entrance of your house but then in order to arrive to the house you have a gate right and you have a path from the gate to the house okay your read me is both those because it's the gate so if you have for example a really high gate that is maybe something that nobody can and go on top and understand what's inside yeah nobody will look at your house and understand that is interesting um if it's too low maybe users more advanced would say oh it's a nice house house but there is no protection in front of it so it's useless okay and then once you enter the gate or you find that the gate is interesting there is the road taken to your house and this is how you structure the rhyth me to make different parts of your code accessible so as for example if you take you know let's take uh Kafka if you have part of code that talks about producer you send people there if you have part that is talking about Kafka connect you send people there so trying to build the path for all these various people to the part of the code that is interesting to them will make all the people that are coming to potentially to your house see the benefit of your house see that is well structured so the the the gate is not too low and also find immediately the path to the room or to the place where they have to go yeah okay but so stretching that metaphor a little further though the one of the problems which you've already referred to is people come to a project for different things right some people want to get in the front entrance which is how do I actually just configure this thing and start using it some people go around the side because somebody want to know if it's if the house is in the right area they're looking for right and yet a read me it's it's a one-dimensional structure it goes from point A to point Zed right how do you try and cater to everyone while having a very limited structure to talk to people I believe that's a interesting and complex topic because it's about how do you write documentation in general as example so trying to find all the use cases try to optimize for all the use cases well make you end up with uh 8,000 L rmy that almost nobody will ever sees yeah so I would say you probably will have to pick one entry point and then probably one of the things is divide and conquer so you divide the use cases in a really initial stage and you have other parts of other rythm is that are going in deep into those use cases the good about thing about this is that also for information discoverability if you split in multiple files with good headers you find you make also this information findable from for example Google and other search enges that's true so you think are you saying we should probably be thinking about writing a read me for every Persona coming into your project assuming you want it to be successful as a project well it doesn't have everything at once so don't don't say okay I start this project and then I have to write read me for 50 different personas but I would say also the opposite thing is by writing a rmy by identifying the personas you also start reflecting about for which this stuff is useful and allows you to tailor your message to the people that you are trying to convince or trying to inform about your tool existing yeah yeah I think that point of putting yourself in a user's shoes that Demand on programmers have empathy is so important it's it's one of those things I I think it's one of the core things about agile that we keep forgetting agile isn't about having a daily standup or a Sprint it's about things like putting programmers closer to users so they can understand their world I've been I've been in the um Consulting space for I believe 12 years of my career before becoming a developer Advocate and I believe that helped me a lot because I was doing not programming or Consulting in the programming space I was doing business intelligence okay that most of the time was talking with users or business users or high level business people that they said I need a dashboard that talks about absc and they were you know perfect in doing storytelling on the business side but the tool that I was working on couldn't understand storytelling it was Ser of rules of showing this field or that field performing this aggregation or that aggregation filtering for this specific user or that specific user so my job was kind of translation yeah either I was translating business outcomes into rules I was either implementing them or passing the ball to someone else that had to implement I believe going back to the university I did computer science engineering at the University I love doing the University University but I found that at University there were people like 10 times smarter than me there was SM when you put them in front of a computer on the other side what I like is to talk with people and stay with close to a computer and I found that this space is for my lack quite rare yeah let's well populated that V diagram exactly so I believe storytelling fits in here you you cannot work only with the computers I know that a lot of us love to work with the computers but the counterpart is always a human so you need to bridge that gap between the beauty that you did and what problems are solving on the business side or on The Human Side this really reminds me of something we had Ben gamble in the podcast recently a colleague of yours y one of the things he picked up on was that um like llms modern AI stuff is really good about Bridging the Gap between humans and computers do you think but and yet it feels like cheating if we ask chat GPT to write our reies do you think there is a computer leverageable angle to telling these stories I would say that yes to a certain point so tools like CH gbd I feel as of now maybe you know in months they will be way way better than me maybe there are now I I just don't know and I hope that my boss doesn't know soon the thing is I would say they are good starting point in a way that you can use them to discuss with them you I don't think you can expect immediately or in few iteration a perfect answer but what you can say is probably I have this idea of a problem can you try to write it specifically for people like me I'm not a native English speaker or writer sometimes CH GPT is useful because I have this idea can you write it in a better English that I could come up with and that it it it's something that chpd and other tools can do perfectly yeah yeah but then from that to an entire with me I mean at certain point yes as of now it still requires some human to go and fix part of it yeah yeah that's true I found it quite useful cuz it's almost like having a writing partner in the room right and maybe it's not the greatest writing partner you could imagine but it's always on hand like and that helps again with the empathy realizing that you're not writing and read me you're talking to someone yeah I believe that that that is always useful it's interacting now I prefer by a lot interaction with real people but well done good Fe yeah sometimes also interacting with a tool yeah it's very handy very quick and gets you closer to your goal it's not perfect but I would argue that n most most of the time none of the interaction between human is perfect as well so I would say it's a good hand that we can have in order to build our RH okay okay so that's a help that's close to hand do you um do you subscribe to any of these ideas like um like there's a classic structural thing of like why what is it why what how so what do you do you have any of those kinds of tricks up your sleve um well that's a good structure because for example start with why so I'm a big fan of trying to understand the why of something before just doing and going and doing it um the Y part is also the to and I believe it's good to have this as F first exercise because make you realize if what you created is helping someone H helps you realize who is the potential people interested and that helps also driving kind of the messaging the wording the examples that you are going to use then the what part I believe it's the needed because a certain point you generate the interest or you make people realize that they may have a problem where you fit in and you are describing what's in what's in for them yeah and then uh the latest bit was then what or how is usually the next step just like how do you configure this thing exactly so yeah then you talk about how to create something that is usually standard and customized for the use case and lastly you basically draw a summary of everything and make this maybe example that you start drawing applicable to a wider audience do you think it's always you say drawing and I know you've experimented with like um more Visual and interactive ways of doing readmes yeah do you think should we be looking outside of the linear Narrative of text to live demo type stuff in our read mes I would say that it's an interesting point because um we are both in the developer advocacy space so I feel that our part of our job is to close the gap between users and Technologies somehow yeah and we don't don't do that for example for live coding in in two completely different ways you and I me yes you and me what you do is you do perfect live coding I enjoy your session where you go there and say okay I need this then I need that and then you I need that and you write everything I cannot do two things at the same time I cannot write code and speak in English at the same time so what I end up is for example pre-built Jupiter notebooks okay so in that case what what you what I do is the code is still there but together with the Cod the code I build also a story and also visuals that go along with the story because that's the other part not everybody learns the same not everybody is interested in the same way not everybody uh feels that something is doable or interesting in the same way so that's a trick that I started using and I feel it drives the message you have to try to again optimize your rthm your piece of content for to be accessible and to be interesting for a wide set of audience some people will just think okay show me the code yeah other people will see okay what's the architecture behind it and if you put that on visual or if you have something like streaming that moves all the part if you see that flow if you show that flow that will make people interested so part of your job is to not create like a lengthy paper that nobody will read but at the same time try to attract with maybe slightly different techniques audiences that will be interested or willing to learn in different methods right so you're hitting those different ways people absorb information yep I'm trying to think what types there are cuz we you everyone knows the thing about visual Learners and maybe um maybe I need to Branch out into doing the audio book versions of read mes for the people that were auditory Learners that that's the thing I would say you know uh for my current talk I'm playing with videos so I have videos in the background okay I was thinking about playing with music as well but then uh there is another talk from a colleague Chris Chris etton yes and he is playing heavily with music so I I said I will leave it to him but again it's it's about making stuff interesting and accessible to different Target to different audiences someone like that likes music might go straight to um to the other session someone that okay is attracted by a video could come to my session find it interesting someone else that doesn't like moving Parts behind the speaker will find my inter my session disrupt well not interesting at all and will walk away after 5 minutes it's always the risk of trying new things trying new methods and and understanding the the feedback from the people and that's the other good part if you ever read me someone could open an issue that read me and saying oh the image that you show there yeah I well I don't really like it it's not a constructive feedback but maybe it's wrong because a b and c or maybe you have a long wall of text why don't you include an image to Showcase what you're doing so that's the other part since it's that it's visible Maybe maybe people will open an issue to find it to to increase the uh Beauty not the beauty but the to make the r me be a little bit more interesting yeah it makes me think this that that's a nice advantage of readmes over conference talks for instance that it can become a conversation because people can open PO requests and start interacting whereas a conference talk is off a more static thing it is if you deliver only once I try to deliver it multiple times a talk because that's the other beauty of the talk in my opinion a talk is not a static piece okay you change the talk depending on who you're talking with and also depending on the feedback that you got from previous sessions one thing that we do at Ian is before any event you do an internal rehearsals oh you do for yes forever we do every time for other parts of the other departments we suggest that everybody does it and it's a great way because you get people from the deal team giving you the details of okay maybe you should change this text because it highlights a little bit better or maybe you need to Pace a little bit here because you know the structure of the talk will be better and then you get a Flink engineer that tells you look that if you do that from Flink 17 there is something that changes and then but at least you have the complete picture you have a complete feedback and allows to you you to make your talk a lot better yeah and the other bit is you adapt it to the target audience I have a um a session here about moving from BS to streaming I'm giving it at a conference about streaming so I need to go into the ny-g greedy details on how you do that if on the other side I'm giving this talk to a database uh database conference like a postgress conference because one of the example is based on postgress I will go more into the details of what's relevant for the postest dbas for example so you tune it depending on the audience is the same thing as your R me you tune it depending on who you want to talk to yeah yeah it's so it's like you make it sound a lot more conversational than we usually think of programming as being I I I need to share uh sad reality here um there is no well until now let's see in couple of years if you if computers will you know take the word over but as of now you still need humans to you know interact to create a business to have your pro uh project to be successful so if you need humans you need some sort of interactions and you need some sort of a dialogue is this I would say the r me is the first part the Ry is your door to get people in the more you create the good gate the more people you will have to follow the path to your hands yeah yeah it's um it's funny one of my most successful open source projects I mean I think it was good software and it definitely solved the need and that was why it was successful but the read me was mostly an argument of why the world needed it and I found that of all the projects I've ever done it got ported to the most different languages because I think the most valuable asset in the whole project was the case for why this should be written people in like JavaScript or other languages said well yeah I see this point we should make it if you take this to kind of a similar subject I believe people were doing something like streaming since a while why Apachi Kafka has been different because there was a story behind it go I would say you know why event streaming why doing stuff one by one for each event is needed why weren't people satisfied with running a batch every 5 seconds it's about creating a story that managing that event by itself will open new use case new doors for your business M I believe once you start understanding the stories understanding the powerful message behind the story you start buying into event streaming into tools like aajka but before that everybody was fine with like quering every two two minutes on a database yeah yeah cuz we don't think we don't think of new ways to solve something without a story we might think of slightly different solutions to the existing problems but it's a story that convinces us to look at the problem a different way yes I believe the stor is like I would say books on the way that most of the times you change your mind about a topic M the rhy me is basically your book it's most of the time like that's the other bit about llms and I my feeling about llms as of now they are really good at answering in in different ways problems that have been already solved I believe the creativity of new Pro completely new problem statements maybe it's already there and I didn't Discover it but it's something that it's still on humans yeah yeah I think you can see that in in lmm llms when um after you've used them for a while what they're saying you can see the shapes of it you can see the cliches and it's cliches that you can automate yeah right but that creativity that saying something no one's heard before that's still on humans thankfully yes yeah do you think there are places we can learn to do this better in or outside of the programming World ah I believe there are you know I enjoy reading story books not only because I have two kids and I need to read story books but also because it make my brain go out of work and think about new words and new stuff I will love watching cartoons with them because you know it makes my young kid come out again yeah um I feel that there are good examples there is a book about Apachi kfka with authors oh gently down the stream yes um like picking up those examples or also maybe picking up the examples of how new technologies have been described at the beginning like how was Google described at the beginning how was Kafka described at the beginning trying to learn from this initial stage and the evolution of the message is something that could help you realize how to write your own message okay so that your retirement book project that you're going to write the origin of the great project I I hope that I can retire and just you know stay on a sandy beach in front of to see maybe if I need to do something have a bar at at the beach that I can manage I'm not planning to write in I believe that by the time my story will already be written okay I was hoping you'd retire to an Italian Villa near a wineyard and vineard well I I don't have a villa I have an apartment but it's near one of the most beautiful Italian wineyard zones so I'm in a good place for that okay I miss the sea because it's t hours away so that's my next okay place to go we shall uh well you've got work to do before then yep but we do have wine to drink at the reception of this conference later so maybe we should start thinking about that yep absolutely pleasure to talk to you it's a pleasure for me to be hosted by you cheers see you again bye-bye thank you Francesco I will see you at the next conference or at the next Vineyard that could work either way why aren't there Tech conferences at Vineyards is that good good idea has that got some hidden parts to it that could backfire could backfire maybe we shouldn't do conferences at Vineyards anyway I'm going to leave you with a book recommendation it's my favorite book on programming that isn't about programming at all it's by Stephen King it's one of his very few non-fiction books and it's called onw writing and it's all about why and how we write things for other people to read it's really applicable to programming I don't think Stephen King ever thought of programming when he was WR it I'll put a link to that book in the show notes as ever if you've enjoyed this episode please let me know tell me that story and maybe let someone else know the like and share buttons are always right there for you so go and click and until next time I've been your host Chris Jenkins this has been developer voices with Francesco tisso thanks for [Music] listening