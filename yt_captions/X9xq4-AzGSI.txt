all right hey Vim is not only about speed well what's it about then yes spending days to become a few seconds faster is silly but that was never the point by the way I did not I I I I I generally dislike that take I I know I'm already W in I didn't just become a few seconds faster okay I became I became massively faster okay and for me it was about two months to really get fast at using vim and I but the thing is is that when I say faster I will say this one thing that's a little bit different than faster is probably what you're thinking about is that when I say faster I could go faster because I could go longer and I was able to go longer because I was able to have more fun I felt like I was having fun I could keep on programming my ability to program actually completely completely grew she never said that to me once by the way I've never been said oh you're going longer um like I was just able to be so excited and so I could go faster cuz I could go longer and yes like my text editing was significantly better great but Ian I turned into a DA Punk song bigger okay not bigger that that actually never happened but faster longer yeah it all happened it all happened are we still talking about coding maybe I think we're talking about coding one common misconception I see uh being made all the time about Vim is the only reason why we use Vim neovim is to be able to write code faster it may sound a bit silly to climb the mountain that is learning Vim just for the single benefit and indeed I would say this is silly but this is not the only reason we do it the truth is we all learned Vim to be able to say I use Vim by the way he's absolutely correct there is unironically 100% correct here I will say that saying I use Vim by the way is second to pair programming with somebody and using them and just watching it happen okay cuz cuz it happened to me I was this person so I'm not like I'm not dunking on anyone that's doing this okay when I first started out and Anders backin used emac in such a rate that made me just go I don't know what the hell he just did I want that I want whatever he just did I want that right now like that moment where when someone else watches you do that goes I want that o it's so good that is the that is the greatest Vim by the way and then they go what are you doing what are you using and you say I use Vim by the way M it's so good it's so good it's just so good it's the best I don't know that's a personal opinion I love it I love it because it it happened to me and I was already using Vim bindings in intellig and I was fast I was I was great at Vim oh dang oh dang you know what I mean I I I felt shame after leaving him because I was like I use VM by the way and then he came up and said I use emac by the way and just like Chad energy was flowing off of him oh my goodness and I envious I became envious afterwards you are literally describing how I feel about watching you use VI yeah I know that I I I do that to people which I think is fun because I think it's one of the greatest things ever seeing like I love watching somebody else's workflow and I love being impressed by someone else's workflow I think it's great because then I go what are they doing I want what they have I love seeing other people's workflows I actually think it's a super cool thing and I think people should do that cuz just because you think you have something good does not mean you have that you have that you know everything that you've tried everything that you're actually efficient at other things right it's good times you want to see mine uh later today I will program and we'll be doing chat as Dum and you'll be able to see me walk in here okay right now we're going to be building TCP so what I'll be doing is actually building the application on top of TCP uh we're going to be building out a fun uh concept where when you when you first make a connection I expect a series of handshakes to go on and so we're going to be building all that out and it's going to be building it's going to be in goang and Lua so it'll be going back and forth but Twix the two pretty excited about that I'm not going to make some stupid transpiler where you have to Define it in goang and then it transpiles the types into Lua like I I ain't about that I'm just going to program it twice and we're going to call it a day do you think you should learn to touch type to use Vim if you use vim and you don't know how to touch type I honestly have no idea how you do it real talk I don't know how you do that how do you do that not really I mean both the speed memes are cool reasons to love using Vim I just don't think it's enough to justify learning it my intention with this article is to provide insights into what makes people cling to a supposedly ancient editor that only made sense when people could do nothing on a PC but write green text on a black background to be fair I think he's referencing the stack Overflow uh it perhaps uh what's it called it perhaps this was probably the most ignorant article I've ever heard of in my lifetime was this one the consensus among many vim and emac users creates a picture that many Tech users from a certain generation would be familiar with like honestly can you believe somebody wrote this crap on stack Overflow like this is on stack overflows blog can you believe that you know people talk about people that use Vim as being pretentious what what do you call this what what do you call an article like this if Vim people are pretentious what is that I have no idea uh disclaimer before we start on the journey I must make it clear that my first experiences with Vim were just as smooth as nearly everyone else's yeah I dude anit file was hard I'm going to let you know that an nit file was a difficult initial thing for me I first opened it by accident while typing get commit and made a mistake of forgetting to type-m and the message before pressing enter this resulted in me having to close my terminal as expected this is a great first experience by the way great first experience uh then sometime later I out of curiosity decide to check out what it was about and learn at least the very basics of it to understand what was the point of it the result of this was me trying every possible combination of keys possible and managing to do everything imaginable action an editor possibly could except for doing basic basic things like writing hello world this is good this is good this this describes you know again when I first used Vim I thought only people of a certain generation use vim and it's for stupid people and it's not for real developers I had that mentality I want you to know full disclaimer here I was a normie okay I was a normie only years later when I finally decide to effectively learn how to use Vim motions initially I did this with VSS code extension Al by the way this is a very great way to do it I I fully approve to learn Vim motions before you learn Vim honestly learning Vim motions it takes all the difficulty out of learning Vim right because then at least you know what you're doing you don't have to like hop in and learn how to do anything and also learn the editor itself it's like you got one of them out of the way you know what I mean and if you only learn Vim motions you will be very happy uh and eventually join the club of degenerates who swore by a tool no one else around them uses I reveal this to to you all in hope that you will realize that if you think Vim is pointless outdated or just weird you're not the only one we all thought that before learning the ways of Vim I'm that guy the reason Vim is awesome so hear me out the reason why I love Vim so much is not actually about raw speed as in taking a few seconds Less in each action or just having to press fewer keystrokes it's all about flow it's not just that we can write faster but the process of thinking about what we have to do and effectively doing it is just way smoother hell yeah hell yeah one analogy I like to uh make is having to go from point A to point B and having two separate paths to go there the first path the first way is a maze crowded with people everywhere bumping at or bumping at you every time and is full of choices you have to make and many of those are dead ends so you have to keep your focus on getting to point B to avoid getting sidetracked this is how I feel using an ID nowadays there is a there's quite a bit of visual distraction there might be something I know we talked about ad add earlier there is a lot of visual distraction when it comes to these these editors and you know there there could be something about that there could be something that maybe I just slot better into it because my brain has less to look at you know what I mean real talk could be uh I can get to point B indeed and we'll even get there quickly with an experience I have nowadays it's just not pleasant at all and it can become quite exhausting if I have to take this way constantly and I'm always in a hurry the second way is like a walk in the park there might be some distractions if you look around but they are often uh Pleasant and you won't realize they are there if you're uh if you're focused this is how Vim motions feels to me I can see my destination easily it's a clear path to get there if so if I have to go faster it's just a smooth ride I don't quite get this analogy cuz I'm just going to be real for a second I've never been in a code base that looks like this and so often it's like this except for all the plants have thorns and thistles and everything's trying to kill you along the way right like I understand what you're trying to say that there's a lot of visual distractions and things you kind of have to jump through in other editors whereas you get a more minimal experience and I can understand that I can understand that the basics right welcome to Jurassic Park yeah you pretty much in Jurassic Park even if both ways took the same time to get from point A to point B I would still prefer the second way because it's just more pleasant and less draining but it turns out that Vim motion is not only smoother but faster as well so why that's why people who learn it uh well often stick to it I keep let's see keep in mind I mentioned Vim motions here not Vim because some people come back to editors like VSS code or Ides like the ones from jetbrains after using vm/ Neo Vim for a while it's good it's good to separate out the two Vim motions Vim you should really have those two separated uh but most will still use Vim motions on them because it's just better to anyone who doesn't know vim and its spiritual successor neovim are command line editors that run directly on your terminal the way you navigate and edit text in it which we call Vim motions is so effective that many extensions and plugins emulate this behavior in other editors and even idees what I want to focus on here are these Vim motions because I think this is where most of the value of Vim lies that's funny I actually find yeah actually no I find you know real talk it probably Vim motion probably Vim motions probably have a greater value I know a lot of people are out here asking me about uh Helix like why not Helix right um my general problem I have with Helix is that you you gain no efficiency meaning it's not a more efficient key you know key pattern uh there's nothing like uniquely different about it that actually causes things to be potentially more efficient it's effectively the same if you use Vim or you use Helix you're executing almost identical amount of keys overall okay let's let's that's fine let's just call that fine so why not Helix then why not selection first versus movement first fa Fair take Fair take um my next problem with Helix is that Vim keys are ubiquitous oh you get stuck in xcode which I did one time you still kind of have Vim emulation oh you have to go use something else you pretty much have Vim emulation you go online to go use uh you go do an interview online using Code signal you got Vim emulation you become really good at Helix you don't got it anywhere you got like literally you cannot transport those skills to almost anything else oh you can transport it to Kwan I get it but you can't transport it anywhere else for me this argument is the same as you had with Theo in your latest reaction is different to learn Helix the first time than to learn it after F that's fair but my argument about the Motions is that it's still the same amount right you're still pressing the same amount of keys I I went through Helix I learned a lot of the motions and what I realized is that it is one stroke less the same or one stroke more to do anything in Helix versus Vim it's just a different flavor of the effectively the same thing it's the same idea of being able to use just keys to be able to do a certain amount of manipulation on text I get that but the argument is greater than that it's the ubiquity of Vim motions did it feel better I thought it felt the same it's like you just learn you learn one set versus another set remember I went from uh query to dvorac and I didn't remap anything so it's just they're just key combos right they're not that's it I don't find them any different you just learn the thing you're going to press like when I want to delete a paragraph um um if I want to just delete a paragraph dap it's not like I think about anything other than delete a paragraph I just deleted a paragraph that's all I want to do I just wanted to delete a paragraph I don't think like oh okay I want to delete I do want to go around it and uh what's the a paragraph right I just dab right I don't think about it I there's nothing that I do about it if I want to delete inside those little parentheses I just literally di parenthesis right and then that's it if I wanted to CI in it then I'd C in those parentheses right like I I don't think about the Motions I just think of what I want to do and because I've used it long enough the Motions come out naturally right it just comes out naturally so I don't I don't think about it so that's why like so I I think it's good to get that good I think it's good to get that good at whatever editor you're using and then you should want it to be as ubiquitous as possible hot take Vim is a net negative one you don't uh you don't know uh blind typing yet oh hold hot take Vim is a negative if okay okay okay if you don't know blind typing that's called touch typing yes I do agree with that don't use Vim if you don't know a touch type honestly not worth it you are a fresh Junior who con needs to constantly hop around and Google things I actually disagree with number two completely I don't think it really has anything to do with needing to hop around uh or B need a senior to use some specific ID to get you unstuck uh you make their job harder I also don't agree with that like you can still use Vim motions and you can still use vim and you can still have an ID installed to make it easier for somebody right like you know like if I really needed to and someone felt like they could wouldn't I could open up VSS code I have VSS code right the reality is is Some people prefer intellig and so if you have VSS code you can have VSS code on your machine right hear me out on this one actually the really the only reason why I have VSS code on my machine is because you guys paid me what was it $700 to use it for a week and I literally used it for an entire week and it was miserable okay it was effing miserable I want you to know that that I have never disliked my experience more in my lifetime than effing using vs code my goodness that was awful I never want to do that again ever ever ever anyways keep it okay let's keep let's let's let's go let's go um where's the bleep H I don't know it's over there I don't want to press it keep in mind I mentioned Vim motions here not Vim because people come back to uh editors like vs Cod 9s oh yeah by the way about the whole senior coming back and using your machine and not being able to use it because of their typical IDE that they use doesn't that exists with intellig versus VSS code right so if they use intell and you use vs code like all Juniors do guess what they're going to have the same amount of kind of experience as you do and they're going to be like oh I don't know how to use this how do you do that how do you do this how do you do this right to me it's just a bunch of it's it's just bogus I think it's it's it's not it's not a real argument I think not a meeme wise something a lot of neovim people need to accept is that for some people probably more than less vs codee is more efficient different difference are different doesn't mean that it can't be for you though um I largely disagree with this only because it's it's like this hear me out on it this is an extremely very specific way to do do things okay say you want to shoot a basketball and you go up the first time you've ever shot a basketball you just shoot like that right both hands you put it all up there you do all that you could make baskets you could probably even get pretty good at it but you'll notice that nobody who's at the peak peak peakness of it all does that they have a very specific way in which they shoot in which they align their elbow and they do a bunch of practice to do something because even though it is it is not necessarily the way you would normally think of how to shoot it's something that you have to train yourself to become good at and I look at it a lot the same as Vim you don't have to use Vim you can most certainly take two hands on that basketball and shoot it nobody's going to blame you otherwise pirate software uses noad Plus+ ain't nobody caring but if you want to get good at something you have to be able to do something unique it's funny I say that because Shaq shoots like a granny yeah and Shaq also had one of the worst free throw uh percentages in the entire league you know what Shaq was good at being s feet tall and touching the rim by not jumping okay that that was a really big skill for him like yeah he was aggressive he was a s foot tall person that could move like a six- foot tall person that automatically means you're in the NBA you got to remember that if you're over 7et tall the chance chance of you being in the NBA is 33% that is wild okay that does that is insane one out of every three s feet tall people play basketball for the NBA okay anyways we can move on from that anyways keep in mind I mentioned Vim motions here uh not Vim because some people come back to editors like vs code and or Ides like the ones from jet brains and after using vim and Neo for a while but most uh will still use Vim on let's see Vim on them because it's no better or because it's just better to anyone who doesn't know vim and its spiritual successor Neo oh I already read all this I I did I I read this all right let's see but these are so-called Vim motions are counterintuitive are you still telling me that they are the best part well being user friendly is a complex matter and being beginner friendly is just one side of it oo that's a very interesting take I like that take by the way by the way if you heard me read that last paragraph it sounded like I had a stroke I didn't have a stroke this is a very interesting take just because something isn't beginner friendly does not mean it's not user friendly there is there is a difference Vim is not beginner friendly it is pretty much Common Sense uh this is pretty much common sense but there are other aspects of the user experience that in my perception make Vim an amazing experience for advanced users that other tools don't even come close to and often what would be intuitive to a beginner can be slow or bothersome to an experienced User it's a good take I like that I I I agree with it I do not I do not think that being beginner friendly is how we should Define our tools as something you will use for 30 years I wanted to say you know I wanted to say it correctly Luxor don't make fun of me that I took a second there beginner friendly is a temporary phase exactly and so I don't I don't necessarily think that is doing well arguing their point I think they're they're doing very very well I think that's very very good uh all right take the word processor like Microsoft Word for example it has icons that often show exactly what they do like an underline button that is a u with an underline or an italic button that is an i with an on italic this makes it way easier for a beginner to use the software because many features can be discovered by simple exploration however if you're writing an essay it would be unlikely that clicking those same icons whenever you need to style something would be practical if you need to style uh things often enough it's just much easier to learn shortcuts like control you and control I what makes it user friendly is that until you learn or even need the Advanced commands it guides you by the hand to do whatever you need to do and when you learn the advanced commands you become quite efficient this is like it's it's an okay thing I mean VSS code has a lot of ways you can do things quite efficiently there are devs out there that really do know VSS code and actually learn them quite well really this is more of a a good argument against people that never learned their editor versus people that learn their editor well enough right and that's like that's to me that's a huge that's a huge downgrade is not learning your stuff well enough which you should right if I watch you and you use vs code and you you're just using your mouse and barely going along I I I just I just find it weak like dude don't use something for 40 to 60 hours a week and never learn how it works just learn how it works just know your tools I don't care I don't care that it take some time just Master it okay at least Master what you use uh Vim on the other hand it's like the Dark Souls of text editors Fair Point this is a fair point uh you're Ma you you largely go Maiden lless okay um probably end up using Arch Linux you know it's it's a pretty it's a pretty good one uh it's like the Incarnation of no pain no gain there's no learning curve it it has a learning mountain behind the Great Wall that you have to climb but on the other side after you start climbing this mountain you realize it gives you a level of productivity you simply cannot find on easier to use tools it starts to feel even more intuitive than traditional way of editing and after you understand its mechanics it's amazing just how powerful it uh you become I agree with Vim motions Vim motions that makes sense when I learned how to use Vim motions I just could not believe that I li lived so long using control shift and arrow keys to highlight things and I got really good at control shift Arrow keying I was really really good I mean I was dang good at it and man I just sat there and thought gosh I cannot believe this sir you're admitting Vim is not beginner friendly but you want to convince me to to it's intuitive it's pretty it's pretty yesterday I learned about t-m yeah t-mo is fantastic if you don't use t-mo I mean honestly again you are missing out I mean the fact that you can do that Vim APM you can be in one project go to the go back and forth between projects you crazy you crazy not having that okay screen gang screen could be good I don't use screen I'm too young to use screen kitty kitty is like a you can use Kitty uh I think the maintainer of kitty if I'm not mistaken is just too much of an for me to use this product I don't care how good kitty is I don't care if it's the greatest thing that has ever existed I just can't have somebody that's that talks that way I don't want to use their or support their product it's just simple as that just simple as that yeah Co is a character yeah I I I don't support people that are that are that simple as that um anyways take deleting a a word for example when you first learn Vim you can delete a word by moving a cursor to the beginning of the word and pressing DW d W is so good then you discover that D is the delete action and W is the movement which tells you on what part of the text to apply the command then you learn that you can use other Mo movements with the same delete command like d dollar to delete to the end of the line or DJ to delete to the current line and one above below would be the proper answer okay you goof that one up there Jay by default moves the cursor to the one line below what are you doing what are you saying uh goof that one up just a little bit so far that may sound like uh you have to memorize many specific commands to do specific things but let's say now you have to copy the text instead of deleting it for this you have to learn the Y command yank uh and this is it you already know DW D dollar and DJ Now you can just copy to the end of the word uh to the line to the end of the line or to the current line plus the one below by doing y y w y dollar sign YJ yes all works as you would expect them to but then you learn of more advanced movements uh that use tech text objects like IW IP and I closing parthey or opening uh inside text inside a word text inside of paragraph and text inside a parentheses um for those that just have no idea what this is so if you're right here and you want to delete the word what people typically would do is go BDW right or you can go like this delete inside word or you can do delete inside Capital word which means to all delete everything up on white spaces on both sides super useful it just becomes aggressively more useful once you learn them as like secondhand once you learn them like you're playing a Souls game it becomes really it becomes really second nature how would I paste while staying in insert mode control op p i I never use control o though uh like when you're in here if you press crl o whoopsies wrong button control o you go into a special insert mode dap I just deleted now I'm back in insert mode I never use control o though right so if I highlight that I yank it I go like this I'm in insert mode I'm typing I go op I'm back in insert mode typing right or I can do control o shift p and then I can do that you know just not this just not just not from me you know what I mean it's just not for me uh not a I'm not a oer d percent sign is the most useful uh action for me it deletes the full function call uh really I never used a delete percent sign delete percent sign I don't know what it does uh Delete percent sign oh yeah yeah I do that okay I see what you mean sorry I was just trying to think of what you mean by that percent sign jumps between containers so for those that don't know if you have a bunch of text a percent sign deletes goes between there yeah I use that all the time oh my goodness when I was in uh back back in my uh JavaScript days when I did like function Fu uh like this my favorite way to delete was shift v f that bam bam right d shift VF opening parentheses percent sign D I don't know why just loved it it just made me feel good it made me feel good well dap only works with contiguous characters right so if I dap right here it daps contiguous text not everything right so that's why D percent sign is really nice because it deleted the whole it deleted the whole function because percent sign jumps between function opening and function closing anyways all right sorry uh by learning the just these three movements you can now delete and copy all the text inside of a word paragraph or parenthesis that the cursor is in even if the cursor is in the middle of the word or the paragraph or anywhere between opening and closing parentheses just by doing that one thing he is missing is that you're you can also jump to it so notice that I'm not in parentheses actually am I in I might be in parentheses okay I am in parenthesis all right so I'm right here uh hold on uh I'm in here and I want to delete inside of there I can go like this CI opening parentheses oh crap I'm still inside of a motion dang it hold on there's way too many motions here I usually don't use it for that one can I not uh CI that thing yeah there you go you can CI and jump into it I usually use it for uh text my favorite is to use it on text because on text if I'm right here I can go CI opening see I double quote and I jump right in and I'm starting to type right and so it's really nice if you're going like this do that and go f you know Vim APM uh Fu right if you're doing manual importing it's nice it's so intuitive it it becomes very intuitive because you already know them right that's the thing it it becomes it's it's not intuitive it's practiced I wouldn't use the term intuitive it's practiced like anything you do practice is much different right how do you do c uh C double quote CI double quote backwards you can't you can't go backwards it goes forwards practice is really important that's why people can become really good with a lot of editors is because they just practice it enough and they get good enough with them now let's say you just need to change some text to be all lower case and you discover online that there's cap command gu that does that yes there is gu g capital u g TIY uh you can use this new command with any movements you learned before just by changing the command g u WG U dollar sign guu J GUI W GUI P GUI right closing parentheses works exactly the way you would expect and if you use gu it works like gu right that's one nice part is once you learn them then instead of like I can go viw I now highlighted the word I can go y IW I yanked the word and it's now in my paste buffer right I can DW it deletes it I can C IW now I'm in insert mode I can literally do what he did g capital UI W and I've just made it up into uppercase um unimposing craft dinner uh I honestly don't care about your opinions like to be real if someone can use vs code ultimately fast great for them I've seen some people that are pretty fast at vs code okay but I meet extremely few people that are fast ATS code and my whole thing is to tell you to learn your tool notice that I've said that like 900 times the only person that seems a little bit hurt is you cuz you keep you just keep going so so go be hurt but just go be hurt somewhere else okay just just go just go anywhere else I don't care where you go just go just go somewhere else right just go anywhere it's just not for you it's just not for you and that's okay like don't spend your day getting angry spend your day doing something else you you will be a much happier individual if you spend your day doing anything else than being angry on the internet uh but now let's say you're good enough with Vim that you want to show off and you can install surround Vim plugin by TP by the way TP is is very very good um and just blow people's minds with why Ys IP that Ys it says insert around IP being the movement inside the parentheses we just learned and this one being inside the character I I I don't even use any of those things oh that's fun surround seems cool maybe I should maybe I should learn about a little bit about surround that's that's really good by the way it's cool surround could be pretty fun to learn I tend to not use any custom things right I don't use a lot of surround is very cool I try not to use uh uh in kickstar NE oh okay I tend not to use custom things just in general just because I don't want to learn keystrokes that won't work when I'm on a server or when I'm using someone else's Vim or doing anything like that right I just tend not to um you know what I mean does that make sense I feel like the I I feel like relying on plugins would lower your efficiency in case you don't have it yeah so it's cool though folky added Harpoon 2 to Lazy Vim extras yesterday dude what a gentleman what a gentleman I do need to do some updating on Harpoon what a gentleman uh realistically how much time do you spend using someone else's Vim very little but I do but I do use like a server's Vim or a remote Vim every now and then Harpoon 2 has not been released uh I I do want I'm going to spend I'm going to spend a weekend by myself and take out the last few things I want to do and then that's that and then I will uh call Harpoon 2 done I'm I'm saying no to most people's requests just so you know I I I say no to most people's I don't want your features in Harpoon I want Harpoon to be very very minimal right I want it to be very very minimal on purpose if you're a Vim user this looks uh and this looks like too much to handle at once don't worry it uh it is indeed too much to learn at one time the ideal way to learn Vim is to learn the basic commands like this oh man absolutely and then get the hang of simple movements like this absolutely I always suggest people just to really learn D YP WB like I and a like just start the world's most simplest command start from there and then once you get bothered and you want to go faster just learn the next command right take some time uh anyone have a link to article it's on the it's on the Reddit hjkl just learn the simple things right uh then you become used to them and they become muscle memory and then you start getting used to more movements the good part is that each thing you learn adds to your tool buildt and can be used together with what you learned before and that's why Vin becomes intuitive it it's indeed hard to start learning it but after you start it every little thing you learn expands Your Capacity exponentially but what let's see but what is the relation between this and the flow you mentioned before the thing that VI motions often feel more like a language you speak rather than a set of shortcuts you use the more you use the more you find alternative ways to say the same thing that comes more naturally when you're learning a language like PES is that is this Brazil mentioned are we having like a Brazil mentioned indirectly I feel like we're having a Brazil mentioned moment right now and you want to order a bottle of water in Brazil we got it's so mentioned you may have learned to say things like I do not speak bores okay fluent I don't even know how to read it okay I don't even know how to read it could you please bring me a bottle of water and you would probably have to stop and remember each word as you're saying at the first time around nailed it first try really first try that was a first try what did he call my Mom after you get more fluent in the language uh sentences like I would like a bottle of water or give me a a bottle of water please may come more naturally and will basically get the same result and sometimes you'll hear native saying things like Uma AUA May Chapa which might also get the same result in an even shorter way but it depends on things like intonation context and Body Language just like someone else's configuration might feel completely foreign yeah you know you can tell right away I'm pretty good at the old uh reading other languages the translation is wrong I don't know what it means and this part of the beauty of VI motions as you as you use it in some commands and movements become muscle memory and then you start to get new ways to do uh what you think more efficiently and the more you learn the easier it gets uh to do whatever you're thinking sorry I'm dying oh no oh no I'm dying thank you bro thank you bro dumb Bale appreciate that I join I he Prime speak in Portuguese I'm dying everybody can you guys can you guys bring some incense to my funeral uh and this part of the beauty of VI motions as you use it some commands and uh movements become muscle memory and then you start getting new ways to do what you think more efficiently and the more you learn it the easier it gets to do whatever you're thinking it this is a very good point by the way which is when you can make that when you can make that that transfer from uh brain to heart if you know what I mean you don't think about what you're doing anymore it's just like when you play a video game when you first play a video game you have to think about like the things you want to do and then at some point you quit thinking about like you quit thinking about the things you want to do and you start thinking about what you want to do right like it it's just like one step closer right you get one you it's it's one less decision thing Ultra Instinct also people have misguided idea that Vim will allow them to write F uh to write faster and that this is something that would be better done with things like autocomplete refactor tools Snippets or even tool like co-pilot instead of switching to a different editor the truth is that you can and probably should use all of this on vim and or especially Neo 2 they're not mutually exclusive true I use co-pilot all the time and most of the productivity Gams of Vim motions are not from writing but from editing Fair yeah fair fair uh copy a chunk of code to paste somewhere else in the code changing just a parameter from a parameter list or a function or even completely overwriting the contents of a function are way faster smoother to do in Vim motions than they would be to use a mouse absolutely that I mean that's intuitive though uh also by using a keyboard to do this you can keep your hands uh on the home row and be in typing mode immediately while if you're using a mouse you have to reposition your right hand on the keyboard for proper typing by the way this is a great argument just use Vim motions right you don't have to use Vim use Vim motions right you'll be much happier these little movements like moving from typing mode Hands-On row to Mouse navigation left hand on keyboard often near the control and right hand on the mouse to uh keyboard navigation right hand near the left control and right hand on the arrow keys for navigation like home and end may seem too tiny to make a difference when you focus on speed alone but they add up on cognitive cost every let's see to do every action you make and removing the small steps can improve flow between thought and working on code in the long run this is a fair take there's a neovin plug-in for yeah of course there is you can use neovim inside of vs code like that's a that's a fun part well not exactly Vim neovim as a text editor is an excellent choice if you want to the smoothest experience with Vim motions and you're willing to go the extra mile to get the ideal environment for your personal needs and development style but they are not for everyone especially if you shiver at the idea of spending any time config uh configuring and getting used to your editor rather than just writing code by the way this is in all editors though you want to get good at Neo if you want to get good at vs code you have to spend an inordinate amount of time configuring and learning all the shortcuts you want to get good at Vim I would argue it takes less time the only reason why is most motions and most shortcuts are all the same so if I'm in if I am in a file tree to move around in a file tree is no different than to move around in a piece of code right everything is all oriented that way so you use the same motions for everything whether you're in a file or not it's easier your vs code on the other hand you're going to have different you have different motions right so you have to memorize contextually each little window and you could definitely get good hands down you'll probably get really good but it just takes to me it just seems like there's a lot more things you have to kind of jump around with in your brain I don't know but at the end of the day if you want to get good at it like just starting to write code and if that's the only thing you care about I would say you're doing a disservice to your future self right it doesn't matter what editor you choose only considering the code is silly you want to be able to learn your editor and become good at it unless if you use notepad++ and then you just use green font and your name is Thor like that happens uh let's see for most people I believe Vim motions inside your favorite text editor are the best way to go since it provides the most powerful switching to Vim without most of the trouble and if you want to become blazingly fast you already know most of the Vim motions to switch to the actual Neo Vim which uh will be much easier this is true absolutely uh so I do recommend that all developers eventually try learning Vim motions on their editor/ ID at least the very basics of it that way you can start learning how to use the power Vim without compromising too much on setting up something you don't even know you will like though you will like it trust me please clap if you think this is useful information and the following okay hey clap I use neovin by the way well done Thomas Mora appreciate that clap Clippy clap this is good I think he makes a he makes the good argument this is probably the best argument for Vim which is just use the Motions I think that's good use the Motions you don't have to use the Motions but use the Motions if you want to have an efficient text editing if you just don't care you don't have to care but I would argue you should care you should care because you're going to be doing it for effectively the rest of your life you might as well use the thing that's the easiest right configuring neovim is a THX harder than configuring vs code or sublime or Zed I've Rage Quit numerous times starting with Kickstart is literally the first time I've actually been able to get past the config and give him a real shot that's completely fair I think for me it's the other way like for me I think I probably have like a little bit of an anchor bias here for me having a script to configure feels easier than having a bunch of Json options I always have a hard time thinking about things in Json options right but I think that's fair room time take today I have a very room time take today on this one H this will be the last Vim article I'll probably ever do just because h the name you know the name the prime okay why okay why use this why this over this why use Harpoon over telescope buffers it's very easy okay telescope you could do you have the fuzzy find your way into it uh Harpoon is meant to be oneclick go okay they're different they're not meant to compete with each other I did not write Harpoon not having telescope I wrote telescope or I I used telescope and wrote Harpoon as what I want okay Harpoon is good Harpoon is different than telescope they're not the same they won't be the same they're never going to be the same a genen