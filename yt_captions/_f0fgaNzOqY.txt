software Engineers hate code okay Dan Conwell do you know that I actually had a really good friend named Dan Conwell it is completely strange to see someone named a friend but this ain't him the same this ain't the same Dan I know okay there's a different Dan what are the chances oh Dan Cowell okay so I have this thing where I insert letters in that don't exist this is the best kept secret of software engineering profession Engineers hate code especially code written by other people I mean he's he's not wrong okay Dan's not wrong I just want you to know that right now Dan Dan's not wrong it's why we love working on Greenfield projects so much no code no maintenance no headaches I mean I again I not wrong I I'm just saying the sounds fairly correct uh ever wonder why microservices took off in teams of all sizes micro service architecture is the perfect way to pretend that the code you wrote last month is no longer exists now that it has been stuffed into a container and tucked behind a load balancer it's a service and we can all forget about it until it breaks then we deprecate it as Legacy and replace it with something new Rolling Green Fields Forever let's go it's so true it is so good I got a question about how one of your dependencies let's say I got a question about how one of your dependencies work you could look at its implementation or the test Suite but most Engineers prefer to go to the place that everyone congregates to talk about but not look at code stack Overflow is a great resource for finding the code needed to solve your problems without having to look at a lot of code yourself sick bird dude press one in the chat if this guy's talking about you just press one in the chat if this is it's okay I know there's a lot of you know what you know what I see I see about 30 40 people telling the truth I also see about 1770 people lie right now uh I'm sure you've been stuck for hours begging your colleagues to review your pull request why do you think it's taking so long you're asking them to do the thing they hate most look at someone else's code I mean to be fair Dan it could be the other thing that went wrong your pull request happens to be 700 changed lines spread across 14 files maybe I don't want to look at your code because you your Coast huge by the way right now I have a PR I kid you not 10 000 lines changed right now ain't nobody reviewing that one oh you know what happened we had to go to a V2 version of of a data source and it changed every single way you request data and every single name of every event and every single property of every event full rewrite that's all I've done for the last week I just fully rewrote it and I feel like a turd I should have just rewrote it from honestly I should have just rewrote from the ground up would have been so much better but instead now look at me all right anyways most people reading this have uh at one point or another approved a non-trivial pull request with a simple yes yes you've got tagged in on a bad day and didn't have the time to take a proper look at the code written by someone else you have work to do who hasn't looked good to me yet who hasn't done this ah good enough if honestly if if any change is longer than 150 lines I just say TL like uh too long didn't read I'm sorry or congrats like that's it that's what I say now because I'm not gonna say it looks good to me because it doesn't look good to me it looks like horseshit to me I don't know what it says sorry or congratulations only one thing can overcome Engineers hatred of code their love of writing code software Engineers will lock themselves in a room and do nothing but write code for hours some forget to eat sleep or poop a notable engineer's online invest hours of time writing about their code or about how they write code paradoxically Engineers love reading this stuff look at what we're doing right now if they've never read the example code attached I always skip over the car oh dead dead are you a Betty desert dad he's a Benny Jesuit that's the only possible answer okay it's the only possible answer okay he's the what is it the quiz art hadarak is that what this guy is I swear he's seeing into the future uh meaning of all kinds let's see hold on notable let's see meetings of all kinds Technical and user documentation testing post-release monitoring refactoring all are common sources of frustration that cut into valuable time that could have otherwise been spent writing code Engineers will spend enormous efforts learning or building tools to help them write more code in the past couple of years we've seen an entirely new generation of tooling emerged I can actually write code by itself turning 10x Engineers into a thousand X engineers asterisk use AI write stupid code faster with less thinking scientists observing engineering using AI in the wild have seen them writing 100x more slots per hour I think this was a GitHub GitHub tried to like GitHub tried to say that the new like they've been measuring code output and like 50 some percent of all code written is now written by AIS via and then you're then you have to ask yourself two questions one how do they come up with that number and two man how did they come up with that number you know what you know how they came up with that uh number well let me tell you buddy vs code AS Telemetry man where do you think they're getting it from senior Engineers have learned through hard one experience that writing code is the ultimate diminishing return they know that code becomes Legacy the moment the first byte is saved disk absolutely the Rolling Green Fields of their youth are happy delusion distracting from the cold hard truth that all code demands maintenance they have felt the pain of unmaintained system breaking at the worst possible time which is pretty much every single time it breaks this is a fact this is a fact of Life uh there are a limited number of hours in the day no the more code that gets written the more things that are to break oh my goodness this is so good the more those precious hours will be taken up by maintenance the only logical course of action is to minimize the amount of code in production at any given time senior Engineers passion for writing code has been augmented with an even stronger desire to delete it my favorite PRS are the ones that have more red than than green we actually had like a contest to see who could who could commit the least amount of code and it's not that and we all have features to build right we all had features to build and it was all about who creates the least amount of code was the winner it demands no maintenance it causes no downtime it requires no testing senior Engineers understand that unnecessary code should be eliminated at all costs and new code must uh prove its worth before being allowed to live this is part of what drives them to tour or over other people's code and provide meticulous reviews this isn't to say that senior Engineers are cynics uh there's still Beauty to be found in creating an elegant solution to a complex problem the joy of creation hasn't diminished but it has been tempered by an understanding that less is more and that every line of code they write comes at Cost senior senior Engineers have extraneous or hate extraneous code they hate seeing time and effort invested into building yet another solution to an already solved problem the hate code that doesn't need to exist code that isn't providing value okay so now this on the other hand I'm having a hard time I'm having a hard time with this because I don't believe this the problem about the term senior engineer is that I mostly Define it in perspective to experience and I've seen a lot of people with a lot of experience F that fans get the hell out of here Chesterton uh because the problem is is that engineers and I've seen and I've seen this a lot specifically senior Engineers have a sickness and the sickness is called not invented hair syndrome and it spreads that's the thing about this is that it spreads faster than any other sickness I've ever seen you get one engineer that catches a little bit of not invented hair syndrome and all of a sudden you have a team you have a corporate initiative you have buy-in all of a sudden you're inventing something that doesn't need to be invented because there's one small thing that didn't fit your use case dang it where is it anyways if you look at some sort of reactive sockets thing you'll actually see code I've written for reactive sockets you know why because I I too have had a little bit of I've been affected by not invented hair syndrome okay okay it's hard it's hard not to be all of a sudden you find yourself doing things that maybe you shouldn't be doing it just happens probably speaking directly into my soul with these words amen I know be mindful of the cost that your code encouraged don't write new code when you can use improve or fix what already exists if you must write new code write only what you need to get the job done understand your tools in the system your code runs on Leverage the features of those systems to minimize the code you need to write and by extension the cost that imposes on your team and system dude this is such a good thing I cannot tell you how many people I've seen in my entire lifetime write a script in node to do something you can do in 25 characters on the command line it is shocking how many times you see tools that exist because people can't use xargs or parallel gnu parallel learn to use gnu parallel and the standard in and your life will actually be a lot nicer the amount of stuff you can you can do just with basic I mean we're talking about meat and potatoes knowledge of awk I'm talking about like print one two three four and then passing in like an FS or an RS right like not a lot we're talking about like the most basic basic ones your mom has a nice standard in should see your standard out um dang it you lost my train of thought with that phenomenal comment now I can't even think it is such a good one but either way learn your command line tools okay xargs good new parallel said awk even just basic we're talking about the basics you don't have to get fancy at all grep find my mom's standard in like just learn them because they're gonna be valuable you're gonna use them and you're gonna be happy JQ JQ is such a great simple example JQ is so good dude just just check this out okay here we go we're gonna go we're gonna just create Foo and I'm gonna put in here three things okay watch this uh hello is five and I'm gonna go like this okay there we go we got we got a little bit of something going on right here dude you could do uh what is it called Foo right that's the thing we can pass this into JQ right Bam Bam Bam Bam Bam you can do things like this did you know that you could just go like this hello is greater than seven look at that like just you don't have to know a lot of JQ right here I'm not asking for a lot of JQ I'm just asking for a little bit of JQ right just like a little bit like not even a lot if you go if you do that and you go into here oh my goodness uh uh I don't know why I just got confused there ID uh is 69. um ellipses what did I just do there I don't know what I just did uh ID is uh 69 there you go uh 70 71 72. okay you can go on that and then you can even pipe this and it's just select out ID whoopsie daisies that's not it that's not that that ain't it that ain't it just hey just let it go I don't know how to do that so I'm just so stupid that I literally just take this pipe it into another JQ and just select that ID now we just have 72. I just only grabbed 72. that's it first try 70 like I grabbed out the ID of the one that's greater than seven right how great is that now we can do it again we can do the one that's how about greater than six look at that look how stupid I am I didn't even do it efficiently but even just knowing these things exist can just make your life a thousand times easier right it's fantastic I didn't build a database I just used simple querying to get data out you know how many times this will solve your problems just know what's available stop writing these crappy programs and boom you'll crush it right you'll love your life you'll like you'll love like it's so much better sorry I just get so passionate about this like understand your tools because you know why the reason why I get so uh passionate about this because I was the person on the other side of the fence I was the person that said why is this fence here let's tear it down I hate it it's stupid it makes no sense why would anyone use Vim I literally said that a bunch why would anyone use Vim Vim is stupid it makes no sense only losers use them why would anyone want a program on Linux why would anyone want to do these kind of things I was that person okay I programmed C sharp in my visual studio with resharper I look down on everybody I thought they're dumb I thought netbeans at one point was the greatest thing ever you know this happened okay and then all of a sudden I realized I was wrong I was wrong one day when Anders back in from Netflix I was like hey Anders backing how does this thing work in Netflix over here and at that point I picked up Vim motions because I liked the video game so I was getting pretty fast and he was just like oh oh you want to learn about that also he's just hitting letters on the command line flying through things and getting stuff done so fast I've never seen anyone move with that speed in my life and I thought I'm doing it wrong I'm wrong I'm the person that's wrong you know why I'm wrong because I can't do what that person just did what he did in 30 seconds would have taken me 10 minutes which means that I'm doing it wrong I accepted it I changed he was using emacs I tried emacs for about a year I just like Vin better what's his name Tom Anders okay classic Netflix on my team is pretty much just filled with with with scandahuvian people I don't know what happened but they they all they all they all speak a language I don't understand their names are all like Anders and yon I don't know what's happening it's fantastic um anyways the name is the primogen