okay so today we're going to follow a little ball about uh this item about mel and about real programming what i should have said at the very start is that uh these techniques of real programming and real programming is in quotes here is really very bad it will get you fired from most companies these days because most people could probably write these programs but they're very very difficult to understand and read back and that includes yourself about two weeks after you've written the program it's almost impossible to work out what you've done without scratching your head and as most commercial programs are read many more times than they're written it's important they're understandable and not taking liberties with them by doing these strange tricks so today i want to talk about one of the second tools in the armor of the real programmer in this case mel and again not something you should ever do because uh i'll explain why but there's various disasters that are waiting for you so this one is about self modifying code so what is self-modifying code it's a program that can change itself so it program will just go through executing instructions in memory but there's perhaps no restriction necessarily on the fact that you may go and change those instructions so whilst you run through your instructions the first time the program may go and change those instructions so eventually the program looks nothing like what it started out as so why might you do this there are a couple of possible reasons why you might do this and they're almost always in very strange and weird conditions so typically you should never do this so the first case is when you're in very constrained environments and this may be such as booting up a computer typically on a computer boot you are allowed to read a few instructions from either the disk or a cd or a memory stick or something like that you you'll get just a few bytes read in by the operating environment and you have to do something with those few bytes to load in the next section so this is what's known as bootstrapping often this will include overwriting the instructions you're currently running to write a program that will load in the rest of the operating system so that's a possible case not very common that you will need to do this sort of thing there are other occasions where you might need to do it in very constrained environments and if we go back to mel's story he was a wizard doing this sort of thing the other main place that this is used these days also is a nefarious one which is computer viruses computer viruses often disguise themselves by creeping into your computer in some encrypted form and then decrypting their code and then jumping into this decrypted code so even you if you get a copy of the virus you can't work out what it's doing until you manage to decrypt it so this is just another way of hiding things there are also things like trojan horses that also rely on corrupting memory and then jumping into the middle of it and starting instruction from there so those are the two cases that i can think of where you might use it and one of them is particularly nasty reasons why you shouldn't do it the first is it's almost impossible to debug it's because you you start off with a program on this side and your running system here and very quickly the running system bears no relation to the program because it keeps getting modified so if you're trying to work out what's going on this starting code isn't really going to help you because that no longer reflects what's actually running on the machine the second is that you may not be able to do it at all in fact modern operating systems usually mark the code that is uh full of instructions as read-only so you can only read the instructions and execute them you can't actually go and change them and this is particularly because viruses have done this thing of actually changing code so if you restrict your uh code sections of your program to being read only then you can't have a virus go and change the program under your feet so you may well not be able to do this at all particularly in modern operating systems they protect you from doing that and third problem is that modern computers again for efficiency reasons they they want to do things in the normal way that you would execute a program so part of the execution environment is to pull instructions from memory into a cache so they're local and ready to run and then they start getting loaded into the cpu and whilst the computer is executing one instructions it's already starting to decode the next instruction and this is a whole pipeline that is getting ready so everything is in a sort of a sequence so that it's ready to execute as fast as possible if you go and change one of those instructions then you wipe out all this uh this work that it's done if you go and change an instruction it has to go and reload the cache because it's now changed uh if it's halfway through decoding and instruction ready to execute it it might have to stop that so that this can stall all sorts of uh issues so that's another reason why we're not encouraged to do it so with that let's go on and have a look at some so let's just uh to begin with have a look at a basic program so this is about the simplest hello world program i could write using no standard libraries or anything just raw operating system calls and if we compile that and run it you can see there it produces hello world but what i was interested in is if we actually um dump out the binary of this okay we have dumped out what it actually contains and you can see here it's disassembled it and this is the actual program we won't worry too much about it but this is the assembler over here and this is the actual raw binary the instructions so 55 would be a push register bp onto the stack but you can see here really what i'm trying to illustrate is that these are just numbers here so there's a 55 here at 48 and 89 and these are all hexadecimal but it's quite possible for you to have a program that could instead of moving this register from here to here it could move a number from here to here so we can change the 55 for a 48 or whatever else so this is how you go about writing a self-modifying program that some of these instructions will go and change the instructions that you've actually already written so that is why it gets quite complicated because this this program continually changes now we could actually go and write one of those but uh i'm not particularly good at assembly language anyway so i thought instead we'd take a different world example programs have been described in various ways but one way is equate it to a recipe so here i've got a recipe for victoria's sponge i think it is this is how you might lay out the equivalent of a program so recipes have quite well defined ways of laying out now and most people understand that and they know how to interpret recipes so typically you have a set of ingredients here we've got sugar butter eggs self-raising flour baking powder and milk and then a set of instructions with what to do with those so you can think of this as almost the data and this is the instructions so you follow the instructions through and you end up with a cake now instead we want to look at something a bit more akin to the self modifying program this would be something a bit more like this so it starts off looking a bit like a regular program so we start with two tablespoons of milk 140 grams of flour one egg and one teaspoon of baking powder and we set the oven to 170 degrees and grease is caked in but then it gets a bit more complicated because then it says if it's after 3 p.m let's add 3 more eggs and 100 grams of butter and 100 grams of sugar to the ingredients otherwise let's delete the baking powder from the list of ingredients and add 180 milliliters of milk to the ingredients and actually also turn up the oven by the amount of flour divided by three and then next if there is just one egg swap the cake in for a muffin tin otherwise add 60 grams of flour to the ingredients and then we have some more instructions mix the last two ingredients add any remaining eggs add any remaining flour and so on and cook for 10 minutes plus two times the number of eggs used now perhaps you can get a sense of this that although it starts off as a sort of regular recipe you actually got no idea really how much of any ingredients or indeed what ingredients you've got to use because it modifies them as you go along you've got an extra totally different thing we've got butter here that isn't actually mentioned here we've got sugar that's not mentioned and although it says one egg here we find later on that we need another three more eggs so it's very difficult to work out what this program is doing and it's quite difficult to write this program in the first place and to get it to come out into something sensible but i think if i got it right this will either make a victoria sandwich or a yorkshire pudding so you can see it's quite compact in that we have one recipe that can produce two different things but actually it's a nightmare to actually understand to work out what's going on here what ingredients you need what temperature of the oven would be and what it's going to produce you don't know until you're actually running through the program this would not be a great recipe to interpret it's much easier to go back to the original type of recipe which we all know and love and this is also true for programs if you follow the sort of i'd say the recipe for doing a program that you you set out your data then you run through the instructions and you don't modify the instructions it's okay to have conditional parts in the instructions but you don't go and modify them then we all know where we are really so just like this is the right way to write a recipe unless you can think of very strange conditions you would not write a recipe like this even though it might be more compact and you can get several recipes all in one tiny 4x10 card or something like that and then it would have to spin all the way around here before it could pick up the next instruction which was print b and this he could work out was enough time for the that is a huge problem if you go to a website you know you don't see the ip address right on your browser for example you just type in