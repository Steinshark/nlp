now with arduinos and raspberry pi's if a won't talk to b they jolly well will if you stick a raspberry pi in the middle of them just write a bit of software to convert that to that and of course such as the performance of this modern hardware now and such is the range of its networking capability that you can do huge amounts you're not compromising the overall quality of the chain in any way i mean you know your raspberry pi solutions are really very very good so what did we do in the old days if hardware a wouldn't talk to hardware b or it could even be the software a produced by some machine had to be converted into another software standard for some other machines so whatever i think my introduction to all this back in the day was when we at nottingham decided to follow in the footsteps of bell labs have our own typesetter we couldn't do it exactly the same way that bell labs did otherwise we'd have been in court before we knew where we were but it turned out that in the gap between bell labs doing it in about 1979 1980 and as doing it in about 1983 that things had come on with this particular typesetter now we're back in the era that yes laser printers had been invented they were there at xerox park hp knew all about it it was a technology waiting to happen but it hadn't quite happened yet and in the very early 80s if you wanted to be an early adopter of a laser printer you'd be paying maybe 15 grand for resolution that was maybe only 300 lines to the inch so typical early adopter problem yes it's the future but the standard of it isn't fabulous at the moment and it's darn expensive for what it is and this was why we were caught when deciding which kind of typesetter we wanted and part of me was saying should we wait another couple of years three years maybe for you know laser-printed technology to improve sufficiently and the people doing the project with me principally george the mass consultant who wanted to typeset beautiful mass papers now we were in the daft position that we had to adopt old technology to bridge the gap we were sold the future for our top selling they said this this this omnitech is wonderful it uses laser technology it was a very early very high quality laser printer but it's an example of don't let the wrong industry invent the future because they'll get it wrong what they were obsessed by was the traditional typesetting going all the way back to hot metal and then coming forward if you remember through characters as film strips characters as on an ultra high definition category tube yeah our customers will not accept anything less than 970 dots to the inch but when this laser technology started to be developed by myogentala they found that really it was happiest at 300 dpi and you can imagine our customers will not accept 300 dbi so we must drive this technology to the limits what they ended up doing was having ultra finely divided toner ink and special glossy paper that you had to use not ordinary a4 or u.s letter out of a packet oh no have you got some of that what some of the paper yes should we have a quick look is it possible should i bring it yes this is the actual paper output everything from the omnitech and it is a bit of descriptive prose about the omnitech you see which is all very useful and when you rub your finger over here very glossy finish and if everything was working and set up beautifully it was actually a really rather commendable effect and they claimed her to get 720 dots per inch and even that was just all some of our customers won't like it because the 202 using the previous generation technology could get 972 dots per inch so we're compromising our standards already but they couldn't drive it any higher than 720 even then it was a nightmare it was like i always thought of it as being run like owning a very very very expensive car like a oh i don't know a bugatti or a dozen but or something really way out that is fine but it needs a complete strip down and total service after every 100 miles of usage this was the same we found that ideally it was happiest if it was cleaned and totally stripped down and done at the end of every day ready for the next day you know and it would just as a and it wasn't just us it was customers in america and so on reported exactly the same problems so we had to give up on the omnitech and we had to go back a generation we had to ask uh liner type to suppliers with elenatronic 202 which we've also talked about in the past previous generation because it had a high resolution cathode ray tube inside it it was slow but it was produced good quality output but it was on bromide film or bromide paper it needed developing it needed fixing all of that hassle but we did it and it worked absolutely fine so i hear you say but you were driving these things not with uh lana types own software you of course were using unix t roth and eqn because this was even just before don knuth's tech it was happening just about the same time as this but actually this was about a year or 18 months before it so we use brian kerning and zqn for type setting mathematics equations everything was hunky-dory but there was i the manager of the project thinking all of this t-roff type-setting stuff is happening on the pdp-1144 which we've bought for use by the examiner's department when we eventually hand it over because all this i remember this we said this in the last video which was a few years ago but if you were trying to typeset the exam yes we were trying to typeset all the exam papers for the university of nottingham because we were being charged by outside typeset companies eighteen thousand pounds a year they ignored the dead easy english and history papers which were perfectly straightforward they concentrated on my dear friend george's mathematics papers of which there were lots which they started rubbing their hands and saying oh this is a job for a professional i can feel sums of money like 10 pounds of page coming here you know and all this kind of stuff so yes that's what we were trying to do but and in the end we did succeed but one of the big problems was that either of those typesetters the omnitech or the 202 wanted to live in a world of everything being done the mergantala liner type way in other words you didn't go to outside suppliers for terminals you used a corer text preparation terminal supplied by mergental aligner type everything was like a special build for the particular community that it was in the era of generic machines and pcs was wasn't far away but it wasn't quite there so we were very non-standard those typesetters wanted their input down a parallel port now some of you older types out there will know that there's a printer parallel port on old-fashioned pcs but back in this era there was no compatibility about how your parallel ports work so what you're doing basically instead of sending eight bits of a character bang bang bang bang bang eight of them serially you presented them on eight parallel wires that's all you're doing so in principle you make it eight times faster because when you say send you're sending eight times as much information problem is as many of you know you only need that parallel cable which has to be wide enough now to maybe 16 wide to take eight bits going in and a reply of eight bits coming back ribbon cable twisted differential timings on the different bits and you carry it because somebody's trodden on the cable it's not an easy technology and it all struck me as very significant that they did not develop the universal parallel bus to be high speed no usb serial is so much easier to cope with and the answer to go faster is make the dead easy protocol serial go faster don't mess about with parallel but we were there we had to mess with parallel i was stuck there with two different specs for two different parallel interfaces to lana type machines one had been developed in america one had been developed in the uk and of course they were completely different so what you did in those days no raspberry pi i got a guy called steve merchant excellent hardware engineer in our computing center to put me together a box running a z80 chip it's coming out of the pdp-11 and it's got the final if you like raw characters with some control characters that are to be sent to the typesetters to tell them to either change form change spacing or just typeset the letter a wherever you are at the moment so all of those things but they had to go in on this parallel port so i had to develop the software on a single board z80 that took that serial stream parcel it up into 8-bit parallel characters exeter you know in a wider buffer ready to go and send them through the parallel port to either the omnitech initially but laterally the atlanta type 202 you send off your eight bits you then pull the interface and say are you ready did you get that and it comes back and says ready so you're waiting all the time is it ready for the next character but it worked now the thing for me in that era was yes you had to have a hardware person to design that interface for you serial in parallel out the thing that i thought well this is great because i discovered i could just get away with it i thought will i have to write that stuff in that prom chip which i'm going to burn i i'll have to do that in assembler somewhere won't i and bernie no fortunately there was a thing called the whitesmiths c compiler developed by a team at queen mary college university of london i think and i was delighted to have it because they had got ac to z80 compiler but that was running on the pdp 1144 so it's an example of a cross compiler it's not compiling code for pdp dex stuff for use on this machine it's compiling code for a foreign thing called a z80 chip which will go down a serial line and end up being burnt onto a prom to run in that board and even for relatively everyday things i was doing like wait for the character to come in is it ready pull the interface send off the next character was that okay even for simple routine things like that i found it's such a relief to be able to write and see and not i mean i'm not ken thompson we are not talking about writing a whole operating system but believe me just the ability to write that simple interfacing programming c not in assembler made the world of difference to me but it just made me coming back again reflect that was the sort of level of of effort you had to put into interfacing foreign kit that didn't want to speak to each other did you have to test it on the actual kit or did you have a simulator no i didn't have a have a simulator which was why i had to explain to the examinations departments it just shelled out the best part of 35 000 pounds for the line of type 202 i said i'm sorry and you will think this is taking it over but i need six weeks to commission this thing i'm not ken thompson steve martin's not joe connor i don't know no even they took six weeks for their project which was arguably rather harder than what we did i said we need several weeks to commission this because when we are trying its interface saying how fast are we likely to be able to feed these characters at it because it's going to come back and say you've got to wait for the ready and the answer was it was comfortingly slow i didn't have any timing problems to worry about and it went bloodblood and by the end of 84 we really had using the 202 typeset the complete uh university of nottingham's papers all of them for the very first time in-house what then happened perhaps to complete the story is that after doing that for two years even george my consultant said you know these are only exam papers i do wonder if people would find them acceptable to just have them done on this new 300 per inch laser printer maybe people won't mind most people never noticed you know it was using times roman the math symbols were there the fact it was a bit grainy compared to the super duper bromine most people didn't care for that sort of thing and that's an example of how if you're wedded into a high quality industry you find it incomprehensible that the greater unwashed will accept a lesser quality than you do but of course that rules the world in a sense i mean laser printers are more like 600 dpi now aren't they so was that switching when you mentioned that that was switching to the laser the apple laser item yes it's actually saying well we've had the um the lanatonic 202 thanks you're a great machine they still continue to use it for very high quality jobs but frankly for the grunt work which is getting the exam papers done people thought it was a miracle they they would cheerfully vote for lots and lots more 300 dpi and do everything like that then wait a bit longer and get an even smoother looking version of an exam paper so i learnt a lot from that really about uh what level of technology do you really need and what your customers really want even though one or two of our number might have thought it to be how should we say abominable that they had such low standards never mind that's what we need that's what we use it's been i think it's been the death of many a specialist industry the idea of it's good enough it's like every car needs to be a rolls royce customers for cars won't accept anything less until the model t comes along and they're initially deprecated but then quietly people by them say oh well for what i use it for it's good enough you know an executable binary the net effect of slotting that t diagram against here slightly downwards is to show you that the c you've written gets converted into binary and the net output from this process it produces out a program that you probably store in the