so we're gonna ask single-handedly the most intelligent best answer website of all time stack Overflow for why isn't o camel more popular this was 10 years two months ago asked 14 years ago some  came by four years later and I was like I better end of this question it's not proper I've always heard that c is the language of choice to use for embedded systems or anything that needs to run at maximum speed I never deployed a uh or developed a fondness for C mostly because I don't like Point arithmetic and the language is barely run above assembler yep okay barely a run okay okay on the other hand ml languages are functional languages garbage collected languages and ocamel even has object model yet they have a reputation for being as fast as C they do 14 years ago must have been wild um ml languages have the abstraction anyone could ask for to write high level concise code yet it retains the speed necessary for writing high performance applications oh Campbell in particular can be used anywhere that c is traditionally used such as for embedded devices graphic drivers operating systems Etc by All rights oh camel should have taken over the world by now but hardly anyone heard of the language yet alone used it I think this guy clearly is the guy that wrote that he's meeting with the girl a real one and you wouldn't understand this is subjective question but why have ocamel and ml other languages remain so obscure while seeing other languages have become so popular well Juliet let's find out she goes to a different school she just goes to a different school okay question number one or answer number one the first answer is nobody really knows why languages become popular and anybody who says otherwise is deluded or has an agenda it's often easy to identify why a language fails to become popular but that's another question okay with that disclaimer here are some points that are suggestive more important first uh first the mature C compiler appeared in 1974. hey hey that's also like VI time baby uh the first mature o camo compiler appeared in the late 1990s she has 25 years Head Start C shift with Unix which was the biggest killer app of all time reasonable argument by the way we're having a banger going on today um for a long time every CS Department in the world had to have Unix which meant that every instructor uh and everyone taking a CS course had the opportunity to be exposed to see okay I'm on ml are still waiting for their first killer app ml donkey is cool but it's not Unix ml donkey's pretty cool uh all right see Phil's a niche so well that I doubt there will ever be another low-level language devoted only to systems programming oh that's interesting to see in our world right because you kind of have rust trying to get in there which I I think it's pretty good um but then you also have zig right Zig was you know didn't see that one coming uh let's see to see the evidence in favor read Dennis Ritchie's uh paper in the history of C from Hopple two I don't know Hopple too wow it's not even clear what ocamel's Niche is a standard ml's Niche is only a little clearer so ocam on ML have quite a few competitors where C killed off its only competitor Bliss damn wow people love C people love it okay what about this one here we'll move on from their very specific prescriptive one let's see about this one I think the problem with o camel is that it isn't too useful out of the box the eventual reason why people use a language is because it has libraries they need with nothing out of the box though nobody gets far enough into a project to realize that they need to write a library the result is a language with no libraries which makes it hard to write real apps I assume that's not true anymore right I assume that at this point O camel has a lot of stuff especially with Jane Street going so hard on it uh I think this is what ocamel suffers from I mean arguably today you know 14 years later we get to see o camel with like amazing tools it actually has a lot of good tools it has a lot of good things so far obviously but does it have left pad that I don't know you know I would assume due to the fact do to the fact that tail recursion is is the way you want to go left pad would be an easy recursive string concatenation algorithm algorithm uh I know and probably will be super fast super fast oh camel by the way did you see that ocam was like 69 times faster for the same server from that Jane Street one than their JavaScript one fantastic so okay almost pretty fast I know there's a work let's see there's work underway to change this with projects like batteries included come back here in five years and perhaps ocam will be more popular oh oh that hurts a little bit try 14. and it's just starting to shine aged like wine baby yeah age just like wine uh dude this is so good there are some exceptions to this rule Java started off with no libraries but son paid people to write them all in-house and then they Market the hell out of it Java certification Java specific Hardware Java books Java classes Etc then even convince most University to teach it exclusively even though it isn't a very good language to use for learning programming the result was popularity money can solve a lot of problems over in the functional language Arena we can see that Haskell's becoming quite popular dozens of Haskell programmers love the following statement this is so great I think most of the popularity is due to people like Dons that write useful library and never stop marketing the language every day you'll see a few Haskell articles on programming Reddit this keeps it stuck in people's minds until they finally decide I'm gonna try Haskell when they do they've become marriageless wifeless kidless they see useful things like web Frameworks object databases opengl libraries and XML processing libraries is this true at all pick pick pick is this true at all pick I demand answers how beautiful is the Haskell language hassler's over here like hell yeah hell yeah it's true anyways this is this is this is a beaut this is beautiful um all right let's see CL uh what's uh what's CL has many of the same libraries as Haskell and almost as uh fast but nobody talks about it so it feels dead indeed lisp why is there a pound sign uh is a much uh quieter than Haskell but lisp is still very productive language with a lot of libraries no other language has slime I don't even know what that is but marketing is very important and Haskell does it better than lisp or o camel and competes for the same user base finally some people will never get programming so breaking their mental model uh variables are boxes with values your code executes top to bottom will ensure that they don't use your language this type of programmer is a large percentage of the programming population so this further limits the possible user base of abstract languages like list Pascal and ocamel this is true maybe 10 years ago let me know when I can cabal install in ocamel library anyway just because I said something a bad about your favorite language doesn't mean you have to stop using it no need to get emotional let's go uh no I meant programming in general if I can't understand functional programming you probably can't understand the other Concepts either oh there must be deleted comments or something in here because we're missing we're obviously missing something in here oh wait why I pressed more comments and something appeared above I have to disagree there's tons of useful libraries and they're easy to deploy please visit this one Fred Frederick did you mean finally some people will never get functional programming okay don't buy this okay I'm almost plenty of libraries for basic day-to-day programming stuff and it's become more popular people would write more is that a truism if more people were writing okay people would write o Capital more don't you get it like yes yes I do every language started off with a few libraries thank you Kurt how about a link to these libraries call them out Frederick gave you a link in the first comment here's another for a quick way to see here's another Library you got him for a quick way to see what's available on Ubuntu type in apt cash search oh camel grep Dev less at the terminal without quotes of course this will give you at least 100 something libraries page up or down okay Carl hump provide a wide array of libraries I think John harp is reacting a little over the top but it is fair to say that there are plenty of libraries out there at Oak Campbell including opengl gtk curses CGI networking threads this is so funny why did more than zero people upvote someone who claims a language has no stable hash table implementation I can't stand languages that build in useless crap like regular expressions and dictionaries in them a language should be as decoupled as possible from libraries to keep it critically I just need a moment here I just need a moment here I mean I agree with the useless crap of regular Expressions but tossing in dictionaries man I love dictionaries who needs Libs we got I want to pone the lips okay classic see Guy this is Long Poke classic a language that relies on dictionaries to get anything done is utter crap let's go sh you can now opam install hundreds of Camelot libraries oh wow this was oh look at this this was a decade ago love me some dicks this dude is tripping uh is the mental model of flaw in the educational system we are not born with intuitions about how programs execute so yeah come back in five years and perhaps ocam will be more popular well that was prophetic all right we'll do one more let's let's do one more all right well this is just like stuff like that Juan let's see yeah I was really confused by this one okay so this is actually a good one but the fact it has a garbage collector makes it inherently non-deterministic for real-time systems that simply won't do so that was my big question I can't believe I forgot alerts uh this right here which was when he was talking about this originally he said I know C is great and all but why not oh camel for embedded systems I was like I didn't I didn't really get that because that doesn't seem to make much sense and I assume memory and CPU was even less 15 years ago than it is today potentially uh but sure sure but Java and PHP are popular what a day we live in and you can't use those in embedded systems used ability and embedded systems does not have much influence over language popularity got them um this is actually really really funny by the way like isn't it funny like so for those who type one in the chat if you were programming during this time 2009 one in the chat one in the chat if you're programming zero in the chat if you weren't or 69. or 420 or whatever number that's not one we got quite a few of we we have more ones than I thought were going to be in here I figured that it was just gonna be a bunch of twitch degenerates they're all 14 years old but look at this we got some ones in there let's go um yeah isn't it funny how things have changed Java really was the most popular language of all time uh PHP was so dang popular Java was so popular that people were trying to make JSP a thing and applets do you know what JSP or applets are well just imagine this imagine the devil had a baby that's it that's all you have to imagine because that is what an applet or jsps were okay they were awful they were awful they're just the worst thing ever they're just the worst thing ever and yet I wrote applets okay I wrote applets okay I don't want to say they're the devil itself okay I feel like that's kind of inappropriate but definitely some some lineage from the Devil well I haven't heard anyone talk about apples yeah I'm talking about applets right now Jay applet feels bad oh my goodness okay okay so this is also changed it's funny because you know the funny thing is everything that I'm looking at in here has all been solved yet o camel's not popular and I think the big reason why is that functional programming is not people's first language two people okay here's another thing that I think really is hurting the whole functional language push I want to listen to this one song again uh is that people think they're doing functional programming in JavaScript your writing functions okay there it's just you just got to understand the difference you're not a functional programmer okay just because you throw a little dot map on something and you toss it a function does not make you a functional programmer okay okay just okay you can use reduce great job okay doesn't matter um and so I think people get this like Concept in their head that they know what functional programming is then they go to functional programming and they're like what's a monad and why are we using the term product and I don't understand what's happening F this and so they leave you know they get the hell out of there and so it's just I think it's a very hard initial Paradigm because it just relies more on the maths versus when you're doing just like standard programming you just you just you just open up programming right right you just like open that up and just start writing it and it's very like that's why procedural programming is how humans think you do a you do be you do see you do d right definitely doing the D though uh and so it's just functional programming is just it's just harder you know it's just it's just a different feel so I'm very curious about that go to a and so yeah we understand go-to's we like nice constructs around our go to such as fours or breaks or continuous and so it's very easy to think sequentially like that um I have a function so I'm functional Java well Android came up Android Android came out during the height of of javadog that's why no I get it screaming in Lua exactly I really am gonna try to get oh camel more popular we're gonna try it because I'm feeling like I could love this language I'm feeling like I could love it but it's also really hard so we'll see we'll see the name is the primagen