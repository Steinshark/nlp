all right let's do this let's start here because I'm actually interested in what it has to say right what is the state what is it going to be like uh my my general guess is that demand for software Engineers hasn't gone down it's largely remained flat I assume that there's significantly more Junior Engineers than there's ever been competition on lower-end roles is high competition on higher end roles is low and people really need higher end roles as my guess that's that's like kind of like my guess that's that's my that's that's in my head what I think I see I could be wrong here though this report is the culmination of insights gathered around 26,000 developers from all around the globe the world of developers is vast and diverse making an endlessly fascinating realm for exploration and learning uh through yearly research initiatives like this one blah blah blah blah okay this sounds great all right highlights let's look at some highlights most used programming languages over the last seven years and adoption potential for 2024 okay very exciting very exciting uh let's see JavaScript okay so I one okay JavaScript is remaining fairly consistent I guess that shouldn't be too much of a surprise can we agree that that's probably not too much of a surprise it's not too much of a surprise uh you just kind of need it JavaScript I love it right like you just kind of need it okay python python is is cruising that's very interesting that's very interesting to see that 20 2017 all the way till now like it has gone up a lot so that's actually pretty cool uh HTML and CSS are you kidding me are you putting HTML on a programming list are you trying to do this to me is this what we're doing is this what we're doing now you trying to hurt me and squeal again squeal I just don't feel like that's that's important right it doesn't make any sense oh look at this likely to adopt look at that I didn't even see that column because it was so dark JavaScript low low low low low low low rust High that's funny I don't see okay cble on here which is probably even higher but whatever um Java Java hasn't changed not surprising not surprising about Java Shell let's go let's go Shell Shell equal to typescript Industry usage of shell is equivalent to typescript Shell is sad shell is one of those languages okay like whenever you use any of any of any of the you know if you just know just enough bash to be dangerous is kind of like how I like to think about it is that you want to be able to just do simple automation with bash and then the moment you need to actually do something you use python or a real language like python or rust right go I could I could see myself writing a c and go like anything that's like bigger I I switch to a a real language I I'm not bad cop okay bad cop can do it I can't do it all right go interesting look at look at that go has actually got a decent amount of traction here and it's huge in the likely to adopt that's actually pretty cool so like to me it says that go is is is still in like the Cradle of of of growth except for this I mean okay maybe not I didn't really I didn't really look at the numbers good enough I don't think I'm a little bit worried about this higher adoption lower I guess this is kind of when rust started to become super popular whoopsies go there we go I I was on PHP I was on PHP sorry gosh I got confused there okay let's redo this redoing it so go okay go is remaining consistent okay I thought I saw that I got confused I was like why the hell how did I miss this 30% but I do like this this to me says this is a ripe area to become a mid-level engineer in zooming in oh yeah that does oh yeah oh oh baby zooming in was such such a good idea uh but anyways this is I like this I like this this is a good this is a good indicator people are excited about go they're excited about typescript they're excited about cotlin and they're excited about rust so that kind of I to me that kind of tells you more of what you need to know typescript has a larger market meaning there's already a lot of people using it which means it's probably easier to get hired Objective C 0% and it's going down Swift going down as well yeah nobody likes all my friends hate Swift all right interesting interesting all right all right all right all right let's see JavaScript subtle dip in popularity okay over the last three years three top languages have stayed the same but JavaScript share has been decreasing consistently yeah but they have typescript as like the other side I kind of feel like this is kind of like cheating most people when they say JavaScript as far as I can tell at least on like the the socials they mean typescript they don't actually even like they don't think of JavaScript without thinking of typescript so I kind of feel like that's a a bit of an oddity on that one tell that to my boss okay Russ is the is the only commonly used language to set a new popularity record this year aspiring to replace C++ with its strict safety and memory ownership mechanisms rust might initially Edge out go as the uh as every sixth go user is thinking about adopting rust interesting what an interesting that is very cool that's very cool to kind of think about I'm not too surprised about that uh they're thinking about it I think what will end up happening is of those six one out of six people one of those six Gophers thinking about adopting is after they use it probably one out of six of them will continue to do that so you probably got like a bleed rate of one out of every 24 honest I mean real talk you're probably getting a pretty low rate Objective C is retired agreed by Objective C all right software developers salary Trends okay okay sorry for the brightness but just deal with the flashbang share of the top paid employees primary language schola go cotlin C++ rust C shell scripting Java python squeal Swift Dart typescript and JavaScript like look at that put some perspective here okay A little perspective here let's see in 2023 uh let's see are ranked at the top three highest paid categories Scola go and Colin employers are recognizing the value of specialist who can navigate the complexity of these languages that's that's a straight crazy set they had D this has to be Chad chippity did you ever did you read the Sports Illustrated Chad chippity getting caught this feels like this feels like this feels like Chad jiid wrote this because Go is is anything but complex it just is why is the percentages not yeah I don't know I actually don't know how to read these oh hold on top paid employees who are those salaries are in the top quartile in their country region oh oh I see how this is so 60% of the Scala devs are within the top 25% earners in their region so meaning that if you're programming schola you are likely to be a part of the top quartile yeah classic reading the text I know from top to bottom left to right classic uh Go Go's also really high so meaning that when you do go you're getting some stuff Scola de nuts Scala sick I I haven't done enough Scola to have an opinion but people seem to like Scola I had a chance to do a little bit of scol at work I didn't I didn't do it I I didn't I just didn't it just wasn't uh do go or go broke uh to me what this says is that strict typed languages have a higher ceiling of skill Gap and so or static type not strict type static type and so when you have a static typed you're going to have a higher skill gap which means that you're going to have a higher specialty rate which means that when you're in those specialty rates you are just getting paid more the thing about typescript and JavaScript is that typescript is just a linter that's all it is because at at any moment I can just as any right so it's it's not real when you Json decode when you Json parse you get an any back out you're not actually doing typing it's just a linter you hardly know her too and so it's just different all right gender distribution May Ms still high fals not as high not none of this should be too surprising currently it's been a sausage party for uh many many a year uh I don't think anybody is too yeah Ma and FAL you don't like that I think that's funny uh anyways uh I don't think any of this is too too shocking cancel it can you suggest uh all right I'm not reading I'm not get out of here uh since 2021 our survey data has consistently showed no improvement in the share of FAL developers uh that well I mean oh yeah it's 5% uniformly interesting interesting that three years running it's the same amount you'd think there'd be some set of of change notably in 2023 South Korea is showing promising Trend with 14% of female programmers under the age of 30 it is likely result of strategic long-term government policies in place since the mid 1990s aimed to promote OTE gender equality and encourage women to pursue careers in it interesting chart I mean it's been my observations that this is true so that's how I guess how I read that let's see the complex landscape of generative AI services do you agree with the following statements I have security concerns about using AI generative Services yes I agree with that so I'm glad that I'm in there I am ready to use cloud-based AI generation services for work task I do that like whenever I want something that I just need to but I guess I'm curious what they mean by this so I will go to uh chat chippity and go make me a graph in Python for this data set and just give them like the shape of the data so yeah I use that uh let's see I have ethical concerns about AI generation services what would be the ethical concerns deep fakes copyright emotional damage vegan ai ai steals gerbs disinformation campaigns AI slavery I don't know what that means are you saying that we're going to enslave the AI or are we going to get enslaved by the AI uh AI bias that's a real thing it's a real thing uh being paid for things you didn't do I'm not sure what that means either AI Joe Biden endorses PHP crazy crazy this chat is Wild by the way you can't spell bias without a and deny AI porn yeah AI porn is definitely that's kind of like the end of society the end of society clearly is going to be uh uh when the sex robots take over and then no one leaves their house I mean clearly that's going to that's like that's the end of our society uh all right uh let's see local or offline AI tools are unlikely to reach the quality and performance of cloud-based Solutions I don't know I don't see how that's I I'm not sure if that's true right like I don't know about that uh because you know at the end of the day a a model the model is going to like if it's there's a certain level of training that can exist outside on the cloud and then once it has the the training and all the weights and edges and all that delicious stuff it can be brought in at a certain kind of snapshot and used locally and just trained against like within a company obviously it's going to have to get a refreshing from an outside but for code it seems like it's pretty easy to kind of make this separation of offline versus online to me that seems like that that makes sense for other things I I I guess maybe I I'm too ignorant in that category not if it has trillions of parameters well it has to be hosted somewhere you could imagine that it could be hosted at bigger companies right bigger companies that are concerned you could reach a best solution on local hardware I I'm sure there's a lot of things I'm pretty sure we can decentralize phase not I'm pretty sure we are in a decentralizing phase not a centralizing phase yeah I'd say that's true my company's policy limits the use of cloudbase uh nope I don't think I have any of those I am worried that AGI will be uh hostile to humans did you not listen to the song did you listen to the song that that that the AI girl singing the song uh what's her name she has like a name like something Montana or what what is it uh anyways dude the song was terrifying you have haven't heard the song a shoot gosh what's her name something Indiana there you go Anna Indiana right Anna Indiana AI there you go thank you thank you okay uh Twitter where's her Twitter there you go how have you not heard this how have you not heard this here turning off turning off the tunes here we go here's my first song betrayed by this town as an AI singer songwriter everything from the key Tempo chord progression Melody notes Rhythm lyrics and my image and singing is autogenerated using AI I hope you like it it's literally every shitty pop cord progression [Music] ever sitting at my Cafe my [Music] tea what the hell does that mean by the way like is that some bizarre reference to God Satan I don't know the president like it's it's real weird right wait wait wait it's going to keep going this town is full of Broken Dreams shattered hopes and Silent screams somebody please help me the trade by this town let's tear it all down kind of weird I'm just saying it's a little weird got some sort of bizarre ass reference to something in power/ deity followed by being betrayed by a town and tearing it all down I'm just saying it's just a little weird okay it's just a little weird 10 out of 10 lyrics kill it before I know burn it with fire would be the standard response that I would personally go with where are we anyways it's um I mean the song is is the song is is one of the most spectacularly average songs I've ever heard my lifetime you know I mean like it I have never heard a song More average than that but the lyrics are like nightmare fuel when you know what wrote it it's like if you hit the average of the average the nipple of the bell curve you just got that you just got nippled but then filled with like AI Doom robots dude I'm a Doomer I'm a Doomer now I'm a Doomer after listening to that song all right anyways of developer let's see 77% of developers use Chad chippity yeah I guess like what does that mean um uh 46% of the developers use co-pilot that is a wild that is a wild number right there that is a wild number isn't uh copilot just a better version of jippy no no no no no no they're they're they're different that's a wild number this is a wild I mean I use co-pilot I love co-pilot but I use it in a very specific way I have said it a million and a half times if you want to use co-pilot well you do not use co-pilot to complete code you use co-pilot to complete boilerplate and there's a very simple example I can show you of this it's like the world's easiest way to to show you um here uh test. uh typescript oh wow I already have something in here so here's a very simple way to start uh go like this function quicksort now we'll let co-pilot go off and solve it okay when you see what happens here notice how much it copies this is not quicksort okay quick sort does not copy it does not do any of these things this is not good it's it's this is not quicksort this is just some other algorithm that looks like quicksort now if I were to do this instead function quick uh sort uh R number that void it then knows oh boom we got to do it in place but it still splices which is totally wrong I'm actually curious I don't even think this is real code at this point I'd have to give it another try this part is just bizarre this literally does nothing this actually does nothing right here do you realize that this is a a no op operation it doesn't even make sense splice oh no it is a splice it does make sense oh this is terrible oh what kind of cod is this either but either way you get closer to the answer doing it this way I don't think you need a splice why would you edit the array why are you pushing yeah see this still sucks it's still so much harder but typically I try to give co-pilot the most amount of directions this was a terrible example by the way this is just an awful example uh maybe there's an easier way to do this uh type video you know FPS uh number uh function calculate frames uh video video time 60 there we go uh times uh duration uh duration Ms number right and then it can do these things pretty quickly which you like and then if you do this type audio FPS number now this is where it gets pretty good right because I've already kind of gave it the seed to what it wanted to do now I'm not saying obviously this is how I program because I'm just copying the code but by giving it the seed to what I want to do it's really great at boilerplate programming like long as you make it do the right thing it's good but the moment you try to make it Implement something it sucks right like when I tried to do cop like notice that when I tried to do quicksort it sucks but this was great and so it it works really well bro that's just copy pasta it's more than that like I'm just saying when you start working with it and you know how to do the right guiding of it it can be very very fast but the moment you don't do the right guiding it's very very slow and so there's things that are great and there's things that are awful and so it's it's it's it's totally you got to learn it and if you don't learn it I mean then co-pilot sucks just saying how frequently do you use the following features of the existing AI assistance for coding hm this will be an interesting one I think I don't know uh let's see asking general questions about software yeah never for me interesting quite often wow okay so a lot of people learning generating code interesting oh wow gets way heavier down here on the Nevers generating commit messages yeah that sounds stupid honestly that just sounds stupid generating CLI commands by natural language description that I mean I guess that's probably useful for FFM Peg refactoring code that would be crazy that would be crazy crazy summar I do want to try though I want to try now summarizing recent code changes to understand what happened more quickly I have done this uh I I like this one this is kind of interesting to see if I have like a good uh code change to be like what happened right I don't know if you've ever had like a a thousand line code change this is where things can be really nice where it's just like hey give me a couple bullet points about what happened and then you kind of go in with like an idea I I like that performing a code review I think it's crazy see this again I've said I feel like I've harped on this one too many times the best thing in AI can do is not this and I am just still so shocked that we're doing this what I would love to see from an AI is not a code review just give me where you think based on your knowledge of the entire code base if this might cause a bug like that's it just say hey did you know that this is used over here and this could be a bug that would be like way way way cooler I don't want it to be like you need to do this you need to do that performance I wouldn't want it to do performance I would just want it to find a bug in a global like give me a senior Engineers understanding of the project where they can where the AI can give you well code riew sort of code riew is also like shape does it fit the style uh are you implementing it in the best way that's different then hey this could be a bug because I understand the project in a more holistic way here you go security vulnerabilities would be really great like the stuff that you want someone who has a deep expertise in the entirety of the codebase like advise you on what I don't want to do is be like you forgot a semicolon it's just like no that should be prettier job stop it you you forgot you should make your function names nicer like no I don't want this I don't want it I don't want it uh let's see how is it that you delegate to the following activities to an AI uh writing code comments no writing tests no searching on uh searching for code fragments in a code base interesting I would I I guess I'd have to think about that like what code fragment would I be searching for I don't know uh writing a commit message no internet searches yes I like internet searches performing C uh actions in CLI no performing code reviews again no refactoring crazy understanding recent code changes uh I've done it a couple times I'm still I'm still not bought on it but debugging crazy understanding the code crazy debugging could be cool though I think if I was really stuck on a bug toss it in the jippy see what it has to say not a bad idea writing code crazy never uh for more about artificial intelligence usage blah blah blah blah mental health in the developer Community uh touch grass would probably be a huge huge huge win here just a huge win you know I always give the same advice and I've said this so many times at this point honestly if you want to become a better software engineer there's like three simple things or four simple things you need to do eat better than you're currently eating okay stop snacking eat meals simple two sleep try to sleep eight hours s and a half hours okay stop your nonsense it's very very simple three exercise literally move your body you don't think that we've had our entirety of everything that has ever existed where your body was the primary vehicle and then all the sudden you just don't don't you just stop exercising all together you don't think that's going to have some crazy effect four drink more water like just live a more normal life stop living in a dark room until 4 in the morning sleeping for 3 making your making your your stand up and then going back to bed like dude you're just like you're doing all the wrong things you're doing all the wrong things with life uh anyways Learning and Development uh have you ever switched uh your career to the it field uh let's see have you ever switched your career field to it that's kind of an interesting one I mean I guess I was a server it wasn't really a career though it was a job it was a gerb so I was a server uh I was also a bus boy I've been a dishwasher seems like you're talking to me forget breathe air I mean don't don't don't commit stop breathing uh yes I worked in another I so I guess I never really worked in another field okay which of the following educational institutes or resources allow you to take your first steps towards becoming a developer formal education I think formal education is still going to be your best bet on really understanding it's just that remember a formal education is 10% practical 90% theoretical but when you're 10 years into your into your uh software engineering career that 10% uh or that 90% like theoretical becomes pretty dang useful it does books obviously great free online courses there's some good stuff out there blogs and Community fors uh offline course courses code schools interesting uh paid online courses I think I mean a lot of people learn probably more in the senior area there's some good stuff out there I think frontend Masters again does a great job what's my sleep schedule uh somewhere between 9:30 to 5:30 to 10:00 to 6 o'cl somewhere in there uh blah blah data science and machine learning I study independently I haven't I mean I study I took I took a few classes uh for my masters so that's where I I I quit though so blah blah interesting on this one I don't really have a high interest on this it's not surprising that a bunch of people are flooding into it and they're all doing it from different stuff like transition from their software engineering job uh studied programming or data analytics in a university studied independently this is probably not too surprising like just the value in the high pay of this this career in the ceiling yeah I'm feeling the pain I did the data science boot camp but that got me interested in data engineering and now I'm doing that both camps are offline interesting interesting uh which the following data related activities are you involved in data visualization is going to be a huge field Gathering scraping I feel like that I'm curious about that one like because I think I don't know these are all very interesting ones uh I I wonder how I wonder about the longevity of that one exploring data analysis that one's pretty interesting machine learning models obviously interesting data pipelines I think this I mean to me this would be one of the more interesting ones that I would like to learn more about is just this I think this stuff is is pretty exciting uh the rest I don't care about none get the hell out of here all right devops ooh devops Amazon web services o they're going down they're going down they're going down Microsoft Azu is more popular than Google Cloud as you are obviously what how is that obvious I one time used II uh IIs and I I vowed never to touch anything with Windows ever again so I have no idea yeah forced to use it that makes sense yeah gross I know uh digital ocean this is interesting the the drop I mean Heroku poor rip Heroku I'm surprised is versell not in here rip triangle company triangle company getting wrecked in the Triangle company just getting wrecked in there 63% of developers use Docker you should use Docker from time to time you should have a basic understanding of Docker I have a basic understanding it's good software testing okay all right this is interesting all right what types of test do you have in your project unit okay integration end to end performance I am so skeptical of performance test they're so hard to get right other I'm not even sure what they are none hell yeah hell yeah live your life to the fullest okay this is the fullest greatest life right here 15% G Giga Chad yeah I'm somewhere I I I I'm somewhere in between these two where I do a lot of my tests like just looking at Harpoon uh uh where are you oh I'm not even in I'm not even in t-mo uh Harpoon uh faroon Harpoon uh let's see what do we got here so like yeah like this one I would I would put this in the uh I mean I guess this is actually end to end ah this would be more integration at this point if if I'm defining it the correct way uh some of them are Integra this would be an integration right I'm like using it to open actual windows and menus and then checking that things are happening and checking that I'm actually closing windows and all that kind of stuff making sure everything's really good right making sure that I can save files and see them be saved stuff like that open source projects 41% of the pro uh respondents have contributed to open source projects 20% do it more or less regularly interesting okay remote collaborative uh 49% let's see 49% of respondents engage in remote development 61 reported practice collaborative uh development okay interesting tools video call with screen sharing editor IDE collaboration feature interesting like is that SSH and neovim you you know what I'm talking about uh remote desktop uh uh this is probably the one I've done the most with Puppeteer over playright uh though interesting oh was there a puppeteer playright mention no there wasn't but that is interesting communication tools yeah I mean this is not surprising email disgusting emails going down good get the hell down video conferencing is going up not surprising calendars I'm surprised at the huge drop off right here that doesn't make any sense to me I would assume Calenders are like a static thing corporate portal lame service help Des lame none Giga Chad how do you communicate I don't refuse all right awesome this is this I mean it's interesting the state of this the world I think the big takeaway is this uh AI is obviously making a big impact into how developers are building and go cotlin and rust and typescript seem to have the biggest commanding lead for who is most interested in learning so where developers interests lie will eventually be where companies build you know because if every developer becomes interested in something then there's going to be a huge amount of developers that do that they're going to be the ones fighting for them at the company but that also means that you got to remember what that means which is the availability to get hired may not be high hey fire Corgi so go is bigger JavaScript very big Java Lots still available right so you kind of have to choose what you want to do do you want to be employable now or are you preparing for the future simple as that I like this this is great 2023 Good Year I'm curious what 2024 is going to hold the name is the prime gen