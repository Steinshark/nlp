this video I'm giving you a full list from zero to complete Mastery in Python of everything that you would ever need to know to truly Master this programming language and I will give these topics in a road map format that you can also download down below in the description so that you can then just take that list and start going through it from start to finish on your own pace and by the way you don't even need to learn everything in this list to get a job as a python programmer we can do is learn up until a certain point enough to get a job and then keep learning through the more advanced topics as you progress or maybe you're already at the point where you're already intermediate or Advanced and you really want to just skip to the more advanced concept that you might have missed or that you might not have learned yet if that is you everything is time stamped down below so you can skip over to whatever sections you feel like you are lacking in before we get into the video If you're looking for one program to take you from completely zero or wherever you are right now with your python skills into a true Master python developer that teaches you everything that you need to know to get hired including the non-technical skills to get hired and how to pass interviews and everything that you would ever need then I also have my paid program python developer boot cap I know it's pretty expensive for some people but if you are the type of person where you're looking to invest in yourself and you value your time they just want to go through this entire process in one place as fast as possible so you can start earning that like 100 and whatever thousand it is on average that python developers make you can check that program Down Below in the description and use the IMC for a 10% discount as a member of my YouTube Community with that let's start with the fundamentals of python this is what everything is really built upon essentially and it's where you will need to start if you're still a beginner and by the way a lot of people who would not maybe call themselves beginners still might struggle and not really have a good grasp of these Basics so it's always good to go through these fundamentals these are variables data types functions if else statements or control flow is another word for it as well as Loops this is really what all of programming is made out of it's really cool that the entire amazing skill of programming really just boils down to a couple of these fundamentals so what do these mean so variables essentially this refers to allowing you to store values inside of your program and just like assign labels to them and when you learn about variables by the way it's also good to learn about how the computer's memory actually works behind the scenes you don't need to go like too deep into the RAM and things like this but it's good to understand how we have these memory boxes and how variables are like references to different places inside of this memory where these values are actually stored it's good to know how this works in Python inside of my full program we of course go into all the details on that which is good to keep in mind then when it comes to data types the core idea here is is that every value in Python and in programming has a certain type so you might intuitively know that a string of text and a number are like different kinds like there're sort of a different type you can do different things with strings as you can with numbers for example you can multiply numbers together but it wouldn't make sense to multiply like the word dog and the word cut together so that is why we have different data types in programming we have integers we have strings flows booleans which can then be divided into simple data types and compound data types compound data types are things like lists or dictionaries that can hold multiple values within them it's good to learn the basic ones right off the bat and what you can do with them that takes us into functions which are essentially just like predefined blocks of code that you can store within your program and then call and to essentially use in different parts of the program then we have IFL statements so there's many cases where you might want to do some operation or some block of code if some condition is true whereas you might want to do something else or not do anything if some other condition is true that is if else conditions and then finally we have loops so let's say you have a list of numbers and you want to add one to all of them you just run a loop through this list of numbers and then do some operation for every item in that list or you might have something that you want to do like for example run your program while some condition is true that is called a while loop different kinds of loop for different kinds of situations so first before you go anywhere it's good to get a very strong handle of these five core what I call building blocks of Python Programming and as the next topic that's the first sort of intermediate topic that's really crucial to understand is something called objectoriented programming really this just refers to using classes and objects so what does this mean a class is essentially like a blueprint for a certain type of object inide of programming so you might imagine a Tesla Factory but when they make Teslas they need to be able to produce like a lot of Teslas it's useful for them to have a blueprint on how to make that Tesla so then they can make what's called Tesla objects so objects are the individual sort of things that are made out of this blueprint rather than having to redefine this blueprint print every single time when they're making every individual Tesla in programming we use this a lot of times in so many different ways it just allows us to sort of Define a shape for something that you want to make in programming once and then just use that shape and Define attributes to it and call methods within that clause or that object in many places inside of your program then we get into what I just call intermediate python Concepts now later on the video we'll talk about Advanced python Concepts what is an intermediate concept and what is an advanced concept is of course as subjective thing this is just what I would call kind of things that are very good to know and that you almost definitely want to know but that are not like absolutely crucial for you to do things what do we have here we have for example libraries and modules this I would actually even call a basic concept you'll always need to use different libraries and different modules what are these so the basic idea is that in programming it's often useless for you to Define every single thing they you want to do from scratch as we learned all of programming really boils down to these five core fundamentals and everything everything in programming is just built on these foundations but a lot of this stuff can be very complicated so that is why there are other programmers as well as often simply the creators of python that have created a lot of this sort of boilerplate code for us and then all we have to do is import libraries of this code that allows us to use essentially this code that has been written by other people it's having the skill and the sort of mindset of thinking okay here's the thing I want to do might there already be a library that someone else has done that allows me to do this directly chances are there is so you can go to what is called the python package index to find different libraries or you can just ask chat DBT and often you can do a lot with just the basics by just importing libraries to do what you need to do then we have something called functional programming so functional programming sort of a style of programming similar to object oriented programming except just a different sort of mindset of programming it just refers to using functions and preferring to use functions that taking data and then output some data and then that output of that function is then used as input to some other function etc etc etc there for example common functions called filter map and reduce like you just write those down those are really useful to learn that just modify lists of data in different kinds of ways then you definitely want to learn about things like object reference passing so this is going a bit deeper into what I talked about before in terms of the computer's memory when you store a variable that variable is actually just a pointer to somewhere in the memory where that value is stored so then what happens is let's say you have that variable be a list and then you give that list to a function and the function modifies that list then what will happen is that outside of the function that same list will now also be modified because what we actually modified is not the variable itself but the actual value inside of the memory so if you have two points with the same value both of them in both of those places the value itself will have changed it's object reference passing I have a different video where I go into deeper into this one and a couple of these other Concepts in this video I'm just going through this very very quickly so you might want to go deeper so I'll leave that down below in the description then we have error handling so how to properly handle errors inide your programs which you'll see a lot of as a programmer the most common thing you'll see is error codes at least for me because I suck at coding then we got file IO so knowing how to read and write files moving files around in your computer things like this allows us to do a lot of very cool stuff with scripting and automation I have a bunch of tutorials on this channel that cover a lot of very cool things we can build just with this python concept it allows us to start storing Json files which is actually the most simple way for you to persistently store data instead of your computer instead of having to use a complicated database with a database language you can just use Json files which is a type of data format but to do that you just need to learn these couple of things around like reading and writing files after that we move on to python web development now this one depends on whether you actually want to become a web developer but chances are you will end up using a lot of these things because the vast majority of the things we're building as programmers are going to be some sort of crow applications that interact with the web in some kind of way and with python we are specifically talking about backend development we're talking about building out server so server is just essentially a computer that is somewhere that is running backend code for some website so you might imagine the server of Netflix which may or may not be coded in Python where the actual shows and the movies are stored where your billing is done all of these logic is going to be done in some programming languages python is one of the more popular ones and for that you will have to learn a framework called a Jango or floss now chances are when you're learning backend development you'll also have to learn at least the basics of front end development which is sort of the front facing part of the web and this is actually HTML CSS and JavaScript so technically it's not python but it won't take too long to learn these things and at least nowadays in the industry it seems like it's very good to be a full stack developer at least a little bit so you understand both sides of the web but even if you perhaps specialize in the back end and for this you'll also want to learn databases which will mean you'll probably have to learn the basics of a databasing language like SQL although these Frameworks like Jango actually make this a lot easier and that allow you to talk to databases just using python so this essentially gives you the three Horsemen of web development which is the back end the front end and the database which will also make you a web developer in on my program we have a full module just around web development where we learn all of these things by the way after we have first learned the basics of python and some of these intermediate Concepts then we get into python data science tools this is again sort of depends maybe you won't do anything with data maybe you won't get into data science at all so you might not need this but again chances are that throughout your career as a python developer you are going to be using data science you're going to be dealing with data a lot and just understanding the basics of essentially knowing how to manage and deal with data using python is going to be very very useful for you and this is especially necessary if you're getting into anything relating to machine learning or AI essentially the way it works is that data science is like this and then inside of it we have ai which is like a subpart of data science and then inside of AI we have machine learning which is a part of AI and all of this starts from knowing how to manage data using python so what are we talking about we're talking about essentially just different libraries that have made it easy for us to deal with data I would say out of these at least you should learn numpy and pandas you never know when you're having to deal with a bunch of data just for example I was building a crypto trading bot the other day and that is the kind of thing where I have a lot of data inside of my program like price data and stuff like this so it's just very useful that I know how to use pandas because it just makes it easier for me to deal with this data and do what I want with it and then finally we get into advanced python Concepts now I've classed these as advanced mainly because a lot of these are not something you'll actively need or if you do need them that it probably depends on on your use case what you're doing like your company things like this maybe allows you to do certain things faster and slightly more efficiently but for example we've coded a full startup and we never needed any of these topics so first of all we have decorators so that allow you to essentially sort of expand the functionality of your functions by like adding these decorators that essentially like add extra behavior for every function let's say you have a function and you want to time the function run how long it takes you can make what's called a timer decorator that has this like very funky syntax in this other video that I mentioned to you before as the last Concept in that video we go a lot deeper into how this actually works but it essentially just allows you to append a timer to any function and then you can use that decorator in any function that you want then we've got generators we've got regular Expressions again like not something I really use myself like regular expression like sure they like there's usually other ways of doing the same things and I never really bother to properly remember how to do regular expresses properly so I usually just don't use them that's perhaps personal preference we've got testing now this is important in big companies where I worked my corporate job we had to write a lot of tests and I certainly see the value when your code gets really big you'll want to be able to have tests that like automatically check whether your code is correct like there's no errors and things like this but when your code is reasonably small it's probably just too much effort to write these at least that's what I feel like that's probably just me being a lazy developer so the you should probably learn this don't do what I do then we got other things like web scraping and this essentially just means using python as like a Web Bot to like access the web and like get web pages into your code and then you can find things from them you can like click buttons on websites simply using your Python program this is something to be a bit careful about some certain websites don't like it for example what you can do is make a web scraper to go to all of my YouTube videos and hit the like button if you do that I certainly don't mind but things like this again this really just depends on what you're you're doing I've done a lot of cool things with web scraping I'm a big fan yeah we've got things like these and there's a bunch more things that you could learn in Python again at this advanced level there's probably not stuff you need to get your first job so wouldn't worry about it so that is what I would say is a list of topics like if you really master all of this you can call yourself a Python Master at least in my opinion like let me know if you disagree let me know if there's something that I'm missing and if you want a full list of these topics as long as a full breakdown of the fundamentals of programming I made What's called the Python program master sheet Down Below in the description this just gives you like a cheat sheet of all these python fundamentals that we discussed in the first section so you can go and review them at any time you want so you can get that in the first link in the description down below and as I mentioned before if you want a full program to Fast Track your way of learning everything you need in Python and in programming to become a real python developer and get hired based on things that have worked for me that I know work for other people then you can go check that program Down Below in the description and use the code IMC for1 % off with that if you're looking for more python videos specifically python projects that you can build right now to really build an impressive python resume you can go watch this video right here with that I will see you in the next one