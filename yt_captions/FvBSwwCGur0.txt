hello everyone in this episode we're taking a look at operators and conditional statements so you're really familiar with some of the arithmetic operators for example we use the plus and minus symbols for addition and subtraction and then the asterisk for multiplication the forward slash for division and the percent sign for the modulo operator in case you're not familiar with modulo it's essentially the remainder operator so 10 mod 3 is equal to 1 for example because 3 goes into 10 three times with a remainder of 1 we often use this to check for a number is even because any even number mod 2 will be equal to 0 little more exciting however are the relational operators first up we have the equals operator written as two consecutive equal signs not to be confused of course with the assignment operator which is just a single equal sign as in into x equals 3 or int y equals 8 if we wanted to compare these two values that's when we'd use this relational equals operator so if we write X double equals Y we're stating that X has the same value as Y and if the statement happens to be correct then a value of true will be returned otherwise it will return false so if we wanted we could store the result in a bool variable in this example x is of course not equal to Y so boo a will be set to false the next operator is the not equals operator written as exclamation mark equals we could make a bool variable called B and set it to the result of the statement X naught equals Y here B will of course be set to true because the statement is true the same idea applies for the rest of the relational operators greater than greater than or equal to less than and less than or equal to now that we can compare values we need a weight well to run different code depending on the outcome of the comparison we can do this using a conditional statement for example if x equals y then run the code inside the braces take note of the notation we have the keyword if followed by a pair of parentheses containing the condition and then a pair of braces containing the code to run if the condition is true I just like to point out that since we have this bool a which is equal to the result of the statement x equals y we could have the condition of our if statement be simply a if a is true then the if statement will run now we might want to run a different block of code if the condition turns out to be false we can do this using the else keyword it's also possible to add a new condition on to the else statement by saying else if so here we're saying if X is equal to Y do this otherwise if X is greater than Y do this instead finally let's add our else statement back on so if none of the above were true then resort to doing this all right there just three more operators I'd like to take a look at for now these are called the logical operators and they are and represented by two ampersand symbols or represented by two vertical bar symbols and not represented by a single exclamation mark so say we have two new Bulls a equals true and B equals false now the statement if a and B will only run if both bulls are true if a or B will run if either a is true or B is true or both of them are true and finally the statement if not a will only run if a is false okay that's everything for this video in the next one we'll practice using what we've learned here to detect input among other fun things until then Cheers