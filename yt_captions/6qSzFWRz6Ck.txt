all right our boy radius Community member VIP wrote an article beginners should use a preconfigured neovim distribution now I have a lot of thoughts on this so I'm actually pretty excited about this so let's find out maybe we're going to nitpick it maybe we're not I believe that beginners to neovim should use a preconfigured distribution I'm talking about distribution such as lunar Chad Astro lazy you get it um okay okay I expect a good defense for this because I actually I think I have the opposite take I've used uh everything in my own minimal configurations to huge sometimes bloated distributions like uh lunar Vim damn doing Chris at machine like that uh from my experience I still believe that uh those starting out should look toward using pre-configured distributions and at a later time tailor their own okay okay A Whole New World actually you know what maybe I could buy this maybe maybe a whole new world coming from a managed editor oo I like that term a managed editor newcomers make get over overwhelmed with the sheer number of choices that come with neovim Fair unless you use Arch by the way then you're used to it facts uh preconfigured neovim setup lightens the configuration load my main complaint about the ecosystem is that it's too vast the countless plugins unlimited configurations the knowledge needed to get started is bewildering that's where a pre-configured distribution comes into play I will say my first time ever configuring Vim with Vim script I still remember Vim RC's felt mad magical I had no idea what they meant I copied blindly from my coworker it felt so uncomfortable it felt so foreign and I was just like what the hell is even happening here and so I get I get the feeling I get the feeling and I had a whole goal that my Vim configuration at one point was only like 200 lines long 150 lines long I think at one time I got it all the way down to like 75 and this included a few plugins and all that what the hell is even that was me all the time these configurations act as curated showcases offering a glimpse of what plugins and configuration types are available by trying different distrib uh distributions you will figure out which plugins and settings resonate with your unique coding style and requirements it's like finding the right pair of shoes in an infinite store each fits and feels differently and you'll never truly know what's comfortable until you have tried several okay okay okay Monkey C Monkey do the exposure to different types of configuration help guide an nubies on different ways to write their own I know that after looking at several different formats I found what stuck uh to me yes I referring to using others configurations as a reference too try them out first then delve in deep and see how it is done yeah I mean this is kind of the problem with this is that there's just so much bewildering going on to begin with that when you try to dive in deep to something like lunar viim there's just so much to it I think it's really hard to kind of that first step is a big First Step whereas something like Kickstart I think is like a really great first step Kickstart is so good it just gives you exactly what you need I've actually was thinking about doing like a Kickstart extension and just have like Kickstart but primes version right and just like throw in a few plugins and a few key maps that I find really crucial and that's it we're talking like fugitive undo tree telescope Harpoon H and just like keep it super super simple or and LSP like right like a just a really like it's just Prime Kickstart right just a little bit more and give a basic explanation of everything that I do right I feel like that would be pretty cool my video my YouTube video is like that but it goes with the full setup of everything instead kickstarts one file just like a really constrained version of it all you know what I mean by exploring different neovim configurations you get inspiration from tried and tested configurations and after sometime it's easy to modify the configurations a little more to your liking true don't stop there I still believe that after you try a multip neovim distributions is to write your own at some point or at this point you know what exists and what you like you've seen examples of how everything is glued together and you're graduated from beginner Academy a super easy way to start is to use Kickstart absolutely this configuration is very minimal and contained within one file meant to be a Launchpad for your own configuration absolutely I don't think sticking with one distribution forever is a best idea you get used to another person's particular setup and feel which may not reside completely with you when you write your own you get an even deeper understanding of your editor and how it all works when something goes Ary and the things are bound uh to do so what do you think is the kind of let's see ah what do you think this kind of work is about I don't really understand this parenthetical to tell you the honest truth you can figure out pretty quickly how to resolve it since you've built it this is my opinion I'm not responsible if your feelings were wounded throughout this read I like that ending quite a bit all right so opinion time I think that if you want to start out with Vim use your current editor ID and go with Vim motions first I think learning Vim motions will make it drastically easier to switch to Vim like if you don't have a pretty good grasp on them you are just fighting so many battles at once and it is a pain in the ass so I highly recommend learning the basics of motions where you can do a proficient text editing first second I do not I honestly I am besides for lazy Vim which I do need to check out because if I'm not mistaken faly does lazy vim and faly is uh yeah falky does it yeah yeah faly faly H faly the greatest of all like I mean faly is the truest of all champions of uh neovim he is the he's the guy that holds up like a quarter of the ecosystem him and TJ are responsible for a huge amount of the the ecosystem just absolutely love this guy's work uh so I could probably be interested in this one the problem I have with any of these of any of these is to make edits to understand them is a huge leap it's just a huge leap Le to understand what's happening because there's so much underlying knowledge project structure layout how files are executed and sourced what is file type plugins what is after what is plugin what's the difference how are these things happening what is a nit what is Lua how much Lua do you need to know right like it really is very very extensive whereas something like Kickstarter or Kickstart is just I I don't I honestly think that you should use I I have like an opposite take I think you should use preconfigured neovim distributions if you're sick of trying to set up neovim if you know it all and you don't care and you just want something that everybody else uses where you can look up all the shortcuts and you can just learn someone else's stuff and you're just perfectly fine I think that is when you want to switch to something like lazy fimm and just say you know what I don't care anymore someone else do it just keep me up to date give me the best stuff and that's that that's my personal opinion but when you're starting off I think you should start off with Kickstart it's my opinion okay opposite take as Rus here I know it's a little different I like how you formed it though I can't say you're wrong uh just because I think in the end anybody who's sufficiently motivated whether they start off with a distribution or start off raw dogging it with Kickstart I don't think either of them will end anywhere but in a really good knowledgeable place right anyone who's sufficiently motivated will do it no matter what right people have learned how to program by just looking up references of c and learning how to program and doing stuff with like a Linux manual and a c manual right and like that's it so any like just sufficient motivation is all you truly need and you will get anything done I think that that probably speaks more to to it than anything else but one thing that I feel like is missing here is why should you use neovim in the first place why should you use any of these distributions vs code exists why would you ever do that uh the reality is this is that getting closer to how your environment actually works will only expand your mind in fact I even have something on my to-do list here in the next six months is what I'm going to do is I'm going to spend one week purely using Ed and the reason being is that I really want to get great with great with said and a and and just like all the command line tools and really just plus one my ability to work with the environment in a unique way and I know it's like reenacting the Civil War it's like truly reenacting the Civil War going back to Ed but I want to give it a try I want to understand what people went through and what was the motivation for all these tools we take for granted today and what can they do because I I think there's a lot more to it that I'm missing that perspective that understanding of it all Ed is like think of Ed as like the first editor it literally stands for the standard editor right it's the first it's like it's it's the first one right and so it's like something that I feel like I'm genuinely missing in my head was which was like what is the truest motivation for these things and so I would love the idea of just using something reenacting that Civil War understanding where everything came from uh for me it just makes sense to to kind of work back from abstract to concrete uh or the most abstracted to the most concrete uh I don't think you should start at Ed it would make no sense I'm not even sure if you should start at Vim whenever someone ask me should I start with Vim I say use intellig uh I just think it's a better experience I think the intell uh IDE uh Vim emulator is just the best in class I think intell J just generally is like the best inclass ID um the community editions out of this world so that's personal thought um and then go from there into Vim that's what I do uh that's what I did I thought it was great I did use vs code for like six months I thought it was dooo I just couldn't really love it I kept trying to love it and I just kept hating it every single time um all that personal opinion but at the end of the day whether you use one or not it really is just your motivation to do it and if your motivation is to understand your system and to become a more proficient editor something like Vim will be the maximum load of proficiency but it requires Ires you to learn your system and to engage with it and to customize it to exactly how you think because that's the thing that that's what Vim offers and the thing is is you may not even realize how much Vim is uh available right you may not realize that you can API you you then you have all this stuff right here so you can like en them create you can create your own buffer right and creating your own buffer means that you you actually create place where you can put text you can programmatically do a whole bunch of stuff you can do so dang much and once you learn all these ways in which you can programmatically edit your editor then you can build anything you want for it if you need it which is beautiful the name is the prime agenda