hello everyone and welcome to something slightly different today I'm announcing a little coding challenge with the theme of tiny chessboards this is the rough idea you'll be given this c-sharp project which when run will bring out the AE chess board where you can play against the computer you might notice it's not playing the most inspiring Chess at the moment though so it's your task should you accept the challenge to try and fix that now inside this filter called mybot you'll find a single c-sharp script called mybot which is yours to modify if we open it up we can see it has a function called think which needs to return a move and as input it's simply given the current state of the board and a timer for keeping track of time right now the word simply looks up the legal moves on the board and immediately Returns the first one that's not much fun of course so you could modify it for example by creating a random number generator and then returning a random move instead if we go ahead and play the bot again now it's a little more entertaining at least by the way you might have noticed this mysterious bar at the bottom of the screen telling us that the bot brain capacity is at 41 out of 1024 and that's because there's a size limit for the bots in this challenge the size is measured in tokens so one token for example could be the name of a variable and that name will be a single token no matter how long it is because it still just represents a single thing then this equal sign is another token as is this board variable the function name and so on some things such as spaces or new lines for instance are not counted at all so no need to squish everything together that won't make a difference comments also do not take out any space so basically there's no reason to write completely horrendous code unless you want to well one slightly horrible thing you do have to do is keep all of your Bots code inside this one file because this is the only thing that you'll be submitting in the end the purpose of this size limitation is to hopefully encourage creativity for example you can't just download the weights of a pre-trained neural network they're going to be far too big so if you want to try a machine learning approach you'd need to train your own tiny version from scratch and attempting to make a one-to-one copy of stockfish's handcrafted evaluation is going to run into similar problems so feel free to look at open source engines for ideas and inspiration if you want but don't try to just replicate someone else's work of course now once all the entries are in I'll then be running a tournament to find out which part is best and make a video that explores both the strongest as well as the most unique and creative approaches so don't feel like your Bot needs to be amazingly good to be worth submitting I think bad butts can be very interesting too along with the video I also release a little game featuring my favorite entries so that everyone can try playing against them so if this sounds like a challenge you'd like to take part in you can head over to the Project's GitHub page which I'll link in the description and I've written out some instructions over there physically you'll just need some software like visual studio for writing code and building the program and then you can download the repository and open it up in Visual Studio or whatever you're using if all goes well you should then be able to run the project and see the chessboard but if you run into some technical difficulties instead then I recommend taking a look at the issues page on GitHub to see if anyone else has had a similar problem and if not post about it there and I'll try to help once you've got it working though I'd also suggest reading through the rules I've written out here for example you're only allowed to use the following five namespaces which eliminates some sneaky strategies such as scanning my hard drive for a coffee of stockfish and launching that in the background to do the thinking for you you'll also find a link to this very crude documentation page I've put together which gives an overview of all the different chess functions and so forth that are available to you in this project then you just need to write some code of course and when you're ready to test it you have three options you can choose my bot versus mybot to make it play a thousand game match against itself from a bunch of random starting positions or you can choose human versus my watch to play against it yourself and finally you can select my bot versus evilbot to start a match against a super simple example bot I made technically you could also replace the evil butts code with your own code if you want to test two different versions of your Bot against one another anyway once you're happy with your butt you can head over to the submissions page and fill everything out once submitted you'll still be able to edit your entry if you want up until the challenge closes on the 1st of October so I hope you'll have fun with this challenge if you decide to take Patch and I'm very excited to see what everyone comes up with all right that's all for now though so until next time cheers [Music]