falsehoods Junior developers believe about becoming seniors uh how many people type one in the chat if you think you're in the junior area if you're slightly Junior okay we got a lot of we got a lot of ones and then people that can't listen to instructions classic programmers classic senior engineers in the chat thank you everybody for the random number generator for the 69 number generator many appreciations for that all right these are mostly my thoughts about what I was expecting as a junior and how I perceived senior developers to be honest I was romanticizing them quite a bit damn senior developers were the people who could solve all the problems constantly told me what to do and knew all the answers it's easy to fall prey to the fantasy that climbing the ranks will somehow bestow upon us a magical cloak of knowledge Authority and ease okay okay let we we let let let's let let's let them cook dude senior developer Riz is real okay there's some real senior developer rizes okay uh let's see I remember remember this one time before I was proficient in using the terminal I had some issue with my Linux distribution something was not mounted properly or some file permission erors I couldn't figure out it figure it out on my own so I asked one of the senior devs for help the grace and elegance of how they navigated vim and jumped around with shortcuts was inspiring it stayed in my memory forever I also aspired to be like him fast efficient know it all coding gurus the reality is much more grounded and it uh in its way more rewarding by the way that's also the reason why I decided to get super good at Vim in the terminal I had this exact same experience like like liter like I had the exact same experience except for instead of using Vim the person used uh emac but even then even in my less senior State I knew I knew right away you don't use emac no ain't nobody using emac Okay disgusting let's see where are we going were you following me I don't necessarily feel like this is sometimes yeah sometimes you got to wing it a little bit okay okay the truth is that advancing your career is less about learning the terminal and more about embracing a new set of complex Nuance responsibilities yes you will get profession in the terminal and using the terminal which you should by the way you should if you if you aren't profession uh proficient in using the terminal you should if you don't know how to use JQ if you don't know how to use some basic grepping if you don't know how to use a little bit of xargs just learn a couple corles and honestly you'll save you'll save countless hours like literally you'll save countless hours so just just do that because it's good for your soul it'll make you happy uh but you'll also in general get better at solving simple problems but those are not problems you'll be dealing with to put it simply the complexity of the issues will grow with your skill Fair before we start this essay is not meant to discourage you but to prepare you for the reality ahead senior developers are not all knowing 10x coders who can make unicorns out of thin air so let's go through some of the falsehoods that Juniors believe about senior developers okay I like where this is going I like where this is going I hope it doesn't end I I typically hate this meme or so where the meme is like Junior developer I don't know what I'm doing senior developer I don't know what I'm doing like I I generally do know what I'm trying to do now I may not know all the specifics but I I I always hate that take you know that that I I I just hate that Meme because that's kind of like seniors definitely have a good idea right like I may not know every twist and turn and there's things that I'm going to get caught on on but that's different than like I don't even know where to go it's like I know where to go I know how to navigate by the stars but it we may uh we may deviate some of the times flip zoom in zoom in I know what I'm doing there we go uh let's see let's see having all the answers expectation I will be able to solve all the bugs and know what's wrong in a matter of minutes reality the more I learn the more I realize how little I know let's figure this out together yeah again depends on the problem but the belief of that reaching a senior level means having all the answers is not just a misconception it's a misrepresentation of what it truly means to grow and succeed in the tech industry so many new algorithms new technologies and new Frameworks are being released daily I mean I don't know about the algorithms but most certainly most certainly the Frameworks are being released at an extreme rate I mean we've had we've had what is it four new JavaScript runtimes in the matter of like runtime not we're not even talking about Frameworks at this point we've had more databases Frameworks and runtimes released in the last two years than we had in the last 10 it is wild saying that you as a senior have all the answers is a destructive to your growth that's fair this is a good statement you shouldn't think you know everything right this is very good by the way if you ever get to a spot where you feel like you kind of know everything and it's more of a trudging step-by-step process of just getting through what you're already doing I do think that this is a great way to stagnate your growth and so if you find yourself in that position it's a good time to like okay what can we do to change this up what what am I missing here your expertise isn't measured by the knowledge you possess but by your ability to work with uncertainty o I like that oo I like that ask the right questions to get where you need to be in terms of understanding knowing how to find a solution once you have the understanding commonly referred to as problem solving problem solving yes this is good this is good that's on point never done learning senior staff Etc yeah you should never ever ever be done I always operate on the assumption that I'm probably wrong and the world is full of people that potentially know more things than me yeah that's that's typically how I try to operate at my job is that I just assume everybody at my job is really smart and really good at what they do so I am going to ask them about their area of expertise like I just I have to make that assumption or else I'm you know if you don't make that assump assumption it just tends to make working with people just not nearly as good all right it's fine to say I don't know or I don't understand that uh completely let's discuss this in more depth technology is vast ever expanding Universe your job is to solve problems not to be a notall as a senior you're more of a amateur guide who knows how to get from a point A to point B rather than an all- knowing Guru has memorized all the world's capitals Fair these are all fair points Okay so I like this I like where this is going I do like this this analogy you know how to go from point A to point B you may not know all the in-betweens but that's not a real thing working with the latest te latest tech expectations as a senior I'll get to play with the latest tech and build amazing projects reality this Legacy code isn't going anywhere and neither am I let's fix some bugs and uh that happen once every full moon this is an interesting one I'm g i let's let let's let's let the Bro cook for a second and then I feel like I got I got a take coming on on this one many Junior developers uh dream of working exclusively with the latest Frameworks and tools however a senior developer's role often involves maintaining and improving Legacy systems these systems carry the weight of years of business logic customer data and potentially insights or and operational insights as a senior developer you will find that a significant part of your role involves understanding these systems figuring out why they are breaking and optimizing them to meet current and future demands while also making sure not to break anything yourself this is for me this is kind of more of a strong depend right it depends on what you're working on how you're working on like not every senior engineer does this not every person's working on a legacy system some people are building out something new within a legacy system some people are building out something new within a new system I mean Netflix is how many years old at this point 20 25 years old and I recently built out something that was completely new right and I'm on another project in which there will probably be be completely new things and there's also just like the reality of of this right here that we're in Legacy system and so it's not always it's not always this kind of stuff not even falor that was not a falor mention it was something completely new just like last year uh a bunch of working the game streaming side of things uh I built out a lot of the uh understanding of what was going wrong and all that and so it was as latest tech as latest tech can get and so it's super cool but again again you know like if all you're ever doing is maintaining and fixing bugs I'd be concerned about your growth if all you're doing is building Green Field projects with nothing else I would also be a bit concerned about your growth right you you you definitely want a healthy mix of both uh many Junior developers dream of working exclusively with the latest Frameworks and tools however a senior developer's role often involves maintaining and improving Legacy systems these systems carry a oh I already I already read that word for word I actually already read that I already did that yes it's not as fun as it sounds but that's the reality most of the software nowadays are Legacy applications that require refactoring which won't be uh approved anytime soon so you'll have to patch it up and work with what you have there's a lot of this there's a lot of refactoring that I want to do right now like I kid you not preed that was definitely pre red there's like there's one thing I kid you not there's this one Legacy thing that I'm working with right now that to like make a singular letter job script change I kid you not five plus minutes to build it just just let that sink in for a second it's just JavaScript by the way someone said it really bothers them when I highlight this way it really satisfies me when it when I highlight this way so guess what suck on it okay enjoy it enjoy my highlighting you're not here to make me change I'm not here to make you change okay we're here to discuss Tech so grow up you know what you know it's another thing about being a senior engineer you got to let people do the things that they like to do okay all there is to it deal with it become a senior engineer you do it on purpose absolutely I do it on purpose I like highlighting things that way it makes me feel good you tell me you're telling me when you highlight things you don't do it on purpose you're just like and yeah or do you go I'm gonna highlight from here to here what let the man enjoy his highlights yeah just let me have dude stop being such a highligh okay uh no more boring tasks of a very hot one on this one expectation being a senior engineer means I can avoid all the boring tasks reality endless meetings I don't I actually have very few meetings I think this depends on the type of senior engineer you want to be documentation and code reviews oh and I let's see did I mention debugging Legacy systems on Friday at 6 PM so I don't think this is a good way to put it uh I I like this one phrase that one of my bosses told me a long time ago which is the most senior Engineers can do the most Junior tasks meaning that if there is a task that is particularly mundane particularly hard like just hard to do due to just simply how boring it is if you put a senior person on it it will get done faster because they have more willpower and discipline to do the thing as opposed to someone who's more Junior who can't do those things patient patience and TDM yeah like like I had something just recently where we had this new bug come up that was kind of like sh surfacing and we had some screenshots and I wanted to see if they were of the profile gate or not and we don't have some sort of automated way to determine if a screenshot is on profile gate or not that I knew about and so it's like I could take the next 20 minutes and just look at I could take literally 20 minutes and look at a 100 pictures and just determine if where the problem was or I could try to go figure out and how to do all the crap just to just to solve this onetime problem and the answer is very simple just take 20 minutes and look at 100 pictures it was that easy literally figured it out within just a few moments of looking at the pictures instead of trying to figure out some automated way to do this to get some sort of percentage blah blah blah blah blah blah blah blah profile gate it's like when you go to Netflix you see like a list of icons you know it's a issue it's a patience as you sounds like agism yeah someone said a sounds like agism not going to lie okay begog you got to say why say why you're on the big screen if senior developers are able to solve something faster because they are experienced yeah that's not agism that's experience dog being good is being good yes but how do you become okay how do you become good at something oh let hey let let the Bro cook how do you become good at something big go where where did you go bro Bigg where did you go BG uh got an ad so I missed something clearly did I just get hit with an I'm joking bro did I just get hit with an and I'm joking bro we're GNA keep going we're GNA keep going I don't read anything about aism in this thing what I read here is or even in the statement the most most senior P person can do the most Junior task it's it's all about your ability to be patient and have experience is directly proportional to how much time you put into an item and how much time you put into something is most certainly proportional to age it's very hard to have 10 years experience and be 21 like you're only going to get a handful of people that fall fall into this category most of us with 10 years of experience are probably going to be more like 28 to 38 depending on when you got into things like of course there is a natural you know of course there's going to be a natural a natural being older means you have more experience and having talent and being good at something often comes with years of hard effort the uh let's say the term senior is so bro so broad uh many seniors are Juniors when they don't have experience or where they don't have experience right okay so this is actually an interesting point and I'm going to why why I'll go with no on this one right here uh seniors can be Juniors where they don't have experience it depends on how far outside of the like experience bubble it is right so like right now if you ask me to go do like if you ask me to go help write part of chat GPT 5 in the research area yeah like I'm I'm completely out of my out of my depth right but if you ask me to help make some part of the AI infrastructure more reliable or if you ask me to make a tool to help gather up data and we can make some analysis decisions like even though I've never worked with anything to do with how you're doing it could be completely new databases completely new ways you store things completely new all the things still easily solve those problems right and so it's like yeah everybody's a junior when it comes to being something completely outside of of the realm but any but everybody's like that right like of course no one here is good at Nuclear Physics except for those people that are good at Nuclear Physics uh if only if you were expecting that once you've risen the ladder you'd be solving exciting problems left and right not dealing with bureaucracy I I will have to disappoint you the senior role comes with a share of seemingly mundane yet essential tasks endless meetings meticulous documentation thorough code reviews and yes debugging Legacy systems at the most inconvenient times I haven't necessarily had a lot of this my meetings are fairly good schedule I don't have a ton of them I don't have too little I have just a just a just a just a nice just a nice amount right I have an amount that's pretty good I only meet about things that are very important and so yes like not a senior sounds like a senior on a team that's just trying to make a code right that's the thing is that most meetings are useless and you have to be very you have to fight for meetings that don't need to exist to be fair your experience at Netflix is somewhat atypical of terms of time waste yes yes uh the a lot of people on my team all have a very similar kind of meeting schedule as uh as us because we kind of fight for just making sure we don't overdo meetings being protective of of your time is is a really important practice and so every time I have a meeting if it sucks I let somebody know like this is not a good meeting uh you might think ew meetings documentation code reviews but once you have reached a senior level you will have have a LoveHate relationship with them on one hand you will be annoyed that there's little documentation on the other hand you'll be sure the project is maintainable even after 5 years uh meetings will annoy you because they take so much time because they make you happy because everyone is aligned and doing what's needed code reviews will you because people will try to merge weird things that will need uh to improve but you will be happy that your team is getting uh better based on your feedback you hope um this is all kind of interesting uh I think there's definitely two edges to the sword because knowing like I mean I I understand what they're saying and and this is totally true but not everything you write is going to last for five years sometimes you got to be willing to cut corners and knowing that is also it's in of itself it's own own scale right like knowing how long you should keep something going is a very interesting approach because sometimes you will make a shortcut that you know is in like inevitably a bad decision but it's better than just not fixing or just not moving forward if if that makes sense how would I Define a senior uh senior engineer is very very simple someone who's just seen enough problems and failed enough times right cuz you could virtually put me onto any project and I could get up to speed and start solving things and I have the confidence that I could do that right that's just how I would how i' Define it making big changes expectation has a million ideas on how to make changes uh this company uh or a million ideas on how to change this company to 180 degrees let's improve everything reality knows that nothing will change without management approval in the uh necessary budget I mean both these things can be true at the same time though I have a lot of ideas but I also have to play ball like right now the thing I'm working on I have to play ball by making small changes and moving towards reliability but I have bigger ideas that I want to test out that that I just need to First make the you can trust me changes on this new project and so now that I'm getting the you can trust me making the bigger changes are next it's a common sentiment among Junior uh developers to look at the systems processes and Technologies around them and see endless opportunities for improvement I was like I was like that as well I remember joining a company taking a look at how they do things thinking I knew better and started shooting suggestions left and right I've definitely been there I actually think someone said this article is kind of bland I feel like if you didn't experience a lot of these things I don't know like who didn't experience this who doesn't land at a company and feel like you can make a lot of a lot of changes right I think that's good right like if you're excited about what you do I think that's really really good and I think that companies that can mix the Slowdown a little bit and let's think about what you're trying to suggest and let's like let's keep you excited I think that people that can really harness those two is is really good when you're young you're a hammer and everything looks like a nail this Zeal is not only admirable but necessary for the evolution and growth of our industry this way you get to make a tons of mistakes that will make you understand that not everything is a nail and a hammer is not the only tool you should have yeah this is great this is absolutely great uh senior knows when to say no you should mostly say no now let's see I always feel that way but now I ask a lot of questions exactly you ask a lot of questions but I always feel like you could improve things this was me this I mean I feel like this was me to a te I feel seen in this part some of these things I don't feel like they they they match up nearly as well I think a lot of times seniors do get to go explore some of the newest Tech to kind of understand how things are going you should make time for that like as a senior engineer you should make time that you're exploring new tech new languages understanding why they're good why should you have them under your belt is because at some point you're going to need to build a tool and if you always default the same thing it may not be be very good in specific situations like just understanding how to make little things quickly is super good cuz nothing is worse than the person that builds a simple tool and then drops on you some like react monster with 9,000 libraries when you could have written literally 200 lines of code and a simple HDMX npoint with go it's like there's times where you should know when and how to use these things but if you only ever stay in one single Lane you're going to only produce that one single Lane of uh of code and sure it gets you into the senior status but may not be something you want to always use htx mentioned I use htx because htx is the clearest and simplest like obvious Oopsy Daisy that has been being made a lot of times you get these internal applications that are just behemoths and they do simple things and you're like take a step back like this could be really really we could like greatly like let's just let's just delete all the code and make it simple you know what we don't need we don't need to maintain this as if a 100 people are going to work on it one person's is going to work on it throw a couple end points and call it a day you know what I mean uh learn to communicate the value of your ideas in terms that resonate with relevant stakeholders this is a huge skill by the way figure out how to budget uh how the budget is allocated and take Park part in resource planning the bigger the project the harder it will be to jump through all the Hoops but be well worth it as you grow in your expertise you see that bringing change requires time building a case for your idea that resonates not just on a technical level but also aligns with organizational goals budgetary limitations and risk management considerations building things is just fun building things that bring benefit to the company is fun and rewarding and something like one thing that's a little bit missing in here is that or maybe not emphasized in here is it's not all about arguing your idea one of the easiest ways to deliver an idea is to build a concept of it and be like this is what I think you should be like how you should be solving things and it's like a dirt simple version of whatever already exists yeah it doesn't do everything but it's it's so easy to show somebody something as opposed to try to explain why you're you're more correct time to relax expectation once I become a senior I'll have more time to relax it's fine I'll finish the work on Saturday um I'd be super careful ever saying this just in general you know you should definitely have uh you should definitely make time to to explore things outside of work and build things that make you excited if you're always doing work if you're always doing one thing like unless if work really excites you if you're only ever just doing work you'll find yourself I think you get closer to burnout easier I'm not saying program less or explore less okay I think you you could program on Saturday all you want all you want but it's only work I feel like if you're if you're doing something you don't enjoy but you feel but you're just doing it a bunch I think you will have something there American brain a work working on a Saturday uh sometimes you got to work on a Saturday it's not an American brain sometimes there's just production problems and you got to you got to you got to put on your belt and get the get the job done you know you got to gge your loins like it's just part of it it's just part of life suck it up it's not fun nobody wants to do that so expectation I'll make sure to have a perfect work life balance once I'm a senior balancing deadlines mentoring and personal life is like juggling knives occasionally one uh one does drop one does get dropped yeah I have one thing I try to do is not write down too many things that I need to do and necessarily forget the things that aren't important I know that's like an unusual way to T I'm not saying everybody should do this but if you're fast and you know how to get things done and you know how to communicate often I find that forgetting the things that aren't important have really helped or in other words just say no know the workload uh doesn't necessarily decrease it evolves you might find yourself dedicating weekends to wrapping up projects or tackling unexpected issues your responsibility extends Beyond coding and Technical tasks to include mentoring strategic planning and often greater involvement in the operational aspects of projects one thing I do have at my job is we have pretty much no Junior Engineers I think we have like one Junior engineer and so mentoring and that kind of like a lot of these meetings don't quite exist where I'm at just because they don't I don't even have the opportunity to do that thing uh you become more accountable and receive a higher salary for your commitment Junior developers don't really care if their task is blocking 10 other people and project delivery I don't know if that's true uh but you do uh these responsibilities mean that they can uh you your work can extend into the evenings or weekends especially when deadlines Loom or unforeseen issues arise I think Junior developers do care in fact they care so much that they often overdo things and try to overcorrect and end up making things worse because they're just trying to make all these people happy and they feel like they must do the things at this exact moment right uh and they completely overcorrect in this thing don't overcorrect communicate it's okay you don't need to you don't need to do 48 hours right it is I I find a lot of Juniors get get they get over they get overcooked in this this exact thing the expectation of having more time to relax as a senior is in many ways a misunderstanding of the nature of senior roles while you do gain more autonomy over your schedule and the types of projects you work on this autonomy comes with responsibility to manage and deliver on multiple fronts often requiring a juggling act between professional obligations and personal life yeah that's fair I mean that's fair if you get if if you want more responsibility by the very nature you're going to have to I mean you're going to have to do things that you may not you may not find the most enjoyable at times you that aren't the most convenient I encourage you to develop strategies that support a sustainable balance between work and life this might involve honing your time management skills or learning to delegate more effectively it also means making a conscious effort to prioritize your health and personal relationships rather than a high higher salary this is good people work out eat well drink water find somebody to love take a moment right like do all those things honestly I mean these other things they're they're great and all but they're just not worth it you know sleep well get eight hours of sleep unless if you're Thor if you're not Thor or then don't do that but you know salary though s salary though uh expectation once I become a senior I will lead big projects have a big impact and tell others what to do I missed the times when people told me what to do I don't miss that I don't miss that at all uh there are particular expectations I'd like to address today the notion uh that rising to senior position means you're no longer or you'll no longer be involved in Hands-On work focusing instead solely on giving tasks to other people mentoring Juniors and focusing uh purely on architecturing architecting uh while it's true that seniors involve a significant amount of meta work planning thinking and making decisions there's a lot of Hands-On stuff that still needs to be done fixing Legacy code bases this really fixating on the Legacy code bases sometimes you know a lot of you know I I guess it again it really just depends on what you're working on a lot of people a lot of people are feature working and feature working means that you're not really fixing Legacy you're you're building out new things uh that you only know let's see that only you know how to fix them uh performing code reviews for the new project creating diagrams for management to understand the security of the platform by the way if if you are doing the security of your platform just some senior engineer I would just like to let you know you're probably going to get hacked just throwing it out there unless if what you're doing is fully focused on security you yeah you're probably getting hacked okay like I mean there's like don't be dumb with your security right that's my secret I'll I'll never know the security of the platform boom just saying that's crazy uh the more senior you become the less people will tell you what to do and the more they expect you to know what needs to be done you go from dealing with tasks like Implement quick sort instead of merge sort in function xyz2 the management has decided to integrate AI in the HR department how can we make that happen both of those require Hands-On work but at different levels Fair uh with great power comes great responsibility and anxiety leading big projects means facing the pressure of making the right decisions and the uh fear of failure uh don't ever fear failure I don't know I never have that fear I just assume I can always do it uh it's a rewarding challenge but it can also be a daunting one eventually you will miss the days of focusing solely on coding tasks without adding responsibility of figuring out the big picture transitions I just don't do that one re real talk if you have a track record of solving things you probably will continue to solve things just saying oh my finding companies that will hire a security focused folks that's a privilege it is a privilege but it's also pretty much necessary I mean that's the that's the reality of things if you think that you can just magically pull security out of a hat like you probably just have you you probably have problems you just haven't discovered them yet and maybe somebody else has discovered them they just haven't told you I mean that's that's the reality security is is is is non-trivial and rust won't save you uh I hope let's see once they become a senior they won't be able to lay me off I hope I won't be laid off yeah very company dependent stuff it's it's comforting to thought to believe that seniority equates to uh job security however the reality of our industry known for its rapid evolution fluctuating Market demands tells a different story you might be thinking I'm the only one who knows how to fix this Legacy system they won't dare let me go and then they close down the whole project entirely making your role redundant yeah I mean this does happen but I think this is more of a problem of of larger companies you know like at Google where they can just like just one day close down entire departments you know if if all you do are build if all you are doing is just building one thing typically as the thing starts shutting down they they or they're starting to lose budget they tend to fire the people that are less you know less senior the people making that have less of the stuff Google Plus mentioned yeah Google tends to be the ones that just like fire like just destroy everybody this this article replying to a straw man arguments never has anybody say he'll be finally able to slack off or do whatever he wants once he's a senior developer yeah I never had that I never had that notion this whole like I that's why this like like it didn't even make any sense to me these arguments because I've just never had these as arguments all right let's it's comforting thought to believe that sen uh seniority equates the job security however the reality of our industry blah blah blah blah I already read that while seniors roles do come with a degree of stability thanks to the experience and expertise required to attain them the notion that one cannot be laid off is a myth well yeah of course anyone can eventually be laid off companies face various pressures economic downturns shifts and strategies mergers and Acquisitions and all these can lead to restructuring and unfortunately layoffs that affect employees at all levels drastic time call for Dra drastic measures AKA investors are expecting higher margins yeah I mean anybody can be fired just because you're a senior doesn't mean that you're going to not get fired but it is kind of silly to think that being senior and being useful at your company also doesn't mean you're more protected besides for at place is so big that they just fire verticals right they're just like get everybody with Google+ out Google+ doesn't exist therefore the employees we've hired for go+ also don't exist study the office space interview and never get laid off there you go I'm a people person damn it reading about getting fired and half the people are here during work hours yeah I think that I I I think there's a couple I think there's a couple really great ones this article had a bunch of points that I think maybe weren't as fantastic but I think there was one that was really great which is this one which is making big changes and saying that like when you first start off you're going to come in there and you're going to be shooting suggestions and all this and as you get as you get more senior you you know how to hone them in a little bit more but there's kind of like a missing piece which is you you should keep shooting your suggestions but as a senior you ask a few more questions before you start shooting them and mundane tasks being okay with mundane tasks like if you could just if those two things I mean some of them are kind of interesting because there's there's definitely like you see this a lot in today's world where people like you know like you saw it in his language about something about you know fear fear of failure right you you see this a lot I'm not sure where this crept up from but like you also just don't have to have that and I know that's easier said than done but at some point you have to look on your past and realize that you've solved enough problems that you can do the next one and that's like a that's a u choice at some point at some point if you've been doing in solving stuff for the last 10 years and you still feel like maybe I can't do it like that's a u choice and you got to choose something different at some point all right the name you know what the name is the name is the junioren the junioren the the the the junor