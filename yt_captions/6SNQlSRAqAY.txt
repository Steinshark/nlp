I hope everybody likes the new color scheme for the Reddit we chose turd Brown apparently actual turd actual Brown there's a new JavaScript senior developer interview if you think about it this guy could make a new one every 6 months like this is a perennial piece of content that it can make over and over again that you can just simply every six months the new Frameworks are in every single time so the CV looks all good and everything but it all comes down to how fit you are selecting JavaScript libraries imagine we have two options the T3 and the T4 St both you if I'm not mistaken the T4 stack is a real one and Theo really is not happy that the guy is just just riding on on Theo's stack name Theo did do the T3 stack and no T4 is not a parody if I'm not mistaken T4 is like legitimately um a T4 stack right if I'm not mistaken the T4 stack is an app created and I one could imagine you wouldn't be very happy that you create a this JavaScript framework meta framework Library thing and then someone else just uses your name and goes what just goes one further and it sounds better it literally sounds better just because it has one high number typescript in trpc but the tnt3 stands for Theo the skater boy from California where is the tnt4 stands for technology not T3 uses Tailwind W T4 uses t tnd has a huge community of 4994 hlas online in the Discord versus 584 tamaguchi but the tamaguchi are more Cutting Edge where the last commit for Tailwind was last week for tamagi we push on safe T3 is primarily focused on web while T4 is immediately crossplatform because T4 natively composed to mobile as react native through Expo now Tailwind doesn't have one-onone good I really don't understand you know it's it's so funny this happens every single time with JavaScript somebody makes something right and something gets popular okay Tailwind the moment Tailwind got popular every time you're like I'm going to use Tailwind people like you use Tailwind we use Nano CSS you use Nano we use Pico CS like it's just like immediate just sheer breakdown and I have no idea what to use anymore I have absolutely no idea the moment something becomes popular all of a sudden it's just like every time you say it someone just immediately tells you why you're using the wrong thing I go like in chat I'm like I'm going to use century and they're like Century you should be you and then they fill you in on what they're using it's the worst thing that could ever exist want to react native but the T3 STS have tried for a long time to get it compatible was Twi CSS react native which was renamed to Native wind once it started working which was abandoned for a long time but was made compatible with react native after its developer the 1X death joined XO in 2023 and now it's fully compatible with mobile anyway so forget this whole part now the real problem comes in when we look at off Andor T3 uses next off or it hosted solution clerk now next off is framework agnostic but it doesn't work on mobile we could of course use clerk Expo to make it work on MOA or hack the next OJs Expos rest AP and see where things go but even if you fix the next off CL next off also doesn't move with Horner walkers for free Edge deployment on cloud flare T3 also uses I'm sorry but it's just what it said with such intense music and the funniness behind it it's just I just I I watch this and I have to think what the hell do you think programming is like as somebody with 6 months of experience like what do you think happens like you listen to this and dude I would give up dude I know it's just like oh you want to make an application well sit down it's just like this is your brain on JavaScript it's shocking how many things have to go into this to make an application like I understand it's like it's it's fairly easy like once you know everything and one thing that okay so I'm going to give a really hot take one thing I think that uh JavaScript Engineers or whatever you call the people that have made this this experience um I think one thing that's really missing from their side is that they grew up in a world with no Docker and then they got you know then Docker and then these different ways to start deploying and then things got a little bit easier and they saw each like piece of the way happen you know we're no longer rolling our own oth we are now using ooth well then ooth gets wrapped Again by something else and you you kind of walked through this path of all the things that have happened for the last like 10 years and you really get each piece and you get it fundamentally like how it has happened and so you are the boil frog all the way boiled all the way up to the 10 like the the final degree but you actually get all the trade-offs in why each thing has ever made you know has ever happened but the new person they're just getting tossed in and Landing into the boiled water and they don't they like they they have no conception of what it took to get from we used to roll our own o into we now have like clerk that whole thing like I remember when I was making a website I started to be able to there's actually two different forms of oth there was like open it was called like open something open login or something like that from Google which Ed a different state flow than the one from Yahoo mail which was open off two or open off one open ID there you go thank you thank you Judah open ID and so I would actually use open ID for One login flow and then I'd use ooth for another login flow but that but I had I first developed a a name and password login in which I developed my own salting and hashing and storing and all that kind of stuff I rolled my own off yes I rolled my own oth and it really wasn't that bad I was a I was a junior in college and you know it it worked I I used I I asked people and Googled how to do it and I rolled it all and then I got open ID and then I got all these things and it was so it wasn't actually all that bad it wasn't all that bad like you know I was like wow I did that probably pretty it probably um was fairly I'm sure there was a way to break it you know I used that sha 256 hashing of the password along with the salt and then check the hash against some sort of Records to know is it in there or not right and but but still like I went through all of that and guess what I understand why clerk is made I get it like I do I do understand it but I also understand that o like ooth login flow is like not that complicated you got to like hand them a little something little State token they go off and say that here we they come back with the state token and you have to give them an address and it has to be HPS and then then you find out oh okay there we go we're going to do that like it's it's it's not that bad to just do ooth yourself but I also understand the convenience and so what I'm trying to say with all of this is that once you've gone through it all you understand why things are the way they are and you understand why it's easy or uneasy in these things I know it's like 50 lines a cod to do yourself for an oath Lo login but someone that's new you just you you like you genuin have no you have no clue what's happening you think login is so complicated you need a third party like honestly try doing ooth yourself go get the ooth library that's already available in every single language you can hand it a couple URLs override your Local Host you may have to get some like local secure credits and all that but a bing bada boom Shazam it works and you'll go okay that's not that complicated I guess I can understand why you could do yourself but maybe I want to use Clerk or whatever I don't know what the soup dour of login is I only know clerk because I've heard Theo mention it so many times like that's the only way I know this this this place and like you could do that as well you at least have an idea of what they're doing behind the scenes but ooth isn't that simple at the same time it can cause because there's tons of user management involved that's why Services no I get it I understand that there's like user management and all that kind of stuff and you get to make that choice like that you do you get you get to make that choice but you should at least understand what goes into that choice before you go off and just hide everything from yourself but that's like my personal opinion okay do whatever you want to do scalability concerns are there scalability concerns don't worry your zero users will scale amazingly with your own ooth path Prisma which is super inefficient and ugly I mean just try a simple query if your result is in the first row in the first Json will still revalidate every Row in every Json not4 use a super base for user data and sells it to the darket but there is also a Lucia Branch for this which works with any Orma database if you know how to write the adapter now Lucia and super base work on mobile flawlessly now instead of Prisma T4 uses drizzle straight out of the gate super Bas CR compatible which drizzle is the most based Twitter account of all time I one time had somebody insult me on the internet and I went to go look at it drizzle had my back drizzle was out there de nuts and people on the Internet Straight Out of Ukraine or wherever they're from damn drizzle from one heart to another which means if we deploy in horo we can scale to infinity and beyond for 0 if our bundle size is under 1 Megabyte which is also why we cannot use Prisma because Prisma bloats the package just like this company's HR department now drizzle also works on the edge yeah but couldn't drizzle just silence drizzle could work on T3 but the documentation hasn't been started yet now couldn't do that with Drizzle but yeah could you no silence oh man I've been in meetings like this I this this this reminds me of working like my first days of work where you just like get inundated with all the things that happen it's just beautiful it's just beautiful Lucia would also work with T3 but I haven't tried that so I'm not going to consider no T4 also us as helper libraries like valid bot million dooll JS pretty K virtual edit and ji now we could of course extend T3 with those but we would first extend T3 with Pusher for web sockets actually better to use so and plausible in Umami for analytics because Google analytics is Google analytics and we would also add zand to abandon Redux from our vocabulary just to reintroduce it once they abandon zand Java Script all of this creates an insanely huge fun okay so at this point I actually can't tell if those libraries were real or not okay I'm just gonna they're all real okay I'm just I'm just letting you know at this point I've left the realm of my understanding of the JavaScript ecosystem and I've officially landed into the place where I go I don't even know if that's real anymore but I purchased the fact that they exist and they are real which we lucky to expand with bundle reducers and next bundle analyzer I love it not3 would typically host on versel which is a cash cow so it's better to use Planet scale which is the cash cow so it's better to Railway which is like Heroku which is now owned by Salesforce and therefore evil ver sell with a V like an evil an evil with an E like an Em's life an Em's life with a c like in free hosting on cloud flare T4 we will just host straight on the edge of glory which means if you can get select to compile under one Mega and we can scale it to Infinity for 0 on horno without sweating the only bottleneck then is our database not even the database but the right Ops how do you get a JavaScript piece of code under 1 Megabyte there is at least minimally react coming in there that's like 250k or something some nonsense H how do you honestly do that I know to me it sounds crazy to have a 100 or to have one megabyte 1 million characters of JavaScript to describe your back and now remember it's been minified so all the big characters turn into little characters right so it's all tiny like it's much tinier than it like it would be right it's it's it's tiny it's tiny and still that is a lot react minifi is 38k 3.8% of your budget it's a lot light is by definition on the edge but it's still slower than speed of light Cloud flare says they're working on that they say that every week but next week is cloud and Innovation week so next week is different now we don't have the source of s anyway so now we could of course rewrite the whole stack from react next to view knock SW SK solid and solid start Quicky and Quicky market and each comes with their own holding ecosystem like view or next beefy Ori to reuse 0% of our code don't write this down next week all of this going to change so that solid St felt kick quick and Quicky Mart it felt too real this is this is feeling this is feeling too real I actually it's starting to hurt a little bit now I'm getting a little emotional and this has gone from satire to just your life as as a web dev but then again we might as well rewrite straight to rust good idea I didn't say anything now the back end we can compile to web assembly and host on work or r s for free the front end for the desktop app supporting the react web code we would need a native web view we would use T because electron is bloated and ships its own chromium now T is basically like a V8 one what is V8 exactly Spotify slack disc how many people understand the difference between a runtime and V8 in chat go right now type one type one if if you understand it we got a lot of zeros in that we got we we got we got an unhealthy amount of zeros did type 69 in the chat if you know what V8 is okay we got a lot of 69s okay so that's good I see some 68s and some 420s in there see some 96's which is really hard for me to see with my dyslexia okay the the the the simplest most skinny answer I can give you is this is that V8 runs JavaScript it needs to be able to set a timeout so it's going to need to be able to have a way to you can hook in and tell it how to do a timeout it needs to be able to like make Network requests so you have to give it like access to a stack and stuff like that it needs to be able to do all these different kind of things right it needs to be able to do all the stuff outside of JavaScript so the runtime is like all the stuff that's required to run where va8 is like the thing that runs JavaScript so Chrome has its own set time out node has its own set timeout does that make sense so node is the runtime correct so when you do fs. read file you're pretty much va8 goes oh I have a function that you own I'm going to call out to the platform or the runtime and say hey can you can you can you execute this function with these arguments and so then it knows how to go okay I node now have to go and read a file get that file convert say that file into a buffer which is a node object right and then hand it back to VA and say okay here's the results from that function office and most importantly a virry antivirus he bleeped Microsoft let's go there was a bleep of Microsoft in there office and most importantly a virry antivirus I'll use electron but we will use T because while electron is a compiled app with a web view that can render rust compiled web assembly T is a rust step and we save on R so T4 has 1,000% code sharing performance production Readiness performance lean optimized bundle size free hosting on horo runtime Edge workers Cutting Edge performance 1,000% type safe styling free hosting a purple landing page but everybody uses performance tail whe so you know years ago we would just set up a PHP and SQL and alarm stack on a $5 server with JJ query and our five us would be happy but this of course would require backups server management security which I know how to do but they lost trust in me after fourth user data cleanup this month in fact everybody's changing back to servers 2024 is the year of the serverless lessness they said that 10 years ago oh my goodness server lless oh the absurdity of that statement is is profound which is funny because terminal shop not serverless or Vim asky game engine not serverless think about it they say that every year but this year they're out of VC funding we have an entire abandoned office building so might as well go with JavaScript so we would use next JM holograph Q typescript AWS super [Music] Bas I didn't notice that I was just wondering I was what in my head I was just like he's drawing a symbol and I know he's drawing something but what is the symbol it's we're going to use superbase AWS typescript Apollo and nextjs Satan the Satan stack uh the Satan stack classic Satan what is Cube un ah I know this might seem like a fun way to spend your time in the AG of AGI but this is a public service announcement to all senior Engineers trying to learn all of this in online courses to get a job in today's developer Market my advice to you is fish don't fry in the kitchen I liked it I liked it don't write this down next week it's all going to change the realest part of that video yeah give it a like absolutely subscribed already done go sign up for the patreon the world will fall apart there you go that was awesome uh that was really great and also again you know I watch these videos I laugh at some of the pain I've experienced I've been able to largely Dodge a lot of that pain working on tools but now I just have to think about you new people I just can't stop thinking about that what are you guys going to do what are you guys going to do I always feel so bad for you guys the most you have so much more things to try to get started just to get started than I've ever seen in my lifetime you know what the worst part about all this you know all the things he mentioned you know all those little pieces and bits and everything at any midsize companies none of that actually happens like any company that's like 2 years old will use effectively nothing that was stated in that video and so all of those really nice like all of that really beautiful and lovely and nice work you've done to learn all those technology so that you can create a blog that has 17 different Technologies glued together and you finally think you might just understand all that as you're hosting and server list you're going to go to a job in which still has moood tools and you're going to try to figure out how to make sure that that website doesn't crash what happens at a job and what happens for you to think that you need a job are very very different that's why as I've said over and over and my last job to use new tools two jobs of mine ago used new tools that's why I've said it over and over again people are always like how do I make a splash with my with my with my resume how do I what what front end project is flashy that allows me to stand out and it's just like you know it's the flashiest project the one you really liked and just deep dived on okay it's the same it's the same advice that I give you or the yeah it's the same advice that I give you when it comes to working out there is probably the best workout you could do but there's the workout that you will do that will make you work out again tomorrow you know which one's better the one that makes you keep doing it the one that makes you excited the one that makes you come back again just like nutrition just like saving money it's just like personal projects do the thing that's going to make you come back again that is always better than Perfection and I swear there's so many of you right now that are that that watch that video and actually probably checked out half those Technologies and you have a list of things you want to learn before you actually make something you're like oh I got to I'm going to master tailwind and I'm going to build like a little to-do app with that then I'm G to then I'm going to get into Redux and State Management I'm G to master that and build a to-do app with that and I'm G to do this I'm GNA do this oh then I better check out spelt and do a to-do app and I better check out solid Jaz and do a to-do app and I better check out Quicky Quicky Quicky Mark and do a to-do app and and then there we go then once I could get all those I'm going to learn about planet scale I'm going to learn about oh my gosh I got even turo I gotta get too on there I gotta go I got to go do this and I got to go do that you just like get like 9,000 things and you never actually do anything like it's good to investigate but make something make a game in whatever language you want rendering it in any way you want just to make something no you don't want to make games you don't have to you probably have something that bothers you you probably have something that really bothers you some manual task something that just really just pisses you off or maybe you think you have a better way could search your file system for certain files and all that go make it go use rust or go or JavaScript go do that and get really good at it and make it really good and make exactly what you wanted Zig great time to use Zig honestly great time to use Zig can I show some love to YouTube chat they're the real ones YouTube chat you just got smaller because of flip thanks flip thanks flip anyways that's my advice to you I'm sure a lot of people will disagree and and I've seen on the internet I can think of a very specific specific Tweeter that tells you that if you don't learn react you are effectively hamstringing your career I don't know maybe you know the person I would like to hire the person that said I got really interested in electronics so I made all my own electronics and I was able to like I made my own camera system and transferred those things over like 16 raspberry pies and I did all this stuff and I just really got into just making stuff on Raspberry pies and little Electronics I'd be like oh wow tell me more about that cuz that's interesting that's something that's cool you learned something tell me more about how you learned something cuz honestly the person that can take a bunch of third party services and go it's like okay cool you can read a little bit of docs and experiment for six hours you didn't build anything what' you build tell me something that you did I don't think hooking up a bunch of third party services to display your cat photos is impressive I'm sorry I just don't think it's that cool I just don't I think anybody can do that I'm a professional gluer all right I know then we should you should fix that you should try something else try not being a gluer most managers as CEOs don't think like that I think you're wrong I think you're dead wrong I think most people that are involved in the interviewing you have your Frontline interviewers and you know what they want they want to hear you say you know when I struggled I was struggling with this team management and Dynamics and this is how I overcame the struggle with those Team Dynamics and blah blah blah blah okay you've made it past the HR view now you're into the technical View and they're going to be like hey tell me something you've done you're going to wow them with your super cool Hardware story that you made a skateboard that could drive because you wanted to make a skateboard that could drive it only went 3 miles an hour because you didn't know how to make a fast motor but nonetheless you made a gas powerered skateboard and it was a lot of fun super cool right or you did you just did something stupid for the sake of doing it and it just shows them that you have the talent and skill and commitment to see something through and then you got to talk to a manager where again you know actually you know I mean last time I struggled I had conflict and then I solved the conflict that's like most interviews hey the name is the interview agen