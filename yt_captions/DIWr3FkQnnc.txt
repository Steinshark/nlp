I hope you guys are ready for this cuz I am I have never been more ready for an article in my entire lifetime the loneliness of a midlevel vimer I use neovim it's the professional programmer's text editor of choice facts facts I'm already there except those poor sad professionals who have to write languages that can only be written in special hyper bloated text editors that's Java or C neovim mentioned using neovim is cool because it's incredibly powerful and flexible you can edit text much faster than in any other environment you never have to touch a mouse and if you're willing to learn Lua you can program it to do pretty much anything you want it yes you want and if you don't want to learn Lua there's probably someone out there who's already made a plugin that does whatever you want anyways finally using Neen makes you look cool all of this is just facts hashtag facts this is just this is the factual statements upon factual statement someone get me a fax machine cuz I'm I'm receiving something right now but there is a downside to vimming it's a weird Fringe interest okay I I wouldn't call it Fringe okay even among software developers who are already a weird Fringe group okay it's not a fringe of a this is an offensive statement for me okay I feel personally attacked right now most people who know what Vim is don't know how to use it are scared of it and are happy to keep it that way people don't want to engage with it on any level see all the jokes about exting vim and a lot of this is because people who do use Vim are completely insufferable ouch ouch dude I got I got wrecked I'm glad he just didn't say my name thank you for not saying my name using Vim drives a wedge between you and everyone else you might work with absolutely and it's the best nothing is better than when you have people that have never learned their environment have never really used anything and they come over and ask you a question and you just like hit some data from a service pipe it through jqu J JQ grab a few arguments out pipe it into something open up Vim jump jump a couple things around oh people are just like how' you do all that it's just like yo dog they're just like basic tools what do you mean they've been available they're they're just they're just there what do you mean can you send that to me sure I'll send the to can you send me the command it's not going to help you command's not going to help you you know why because you don't even know what it does but I'll send it to you pair pair W gramming once you start using Vim if you try and pair program with someone who isn't familiar with it then they won't be able to take control of the keyboard and participate good I do not want to pair program step one I don't pair program step two if I pair program I'm going to set up a server we're going to team up into it separate computers and we will talk on the phone that's what big and Bot and I did uh when you've been vimming for a while and have developed bizarre muscle memory and Hyper abstract ways of navigating a codebase it becomes difficult to work even with other people who use Vim I don't find that to be true most people use like control P for opening files all Vim motions are just already there so you don't worry about Vim motions long as you can open files jump to definition long as most most things have been get in the neovim world most things are kind of like settled upon like GD jumps to death definition in vim and if you have an LSP it will use your LSP to jump to definition GD GF opens up file like most Vim motions are already just kind of there and that feels good they have their own ways of doing things which won't overlap with yours the more interested you become in a topic the Tighter and less populated of a niche you sink into until eventually you are the only person in the world who can operate your text editor goals man such goals right there goals right here at the same time when you sit down with someone who uses a normal text editor and try to work with him you'll be utterly confused goals love it friction will be added where you don't expect it in vs code I feel a huge disconnect between how I expect to navigate a code base and what is actually possible and I spend half my brain power trying to prevent myself from hitting the caps lock key after every line I type this is good I'm I'm loving this this is so relatable cuz whenever I open up a VSS code my brain just looks at everything that's there there's so much stuff and then people are like I don't want to customize but I like how do you look at all that crap and they're like oh well I just customized the UI and I'm like oh so so you do customize they're like well no I don't customize like Vim okay I open up a bunch of series of Json files and look up them all on the internet and I edit all of them inside my Vim setup so that my or my vs code setup so my vs code looks the exact way I wanted to and then I edit all the shortcuts I Ever Wanted they're all in a bunch of different disparate Json files and there's no programming language that's very easy to get into it's it's the exact it's totally different it's like nah that sounds the exact same buddy you just chose Json as your language I chose Lua so by using Vim I have I think increased my own it at the cost of alienating myself from everyone else and while I'd still encourage you to use Vim there is a genuine problem that you'll run into okay fair what to do about it I have no idea I used to think that everyone around me would see that neovim was the right way and that they would gradually Converge on using it I hoped that I could go through life not changing my own behavior and that the world would change to suit me unfortunately this has not turned out to be true so here's a big thing that I've noticed is that when I pair program with somebody either they're looking at my screen or I'm looking at their screen sharing keyboards and co- programming at the same time I find to be such a weird activity here's my take on the whole situation I think there's like two or three different paths you kind of want to go down so when it comes to pair programming this is what I like to see I like to see one someone sit down navigate through the codebase and show me things about it that are important for me to understand here's the highlevel thing part two me go Implement a change or try to figure out some things part three me show change change gets demolished by person who has all the context and then they rework it on their machine I don't expect them to work on my machine just like I don't expect me to work on their machine we're just simply different and that's okay I want you to set up your machine the way you want it I want your own personal development environment to be your own I don't want to use your machine okay I don't want to use your machine I think how you set up things is stupid and how I set up things is probably stupid to you stop trying to make fetch happen Okay stop trying to make fetch happen it's ridiculous so I would like to be able to pair program with people effectively but I want to keep using neovim maybe I need to set aside one day a week where I will only code using very plain boring Mouse driven text editors to keep my skills sharp I just don't think you have to program at the same time like why are you trying to co-program I just don't get that yes I'm talking about C in Java yes absolutely didn't spell my name right but I'm okay with that okay Prim Gans okay priman is a little bit different but yeah that's me that's me let's go this is a very interesting thing and I think it comes down to I don't come into an expectation that I should use your computer okay I don't think you should have that expectation I honestly just don't think you should have that expectation especially in today's remote world what are you doing are you like sh you you're not sharing computers you're sharing screens it's totally fine like develop a way not to do stuff like that I just I don't see the purpose of both programming at the same time I don't think this article turned dumb I think this article is a really good Insight which is how people approach problems and I know there's a lot of people that let like to co-program and people even argue that c-programming is better than single person that you should always have two Engineers on a single computer like that's a like people take that to the maximum and they think it's that that is it it's the best way to do it I mean I I personally just disagree with it but I I don't expect to understand a single person's computer ey approach ever for any reason it's yours why would I know yours why should we ever have that as an expectation it's a weird expectation to have there's even body position to do real Pro are you talking about spooning have you ever used jet brain's code with me know but that sounds interesting' 880s terminal users hate him yeah yeah yeah I mean still my machine is so raced up to my preferences that not even another Linux neck beard can use it exactly just like why why expect this to happen I think the better thing is just to figure out new ways to collaborate and it really just comes down to how you like for me it's I think the best way to learn is not to have somebody else do it with you even though that's like a fast track to get to the right answer I think it's even better to learn to fail and discover a bunch of the context yourself cuz honestly L most hard things about programming is State and the manipulation of State it's not the function itself a lot of this the function itself is usually pretty easy it's like the entirety of how the state moves through the system which just takes like hours of debugging for you to understand it serverless code editor let's go pair programming is actually useful when two brains is better like investigating bugs and you have no clue where to start but your friend does although once you start to get it running your friend's looking through your code for two hours is just nuts yeah like it's again that's like sinking like hey I don't really understand this can you kind of give me a high level high level overview of what you're doing where this bug could possibly be where to start they give you like the 15minute talk you go from there and then you just crush it right I don't know seems crazy anyways I like I really liked this article because it is true if you don't use what everybody else uses there is a there is a level of being on the outside but I would say that the inverse is is that when someone sees someone using it like the reason why I got totally into all this is because I saw somebody else using it way better than me and I thought I you know I want to be way better and so so there's a benefit on both sides you know it wasn't until I saw someone else crush it some coding guy was one of the people that inspired me to get better at a lot of things some coding guy and Anders backin at Netflix those are the two people that really inspired me to go way deeper yunong xal he got me into Vim I was using Vim with intellig and he said no you got to do this and he helped me set it up kind of gave me the brief overview of some things I really appreciated that I used Vim for a while then hopped around to VSS code emac Doom Max I went all around and I went on my great editor exploration that lasted for 2 and a half years and then I went eventually back to neovim or back to Vim then back to neovim it was awesome L plus ratio plus vs code hey I explored it all okay I even spent like weeks on atom the name the name is the priman the primon