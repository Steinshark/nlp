let's get furry the Dark Side of software engineering why I regret my career choice are you ready for this look at that what is going in his mouth what is going on here is this some sort of um anyways number one introduction 1.1 understanding software engineering the Utopia all right hell yeah you know there's I think in the original definition of Utopia there's some sort of irony about it being non-existent and it actually means dystopia and dystopia is actually you know it's like a a a duplicate word of Utopia if I'm not mistaken if I could be mistaken but if I'm not mistaken the The Originals of it actually had Utopia meaning dystopia uh anyways let's see imagine being a software engineer imagined right now conjures up pretty cool images right the thrill of solving complex problems the satisfaction of seeing lines of code translating into real world applications the respect it commands and let's not forget the pretty attractive paychecks am I right am I right can I get can I get some hell yes in chat can I get some can I get some paychecks in chat none of that not even one of it the thrill the rush am I right hell yeah hell yeah hell yeah give me give me that cash grab money all right here we go yes to an outside of the life of a software engineer seems like a dream but it but is it really all that it appears to be Here's a thought provoking question for you if software engineering is as Rousey Rosie is that how you spell Rosie as it seems I look like a dum-dum why is the internet flooded with Tales of regert burnout and dissatisfaction that my friend leads us to the less spoken and often shadowy part of this career the Dark Side of software engineering oh I'm ready what is this I'm not gonna lie to you so before we go on any further I have not had a dark side of software engineering okay I spent uh for the first few years I spent 80 hours a week programming as hard and as furiously as possible I absolutely enjoyed my entire time doing it from there I got a job at Netflix and from there I have just been at Netflix for a decade at this point I've just had I guess probably a more Charmed version of it all I'm not exactly sure how I've done that I feel like Kramer often uh that I Stumble ass backwards into success Netflix by the way uh the dark side unveiling the reality by the way for those that don't know I've been rejected by many a jobs I've had lots of no's lots of hardships but for me it's all Nostalgia at this point uh to understand the dark side let's first get rid of those rose-colored glasses that most people wear when they look at the world of software engineering yes it's high paying respected profession yes it can be intellectually stimulating but let's face it software engineering is no walk in the park I mean get this you might have a latte that's like not hot enough aiming a seemingly endless work hours high pressure environments and the constant need to upskill and stay relevant to uh to the risk of burnout the dark side is a reality many software Engineers face so I will say that some jobs are not fun I've been in jobs that aren't fun and honestly I felt the burnout happen a job and it's not necessarily for me it's the it's the difficulty of the job and what I mean is that um you can't is it's it's not just about solving like rapid problems it's about solving problems in which I like I have to really think about a solution and that makes a huge difference right like if I already know the answer like if I have to if I have to do uis the answer is obvious I take X and I make it look like Y and that is it now the the dots may not be fully understood by me but the rest is very very concrete and that's what I have such a hard time doing UI because it's so straightforward what I need to do and so it's just like okay I gotta go here I gotta go here and it's like an act of just like going through the motions and that's why I tend to get burnt out really easily on say the front end versus the back end because the back end it's the I find that often it's a little bit more difficult to get burnt out and and more so where I've landed in the last few years is tools tools where you're just trying to invent a way for someone to have an easier time the the only input you have is the process right now sucks we need something better and you don't always do what people say or think should be done right it's it feels very exciting that way so I really love tools are you surprised no shocked no welcome to the club which club is this wait is this on ironic or ironic I can't tell I don't know which club am I in let's take a pause here do you think I'm just stirring the pot for some melodramatic effect maybe well hold on to that skepticism I might Promise You by the end of this article you'll understand why so many software Engineers including yours truly have had their fair share of regerts are you ready to step into the darkness I've been ready for a while now stop foreplaying me the Dark Side of software engineering work life balance and software engineering the never-ending workday have you ever been on a roller coaster that just wouldn't stop no and I really wish I could have been on longer roller coasters I always feel like my roller coasters are really short you know what I mean like I always feel like I wish I could Edge a little bit longer in these roller coasters but it's like I'm going uphill up hill uphill uphill up here and it's just like down for like a second that's it I I just want a longer one okay maybe I want a longer roller coaster but again I can't find myself getting a longer roller coaster uh one that keeps on going at Breakneck speed flipping you upside down and leaving you feeling dazed and disoriented well welcome to the day in the life of a software engineer I've never felt this from the moment we step into office or more accurately open our laptops in this era of remote work it's a Non-Stop Sprint coding debugging meetings more coding the list goes on as the sun dips down below the Horizon you'd expect the day to end right wrong uh I'd say that largely is dependent upon your boss uh the boss's boss and work culture and your ability to say no right the thing is is that people always get this wrong and it's always some sort of blame on something external it is also can be part your fault you know what I mean I've met people who can't say no themselves and then they're upset about it it's just like Yo dude I I don't do that why are you doing that why don't you don't do that have you tried that like you don't have to always do that now some sometimes you do and I'm fine with some crunch time here and there you got to do it from time to time but not always you know what I mean when you're a software engineer a work often follows you home well when you work from home think about that for a second midnight bug fixing I haven't had to do that in gosh a decade last minute changes weekend deployments never Deploy on weekends um the clock might keep ticking so to me when I see this is just like these are all signs of an unhealthy uh Dev culture meaning it could be management it could be it could be client pressure or it could be Dev like bad Dev leads right if you don't have Canary process to know if something's good or bad like that's a real problem like if you don't know you push it out and then something is breaking in production you can't just roll back like that's a real problem you should have these kind of like things set into motion um the clock might keep ticking but the work rarely stops our laptops instead of being tools can sometimes feel like shackles chaining us to work work life integration versus work-life balance you might have heard about work-life balance but let me introduce you to a new term that's all the rage and software engineering world work life integration fancy term isn't it what does it mean well instead of separating work and personal life the lines between them blur on the surface it seems like a win-win situation you get to work in your comfy PJs with no more uh commuting and more flexibility but here's the catch when work life integrates yeah integrate finding downtime can become a challenge hmm again I I still feel like there's like a contention here I know there's jobs that are awful and I'm I'm most certainly like let's just set those aside right but there's also choices you have to actively make to like prevent these things from happening and it's not easy but you you do have to do it and I used to be very bad at this I I would like to say that I was very bad at this not everyone on my team did this but I certainly was the one that always say yes and always work too much and I found that I was always the one working a whole bunch right I had to take a new choice in life and what really kind of helped me was having a kid right by having a kid it helped me go wait a second like I really need to reorient my life differently and that's kind of what pushed me to change how I think and do things uh and it's not like my job changed I had a kid on the same job right we I just had to change how I thought about things and it did help quite a bit work emails pop up during dinner bugs need fixing when you're watching your favorite show and you don't get me started with those late night calls with clients in different time zones now this last one's tough I get that I don't work with that so it's not something I have to deal with uh but yeah that's you know that can be a job problem sounds exhausting doesn't it believe me it is the never-ending workday in The elusive work life balance or should I say integration are the first glimpses into the dark side of software engineering uh again I don't I don't whoopsie oh gosh oh no I just clicked something uh 2.2 pressure and stress the role of deadlines Pop Quiz what's one constant software engineering life if your answer was deadlines pat yourself on the back I don't have deadlines deadlines are part of my job uh but in software engineering they take on a whole new meaning they Loom over your head like a I don't know uh I don't know how to say that word democles I don't know this reference who who with whom is this person who is this demo please these moklies oh demo please uh who is who asked Tom it's from uh Shakespeare okay I don't know I obviously I missed this Shakespeare okay Greek myth it sounds more like Greek myth but I I could I could I could buy it being Greek guy a genius oh gosh now I look like a dummy what is this sword all about did he swing his sword a lot is this some if it's the Greeks is this some sort of weird sex reference always threatening to fall it hangs uh hangs on the ceiling okay okay I'm pretty sure it's a sex reference uh software projects are notorious for the shifting goal posts what starts as a three-month project can easily extend to six months or even a year yet more often than not the deadlines don't shift so one of the problems here is obviously long trying to trying to predict a three-month project right you can't predict a three-month project I I have a rule of thumb that if I have to try to guess something that's going to take longer than a week I really don't know you know I mean like I don't know and that's just that and exactly it's not scope creep a lot of it is just scope realization like you're just wrong and what you needed to build was not the right thing uh that's Management's fault it's not just Management's fault that's kind of uh I'd say that that's kind of like a uh a bit of a blame shift it can be more than just Management's fault it can be a lot of people's fault right like if if you're not scope realization plus scope creep yes scope realization is a scope realization has hit me more often than scope creep right it's realizing that I'm uh that I'm the one that was wrong about the requirements I just don't like putting all the blame externally okay I I personally try to take on most the blame because often all the things that go wrong are because I have like misread the situation um the result work environment Rife with pressure and stress can you imagine the anxiety of knowing that the countdown is always on that every minute loss could lead to misdeadlines it's like running a never-ending Race Against Time you know again I you know I always just I guess maybe my outlook on life is so positive that I just always think I can do it I don't know I always just think I can do it you know what I mean the impact of unrealistic expectations now this is just a real life this sounds like real life stuff going about to hit us okay this happens in marriage too adding feel to the fire are often unrealistic expectations placed on software Engineers have you heard of the Superman syndrome no it's not just about donning a cape and flying around it's the expectation that software Engineers should be able to do it all code in multiple languages fix bugs at lightning speed handle server issues and even dabbling UI ux designs unfortunately okay unfortunately in our quest to live up to these expectations we often find ourselves stretched thin long hours skipped meals missed family events it's a high price to pay stress takes a toll not just on our health but also on our mental well-being okay so there you have it the pressure cooker environment the constant Race Against Time and the unrealistic expectations of yet another Peak into the dark side of software engineering the risk of burnout all right so before we go on again like learn to fight for yourself more right really learn to fight for yourself more if you find yourself in an environment that you can't fight for yourself it's probably an unhealthy environment and try to find something different but if you find that you aren't fighting for yourself it might be you that's unhealthy right like you do have to know where the problem is because there's this thing that I see often and you see it in a lot of people where they go from job to job and they talk about how they had a hard time working with people and yet they don't realize that every job they went to and every team they've been on had conflict and then you have to ask yourself was it all those jobs that you had a hard time working with or is it you that is hard to work with right like you have to you have to take some time and evaluate yourself because there are real shitty jobs but there are also really bad decisions you're making what if I'm the problem I've been the problem all my overworking to this date has been me inflicted you know it's currently been me inflicted uh understanding burnout have you ever felt like a car running on fumes pushing the limits inching forward but barely making any progress that my friends is close uh uh is a close depiction of burnout it's a state of physical mental exhaustion caused by prolonged stress now imagine dealing with this uh this not as a one-off event but a constant uh companion in your professional Life Sounds Grim doesn't it you know I I don't know I find burnout to be whenever I am not growing you know like I know he uh up here at the very top of this described um uh what's it called uh where is it something about like a self-improvement somewhere in here gosh I can't find it now um but he talked about self-improvement as one of the many things that we have to struggle with for me if I'm not learning if I'm not doing something good it doesn't matter if I'm only working 20 hours a week or 60 hours a week I start feeling burnt out and on top of that I also find that when I go and go on vacation I come back burnt out every single time every single time like I find it a hundred times harder to do things and I guess this is like more of a personal note but I find that I am not a creature of habit but a creature of momentum and so like whatever my momentum is it's really easy to keep on doing that same thing but the moment I like break that it becomes really hard so when I start going on a vacation I find it hard to quit working but I have to like make it go away but then when I come back to working I find it hard to get into work and I feel like just so drained because it's like I'm already like full momentum into the other thing it's really I don't know I find it just really hard and so I find that the more I explore the more I do weird things the better like the better my burnout is you know what I mean speed violent and momentum absolutely uh picture this uh you're staring at a screen filled with code your eyes are heavy your brain feels like it's wading through molasses and yet you can't stop why because the deadline is looming the project needs to be delivered and your team is depending on you days turn into nights the code becomes a blur in the job uh that you once love starts feeling like a chore you're burned out drained and Running on Empty yeah that'd be tough if that's all I'm doing I would probably end up burned out too the sad part you're not alone countless software Engineers around the globe are battling burnout not uh even as we speak it's one of the harshest realities of our profession and significant tributor to the dark side of software engineering yeah okay I mean I I I agree just doing one thing is super tough honestly it is super tough uh even even learning just learning and exploring only learning and exploring I find myself getting burnt out as well right there's like it's a whole balance keeping up and uh with the pace of change the constant need for upskilling in a tech World change is the only constant new programming languages emerge older ones evolve and what uh what's in demand today could be obsolete tomorrow as software Engineers we're expected to ride the wave of change this means continuously learning up skill and adapting sounds exciting right I actually consider this really good but consider this while you're grappling with the project deadlines and trying to maintain a semblance of work-life balance you also have to find time to learn new programming language or master that new framework it's like being in a Perpetual race where the finish line is moving further away so I guess I fundamentally look at it different I fundamentally look at it as it's an opportunity to learn something new right and I'm really excited about that and so I've never really looked at it as a burden as much as an excitement so like oh camels coming up here very soon and I'm very excited about ocamel like I'm very excited about oh camel and I've never done a functional programming I've never done any of that but I really want to do that and so I always look at these as more opportunities than I don't have a fear of becoming obsolete because probably in your lifetime you'll never be obsolete there's still need for Cobalt programmers right there are new people going into Cobalt right if you know only see the uh the uh the opportunity for C is huge right like becoming obsolete is not quite it but becoming stuck in a small Arena of availability can be uh behind the drive to continually upskill lies a deeper fear the fear of becoming obsolete I've literally never had that in the rapid evolving Tech world if you're not moving forward you're moving backwards stagnation isn't a career risk it's a career killer have you ever felt the cold dread of being left behind imagine living with that fear constantly man it's okay you don't have to live with that fear right like you really don't you feel that risk Runner do you actually feel that hold on hold on man I feel that you really feel constantly like I I do I do want I I do want to know like do you really feel that like that that Terror like does anyone here feel that I actually wanna okay we're gonna do a little survey I gotta know fear of being left behind uh yes no indifferent is this a rapture ref the last one's funny uh chat epd makes me feel uh Obsolete and left behind who doesn't fear that I don't know I've never feared that there's a lot of you that feel that way why yeah that that's that to me that's much more scary right here this one right here how about the fear of doing the same again and again uh year after year to me this is much scarier right to me that's a lot scarier lack of confidence okay have you ever thought about streaming on Kik uh I'll talk about that in a moment how did I how did I develop a positive outlook on life uh living through horrible horribles I do mean that I obviously was born with a naturally positive disposition I think some people are born with positive disposition some people are born with bad dispositions or negative dispositions this is just real but also just having to go through uh years and years of just shitty things I think at some point you you just have to realize that like you can make it through things okay this is really interesting I guess I never really realized it was this this this large well for those that feel this way maybe this will be a a nice thing to say if you think about it 10 years ago rust was just starting to be ideated and in the next 10 years it might overtake a goaling so maybe don't think of things on the scale of months but maybe think of things in years upon years you know the thing is you don't have to know every single how many books all of them uh you just gotta remember that like you got years you don't have days you don't have months you have years and I think a lot of times people have this idea that they have to learn something right now like you got to get it right now because this is the hot new thing and if you don't know there's one thing you're gonna be left behind right it's just like hold on maybe Maybe not maybe it's not that much of a rush you know pick up something do it a little bit find what you like and just kind of start leaning in a little bit and and just kind of and just kind of slowly adopt it and get better and better and better you know what I mean oh you got hit with uh 45 seconds of that sorry this is Twitch also you I mean you do have a blue crown I mean you could you could solve this problem yourself I'm just saying uh just something to kind of think I think you know keep in mind up here you don't have to know it today you don't have to know it tomorrow you can just kind of move I think you need to hurry to get things done I don't think you need to hurry I think hurry is what's causing so many problems you need to be intentional and there's a big difference between hurry and intentional hurry is where when you see your kid or your wife or a friend or you get invited to lunch you feel like you can't go because you have so many things to do and you must go or when you arrive to lunch you have you know this much whereas on the other sense intentional says hey I will go but here's the deal I have 45 minutes in that 45 minutes I'm done that's it this is what I'm doing right like you're just being intentional separating out your time and doing the thing that you need to do when you need to do it I wake up every single day and I do the thing I have to do and I don't try to be in a hurry I just try to stay focused and I think there's a big difference I was a early Elixir adopter so for a long time I was always uh best where I worked now I work with people who have been using it only for one to two years and are better than me yeah that's because I mean it's one of the problems of being an early adopter you learn the early patterns and early patterns aren't always as good right early patterns are what build the good patterns right I struggle so much the time management you have to start separating out what you do that's why I stream at the same time every day because I'm actually just chunking out my day you know what I mean I know that I've been working for like three and a half hours by the time I get to this point so this is like my treat you know what I mean does that make sense all right let's keep on going here personal experience and Reflections my journey into software engineering uh my trist with software engineering started like many others with a Fascination for computers and a desire to create the thrill of writing my first line of code the satisfaction of seeing my program run error-free uh the sense of achievement uh when I solved a complex problem I was hooked I love let's say as I dove deeper into this world the Allure only grew every project was an opportunity to learn every bug was a challenge to overcome the long hours intense pressure it all felt worth it I was living the dream or so I thought encountering the dark side my initial novelty wore off and I began to see the other side of the coin the never ending work days the crushing deadlines the constant need to upskill it all started to take a toll I remember the first time I pulled an all-nighter to fix a bug the anxiety I felt when uh when new technology made my skill seems obsolete The Dread of Monday mornings these feelings slowly replaced the initial thrill so a couple things right here right away diet exercise sleep there is no such thing as like I when I start missing sleep you know the first thing that I hate doing streaming I hate it all sudden it's like it's not that I don't just don't want to do it I actually feel like I need to quit now I need to be done I start getting really emotionally like bizarre because I can't like think through my problems anymore and if I don't get good sleep if I'm not eating right like if I eat sugar my life I just like I get Negative it's I don't know how to describe it like I have to like be careful with those three things I always exercise I always do this you know very very simple that's like step one easiest way to just start feeling different is do three things well that's it just three things uh project that turned into a nightmare yeah I mean I've been on a project like this and they can be bad I remember it was like yesterday we were a team of four designed to develop a new feature for our company's Flagship product the excitement was palpable this was our chance to shine little did we know we were walking into a storm the never-ending psych uh work cycle the project was meant the last three months we dived in head first putting long hours coding relentlessly fixing bugs and pushing updates the Finish Line however kept moving further away new requirements emerged unforeseen problems cropped up and three month timeline stretched indefinitely work became 24 7 cycle we worked weekends pulled all-nighters and sacrificed our personal lives at the altar of project delivery as the months rolled on the initial excitement was replaced by exhaustion the project was no longer thrilling opportunity it turned into a soul training ordeal again I don't want to harp on this but it it feels like you started off like you can't start off this way right like you have to set the things up front correctly if you don't like people are just going to like demand this of you and it's going to be impossible uh the pressure to deliver the fear of failure the constant firefighting it all started to take a toll I remember staring at my screen one day the code blurring before my eyes my brain refusing to function I was burnt out stressed and teetering on the edge of a breakdown that project was a stark eye opener it was my journey into the dark side of software engineering uh a journey that left me questioning my career choice I've actually been in this position I have questioned if I'm good enough you know what I mean uh one of the most important lessons I've learned from my experience was the need to establish boundaries a software engineer we're often passionate about our work but this passion can lead us to blur the lines of our profession and personal lives it's crucial to set boundaries and ensure that work doesn't consume our entire lives burnout is a harsh reality of our profession but it doesn't have to be the norm it essentially recognized the sign of burnout and take steps to addressing it take breaks ensure adequate rest pursue Hobbies outside of work these may seem trivial but they can go a long way yes Eat Right sleep eat exercise um lifelong learning has a choice oh a fourth one I know I always I actually have like a list of seven items we've been over them but Community is a very fast follow-up right if you're not connected with other humans it I mean you're isolated work is not your family work are likely not your friends when you quit your job none of your co-workers are going to be in contact with you okay that's just that don't forget that final thoughts looking back I wouldn't say I regret my career choice entirely software engineering has its dark side but it also failed to offers immense opportunities for growth and learning it's a profession that can be challenging also rewarding however it's crucial to acknowledge the dark side and work towards uh mitigating its impact our software Engineers we need to take charge of our well-being set boundaries and strive for healthier life work balance perfect this is a great ending the path won't be easy but acknowledging the problem is the first steps towards finding the solution in the end remember this it's not about surviving in a world of software engineering it's about thriving um yeah I mean you gotta understand I think this is really good I think this is a good ending right here you have to be the one fighting for your own good okay because here's the deal if you don't fight for your own good you will fight for your your malbeing right it's true it's very very true and for some people it is about surviving you know there's a lot of people out there whose life is not good you know what I mean it's not good there's people's lives out there that I mean they have been living in a just an awful situation and computers are their only escape to get out of it and they're going to work an insane amount to get somewhere and they're just gonna have a different Outlook than other people you know perspectives are it's hard to give a one-size-fits-all solution to all this you know it's tough it's tough the man in the cave yeah it's tough out there and I hope that I know some of you out there are those people that are struggling you're hurting and you know hopefully that you know this little reprieve we got going here makes you feel a little bit better but at the end you know life isn't purely about constant working right there is other things better in life significantly better things in life so hey guess what the name is the prime