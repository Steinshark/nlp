I recently unearthed an old backup drive from
the year 2010. Curious to see what treasures it contained,
I plugged it in and switched it on. Ah yes, I was 12 years old and creating a
film called the great museum robbery. That didn't get very far, so I began experimenting
with stop motion instead, inspired mainly by the wrong trousers. With a lot of help from my mother and one
of my friends, I made a little 2 minute short about a ball which sprouts legs and runs away. Bad as the animation is, it still took an
eterinity to complete, so out of laziness I began learning how to animate on the computer,
which allowed me to turn my terrible ideas into terrible results at an unprecedented
rate. Now animating was a lot of fun, but my obsession
at the time was a little game called runescape. I played this for hours and hours and hours
on end, and even made several music videos, which were... very cool. I was particularly fascinated though on the
rare occasion when something broke. This felt like a glimpse behind the curtains,
and it made me want to know more. I'd heard whispers that games were made using
something called "scripting". And so one day I searched my computer for
that mysterious term, and came across something called the script editor. I remember typing some random characters in,
and being really excited to find out what would happen when I ran it. Of course, all I got was my first syntax error. After a bit of searching online though, I
was amazed to discover that applescript was mostly like writing english, and I learned
first how to display a dialog box, and then how to make the computer say stuff, which
I found endlessly entertaining. After a while I was ready to create my first
game - Speed Reactions. So in this game you have one second to press
the correct button. Let's go. Left. Woah, I wasn't fast enough. Ok, left, boom, jim, back, ju... Too difficult for me. "Press cancel to quit", that's normal! So I made a bunch of these little experiments
and games with applescript, the most advanced probably being hangman. But the applescript language is intended for
automating tasks, not so much for developing games, and I started to get bored of everything
taking place in these dialog boxes. It was a great introduction to programming
though, here's the hangman script for example, and you can see it has all the fundamentals, like loops, if statements... variables, functions and so on. By now I'd learned that runescape was created
with java, so of course that's what I wanted to learn. My first java game was noughts and crosses,
which I created with what I learned by reading some of the chapters of a book called teach
yourself java in 21 days. I must have skipped some of the important
ones though judging by the horrors I found in the code. Like an AI class containing 800 lines of painstakingly
coded if-else logic. Thankfully I was saved from inevitable insanity
by a student from the local university who my dad enlisted to give me a few one-on-one
lessons. With his guidance I created my most elaborate
game yet -- the ninja test. There're a couple of different mini games,
but the fanciest is pong, where you need to survive as long as possible against an apparently
unbeatable opponent. The fanciest thing is that the computer player
calculates the trajectory of the ball and moves directly to the predicted location. Pretty imppressive. I take it all back, its garbage. The next thing I wanted to learn was 3d modelling,
so that I could create 3d games. My first model was this aircraft, with a very
strangely shaped rear end. I followed up that masterpiece with a wine
bottle and then a rifle. I just love the texture work on this model,
especially on the back part -- its so obviously a picture of some floorboards. I kept at it though, gradually attempting
more and more complex subjects. Here's my first attempt at a human, and an
attempt at sculpting his head. This man has seen things... I learned a lot from following cg cookie tutorials,
like this one on creating a character called Kara. As you can see, she remained headless, and
to this day I still can't make heads. Something for the next decade perhaps. I also made some strange little animations,
like this one about a disfunctional vending machine in the desert, or this one about a
mannequin trying to make friends with a robot he discovers in an old warehouse. During this time I experimented with a number
of different game engines, but I had a really hard time understanding them. Finally in mid 2012 I came across the Unity
engine, and followed a 3dbuzz tutorial to create a little space shooter. From this I learned many of the fundamentals,
like player input and movement, collision detection, and instantiating and destroying
objects. The programming is done in C#, but since it
was so similar to java, I was able to create my second game without the help of a tutorial. By this time I was really into call of duty,
and so I started work on my epic zombie survival game. I made some little devlog videos for this,
which were some of the first videos uploaded to my channel. Hardly anyone was watching them though, which
was a problem because I needed to get people excited about it so they'd buy it when it
was done, and at 14 I didn't exactly have a huge marketing budget. So I decided to lure people to my channel
with tutorials. The only problem is that I was very self consious
about my voice, so I pitched the audio down several levels to sound more manly. [2012 Seb: Hey guys, welcome to this Unity tutorial on how to create a zelda-style health bar] The video was about 30 minutes long, and contained
nuggets of wisdom like -- [2012 Seb: So um, when we start scripting we need to think about... what does this script need to be able to do?] You heard it here first folks. The tutorial did actually get a fair number
of views, but I then abandoned the zombie game because the code was a horrifying mess
and everything kept breaking. Instead I started this new project in 2013
- where you have to build out your base, and use different weapons and so on to survive
against hordes of invading aliens. If I've ever been consistent on something
though, its not finishing what I start, and so I soon moved on to creating a slew of similarly
unfinished titles. To be fair though, I do think that creating
loads of little prototypes like this is a pretty good way of learning. Towards the end of 2013 I entered a challenge
to finish a game, and try earn at least a dollar from it. So, I spent the month making May the Best
Man Win, a pretty unremarkable tower defence game where you compete to be the best man
at your best friends wedding. I put it up for sale, and was over the moon
when several nice people actually bought it, making it the first money I earned from game
development. [Pewdiepie: Next up, last chance supermarket]. This was a game I made for a 48hr game jam
called Ludum dare. Essentially, you need to rush around with
your shopping cart and get everything on your christmas list, while also trying not to crash
into the other frenzied shoppers. This was perhaps the first game I made that
was actually fun to play, and I was super proud of it and made a whole behind the scenes
video about my process of creating it. It went on to win first place in the fun category
of the competition, and also enjoyed a brief moment in the limelight after it was played
by a certain swedish gentleman. [Pewdiepie: "Well that game was pretty cool, I like it"]. Well, I clearly peaked in 2014, so I'm afraid
its all downhill from here. Infection was my first time collaborating
on a project -- I teamed up with Daniel, who did the art, and later on Thiago, who made
music, and together we worked on a number of little games, like This Little Piggy, which
is a game about making potato salad. By this time it was 2015, my second last year
of high school, and in that year, everyone has to pick a project to work on for about
6 months, and then present it to the school. I chose to start creating tutorials again,
so I bought a microphone with the bit of money I'd made from the supermarket game, and started
creating animated diagrams for my first tutorial on the A* pathfinding algorithm. I followed that up with a series on modeling,
rigging and animating characters in Blender, then creating a 2d platformer controller,
and finally procedurally generating caves with cellular automata. I enjoyed working on these so much, that once
I finished highschool, I decided to not go study, but just keep making tutorials. I was already earning some money from ad revenue
and occasional freelancing, and I also then started a patreon page, where people have
been incredibly generous in supporting my work. So in the past few years I've been much more
focussed on creating tutorials than games, but I did find some time to work on some small
projects, like spirit rover, a game where you have to write instructions to send to
a little mars rover called spirit, to guide it through the treacherous terrain; or Splotch,
made with my friend liam, where you draw lines to try bounce balls around obstacles and into
their gates as quickly as possible. There was also Swordfish, a game about hacking,
but in a very hollywood action movie kind of way. In this last year though, I've been trying
something a little different, which is to take a topic that I think is interesting,
and spend a couple of weeks to a month researching and playing around with it. And then, unlike with my usual tutorials where
I'd just show how to create it, I've been trying to show more of the entire process
- so the initial experiments, as well as the bugs and roadblocks and the random tangents
along the way. I've been having a lot of fun with this series,
especially because its given me the freedom to tackle things that are a bit out of my
league. For example clouds was a recent project I
undertook, and I couldn't make a tutorial on it because I wasn't able to get it run
fast enough to be useable in an actual game, but I think it still made for a pretty interesting
coding adventure video. Well. In a nutshell, that's been my first 10 years
of learning programming and game development, and of creating youtube videos. It's been hugely motivating to have so many
people actually watching and responding to the videos, so thank you all for that. And an extra huge thanks of course to those
who've been supporting me in all of this on patreon. It's been an interesting ten years for me,
with lots of weird projects, ranging from being a fly trying to get up someone's nose,
to creating a terrible little console to play snake on, so I'm curious to see what the next
decade has in store. Thanks for watching, cheers.