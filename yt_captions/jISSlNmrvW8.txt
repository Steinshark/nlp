I personally am having a hard time trying to figure out why you wouldn't want self-closing tags okay they feel convenient okay so let's talk about this all right you see the syntax on my blog it's what prettier does and I really like prettier however I don't think this is a good thing okay we're about to be hit with facts and logic everybody get ready facts logic here comes yes I'm a virgin yes I have sex yes we exist that's going in the YouTube video flip zoom in take it out facts enter XT HTML back in the late '90s and early 2000s the web 3C had a real thing for XML and the thought that it should replace HTML syntax there was a is there I thought HTML was a subset of XML is that is that not it xbrl do not mention xbrl here please it's a subet of sgml you're right you're right you're right I knew that shut up okay there were good reasons for this there let's see at this time there was no HTML parsing spec so when it came to anything non-trivial you would often end up with four browser engines interpreting the same HTML document four different ways on the other hand XML has a fully defined parser but it would have been a huge change to do this all at once so in 2000 xhtml 1.0 became a recommendation a proposed writing HTML in a way that was compatible with both existing HTML parsers and XML parsers that meant you'd write this okay uh because we let's see uh because we've got to scare away newcomers right I don't get that argument I mean this is just real talk this is just you put at the top of your XML you write this like once per project and then you never look at it again right I didn't I didn't know what was going on I just knew that you got to put all that crap up there you got to do a little dock type and like that's that like that's what you got to do you got to dock type it and then HML 5 came around and then you just like bang dock type or whatever it was and that's like that's what you did like I I don't really understand that one uh but because we got the scare away newcomers right uh instead of option value selected option we did you'd write option value Fu selected equal selected well that's because it's funny okay can we be real here that selected equals selected is really funny can can we agree that it just warms the cockles of my heart selected equals selected beautiful all right uh because in XML attributes require values and they must be quoted with double quotes this is true this is true uh and you can do this I think this right here by the way like this I totally get this is a Boolean property on on an X or on an HTML tag but this right here I I honestly think if this is generated code it's fine but if you handwrite a property with no with no double quotes I think you're trying to be a bad person I just think you're trying to be so clever real talk I think you're just trying to be too clever like that's just so effing annoying don't do that because actually yeah yeah and also Source equals Source instead of this you'd write this well would you wait whoa whoa whoa whoa whoa this is only an artifact of the engine parsing you're technically supposed to put a closing image tag because HTML is hyper resilient uh there's a computer file a computer file YouTube video where it talks about this it does the same thing with Pags it's why you can't Nest certain things with Pags but you're supposed to actually have a closing item just the engine knows that images cannot have children therefore it does in itional insertion of closing images you're not really winning there uh because in XML tags have to be explicitly closed and XML has a Shand for self-closing tags I actually so I I mean for me I actually like this in HTML tags have to be explicitly closed to just well most of them do some of them don't and that's I mean to me that's actually a much bigger problem than this uh in an XML it generally be formatted like slash this okay without the space before the slash but in Netscape Navigator 4 couldn't code with that I love it I love it I love it oh my good couldn't cope without the space Whit space significant Netscape Navigator HTML where the slash immediately followed the attributes so the spec recommended a space before it but browsers didn't care these rules were purely for XML parsers and because documents were being served as HTML if you're that one guy who served their site as application EX uh HTML plus XML you don't need to tell me these syntactical extras were ignored with option equals selected selected the value was ignored so option selected would work too this truly was the biggest curse can we all agree like that the bigger curse isn't that option selected equals selected is a problem it's the fact that we're trying to straddle two different two different things selected is treated as a Boolean property so you can technically put whatever the hell you want in there there so that's why selected equals false is totally true disabled equals disabled is does that mean disabled is disabled or does that mean disabled is true like real talk how do you interpret that disabled disabling oh I dude we really we really need to come in with the n apostrophe T modifier and programming I think it's so beautiful uh if you end a slash with a slash close the browser sought as parsing and ignored it that's why uh where I started to take an issue Burr is BR closed this text is not included inside the Burr but also beer is closed the text is not CL yeah that's because line breaks can't have text inside of them see that's to me that's not a parsing error I don't think it's actually a parsing error I actually think that this is correct this is a fully formatted tag opening and closing this is just an implicit closing it's kind of like an automatic semicolon insertion in JavaScript you know good oldfashioned automatic semi colon insertion which still has one Legacy bug that I hate the bug I hate return that what what do you think comes out of this bad boy what do you think comes out of this bad boy what do you think comes out of that bad boy the bug I hate what do you think's coming out of this yeah you get a sweet ass undefined huh yeah isn't that great isn't that great JavaScript not white space significant except for that one time automatic semicolon insertion boys uh so what happens oh it's because it's hits the return statement and then a new line says oh there's nothing here they meant to return undefined therefore we automatically insert a semicolon for you someone fix this Rex oh my gosh you didn't know about that it's a good one this is a good one skill issue yes true facts and logic how is that real it's Java cript it was invented in a coded out 10day cycle by Brennan Greg okay Netscape Navigator walked into his office one day and said hey we need Java and he said I'll give you scheme and they said deal but you got to have null so we have Nan null and undefined and scheme likee language that kind of looks like Java what do you want what do you want 10 days give give the man a break give the man a break all right this is where it gets confusing div slash the div is open the text is inside the div really okay that I did not know really are you really is that true no well damn it's inside the div okay everybody it's inside the div the web is truly an awful programming platform I you know what I think we should all take a moment and just appreciate the fact that we've come this far with this so that does that mean a self-closing div uh doesn't work but does that work I'm more curious about that so if we do it that way does that actually change it okay so that does so you have to do a closing div tag to properly close a div so hold on now now now I got more questions it just keeps going inside how do you end it wait hold on does that mean I have to do an ending T tag here dude please tell me this works please tell me this works please tell me this works please tell me this works oh my goodness it works oh I'm so happy I'm so happy I'm so happy that this actually works if you yes yes oh this is so good this is so beautiful I already know this trick this trick makes sense but it's stupid okay oh this is so good I hate this so much I hate this so much this is actually the most evil thing I've ever seen in my lifetime anyways let's keep on going okay this guy's making dude bro bro making a point he cooked and he might actually be right I honestly I came into this article thinking he was wrong I think he's right the Bro cooked and I mean this guy came out with fle Fong all right in XML div would be a self-closing div but not an HTML in HTML it isn't the close uh that closes a burr it's the Burr it's a special it's a part of a special list of elements that can have never have children and therefore they self clo div self-close doesn't self-close because div isn't on that list I cannot believe I never knew this I I I I I actually just don't I can't even believe I I I didn't know this this is it is actually exceptionally confusing the transitional phase of xhtml ended in xhtml 1.1 and at this point the spec required the document to be saved and parsed as XML XML parsing rules were well defined except for when it came to invalid syntax was encountered the best thing browsers could do there was just show an error page else we'd go back to browsers just making stuff up and each behaving differently and to that browser said no thanks agreed that's actually this is by far the worst possible way to do things uh well that didn't actually they didn't actually say no they supported it and still today here's a valid ex okay you can do that with that little thing and here's an invalid one but the browsers didn't see it as a future ask yourself if you visit a website of your local doctor surgery to find out the opening hours which browser is best the one that only displays the opening hours of the surgery or the one that displays an XML parsing airor message I mean it's obvious why they do this right hmil is meant to be highly resistive to to like failing wow one of the great things about browsers is they're air tolerant and browsers weren't interested in giving that up xhtml was eventually abandoned because a new thing came along that browsers were happier with HTML 5 entered the scene in 2008 and one of the major things it was introduced was a parsing spec and unlike the XML parsing spec it detailed what browsers should do when they encountered weird and invalid markup it did away with all of the XML requirements introduced in xhtml and leaned into the looseness of HTML parsers that existed at the time it does handle the slash specifically but only to specifically ignore it I I honestly cannot think of a reason why you would ignore it I feel like I knew this in my younger days when I was like really actively building in like the I8 days I feel like I knew this but I don't know this now has anyone tried a kin's Advantage 360 yeah I use it all the time 60-day money back guarantee use my code at bitly prime prime prime prime prime ke keyboard I actually love this keyboard I use it all the time it's fantastic Prime Kinesis Boom the the the the the look at that it changes all the time so it's this right now it's actually fantastic I love this keyboard I've been using it I've been using this keyboard before I got sponsored for like a half decade it is like my favorite keyboard in the universe it feels so much better than the advantage too somehow it does but I love the advantage too PA chatter by the way that was totally a plant I love it I I I love Kinesis I've been using them for over a decade they actually saved my wrist I was experiencing so much pain and I switched to Dvorak and akinesis to save my to save my uh my wrist you know what I mean that was scary I was just having my second kid I was having a whole bunch of pain shooting up the side of my arm and I thought I was like oh like I am I am I going to have to quit am I going to have to become a manager like what the hell am I going to do dude I was freaking out I'll tell you this much I was freaking out no query I I gave up query yeah uh although Savage is an XML format when it's embedded in HTML document it's parsed by the HTML parser uh do you work did you work out back then I did I did am I going to have to become a manager my size I know D I was not ready for it however to increase compatibility with copy pasted Savage content when HTML parser is within a Savage tag it switches to foreign content mode where slash actually is Meaningful the div is open really oh that's cool other foreign content such as math ml behaves the same wow okay so this SLG you don't get a group okay uh that is where uh things are today with Slash SL close is mostly meaningless in HML documents wow okay these are the the facts are good I mean I'm fact and logic right now I fully on this gu I cannot I've never had my opinion so changed in my entire lifetime honestly I am shocked at how much I agree with everything that was just said I was I was truly not planning on being planning on agreeing with that by the way all hes really appreciate that comment really amazing insightful although in Industry we generally discarded most of the xhtml requirements this self-closing tag decoration seems to have persisted despite being a Remnant from a spec that abandoned over 10 years ago folks even include the space before this which uh was added for compatibility with browser engines from the previous Millennium the this guy's articles are quite good overall yeah I'm loving this so far I think it's confusing Relic from a Time past and I don't think tools like prettier should be pushing it to make my case I'll respond to counterarguments that came up on a Twitter thread oo I love this self-closing tags make it easier to read and are helpful for newcomers but they don't actually self-close so there there literally is no reason outside of foreign content elements that self-close will always self-close all other elements won't this is this text is outside the input this text uh this text is outside the input this text is inside the div this text is inside the div yeah I mean really this is this is actually like this is I'm fully convinced I purchased in uh but it does uh SL cloes have to work to be useful code comments don't work just like slash that they're an indication they might be misleading but that isn't a good argument for removing code comments the problem with Slash is it doesn't work like a comment and worse it doesn't always behave like a comment due to rules around foreign content yeah to me this is just like straight up don't use slash because it is actually misleading it actually is incorrect you can use it in Savages but use a minifier let a minifier just do it for you I'll self close tags if I want to go go for it uh I think that's particularly bad for newcomers imagine you've never seen image before you you see like unlike other elements it doesn't have a closing tag debuggers and validators don't complain about it suggesting there's something particular about this element you need to learn it doesn't need to close it self closes and it's a partic and it's particular in this Behavior yes I I you you've sold me now imagine you've never SE you've never seen this before you look up this new syntax you discovered and learn that it means self-closing at this point why wouldn't you assume frame closes too why would this not or this uh is valid given this I'm particularly sad that mdn uses self-closing tags as a beginner facing documentation it's consistent with jsx jsx Js SX and HML are different formats they aren't consider uh consistent with each other pretending they are consistent is misleading ooh I didn't realize that it's not consistent with jsx oh that's even worse let's see the above HML renders as hello world right the above uh jsx renders as hello world this is outside the div wow I didn't realize these things I like honestly I always thought it was um I always just thought these things were identical I did I didn't I I literally did not realize that there was a significant difference in jsx versus this especially this one particularly because this is like if you switch to anything other than jsx you're going to get bit in the ass because you have no idea how the thing actually works I don't think it's based to jsx okay now that's this is this is actually what I I'm I'm shocked jxs was a mistake every they're all mistakes maybe jsx is the more correct form the way I would expect it to work nonetheless J JS was the real mistake here JS maybe JS was the friends we made along the way okay uh maybe JS was the Articles we sipped along or the lattes we sipped along the way while making hundreds of thousands of dollars at a uh Google like like Place rest inv vest baby div class name equals food the above HML produces a div with class name attribute component class name equals this the above jsx produces a div with class attribute okay that's more of a react thing than jsx thing but that's really common way yes I do like the these little secret names are very annoying as well secret names are super annoying can we all agree with that that like having to need to having to need to know keywords and keywords translations are super annoying and I always thought it was C Class name camel cased uh it means I can parse HTML with an XML parser call me some sort of purist but if I want to parse an HTML document I'll use an HTML parser I wouldn't try to write try and write jonon so it can be parsed by yam parser so I don't see why I do the same with htl and XML Fair fact B based awesome agreed just fully agree there are many great HML parsing libraries out there for almost every language and since the parser is specified the result is consistent it makes markup faster to parse I've heard a few times and I don't think it comes from an assumption that the more information you give the better the processing can optimize or something but let's let's compare the two parsing Burr there's a new tag Burr the element end tag Burr doesn't go back into the stack of elements because it's a self-closing one Burr parse Burr oh it's a new tag um bur this okay I'll just ignore that and tag bur doesn't go back on the sack of elements because it's the one of the self-closing ones so technically Burr is slower to parse as it contains an extra slash yep it isn't any slower it isn't slower in any meaningful way but it definitely isn't faster base factual and awesome it looks pretty okay so this actually is my only true argument right now I can think of sure that's objective I thought slash close looked ugly at the first time I worked on a code base that required it but I got used to it I also got used to missing it uh got used to missing it out uh if prettiness is the goal hey we could use type we could use this I don't get that I honestly don't understand what that is oh stop I get it it's a stop sign but seriously uh I think Aesthetics should take a backseat given how misleading the syntax is prettier should be more opinionated I think prettier should fix their case statements is what they should I respect prettier uh our way or the highway approach but I don't think it's consistent here it will change Burr to bur but it won't do anything with div in fact if you give it div it will reformat as div I think prettier should either drop this in cases where it's meaningless to parse or fix the case where it's actively misleading as in this I actually think well that's a great Point how do you even resolve how long this thing goes like this is actually really hard this is a very seriously hard parsing problem right this is this is switch statements Drive uh in prettier drive me nuts same here it's why I won't use prettier honestly it's why I won't I think it's stupid the top one is invalid HTML this this yeah this one is invalid HTML but that's what prettier does it's an unclosed T and prettier can't fix that well the problem is is it can't remove it because there you could have styles and stuff you could be expecting something to happen right you can't just remove this because it has meaning that's the hard part because you don't know what styles are applied to basic divs you don't know what's going to happen here so you can't remove it the problem is is that it's true behavior is this and that's what's misleading a major part of the problem is that slash uh SL close is sometimes ignored and sometimes not within the same well it's always ignored there's just behavior that happens within the same HTML document or I guess unless if you're in Savage then it does the correct thing right we could have the option to switch the parsing rule so slash is Meaningful as in SL D actually closes the T take I filed an issue for this but I suspect it's a no-o due to incompatibility with incompatibility incompatibility with existing libraries particularly security sensitive ones oh well what a way to end the article GG what an article what an article this was fantastic my goodness hey Twitter you you I you've earned you've earned a follow from me there you go you get a follow I appreciate that Jake archabald what a name what a beautiful name archabald