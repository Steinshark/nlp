[Music] hello i don't know if you can see fully but i have like business up top and then below is like my sweatpants this is the epitome the epitome of work from home vibe i feel like you know if you have meetings you need to dress appropriately up top and then down below is like i'll party just hopefully you're wearing pants i am wearing pants thank goodness okay let's get started [Music] today i wanted to sit down with you and just have a really candid conversation about what to do when you are stuck on a bug when you have a problem that you cannot solve in your code what do you do especially when we are starting out okay wait let me scratch that actually really throughout our career there are times where we can't solve something and the thought or the feeling of oh my gosh i have no idea what i am doing i am a fraud what is going on can take over and become very overwhelming today i am going to talk to you and share with you how i really go about breaking down a coding problem that i am trying to solve and if i can't solve it the steps i do to solve it before we get into it though make sure to hit that subscribe button for more tech and coding related videos leave in the comments some other topics you want me to cover and let's get into it [Music] i remember when i was first starting to code those feelings of getting stuck every two minutes and it just never went away that was so frustrating you know constantly needing help as i grew my skills and it's normal and people say people tell you it's normal but when you're in that position it never feels totally normal and it sucks and i don't want to sugarcoat it or say there's anything different it just genuinely sucks those moments where you're just stuck it's not easy and it can be really frustrating as i grew my career there were highs and lows i would say sometimes where i felt on top of the world like i knew everything all coding problems that were coming my way i thought i completely knew how to solve and i did and then it's kind of like almost a mountain or hills where it's like you're doing grading and then it falls you degrade and then it falls and it's definitely a roller coaster ride so all i have to say to that is buckle up although as your career grows and your skills grow these moments of what the heck am i doing maybe become less and less they never go away i'm never going to say that because they really don't but throughout my career anyways as a software developer i've really found different techniques and tactics to help me get to the answer quicker uh to solving a problem quicker than i did when i was first starting out now i want to make one more little side note here that these are tips and tricks that i use but to say that i sometimes forget to use them or it's easier said than done that's very true i think often you know we have these great ideas or great advice but to always implement them that's a different story but i try and stick with them as much as possible if i'm solving a problem or facing a bug or a defect in the code base and i cannot solve it i've been staring at my screen for a long time the first thing i do is always get away from the computer back away from it and i know this is nothing new no this is no mind-blowing tip and lots of people do this but the key here is to actually do it we often think we're going to do it or say we're going to do it but we don't take that time to do it and i think this is because we get so stressed out about what we are working on that we just go okay well i can't i have to fix it now like i just i need to and in turn we don't actually listen to our you know brains our logic side of things it's like we need a break we need to unwind and just step away from the computer so my biggest piece of advice is the first thing i do if i cannot solve something and i've been staring at my screen for a little bit too long is to go for a walk and don't just go for a you know a 10 second walk to your kitchen or anything like that like get out of your house take 30 minutes and just get away from your computer it's so important and it sounds so obvious but until you actually do it you will not see how impactful this can be once i come back from taking a step back from my computer if i spend a bit more time on it and i'm still not able to find a resolution to the defect there are two things i kind of do the first thing i will do is i'll either speak out loud or write it down what exactly i am trying to do and where i am stuck and i will always phrase this in a question from the form of a question so i'll be like this is what i am trying to do where i am stuck is this but how do i but and then specify in the question what part you are stuck on so my question is i'm having trouble doing this this and this here's my research for this and i'm using a lot of this but i think you get what i'm saying really breaking down the problem because a lot of times when we are stuck on a problem for a while we actually forget or lose sight of what the actual problem is because we're just so stressed about having a problem is that just me i feel like i got really passionate there but it definitely is a thing where you forget about what problem you're really trying to solve because you're just so overwhelmed with everything else going on if after i have gone for a walk stepped away from the computer spoke out loud what i'm trying to do or written it down the last thing i will do or the second last thing i will do is time block and i find this really important because i'm someone who otherwise will spend days days or a day depending on the defect uh trying to figure it out on my own before i ask for help and i really don't think that's the right way of going about things i think it's so important to ask for help because that really is how we learn and for myself if i don't time block i'll just be too i just let my ego get in the way and i'm just like no tip don't ask for help just figure it out on your own but then so much time is wasted that could have been used for other things if i would have just asked for help right away for me depending on the defect and the urgency of getting it resolved this might be time blocking for an hour for two hours and if i still can't resolve it that is when i go ask for help now everyone's company or organization is structured differently for who to ask for help for me it's either my mentor or my dev lead at work or anyone that i can really trust and have some context into what i am working on okay i feel like i need a coffee break give me a sec here also do you like the tiffin tech mug like what it's pretty cool [Music] coffee it's just the best thing in the world i'm telling you when i go to ask for help i really structure it in a way that is clear for the person to understand my biggest pet peeve at work or in general i should say is when someone comes to ask me for help i love helping people when i can and where i can and i mean i love that but if you're coming to me and you're saying i need help i can't figure this out and you don't send me a link to the ticket you're working on break down what part you're stuck on what you have tried and what your specific question is we are going to waste so much time just uncovering that basic information so i always make sure when i'm asking someone for help that i give that to them i send a link to what i'm working on i break down what i have tried send some links to articles that i've researched and different implementations i have done and then i also ask a very at the very end of my kind of note to this person is the question and i literally type my question is followed by the question of a very specific question that i'm asking them otherwise it's just for the person on the other end it can be overwhelming as to like whoa okay i get you need help but like help me understand how to help you and i think that's a really key thing when we are asking questions at the end of the day though no one has it all figured out and i want you to remember that and i'm telling myself that as i'm sitting here right now because we all have highs and lows we all go through different periods of time where we know feel like we know so much and then we feel like we know so little and there's just this cycle or the circle of learning and being a forever learner and i just want to let you know that it's okay don't get down on yourself don't lose patience on yourself don't doubt yourself we got this you got this we've all been there and as long as we are willing to put ourselves forward and put ourselves out there that we want to learn and grow and get comfortable with being uncomfortable the sky is the limit and i know we got this i'm curious to know though what are some other tips or things that you do to help you uncover how to solve different defects leave in the comments i hope you found this video very helpful and valuable and i will see you all soon thanks everyone [Music] okay now we gotta go back to coding coding time