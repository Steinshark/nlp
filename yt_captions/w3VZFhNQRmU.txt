perhaps an interesting one to look at because it's quite a clever design when it was produced is the Apple 2 so we have a corrupted Apple 2 so let me just turn it off and on again the technology changes with the method stay the same so the Apple 2 we've got a Apple boot whopper here five and a quarter inch this sir machine actually came from the Cambridge Centre for computing histories so notice the noise it made or I'll switch it on that was the heads on the drive being sent straight back to the first track on this so it could start loading in the operating system for the Apple 2 had an interesting arrangement for storing the data because steve wozniak when he created it managed a completely reduce the amount of electronics needed to drive the floppy drive compared to all the other machines at the time the way that a floppy disc and certain tape formats will store the data is that they will encode the binary data so the 0 and the 1 that the computer needs to store so it encodes a 1 by changing the flux produced so if it's one-way it'll change it to the other then it's that way it'll change it back to when he wants to store a 1 it encodes a 0 by saying that I'm going to leave the magnetic flux polarity is recording the same thing as what the previous bit of information was so that's how it encodes the information the problem with that is you can't just write the ones and zeros of the byte that you want to record to the disk because if you have a large string of zeros because the timings aren't accurate and vary between two different floppy drives you wouldn't be able to sync the computer to the actual data coming off the disk and there whether there was to 0 bits here or was it 3 0 bits that was on a machine that's riding too fast or am i reading 3 0 bits on machine that's reading too slowly etc so you have to set down certain rules for how the information is stored so what Steve wasn't yet decided to do is use a thing called group code recording to encode the data so rather than storing the 8 bits of data then he wanted to store directly onto the disk because of these things you couldn't do that what he actually did was to say I'm going to encode this data in a specific way so he what he did is he took 5 bits of the data he wanted to and he had two rules that he use to store the information on the disk firstly he said I've got to write into 8 bits at a time and each of those 8 bits is going to start with a 1 so the most significant bit of the byte that he's going to write will start with a 1 so that was his first rule that all the bytes will start with a specific one the second rule he said was they could only be a maximum of one zero bits between any two 1 bits that were written out this meant that the electronic could easily keep in sync with the data as it came off the disk and work out what bits are being recorded what this means is is a code like 1 0 1 1 1 0 1 1 is absolutely fine to use because it meets both rules we've got a 1 as the most significant bit and we have no more than at least 1 0 bit between any 2 ones on the other hand to code like 0 1 1 1 1 1 1 that wouldn't be allowed and 1 is allowed because we're starting with a 0 and because we know that all the bytes start with a 1 we can easily lock onto the first most significant bit of the byte because we know it must be a 1 also a code like this wouldn't be allowed because we've got 2 0 bits in succession there are only 34 different 8-bit values that meet both these two rules I they start with 1 and they have no more than 1 0 between any two 1 bits 34 different possible values gives us enough information to encode 5 binary bits of data so five bits of data that which is 2 to the power of 5 is 32 which is less than the 30 for different value so what Steve wasn't that good in software rather than in hardware like everyone else was doing at the time was to take five bits of data from the that he wanted to store and using a lookup table in memory convert it into whichever of the codes was used to store that data if we look at the floppy drive we have here is it cheaper was that cheaper to make us it was cheaper to make because a lot of the controllers are here or to do things like control the stepper motor that drive the head backwards or forward and spin the disc he was able to replace that with software control things on the i/o card for the Apple 2 he had to be very clever and build a very specialized processor based around a ROM chip to actually read the data back in but to write the data he could do it all through software very clever design which people respected does the flop you have some kind of table of contest I don't know where to start with anything well this is a very good question is actually two things you need to be a world is first of all you need to know where the file actually is that you want to access on the disk which sector it is on on which track so if we want to access the file let's call it CP we need to know that it's stored at track 2 sector 2 and so on and so we'd have a catalog on the disk that would say that CP begins at track 2 sector 2 and so all the disk file formats you've got basically our ways of mapping from file names to different tracks and sectors on the disk how do you know where sector 1 starts on the disk and that you're not reading sector 2 or how sector 3 starts on the disk five and a quarter inch disk so if I move the light here so as I spin it you'll see there's a little hole and there's a sensor inside the drive which will actually look for that hole it's just a light shining through it to a set on the other and that will tell it where it becomes to the beginning of the track so that allowed it to orient itself basically exactly there's a way of finding out where I was so the first floppy disk actually had another index hole and so each of the sectors were hard marked on the disk with holes so that you could actually detect where you were but one of the other things that Steve Wozniak's decided to do was to use some of the unused codes that he had he had 34 codes but only 32 of them to represent the data you're storing to mean the beginning of a sector so he used e 5 and a a in hex as values to represent the bidding at the beginning of a sector so that whenever you saw the sequence D 5 a a nine six you knew you'd become to the start of a sector because that sequence was guaranteed and never appear in the actual data because neither D 5 or a a were used to represent data so you could mark the beginning of the sector and actually you could do that with Claire things he didn't actually necessarily need to use the index hole at all this is called his soft sector disk in all hard disks and modern floppies use that doing a true bit of trivia on those in South Africa they're nicknamed stiffies that may not make the final cut