it's been a while since I talked about my vs code setup so I thought it would be nice to show you some of the extensions that I've been using lately now most of these are free or at least half a free version and I'm going to focus on extensions that will help you with backend development specifically but I'll cover a few other extensions that I'm using as well hopefully this video will give you a couple of ideas on how you can improve your development workflow you know before we're all being made obsolete by AI I don't actually believe that by the way now before you start coding away on a new project it helps to think about what you actually need to do I have free guid to help you with this you can go to iron. c/d designu to get the seven steps that I take when I design new software packed with insights to help you avoid common mistakes grab your copy at iron Codd designu the link is also in the description so especially if you are developing backend applications there are several extensions in vs code that can really help you work a lot faster so in that sense you can use vs code as much more than just a code editor because there has lots of other tools and extensions as well that are very useful if you're developing a backend service often you're going to want to communicate through HTTP requests and there are several extensions that can help you do that for example there's rest client that allows you to send HTTP request within vs code but another one that I like to use is Postman Postman is not just an extension of vs code it's a whole platform it can also host API documentation for you and do many many more things but just having it as an extension in vs code is actually really helpful what this basically allows to do is to create all sorts of HTTP request in Postman that you can then run later on and run very easily to check whether your API is actually running correctly in order to show you how this works I have very simple main file here which just a basic fast API app and that has just a single endpoint that returns a dictionary of items this from one of my older examples now in order to test test this I could write a curl request and write that in the console and check the output but in Postman you can actually create a collection of different types of request and do a lot more interesting things with them so the postman extension after you've installed this you get an extra icon here if you click that and you can see that on the left you have a collection in this case there's a single request in this collection now you can add more Collections and add more requests and organize things that way but if I click on this request I could also give this a more sensible name for example I could call this test root request and uh my collection I can also name that something else like Fast API um toolkit app right now if you look at the page of this get request you can see this the URL and that's the URL of the API that I'm running here locally using uvicorn but I simply put the get request here and then I can do send and then it's going to send the request and what what's nice is that this is going to give me the Json structure as a result and it's going to format it for me so this is much easier to navigate than viewing just Json data in the console and then there's different options as well for example if your API for some reason returns XML data then you can switch it to xtml or text or Auto then it's going to detect automatically what it is and you can look at the nicely layout version you can also look at the raw version and then you're just going to get the raw result back you can see things like the status you can see how much time it took you can see the size of the response that was sent back Etc and there's other things you can do here as well so not just get request obviously but all the other HP verbs are available so you can also very easily have a post request and many other things like authorization headers with the various standard authorization options or if you have a post request then you can send a body with key value pairs or uh it also has support for graphql built into Postman directly so all of these things will help you more easily test your backend and make sure that actually responds with the things that you expected to respond with another nice extension I want to talk about is git lens this adds like a ton of features on top of the git the basic git integration into vs code one of the things that it adds for example is this sidebar that you can see here so you can click on these views and then you can see more details about what's happening in your get report story so for example example here I have the commit graph which shows me on in this case the code examples report story that I use for every video in my channel it shows the commit activity it shows who committed to what which branches etc etc and this is actually really helpful to be able to see this quickly and there's other things as well such as a more detailed view on a particular commit and seeing the changes that happened with that commit see things like authorship information and so on another thing that's quite nice that git lens does is that you can put your cursor on line of code and then you can see when you made that code when you made changes and then when you hover over the text you immediately get more information about the commits that happened and what were the changes so also very useful and of course especially if you're developing backend applications you probably working with Git repos story you might even work with other people having an extension like git lens is really helpful another type of extension that I find quite helpful is extensions that can interact with databases but from within vs code so so you have these for all of the major databases like poster SQL my SQL but I'm also using sqlite quite a lot for local development and there's also a sqlite extension that you can install so when you have this extension installed it's really easy to open a sqlite database file and see the contents of the database in this case what I did is that I added a sqlite database file to my folder right here and if you want to open that I can go to the command bar and I select sqlite open database and then I pick my database file so in this case that's a hotel database and then we have a sqlite explorer that shows up in vs code which is really cool and then I can click on this and I can see that my hotel database apparently has customers it has reservations and it has room so if want to look at the customers that are in the database I can simply press the play button here let me just close these because these are not used at the moment and we can see immediately what's in the database which is quite nice and this extension also has couple of other nice features for example you can view the content as HTML or you can view it as uh Json format and then save that somewhere so you can access it later another type of extension that's really helpful especially if you work with multiple people in a team is to have some sort of Auto formatting and linting Tool installed now if you install the basic python extensions in vs code you're going to get pyin and pyant which is kind of shipped with what Microsoft offers you so over the past few is I've been using pilent quite a lot and as an Alo formatter I used black which I also really enjoyed but now there's another one that has been growing a lot in popularity I've been playing around with it and it's actually pretty nice and it's called rough and this is an extension that replaces both pilent as a linting tool but it also does Auto formatting and there's a couple of nice things about rough one is that it's way faster than something like pyin it's like 10 to 100 times faster so especially if you're doing backend development you may be running Docker containers running servers locally then if you can save on performance by using a more efficient linter and auto format that's actually going to help out a lot so I've been playing around with this and I actually really like it you can just install it with pip pip install rough and then it's going to install the tool and then use the vs code extension so that you can do things like formatting things automatically there's a couple of basic formatting settings that I've enabled so these are my user settings so one is format on save so that whenever I save the file it's format it automatically according to the rules then I have a default format which is this case rough and similarly a folding range provider that's also rough so that everything is basically handled by rough and you can see it working here so if I press save here then it's going to apply Auto formatting and rough does other things than just formatting it also can order the Imports correctly you can also tell it to automatically remove any unused Imports which can also be quite helpful so there's a bunch of stuff that rough does that you can't do with uh black and with pylons another reason I like it is that it's fully compatible with python 3.12 and with pyland I was still having some issues with the latest version of python so to finish this video I just want to quickly go over a couple of other extensions that I use that I still want to mention but don't want to really treat in depth one is that I have a couple of extensions that are related to Docker so especially if you're building backend applications it's helpful to be able to run your Docker image locally so you need to install the docker desktop tool but then the docker extension for vs code allows you to easily see which containers are running do some debuging things like that so that's a Docker container also I use this one which is a uh toml language support extension so if you use Tomo files for settings like P project file for example then this helps with syntax highlighting validation folding and a couple of other things as well that's Tomo support then there GitHub action so for all the tools that we develop at iron codes we use GitHub as our git repository service and we use GitHub actions for deployment so this extension allows me to easily see in vs code what is happening with my GitHub workflows then of course we have a couple of AI tools I like to use GitHub co-pilot and GitHub co-pilot chat for me that works really well within vs code I use that basically all the time whenever I'm doing development I can highly recommend it git lens I mentioned already I have a couple of extensions for Jupiter notebooks I don't use jupyter notebooks that often but I still have these installed I have a couple of extensions that are related to markdown so this one offers some extra editing tools for example if you have a table in markdown this allows for an easy way of editing the entries into the table and has like a bunch of other stuff as well then I have this one which is a markdown PDF converter that's also quite helpful if I write a markdown file and want to export that to PDF then this does that for me also this particular extension is nice because that has mermaid support to markdown so if I want to create a mermaid diagram then I can simply do that in markdown and this is going to render it for me and the final extension that I want to mention is rust analyzer since I've been working with rust a bit more lately I've installed this extension so that gives me rust language support in FS code so as you can see I'm not using hundreds of different extensions I try to keep things pretty simple and pretty focused I like to work that way but I'd like to hear from you what kinds of extensions are you using in vs code are there extensions that I haven't mentioned today that you think are really cool that everybody should start using let me know in the comments and finally though I did show you an example of the backend written infast API I didn't really talk about the code today if you want to learn more about how to build a backend using fast API I did a video recently where I show you exactly how to set that up you can watch up right here thanks for watching and see you soon