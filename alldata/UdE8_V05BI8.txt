hey I know what you're thinking why the hell would you marry rust isn't her family really complicated and annoying doesn't she have a lot of baggage well yes a little does she know I'm doing something that you all should do when you get married I'm buying low and selling High you see rust has a lot of potential that not everyone can see she's a complex Beautiful Beast rust may be awkward and lumpy but in five to ten years rust will be the language that all the new programmers the new grammars the nougats are going to be after she will be sought after by all the land princes now first understand that I am a security researcher I research security people give me code and I say this code bad this code good this code bad this code good and I move on with my day now the reason for literally 70 of the malicious vulnerabilities that hackers use to hack into computers have been because of memory corruption issues and yeah the other 30 are because of logic bugs Authentication misimplementation cryptographic implementation SQL injections squeal injections command injections Etc but 70 are memory corruption so you might be asking what is memory corruption well it's when the program lets you corrupt memory pretty straightforward and who is the queen of memory corruption you might ask the C programming language so why is C so dirty and rough so shiny and pretty well C lets you do whatever you want C lets you have raw pointer access see lets you have raw memory access see lets you have access to the kernel API see lets you run any functions at any time with any parameters and really doesn't ask any questions until the program gets to a point where it crashes Malik from the Heap sure why not never free it ever sure why not create a buffer on the stack that has a static size then copy a buffer from the user of unknown size into Set static size buffer such that we overflow a pointer and give the user the ability to arbitrarily write data anywhere into the program memory space oh let's do it so what's the solution how do we stop 70 of these bugs from happening in the C programming language how do we stop memory corruption from happening entirely well essentially we're left with two options the first option is to fix C we can try to fix all of C's problems we can apply Band-Aid solutions to the language that's been around for 50 years and come up with Band-Aid solutions to fix all these problems we can make another language called C with classes and add the kitchen sink of every feature that no one asked for to try to Band-Aid solution fix the C programming language and not really accomplish anything and then somehow still have the same memory corruption problems or we can try something new damn she's beautiful what does rust have that c doesn't have boom baby let me tell you rust has a few features that make her Rough Around the Edges but makes her a good lifetime partner first the borrow Checker the borrow Checker is a feature in Rust that gives us control of who owns the variable by default variables in Rust are owned which means that there's a definition of who is responsible for creating and destroying that variable when it goes out of scope this means that a variable's value can only be owned by one label in the program at a time by giving that ownership to somebody else you effectively borrow the value and you can't use it in the original label at the same time this prevents memory corruption like use after freeze that are a whole class of vulnerabilities that hackers use to hack into boxes most beautifully Frost implements a bounce checker on variables you can't access outside of the bounds of a variable's buffer the ability to do an arbitrary right what where you can write anything anywhere and take control of the program is off the table now I've heard this before and I don't want to hear it oh but what about unsafe rust yeah I get that unsafe rust exists and yes obviously if you you write unsafe rust rust is going to be unsafe but unsafe rust only has its place in the bottom half of the embedded world so why am I marrying rust why am I making a lifelong commitment to a language that has so many problems because in my opinion rust is the future of memory Safe program if we aspire to live in a world where hackers can't do evil rust is the way to go now Russ may have some issues her family may have problems her family may be annoying sometimes I get that she may need a facelift here and there but a world that uses more rust is a safer world and I think that's pretty neat so the question remains when I marry rust well I stop texting c will I delete C from my phone and will I slide out of C's DMS no not at all I think the majority of the world still runs on CC will be around for the foreseeable future into decades into the future but if you're a new programmer learning to code I highly recommend that you take some lessons from the rust language and spend some time getting familiar with the language that I think will take over in the future if you like this video go learn about C in this other video