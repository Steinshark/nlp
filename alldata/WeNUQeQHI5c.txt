this video was brought to you by IND dentle IO learning python Made Simple in today's video we're going to be looking at some extra functionality that you can use with data classes in Python which will just make your experience much smoother so to get started we're going to import from data classes first of course the data class then we want to import a field and an init far and I'll explain what all of this does in just a moment but by now you should be quite familiar with how to create a data class you use the at data class decorator and then you add your class in this example we're going to be working with fruit now first of all we're going to create a fruit that has a name and we also want to get the weight of the fruit in grams so here I'm going to specify grams of type float and the cost per kilogram which is also going to be of type float but next pretend you want to have a computer property such as the total value of this fruit because of course each fruit might have a different weight which is going to end up giving you a different total value so here we have a total value of type float and ideally what we want to do is get the self dot Gams and divide that by 1,000 and multiply that by self dot cost per kilo but we cannot do that here even if we remove self we're going to get this warning that grams might be refer PR before assignment so what we need to do is create a placeholder and to achieve this we're going to use the field and inside here we can just say okay we will initialize this later by setting the initializer to false and I will just add a comment here calculate later so we will not be passing this in to the initializer we will be calculating it later using the post initializer anyway right below we're going to create this post initializer by referring to post in it and that will return none and here we can refer to the fruit by typing in self. total value is going to equal the self do Gams divided by 1,000 time self do cost per kilo so now let's go ahead and test this out so what I'm going to do here is create my main entry point which returns none and we're going to create some sample fruits such as an apple of type fruit and that's going to equal a fruit with the name of Apple it's going to weigh 2,500 G and the cost per kilo is going to be three and that can be euros dollars or whatever your local currency is then we want to actually run the script so I'm going to use if name is equal to Main and call Main but of course it might make more sense to also print this Apple so we will print that and we will run our script and what you should notice in the console is that we get a fruit named Apple the grams are set to 2.5 kilos with the cost being set to three and then we get the total value which was computed immediately after we used the initializer and that's what the post initializer does it initializes values after we use the initializer which in data classes happens automatically we don't have to write it explicitly like we do with normal classes it happens under the hood when we create a data class so that's pretty cool because now we can actually compute values after we've passed in the regular values but next I want to show you how we can use the init V with the post initializer so next under cost per kilo we're going to add a new field and this one's going to be called is R which is going to be an in itva of type Boolean and initially it's going to be set to false and init V just stands for initializer VAR and immediately you're going to notice that the post initializer is going to give us some syntax highlighting that it should take all in it only variables in the same order as they are defined so here we can add is rare which is of type bullan and now we can use it and in this example what I want to do is check if is rare which means if is rare is set to true we're going to multiply the self-taught total value by two because it's a rare fruit which deserves to be treated differently or to have an elevated price and I should remember to add a equals here because I want to effectively replace the total value with twice its value anyway let's go back down and let's create another fruit something that's much more luxurious like a banana of type fruit which is going to equal this fruit here called banana we're going to say we have maybe 1.5 kilos the price of a banana here is going to be 10 and we're going to set is rare to true and we're going to print the banana right under the Apple so the next time we run this we're going to to get a super expensive banana it's going to end up with the price of â‚¬30 and that's because we decided to pass isra into the initializer which effectively doubled the price of our banana even if the original cost per kilo was 10 but something else that could be quite smart to do because this is quite confusing if anyone reads this they're going to see hey if the cost per kilo is 10 and the GRS are 1,500 how the hell did we get 230 so something else we're going to do real quick is say that the self do price per kilo or cost per kilo is going to also be doubled so the next time we run this we can now effectively see that the cost per kilo went up otherwise if we were to remove this initializer or this in itva it's going to be calculated as normal or it's going to calculate the price as normal and one more data class feature that I want to share with you today is how you can add mutable types to your data class because sometimes you're going to want want to add multiple types such as lists to your data class and in this context we want to add something called similar fruits similar fruits which will be of type list of string and if you try to pass in a mutable type you'll immediately get greeted with this error that a mutable default is not allowed and code editors are actually quite smart with this they already tell you exactly what you need to do so here what we're going to do is use the field once again and provide a default Factory and depending on which data type you're using whether it's a dictionary or a list you just need to pass it in here and it's going to do all that nasty work for us so now we can actually pass in a mutable type with no problems which means now we can also specify that we have an orange of type fruit and that this fruit which is an orange and in this world oranges are worthless so they have let's say a price of one but now we can add those similar fruits we can say sim similar to oranges our apples and I don't know maybe a lemon so now we can effectively use similar fruits with no problem so we can actually pass in multiple types and down below let's print this orange and once again run our script so at the bottom we'll end up with something called orange it has 500 G the cost per kilo is 1 the similar fruits are Apple and lemon and the total value will be .5 and again at any moment if we want to say that this is a rare fruit we can say is rare and set that to true and at the end of the day we will get a total value of one because the cost per kilo was effectively doubled anyways that's actually all I wanted to cover in today's video do let me know if you found all this information about data classes interesting and if you have any information to add regarding data classes please leave it in the comment section down below so other people can learn from it but yeah with all that being said as always thanks for watching and I'll see you in the next video