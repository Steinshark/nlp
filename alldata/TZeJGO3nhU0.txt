this is a lane W incoming again for everybody to know I am sponsored by uh boot dodev he asked me to read an article about once a month for him absolutely love boot dodev they make amazing courses backend courses you can use my name and get some percents off okay code priment I will link it in the description of the actual YouTube video great stuff by Lane so I have to say that up front of course because you know I want to be an honest guy but Lane is always been big time W so I can't wait I can't wait to this okay 9 months with chat jippy 4 can I fire my developers yet hopefully yes hopefully hopefully I can be replaced by an AI GitHub has been refounded on co-pilot rumors of AI Superior to jity for abound and you're trying to decide if it's worth to learn what a red black tree is there's only seven rules on insertion four rules on removal and some other rules remember if your uncle is is black but you just had two Reds in a row you got to flip these two and then ALS Al the root but if the Root's black then you got you you don't flip it to Red because roots are always black everybody knows that okay simple rule for insertion the old Uncle problem um all right I'm often asked about the future of AI assisted programming and while the short answer is I don't know boy oh boy do I have some opinions and anecdotes to share strap in first let's understand the state of the world jity 4 is as I write this the most advanced general purpose llm large language model on the market it's important to understand that there is a big between a product that uses a model and the model itself for example jippy is a web app that uses jippy 35 and four models boot devs boots is an AI powered teaching assistant that uses jyy 4 co-pilot versus vs code plug-in that uses a modified version jiid 4 okay big difference there is really a big difference between jiid 3.5 and four models jiid 4 has about 10x more parameters than ji3 and is trained on a much larger data sets the number of parameters is confusing jargon but to oversimplify it's just the number of decision-making levers the model has fine-tuned throughout its training to get handwavy about it it's more parameters a model has the more sophisticated its understanding of the world can be which makes sense I don't know if you've ever done any model training but back in the daisy when I used to hand write little some MLPs the more things you could input into the MLPs the longer and harder the training was but I often found that I could have better results so when I was doing some handwriting recognition with some MLP versus rbfs uh it it it just the more little bits I could get in the better the more like micro models I would use I would use models for an entire letter and then take all those models and feed them into another model I got models in my models dog it just kept on getting better and better and better yeah I had dozens of parameters okay uh RBF uh radial basis functions um not not resting [ __ ] face very different though potentially producing the same results it's worth understanding the difference between J 35 and four because I've heard several people say me jippy is not that great only to find out they've only tried 3.5 uh Chad jipp is not a model it's a web app jity 4 is the model that was released this year that everyone's head uh head's turning so ah dang it my camera gosh I just my life my life just just just everything cannot work today um new camera coming in tomorrow shut up shut up all right let's see the CH4 is the model that was released this year that nope I'm not even looking at you shut up chat and that everyone's head's turning so make sure you're using the right one when you're evaluating okay will AI eventually do all of our knowledge work probably if I zoom out uh to First principles I don't see any reason why it wouldn't but the key phrase is eventually this is probably very encouraging advice to a lot of you right now that are learning to program or asking yourself why should I learn the fundamentals why not just learn react and just try to cash in as quick as possible because the AI is going to take over everything right right this is probably a good time for you to hear this because often people just have this really myopic vision and kind of a Doomer Vision that everything's just going to fall apart instantly but you know that there's going to be a huge Middle Ground where the amount of required jobs are going to increase because of AI not decrease increase in the amount of desire for people that know how to program is going to be legitimately increasing that is my take on this saying the market maret will crash is almost certainly true but it's not very useful the question is when you can only profit as an investor if you can predict with some accuracy when a market will crash the big problem is that it seems unclear whether improvements in effectiveness of llms have been compounding linear or diminishing returns okay y this would be log in okay yep diminishing compounding let's go this is some pretty good compounding going on there uh what often happens is that new technology is invented Effectiveness compounds for a while but then it hits a wall and we sit around waiting for a breakthrough in uh in science to push us to the next level the Transformer architecture that powers llms was one such breakthrough neural networks have been around for decades but in 2017 a paper on Transformers was published and they allowed us to train much larger models without running into the vanishing gradient problem a pre-transformers problem where a model can't learn anything new because it's become too large oh very interesting The Vanishing gradient problem is that affect I I mean I I obviously have no idea what that is but I assume that's when you're applying back propagation of error that effectively the error just becomes nothing because the model becomes larger and larger and each one of the items becomes like .1 and you can't do anything is that is that what it is so defunction yes the vanishing money problem I've also heard about this yep okay cool don't kids don't back propagate your errors too hard not overfitting overfitting is a different problem massive underfitting okay yeah okay that makes sense overfitting is uh you get really good at detecting the difference between hot dog and not hot dog the ultimate hot dog recognizer of one angle and that's it a pre-transformers problem where a model can't learn anything new because it's become too large okay llms are a massive step forward in AI but the question is whether or not we will hit a new wall before we get AR artificial general intelligence you know I'm not going to lie to you I've never liked the okay this is just like a complete side note I always felt like General should be on this side of the word General artificial intelligence not artificial general intelligence I don't know maybe I'm being stupid here anyways and have to wait around for something novel to get us to the next level if L if LMS turn out to have continuous compounding improvements Blue Line we might as well all give up now Ultron will be here in the next few decades and the last thing you'll have to worry about is whether your python skills are marketable or not the only thing to argue about at that point will be how to distribute the wealth generated by machines or more bleakly how to destroy them before they destroy us this is like a base AF take like absolutely if they just keep on compounding Within in the next like 3 years they'll be building their own robots within the next like 10 years they will just be fighting us like who's John Connor in this situation what seems more likely to me is that llms turn out to have a linear or diminishing Effectiveness as we add more data to the mix if that's the case then we knowledge workers will continue to have important parts to play in the world economy for some time all right I like this uh time to fire my developers and Hire gity 4 I've been aggressively using and testing jiid 4 ever since it was released I run a business where nearly all of our costs fall into two categories of human labor writing educational content writing software that makes the aformentioned content fun and interactive it also happens generating text and code are the two things that jippy 4 is best at so if I can increase my efficiency in those two areas I can dramatically increase my profit margins I'm highly incentivized to care also he can continue to use the primen as a means to advertise his amazing business boot. hashad so let's talk about firing Allen my most tenur full-time employee yeah nobody likes Allen so guess what Allan screw you you're about to get it you're about to get screwed Allan everybody at boot. deev has co-pilot and jippy 4 access I figured it makes us just 5% more effective it pays for itself I pulled my co-workers and we estimate that Chad chippity and co-pilot makes us about 20 to 30% more effective with our work really I currently think that jippy makes me about 2% more effective and co-pilot probably makes me about like 5% more effective anytime I let co-pilot write code for me it's bad if I let co-pilot just be sophisticated autocomplete for boilerplate it's great I've never had a good time I find I slow down almost exclusively using it as a co-generation piece I don't know interesting certainly enough to pay for itself but not enough to drastically dis uh disrupt our operations but for the sake of an argument let's pretend that jippy made us 400% more effective what do I need Allen for right can I just fire him and do all of his work myself I'll even have an extra hour to spare this is small brain business logic this is so good this is so small I have an incredible number of technical projects that upon completion will add immense value to my business ambitious new features tons of content to write major F refactors and migrations and annoying bugs that at present are sitting way back on the back burner it's all about balancing Roi at companies and all the companies that can effectively reinvest growth outpace the ones that don't if the cost of a project come down then Roi return of investment goes up no it's radio over internet man Lane realtime feedback right here you should have hit him with the radio over internet right now if a new feature will generate $100,000 in Revenue but will cost $100,000 to build then the ROI is zero and I won't build it however if the feature comes down to 50,000 and I can earn 50,000 in profit by shipping it if I can get 400% more work out of each Dev I hired I'd hire more devs not fewer yeah I'd be able to tackle more projects and I'd be able to tackle them faster yeah like this is actually a great point do do you understand this point does everyone understand this point no if one Dev if a feature costs you 50,000 no that's a hot dog okay if a feature costs you $50,000 to build and a and $100,000 you will make and you have X amount of features you want to complete every time you add a Dev to a situation you theoretically could make more features so you can make more features faster and if AI makes you faster at creating features and you can make money because AI unlocks it as being f F thus more features make more money now you then hire more devs to make more features I get the general idea like this makes perfect sense if AI can make a feature that would cost $100,000 $50,000 thus making you money of course you would hire more devs like at that point it only makes sense to keep making features caveat there are cases where it makes more sense for a company to lay off excess workers as the remaining employees become more efficient this is most likely to happen in companies where developers are the cost center not The Profit Center if a company sells software think stripe developers are part of the profit centers if you're a company that writes internal software to make operations more efficient think Walmart developers are a cost center this is a great point right here look at Lane and all of his business ideas right this makes perfect sense genuinely this makes perfect sense it's usually best to work in profit centers not cost centers yes but you won't need developers just product managers sorry if you're a product person but whenever I hear that it immediately translate in my head to I'm an idea guys new product manager I I'm an ideas guy we're going to redesign and talk about users right we're going to do research and talk about users right it's a pretty good meme idea guy nobody likes idea guy everybody has ideas okay some people uh are thinking that llms are a giant equalizer you won't need to know how to write co uh code to ship software anytime you need to write code you'll just whip out the old llm and get work done uh we have experiened with this already in the early 2000s if you wanted to sell stuff online you had to hire a developer to build you an custom e-commerce site they had to build shopping carts checkouts coupon codes billing an inventory management all from scratch today if you're doing something something common like e-commerce or blogging you don't need to hire a developer you just use an offthe shelf software like Shopify or WordPress automating tedious tasks is the sole of software development this is true though this is a good point of like some level of automation but still even with that we still I mean I know so many people that that literally do WordPress like what woo Commerce like they're still around and they like they're just like they're they're a woop they started off as a WordPress a word they're still WordPress they're literally just a plugin for WordPress how crazy is that they've been around for how many decades and they just make WordPress it's wild and they're huge automating tedious tasks is the soul of software development if we're not automating away the boring stuff so that we can go build newer cooler stuff why even call ourselves Engineers we're just code monkeys endlessly migrating the same stupid web app from one JavaScript framework to the next was that a jab at at at nextjs got them despite the proliferation of low code tools over the last 20 years the demand for developers has only exploded over the same period why because even though we automated vast sads of common functionality companies are constantly looking to get an edge either by building internal tools to increase their own efficiency or by building novel software products that they can sell to others who want that same Edge this is a beautiful point by the way this truly is a beautiful point which is I mean how much of Wordpress has taken away how many thousands upon thousands upon thousands upon thousands of jobs and yet look at us there's never been a larger requirement for engineers is this a business or a technical article insane it's a great article is what it is but this is like such a astute point which is that despite an entire industry going dark it completely disappeared the need for developers has gone up not it went it went down it has not gone down developer need has not gone down developer need has only gone up it was highest during Co it's back up it's just during covid people thought growth were going to continue to happen so they just wildly over hired they didn't need them they they wildly thought growth was going to go forever and of course guess what it did not it just no no it turns out people who have an opportunity to go outside will continue to go outside shocking news all this uh all this to say the impact of llms on how much do we need to know to ship softwares has some new on let's talk about a couple examples just give me Winston uh a Chad shiity account just give Winston a chat jiy account I have a great Administrative Assistant for the sake of the story let's just call him Winston mostly because that's the name his mother gave him at Birth it's a great it's a great way to call somebody uh old Winston old Winston uh the blog you're reading right now is a static site generated with Hugo blog posts are written in markdown and get is our CMS content management system Winston takes care of a lot of the non-technical operation tasks here at boot. he he hasn't done much coding in the past though he's learning on boot. deev before chat jippy I would have had to provide pages of documentation to him on how to use vs code edit markdown commit to get open poll requests for him to be able to make small content changes to the blog I've given him access to jippy 4 and yes it takes him longer than it would take a 10year developer but Winston walked himself through the process of editing markdown and making PRS without any help from me that is a w but even with gypp 4 I'm still nowhere close to being able to utilize Winston as a software engineer that's really the Crux of the issue such a w such a w w for Winston and W for the Crux of the issue I don't think code is going anywhere some folks have hypothesize in the movie when the AI takes over it's not generating python code humans tell the AI what to do and AI just does it probably by jit compiling some assembly code or something it's probably JavaScript that kind of AI exists in the far distant future but I doubt doubt it's anywhere close even if AI were 100% accurate at producing working executables I don't trust humans to give the AI good instructions communicating with humans is really hard even if you're super intelligent how the customer explained it how the project leader understood it how the analyst designed it I've never seen this but this is awesome this is so good oh no oh no how the programmer wrote it how the Paya testers received it how the business consultant described it this last one is just so good oh my goodness this last one is just so good oh this this is so funny this is how I write code by the way this is perfect this is perfectly described it oh my goodness my hot take code is way better way to model Software System than natural language when Yep this is true when or this is not a hot take this is perfectly accurate because it's a context free grammar uh when things go wrong wait or is it context sensitive I always forget which which one which one's the smaller of the two in the ven diag or in the word cloud of of meaning is it context free is the one that that is uh smaller context sensitive okay context free is smaller okay so context free is smaller so context free is the problem right context free is why programming is so good versus context sensitive is way too way way too way too hard to describe problems when things go wrong we need some sort of inspectable instruction set that can debug and fix you thought JavaScript was bad programming language try English I'm a native speaker I've studied the this cluster [ __ ] of a language for 12 years and I still don't understand why we have six different pronunciations of that though snow rough tough through true thought sought ba bow cow cough off I never even I didn't even realize that this sucks this is just the worst thing ever goodness gracious uh all this to say once you know the the code it's much easier to write the code that describes the program than it is to write English that describes the program here's the Fibonacci calculated in Python boom done here's the English to describe it to calculate the Fibonacci number check if n is less than two if it is then n is the nth Fibonacci number other wait is it otherwise it's the sum of the Fibonacci of n the Fibonacci numbers of n minus one and N minus 2 which are let's see which can be calculated recursively I'm not even sure if this is accurate lawyers are paid a lot of money to write contracts in natural language why because it's really hard to write natural language that describes a contract it's actually easier and simpler to use a language that's more explicit and less ambiguous off topic and someone design a DSL for law oh no oh no lawyer JS it's happening it's coming it's coming uh so even if 5 to 10 years we're doing conventional programming with jipp 4 I think that code will still be the output of conversation and developers along with their Arcane knowledge of programming language will be the ones having the conversation note I published programming courses for a living if you want unbiased opinion stop listening to me let's go Lane this was really really good because I you know I'm not going to lie to you guys I hear you guys constantly say this all the time like the amount of questions I honestly get whispered to me or stated uh like publicly or anything always is like man I'm so discouraged by you know chat chippity there's no way that job's going to be available for me I'm telling you I think that you have so much more opportunity than you realize and I think the next 10 years are going to be so much more valuable to no code than there has been yet right like I I genuinely think that we're not going into a deficit we're going into a point where every knowledge worker is going to be just massively magnified and the amount of throughputs going to go up and the amount of demand from employers are going to go way up I don't think we're going the other direction I think we're going the right direction just like I mean every other optimization we've ever made has changed Society but it has also created new opportunity and and and so far more demand great article Lane this was a great great w article AI is going to make a THX more code so I think it'll be uh useless to understand anything about code midwit influencers on Twitter you should have just tweeted that cuz I'm so close AI will not take your job plus a lot of AI in breeding will happen like a lot of AI IM breeding will happen and you're going to get some models that are all like Goofy and not and not ready hey the name thank you lanee for that that was a great article by the way that was actually a good art again I love reading Lane articles I mean don't tell Lane this but I would probably read it even if he didn't pay me any money and just said hey could you read this his articles have always been so good they have been so good and it's like a pain it it hurts me because I'm like oh late I have to tell you I'd probably just read this anyways appreciate that lane