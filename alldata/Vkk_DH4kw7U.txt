are you finding yourself going around and around and around from one tutorial to another tutorial to another udemy course to another tutorial always constantly moving from one tutorial to another but never really feeling like you're actually making progress in who here feels like that press one in the chat I actually want to see this there are more ones than I was expecting notice that I said press one in chat if you feel like this and a bunch of y'all  were like I'm will press zero God I'm so good at this game look at me go okay well let's let's let's let's do this one your growth as a junior developer well I hate to break the news to you but more than likely all of those tutorials you're doing are actually killing your growth as a junior developer this video I want to talk about why that is and how you can actually make better use or the best use of those tutorials as you're watching and as you're working with them don't forget if you have a question that you'd like to ask or topic that you'd like me to cover in an upcoming video leave a comment below or head over to dev.com and fill ask form hey Junior Dev Dev Mentor Dave here helping you bridge the gap from learning to code to launching a successful career now there are thousands and thousands of tutorials online for almost anything that you want to learn not just how to write code all right I I I am going to speed it up a little bit because I'm so used to listening to things fast and I also speak pretty fast that we have to go faster by the way if you didn't know having a bookshelf in the back increases your credibility by like a significant amount but anything from learning how to talk well to learning how to fix a car I even have a t-shirt that says certified YouTube mechanic because that's where I go when I need to find uh out how to fix my car right so there's lots of different ways that you can get information that you can be taught how to do things and and we see a lot of times these tutorials either on YouTube or a paid subscription like you to me or something like that and a lot of Junior developers can get caught up in this NeverEnding cycle of of watching and and and copying these tutorials and it really actually ends up hurting them in the long run because they spend a lot of time not really focusing on the things that are going to help them so let me explain why in my opinion tutorials can be a good thing but in excess they really can stunt your growth as a junior developer the first thing to remember is that a tutorial is teaching you information it's not really teaching you a skill it's teaching you about something it's teaching you uh about language it's teaching you about a framework or about a tool it's teaching you about things it's not necessarily teaching you how to actually put that into action how to use this now do they have examples absolutely I'm not saying that they don't do anything for you in that department but really what they're trying to do is help you understand something they're they're using the examples so that you understand a concept or that you understand um what a language does or what a tool does they're not really there to help you build your skill set using that tool okay so I I actually do agree with what he's trying to say here so let let me rephrase it in in a way that I think what he is trying to say and it's something that I've said many of times in the past which is tutorials are really good if you already know what you're doing tutorials are not good if you don't know what you're doing now you're probably thinking what does it hold on whoa whoa whoa whoa back it up that doesn't make that that makes no sense what you're just saying right there it absolutely does why don't you just chill out okay chill out twitch chat and what I mean by that is that when you already know how to use something you look at a tutorial you know about all the different places in which something is falling apart where errors can happen and all that and so when you see somebody else use it in a different way it really does help you a whole bunch if you already know if you don't know though it's just all magic and you completely shut up okay about Discord okay this is how it works but really like if you don't know what you're doing a tutorial can give it can be like a nice stepping ground for you to take what you've learned and try to EXP expand it a whole bunch or build something of your own but it is like not that great of a place just to Simply learn in of itself and you really do have to go somewhere with it you're going to remember how to ride a bike years down the road even when you can't actually still physically ride a bike you're going to still remember how to ride a bike if you learned that skill but just because you memorized all the presidents in order doesn't mean that 30 years from now you're going to remember all those presidents and unfortunately that's what most tutorials really are they're uh I I I don't really like that comparison I mean I I see where he's going with it which is there's like a head knowledge and a practiced knowledge right a head knowledge is the fundamental like base take of practice knowledge you have to have the layer right you have to you have to know how to do how things work and then put it into practice but I don't know about I you know I don't really like that you know I I didn't really like that they're teaching you information L take is an invite to chime in no if I see if I see some level of chat that's actually nonzero IQ I will I will engage with it okay especially if it disagrees with me in a good way they're not taking you and forcing you to actually put this into real action and the little ways that they do have you put into action are very very simple most Junior developers spend a lot of time following a video tutorial and typing out exactly everything that they're doing so that they follow along and that they're they're doing it and they think that that's helping them build a skill set really all you're doing is just copying what somebody else has already done they've see I also disagree with this take too because one of my biggest learning things was uh XNA if you guys remember the old xnaa uh platform with c and I'd buy these books on how to build a game in xnaa and I I would go through and I'd follow through the book and I'd learn how to do it and then I'd take the book and I'd take that as like my ability to be a launching platform right being able to actually become good at something like I totally am on his team that there are a lot of shitty tutorials but not all tutorials are shitty some of them really show you these larger ways but you still got to go and apply them and so like I'm still thinking about that book that very F first book that I ever did let's see let's see if uh the acronym still works is rot look at this I still remember this identity scale rotate orbit Translate boom how great is that and that's that's from XNA a stuff right and so like did I did I get something out of it absolutely I got something out of it uh that was a very beautiful one right that absolutely beautiful books are awesome books can be very very good tutorials can be very very good but I mean today's tutorials are pretty shitty right they're like they're literally just like 400 characters and some example snippet code that's not really a tutorial that's not really going to get you anywhere you're not actually building anything complex enough to learn from but I mean it's the practice part giving you the answer key and you're just kind of filling in the circle copies absolutely that doesn't mean you've actually learned how to use that language or how to use okay who hear things just reading the docs and starting to build something is the way to go honestly I I hear this all the time I hear it constantly okay no Sasha Gray Craig asms in the chat uh Real Talk who here thinks it is type one my hot take I don't think the docs are great for the for the 0 to 60 I I I don't think they're great for the 0 to 60 I I think that that that the docs are really great for the 60 Beyond and I think that that's where you go you you first go up to get something just up and running how how do I start a server how do I do this bam bam bam copy paste make it go and then go and make something out of it and then once you need to actually do something that's more intense than starting a server like actually do something with the server you read the effing docs and then it helps a ton right like I think the read me the getting started the quick the quick guide the the just that just that little bit just just rip right into it I think that you you don't it's not quite the the right place there's a huge let's see hold on here's a different take tutorials are good but don't get hooked on them uh they will only get you so far and don't try to search for how to code like a Chad type of stuff well we already know how to code like a Chad use Vim we all know this okay what do you mean use that tool or how to use that framework the way that you need to in order to actually do the job but that doesn't mean that tutorials are all bad in fact I found them to be very helpful for myself even as a senior developer the is learning how to use tutorials in a way that's going to help you progress your career and not just keep you in a constant cycle of taking tutorials and sometimes taking tutorials over and over and over again because you just don't where where do you recommend to start up I think it's fine to start with tutorials you just have to know that whatever you learn from a tutorial you have to apply go make something yourself from whatever tutorial you did you got to go and change it eight times make something for it feel like you really got it hey if you find this information helpful could you hit the like button for me it helps me get this information to more people and Hope on their journey to a successful so the best way I know to use tutorials to actually help you be successful Asel the first key is listen to an explanation and then try to do what they're telling you to do before you see them do it good tutorials will actually explain what they want to teach you before they show you how to do it so what you need to do is listen to the explanation try to understand what they're talking about and then hit the pause button before they show you how to actually use that in a real world example all right hold on hold on can can I back this up I actually want to kind of think about this for a second do you think that if you were to do this do you think that the the the person that's new because this is actually because I never grew up with this so I don't really have like a strong opinion on it which is should they also prevent themselves from using chat GPT no yes yes no yes because a a lot of back and forths here all right so here's Here's my thought on chat GPT and tutorials is that it it it it also creates a tutorial like hell in of itself because it gives you a bunch of answers right off the rip and first off they also just may be completely incorrect answers you don't even have enough experience to know that they're in they're in uh incomplete but the process of learning requires you to do a little bit struggle fail find an answer do a little bit struggle fail find an answer do a little bit struggle fail find an answer right like that's really the process of learning that's what makes a good tutorial well that's actually what makes a bad and good tutorial is that at the end of the day you make this really nice tutorial you've just skipped over all the the parts where you failed and learned whereas with chat GPT you you don't get any of that you get almost none of that right it just kind of gives you the answer and you don't actually have any of that struggle or learning phase right n none of it really sets in chat GPT is terrible learning code uh because you need uh need to know enough to know when it's wrong yeah yeah I mean see that's the that's the hard part try to understand what they're talking about and then hit the button before they show you how to actually use that in a real world example and then go over to your code editor and actually try to do it yourself what this does is prove to you whether or not you really understood everything that you just listened to because if you can listen to something and then you can take the time and think through it and understand how am I going to put this into action in the real world in real code that is a huge boost to your success it's a huge boost to your confidence to be able to then hit the play button and see that they did the same thing that you just another thing you can do to make tutorials successful for you is to not do the example that they give instead do something completely different want to just copy what the person teaching us is doing because we're not actually really putting it into use it's not something that we've thought through we're just following along somebody else in their process we want to take the time to that's why I've always said that I worry about something like co-pilot as well co-pilot is really great because I can get started and rip through code and I can go to a new language and kind of like get through it pretty quickly because I generally know when something is correct you know like if I if I open up go and it's like oh strings do stir convert right I like I know right away like oh yeah this is how you change the thing oh strings uh you know you know strings. a2i or whatever it is or stir convert. a2i and you just like you know right away like okay I'm looking at the correct item right here but you don't really actually like learn the thing do you know what I mean it's just like this thing that kind of like co-pilot turns into autopilot really quickly and it just kind of like goes through your brain and you don't it doesn't really at least for me it doesn't really feel like it sets in anything think through how would we actually use this information I disabled it because I it hinders my learning uh process in uh University that's actually really smart I would be so careful about using co-pilot in University because the point of university is to struggle right the point of it is to just not know what you're doing and slowly get through it it is the learning of programming and computer science in the real world so don't just try to create what they're going to create don't just try to implement it the way they implement it think about it how would I implement this in a different situation in a different scenario and then write out code to do that this is going to help you run into problems it's going to help you try to figure out whether or not you understood what was going on and then as you look at what they did it may help you see the errors that you have in your scenario what student has money to pay for co-pilot I think co-pilot's free for students uh would you uh would you do a tech interview with co-pilot allowed typically you'll see whenever you see Tech interviews they're usually with something like code signal which is like a it's like a vs code light thing in the browser so there's no co-pilot you know what I mean see the goal of a tutorial is not just to give you information the goal is for you to take that information and put it into real practice doing real things and that means you're going to have to avoid some of the easy examples that they give and try to find something difficult try to find a problem that you can solve with what you're learning from that tutorial okay the last thing that you can do to make a tutorial successful for you remember that tutorials are just the beginning it's just a first step a lot of Junior developers get into trouble because they go through a whole tutorial or set of tutorials and they think they're done you need to understand that it's just the beginning of you learning and implementing this and that there's a whole other world of information found in documentation once you've got the basics of a of a language or of a program of an application of a framework whatever it is that you're learning in in your tutorial once you've kind of got that basis and you understand the terminology and the different things that are kind of involved then you'll find lots of other things that you can do with this that you never have learned if you just stopped after the tutorial so tutorials can be really helpful if you use them the right way but if you don't they're probably going to kill your success rather than grow your success thanks for joining me and if you'd like to get more mentoring advice click the Subscribe button and hit the Bell icon to be notified each time I upload a new video hopefully this video has been a help to you on your journey as a junior developer thank you for joining me and I look forward to seeing you on the next uh this always seems to it's it's I swear this is like always the exact same thing I just see all the time which is that I mean there's a reason why going to a job and working on the same product every day for many hours is it grows a lot of people it takes them from a junior engineer into an engineer and into a senior engineer and the reason being is that to get to the point of where all this struggle and growth happens you got to get past the first 20% right you got to get into the part where it's the like the sludge the the the the M the maintenance the the being able to get like further and further into something that just there's all these weird edge cases and problems that creep up but it doesn't happen in the first month right it takes a long time for you to get there and that's really where you see a lot of growth is when you maintain something Beyond just its initial conception you know I always say that I don't care if you finish a project and all that absolutely the point of doing little side projects and stuff is to learn what you like to learn what's out there to be familiar enough with it to talk about it but if you want to become an expert it takes more than just learning about something you got to spend years trying to do stuff and that's the I think that's the mentality that a lot of people don't have is the difference between understanding being able to talk about something and being a master of it and to be a master just takes just forever right it takes intense effort becoming great at something I do wonder if we SE uh if we season the engineers might not sometimes be a bit too critical about how novices learn things we forget that we have decade of built of neural networks that specialize in processing this information that changes perspective substantially absolutely that's why I don't I don't have a problem CU I remember my most useful thing was following through the tutorial on how to build a first-person shooter in C++ uh how to build a uh FPS in C++ right so this is probably let's see if they have this oh there's probably way too many things uh there was a book way back in the day that was just like so good obviously it sucks now it's like it was like direct X8 in fact it was this one right here yeah yeah hell yeah I got this this one this is one of the things I I I learned with and it was great I got so far into building something and there's so much there's like a little scripting language for like footstep sounds and it was like all this stuff to be able to build like to to do that it was just super super cool yeah 2005 I got in like 2007 right I think directx9 was just coming out when I was learning this uh but either way it was awesome you know it was such a great experience anyways the name is the primagen also hey subscribe subscribe to uh Dev uh Dev Mentor Dave okay this is a great video