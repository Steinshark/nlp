import chess
import random 
import time 


move_l  = {}

def search(board,depth):

    global move_l
    #Return 
    if depth == 0:
        return random.random()

    #Create iterable list of moves

    #Get fen 
    fen     = board.fen()
    fen     = fen.split(" ")[0] + "|" + fen.split(" ")[1]

    if fen in move_l:
        return move_l[fen]

    next_moves  = board.generate_legal_moves() 

    for move in next_moves:

        #Make move 
        board.push(move)

        #Call search 
        eval            = search(board,depth-1)
        move_l[fen]     = eval

        #undo move and continue 
        board.pop()




if __name__ == "__main__":
    b       = chess.Board()
    t0      = time.time()

    depth   = 8
    search(b,depth)

    print(f"depth {depth} took {(time.time()-t0):.3f}s")