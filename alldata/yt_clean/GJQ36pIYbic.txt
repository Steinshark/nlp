Welcome everyone to this demo Before I begin guys, Let me introduce myself. My name is Saurabh on various develop solutions I've worked on quite a lot from Git, Jenkins, So this is about me guys and in today's session on various stages And what exactly is the meaning So let's move forward and have So this is what we'll We'll Begin by understanding everything exists for a reason. So we'll try to figure out what are the various limitations of the traditional and how it develops overcomes Then we are going to focus a DevOps methodology and what are the various stages And then finally in the hands how you can create how you can build it test it and even push it onto Docker Hub Using Jenkins. So I hope you all are clear Kindly give me by writing down in the chat box. They say he's clear. So dusty on Cohen car find I've got a confirmation So let's move forward guys and we'll see why So guys, let's start Now before devolves this particular software It was first documented in the year 1970 by Royce and was the first public the waterfall model describes that is linear and sequential waterfall for each phase of development. Now, you must be thinking because it's pretty similar Now what happens in a waterfall once the water has flowed It cannot turn back the same is the case for waterfall and application will go when the previous So let us focus on what are in waterfall methodology. So notice the diagram that is if you notice it's you can even visualize it what happens the client gives So you gather that requirement what happens you how the application Then you start writing the code for the application when I say build it involves multiple think compiling you know unit testing packaging is well after that it is deployed onto and then deployed which will release and once It is monitored. Now. I know this small looks perfect It was at that time, but think about it if we use it now fine. Let me give you a few So here are a few disadvantages. So first one is once the application is It is very difficult to go back that was not well thought out what I mean by that suppose for the entire application, but in testing there's some bug in in order to remove through the entire source code which used to take So that is one very big limitation of waterfall No working software is produced until late We saw that when about various stages There are high amount of risk that once your product is life if there is any bug then you have to go through the entire source code you have to go through that entire process that we just saw a working software again, right? So that's how it used to take. A lot of time. There's a lot of risk if you have upgraded some software stack and that led to the failure of to the previous table version used to also take it is not a good model oriented projects and it is where requirements are at a moderate to high So what I mean by that has given you a requirement Now, you have taken and you are going to condition after one year now the market has changed. The client does not want He's looking for so this type of model where requirements are to high risk of changing. So there's a question popped She's asking so in the waterfall model goes Well, there are no I First of all, it is not agile It is waterfall model, right? There are no I trations once the stage is complete It will be going So there are no I trations as such if you're talking and it is life and then or there is some downtime then at that time based which is there There might be a bug of a software. I can stall in Probably some upgraded version because if that your application So you need to roll back of the software stack So that can be one bug There might be bugs related to check the entire source code if you look at it to roll back that you have got is used So I hope this All right. She's finally the answer any you have guys you can just Find so there are So I hope you the traditional waterfall model. What are the various limitations Now we are going to focus that is called Now agile methodology that promotes countenance and testing throughout the of the project. So the development of an application used with the agile methodology. So what I mean by that that is there in front so here we get the feedback that we have done We design the application again, we tested then we that we can incorporate We again design it develop it and there are multiple I and testing of cinestyle methodology. Each project is broken up and all I tration should be and generally it is and at the end of each iteration Hsu Be delivered. So this is what agile is now let me go ahead and compare this Now if you notice in the diagram that is there So waterfall model and it's pretty straight that we analyze requirements. We plan it design. It build it test it. And then finally we deploy it onto the processor but when I talk here the design build and testing part We are writing the code. We are building the application. We are testing it several iterations involved And once the final testing onto the broad service So agile methodology basically breaks down the entire into small sprains or iterations that we call it due and the testing part of used to happen continously. So I hope you have understood or doubts related you can just go ahead and ask Finds that there Let's move forward what are the various limitations and the biggest limitation that the deaf part of the team was pretty agile and testing used But when I talk that was not continuous of conflicts happening between the Devon the off side of the company Whereas the Ops Team want stability and there's that happens and a lot that the code works fine but when it reaches in the application or it does not work So this is because if you know some inconsistency that has caused that and due to which and the dev team There are a lot of conflicts So agile methodology of the company pretty agile, but when I talk about they needed some solution in order to solve the That So I hope you are able of a problem I'm focusing on. If you go back to the previous if you notice only and test or you can say and testing part is continuous, right the deployment You need to deploy it manually on to That's what you was happening Right? So the error that I was talking Our application is I mean once your and you do some software stack It doesn't work properly now in the production environment For example, you know, you have upgraded and because of that working it fails to the previous table version the operations team because they have to go they have written on in order So I hope you all and there's a question Types of projects is good and what types of projects So this question is actually from Dave and it's So let me tell you when you talk when I talk so it is suitable where requirements are to high risk of changing, right the requirements So that is suitable when you talk about agile. So if you are at a moderate risk of changing agile methodology as well. So I hope this answers your question Dave and with you please go ahead and ask in your mind. You won't even enjoy it So feel free to ask me any So let me just give you that we have discussed till now, we have discussed coils with the waterfall model the traditional waterfall what are its various stages and what are the limitations Then we went ahead and understood what exactly and how is it In from are the various limitations So this is what we have discussed to look at the solution that we have just discussed other than divorce a software development strategy which Bridges the gap and the offside of the company. So devops is basically a term that while not all into a movement and a rapidly spreading throughout like any new and popular and sometimes contradictory So let me tell you guys It is a methodology. So basically devops that equated to the study and operating rapidly Now. Let me put this So devops is and development Engineers participating together in From design through to production support that devops is also characterized by operation of the same techniques as I'll explain you that Because all we are saying here operation staff making use many as Developers for I will explain you you'll understand why I am using this particular So as you know, that devops is which Bridges the gap in the off side of the company and helps us to deliver and how this happens various stages and tools So here is a diagram which is nothing because everything happens everything starting monitoring everything and these are the various tools which are involved So not only the knowledge of these tools are important but also how to use these tools. How can I architect my software get the maximum output right? So it doesn't mean if I have a good knowledge of I become a DevOps engineer. No that is not true. You should know how to use them. You should know where to use So I hope you have got my point If you have just go ahead and ask I will be discussing that are involved in devops, but before that please go ahead and ask me. There is one more question. It's pretty interesting It is from Kasia. He's asking does organization for different stages one tool per stage or there might be multiple tools that they'll use all the tools that I mentioned based on their requirement that they have they can go ahead and configure their entire the way they want. So I hope this So there's one more question from a she's asking what are the tools So there are multiple tools which will be covered There might be one For example, there is ansible and puppet available in configuration management tools when I talk about then we have covered guilt There is mavin for continuously and we even have Docker and Jenkins is the heart So we have chosen Jenkins as well in the course why we Because they have the major market share Most of the companies have given These are open source tools and most of the companies All right, so he's happy So let's move forward guys on various stages So these are the various stages Let me just take you through all from Version Control. So I'll be discussing all of But let me just give of these stages So Version Control is basically maintaining what I mean by that Suppose writing a code So how will I know that which developer has made and which commits and how will I revert back to the previous commit so I my point here is how will I manage that source code suppose and that commit Now. How will I know That commit and at what time and very the code was Right? So all of these questions Once you use Version Control Etc. We are going to focus So then we have So continuous integration your application continuously what I mean by that suppose any developer made code a continuous integration to pull that code. I am prepared a built now when I say build people have only compiling the source code. It is not true guys includes from compiling your source code validating your source testing integration, And even packaging Then comes continuous delivery. Now the same continuous are using suppose Jenkins. Now what Jenkins will do It will be deployed onto the test servers for user acceptance test whether you call it there will be using tools like Investing and once that is done, it will be then deployed onto right that is called and here we'll be using and containerization tools. So this is basically to provision your your Prada environment and let me tell you guys continuous which is not a good practice because before releasing there might be multiple checks that you want to do There might be multiple other So you don't want this That's why continuous which is not preferred We can go ahead and manually use like puppet chef or we can even use Docker and then we can go onto the Crossovers for release. And once the It is continuously monitored by which will provide to the concern teams, right? So these are various stages a question for the my screen what do you I code reviews So basically how the code What are the various Right so it will What do you say analysis of the code basically static if there are empty cache blocks which can be replaced all the different kinds what we call code reviews So I hope this So as a requested me to repeat definitely as a let me do that. So let's start So you have got the requirement from the client you how your application You know that now what you have you have for that particular Now those ten developers but how will we So what my point here is how will I know which come which commits has caused or who has made which commits at what time right to answer all We use Version Control tools Right. So these tools will maintain So even if you know, I want to revert back can go ahead and do that right? I can go ahead and check out the previous version That is what basically or Version Control is then So here continuous what they do the continuously when I say Bill includes review unit testing you know packaging so that comes under continuous building your application once continuous build onto the test servers or user acceptance test where you use tools continuous delivery not I hope I'm clear. All right. I just fine with it next your application onto Once your application So this can also be automated but a list something because you know before releasing a product you need to perform You need to Market your product need to consider and that is why continuous which is not recommended now under this We have configuration management So configuration management puppet ansible and salt stock which can provision and deploy your application and containerization is which serves a similar purpose. Once your application is life. It will be continuously like Nagi Os or Splunk, which will provide to the concern teams. So that's how DevOps works. So these are the various stages So now let me just if there are loads. So this is our various various jobs schedule. So we Jenkins here. We have a continuous So what Jenkins will do the moment any developer makes it will take that code and then it will trigger or and of Gradle. Once that is done. It will deploy it onto for end user testing using tools Then what happens it will automatically take and deploy it onto the process And then it is continuously Like Nagi was plunky So Jenkins is basically heart It gives you a nice of your entire software So with that UI you can go how your application We're in which stage it is is done or not. All those things. You can go ahead and see There might be multiple jobs that you can see good picture of the entire Let's don't worry. I'm going to discuss all when we move forward, right so till now you have guys just feel free Any questions fine guys, We are going to discuss each of from source code management Now what happens there are two types approaches one is called And another one is called the distributed Version Control I imagine there are multiple for an application if there is some bug introduced which come it has and how will I revert back of the code in order to solve these issues source code and there are two types one is called ventral and another is So let's discuss the centralized So centralized version control to store all the files It works in a The upholstery to which users can directly So this is So every developer has a working So the moment they want to make They can go ahead and make a comment and they can even update pulling the code that is there So the repository that your nose noticing that could be local or remote, which is directly of the programmers workstation. As you can see now or update their workstation or the data present or can even make changes in the repository. Every operation is performed or the central repository, even though it seems a single repository, but it has a lot of drawbacks, but before attacking you what advantage we have here. So first of all, if anyone makes a comment then it will be a commit and there will always So, you know, which person has made what time and where in so you can always now discuss few disadvantages. First of all, Meaning you always need to be connected to a network It is always So you need to be connected Basically since everything of the central server It will result in losing Right? So that's a very And that is one don't prefer centralized that's talk about the distributed Now now these systems on a central server to store all the versions So in distributed every contributor has a local copy or clone of the I'm highlighting with that is everyone maintains which contains all the files In repository as you can see every programmer maintains which is actually the copy or clone of the central They can commit and update the local repository They can update with new data coming from the central server by and effect changes to the main repository right operation called push Now the USB thinking what are the advantages over the centralized Version of cloning and entire repository Let me tell you from push-and-pull are very fast because the tool only needs not a remote server, hence, you do not always committing new change sets without manipulating the data Once you have a group can put Them all at once. So what you can do is to your local repository, which is there You can commit the changes. Are you want in the source code you can you once you have quite a lot you can go ahead and push it at the central server gets The lost data can be easily of the contributors This is one very since every contributor of the project repository. They can share changes with one another if they before affecting the changes So these are the various ways version control system than a centralized So we saw the two types of and I hope you We are going to discuss a one source code which is very popular almost all the companies before I move ahead if you you can just go ahead and So there is a question What are the different There are a lot actually There is subversion about the most famous one then that is definitely get so I Fine, so he's happy with the answer any other just feel free I'll move forward and we'll go into focus a distributed Version as get now before I Let me make this thing clear. So when I say Version Control it's one of the same thing. Let's talk about get now now git is a distributed that supports distributed data Assurance for developing So it's a pretty tough but it will be easier for you to understand that is there in front So for example, I am a developer and this is What I want to do is to my local repository because it is a distributed I have my local So what I'll do I'll perform because of get add in my working directory will Now, you can visualize which is between Your local repository, right? And once you have done and perform git commit to your local repository. And once that is done and push your changes to After that. You can even perform get pull in your remote repository and perform get check which was there to your working All right. So, let me just repeat it So I have Now in order to add I need to First perform get add that will add it is nothing but area and the local repository after get a lie can go ahead which will add the changes Once that is done. I can perform get push that I've made to the remote repository and in which are there of the local repository. You can perform get pull and finally get check out Got a tree as well a pretty similar command. Now, if you want to learn more in the chat box. You can go ahead and have But the people who are watching in the description box below now Let me just show you so I've already installed get And if you have you can refer I'll leave the link and similarly the people who are watching it in the description So, let me just quickly open my centaurs virtual machine to that you can perform with get device virtual machine that I've already in order to check the version here get - - version and you can see that I have Let me go ahead So now let me first make me call this as a deal breaker - repository and I'll move So first thing initially Is this repository So for that all I have and it will go ahead and initialize this a local git repository. So it has been initialized now as you can see in each slice em I drink - report dot kit or write I'm just going to create So let me just name p y and I'm going in this particular files. So I'll use G edit for that. I'm just going to write in Welcome to edu. Rekha close the parenthesis Let me clear my terminal now so I can see that edit record Now. If you can recall I was telling you in order or a directory into the local I need to add it and how will I do So all I have to type here is which is edureka.py then here we go. So it is done now now if I type in here get status which I need to commit. So this particular command gives me the status status what I'll file the need to So it says when you that is either a kurd or py in the staging area and I need to come So all I have to type M and the message that I want so I'll just and here we go. So it is successfully done now. So I've added a particular file So now what I'm going how to deal with So I have a remote git So I have created So the first thing that you need and then you can go ahead and create a new repository there and then I'll tell How do to a local git repository? Let me just go and we just zoom it a bit. And yeah, so this is And what I'm going to do to this repository stabbed and I'm going to add So I'll click on new. I'm going to give a name So whatever name that you want to give you Let me just write it here. Get - tutorial - Dev Ops, whatever name that you feel that I'm going to keep it public if you want any description that and I can also create a repository. And that's all you have to do in order to create a remote You can see that there's So what I'm going to do, I'm just going to copy and I'm going to perform git that I just copy And here we go. So this is basically to my local repository. Now, what I can do is I can go in my remote repository to my All after type here is and here we go. Set is done. Now as you can see that I've pulled So let me clear my terminal So you'll find read me dot What I'm going to show this array card or py file So for that all I have to type and here we go. So it is done. Now. Let me just go ahead and refresh and you'll find Let me just go ahead so you can see a record or py Welcome to edit a car. So it's that easy guys. Let me clear my terminal now. So I've covered few basics with this devops tutorial and we are going to focus which is called So we have seen few basic how to initialize an empty how we can you know, add a file to the staging area and commit it After that. We saw how we in the local repository My repository was on GitHub. I told you how to connect to how even you can pull the changes from the remote of these things we Now, let's move forward guys on the next stage which is called So continuous integration is in which the developers Just the source code in a shared or you can say more frequently and every commit made built this allows the teams So let us understand this that is there in front So here we have which are writing code and all of them are committing which can be a git repository or subversion repository which is nothing but will pull that code the moment in the source code the moment in the source code that it will prepare a build now as well build does not only It includes compiling but apart from that there are For example code review unit you know packaging your application into It can be a war file. It can be a jar file. So it happens in a continuous manner to change in the source code that prepare a bill. Right. This is called as So Jenkins has various Tools so it has various tools and deployment Technologies. It has well over 2,500 plugins. So you need to install go ahead and Trigger with the help of Jenkins. It is originally Right and let's move forward and we are going to focus so continuous delivery continuous integration So what are we doing in a continuous manner or in We are taking onto the test server or user acceptance test, right? So that is basically So let us just summarize continuous Any developers makes a change Jenkins will pull that code prepare a built once It will take the build will deploy it onto the test or user acceptance test. So this is basically what continuous delivery is is So what advantage we get here? Basically if they which commits has and we don't need to go of the application similarly if any bug appears we know which comment has caused that are Ernie can just go ahead and you know have a look instead of checking out of the application. So they basically this system allows the team right as you can see You know, if you want I'll leave a link You can go ahead and refer on YouTube can find that link in we're going to talk So continuous deployment is the build application that you have tested and deploying that onto in an automated fashion. So once the application be deployed on to the broad Now, this is something as I've told you earlier might be certain checks that you need to do now in the market. How do you might want to Market So there's a lot of things that you want to do before So it is not advisable actually automatically onto the processor so this is basically and deployment any questions. You have guys you can ask you. All right. So Dorothy wants Once more sure jovial do that. Let's start with So continuous integration the changes in the source and every commit will then right or any continuous So this Jenkins water will do it any developer commits a change and build includes testing integration testing So I hope you are clear with It is basically continuously you know, the moment in the source code. Jenkins will put that code So I have a question This is from Jessica. What do you exactly mean by unit All right. Well, let me just explain you that with an example when you are manufacturing It will be manufactured the cab the body So checking if the functioning of those small small pieces and then integrating and then testing is what is called I hope this answers for your software as well. All right, so she's fine Let's move forward and now I'm going delivery now incontinence that we have created here of the executable file. Jenkins will take that package onto the test server All right. So this one more question which kind of testing are you So this kind of testing of user acceptance test where you need to deploy which can be a replica and you perform end user testing or you call it For example My application all the functions if I want to perform functional I will first go ahead and check whether my search engine whether people are able So all those functions when I check or an application after deploying it on So that's sort of testing is basically what is I'm trying to refer here. So I hope you are clear. All right, she's finally We are going to continuously onto the broad So once the application is tested it will be then for release and I've told it is not a good practice continuously or in All right, fine guy. So any other questions related to integration All right. So there's a question It is from shubham. He's asking can you about Jenkins fine sebum? So Jenkins is basically and its job is to integrate that we have discussed, right? So we discussed First then we build and monitor it so Jenkins server or the Jenkins continuous integrate all of these stages. Now what it does it will give that you I will contain the entire software that will give you of your entire software Where is my Whether tests were onto the broad environment You can find it If you want to visualize you have been You'll find this one guy who has a stick of the people are playing So that's what Jenkins is it will trigger It will trigger different phases of devops life cycle that Jenkins support. I hope that's clear. So I believe I've answered So guys you have discussed How about I show you how Jenkins UI looks like and on all those things. So I've already installed And if you have any problems refer the video that I will ping you and people are watching it on YouTube can find it So let me just quickly open So guys, this is my Center is and over here. I've configured my Jenkins Jenkins and here we go. Just need to provide that you have given So this is how Jenkins looks There are multiple options. You can just go Let me just take you through a few basic options So when you click on new item, which will ask you to give So give whatever name that you want to give of project that you want. Right and then you the required specifications for your project. Now when I was let me tell you how you So you need to go to manage that you'll find manage plugins. So in this tab, you can find all the updates that you have already installed You'll find all that Jenkins support so you can just go ahead that you want to install just check it and then you can go ahead The plug-ins that are installed and then you can go the advanced tab as well. So this is something different. Let's not just focus Let me go back to the dashboard and this is basically which is called and this blue color symbolizes The blue Colour ball That's how it works guys. So I was just giving you will actually execute So we'll come back to it later. But for now, let me open my slides with the next stage So now let's talk So what exactly is so now let me talk about few of a particular application or provisioning of what happens, you know. I've built my application, but when I deploy it or onto the process servers, there are some dependency issues because I wish my application For example in There might be which was upgraded but in my prod and in they're still using of that software side because of which the application This is just one example apart when your application is life and it goes down and that reason can be you have Now, how will you go back of that software stack. So there are a lot of issues the admin side of the company which were removed configuration management tools. So, you know before these long script in order whether it's the the prod environment So these light which is prone to error plus. It used to take a lot of time and apart from that the Edmund No one else can actually with it once you so there are lot of problems that were there or the observe the company which were removed by management tools and that you guys should understand which means that writing code That's what it means suppose if I want to install of these three environments whether it's devtest abroad for installing lamp stack and I can go ahead and deploy it So I have the record of the system State president even if I upgraded I still have the record of the software stack, right so I don't have and you know write scripts and Right onto the nodes So let me just focus at configuration management First of all, it can help us to figure out when requirements change. It also helps us because the requirements have changed since and very important Point guys that it helps us to revert of the component if you have replaced with a new let me tell you the importance through a use case now the best example I know is a software glitch prevented for almost 90 minutes this led to millions of dollars of loss cause the problem that software was of its twenty trading Terminals and the system was tested in the morning it failed So there was a need to switch now you might think that this was a failure of nyc's configuration but in Reality, it was a success as a result management NYC recovered from which was pretty fast had The consequences would have been So I hope you Now, let's focus on various tools available So we have multiple tools like puppet Chef Anne I'm going to focus So pop it is a configuration for deploying configuring So, let's see, what are the various So first of all, you can Define distinct and every host and continuously whether the required and is not altered on the host. So what I mean by that you can actually Define this thing in my one particular node. I need this office. I can another node. I need this office stack defined distinct configurations for different nodes and whether the required and is not alter. And if it is altered puppet to the required configurations. This is one function of puppet. It can also help and scaling down of machines. So what will happen if in your company there's and you're expecting So at that time in order to today our task is to provision you might have to revision So how will you do that? You cannot go ahead by writing scripts. You need tools like puppet that can help you and scaling down of machines. It provides control over all So our centralized change gets so it follows in which the slaves for changes made So we have multiple nodes there which are connected So they will pole they Is there any change the master the moment it will pull that configuration and deploy it onto I hope you are getting my point. So this is called and push configuration. The master will actually push the configurations which happens in an civil but does not happen So these two tools follow pull configuration that follows push configuration are pushed onto the nodes The nodes will pull They keep on checking the master And if there is any change it will pull now let that is there in front So that is basically a typical what happens you can see that there's a master-slave our puppet master and here is our puppet slave which are performed the puppet agent sends the fact So this poppet slave to the Puppet Master farts what our Fox basically It represents some aspects such as its IP address or whether it's So that's what and the puppet master uses that defines how the Slaves What is the catalog that describes a desired state that Puppet Master manages. Honestly, then what happens to the master indicating that configuration is complete and which is also visible So that's how it works guys. If you have you can go ahead and ask me. All right a shoe bomb is asking give me some tool examples with Well short so as I've told you that an sibilance all Stark in which you write the scripts or you write the configurations that can be right or basically a master you want to push those You can go ahead in the slave and push as you want. Let's talk about So in pull configuration, the nodes will actually for configurations at regular. It's it can be a puppet slave. It can be Puppet Master. It can be a chef so chefs over so the nodes will pull for you know, configurations and it that has happened So I hope you've understood it. Just give me so that I can move forward. All right. He says yes all clear fine guys so I can see there are So let's move forward So what exactly is believe all of you have heard So what are containers but the lightweight alternatives So let me just explain So we have Docker containers and libraries required And that's when we call it. You know, we have containerized So let us focus on the diagram that is there in front So here we have on top of which we We have a No guest It uses the host operating two containers container one and it's binaries in libraries application to and it's So all I need in order is this particular container Because all the dependencies are already present So what is basically my application the dependencies The binary is Ivory is required Is there in if you must have noticed that even you want will actually get ready to use That is the reason when you compare it So let me discuss a use case how you can actually use So suppose you have for your application. It can be a microservice. It can be a monolithic So let's just take microservice. So suppose you have for your microservice your you for them with the help I can create a Docker image. So Docker image is nothing but you know a template as a template for And with the help you can create as as you want. Let me repeat it once more so we have written for a micro service application in an easy to write We have created a doctor. It and with the help as many containers as we want. Now that Docker image. I can upload which is nothing of Docker images we can have public repositories and from Docker Hub any team can pull that particular image as they want. So what advantage we get here, whatever was there The Microsoft is application. The guy who has written that and the requirement for so that guy's basically because he's only So whatever is there I have replicated in my staging So there's a consistent throughout my software I hope you are getting my point. Any questions you I'll actually open and I'll show you a few basics but before that if you have any questions please feel free to ask me. Okay, the question What is the difference and Docker containers? So with the help you don't have to preallocate It will take as and when required you have to pre-allocate because of which a lot So yeah, it's a lightweight It doesn't work It uses the host operating So these are few differences which actually makes it better and a lightweight alternative Can I download Hadoop when I can run it? Well, definitely you can go There is no stopping you available on Docker Let's try to pull it. Why not? So guys, let me just what exactly a Docker containers as actually a box in which our application its dependencies except the box Whatever happens in unless you explicitly or put something in and when it away and get a new one. So containers usually make on different computer. Ideally the same image in every environment stage So that's what basically So guys. This is my sent to us and I've already if you want to learn how to install Docker that helping you Then the people who are watching in the description box below. So the first thing is I need I will type system Give the password. And I started successfully so there are few images which are already which are public images. You can pull it at Right? So you can go ahead and run that image as many times You can create as So basically when I execute from dog a rabbit will try whether it's present or not. And if it is present Otherwise, we'll go ahead So right so let me just show you If you have not created an account and Doctor have Because for executing is it's free of cost. So these are darker and this is my repository Right? I can go ahead and search So for example, if I want to search which I believe one of you asked that we have Hadoop images Right? So these are nothing that are there on Docker Hub. So I believe now I can go back to my terminal and execute So the first thing that I'm going to execute which will give the list that I have in my local system. So I have quite a lot this is the size when it was created the image. This is called So I have all of these things Let me just clear my terminal I'm going to pull So all I have to type here is if I want to pull Just type in hair darker So it is using So tag is something that But yeah, it will provide the So it is pulling because it couldn't So download is completed Now if I want to run to type here is to occur and - IIT Ubuntu or you Well, so I am So I've told you how you can see the various how you can pull an image and how you can actually go So if you want to know I'll leave a link You can go ahead and have a look on YouTube can find it in the Let's go back to our slides and you're going to focus so continuous monitoring tools resolve any system what kind of system unreachable server, etc, etc. Before they have A business productivity now, what are the reasons to use Let me tell you that it detects any network It can determine the root cause of any issue it and availability of the services in troubleshoot server It also allows us to plan before outdated system and it can respond of problem and let me tell you guys these tools can be used when they are detected as well. It also ensures it a minimal effect on and can monitor and business processes. So what is continuous monitoring of an organization to detect and mitigate that acts that occur on its infrastructure So basically we have on the ongoing basis and We are experiencing. So if I have to summarize in one definition, I will say it is an organization security tools. So we have different an organization the integration of those tools and correlation of the data that is produced by It happens the data that has been produced on the organization's risk goals and threat knowledge and near real-time response to what is continuous monitoring if you can't measure it, you can't manage it. I hope you know what Now, there are multiple available in the market. We are going to focus for continuous monitoring and business processes right and in the event can alert technical staff of the problem allowing them before outages affect and users or customers. So I guess you 19 infrastructure outage affect So let me tell you how it works. So I'll focus on the diagram that is there in front So now I give is runs or a service it periodically on the same server. They contact holes so you can see it It periodically runs plugins They contact holes or servers on your network or on which can be locally present. It can be remotely present as well one can view using the web interface. You can also receive email if something happens and behaves like a scheduler that runs out in scripts It stores the results and we'll run other scripts if these results change now what our plugins plugins are that can be run from a command line to check So now use uses a results the Current status of the host So what happened actually your server is running on a host and plugins interact Now. These plugins will send which displays that in the gy So, I believe we all are clear with Naga is if you want I'll leave a link You can go ahead and the people are watching it in the description box below. All right, so we have So let me just give of what all things we We saw what was We saw the waterfall model. What were its limitations then and the difference and the agile methodology and what are the limitations of agile methodology how devops overcomes all in what exactly is the worms. We saw the various stages in devops starting Then we saw Then we saw continuous delivery Lyman basically, we understood the difference and deployment then we saw what is configuration management and finally explained Right? So in between I was to my virtual machine where a few tools and I was telling you a few comes the most awaited topic which is our use case. So let's see what we in today's use case. So this is what we'll be doing. We have git repository, right? So developers will be committing And from there. Jenkins will pull that code and it will first after cloning that repository using a Docker file. So we have the dockerfile Once that image is built. We are going to test it Dr. How as I've told you what is but like a git repository So this is what we'll be doing. Let me just repeat it once more so developers will be committing So the moment any developers in the source code. Gainesville clone It will build a Docker image that will create and from there. It will push the docker image This will happen automatically So what I'll do is we'll be using will be using So let me just quickly open and I'll show you that. So what our application So we are basically what creating a Docker image and then pushing it in an automated fashion. And our code is written So what is it application? So it's basically a Hello So we have a main dot JS. Let me just go ahead and show Let me just go back. So this is like guys we have main dot J's We have packaged or Json Then we have Jenkins file I'll explain it to you But before that let me of Docker file and how we can build a Docker image Very basic node.js application. First thing is writing to build a Docker image We will need a Docker file. Yeah, right you can think It tells Docker what of our image should be so on other images, but before that, let me just go ahead and create So let me just first clone So let me go to that It's there in downloads. Let me unzip this first, tutorial and let So here is So I'll just go to this master and let me just say my terminal let us focus We have dockerfile. Let's not focus right we have dockerfile. We have made not just packaged or Jason read me dot MD So I have a Docker file I will be creating So let me just show you what I have written Let me tell you are often based on other images We are basing our image on So this line that you to base our application on This makes our job easy and our dockerfile very So the in a hectic task and it's dependencies in the image is already done So we'll just need Then we have set I mean, this is optional Go ahead. If you don't want to do it, There's a health check for Docker to be able to tell if the server is And then finally we which Port ask server So this is how we Let me just go ahead and now I'm going to create So for that all I have darker Bell slash home slash tutorial basically the path and here we go need So had I started now and is creating an image and it is done it successfully built so I can just go So all I have to type it and my image ID So it is listening at Port 8000. Let me just stop it for now. So I've told you how you can create an image What I'm going to do, I'm going to use Jenkins a git repository and then perform testing onto Docker Hub All right, but before that what we need to do is we need to and what to do in each one We will write in on Jenkins file. So let me show you like this click on it. So this is what I have written That's pretty I've defined my application. I mean just clone the repository that I have then This is the target which is username. And Erica is The Builder image then test it so we are just going and then finally push it So this is the URL of Docker Hub and my credentials in Docker Hub credentials. So, let me just show you how you So go to the credentials tab, so here you need to click on global credentials. Now over here, you can go ahead and click on update and you your password and your doctor that whatever you So, let me just type All right. Now we need to tell where to find our code and what credentials to use to So I've already Let me just go ahead and show you what I So the first thing is the name which I was showing you when you There's an option called of your project and I've So if I have to show you can go to new item. And this is what I've chosen that the kind of project on Bill triggers. So basically this will pull my CM the source after every minute in the source code will pull that and it will repeat after every minute then are selected the pipeline script from SCM here either you can or you can click from source code management that kind of source code I've provided the link and that's all I have done now there's nothing else I and Save So I've already So let me just go ahead All right side. I started first. It will clone the repository You can find all the logs. Once you click and you can find So once you click here, you'll find it And similarly the logs so now I we have successfully We have tested it now. We are pushing it So we are successfully onto Docker Hub as well. Now if I go back to my profile So you can find the image is have actually pushed So this is how you It was very easy guys. So let me just give of all the things I told you how you can write to create a Docker image So we were basing our image of present of the docker Hub, right which already contains and it makes a Docker file looks I build an image using the how you can use Jenkins of cloning a repository then building a Docker image and then finally uploading We did that automatically with where you need to provide how you can I Jenkins file the next part beat staging and production that we have uploaded and can run as many containers So that's it from If you have you can go ahead and ask me. Any questions guys So does Jessica fiance's really enjoyed it Quinn I'm glad you all think If you're looking for online You can check out this particular you'll find all the necessary The batch timings instructors a course curriculum which will be the part how the certificate What are the review is? What is the course fee You can also contact for any queries you Thank you and have a great day. I hope you have enjoyed Please be kind enough to like it and you can comment any and we will reply them at the earliest do look out And subscribe to Edureka Happy learning.