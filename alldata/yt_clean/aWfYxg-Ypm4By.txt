So the CV looks all good and everything, but it all comes down to how fit you are with selecting JavaScript libraries. Imagine we had two options, the T3 and the T4 stack. Both use Next.js TypeScript and tRPC. But the T in T3 stands for Theo, a skater boy from California. Whereas the T in T4 stands for technology. Now T3 uses Tailwind, Tailwind has a huge community of 4994 hodlers online in the Discord, versus 584 Tamaguchis. But the Tamaguchis are more cutting edge. Where the last commit for Tailwind We push on save. T3 is primarily focused on web apps, Because T4 natively compiles to as React Native, through Expo. Now Tailwind doesn't map 1:1 but the T3 stans have tried for a long time to get it tailwindcssreactnative. Which was renamed to native-wind once it started working... which was abandoned for a long time But was made compatible &quot;th1xdev&quot; ...joined expo in 2023. And now it's fully compatible with mobile anyways to forget this whole part... Now the real problem comes in when we look at Auth and ORM. t3 uses next-auth or it's hosted solution clerk. Now next-auth is framework-agnostic, but it doesn't work on mobile. We could of course use clerk-expo to make it work on mobile... or hack the next-auth.js-exposed REST API. And see where things go. But even if we fixed the NextAuth NextAuth also doesn't work with hono-workers for t3 also uses Prisma, which is I mean, just try a simple query. If your result is in the first row in the first JSON, it will still revalidate every row in every JSON. Now t4 uses SupaBase for userdata and sells it to the darknet. But there is also a Lucia branch for which works with any ORM or database. ...If you know how to write the adapter. Now Lucia and SupaBase Now instead of Prisma, t4 uses Drizzle. Straight out of the gate. SupaBase and Lucia are edge- which means if we deploy on Hono, can scale to infinity and beyond for $0... if our bundle size is under 1mb. Which is also we cannot use Prisma. Because Prisma bloats the package just like this company's HR department. Now Drizzle also works on the Edge. Yeah, but couldn't Drizzle just? - Silence. Drizzle could work on T3, but the Now, Lucia would also work with T3, so I'm not going to consider. Now, T4 also uses helper libraries like ValidBot, MillionDollarJS, PrettyCake, VirtualEdit, and JotUi. Now, we could, of course, extend T3 with those, but we would first extend T3 with Pusher for WebSockets. Actually, better to use Soketi. And plausible and umami for analytics, because Google Analytics is Google Analytics... and we would also add Zustand to abandoned redux from our vocabulary - just to reintroduce it once they abandon Zustand. He. JavaScript. All of this creates an insanely huge which we're lucky to expand with bundle reducers and NextBundleAnalyzer. I love it. Now, t3 would typically host on it's better to use planet scale... which use railway, which is like Heroku, Vercel with a V, like in Evil. And Evil with an E, like in &quot;Emacs is life&quot;. And &quot;Emacs is life&quot; with a C, like T4, we will just host Of glory. Which means if we can get Slack to scale it to infinity for $0. The only bottleneck then is our database. Not even the database, but the write ops. SQLite is by definition on the edge. But it's still slower Cloudflare says they're working on that. They say that every week. But next week is Cloud and Innovation Week. So next week is different. Now we don't have the So, now we could of course From ReactNext to Vue Nuxt. Solid and SolidStart. qwik and Kwik-E-Market. And each comes with their Like Vue Croissant Over Next Beefy or svelte Wasabi Don't write this down, next week So. But then again, we might as Good idea. I didn't say anything. Now the backend we can compile to The frontend? Now for the desktop app we would need a native webview. We would use Tauri because Electron Now Tauri is basically like a V8 running. What is V8? Exactly. Spotify, Slack, Discord, *beep* Office. And most importantly, All use Electron. But we will use Tauri, with a webview that can render Rust Tauri is a Rust app. And we save on RAM. So T4 has 1000% code sharing, performance, lean optimized bundle edge-workers, cutting edge, free hosting, a purple landing page, Tailwind. So, you know, years ago, we would just on a 5 server with jjquery. And our 5 users would be happy. But this of course would require backups, how to do, but they lost trust in me after In fact, everybody's 2024 is the year of the They said that 10 years ago. They say that every year, but this We have an entire abandoned as well go with JavaScript. So we would use Next.js Apollo GraphQL, TypeScript, What is Kubernetes? Ah. I know this might seem like a fun way But this is the public service announcement to all senior engineers trying to learn all of this in online courses to get a job in today's developer market. My advice to you is Fish don't fry in the kitchen