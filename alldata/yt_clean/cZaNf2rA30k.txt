Hi, and welcome to "Introduction to Generative Don't know what that is? Then you're in the perfect place. I'm Roger Martinez and I am a Developer Relations help developers learn to use Google Cloud. In this course, I'll teach you 4 things. How to define generative AI, Describe generative AI model types, But let's not get swept away with all that Let's start by defining what generative AI Generative AI has become a buzzword, but what Generative AI is a type of artificial intelligence of content, including text, imagery, audio, But, what is artificial intelligence? Since we are going to explore Generative Artificial Two very common questions asked are: What is artificial intelligence, and what Let's get into it. So one way to think about it is that AI is of science. AI is a branch of computer science that deals are systems that can reason, learn, and act Are you with me so far? Essentially, AI has to do with the theory act like humans. Pretty simple right? Now let's talk about machine learning. Machine learning, is a subfield of AI. It is a program or system that trains a model The trained model can make useful predictions the same one used to train the model. This means that machine learning gives the programming. So what do these Machine Learning models look Two of the most common classes of machine ML models. The key difference between the two is that Labeled data is data that comes with a tag, Unlabeled data is data that comes with no So what can you do with supervised and unsupervised This graph is an example of the sort of problem For example, let's say you are the owner serve? Let's say pizza, or dumplings; no, let's say Anyway... You have historical data of the bill amount on the order type - pick-up or delivery. In Supervised Learning, the model learns from Here, the model uses the total bill amount on whether an order was picked-up or delivered). Also, people - tip your delivery drivers, This is an example of the sort of problem Here, you want to look at tenure and income, whether someone is on the fast track. Nice work blue shirt! Unsupervised problems are all about discovery, if it naturally falls into groups. This is a good start but let's go a little because understanding these concepts is the AI. In supervised learning, testing data values The model outputs a prediction and compares model. If the predicted test data values and actual called &quot;error&quot;. The model tries to reduce this error until together. This is a classic optimization problem. So let's check in. So far, we've explored the differences between and supervised and unsupervised learning. That's a good start. But what's next? Let's briefly explore where deep learning And then I promise we'll start talking about While machine learning is a broad field that learning is a type of machine learning that them to process more complex patterns than Artificial neural networks are inspired by Pretty cool huh? Like your brain, they are made up of many learn to perform tasks by processing data Deep learning models typically have many layers complex patterns than traditional machine Neural networks can use both labeled and unlabeled This is called semi-supervised learning. In semi-supervised learning, a neural network and a large amount of unlabeled data. The labeled data helps the neural network while the unlabeled data helps the neural Now we finally get to where generative AI Gen AI is a subset of deep learning, which can process both labeled and unlabeled data, methods. Large Language Models are also a subset of See? I told you I'd bring it all back to GenAI. Good job me. Deep learning models (or machine learning types - generative and discriminative. A discriminative model is a type of model for data points. Discriminative models are typically trained learn the relationship between the features Once a discriminative model is trained, it points. A generative model generates new data instances of existing data. Generative models generate new content. Take this example. Here, the discriminative model learns the probability of "y" (our output) given classifies it as a dog and not a cat, which The generative model learns the joint probability y) p(x,y) and predicts the conditional probability picture of a dog. Good boy, I'm going to name him Fred. To summarize, generative models can generate discriminate between different kinds of data One more quick example. The top image shows a traditional machine relationship between the data and the label The bottom image shows a Generative AI Model so that it can generate new content. So what if someone challenges you to a game I've got your back. This illustration shows a good way to distinguish It is NOT GenAI when the output (or &quot;y", - spam or not spam), or a probability. It IS GenAI when the output is natural language like Fred from before, for example. Let's get a little mathy to really show the Visualizing this mathematically would look If you haven't seen this for awhile, the Y=f(x) a process given different inputs. The "Y" stands for the model output, the calculation (or model), and the "X" represents As a reminder, inputs are the data, like comma or image files like Fred. So, the model output is a function of all If the "y" is a number - like predicted If "y" is a sentence like "Define sales", a text response. The response would be based on all the massive So, the traditional ML Supervised Learning to build a model. Depending on the use case or problem, the something, or cluster something. Now let's check out how much more robust the The generative AI process can take training all data types and build a "foundation model". The foundation model can then generate new It can generate text, code, images, audio, We've come a long way from traditional programming, In traditional programming, we used to have a cat: legs: 4, fur: yes, dislikes: Fred. In the wave of neural networks, we could give ask: "Is this a cat"? And it would predict a cat; or not a cat. What's really cool is that in the generative content - whether it be text, images, audio, For example, models like Gemini (Google's for Dialogue Applications) ingest very, very Internet and build foundation language models typing it into a prompt or verbally talking So, when you ask it "what's a cat", about a cat. Now let's make things a little more formal What is Generative AI? GenAI is a type of Artificial Intelligence has learned from existing content. The process of learning from existing content of a statistical model. When given a prompt, GenAI uses this statistical might be-and this generates new content. It learns the underlying structure of the are similar to the data it was trained on. Like I mentioned earlier, a generative language examples it's been shown and create something That's why we use the word "generative." But large language models, which generate natural-sounding language, are only one type takes an image as input and can output text, For example, under the output text, you can While under output image, an image completion is generated. A generative language model takes text as audio, or decisions. For example, under the output text, question image a video is generated. I mentioned that generative language models data. Check out this example. Based on things learned from its training this sentence. "I'm making a sandwich with peanut butter Pretty simple right? So, given some text, it can predict what comes Thus, generative language models are pattern-matching They learn about patterns based on the data Here is the same example using Gemini, which and is able to communicate and generate human-like and questions. See how detailed the response can be? Here is another example that's just a little sandwiches. The meaning of life is: And even with a more ambiguous question Gemini the highest probability response. The power of Generative AI comes from the Transformers produced the 2018 revolution At a high-level, a transformer model consists The encoder encodes the input sequence and to decode the representations for a relevant Sometimes, transformers runs into issues though. Hallucinations are words or phrases that are or grammatically incorrect. See, not great? Hallucinations can be caused by a number of is not trained on enough data, is trained on noisy or dirty data, is not given enough context, or is not given enough constraints. Hallucinations can be a problem for Transformers to understand. They can also make the model more likely to So put simply... hallucinations are bad. Let's pivot slightly and talk about prompts. A prompt is a short piece of text that is input, and it can be used to control the output Prompt design is the process of creating a from an LLM. Like I mentioned earlier, Generative AI depends into it. It analyzes the patterns and structures of But with access to a browser based prompt, So let's talk a little bit about the model and how they can be helpful in solving problems, when they talk about soccer. The first is... Text-to-Text. Text-to-text models take a natural language These models are trained to learn the mapping For example, translating from one language For example, translating from one language Next we have Text-to-image. Text-to-image models are trained on a large text description. Diffusion is one method used to achieve this. There's also text-to-video and text-to-3D. Text-to-video models aim to generate a video The input text can be anything from a single is a video that corresponds to the input text. Similarly, Text-to-3D models generate three-dimensional description, for use in games or other 3D And finally there's Text-to-task. Text-to-task models are trained to perform This task can be a wide range of actions such making a prediction, or taking some sort of For example, a text-to-task model could be make changes to a doc through a graphical See, with these models I can actually understand game is on. Another model that's larger than those I mentioned model pre-trained on a vast quantity of data to a wide range of downstream tasks, such object recognition. Foundation models have the potential to revolutionize and customer service. They can even be used to detect fraud and If you're looking for foundation models, Vertex Models. The language Foundation Models include chat, The Vision Foundation models includes stable at generating high-quality images from text Let's say you have a use case where you feel about your product or service, you can task model. Same for vision tasks - if you need to perform model for your use case. So those are some examples of foundation models your apps? Absolutely! Shown here are generative AI applications. You can see there's quite a lot. Let's look at an example of code generation top. In this example, I've input a code file to JSON. I use Gemini and insert into the prompt box - one with the filename and one with the I am trying to convert it into a JSON file Gemini returns the steps I need to do this. And here my output is in a JSON format. Pretty cool huh? Well get ready, it gets even better. I happen to be using Google's free-browser the Python code to Google's Colab. So to summarize, Gemini code generation can Debug your lines of source code, Craft SQL queries for your database, Generate documentation and tutorials for source I'm going to tell you about three other ways generative AI. The first is Vertex AI Studio. Vertex AI Studio lets you quickly explore can leverage in your applications on Google Vertex AI Studio helps developers create and variety of tools and resources that make it For example, there is a: tool for fine-tuning models, and community forum for developers to share Next, we have Vertex AI which is particularly coding experience. You can build generative AI search and conversations Agent Builder (formerly Vertex AI Search and Build with little or no coding and no prior Vertex AI can help you create your own: chatbots, custom search engines, training applications, Lastly there is Gemini, a multimodal AI model. Unlike traditional language models, it's not It can analyze images, understand the nuances This allows Gemini to perform complex tasks Due to its advanced architecture, Gemini is suitable for diverse applications. Model Garden is continuously updated to include And now you know absolutely everything about Okay, maybe you don't know everything, but Thank you for watching our course and make want to learn more about how you can use AI!