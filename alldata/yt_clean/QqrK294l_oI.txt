- We can actually find in plain text. This is basically a beginners guide to all the vulnerabilities in web applications. - It's like trying to find the needle in the haystack type of - Experience the thrill of - Wow! Great reflexes. (upbeat music) - Hey everyone, David Bombal back with Vickie, welcome. - Hi everyone, thanks for having me on your show David. - If you don't know who Vickie is, she's the author of this book, Bug Bounty Bootcamp. Fantastic book if you want Vickie, I really love what You are starting for instance, talking about Bug Bounties, but you also like talk about the basics of how the web works, you talk about web and we're gonna talk about one of those, just for everyone who's watching. We're gonna do a demo of IDOR. If you only interested then jump to this timestamp Vickie, tell me why did - So just for a little bit of background, for people who don't know Bug Bounty Bootcamp is how to hack web applications. - Is it for beginners, is that right? - I wrote it to prepare people in Bug Bounties to start participate in Bug Bounty programs. It's aimed at setting you up for success. So you will learn things like on a target, how to identify vulnerabilities, and then how to exploit them. So that part I find is useful for a lot of more advanced hackers as well, since even though you've you might not be familiar with all of the techniques but I did write it with And even if you have no experience in Bug Bounty's web you can still use the book and you can still follow - I'm assuming you took a lot over the years and then - It's really a deep dive into as a bug hunter. I didn't really start writing the content of Bug Bounty Boot Camp I started writing content and Bug Bounty on my blog because I was, you know, trying to get into cyber You know, just sitting in front of on different targets by myself, I got really lonely and I I wanted to connect more with people who have the same interests, and who also love to do bug bounties. So I started my blog and then over time I found as well as a lot of the over the years from my own learning, I wanted to publish that so into bug bounties as well. - Yeah, I think it happens with some, with various authors that I've interviewed where they writing and also connect with the community, and then that gets turned into a book. Hey everyone, it's David Bumble back He's the author of this book, of this book. Fantastic, fantastic book. Why did you decide to write this? - I thought, yeah sure, okay, I can find some tutorials online but didn't really find anything. - And I switched over I was really, really excited to join and there was no book that - And then I started taking notes, and I got to about 150 pages of notes, when I thought it through this is halfway to being - What is Bug Bounty? Which company do you recommend, if any? Let's start with like the beginner stuff and then we'll get into - So Bug Bounty programs are a way for companies to pay researchers and pay hackers to find vulnerabilities on their applications and or in turn of reputation So it's really like a win-win as well as the hackers. Bug Bounty is sort of like a method for companies to catch a that somehow end up escaping their in-house security capabilities. Let's say that you are a company, you've already had some on your products and you code scanning going on, but there's always those slip outta your hands, right? Or there sometimes are novel and engineers just don't know about yet before the researcher reveals it to them. And so companies have an about these vulnerabilities on the other hand can which is hunting on applications. Look for vulnerabilities, experience the thrill of being - Wow! Great reflexes. - And get rewarded monetarily as well. I really love Bug Bounty programs because it helped me learn and web application security in general. I think it's a really good place for beginners to get started in the field. It's one of those niche fields of entry. So I really recommend into info side, well who want to sort of pivot into either penetration testing, into application security - You can do it part-time, right? - Yes. I think most bug bounty hunters it part-time, because it's one of those right? You just hunt on a program or and so you get rewarded of the hours worked. - People who want to get into a field, the problem is how do you get Companies always want experience and then, like how do you get experience And this is a nice way to do that. - Yeah, that's for sure. I think my experience with Bug Bounty, was kind of like that actually. So I started Bug Bounties and I was a student in computer science. I had no experience in application and with Bug Bounties slowly learn about the field, but while also gaining these While I do it. So I got really lucky in Bug Bounties and that I experienced very early success. I think I pretty much found a bounty on my first night of hunting. It was a really low severity report and I didn't find bugs, for like I think six But it was enough to keep me going, right? Because that was such an earn money as a student while I also learn about the cybersecurity field. - I love what you did there. You didn't wait till you, like we're in the workforce, you were gaining experience and I think that's fantastic. You're gaining real world experience and that's what's different to CTS, right? Because you're working on real companies. - Yeah, that's for sure. It's really motivating you can contribute to the industry or to the security of these big companies or these websites while and while you don't have a in cyber security. Starting early as a really enabled me to start after I graduated university as well. - You got it. You got real world experience, like proper real world experience, not just simulations. Real world experience which it allowed doors to open while you were still studying. So I love that, but I have to come back to the question, which Bug Bounty programs exist and which one would you I recommend first reading either via my book or some to get familiar with and how these vulnerabilities works and then practice some or Cross-Site Scripting So a good one is PortSwigger Academy, is a really good training some of the basic exploitation techniques. The examples on PortSwigger and a lot of the times they what you actually see in of the complexities of or applications are simplified for you. But nevertheless, it's a really good way to of what you're doing there. And then once you get very familiar with how these vulnerabilities work, I recommend going on some VDP's. So Vulnerability Disclosure Programs, just to try out hunting, right? If you search on hacker one, if you search on bug crowd or integrity, there are a lot of public and you can usually by searching for things like on background it's called Kudos only, and on integrity, I think it's called These programs because they don't pay, they're not as competitive I think I got really lucky and I started learning before Bug Bounties got super competitive, but it is very competitive right now. And a lot of the times and you are looking for the you won't be able to find any by other bug hunters, right? So I recommend starting like a lower competition level, where not so many hunters are looking, train up your skills there. I got my start in a non-profit program and the engineers in that they really coach me on a lot of different web vulnerability and just in general, acting kind of like a So I'm really, really If beginners can find a to participate in and build up your confidence, it will be a really good into the paid programs. If you do wanna start making Another vulnerability platform is called huntr.dev. It rewards people for in opensource repositories. So it's not just the big There are companies there are these open source programs. So there are many, many to choose from. I think as a beginner you as to where you hunt in like the most competitive - You know Ben, wrote the intro for this book. He said exactly the same thing. - Go hack on programs on by the pros, by the top million dollar hackers, by the full-time Bug Bounty hunters. - If I'm a beginner and I'm and there's many people like that, the chances of me catching it So I love that advice. Any other advice for beginners? - It's definitely getting harder but it is possible. Something that I see very look for the same vulnerabilities, the same simplistic vulnerabilities in every single program they hunt for. You quickly realize that you of not being the first person and in the bug body world for your duplicate reports, right? - Not for you! - I think this is also really advocates is that in Bug Bounties you really need to find your niche. Your niche could be doing and try to find out those for bugs on a program. I always look for things like or access control issues, because I found that as I gained more experience looking for those issues, I started seeing the and I started thinking about more ways to bypass access control and prevention techniques, and that became my biggest winner. So I think beginners really instead of using all and hunting on all the popular programs, because everyone else would - Yeah, so become like an expert - Right. That's for sure. It's a good idea to explore, you know, the vulnerability worlds more widely when you're first starting off, but don't expect all the Right? I think some people are just better at spotting business logic flaws. Some people are better at or some people are good fuzzing machines or automation for actual vulnerabilities. You don't want to be stuck for every single vulnerability So explore widely, find out what you like, find out your hunting style in that. - Just thought about this Let's say you've found a bug it would be declared duplicate, but if I want to get experience on my resume, can't I? Because I found the bug. It's something to show employers, right? - Yes, that's for sure. The way I think about it is are valid bugs that are not paid. So that's how I like to think about it. When I was hunting I that's for sure. And it's still, you still You still found a vulnerability that the company cared about. That's the most important thing. So even if that didn't end you still get experience, you still get the learning and you still get the yes you are doing something found a vulnerability, you proved yourself as a hacker. - To me it's like if I'm and I want to hire someone and they can show me they've and they got recognition, even if they didn't get paid for it, it doesn't matter. It means that they found stuff, it means that they're which is fantastic. - Yeah, that's for sure. I totally agree. - Do you need lots of money to start this? - Not at all. That's what I think I really Well all you need is your laptop, a browser and like a proxy software, let's say Burp community, it's free to download and that's A lot of Bug Bounty hunters I know, purchase a lot of advanced but that was really not So when I first got started all I had was you know, a laptop, I use Firefox and then Burp community. - You need to have some So I think you mentioned Kali in the book. - Yeah, it's helpful but I would say. And the good thing with with a lot of like But I find that a lot of that for a lot of Bug Bounty on what kind of bugs you specialize in. I actually don't use Kali, so it's helpful to know a little bit about how to use the command line, but again that's not necessary. Extremely helpful but not necessary. Programming too, I think it's extremely helpful but not necessary at the same time. - That was my next question, do I need to learn to code? - I know a lot of bug and don't program. Learning programming is really useful for starting to learn how you know, the tedious parts of bug hunting - Any recommendations, is Is it go? What language do you recommend which one would I start with? - So I recommend learning because these tend to be the And you can use any of the I think I learned programming There are so many for learning programming. After you get used to like the syntax of a programming language, you can start building a small program to get really used to the language and start using it in a practical way. So in my book I have about how to build a step by step. So that's like a really good writing some code to automate hacking. And what I found was that into my bug hunting regimen, it got so much more enjoyable and so much faster because I a lot of the boring tasks. - Once you've learned to cause of exactly that, right? You can create code that So I'm a firm believer and I agree is a fantastic way to start. - That's for sure. And I think, after you start Bug you'll actually found that a lot of the tasks are quite repetitive. Like let's say that you are looking for a vulnerability So what do you have to do for it? To find that vulnerability to scan the company's for certain signatures if they're vulnerable to take overs. All of that is actually Eventually I think I build like a, it is just a single Python all these subdomain takeovers for me, and I didn't have to do anything. It would've been horrible if and and thousands of And it's just not practical an automation script and someone else would find the vulnerability That's the real advantage of also making your bug bounties. - Which sort of area do if I'm a beginner? - The vulnerability that are a really, really good vulnerability for beginners to start to find. IDOR's are probably my favorite because they are so simple, but they can be super impactful. They probably are like my I definitely experience on IDOR's and other access control issues. Definitely different bug hunters will have different personalities, right? I preferred IDOR's and I really like business logic often are not automatable or other hunters. They require some knowledge into how the application And a lot of the times it's and so it requires a human The duplication rates for these vulnerabilities are A lot of other hunters have had success with other bug types. One of them is Cross-Site Scripting. So Cross-Site Scripting is that everyone scan for and is looking for, right? But they're also a really complicated bug, that can have a lot of that you could use. So if you get really good and using JavaScript then you can make a whole Bug Bounty career just I don't really like to but I do know that a lot I know APIs are also A lot of the vulnerabilities are actually API issues and hacking APIs are becoming of expertise, right? I know I watched your - Historically when you're trying to go after the crown jewels of an organization, which is typically their data, you have to find a way into that network. Once you get into that, then you have to get past their firewall, then you have to find a landing point within a network where maybe get domain admin and locate the data and exfiltrate it somehow. The big deal with APIs is they - He is like the expert He has a book in hacking APIs as well, which covers in depth an API, how you look for different issues in APIs. So I have it in that book as well. I think the big thing with of your fundamental skills into API hacking. So let's say that you read my book and you learn about SQL injection, you learn about IDORs, you learn about access control issues, you can then start learning by reading Corey's book and just naturally because a lot of the mechanisms under the hood actually - When you learn a skill, I mean you can take it I'm really keen to get to do a demo. Would you be able to show us an IDOR demo? - Sure, yeah. IDORs are my favorite - Like what is IDOR? Let's start with the basics. What is it? Why do we care? - So IDORs, the full name is called, Insecure Direct Object Reference and despite the long and IDOR is actually a very simple Essentially IDOR is Let's say that example.com allows you to chat with other users and when you sign up you on the website is 1, 2, 3, 4. This website has a page of your messages with your friends. When you click on the view on the homepage, you get redirected to user ID equals 1, 2, all your chat messages with Now what if you changed the URL in the URL bar to question You notice that you can now between another user, user 1 2 If so, you have found IDOR vulnerability. The reason that you were of another user is that in place before the server returns the private information of users, the server was not verifying that you were in fact user 1 2 3 3 or it simply returned the IDORs happen when access control and when the references to or a database entry are predictable. - Here we are at PortSwiggers So this is a lab that I really I do believe it's completely free to use and it sort of gives you of the basic vulnerability types. So once you've gotten familiar the all OWASP top 10, the you can then come here to for practice. I do have a list of labs for beginners. I'm gonna give you the you can post it under on the video. - Anyone who wants to I'll put it below. - This particular lab on about IDORs specifically. They planted this IDOR vulnerability within this shopping site, and what I really like don't really tell you where Instead they let you go through of finding and discovering This website is like kind of simplistic, much more simplistic and the more simplistic than you would find in a regular application, but nonetheless it's for beginners. Usually when you hunt on a lab like this, you'll have to like and sort of look for all responses to look for the one IDOR. But for the sake of time, I've already done that in this particular lab the IDOR is located in the live chat functionality. So let's go there. So once we go into the live chat, you can see that there is live chat with like a message box right here. Let's try to send a message here. For some reason the send button but we could still go where the vulnerability because it's actually in this right here. When I click view transcript here, you can see that, you know, something is downloaded and tried out this lab multiple times already, to make sure that this Here you can see that being downloaded. When I click view transcript and I think the latest one is this file. So three dot txt, was the file that we just downloaded. Just to test that hypothesis, let's go to Burp suite So now our Burp suite is from our Firefox browser and let's click on view transcript again. So this should make Burp Suite intercept our outgoing request so to the server right away at what our request is doing. And when we click on view transcript here, we can see that, yes, we did see some requests filling out here. What I would do usually is that, once I start using a is vulnerable to IDOR, I would start looking that I'm sending out from my browser as well as coming back in for things like obvious user IDs, obvious resource IDs and if possible. I would like to add that these they're not always that obvious, right? They're not always simple numerics, sometimes they are phase 64 strings or short strings that are So there are a lot of possibilities, but the key here is to look referring to the resource If I am looking for an IDOR allow me to read another user's messages, I would look for things like weird strings that I don't know as well as anything related emails, and I would start to switch other people's resources. So just from a quick scan here, I don't think this request There isn't anything besides maybe the session cookie here, but let's continue and So when we forward this let's see what we get here. So these are not really Here we can see, this is another host from my browser to the server, right? And I just skipped off a ton of requests because they're simply and you can tell based So this is another request, a get request to the endpoint and it's downloading and it's an outgoing request If we continue to intercept we can find out what this request What we can do here also is through like all these requests, you just want to see this related request and response right away. You can right click on Burp and then this will just with your request so that you and then filter through and you can see that In this case, after we send the get request, the server does not actually There's probably another this process here. Let's continue with the I think something is downloaded. Okay. So something was downloaded there, I didn't quite attach the request, but let's see, open this file. This you can see was the from this server, this vulnerable server, and it just says So I suspect that this is simply what the live chat is giving you. So I think this is basically a transcript for the live chat that we just did. And because we didn't and we didn't get any this is all that's in Disconnected, chat has ended. Nothing too exciting. But what I see here is that, at the request that we at repeater here, we can see that it's sending a request to the download transcript endpoint. Downloading something called four txd. What is this four dot txd, right? Can we possibly exchange this ID out, let's say change it to does that mean that we transcripts and see someone So that's what I wanna try here. Again we can use the repeater as well to intercept the request and then return it back to the browser. Let's do this again and we can turn on intercept again so that we're catching our request now from our browser, and then click view transcript here again and let's say click forward and then we can see this download And we can see here like endpoint is sending an So that's even more indicative being incremented. They're probably going I just happen to be the this functionality. Let's see if we can and see what happens, right? I'm not sure if this is someone else's messages or but you should always try out and see if you can find anything. Sometimes it's just incremental and they tie your user ID to the resource that you can access. And in that case, the application is not vulnerable to IDOR. But you can never be sure Let's turn off incept now. So when we turn off intercept, we'll just send all the Let's see, it still says five dot txd, I think that didn't quite work. I'm gonna have to try again. You transcript again, sometimes this happens. So what I just did actually was that, I opened up my downloaded file, it says five dot txd and it's still showing me the same result, disconnected, chat has ended. So that means that I'm still for my user session, possibly the last one that I just did and that the IDOR actually In this case I'm quite an IDOR, right? So that means that there's something wrong with my execution. Maybe I modified the wrong request and that's not the actual which file to return or the I'm not the proper user and I'm not allowed to Sometimes you have to maybe try a few different things, try messing with different from your browser for the same feature. To really pin down which resource or which endpoint you should So we see this request Get download transcript six dot txd and we changed it to one but we immediately turned off intercept. We didn't have a chance to look at what's actually coming So I'm gonna keep intercept on this time and do one dot txd. This time let's look more closely and see if there's anything in order to get to our final results. So we click forward again, this is not related, not related. So here somehow the for six dot txd. I'm gonna change this to one dot txd again and then see what happens. I'm also going to, so something I really to send all the suspicious so that I can try out the same Once I'm in the repeater, right, I have this request fixed here requests are coming and going, so I can start messing around with all these different fields like the host field, the get field. So the repeater is like for in depth like experimentation. And the proxy and the repeater actually, are often the only two tools for my hunting, especially when I'm looking for things like access control issues or business logic errors. Let's click forward again, and let's see what's happening. So I see like the requests Does that mean that our Yes. And you can see that one dot txd is here. So we were actually when we did it the first time, and that's all right. I think if we have more time, it's worth going back and looking at those two different requests and see what the difference is there. And maybe from there we can deduce how the application is built, in like a real life application and in a real Bug Bounty scenario, we can sort of try to how it's built from those requests, and then go back to sort of apply that to different endpoints as well. And so I'm gonna open up one dot txt here, drag this here and you actually contains some information, right? It wasn't the same chat and it's someone called how who can actually find in plain text. So this is like a really classic, really simplistic case of with the resource IDs other people's sensitive files, and from there who knows And this case you found a password. I've also had IDORs in different users chat or their private images. So IDORs are really simplistic but their potential impact is It all depends on what kind And so IDORs can be a really, really powerful technique to learn and a really rewarding bug as well. - It's like trying to find the needle in the haystack type of - Yeah, that's for sure. It's a really odd bug where so simple, but at the same time a lot of sites don't really So the way to prevent to check the user session, right? You need to check the user's identity before granting access to resources. But a lot of websites don't do that well. This is like a huge vulnerability, right? And it is a huge privacy leak, in terms of Bug Bounty severity. this is probably a critical vulnerability, if you can see every single - How common are IDORs? Is it still something you find? Is it still a bug that's worth pursuing? - I think a lot of are not super common just because of how simplistic they are, but from my experience they I'm consistently finding IDORs and so I did full-time Bug Bounty hunting for a few months, and during that time were always IDORs. It's one of those issues that applications do not protect against well. The main cause of IDORs is not checking whether you are authorized to download that file, but it simply hands you the right? This is all cause by applications maybe accidentally not on a certain endpoint One of the reasons that against is that it can happen It can happen in pages places where users modify their like password change endpoints. And I've seen it a lot where an API endpoint is not checking whether someone has a before sending back all the on the resource ID. Part of the reason why it's you'll have to be very aware of where all of these and you'll have to apply very across all these endpoints. Going back to the API thing, API endpoints are probably that I'm finding IDORs at this point. You can look for API user information based on, like user ID or session ID as input, and see if anyone can If you can access other So yeah, my top paying Bounties, were all related to IDORs. Some of them were API endpoints, that gave me access to The example that we saw just It doesn't really have The resource IDs were just but in the real world, IDORs don't always look like this. For the most part they A very common way that against IDORs is to use So sometimes you can see long strings of alpha numerics, and they think the randomness to prevent users from But that in itself is because you're still not or session information. Then if the user can predict about the unique resource IDs, then they can still So in my book I actually talk about a lot of ways to bypass common So I think common they range from just to deriving the IDs from So how you can combat that to predict user IDs or derive from the application. Or sometimes you can also on other parts of the application and then combine that with IDOR, and then suddenly you can information. As long as the outer there are so many things that you can try to bypass that protection. And that's something an outstanding Bug Bounty hunter from someone who can't find any bugs, is how creative are you of bypass do you know, when you are faced with an - If you were starting today, what would you advise yourself to do? Is it like go and register on PortSwigger, like read your book? Give me like a path if - Yeah, for sure. I think the first thing that is to read my book. This is basically a beginners guide to all the vulnerabilities in web applications, so that it gives you a about all the mechanics And then we can do something like sign up for PortSwigger to test your skills out in a simplified environment on a public program so that you prevent getting frustrated by tons of duplicates and informatives on those really competitive programs. It's worth it to start as soon as you can. When I was first getting started was that, I did not automate until I and I wanted to scale. Before that point, I've already spent tons of time doing repetitive tasks, right? And that took up a lot of hunting for other bug types that I could have spent of the program, and I could have spent learning about different and different technologies. Start automating the boring would really pay dividends for Bug Bounty hunting. - I think that's great advice. So you've still got an active - Yes. Vickieli.dev, so that's V I C K I E L I dot D E V. I publish a lot about, mostly about web security Like how do you navigate how do you write better technical content? Every time I publish a blog post, I tend to announce it on Twitter anyway, and my Twitter handle is Vickieli7. So V I C K I E L I seven. You can always find of InfoSec right there. - That's brilliant. So for everyone watching, please go and follow Vicky on Twitter. Go have a look at her blog, use the link below if Otherwise go to no starch or wherever your favorite place is. Vickie, thanks so much taking your knowledge and not but like putting it on your blog, being involved in the community, sharing your knowledge on Twitter, but also for putting the book together. Really thank you for that. - Thank you so much and thank (upbeat music)