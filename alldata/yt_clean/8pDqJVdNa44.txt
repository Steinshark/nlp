[Music] Check, one two, one two. 1, 2, 3, 4. This is React Podcast, I'm Chantastic. Today of React. 10 years in the rear view mirror succeed. That a framework by Facebook was of story. In fact there were many times in going to succeed at all. So what happened? dead on arrival to becoming the dominant front-end It starts at Facebook in 2011. jQuery and backbone opinionated tools like Ember, Angular and outside world, Gangnam Style has just been the charts, and the freshest meme is the Overly basically been an eternity. So strap in, set because this is quite the underdog story. [Music] I see this camera has a red light on but this [Music] Just clip it on with this. Testing one two, testing. [Music] [Computer turning on] When I got the offer to work at Facebook, The Social Network the movie had just come and she was actively discouraging me from doesn't seem like a very nice boy. Facebook there'll be anything like it ever again. It experienced before. In fact just a couple Facebook's campus and he got up on a table and I was working mostly with this guy who trying to explain to him you know I've worked had been like 10 or 15 years, nothing like &quot;You're my stressing, you're my masseuse, the time, I think, was going through this whether it was like a real programming language was a lot of churn. So you had jQuery was was so many different like warring frameworks a lot of similarities between them but each none of them were actually really fantastic interfaces and apps. There was this trend do more stuff and at Facebook we still had stack which you know, one of the things that just growing JavaScript bundle sizes so as the client got slower and slower so we actually and towards you know minimal amounts of JavaScript we knew that what we were doing for client-side side wasn't going to get us all the way there. that React came out of. [Music] I joined Facebook back in 2010. I've been in the JavaScript world. I was a committer is one of the the granddaddies of the JavaScript I spent my first two years at Facebook on push to compete with Apple and Google and as a company was to go directly to the web So as part of that we developed, myself and and Will Bailey, built a framework called a bunch of things that each of us liked. Bolt was basically more or less Facebook's implementation of a client-side MVC. I think it was like of things like Backbone and a couple of other But it was born from a place of the specific constraints experience. Completely rethought from the and we're calling it Timeline. Facebook was an experience more than anything else. You're or anything like that on Facebook, you really know the user interface itself needs to be it was truly an application development framework. interactive rich apps and was being used to at Facebook at the time. We ended up having all the various apps, be it timeline, chat, built and so obviously the team had to expand we probably had maybe 25 engineers working apps built on Bolt and that's just on the was the architecture that would eventually more complex and as we added more engineers to get really, really hard to make changes. Jordan was on the ads team and he's like I Jordan is an enigmatic figure. He uh he's I know about him. Jordan and I aren't necessarily.. much. Especially Jordan kind of shied away was a product engineer at the time, working pieces of UI across all of Facebook at the you know really hitting the limits of what And just the developers ability to hold in somebody else wrote and you know look at the and I need to know why. And Jordan had a lot take what we had done in Bolt and make it make it easier for it to scale with people's And so we had a lot of ongoing dialogue and ideas how to change it. I think one of the Functional Bolt. He saw that there was an opportunity to do Bolt in an easier way. So what Jordan decided me, was: &quot;hey wouldn't it be easier if, any changes, user type something, we just blow If you look at what every other framework data binding and this was not that. It was going to do that at all. Anytime anything then there's an asterisk which says well we're to try to render as little as possible but relationships between views and models, we're crazy. At the time I was really down on frameworks that was going to work. To many people that everybody's idea of how things should work [Music] I've been working at Facebook for 10 years Some people told me he had an interesting And so I had this meeting with him and one meeting was: what is the most difficult thing I was six months out of school, I was like updates. You need to find the DOM node that listener to the click event and remove it And this was also a massive source of bugs I was like, yeah you're right, this is probably the hardest And he was like: I have a solution for this. I was like, okay this guy is crazy, going to be performant. The meeting ended But one weekend I was like, okay maybe I should Before joining Facebook, I worked on a way to find needed to search through like 20.000 guilds. the fastest way possible to display when you And I was like: okay I spent months, full let's try it with React. And in practice it it was actually not as performant but around And I was like mind blown and to this day I was in the photos team and spending all on my own projects in the photos team, evangelizing. which it did. [Music] [Chantastic] Jordan is making headway on his seeing the value. But not everyone is impressed. Jordan's project as a distraction. So they a stop to it (to focus efforts on Bolt). We was going to be weird because we showed up up with this like, okay Jordan I want to understand want to help make sure that we are spending that are gonna have longevity and solving in with like, can I show you a demo of what and it does this and it does that. And eventually him I had to kind of admit like he had something in learning more about what he was doing. to invest in this and work on it if it's going that's not going to be the case, sure we're really strongly that all the ways we've been flawed. Whether they're a JavaScript library it's like a 30 year old tried and true model all suffer from the same base problem: a state and Lee if you could just dig into the code and we'll talk about this again, then we can right and so I did I dug around the code and I eventually got to play with it and got to coming away, that like yes there was something how I got sucked into the project and I ended Lee brings this rigor and sort of design really helped with the initial versions of it from something that was kind of like an to something that really people could approach [Music] There were a couple of problems that I faced right away build something. Not only was the the set from what I was used to as a UI engineer. just the terminology, was also really different. bid here was that this would be simpler but complicated. Mostly as a desire for me to that it would kind of end up helping resolve Like what are all the things the concepts that are going on here. And so I literally go back to Jordan, I'd go back to other people I get this right? Are these definitions right? think about it that way, and be like okay, back and forth and back and forth and I'd way we'd realize like, oh this concept and name them one thing instead of two things. up what ended up being like a reimagining sort of the entire front-facing API for React. enthusiasm around that. Jordan was like &quot;ah ideas&quot;. At that point a handful of other folks then I spent sort of the next month or so, place and pretty significantly changing the was I think the first shift from this being that other people were playing with, to a whole team. Where team here is like a collection who were sort of bought in on this vision, we can use when someone has a question, anyone Jordan. That was the first big shift. [Music] [Dog snoring] One of the first projects that React was used which is basically the likes, comments and still during Facebook's kind of web era, when driver of engagement. Newsfeed had a billion tuned for performance. Heavily interactive like clicking it to add likes, you're typing side we want comments to come in live, so in we want it to just pop up right there. interface to feel almost like a one-off chat And as that started to work the second thread isolated sense of messaging then what if it was another really complicated and fraught of the ideas in React congealed, the JSX syntax how to work with data and React sort of were with the messaging team, if I remember correctly project, realized that we needed a completely [People clapping] So my name is Jing and I'm a software engineer [Chantastic] Flux is an application architecture designed data flow. Paired with Flux, React could go This shift in how to think about state paired updating UI and ended up being sort of the being more than just how do you model complicated applications. Like this was something that points and had navigation to it and it allowed asking Jing like hey how's it going with this work? She was like, yeah this is pretty good, when I became more convinced. [Music] Instagram joined Facebook in 2012. I think there was a couple of engineers from Facebook the product offering. At the time Instagram wanted to have a web presence as well. [Music] I spent 11 years in San Francisco, it was really fun I made a lot of great friends It's just very peaceful I went to Facebook straight out of school. I studied computer science undergrad believe it or not, the cool place to work everybody used. It was super cool on college [Music] I joined Facebook video. The pitch was, we're after YouTube and Dailymotion I think, and and like you get to be engineer number two worked really closely with the iOS photos building an Instagram killer and nobody remembers One morning the photo's team got called into the and then the VP of engineering was like hey And these were like the people that were at them a little bit as the enemy, I'm sure They were a really small team at the time, but there was a lot of stuff they needed to to figure out on their own and a big one of to be on the web. The web experience is really a pretty important priority and so me and all the web stuff. And that's kind of where developing this website. [Music] We were given this mandate to use client rendering at Facebook, which was run by Tom Occhino. any team that needed help and do it in a way to be other teams saying &quot;yeah that really consult the Council of Elders and they give need to do client rendering, what do we do? we don't know. We've got like three different try one. We had something called Bolt.js, then there was this this thing called React. Pete went and spoke to Jordan about using React and he came and talked to me about potentially liked Jordan's ideas around functional programming. innovative and it really, really spoke to I was not somebody that loved front-end or the fact that React came in with like a totally much about existing best practices, like I evaluated all three I really just dove in ended up shipping on Instagram.com which was and the first use of building a full application When I chose React for Instagram it was not kind of crazy science experiment. Not even close. By the time Instagram was, it was significantly better than it was in a ton of iteration. We had to take this thing which back then was a big giant PHP application application which is a totally different system. making that a repeatable process and making he hit a number of really interesting problems that React was not quite ready for that scale he was working with, built a lot of really [Music] Some of these products ended up being fairly to deliver a relatively high quality product. it was not just that, but people liked developing off and especially is it got more and more what we wanted to use and it was really ads higher level of investment, more people working more components so it was a harder shift to The ads team just before I joined ads from the ads creation flow into Bolt. Which took a very old PHP application with what time But at the same time React was also now actually that was forming around it. So we now had on Facebook, both solving real problems. We similar. Similar enough to confuse people. almost looked identical but that worked really nightmare if you had to work in both. So we [Music] A lot of this ended up being a conversation of both of them. A lot of performance-based cases were. On the pro side of React, obviously handles complexity way, way more. Even when already hit one place that you just could and you can do in React. So we knew in the we were building, we're going to run into unmaintainable but as you scale that across an absolute mess. The cons of it on the other not battle tested yet. There's a lot of things handle forms, they'd never done a text box awkward form controls like radio buttons and issues where it would try and re-render large performance improvements that obviously exist con was that we had just done the six-month recently and the stock had halved since IPO. the ads team is the team that makes, you know, for four months we're gonna have to tell everybody of conversation back and forth about all this. the engineers that used Bolt, including Shane, invested so much in this thing and it's really work through the next set of challenges we're to React coming in and saying like how are not even proven yet. This is our business, I were working through it, there was definitely think it came from uh each of us having a coming from. So I think there was a lot of stepped in and said, look make the right technical and whatever it is I'll back you up. But if four months you can. We all kind of just got things and got everything out in the air of problem, what's a financial problem and kind through uh with lots and lots of coffee that not a straight line at all. He ultimately was one of the biggest proponents or decision makers in ads switching everything over to In most companies if that's your baby project because you're you know you're really defensive at Facebook at the time and I think that Shane There was still a lot of work to do on the ads creation was stuck. Here again to get them unstuck, We'd have this thorny management issue and a lot of people disagreeing with each other, up and down the management chain on both sides of you know in ads and in this React, and we'd send Jing in to talk to the engineers and everyone would come out, like patting each other on the back, full agreement, building a consensus because she's able to identify them really quickly and get everyone helped both build the product but she also React or just something that it didn't handle and then just fixed the framework. Or she two or three engineers working on this stuff The ads manager was complicated enough that source of performance improvements and finding doesn't quite scale. So I think it was a lot as you start to assemble them into a really the new problems that come out of that, that a lot of those. This is one of the most fun it. We would be going to meet with the team in and we would code it up ourselves first wouldn't hit any rough edges. Or more like hit and figure out what the solutions would working on two things at the same time. One important software project for Facebook: the framework that we really believed in which ads creation flow, which I think took about basically everything about the browser supports, massive performance issues that had been resolved, it was ready to be open sourced because you of contexts and that you know it would actually [Music] [Mumbled question] Uh there is not, sorry. Open sourcing React was never goal from the very beginning. Tom had this he was really angry I think it's probably was hiring all these luminaries from the JavaScript because we discouraged people from writing a hard environment to maneuver in, they would where a lot of the interesting client-side to change this around. I remember going to and I told them I worked at Facebook on JavaScript hate what Facebook does to the JavaScript great people from these really great projects now. They've given nothing back. So I think on talking about if this thing works for us And I was running that up the management chain it, there were some meetings, it was controversial The process of open sourcing is interesting. You have to figure out how to extract it out the open source, which is all the homework that like we will not impact developer productivity source team, which was just a bunch of people work. Then actually pulling the trigger on We spent actually a lot of time with the documentation all the concepts and we tried to put ourselves an app. How do we give the documentation in did a lot of this because he really had the to make this work at the time. Paul O'Shannessy James Pearce who was the head of Facebook and he really wanted to change Facebook's sourced a lot of stuff but we let it rot. here's our great framework and then we would in particular were pretty instrumental in React, we're going to do it right. Internally already been using this thing for a while and it We chose JSconf US which was kind - is that fair representation maybe? You know paying attention and everybody watches it this presentation. Tom is a great speaker like a Lennon and McCartney type of situation. There was no way that this thing could possibly fail. [Music] It was in Florida, at like 9 00 a.m. we took the first bus into the office. It to like press the button on the repo to open got up on stage. I'm going to talk a bit about at Facebook. It was a little unconventional, So along with react we are shipping an embeddable we jumped into showing some code and that we have React used with JSX. And people were Everyone hated it, everyone thought it was awful! [Music] Internally we were expecting a much better reception&quot;. We thought there'd be some language do fully functional programming in the UI, really humbling experience, it was kind of and weekends on getting this thing open sourceable hated it. The thing that everyone focuses I haven't watched this video in a while. See these divs are not exactly what you're reactives and I'll get to why that's important. it. I don't remember at all thinking that This is the slide for sure. We haven't talked we haven't talked about why this is working We're just like boom here's some XML in your happening. Uh poor Jordan.. What we didn't really fully understand there was between where the rest of the world Facebook was. I don't blame them. I don't was crazy themselves. I think they were kind I think there was a moment for me personally where sourcing of this was to get us closer to the I may have demonstrated that we actually have doing is so much different than what the rest there was a &quot;well we messed that up&quot;. We made Because I think the measure of success would have been &quot;wow Facebook engineering it was &quot;Facebook engineering has no idea what I think that JSconf appearance might have been Jordan's last conference for didn't go back for a while as well. It turned And particularly for something that was as for developer productivity and just, it's faster for free. To have people misunderstand that were just you know knee-jerk reactions about it, can only.. Must have felt very bad. already gone through all this internally in it's a smaller scale you can just get in a really do that with the whole world can you. made as part of React that were self-evident to a different audience in the community. At the time you shouldn't put your HTML, CSS really extract them out and you should have like the best practice at the time. What was of concerns in React is that you separate rather than saying: I have my view concerns you say you have your newsfeed concerns over admin panel concerns over here. So it's a there was a lot of backlash around like oh don't know how to write software. We thought of Facebook. [Music] It looked like all hope was lost for our friends outside of Facebook was willing to give it [Music] When I first started using React in 2013, it was not announced at JSconf. I saw the announcement that it would be helpful for one of the projects an interactive math question editor at Khan component oriented architecture. I was trying the state management was getting a little to myself, wow this actually looks like it I'm looking at this post from 2013 that I React and it was right after I had started is Facebook's React JavaScript library&quot;. And to write an answer to that question based The answer I wrote is very positive. I think I was having a really good really well. One line from the post says, and have now made a handful of pull requests so far seems really well thought out and I user of React. And I talked a little bit more it was helping me. It's cool to look back see how even one week into React being released, I think that excitement lasted for a long I was working on at the time over to React. was easier to understand and it was faster. using React&quot; and I ended up deploying that was I think the first production code using It was a brand new project that had just been it before, and so there were a bunch of rough to use it in a particular way before. Or if and I was trying to use it a slightly different little bugs or issues where it didn't work those I read through the source code and tried is there anything that I can be doing differently chat channel where a lot of the core team open sourced. They helped me get started not to it as I started filing issues and helping well as starting to make small code changes Her perspective from Khan Academy and just being Sophie started as someone using React externally who contributed to React core externally then React core then we would have these like weekly so Sophie like worked out with her local manager to come to Facebook and hang out with us. previously where we hired folks from the open anything back, she became the first ever open Sophie's involvement lifted the spirits of that maybe, just maybe, the rest of the ecosystem special, they knew it. What they didn't know I think there are people on the team like me and Jordan and the competitive nature of it. We knew sure of that, I viewed it as just a a messaging we message this to people because they don't The open source feels like a milestone practice it is just the beginning. Because users, now you need to actually build a community, solves the use case for the people. And so down. And we also realized I think that really different you have to convince people one And we learned a lot doing that. We learned the ideas are not what people encounter when are the docs and the error messages. What adopt something is an incremental way of doing that. So the team got to work. They focused on spreading the knowledge of React one concept Then an opportunity arose: another conference. Later the same year, thank goodness, I had my desk over by the product Tomo and he's like, oh we're just like sponsoring a keynote and I don't want to give it. Because all that stuff. Because you know after you after you get off stage and when you go to pleasant thing in the world. And I was like, and go give a talk at a conference. Hey I'm for creating user interfaces that we call couple months ago. And we got some kind of of snickering, that kind of thing. We weren't I'd like to talk to you today about the design than other Frameworks and kind of the implementation For this talk it was like, I'm not even trying to say it's good, I'm not even to say that this is interesting and there's thing works that you should pay attention And so we got these kind of early innovators chasm diagram, where you've got your your and in the middle you have your kind of normal adopters fired up and evangelizing React inside interest started to pick up. People started know, let me just see if there's something burn of adoption of React. And it prompted recruited Brandon Bloom into the community somewhere. He started talking to his friends actually worth paying attention to. And then who is this very well known, very well respected, I think he was working at the New York Times York to do something and we grabbed coffee. Bloom, that was my friend that said you should excited about it, more than I think you could JavaScript is kind of multi-paradigm you can you want but it's not required but in Clojure thing and nothing existed. Like we were sort but it always felt like there was friction. I was still early in my career right and this is like really senior super smart engineer ask me questions about it and I would stumble and then he would repeat it back to me in like yes, I'm gonna steal that! And so when huge light bulb went off, I was like: finally UI framework. Eureka! I mean it was definitely programmers to finally write a reasonably natural, it was a very, very good fit. Like a week or two later he wrote this blog post called the Future of JavaScript MVCs that In many ways you look at React and you're no way it could be efficient. And then I showed look like and React is much better. Especially So my article I think was focusing purely removed the superficial consideration and try it. Not I'm going to use it but it removed I'll give it a shot, this is interesting&quot;. months after that I would say that we were a JavaScript framework. If you want to spread people and have those people share your message, More people started to realize that React had some in a lot of ways. Over the course of the next just tracking things like Google Alerts of writing about it, what projects are cropping a lot of stuff that you need in order to build would fill in the blanks. And there was a up and there was a bunch of router libraries strategies. And so there was this sort of React is a small focused UI library but hardest problems and other big companies noticed. to rethink best practices. [Music] We first heard about React back in 2014. The It was very slow, it took about 15 minutes a more modern framework. There we go. Now this React thing was going to work out. It especially since we were building the future we make a bad choice now we got to backtrack about not jumping into something that was they actually pitted two teams against each with one being React and the other one being So thank you all for coming out tonight. We're the learnings that we've had, building the not this stage, it was our next stage over, guess in 2015. Same feeling like oh my goodness React is amazing. But I guess it worked. So I was part of the At first it was very clunky, like you're writing you're putting too much logic into them or difference in the paradigm. And then you start thinking much more atomic. Hence the symbol reusability, okay now I'm thinking about the the benefits now come out of it. I can reuse we can change this here, we can add props that new paradigm come to play and go: this to change the world. Let's go back in time remember this one. The overall look and feel feel and so I actually want to show you one the new UI would look like. We knew that going things were moving faster, and our competition and going with a more modern framework really the website, how fast we could get new changes for our customers to make the best possible And because of that we've been at the forefront of web development. We've had a lot of companies but we were there first because of react and design. This is how it ended up turning out and completely built in React. So we're very [Music] Netflix was now praising React publicly and with a the framework grew in popularity. In fact it kind started to take off. [Music] React at this point was getting more and somebody on Twitter mentioned &quot;hey it would be cool to have a React conference&quot; and a lot of people started commenting and tweeting about this. And I went to my manager 50 tweets about React today, like people are we organize a conference? And I was like, how to do that, but like maybe. I was very was very cool that we got so much traction Even though React came from big tech company of people that were like really dedicated this very indie you know Rebel Alliance type a user conference, like we got this cool vibe I was totally wrong. We had said to ourselves, but are there even enough people using React we decided: Well let's try it, let's try to Within a minute, all of the tickets were sold were handling the actual payment system. Schrep, the CTO of Facebook, actually reached important like VP or CTO of some company that you do us a favor and I was like I would love you know we're completely booked. Certainly tickets had sold out. We didn't realize just just how much enthusiasm had been created [Music] We put it together pretty quickly as far as conference planning goes and we just had it people from the nearest hotel. And it was really, really well. Good morning everyone The conference went like extremely, extremely I'm so excited to be here. And we open sourced and we started talking about GraphQL, about There is this moment where you go and you out like logo of the React atom. And I was drew that in front of me like in the middle source this thing, because we needed a logo, together real quick. And now it's this thing this on it and there's something about the That was the moment when it dawned on me that So for a long time what React was to I wanted people to adopt it was because I better and make their lives better and make a lot of reasons why I thought it would help is that React was becoming a community. There next week that would have an expanded audience things that were discussed was really, really community was going to be an incredible part point was definitely already a really important [Music] It's proven to me that engaging more important than the technical work itself, have an open source project. I'm excited that I want to thank this community for making and keep working on it. That's all I got, It was a real high point for, not just for for Facebook engineering. I think we really actually like doing something that people feeling. It was already like more widely used how do we actually start converting everything of the other frameworks and really like double from like an interesting product to this is time to be around and to get the whole company this happen. Let's see, I have some keepsakes up here, which will be not easy for me to get down but.. Let's see. I have some stickers, oh this is a fun one, We ordered like a bunch of these and put them last one that I had. Facebook open source down memory lane for folks. React conf. We a good one. React conf attendee badge. This at Facebook's headquarters so this had a list the keynote. Me and Christopher Chedeau. We other stuff.. So pretty good stuff, pretty The team became inundated with questions from orbit. [Music] What should I do with my hands? start like uh.. Let me focus for a second. React was created by Jordan Walke. I worked at a small startup. We were creating a sort of a digital publishing platform so there blocks or like a scrollable text with like a dynamic kind of interactive editor for for doing it with Backbone. I kind of wanted to solve this problem. The first React component a button you click it and it says like you you and like 40 others like this. So there the way you would express this in other Frameworks what's changed and update it. And in React this, if one person like this, show this, way to write this kind of code. And yeah I that looks good, ship it. And so we actually of like 9 months while still shipping new so much that we were able to add new features old features, that's why I really kind of A lot of things didn't exist back then. Like So if you needed something, it didn't exist, to figure out how to do it because otherwise So that's kind of what I did for a bunch of was.. I just saw a big opportunity there. It was called React Hot Loader at the time. So I wanted to give a talk about that, but it earlier at React conf. A really clever and he created the React Hot Loader. And I interesting because people kind of already would be true but that's how I saw it at the little bit and I wanted to make a proof of demo that is often referred to as time traveling. time, you need to be able to control time, you're designing blind. I didn't really know for a talk. So I'm gonna send the proposal figure it out. And it turned out that the it would be and so I made a proof of concept known as Redux. So my talk is about developer travel these are all developer tools. He was able to deliver this talk and I called it thing that shook out of it was you know this for React apps for several years. Most of that's what inspired me to contribute to the are two particular projects that I'm going to give that talk but I was not surprised but also I thought the talk was good.. like glad that people also liked it but I think like the moment for me. I think it was just It kind of felt like going to Hogwarts for the first because there were all these people who I meet somebody in person they kind of become the whole picture. And I think it was just that we are all trying to figure out what it yet and we're just playing with it. That's also where I met Jing Chen. I had asked the co-creators of the Flux architecture. mentioned that actually Facebook is hiring for me right at the conference which was like like four interviews or something like this but we just did an interview there and so just quickly grabbed them out of the conference conducted the interviews in the basement of No Dan is special, he's always been a little I guess like I would think of myself as like maybe the first member of what would because I joined a little bit earlier than bunch of other people who work with us now. who worked with us before were just about period when the team was changing a lot. [Music] Remember the old days? Do you remember the first time you Uh I think I've met.. I do! I think I met him yeah.. I thought it was at React was that the first time? Did you get invited I met him like I think before that. I met the same week. Yeah he started asking some that on the team we were talking about internally you with like Sebastian and Jordan and the like to the recruiters I was like yeah this I think we were really fortunate early on up and they were this seems cool, I just want I didn't realize it was kind of like a freshman had started managing the team around that for a better both project and set of colleagues Yeah, that's cool. Awesome! I feel Like man we're nailing this! [Music] React was now out of the hands of It was ready to take on new life in the care of a We tried to watch some of the numbers like the number of GitHub stars or the number of npm downloads. On Google Trends, how many people are searching for but basically all of them kept going up over looked at it and said oh yeah like millions There are a lot of little details in how we did that were critical parts in making it what framework. We left a lot of it to the ecosystem we got a lot of interest that way, we got not ever a foregone conclusion. Like it's it is. It's this great example of this like there could have been these forces that really of good timing, good fortune, good luck, good to allow React to be a success, that had we things failed instead of succeeded, then I it is today. I feel like you can't take anyone think in the early days obviously Jordan, then Jing Chen just absolutely critical. I days of React that it just wouldn't have been itself. And then Shane O'Sullivan is responsible to like I'm gonna go this path instead of on refining and iterating on it and turning Paul O'Shannessy and Pete Hunt. And my manager all these questions about like should we be after JS conf when we were feeling defeated, and be like: no look it is delivering value, phases too right, you have the early, early almost we're going on 10 years now, with Sebastian's Dominic and Flarney and Sophie and I just people and if you take any of them out of really a team effort, it was really a team [Music] Misko Hevery says that awesome solutions It's almost always one person with passion This is a great summary of how React became was always this wild idea that kept gathering React to fail and if it weren't for the hard it very well could have. This is just the beginning of the React story. underdog UI library into the most popular This is React Podcast, I'm Chantastic. [Music] I'm like so tempted to just surprise FaceTime It's just really strange to think that you're just The first React T-shirt that we made. Thousands of developers find jobs across Europe in one of these European cities, sign up at documentaries then subscribe so you don't