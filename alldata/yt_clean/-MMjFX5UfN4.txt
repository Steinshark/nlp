Finally, another new video from me here. Yeah. Sorry about the long break. There were a lot of things quite a long break here on YouTube, Express.js, the most important and popular we have out there I mean, honestly, version 4.0 was released 11 years ago. That's a long time. I mean, we have other popular frameworks which seemingly release new versions 11 years in the JavaScript world, But now, finally, after 11 years, Express JS version five. Though if you run npm install express, you will still get version because version five has been released So it's npm install express@next to get version five. now there is an official version You'll find it below the video. But what's really funny is that I'm recording this on October the 16th the 15th, and I didn't until I started recording, has already been released a month ago I saw it back then, but I was traveling and got sick in between, so that's But it took the Express team over a month after the release of version 5 to also release this blog post, fits the the general theme of Express It all just takes a bit longer, It all just takes a bit longer, It is a super stable and popular library and it's probably still the library. You should definitely learn. For example with my Node Express course If you want to work with node on But Express JS gets downloaded a lot. Like really a lot. It's super important. And by the way, version four will And I can also already spoiler too many big differences but since it took so long basically all projects out and they will not all suddenly rush That's my prediction. So if you want to learn Node Express, But again, as they also describe in this blog post. It is a boring release. They say it here. It's a boring new version in the end, really useful, important thing for for ages forever. I almost want to say now. They also mention here in the blog post they will share more details stability plans for express, when the express version will switch to version five If you run npm install express, They want For the moment it's npm install express at And they also of course which big changes are introduced example, you now must use node version They also say that here in this GitHub So you must use version 18 node version 18 or higher to use express five. Now besides that, we got some, routing path matching which probably but you learn about all the details here But the big thing release really is this promise support But express because in Express express four you could use promises. You could have middleware which is just a middleware function Which was async, for example, but if those promises through an error, any kind of error, using express version four, and use the next function, which is As the third argument passed in by express you had to use that to forward this error to your default error handling. Middleware. Express JS has this feature which is one central place that might occur But if they did occur in a promise, and forward them It was also easy to overlook, to silently be ignored or introduce Now, with version five, finally, express does that for you. You no longer need to catch Instead, if you have a middleware function and it uses a promise and the promise gets If that happens, then automatically your global error handling middleware, and you can have your error handling code And that's really, So that's amazing. Now another interesting change so that the, the from incoming request bodies if you use today to parse submitted form data. Now by default the extend extended configuration is set to false, have to add any configuration With version four, you manually had to set because if you did not set anything, or an error that you need to set this. Now the default is false, and you don't need to set it anymore. So a nice convenience, change Also important which were deprecated before, So there are no longer available And if you take a look at this list, you might see some methods in there like the send method, in your applications or the Json And the thing is, these methods You can and should still use them. What's been removed is specific versions For example, here for the response So send with two arguments Instead, For example, as you probably already did it in the past, both into one method call anymore You can still and you should still use Set some status dot json but you can't use the Json method which It's really just these combinations and some other methods and properties weren't really used in your application Now there is an official migration guide You can go through it and how to migrate, There aren't too many big changes, the library that powers Node.js backends, and it's getting used by so many projects. If it would now change that the new version but it really just is, boring. New version data for which does introduce some meaningful quality of life And that really is a good thing. And I guess a nice variation frameworks or libraries where we have huge It's nice to have an upgrade,