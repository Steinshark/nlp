now we will see solve problem number three in subnetting let's start the session with outcomes upon the completion of the session the learner will be able to outcome number one we will submit the given network based on host requirements outcome number two we will find the number of networks or number of sub networks and outcome number three we will find the number of hosts per sub network or network let's see the five steps of subnetting here are the five steps of subnetting i request you to pause this video for a while and understand the five steps i hope you have already seen problem number one and problem number two if not i request you to please watch that first before coming into problem number three it will definitely give you a better understanding let's dive into the question now the question is subnet the ip address 150.15 into 500 hosts in each subnet in the previous problems we have taken class cip address now we are going to focus on class bip address if the first octet of an ip address is between 128 and 191 then it is obviously class b so this is a perfect example of a class bip address so it means we are going to do subnetting for class b let's start with step number one what is there in step number one identify the class of the ip address and note the default subnet mask so step number one is it is a class bip address and the default subnet mask is 255.255.0.0 step number one is done let's now move on to step number two here we are going to convert the default subnet mask which we identified in step number one into binary when we convert this into binary we are getting this result because the first octet and the second octet are 255 so all bits in binary are one in the first two octets and the remaining two octets are zeros step number two is done let's now move on to step number three here we are going to note the number of hosts required per subnet which is given in the question and find the subnet generator and the octet position so in the question it is mentioned as 500 host required per subnet so we know the number of force required per subnet is 500 and in order to find the subnet generator and the octet position we need to first convert this number 500 into binary when we convert this into binary we will be getting one one one one one zero one double zero so how many bits are there in this binary there are nine bits it means we cannot have a binary number for the equivalent decimal number 500 without nine bits so nine binary bits are compulsorily required in order to get the decimal number 500 we will ensure that now so i have brought in a calculator here i'll change the option as a programmer calculator i will type in 500 so the decimal equivalent is 500 and the binary equivalent is triple zero five one zero one zero zero as i already mentioned ignore the leading zero so it should always start with one let's take it from one one two three four five six seven eight nine bits are required so obviously we require nine bits in order to get the number five hundred and what's the next step we are going to reserve nine zeros in the new subnet mask so when we want to generate the new subnet mask we need to reserve nine zeros so obviously i am reserving nine zeros here as i already mentioned we need to start from the right to left so in the right hand side octet that is the fourth octet we have only eight bits so i am reserving eight bits here and then i am migrating towards the third octet the third octet i am reserving only one zero because i need to reserve only nine bits so nine zeros are reserved and what's the next step we need to fill in all once in the remaining octet positions so the remaining values are filled up with once because a valid subnet mask will be continuous one followed by continuous zeros and no more ones will appear and what's the subnet generator 1 2 4 8 16 32 64 128 256 512 is that the subnet generator 512 now if it is 512 will we be having 512 as a value in an ip address or in a subnet mask no 512 is not a valid value in an ip address as well as in a subnet mask so what is the subnet generator 512 is the correct value only here we need to start from to power 0 this is 2.0 this is to part 1. where is the first one we are encountering when we move from right to left the first one is appearing in this place and this place decimal equivalent is 512 only but we need to start it from here this is two part zero this is two power one two pi one is what two so the subnet generator is two and what about the octet position is the subnet generator in first octet no second octet no is it in the third octet yes so the octet position is 3 please note the subnet generator is 2 only but the decimal actual decimal place is 512 what does it mean it means in our network 512 ip addresses are possible let's talk about that later so we have found the subnet generator and the octet position so we are done with step number three let's now move on to step number four generating the new subnet mask we have already generated it and what is the decimal equivalent when all bits are one in an octet it's two five five and this is also two five five and this is the entire thing is 255 and the place one is not used right it's zero so the entire content is two five five minus one it's two five four so the third octet in the subnet mask is two five four and the fourth octet is zero in other words this is 128 plus 64 plus 32 plus 16 plus 8 plus 4 plus 2 and no 1. so we will be getting 254 so the new subnet mask is 255.255.254 in other words how many ones are there eight plus eight sixteen sixteen plus seven it is twenty three so in slash notation slash twenty three is the new subnet mask representation so step number four is also over now let's move on to step number five in step number five we will be generating the network ranges that is the subnet and for that we need to use the subnet generator in the appropriate octet position in the previous examples the octet position was 4 but here the octet position is 3 so the increment should be in the third octet let's see it now so we are going to generate the network ranges or sub network and what is the ip address that is given in the question 150.15.0.0 is the first ip address of the first subnet and what's the first ip address of the second subnet just add the subnet generator in which octet in the third octet what is there in the third octet it's 150.15.0 so 0 is in the third octet just add 2 to the 0 we'll be getting 2 here so the second subnet starts with 150.15.2.0 and what about the third subnet add a 2 to the third octet so we'll be getting 150.15.4.0 150.15.6.0 150.15.8.0 and so on i hope you can understand this now what is the last ip address of the first subnet the first ip address of the second subnet is starting with 150.15.2.0 the last ip address of this is not 150.15.0.255. it is 150.15.1.255 please note it's not 0 or 255 it's 1.255 because 0.255 is a valid ip address in this subnet which can be assigned to the host that is not the broadcast address because after 0.255 we have 1.0 1.1 and it goes on because how many ip addresses are possible it's 512 the position of this one is actually 512 so 512 ip addresses are there in each subnet if it is 0 or 255 only 256 ip addresses are possible so we are also including one dot series also that is the third octet which is one is also included in the subnet and what about the last address of the second subnet it's not 2.255 it's 3.255 because the next ip address is the next subnet which is 4.0 and what about the third subnet's last ip address which is 5.255 the next subnet's last address is 7.255 and the next subnet's last address is 9.255 and it goes on so we have generated some number of networks wherein each network can have a maximum of 512 ip addresses possible whereas 510 ip addresses can be usable for the host because the first address which is 150.15.0.0 in the first subnet is the network address and 150.15.1.255 is the broadcast address now how many networks are possible here in order to calculate this i'm gonna give you a formula or a shortcut how many networks are possible how many hosts are possible so in the actual subnet mask this is the class b subnet mask so the first octet and the second octet are not at all changed so we are not going to touch these two portions right the first two octets remain unchanged and the changes are made by the new subnet mask only in the third and fourth octet so a total of 16 bits are there how many ones are there how many zeros are there the number of zeros is for the host per network the number of ones is the number of networks or sub networks for example out of these 16 bits why we are taking only 16 bits out of 32 bits the first 16 bits in the original subnet mask is just retained as such and the new subnet mask is making change only in the third octet and in the fourth octet so the change is only within these two octets and that's why we are taking these 16 bits and what about the number of hosts per network and the number of networks nine zeros we are reserving so two power number of zeros means the number of hosts per network actually this is possible host we need to reduce to y because the first ip address and the last ip address are not used so we can have only 510 usable hosts per network and what about the number of networks how many networks that is possible like 0.02.04.06.08 10.012.014.0 and it goes on how many networks are possible we have 2 power 7 the number of ones is the answer so two power number of ones here is 2 power 7 2 power 7 means its 128 subnets are possible so we can have 128 sub networks wherein in each sub network we can have a maximum of 512 ip addresses or hosts possible so we need to reduce 2 from this because the first address and the last address are not used in the submitting examples i am using the terms hosts and ip addresses interchangeably so when i say 512 hosts per network we can get it means 512 ip addresses we can get since ip address is for the host and host needs ip address i am using these two terms interchangeably in question they may ask how many hosts are possible or how many ip addresses are possible in this example for representation purpose we have mentioned 2 power 9 is equal to 512 hosts per network is possible it doesn't mean 500 hosts can be there in one network only 510 can be there i have been mentioning this right from the classful addressing topic always we need to subtract 2 from the set of ip addresses we get because the first address of any subnet is the network address and the last address of any subnet is the broadcast address before we conclude let's see the homework question and we know we have solved this problem like this the homework question is what is the network address of the third subnet for this example and what is the broadcast address of the second subnet so just see this is the second subnet and this is the third subnet what is the network address of this subnet that is the third subnet and what is the broadcast address of the second subnet pause this video for a while analyze your answer and post your answer in the comment section i hope now you know how to submit the given network based on the host requirement in this case we have taken a class b example in the next problem we will take class a example and we know how to find the number of networks that is two power number of ones and we know how to find the number of holes per network which is two power the number of zeros and that's it guys i hope you guys enjoyed the lecture and thank you for watching [Music] [Applause] [Music]