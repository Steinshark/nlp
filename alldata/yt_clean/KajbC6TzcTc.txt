JOHN MCCUTCHAN: Hey, everyone. I'm John McCutchan. You might remember me But instead of games, I'm I'm an engineer on And the goal of the is to really make Our goal is to make applications fast as they can in JavaScript. But this talk is going to focus and its philosophy, and But before I start, how many And how many of you Taken a look at it? All right, well, I hope So I guess you could capture with this phrase which in America with everything So Dart-- it's not but there's actually There's tools, an editor that can give you There's a virtual machine. That's the team that headed by Lars Bach, You might know V8. And then there's a So even if your browser doesn't it doesn't matter, because code to JavaScript, and as handwritten JavaScript. And you'll see the of why you might want to code So here's a little story here. So I want to build This is the state if you're a Well, you'll get to Backbone, and jQuery, and it just goes on and on and on. It's kind of crazy, right? I mean, there's There's no default who's writing JavaScript Every JavaScript project a few of these libraries, that But Dart has all of So there's a little Things are very consistent. So the Dart SDK And then what we have is where Dart library developers to a central repository. And then you, as a Dart well, I want to use and I want to use about internationalization, and And every other Dart is going to be using so there's a little But then we want to Right now, it's very difficult I mean, we've got of engineers working in There's all these There's GWT, there's But the productivity is impacted no edit/refresh iteration You have to go through all these just to see the and the source code actually So this is kind of like a is that we can do And there's a lot of of languages to And in a way, that confirms is that JavaScript and there's a lot of that are trying to kind and make it easier So there's Dart, there's CoffeeScript there's But when you compare Dart has some really in particular the rightmost These other languages around the idea of compiling so the performance is fast you can run how fast your program written can run. It can't run any quicker. But with Dart, could theoretically So let's give a Dart source code looks like. So Dart is class-based. It's object-oriented. It's not prototype based So the one running theme is that it's familiar. If you're familiar with a or C#, you're going to feel It's very similar. So let's make a class Hug. And Hug can have How strong am I hugging you? But you can be really terse. A lot of the time, in your you open it up, and you just were passed to the to member variables. In Dart, there's just shorthand. You see Hug this dot strength. That just means it's take this parameter, to my member variable strength. You can have named constructors. So you can have a So if you just want a shorthand hug, just do Hug.bear, and You can do operator overloading. This is something that's not This allows you to take two And in this class, that means You can have named So you don't have to pass that the function You can actually provide and give them default values. So by default, if I want to I'm not using both of my hands. And this is another example Here's toString. If it's just a why have a curly brace and You can just do a fat arrow return whatever's is the result of We also have string So instead of having to use the together, or to take a variable you can actually just use So if you had a to print it to the console, reads $strength-- whatever is at that time. So one of the most as a developer about Dart are really clean. I come from a C, C++ background, I often get confused. I don't understand I compare to things and they're equal, or Dart, that's not going to is true. And there's no undefined. That doesn't exist. It's just null. There's no type coercion. If I say is a equals is not going to try It's just going to evaluate and return true or false. That's it. So what happens if you on an instance Well, you actually get a The class string doesn't And we'll see more on But this is very logical, right? You asked for the missing And instead of it giving you undefined getting a proper error who the receiver was, a little passed to the function. What about an This is completely You can just ask for this, In Dart, you actually This array does not so it can't possibly So this stops you from kind of not realizing that you've inside your code. So this is something JavaScript is incredibly So we see here that we We have a foo that's and we have a foo that's But there's no hoisting, right? You can see that the foo doesn't override the foo So this kind of operates the and C# where the scoping And this-- this is like-- every I make this mistake where the this that I expect it to be. But in Dart, it always is the So there's a real If you want to use you actually have to and you have to So everything-- again, there's So you can see on the I'm making a library. I'm calling it games. So if I wanted to you could use my games library. And my games library and it needs the and there's all these But let's dig deeper into So if we look at this, is equal to new ButtonElements. We're making a going to insert it into the DOM. And we want to set and the text to click, and and set up a listener for to the DOM at the end there. In Dart, we have So you could say var button is dot dot id equals fancy dot So this saves you and it becomes kind of doing all of this And you can even put that right inside can do new So when this expression your ButtonElement is the way you want it to be, and So what if you wanted to You wanted to put somewhere, put it in a database make it persistable? You know, in a you think OK, well, I'll and then have all want to serialize into this and inherit from that. But that's not really what is supposed to be. So Dart actually has So hug is still just inheriting but you can actually So it doesn't alter but it provides new So if we have this abstract I save load into that class hug extends So hug gets the functionality but it doesn't pollute the that it is not logically sound. And then here we say, let's and then call save going to go into some So libraries and JavaScript So one thing you might is, OK, it's this new language. It's running on the web, but can that I already have written? And the answer is yes. It's actually relatively There is a Dart to proxy between JavaScript and pass them back and forth. So here's a little example. The Dart code up So you get the chartsAPI out You create a new and then you create a through the JS library. And then you just Now this is actual if you were to be writing You can see that it's from a few extra proxy steps So the point here is that to take all of the written in JavaScript, and carry land. So async with callbacks. We all know how many and they can be kind of scary. So if we have this catService and we get the we rotate the image by we're four levels deep with callbacks and so on. But then you've got to do Like what if any one of these You're just repeating So Dart has the and you can do a and that returns a future. And then you can just do dot and dot then and and then dot then And the catchError at the end So if any one of the error case is at the bottom of the chain here. So you can actually compose So if you want to get but you want to do all the logic you can do this-- you and then you call a in the list of both of them. And then when that when they're both completed. And if any one of the catchError will So asynchronous with better than a fiery So the streams-- this that is baked into the So all of these things are not extra and you download, and This is part of the So we're all starting than starting from So streams are a series A future is an isolated A stream is a series of them. So you can think of from a file, your messages button clicks, And basically, all you have from a stream is of code at the bottom here, You're given whatever the You do something with it. So let's take a look here. We have on Element, and there Right, so query the DOM. This is another is just baked in to So you have query for where the keys are Map the character code Right, so this is just going first key press. That's it. Then print the first character is equal to that character. So web programming with Dart So you have window.navigator, get the video element. You can see the dot dot XHR requests with It's very straightforward. Again, you can see how easy all of the stock Dart into some really So we have event source Like so if you have document So listen, and then So this will dynamically-- if has the CSS class this is going to fire, the class later on after or is removed its dynamic, whichever element has We also have automatic So if you want to and put it into the it's not possible for them and run it in there. Dart actually will that is potentially is removed when you So web components-- a lot about web components, So this is the classic example I mean, here is on the and then on the right, sense where you have messages, I mean, these new really allow you to make kind of the tags in your page, rather There's encapsulation so you have structure and can all be hidden inside And they're reusable. You can just import the library, for the custom go-- you've got your There's data bindings So polymer.dart kind of and the core level. So size and speed-- one aside from speed-- is large scale software Because the language it's much easier to going on in the you to hyperlink through and get to different It's quite nice. So by running save battery, because when it takes fewer CPU cycles. So on mobile tablets, et cetera, will lead to longer battery We all want that. So like I said at the to run Dart code, right? You can run Dart in the or you can compile And the dart2js compiler of compiling Dart So if we look at here where we have var Bob is and then we query the and then we set the to Bob's first name, and it looks like this. I mean, it's practically It's, a lot of the time, a between Dart code So you can also So at the top here, what dart2js will generate. And then you can pass OK, compile this, and it becomes illegible But this, just again, when compiling So we also something called tree shaking. And because Dart we can actually reason about and which pieces of So even if you import but you only call few has this phase called tree shake the tree and, all that you don't actually need. And you end up with this really is that main calls funcy and func1 so they're not included The Dart VM-- this is the Because Dart is such this actually allows to run faster than any We went over it a Like, there's real arrays, there's directs calls. There's no, like, walk find the first object that and invoke it. The VM will actually So if you have class person, If name is always a string, then And the VM will can actually-- when we saw kind of speed up just from So one thing that I actually was bringing SIMD and to the web for So this is the CPU die a So you can see that the kind of like where your integer general CPU computation occurs. And then, you can where your floating point, are being executed. And then we have this And this is where the SIMD So if you look at is devoted on every CPU-- and there's a ton of silicon devoted up until the Dart VM it was impossible to tap into. So you're looking at area of your CPU is You cannot access and there's huge performance to tap into this. Let me just show you a an idea of what's when it comes to three So what you're seeing here from Doom just kind of doing whatever. And this application to keep as many monsters and still run at 60 So there's just this That's why you see them kind We're trying to So right now, SIMD is off. But if I turn on SIMD, I mean, we were and now we're in the This is because the lets you tap into that on your CPU that's specially like image processing So I've been talking and we have some publicly So internally, I talked about how we have we track the of these benchmarks on And so, these are current The green numbers are-- OK, higher is better. You're running faster Green is dart2js. So we take the Dart through the dart2js we execute it inside Chrome. Yellow is handwritten So some human went out and in JavaScript that's The blue bar here when running under the Dart VM. So you can see can see that dart2js handwritten JavaScript. And the Dart VM just I mean, it's ridiculously fast. Richard's dart2js-- so dart2js does not do as well but it does a respectable job. And then again, you can see VM is compared to a JavaScript. And with the Tracer, which we're 2.3 times faster than So we also have an NBody, which This is another And this is performance numbers device-- your cell phone running into it. So we have a handwritten and then the light blue And we're 1.48 times faster. You can also port to take advantage of the And when you do that, than handwritten JavaScript. So Dart is an extremely of sane language that, can run at least twice as But we really haven't There's so much more don't have time to go Dart has great support So you could do to iterate over all the or find a class that responds There's server-side. So you all, I'm sure, are which runs V8. So Dart from the get go of running Dart code on both And this really makes code You have a bunch describe the kind of structures deals with. And you can share those and on the client side. The pub package manager, which is just like an We have the editor. There's built-in support for concurrency. So isolates are kind where you can farm off work and pass messages So I really want to encourage It's a really exciting language. I have a hard time after I've gotten used And we have a Dartisans And you can send poll Dart is entirely open source. The VM, the dart2js compiler, everything with We actually have active who are not Google employees. And I would who is interested to join these communities, start looking at the code, on Stack Overflow. We have a lot of people So Dart is a stable language, compiles to JavaScript. It's relatively evolved compared And we're really and we really want it Thanks. [APPLAUSE] JOHN MCCUTCHAN: I AUDIENCE: [INAUDIBLE]? AUDIENCE: So here's One is, when will the Dart VM be And the other one is, about Dart from other And how are you going JOHN MCCUTCHAN: Sure. We do not have a timeline VM will be included in Chrome. But if you download it comes with a custom version into it. That's what I was running So during your development, inside what we're Dartium. And in terms of collaboration we are an entirely and we openly-- if another to work with us and incorporate we would love it. There would be absolutely But again, I just want to to very clean, very So in some sense, if other browser vendors do not because Dart code executes very quickly, it's going to run everywhere. When you deploy a you're not just deploying You're also deploying the And if your browser happens you'll get something that If it doesn't, that runs as fast as JavaScript. Other questions? AUDIENCE: I know compiler source for me. In case that my to be protected from Does Google have for supporting encryption JOHN MCCUTCHAN: Not I mean, it's the web. Source code's out there. AUDIENCE: But not on VM, right? JOHN MCCUTCHAN: Sorry? AUDIENCE: Our source code So why does Google JOHN MCCUTCHAN: I mean, in some sense, and not directly I mean, maybe you want to code, and have all JavaScript But I don't know. It's certainly not something AUDIENCE: It is an official? It is official opinion? JOHN MCCUTCHAN: It's my opinion. AUDIENCE: All right, thank you. JOHN MCCUTCHAN: Other questions? All right, thanks everyone. [APPLAUSE]