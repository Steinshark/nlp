Welcome back to another episode I'm going to head I've got an exciting topic that I'm going to do today. And I can't wait to get started. Come on. [MUSIC PLAYING] I'm here in the cabana, coding the Collatz conjecture. The Collatz conjecture in mathematics related and the number sequence Take any number n. If the number is even, set it If the number is odd, set it So why is this conjecture, interesting, Let's start with a number. Let's say I'm going to So following this, 5 is odd. Multiply it by 3. 15 Add 1, I get 16. OK. Ah, that's even. Divide it by 2, I get 8. Cool. The scratching on the Now 8. Oh, that's even. Divide it by 2. [MUSIC PLAYING] We're going to get Once we get down going to go 4, 2, And the conjecture that I start with, I it's always going It might take a very long going to end up as 1. I should note that n is-- in this conjecture So not a negative You can see here on the conjecture stated You can see some examples here. For n starting at and you can graph the value So this idea was as a topic suggestion And there's some that I'll include in this to look at and see and visualizations of it. I'm going to attempt And what I am looking is inspired by the about the Collatz uses a particular One way to visualize And you can sort of the different-- with the path that it's So 25 becomes 76, You know, 18, if it's going to So if you start with 25, you're but you'll also reach 22 if So you can kind of visualize this tree all converging all the way down to one. But I'm here in the with the garden outside, I'm inspired by this video, which creates a conjecture that looks like this. It's a seaweed or a Why and how out of this do we get this The visualization is directly from that and the rules for it were A link to the Numberphile video and more about Edmund Harris's work will This is how the If I start with a number, the is going to be If the next number in I'm going to go If it's odd, I'm to the left or clockwise So let's say I start 10 is an even number, So I'm going to go to get to the next number, 5. And then 5 is an odd number, and then I add 1, which gives So now I have 16. I'm going to go And then 16, I divide by 2. I get 8. That's an even number. I'm going to go again, and so on and so forth. I'm going to attempt to program Java based creative One of the things I is there's a library allows you to render that you could blow and print as a nice poster. So maybe I'll make a nice, Coding Train poster. First thing I need going to do the number sequence. So let's just call be a function that will And one way we can is using the modulo operator. If n modulo 2, meaning the is 0, this is an even number. And then otherwise, OK. So what do I do? If it's even, I say, If it's odd, I'm going So now that I have let's just test it out. I'm going to use I'm going to bring the And I'm going to we start with the number 5, and 5, right? What should I get? I should get 16, right? 16. There it is, down OK, that's good. If I start with the Now let's think about putting Let's see how long it takes for This is like a weird scenario need to use a do while loop. [MIMICKING SCREAMING] [BELL RINGS] Here is a do while loop. I really think this might be that I've used a do while loop. Do. The statement I want is and I want to do this I think this is right. And then, let's just print n. So we should see-- we should just 1, perfect. And then here, what we and we should see 5, 16, 8, 4, 2, 1. Perfect. So now we can test the Let's say n equals 100. We got 1. N equals 1,000. We got to 1. N equals 835291. Oh, I need my book to try to start with We got to 1. Cool! The Collatz conjecture on my simple processing code. Lets, just out of curiosity, see That equals 0, and then function, steps goes up by 1. Now, rather than print out the the number of steps. 175 for that particular number. If I go back to I can test to see if my by picking-- let's just say-- that's less than 1 and that takes 986 steps. Don't want the commas, I'm going to run it. Uh oh, it's stuck. I think what might is there's a limit to the can store in an integer. The largest number in Java using 32 bits of memory, So I think I've gone So somewhere in the sequence. Even though I started with I went way above the range So I think a way fix this is by changing Long is a data type in Java that more memory than 32 bits. I believe it's 64 bits. And I'll correct that if So I need to change the and to accept a long. Let's run it again. 986, that's the number of steps. 986 steps. Great. I'm going to do this up to 10,000. So I can go back to using because I don't think Now it's time to try I'll use i as my number. I starts at 1, and I want to And I want to create a canvas. I'll just make it 600 by 600, So right now, I'm going in Setup, because I'm just going all at once. But, and maybe I'm going leave to love to see this pattern So that animating loop might be a wonderful-- to try. So just so we know let's put a print to make sure this loop and doesn't get stuck. Finished. So it actually did that Running through the full for every single number a computer can do Let's see what happens So I think an to do this would be used So the translate-- and the So in processing, the translate and will move the origin according to that x and y value. So that x value, 0 is translated to So let's say what I want to at the bottom, right here. The first thing would translate to width divided and then all the of the canvas, the window, So let's say, with each algorithm, I want to move up. So I'm going to say create a variable which equals let's just say decision. I want to translate by 0 would move up like this. But I want to move or slightly to the So I could use vector math and if I'm moving 60-- a distance of 60 pixels to I could use sine and cosine. And I've done this to like and the difference in the rotate function can do. The rotate function-- like moves the origin. It kind of shifts your The rotate function rotates. So in other words, if I were to and then still draw relative and then tilt it back So visually, the viewer to the left, the orientation of the drawing 0 by that same So in theory, what I I want to say if n, this and let's pick an angle. I don't know what angle was I'm going to pick 30 degrees Or that's-- but if this would be pi divided by 6. And I should also so let's call this that's pi divided by 6. So we're going to rotate by Otherwise, rotate by the angle For every number I'm going to-- I want to-- I'm about to move I want to check if So I want to rotate and then I want to But I need to draw something. So let's-- before I translate, and let's draw a line 0 to 0 comma negative length. And then I'm going to move This is very similar to what I challenge. So actually, I think I've got two things I've got this like outer loop. I think I want to comment out and I just want to by starting with So let's start with the number OK. This is something So now let's try doing And I think, though, of like figure out here, is that I want all of the start at the same place. So if I'm doing this translate and rotate, and when I'm going to be picking So one way to deal with call this function reset matrix, just back to the and then I can put that original N equals i. Uh, this is taking Whoa! [LAUGHS] And I got the I think that I've I think the idea is that that converges back to 1. So 1 is the starting point here. So while I'm starting I'm not starting with 100 with the Collatz conjecture. And I know that I earlier in the video, so Even though I got these kind I want to start with the end So how am I going to do that? I think I'm going to Oh, this is going to be fine. So here's how we're Here's how I'm going to do this. I'm going to create something A float list in processing-- and I'm going to is just a sequence of numbers. And I could just use a plain but the float list is nice, easily with floating and it's completely realizable. And I can iterate, I can do all sorts of things. So I want to create and I'm going to take all Let's just put it down here. Comment it. So now I'm going to and every single value sequence.append n. I think I should also Oh, you know what, This shouldn't be a float It's just numbers. I don't know what It's just integers, be integers in the Now I can visualize the list. I want to visualize from the end all the Sequence.reverse, and now iterate through the entire list. Int j equals 0. J is less than sequence.size. J plus plus. And then I can I'm going to have a problem Let's just say value I might want to rethink but sequence.get j, OK? And then now this is where So what I'm going right, I'm about to iterate and I want to start So length and angle, Then I need this, exactly the I'm going to rotate one on whether it's doing that according to value. Let's see what happens now. Ooh, I'm excited! Let me try this once again That seems right. So I'm just going to try of get the feeling of it. Let's try-- let's So I'm going to have that. Yeah, this is-- I like a very small amount. So we can see that's what's I also might want to think That could-- it's kind of going And maybe actually I'm that's not straight. But all that aside, I think what happens with all of the Drum roll please. [LAUGHS] Is my path just way too long? I took a little break. One camera died. One memory card filled up. I'm still sort of figuring I also took a moment to ping Train members and you want to join, and ask if and what I might be missing. And one-- and something is actually suggested in a about the Collatz conjecture. Any time I apply the I have an odd number, 3n to result in an even number. So what's the next step? Divide by 2. So I could actually, in the sort of speed up the It's not going to compute but it could speed of getting to 1 by just by just taking this down here. And by the way, I changed Hopefully this will-- I don't know why had I could just take this, n times I'm still going to Now, if I run this I can get something that's and, in a way more, closer to what So I think there's a bit Number one is let me let me give myself and move in a So I'm actually going to start and I'm always going to So translate by length to length comma 0. This means I'm always starting from here across. The other thing that I'll give myself much with by having the size And like I can I can move like 10 pixels per-- look at this. Interesting. The other thing about what's since everything converges a lot of repeating patterns. So I think this could have if I start to give that the repeating patterns branches out, it So let me just give What happens if I make that And maybe I should and just do something Think this is starting to look Obviously, mine is Maybe it's going further or I don't know what I'm missing but I'm pretty darn close. Just take a minute that this very formal, repetitious pattern into this feeling of of organic nature are right outside this window. What kind of beauty can you I would love to see. Let me show you one Let me have this so I can blow it up and if I wanted to. Let me show you how to do that. So I'm here on the on the processing website, of different ways to do it. This is actually what I want actually, I want to So let me do it this way, single So this is a nice case where but I also want to But I don't have an so this way makes it I just want to import the PDF library that is. Then I just need to right here at the Begin record collatz.pdf. I'm going to do all this drawing And then at the very end, That was really Hopefully this is going Might take a much, Didn't take that much longer. I can open it up. It's taking a while but what's nice about So you can see my machine is having taken a but I can blow this and it won't be pixelated. So make a version of this. Make a PDF vector I'm going to hang here in my office somewhere, or here in the cabana. Who knows? Thank you for watching this in the Cabana. I'm going to go [MUSIC PLAYING] Hey. Thanks so much for And I hope to see you next Bye. [MUSIC PLAYING]