CSS Animations are a great way They can seem a bit scary but they are actually quite easy to understand And that's exactly what this video is about. This is Coding2GO, and today you are going need to create amazing animations and Let's go. The animation property applies two styles. It is a shorthand for all First thing to ask yourself: do I even need the when you only need to animate the change from then a simple transition will suffice. It doesn't that change involves only one step (first this, But if your change contains more than one step, rather a sequence of multiple Also, when you have an ongoing, occurring animated in the background--then Before you assign an animation to an element, you First, we need to give our for example. It's completely Inside this keyframes rule, we define our animation sequence. Each Zero percent is the beginning of Every value between 0 and 100 is going We want to spin this element So, at 100 percent (meaning at the end), So we use transform: rotate() to We also change the border-radius to Now we need to assign this keyframe animation to animation-name: spin; We also need to define how long our animation Let's say it is 3 seconds long. Now when we save and refresh, our animation will play one time and Now let's make it more complex: the middle of the animation), we want using scale: 2; This will make the element grow it doesn't keep the scale of 2. It shrinks back the very end, we need to add scale: 2 So, when you are changing properties during during every step in the animation to keep that then the keyframes will only apply for I also want to wait with the rotating. First, the element should grow and then rotate. For that, I need to use transform: Also, border-radius 0. Now it grows first and then it spins. to be very specific about when to animate it will just assume the rest of the sequence By now we know how to define the Let's look at a few properties The first one was the animation-duration: So, if I set this to 0.5 very fast. [now set back to 3s] The next property in the animation Its initial value is "ease." at every animation step to make it smoother. We could also set this to "linear" to There is also ease-in, ease-out, and ease-in-out. If you are into video editing, you probably Simply explained, it determines the speed curve when slower. Using 'linear' will make it play with will make the animation smoother by slowing The next property is the animation-delay. Here, you can define how long the If we set this to 1 second, then it will The animation-iteration-count controls how many value is 1, which is why we need to refresh the But you can specify any number (for You can also set this to infinite to make is pretty cool for looping animations. Let's continue with the animation-direction start to end. But if you set this to "reverse," starts at the last frame, which is the circle, If you have multiple iterations, which will make it alternate So it will play forwards and then backward, When talking about the we should have an iteration count of Then, when the browser refreshes, our animation will play one time and I want the element to stop at the last frame, so that it stays a circle. For that, I can use This will stop the animation This way, the animation has a lasting effect on forwards, then the element will play its animation Now let's talk about the most the animation-play-state. This user interact with the animation, make Let's say we have an infinitely playing animation, and the animation-play-state is running. But now we can also add a and set the animation-play-state to paused. Then the animation will stop playing once we hover over it. Only when the mouse is not on Of course, you can also make it the other Now... the animation-play-state property combined with JavaScript. Then you to change the value of this property on click. All you have is a click event element.style.animationPlayState And there you go The user can easily pause and continue the And by the way, all of these properties that line of code by using the animation shorthand. Now all this theory would have been for which is why I have a little We want to create this loading animation you Y, and Z to rotate the element on all three axes. If you want, you can pause the video now and We need a simple div that we call loading. a slight border-radius. Using two Using absolute positioning, I can the screen, and to make sure it is above Now we apply our animation, It is called loading. is ease-in-out (to make it smooth). Now to the interesting part. Our keyframes animation is using transform First, everything is on 0. At 33% of the animation, we rotate At 67%, we keep that change and Then at 100%, we still keep both changes the And since a 180-degree rotation looks you cannot see the animation Alright. This was Coding2GO. And if you wanna learn more about web