So I remember the time when I joined a huge years ago. It was pretty exciting and I remember documentation it had like really thick binders. even find any information in this documentation processing application created these manuals then go around for comments among the various more than a decade since then, but even today in doing documentation that are not very searchable news is many software tools are making it easy to and fun manner. Hence, in today's video, I want creating documentation much easier in a fun and documentation is the ability to add information. Markdown for text and CSV and JSON for data. And open-source frameworks about these formats that At the heart of say, Markdown is images, bold texts, italics text, lists, or even information. Here I am using the Markdown preview And because Markdown can be eventually rendered we can start adding different types of information be added with the mermaid.js framework which uses machine can be very useful in getting an overview such as start or end a decision block to decide a to visually describe the entire design. Mermaid state, pie chart, or user journey. Next, maths and which is an open-source JavaScript display Here I use the syntax to render a simple physics and frequency. From here on, possibly any For graphs, I love using D3JS which uses data Once again, open standard formats. Let's use the that takes data from a local CSV file. And beautiful and dynamic visuals can be created with sequence diagrams. They are frequently used to the 3-way handshake in the TCP connection to draw another simple sequence diagram for and the temperature sensor. Now just for fun, it using the JS sequence diagram framework to sequence diagrams! The timing or signal diagram is Wavedrom is an open-source online digital used to generate them. Here I am rendering in the datasheet. The syntax is both readable and can be drawn as shown in this comprehensive Markdown documentation is almost done and we of contents. For this specific VS Code Markdown or Table of Contents command. And there you let's automatically generate an HTML web webpage file that we created as &quot;index.html&quot;, which can be Okay! So that looks pretty good to me. From just go ahead and print this page as a PDF which engineering documents even today. So now that diagrams equations, the next biggest challenge is What, when, where, and why? And these are some lifetime of a typical engineering project. Git, in our engineering documentation because almost or layout files can also be backed up as binary or Gitlab, Bit Bucket can now be used to store git push origin master and ensure that I To publish this repository as a web page, and then scroll down until we find the For my purpose, I need to choose the master index.html file will be rendered as a web page written down our information in Markdown and even published it on the Internet. And for a sake of a the HTML. In reality, I actually like more control And hence, I like to use some sort of a static web and this is powered by Jekyll to write the choices in terms of static site generators. And if which is a website that filters the various template, or even license. So no matter well for my purpose I'm using Jekyll, it doesn't the same. And I want to use my very very simple For example, any project site has common the KiCad schematic and layout PDF files, software materials with designators, links to datasheets, sections, etc. Each of these pages now corresponds &quot;software.md&quot;, or even &quot;bom.md&quot;. And you can Now notice that there are some common sections partials make this happen. So the folder which &quot;header.html&quot;, which describes the type of and microcontrollers used for this project this without me repeating the code that displays them. generators. So let's have a look at this file this CSV file with default scripts or even custom can be embedded directly into the web page So how does the final web page look like? Well, be. So now that we have learned how to add the the changes, here comes my favorite part: viewing HTML, CSS, and especially JavaScript. Now static. But it doesn't have to be. We can add some example, the InteractiveHTMLBom plugin for the parts on the PCB and the Bill of Materials. interactive BOM by clicking the plugin button can view this interactive Bill of Materials right the exact part on the PCB will become highlighted like Bill of Materials can also have interactivity Vue JS. Here I have added a simple sort key that enables us to kind of sort in ascending or a search box also helps me narrow down the exact be dynamic by adding a simple currency converter I started this video by saying how daunted I used it doesn't have to be. And in fact, I do see even within large organizations, small teams are and all kinds of software to make documentation I want to share an article and just point out For this, I want to refer to this fine article I love how he wrote some of the points and (1) Ditch PDFs in favor of browser-based viewing, formula for figures, and (3) Create multiple tools in the future? Are we going to see some figures? Are we going to have an easily searchable Change Orders that are backed by the Git version And I hope some of the tools that I've shown love to know what other tools you are using to I hope you found this video useful. And