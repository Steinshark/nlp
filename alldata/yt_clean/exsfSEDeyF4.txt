Adding a complex feature to an existing It often requires changing multiple source files. How do we add a feature without jeopardizing all Incremental coding is the way. In this video, I will teach you a coding technique We will never affect any existing in the end, we will still be able to enhance an This is the demo application which This page is displaying books, and feature is that each author here should We don't have that feature right now. each cell in this See Also section is just I also want this cell to be I also want each author to be a separate link maybe to be the link to the book's details. before we implement this feature. Every author being a link. have the books of that author. we have the details of that book. and the title is the link to the book's details. But how do we do of code in this application already. Well, that is where we start doing things This will be a coding tutorial. code I change and you will get the grasp of this letting you develop even the most complex features of introducing a bug to an existing application. This is the formatter which is turning a String doesn't have structure. the author and what is the ID of that author, So, the first step, the first increment, is Now, that step alone is very complicated operation precisely - substituting this string So, watch that video. primitive types from the application. obsession from the domain model. with a primitive type, a string, and that is That is why we don't have that I will repeat the exercise from that video to put stress on incremental coding, that any other feature in the application. everything in one go. things that way in this particular domain I want to move in small So, the first step is to augment the string That will give us a place But forget the domain logic. this class behave like a string, so to not disturb I will make a string assignable to the Citation. assignable to the string. to work with strings instead of this Citation A very small step, do you see? this model do more than what a string can do. so that every segment can potentially become The Citation would consist of many segments. The caller could instantiate an empty or append the entire Citation, why not? can be used as the string and it is being used unfortunately, but it can also be used in a richer We are at the brink of introducing ability into this application. illusion of working with strings. but retain their public interface, so that Nothing has been changed in the Nobody will ever see that we But we did. There are different kinds of segments. One will be an author, the other will be a book between of them, for example, to separate them. which is actually not a change. there will be no just segments. what kind of a segment it is. What used to be just a segment will But, what is the consequence of this change? Nobody, not even the immediate caller of this Nobody can see the change, but the change added an ability to segment the segments, A new ability which we are now I'm defining other kinds of segments. The author has a name, but also so that we can construct an anchor tag in the And the last one, book title, also attaching the you need to render it in the UI you can also make Those are the features we Now we are creating an ability By the way, this system of types is C# doesn't support discriminated unions you can reap all the benefits from discriminated You can watch the video on I have made a video on this exact example, the problem as the modeling problem and using You can watch that video and enjoy Now comes the pinnacle of this demonstration. feature because all the abilities Before that, I must ask you to like this video. it already, so please press And also, you may be wondering There is a lot of source code here in the The source code is available to sponsors follow the link to my Patreon page the sponsor of this channel, help me maintain the initial and the final source code from other videos on my channel. I'm really grateful to all people who have Let's implement the missing feature now. that are supporting formatting books. It will also produce a Citation now. implementation of that interface. It will have to wrap that string Watch this! carry the ID of the author that was used to format We have the information, we can we get the object returned from this formatter. it will also return the Citation. implementation, academic format. But with Citations all the Every single author produced by this formatter Now this is much better than By this point, I have completed or and this implicit conversion from string I will delete it and if any piece be indication that I have missed something. This stage of development is over and the same as it did before. in the external view of the application. the users use it, nobody will be able to tell Oh, but it is different, it's So, we are ready for the very last step: removing really display what we have prepared here. we are rendering citations in the UI. This is one occurrence. occurrences in the list of books. other is where we are showing the book's title. ToString, or the framework But now we want to render the Citation. The UI will need access to those segments, of a sequence of segments. Just delegate to the immutable And then comes the most beautiful Now, since Citation is a complex class, I Why not? and render each one in the best way we can. as a link to the details of that book. strongly typed BookTitleSegment variable, and then from that reference, it is the same object all of that link which will be the title. of HTML which is only possible Otherwise, if it is the author, I'm repeating The author segment will be displayed differently. There is the CSS file which is styling Otherwise, just render the but there is the style of course for plain text. partial view and to render the citation in calling its ToString, that was really primitive. I don't care how this will be done, I'm And render the book's title as a Citation. This is that See Also table Every part of the book recommendation will now The final touch, remove the ToString The time has come to show you what The new feature suddenly becomes visible. feature for quite some time. is changing until the very last moment when everything fits into place. Out of nowhere, the application The entire large feature becomes operational. I can follow the link to the The list of recommended books This is the link to the author. Everything works as expected. complicated feature added to the application. safe, and didn't disturb anything else. The first step is to enhance the and the second step is to modify all the users And if you do that carefully, you you introduce, or complete a very complicated I hope you liked this demonstration. Become the sponsor and download the Thank you for staying till the end