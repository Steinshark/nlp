Hi. I'm Mark Brown and I am making my own video And so to start, I need to learn how to make Which is quite a big endeavour and quite a So believe me when I say that this whole game before it ever really began. Let me tell you what happened. Music First though, let's back up a step. Because the first thing I had to do was to Now, a game engine (at least in this instance) a game by, essentially, taking care of the Things like getting graphics to render onto doing physics calculations, and more. Plus, they have loads of really handy tools that you'd want to do in a game: like animation Now there's loads of game engines out there. I mean the most popular ones are Unity, Unreal Plus, there are game engines for specific Adventure Game Studio. There are even game engines for specific ecosystems on PlayStation 4, and Roblox in... the Roblox-iverse. Each one has pros and cons, lovers and haters. But ultimately I had to just pick one. And so, in the end, I decided to go with... Unity. There's loads of reasons why I chose Unity. It seems to strike a pretty good balance between It's good for both 2D and 3D, which is good in 2D, I might want to do 3D down the line Plus, Unity supports pretty much every platform game and put it on PlayStation 5 that is technically But, really, the most compelling argument Unity is the game engine behind Hollow Knight Cities: Skylines and Hearthstone. It is the most popular game engine on Steam GMTK Game Jam more people used Unity to make And that popularity is really important, for help me learn it. More tutorials, more resources, more assets, I get stuck. For example, there's loads of people in the Plus, I know very seasoned Unity users like and Jam, who can certainly help me get out That was really bad. Okay, and so that's my decision. Sorry Godot bros, it's all about Unity. That's step one done: pick a game engine. Now, step two: learn how to use it. That's the hard bit! And so as I said, there's lots of tutorials And that is exactly what I tried to use when I went onto YouTube, I typed in 'Unity tutorials', could teach me how to use the software. And so they showed me how to make a game, Every time they clicked a box I clicked that And every time they typed out a line of code And before long I had a working game on my But then, many weeks later, I decided to open I had learned. And the answer was... nothing. Like, literally nothing. Like, everything they had said had gone in Like, I couldn't even make a character appear It was terrible! And ultimately it was my own fault: you remember talked about how in strategy games they have there', and they're not effective at teaching Well I had done exactly that for Unity! I had played myself. I had done myself dirty. Agh! But, to be honest, this was really demoralising. Like I truly felt like an idiot. Like I had wasted weeks of my life and I didn't at all. Like, if I can't even watch a tutorial and cut out to do this. Maybe I should stick to what I know. And I mean this was like months ago and I doing right now and at the time I thought Like, maybe I should just never announce it It was... it sucked. It was horrible. But then I thought about Adobe Premiere. This is the software that I use to make all complex piece of software and yet I know how So how did I learn Premiere? Well, when I was working at Pocket Gamer we And so a colleague taught me the basics of knowledge you need to make a video. How to import clips, put them on the timeline, them to YouTube. Then I had to make dozens of these video reviews And so I had to repeat those basic steps over way into my brain. Then I made Game Maker's Toolkit. And at that point I wanted to do more interesting I wanted to do masks and colour and text and fun stuff. And, really, that should have been very difficult But I had two things on my side: one is that As long as I'm always trying at least one build up a repertoire of effects and knowledge. And, two: because I had done those video reviews I was comfortable with the software and so I could experiment and play around. Or, at the very least, I knew what I should I needed. And so ultimately I ended up following a pretty Premiere: step 1, learn the absolute basics Step 2, familiarise myself with those basics And then 3, slowly, over time, build a repertoire and build my knowledge base of the software. And this has obviously worked pretty well I know how to use Premiere now. I can make pretty much whatever I want in And I think I understand why this worked. You see, making videos is often about coming cool if I had a VHS-style pause effect right And then I need to figure out how to realise Like how am I gonna make it so that the frame And then what effects should I use to really And then how do I get that wibbly line to And if you think about it, there is an infinite impossible to learn how to solve all of them But what I can learn is familiarity with my up I have both the confidence and comfort and figure things out. And I have the context for how the software is and I know what terms to use when Googling Or I know how to ask someone for help. And boy if that doesn't sound a lot like game You have an infinite number of ideas that to learn all of them. So all you can really do is build familiarity when those problems arise. So perhaps I can take my three-step structure it to Unity. Sounds like a plan. Let's give it a go. Okay, so luckily I'm not starting completely I am familiar with the fundamentals of programming, So I know about if statements and for loops And I have dabbled in Game Maker, so I kind But I do need to understand how Unity itself So that starts with just the real basics of, on, and what are the keyboard shortcuts, and I also kind of need to understand conceptually Like, for example, Unity is all about GameObjects. Everything in Unity is a GameObject. And until you fundamentally understand what And if you're curious, a GameObject is basically rotation, and scale, which you can then fill That includes a sprite renderer to give it a collider to make it hit into things, and programming code for it. Once I had that in my brain I put together to know in order to make games: things like how do I make one How do I spawn in new GameObjects and then How do I make something happen when two GameObjects How do I do UI and sound effects and animation? How do I deal with levels and game over and So then I used tutorials and Google and talking and figure out the basics of Unity. And, sure, there are probably plenty of Unity is not a very comprehensive list. That is not going to get you very far. And there are probably, no - definitely, better just learned how to do. And, yeah, that's true. But it's enough to get me started. I can make stuff appear on the screen, make things in, delete them again - these are things they are these kind of genre agnostic things make going forward. It is the baseline, bedrock that I can use And so with that I'm on to step two: to really really familiarise myself with them, by repeating And I found in game development the best way What I mean by that is by copying really simple web games, mini games... anything with really By copying them I can prove to myself that And I think this is a really good training art or design or rules or anything like. That that's already done for you. All you need to care about is code. And you get this really clear objective: can by myself? And so the first game I did this with was waster about a big fat bird fighting with And, yes, sure, there are tutorials out there There's about 10,000 of them. But I didn't want to use them. I wanted to do it by myself. So I started by playing the game and figuring plan for how I was going to recreate it. It was really important to make the steps make a bird appear on screen. Step two, make it drop. Step three, make it flap. Just one thing after another, nothing too And then I just went about making it. I made a GameObject and gave it a sprite renderer the flapping, a rigidbody so it falls, a box script so that whenever I hit the space bar the rigidbody and makes the bird flap into Nice! I then made the pipes and turned them into allows me to spawn in an infinite number of And it was here that I discovered a game development You see, the intuitive thing to do would be but that's quite hard to do. What's a lot easier is to make the bird just the screen and then delete when they go off Trust me, I felt like a genius when I figured I also had to sort out collisions so when but if the bird goes between two pipes that And so that involved sending information from lesson I had learned was being put to use. And then I finished it off with some sound by in a parallax effect. And this felt... amazing! I know it looks dreadfully unimpressive: like, game ever made, I hope you're proud of yourself. But I am! I am, I was, I am, I'm proud of myself. I took this game that exists, I broke it down, I had proven that I knew how Unity worked It felt great and it felt a lot better than tried to learn Unity. And in fact it was such a good feeling that Pop the Lock which is about a line that rotates circles... again it's pretty simple, but it's The process was pretty much the same: play get a sort of quasi-design document. Break it down into the smallest steps possible, and build it step by step. This one did cause some pretty big problems in Unity kind of use this thing called 'quaternions' axis. And my brain just kind of leaks out my ears quite difficult. But I did discover this cool built-in function you to rotate one GameObject around a point, And now that's in my memory banks for the I also figured out this cool thing about parent of problems too. And so then, again, I had this game working at the time! I i can't really explain it, but it was just I had this goal: make this game. And I did it. And the most important thing was that I was was also building my familiarity with the The things that I had to solve when I was I started but I can now because I kind of I know what to type into Google. And so at this point I feel pretty good about Like, I'm definitely not an expert... but And I think right now I should move on to and start experimenting. And, sure, I'm gonna run into problems. There are things I don't know how to do. There are problems I will face. But I've got that confidence and that comfort I understand Unity on a conceptual level. I understand the basic things I need to know into a problem I can probably solve it, maybe. I can at least play around and at the very Or I know how to construct a question for Now I can't guarantee that this style of learning Everyone learns in a different way, and maybe to you in a Swedish accent. But for me, someone who gets very easily bored I possibly have ADHD, I don't know. Someone who needs to experiment and play around to go into their brain, this approach worked Learn the basics, familiarise myself with over time. And I guess we'll really see if this works I am going to start making my own game and I do hope that you will join me. For now though, I know that this isn't a tutorial boy I would really like it if you could teach me know if that would be useful in the comments to squeeze in a quick tutorial video to go For now though, thank you so much for watching. And I'll see you next time. This light is gonna run out of battery very But... you've done me proud. *Click*