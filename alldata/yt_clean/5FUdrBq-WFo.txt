Hello everyone. Good morning, good I'm sure people must be from around the world. My name is Akanksha, introductory class on Selenium. I'm an instructor with Edureka. All must be aware of Edureka. Edureka is a platform from where you can gain knowledge live online. So, today, I'm gonna cover Selenium. And if I go to the next slide, these are the topics that So, I'll quickly go through the slide. Challenges with manual testing. How automation testing Selenium as an automation testing tool. Advantages and disadvantages of Selenium. Selenium versus other tools. Selenium suite of tools, as in all the components of Selenium, IDE, RC, Grid, and WebDriver. Hands-on, so we'll be having a use case wherein I'll quickly using Selenium WebDriver. We'll set up environment for the same, and then we'll have some example for that for any web application. Probably, we'll take Alright, so, you all must because when it comes related to automation testing, I've seen that mostly people or those who've had automation but they've used other they usually take the scores. I'll tell you in brief about myself. I've been a developer for five years in the beginning of my career. And then I switched to automation testing because I've got a chance once to work on automation scripts, and So, that was the time I decided that I'll be completely So, why is the slide, you must be aware of manual testing? Because, see, the base is very important. You have to have your manual because automation is, again, automating your manual testing. So, the concepts will remain there. They'll remain intact. We'll be just automating them. Okay, so that's a funny slide, and you can see that we've got this registration form with the various sign up fields like username, password, name, address, country, email, sex, language, and then we have to submit it. And there's this poor guy who's working on this web application. He's probably loading these and he's all sweat. So, if you see here, testing loading all transactions, downloading those transactions, creating pass/fail validating the form, taking screenshots for each validation. Poor guy. I'm assuming let's say he has or maybe thousand transactions. Can you just imagine his life? Okay, so, this is what he's thinking. It's boring, it's time consuming, it's tedious, and there's a tendency to make mistakes and errors, because to err is human. And if somebody has to do hundred plus or thousand plus transactions, believe me, even I will Anybody will tend to insert a mistake. So, now let's see how automation testing will take over manual testing. Automation testing beats manual testing. And this guy is all smile now. So, if you look here, it says automated execution So, that's a complete hub of systems. Auto generation of results file. So, we are maintaining all And then auto generation of reports. So, we've got these So, that's the beauty of automation. See, automation is a whole If you talk about which or how to automate this application. So, if this question comes So, that'll be my cross-question whether I can automate What kind of application is it? So, the first point is to understand whether we can automate If it is fine to automate then comes this slide. Okay. He has automated all the test He's created an automated test suite, but we've got multiple systems And then we are getting That's what we can do. We can automate the and then we can maintain the result files at a particular location, and then we can also also auto So, when we'll go through you'll get to know how to do this. When we'll reach framework part, you'll come to know how we can of auto generating the result files and also creating the reports. Automation testing beats manual testing. So, these are the points how Fast execution. More accurate. Lesser investment in human resources. Supports regression testing. Frequent executions. Supports light out execution. So, let's understand all Faster execution. Now, we need to understand So, you all will think that, and we'll just run the script. And that's absolutely correct, but we also need to understand that writing that script takes time. Only the execution of So, no doubt, the effort put in initially into creating the automation But looking at the longterm effect of creating that automation test suite is so beautiful that we that has been put in initially. Faster execution. So, we've got the steps which are already written inside the script. We just need to run the script, That's the reason, fast execution. More accurate, why is it more accurate? Because whatever we they're predefined. As I already know that and what do I want to achieve, what should the result be, what is the expected result. So, when I create my test script, I will also test my test and then I'll test the test which I want to achieve. So, that's already been that of course we can believe on the result it's going to give us. Whereas with manual, let's say I have to hundred If you go back to the same slide, I have to do the same transaction Now, for 99 times, I but I got so bored. I got so bored doing the But here, I have to just run the script, and those steps need not It's a script and I just have to run it, those prerecorded steps. So, that's more accurate Lesser investment in human resource. Now, if you talk about manual testing and if you talk about okay, I've been into corporate as well. So, if we talk about strength would be minimum and maximum can mean anything, depending on the project size. Now, if I've got minimum I'll have to bring them or I'll have to maybe hire them. So, I'll be nesting Whereas with automation, I to create that automation test suite. Because when it comes we don't need any special expertise. That person just needs to know a few steps to run that automation test suite. So, obviously, there's less so we are saving on money as well. Time, we already know, So, we're saving on time and Supports regression testing. Now, let's understand what and then we'll see how it Now, regression testing, what is regression testing, they come up with different answers, as in the crux is the same, almost same. But yes, of course, different answers. So, regression testing or let's it's a test of cases which And those test cases were that these test cases will test the major functionality We want to check the major flow or major functions or major So, that's how that regression having major test cases. Now, when it comes to regression testing, it means whenever there's a bug fix or let's say whenever I have to run that set of test cases again because that is testing the major functionality or major And with any bug fix or I don't want that So, these test cases And whenever I'll get a Now, one more point to add, because I don't want you When it comes to enhancement, enhancement is a new feature. So, if any new feature is getting so don't think that you to your regression test suite. You can add test cases to and you can remove test cases from regression test suite. The point is if you'll not a fix actually, but certain test cases that is testing the major functionality or the major call flow, you So, now let's say I'm and there's a sprint that is running. So, I'm working in agile mode, okay? And it's a 15-day sprint. And those who don't understand agile, let's say I've got some work, and I have to finish that work in 15 days, and that work is to do the testing. And the developers or they'll fix the bugs. So, now, if I've got a bug fixed today, I have to insert that I'll get a new build, and then I'll have to run this on that new build. Now let's say, during that 15 days, I've got bug fixes for 10 times. That means that I have to run 10 times manually, and this regression test suite can have any number of depending on your application. It could be hundred, 150, 200, 250, 300, any number of test cases. Now, if I have to do that again, the same thing happens. You'll tend to get more bored. You'll tend to insert mistakes, or you'll tend to miss a few steps. What if I automate this entire thing? Because that's something I'm with every bug fix. So, why not automate it? But mind you guys, when the first thing that you whether it is feasible to Only when it is feasible to then comes the point of automating it. Okay? So, don't misunderstand this that you can automate anything if that has repeated task to do. No, that cannot be done. We first need to come down to this point of whether we can automate it or not. Alright? Frequent execution. Again, these two points are interrelated. If I have to run a test suite which is going to take a few seconds or maybe just a few minutes to complete the entire test suite, obviously, even if I'm getting build for let's say virtually any I can run this automation test suite because that's gonna or maybe a few minutes. So, frequent execution of Supports lights out execution. Now, this terminology is technical, which means that even if in front of this testing happening, it will happen anyway. With manual testing, you But with automation, you just So, even if you're not there, maybe you're attending or you're running some which is a different thing altogether, or maybe you're working So, this is the power of automation. You don't have to be manually You're saving on time, So, so many things you can achieve. Let's go to the next slide now. Selenium as an automation testing tool. Now, the number of tools that are being used in the market, Selenium is taking over So, there are certain features or certain plus points, which is making it dominant Selenium is a suite of software tools to automate web browsers. It is open source and mainly and automation testing. It's a suite of software tools Now, if you say Selenium is basically, we are talking So, you must have already heard that Selenium has got Selenium web driver. It has got Selenium IDE. It has got Selenium Grid, and it has got Selenium Remote Control. It had actually, but it's But still, it had. Now, there's so many tools in it. We've got these four components web browsers or web applications. It's open source. The biggest reason why people is this point. It is free of cost. It's open source. Now, even if I have to I don't need any license to buy it. For QTP, you need a license. With Selenium, you don't You can download Selenium and start practicing, start working with e-commerce website, so any website that's available on web, whether you are in or any part of the world. You can test the web So, that's the biggest reason why people are preferring It is open source and mainly used for function testing So, I'm sure you all must be So, if you have to do, obviously, this functional Okay. So, writing functional basically means that you can use Selenium to automate functional Supports different PL. PL means programming language. I'm now talking about other which again are the dominant over other tools. It supports Java, Python, JavaScript, and I think a few Supports different OS. So, whether you talk about Linux, whether you talk about whether you talk about Mac, whether you talk about iOS, whether you talk about Android, whether you talk about Ubuntu, all major operating systems Supports different browsers. Now, there are just five mentioned here, but all majors browsers that Selenium has given So, here we've got Chrome, Safari, Opera. Now, you have other browsers as well. Selenium is providing Now, just imagine, even okay, which has got Ubuntu. I'll give you an example. Now, generally, people don't use Ubuntu for their personal system But let's say you've and that's what you have. You can carry it to your home but you have to practice Selenium at home. Leave about office, but you have to practice Selenium at home. Selenium is giving support You can run Selenium on Ubuntu as well. You've got Linux on your system. Selenium is giving it support and let's talk about the Now, C. I understand that manual testers don't have any programming which is fine, guys, Now, if you have to write, if you've chosen automation obviously, you must have that you need to learn You've got so many options. You can learn Java. You can learn Python, C#, anything, and you can work Okay. Alright. So, let's say, okay, we've got some audience as well at the backend, and they wanna understand the difference between functional testing Now, I think this line this way first of all, functional testing and because you can automate anything. Anything as in you can and regression testing. Functional testing and automation testing, you can automate your Now, let's talk about functional testing, because I understand you must be knowing what automation testing is. Let's talk about functional testing. Now, regression testing, you know how we do regression testing. Functional testing is on the basis of components or call flow. Your application could be of any type. It need not be an e-commerce necessarily. It can be any kind of web application, and there'll be some functions, there'll be some call flows. So, functional testing will be basically test those call flows. Let's say you are signing up, you're signing up on a web application. So, the first thing that'll is the signup form. Now, you'll fill the signup That record will get stored in the database of that web application. Okay. And then maybe you'll get a prompt that your credentials or your details have been saved successfully. So, that's a flow, okay? Filling the form, your details and something being returned. So, I want to test that entire flow. So, I can do that in functional testing. Okay. Now, when it comes to automation testing, you can automate functional testing and you can automate your Automation testing is scripts to run some test cases. Now, for this automation testing, you can have individuals But when it comes to real time, you actually need to create Okay. And how do you clear the test suite? By having frameworks into your project, or creating frameworks. So, we'll come to that Let's go to the next slide. And I hope you've understood the features that makes Selenium one of the best tools for automation testing. Advantages and disadvantages. So, we are also mentioning Let's understand those as well. We'll talk about disadvantages first, and then we'll talk about advantages. Supports only web applications. Now, it doesn't support Okay. It supports web applications. And it doesn't even support So, that's there. Selenium only supports Only user communities available. Now, people say that's a big drawback. Because if you talk about QTP and if you talk about major tools that are being used in the market today for automation, they've got a dedicated support. Let's say for QTP, HP is giving a dedicated support for QTP, but here we don't have wherein we can put in our queries, or, you know, we can get a result or we can get an answer. We've got thousands of blogs. People have been working And believe me, they've that they're writing their own blogs. They're creating their own So, that's there. You will find knowledge. I mean, you'll find something on the web, but there's no dedicated Now, seleniumhq.org is one place where you can believe on the documentation because that's directly coming from the developers of Selenium. So, you can trust that, but that's just a documentation. You won't find any thing in detail or you won't find programming there. Difficult to set up and use. I don't find it difficult to but, okay, let's say it's a disadvantage. I don't find it as a disadvantage, but let's say it's a disadvantage because if you're working with a you need some development environment. Selenium doesn't provide which means IDE, integrated So, you would need to use some other IDE, let's say Eclipse. So, if you want to write you need to do some set up, which you'll have to do for Okay, so that's there, You'll have to provide things wherein you can write your scripts. So, difficult to set up and use. Why use, because, again, I believe that's the programming language thing. You need to have prior so be it Java, Python, Perl, You'll need to have knowledge No reporting facility. Now, I consider this as a disadvantage, because in WebDriver which is basically used by all the companies, we don't have any reporting facility here. You even need to include in your framework by automating this, or you'll have to use third So, you'll integrate TestNG along with Selenium an HTML format probably. Okay. So, we've got a question Alright, let me just read the question. So, this is from our audience. So, it says, &quot;When you &quot;only for web testing and &quot;how can it support Android So, I don't know why you've but when I'm saying mobile applications. So, you all know that I'm not saying that you cannot open any application on mobile Okay? What I'm saying is you cannot use Selenium for mobile app testing. Of course, you've got a browser. You can open Chrome on On that, you can do the testing. That, I'm not denying. But if I have downloaded, let's say I've got some application. Let's say I have downloaded Mantra, anything as a mobile application that you cannot use, that you cannot test. We've got other tools for doing that kind of testing. Okay, alright. Limited support for image-based testing. Now you can take a screenshot but you cannot compare two images. Let's say for any kind of verification, you want to compare two That is not there in Selenium. You of course can take screenshots, but you cannot compare two images. So, these are the disadvantages. There are others as well, We can talk about them, while working through the entire course. Okay. These are the advantages, Open source software, the biggest, biggest reason I also learn Selenium on my own. How did I do it? I downloaded Selenium jars and And they were so interesting. I started practicing for hours, because I could do that So, that's the biggest reason people are preferring Selenium. It's free of cost. You can download Selenium import them in your project, and start working with them. Supports multiple programming languages. So, we've already seen that going. You talk about Java. You talk about Ruby, Python. You talk about Perl, PHP, C#. I hope I'm not missing anything, any programming language. You talk about major programming language and we've got support Next one, supports almost So, as I've already told you, whether you've got Ubuntu, whether you've got any version of Windows, whether you are using Mac, whether you are using Linux, you've got a support for it. Support multiple browsers. So, let's say you prefer Okay, that's your choice. It's my choice as well. So, Selenium gives support for it. Then somebody has a You can work with it. You can work with Selenium on Firefox. Somebody has got a Mac system. Okay. You can work on Safari as well. Now, we've got HtmlUnit. I'm not sure if you've That's a headless browser which doesn't have any GUI, It's a headless browser. We call it headless browser, HtmlUnit. Okay. Now, Selenium supports So, we've got support for available in the market. Supports parallel test execution. Now, that's a whole concept in itself. I'm not gonna take it in detail, but I'll just let you understand what parallel test execution is. Now, this parallel test execution can also include the term So, parallel testing means you're running the same test case parallelly on different browsers. That's cross browser testing, and you can call it parallel also because you're running You can run different test cases parallelly on different Listen to me carefully, because parallel can be but it depends on you whether you want to on different browser, or whether you want to just to speed up on different instances of the same browser. So, that's parallel testing, and we can achieve parallel along with Selenium WebDriver. We can achieve parallel So, when I'll come to Grid portion I'll explain how beautiful it is when it comes to testing on different kinds of systems. When I said different kinds of system, it means having different different browsers. So, that's another feature. Provide support for framework, TestNG, JUnit and NUnit. So, these are, again, testing frameworks. So, when TestNG combined it will take over the We don't Have any reporting facility. With TestNG, I can get Now, parallel execution, if I want to run my test cases parallelly, I can take help of TestNG. JUnit is, again, your Java Okay, that's basically for unit testing purpose. And NUnit is, again, this but it's used for C, for So, these two are basically used by developers for unit testing purpose. TestNG which is called that's an advanced version with added features and functionalities. So, when we'll come to TestNG, we'll take this in detail. Let's go to the next slide now. Selenium versus other tools. So, here we'll be discussing QTP, IBM RFT, and Selenium, and we'll compare all of them on the basis of a few features. License, required for QTP and IBM's RFT. Selenium is open source. So, these two points, license and cost, they're interrelated, because the major cost See, all three of them Okay. So, when it comes to when it comes to using human resources, it's one and the same thing But when it comes to licensing, costing in terms of license, for both of them we need, but for Selenium it's free of cost. So, that's the reason cost because it is open source. Customer support, we've For QTP and RFT, we've got and for RFT, we've got But Selenium is an open source community. We don't have any dedicated support. Hardware resource consumption That's high here. Now, I haven't used QTP and RFT, so I really can't comment on this part that how hardware resource Okay. Selenium has always been my choice. I've always loved to work with Selenium. It's low here because all you need is your personal system as far as your hardware is concerned. Okay. And you need to have an IDE, that's it, and your programming language of course and you can start writing your scripts, download your jars, and So, we don't need much. We just need one setup, that's your personal system, Coding experience. It's not much for QTP. For RFT, it is required. And for Selenium, it It should be very good along of integrating the framework. Integrating is the second thing. For even writing the scripts, you need to have programming So, it's my advice that if you think that you want to Selenium, automation as your career start working on your programming language concepts parallelly. That's very important. Environment support. We can run QTP only on Windows but look at this. Windows, any version Linux, Solaris, and it says if browser and JVM or JavaScript support exists. Now, that's there. Obviously, we should for these operating systems. There are just three mentioned here. You can have Mac, you can have Ubuntu. Okay. All the major operating systems Language support. QTP, for this, we need For RFT, we need Java and C# knowledge. But if you want to write if you have knowledge in any you can work with it. The features are so good that obviously anybody would love to work with it. This is not a drawback, It could be in a few scenarios and in case of major bugs, okay, but I haven't felt that I haven't come across any major bug here. But even if there's an believe me, you'll get the answers. Let's say you stuck some there. You just Google it, and you'll So, it could be a drawback, And these points, obviously, Let's go to the next slide. Selenium suite of tools. We've got four components IDE, RC, WebDriver and Grid. And before I go ahead with this, let me just mention that From Selenium 3 onwards, which is the latest version of Selenium, so there was a lifecycle. Okay, we had 1, Selenium 1. We had Selenium 2, and And Selenium 3, RC has been deprecated and has been moved to a legacy package. Okay. IDE, RC, WebDriver, and Grid. So, version one had IDE, RC, and Grid. There was no WebDriver in Selenium 1. Version two had IDE, Version three, IDE, RC, but then you can consider because it's been deprecated now. We've mentioned this here for the reason that there might be who are still using RC, but that's moved to a legacy package now. Alright. I've never used RC. I've been using Selenium but then I've never used RC. So, it's been years. People gave up on RC So, I'll come to that when between RC and WebDriver. Let's go to the next slide. Okay, so that's about IDE. Selenium IDE is a Firefox plugin which is used to create IDE is integrated development environment. And if you read this line which comes only for Firefox, which is used to create So, you can create and I'll just quickly give Let's go through the slide now. It records and plays back the sorry, which the user Record and play. We also call it a record and play tool. Why, because let's say and you're working on any web application. Whatever you're doing it gets recorded as the So, that's called recording. Now, you can playback these steps again. So, we've got these two buttons. If you can see here, with a single hash, and So, that's for a single test case and that's for test suite, okay. we can run these steps, So, I'll just demonstrate Using IDE, you can export in different languages. Now, that's a good feature in IDE. I don't prefer to use IDE. I'll tell you about that, But yes, this is a good feature. Let's say for syntaxing or You want to understand how should I write a code for executing a Execute the same test record these steps, okay, and then we've got an export feature here. Using which, you can export these steps in a programming language format. So, you'll get the entire script in that particular So, no. So, we've got a question. Can't we use Selenium IDE in Chrome? No, you can't use. That's a Firefox plugin. It comes only as a plugin for Firefox and not any other browser. Alright? Okay. So, let me quickly check what and then I'll give you a demonstration. So, these are the features. Before I come to the features part, now let's quickly see what IDE is. So, I'll just open up my Firefox now. Now, first of all, I'll tell Don't go here and go to Please don't do that. What I want you to do is just write down or maybe you can directly Okay. That's what... This is the link which you which you can trust for documentation. Go to this one, because all the documentation here, it's coming directly from So, it's trustworthy. Now, go to Download here, and you might just have to Okay, it's right here. Now, can you see that Selenium IDE? Download latest release version So, you're supposed to and not through the menu here. Click here. It says Add to Firefox. I already have it, so I'm not If you want to get Selenium just click on this button. It might ask you to restart Firefox. Restart, and you'll get Can you see here? That's Selenium IDE. Now, what I'm going to do A plugin window will get opened up. So, that's exactly what we This is another window. It's a plugin for Firefox, okay. You have this record button, which is already enabled. If you can read it, Now Recording, That means whatever you'll this tool or this plugin is going to record it in steps, and then these are the So, what I'm going to Okay, I'll just minimize it. We'll do something on Firefox, and let's see what gets recorded here. So, let's say I'm gonna open Amazon okay. Now I'm opening Amazon, and then let's say I'm I've got Today's Deals here, and let's say I want to click on Books. So, I've selected Books here. Okay. And I've got these books. Now, let's open up what Can you see? They've got a few commands here. These are called Selenese commands, because IDE is written in I don't remember the developer's name. He's a Japanese person, There's not one person who's created the entire Selenium Suite, okay? There are different people involved, and we'll get to know about them. So, this one, IDE was done I don't remember his name now. So, these are Selenese commands. Open, click, clickAndWait, and click. Okay, so this URL. There's this URL here. And when you click on these commands, you get the reference. You can read the reference I'll just maximize it for you all. Okay. So, if you click on any of the commands, you'll get to know what This open URL, it says argument is URL, the URL to open may be Opens up a URL in the test frame. This accepts both and the entire detail about it. Now, let's say I want to So, the argument is locator Clicks on the link button, So, that can be anything This basically performs a click. So, it can be a link also. It can be a button also. It can be a radio button. It can be a checkbox, anything. ClickAndWait. Clicks on a link button If the click action Read this carefully. If the click action call waitForPageToLoad. So, that's been done internally, okay. If it knows that this click which is opening another page, it is going to wait for Alright, these are Selenese commands. Now, let's say I want to How do I do that? I can click on this, play current test case. And you can just stop it here. So, I've stopped it, which means these are my recorded steps. And if I want to play these and please pay attention on the browser. Okay, that's your Firefox. I'm gonna play them. Please pay attention. So, it has open up Amazon. It should click on Today's Deals now. Right? And then I think I chose Books, so it should check this checkbox. So we've got the books now. So, it records and it plays back the recorded steps. That's what IDE is about. Now, there's more to it. Alright? You just saw in this slide that we can export the test cases. If you want to save the test case, you can save the test case. You can save it as also. You can do that on your own. Let's understand the Export feature. That's Export Text Case As. Just look at the option. Take a few seconds to read these options. So, it is providing support I will be telling you along with TestNG and Java. So, I'm gonna use Java. I'm gonna use Selenium WebDriver, and I'm gonna use TestNG. Let's say I want these steps I will use this option, Let's say I have chosen this. It is asking me to save this file. I think I clicked on it twice. Let me just close this. Okay. And I want to name it as Edureka. Okay. And Amazon, _Amazon. And I'll save it. Okay. I've saved it. Now, that was saved in and the name was Edureka_Amazon. So, if you see here, I did not give any extension to this file. And if you open it, using Java, Selenium These at the rate sign, okay, these are TestNG annotations. So, you won't understand because we haven't gone through TestNG, but this is coming because I And of course you understand and these classes that's a Java concept programming language. And these functions, driver.manage, or driver is equal to new FirefoxDriver, or maybe declaring this WebDriver driver, which is a private instance. This is coming from Selenium. So, this is a full fledged script. Now, people ask me that No, guys, if you want to use IDE, you'll never learn Selenium. You can use IDE if you want you want to prototype your project, or let's say you want to If I'm using, let's say alert handling, how should I handle it? So, that can be done here. For that purpose, you can use them. But if you'll just rely on these scripts, you can't learn Selenium. Plus, there are other do with Selenium. You can't do your regression testing or the entire functional testing. Okay, you can run small scripts, you can create small scripts, but you cannot do a full And it's clearly written. Even if you go to the it says that it's basically Don't prefer it for a full Plus, there are other things also. Let's say you want to do looping, looping as in you want to perform You can do it with Selenium. You can take a screenshot here. Plus, let's say you want now, data-driven testing is when you want to provide You can do it here. You can provide the whole So, when it comes to Selenium please keep it limited. You can use it. There's no harm in it, but don't make it a choice. Alright, let's go back Okay, so that's the IDE features. Create and edit test cases. Okay, you can edit them also. I'll just show you how you can edit them. So, you've got this, right? You've got a command and Now, you can edit this. You can add a value to it. You can, you know, maybe So, you can edit the script as well. You just have to click on that command and you've got these three fields, right? Let's get back. Create and execute test suite. So, you saw that there were two things. There was the screen and there was green green bars, right? So, that was for playing So, let's say if you want you run multiple test cases, save them, then add them as a new test suite. So, you've got that option also to create a new test suite there. Debug and enhance test cases. This and this are almost the same. You can debug them, you You can add more steps to them. Test cases can be exported to different programming language, thus you already seen, and I think that's the major thing that you should know about IDE. Enables learning of So, like I mentioned, when it comes to syntaxing or prototyping, that time you can use Selenium IDE. But when we'll get to web driver, believe me, you'll forget IDE. You'll forget IDE. Initially, it's okay to just understand, okay, if I'm executing these steps, how would they look? How would these steps For that purpose, you but don't make it a choice. I'll keep that repeating. Alright, let's go to the next slide. I believe there are no from the current audience. These are the drawbacks, let Supports only Mozilla Firefox, so that's a plugin for Firefox and it doesn't come as a plugin for any other browser. Not suitable for dynamic web applications. Why is it not suitable? See, what is dynamic? Dynamic means when something can change at any point of time. It's not static. It's not gonna remain It's gonna change dynamically. Now, that dynamic thing or it could be a few Now, we cannot handle dynamic elements using Selenium IDE, because let's say for security reasons, I am dynamically changing the HTML IDE of my password field in a login form. Just an example. So, if I have to log in I can't do that because the next time that prerecorded script inside IDE will run that test case, it'll fail, because the id will change. Whereas when it comes to WebDriver, we can handle dynamic elements very well using xpath and its features, xpath functions. So, we'll come to that later when we'll understand finding elements and details. No support for programming It automatically, you can't You can export scripts, but you cannot write your own scripts. It's an IDE. It's not a programming interface, okay? It's an IDE. Data-driven testing not possible. That I mentioned that then you have to provide a data set. Let's say you want to give and you want to test the login form. That cannot be done using IDE. No centralized maintenance Now, that's a huge point, as what are objects and elements. Then only you can understand what do you mean by no of objects and elements. So, I'll briefly tell you right now. Then when we'll get to WebDriver, I'll tell you about objects Anything that you see I'll give an example. Let me open up Chrome. So, let's say I'm opening ebay.in, okay? Now, that's a whole page elements as in the Sign In link. This Register link is These links, Deals, Sell, Help My eBay, My PaisaPay, this cart icon, the search button, this dropdown, this list in the dropdown, okay, these options in the dropdown. These images. All of them are elements of this web page. You can also call them objects. Okay. We'll talk about them in detail later. These are called elements of the webpage. Let's go back to the presentation. No centralized maintenance. So, we do not have anything that maintains these elements. No centralized location. Now, when I'll be telling I'll be also talking about HTML document, DOM, which is called which actually is the entire model of the objects of the webpage. So, we'll talk about those For now, you'll understand wherein you can save these elements or objects on the webpage. No centralized repository. So, these are the Okay, we are coming to the Selenium Remote Control is used to write web application tests in But what is Remote Control? So, that's an entire thing Just what was RC, how Let's go to the slide. And before I explain this slide in detail, I'd like to explain the difference between RC and WebDriver for which I've created a document for my students. Okay. So, I'll explain that document, and then we will understand Selenium remote control is used to write web application test in So, that was also an interface which was letting us It interacts with browsers with the help of Selenium RC Server. Now, that's again a new thing. You won't understand it. RC Server communicates using Drawback is that every is time consuming and hence RC is slow. But why is it time consuming? I'm gonna explain that. Selenium 3 onwards, RC has been deprecated and That's an important point about RC. See for your knowledge, or maybe down the line in your interview. For that purpose, I'm gonna between RC and WebDriver. Otherwise, guys, believe me, you don't need to get into It's been deprecated, nobody is using. I believe nobody would ask any question. They might just ask you the difference, but they will never ask you what RC was, how to write the functions there. I have never used RC. I've been working with So, I'll just quickly open up my folder. Okay, so, I've created I'll just go through the so that you understand the difference. Now, what will I do? I will read every paragraph first, and then I'll explain it. Okay? Alright. Jason Huggins realized. Now, before I read this line, let me introduce Jason Huggins to you. He was the developer of the Jason Huggins. Okay? Jason Huggins realized that of their application was becoming more and more inefficient. So, this, he was a tester, okay. And he had created a script. But before he created the script, he was testing his application and was running a few steps So, he thought that this was It was wasting my time. Alright. So, he created a JavaScript program. Understand this, that's why He created a JavaScript program that would automatically You understand this point? Automatically control browser's actions. If you don't know your browsers, the language behind your So JavaScript can very well So, what he did, he created so that using that script, he can control the browser's actions. That's how he was trying to automate the manual testing part. He named this program So, that was the name Now, looking at the to help automate other web applications, he made it open source Selenium Core. So, this JavaScriptTestRunner actually became Selenium Core. So, if anybody ask you what that came into existence, Selenium core was the first thing that came into existence or Selenium's life cycle. It was not the RC Server. It was Selenium Core, okay? And what was it? It was a JavaScript program. Now, let's understand what the same origin policy issue was. So, what I'll do, I'll create how this entire thing came into existence. So, first it was a JavaScript program. And what was it? It was called Selenium Core. So, Selenium core was I'll just expand it. Okay. Now, let's read the next paragraph. The same origin policy issue. It prohibits JavaScript code. Understand it. It prohibits JavaScript code from accessing elements from a domain that is different from I'll read it again. Same origin policy prohibits JavaScript code from accessing elements from a domain that was different from What does this line mean? It means, let me open up something. I'll close this now guys. Okay. And I'll open up Firefox. Now, let me open Google. Okay, google.com. And I'm gonna open Firebug. I'm using Firebug to inspect elements. Okay, we'll talk about these plugins. So, I've downloaded Firebug. Let's say I'm gonna inspect this. I'm taking this example. I've just taken it arbitrarily. It's not that it's my choice, so I've just taken it. So, I'll have to find out. Alright, okay. Now, that's an entire HTML with head and body, right? So, generally has your title and stuff, and the body has the visible page content. So, that's the body, having We've got different we've got styling, we've So, if I just scroll it down, you will see as when I hover mouse on various HTML elements, okay? Something is getting highlighted, right? And then you come to this, which is highlighting the entire page, and then that's selecting this div, so it is highlighting This entire HTML document the HTML code for this page. This point regarding same that if you've got a JavaScript, JavaScript is not allowed to access any element from another webpage that is beyond this domain. So, what is my domain? My domain is google.co.in, and I'm on the Search page, right? Now, Google has got a number of things. It has got Gmail which is called mail. Okay, it has got other So, what I'm trying to say is if you're working with google.com, from any JavaScript within this page, you cannot access elements of yahoo.co.in. That's against the same origin policy. According to same origin policy, you will never be allowed to write anything within the script, which will access elements on yahoo.co.in. Why, because it's not Now, if you're working in the same domain, let's say you're working with google.com, so whether you're working with search, whether you're working with images, whether you're working with Google Drive, whether you're working with Gmail or any other page within google.com, it can be allowed. But if you're going beyond this domain, it will not be allowed, okay? So, this was same origin policy issue. I just read this paragraph, okay. HTML code in google.com randomScript.js. Now, I'm not certain about that. I just took it from the web. The same origin policy will only allow randomScript.js to access pages or elements within google.com, such as google.com/mail /login /signup. But if you want to from different sites, or anything else, you won't Why, because both of them So, this was same origin policy thing. Now, why have I explained Because that was the It was a JavaScript program Why, because through that program, Jason was trying to control Now, even browser needs to understand whether the script which and the web application that I'm going to control, which is going to run They're under the same So, let's just go to the next paragraph. And if you want to learn you're more than welcome to go through the wiki pages Now, if you can see here, this diagram is again taken from the web. These are the HTML pages and there's a JavaScript But if you try to control this page inside domain XYZ through this That's what same origin policy is. This is the reason. Listen to this very carefully. This is the reason why testers needed to install local copies of Selenium and the web server containing the web application being tested. So, that belong to the same domain. So, what will these testers require to do? He made it open source. Jason made it open source, Selenium Core. But the thing is we needed Selenium Core and the web server along on the same system. That's not always possible. So, this was the issue in Selenium Core. Now came the existence of Now, unfortunately, have to install the whole and the web server on Because of the restrictions So, another ThoughtWork engineer, that's what I said in the beginning. There is a whole team involved. There's not just one person. There's a whole team involved behind the Selenium generations, okay? So, Jason Huggins created Selenium Core. Then another ThoughtWorks he created your Selenium RC. So, the next thing was Selenium RC which came into existence. And what was RC? It was a server. Selenium RC, which is Remote Control. I'd rather write Remote Control. And what was it? It was a server. You can call it a standalone server, because I'll tell you in Decided to create a server to trick the browser into believing that Selenium Core and the come from the same domain. The system became known as Selenium Remote Control Selenium 1. I'll repeat this line again. Paul Hammant, what did he do? He created a server, okay? This was a server. It could be a standalone application. What was the server doing? Before running any test case, And after starting the server, what was happening? This server was actually to trick the browser. Okay? Where does the proxy go? Proxy goes into the browser to trick the browser and the application on the test, they are coming from the same domain. Now there's an entire history behind it, how to do this, okay. Now, I'm not going to explain though I've mentioned it in this document. Probably, I can upload it if possible. Okay, I'll upload it. I'll try and upload it. So, how it did? This HTTP proxy injection was So that your browser understands it was tricking the browser into believing that Core, your Selenium Core, and your web application on the test, they're coming from the same domain. Now, when this thing is over, okay, when your browser can understand, &quot;Okay, fine. &quot;Both of them are coming no matter whether your and your Core are on the But still, since we've Because what this proxy will do, it'll create a fictional URL. So, that's a whole concept. It'll create a fictional URL, so that this URL, when this URL is called, it will be believed that Core and your URL or your web application, they That's how your RC came into existence. Now, why is it called that RC was a slower system you need to first start the server, so that this HTTP proxy gets injected. Now, if you've started the server and then you're providing To Selenium Core. And Selenium Core is passing So, it was the whole cycle. First, server will restart it. Then the instructions from and Core will provide the There was also no direct communication. So, this entire process was very slow and hence taking time. Okay, I'll just back to the slide. And we've got a few questions as well, so I'm gonna take that up as well. Alright. So, because of this, Alright. So, we've got a few questions. Let me just expand it. We have some audience here. Raul, do you want me to explain I would rather prefer that because that explains it beautifully, what same origin policy is, but I think I've covered this that you cannot access any page or HTML code from a different domain, inside the domain which Raul, do you get it, or do you want to explain it again? Alright, no answer. So, what we're going to do, we're gonna quickly go through the slide. RC Server, okay, that's the basic thing. RC Server communicates using simple HTTP get and post request. So, when we have this web when you want to get something, then you use HTTP's get command. And when you want to post a So, that's entire thing, get, post, delete, and update, They're called CRUD operations, right? Create. What was R? That was CRUD only. Update and delete, right? Drawback is that every is time consuming and hence RC is slow. Now I believe that you because I've already told you how server, first, running the server, then sending the instructions to Core, and then Core was sending the So, it was a long process. I don't know if, I'm not sure if you've Otherwise, I'll quickly create I know we don't have. So, what I'm going to do, Let me see if I have that in my document, that diagram. I'll explain that to you, okay? That's for WebDriver. Yes, that's here. If you look here, alright. Now let's say these are your It's a script in this diagram, because this is again taken from web. I haven't created this one. Consider it as your Eclipse side. The end, you've got a whole script here. You have to run the server first, so that it injects the HTTP proxy. Now, the server coming up Then what you have to do is browser with Selenium Core injected. So, you've got a browser. And obviously, any application Now, when you send the instructions, server will get started. Your instruction will go to Selenium Core who is sitting inside your browser. Selenium Core will then to your browser. So, there was no direct and the browser or the web application. Two more things that are in between. Here's RC Server and your Selenium Core. This thing was making it slow. Alright, drawback is with RC Server is time Now that I have explained I believe you've got this point. So, Selenium version 3 onwards, RC has been deprecated and Let's go to the next slide. My favorite tool and most WebDriver is a programming interface to create and execute test cases. It's again the same thing. The base is again the same. This is also an API. It's a programming interface, and we can create and Test cases are created and object locators, WebDriver methods. So, let me explain at this point how do you use object locators why is it important to and what are these WebDriver methods. Okay, I'm not gonna cover the coding part, because we'll see that when So, let's say I'm opening up Amazon. Now, let's say I want to How will I do the search? What will be the manual steps? So, the manual steps would First, click on this So, let's say I want to and then I just wanna type in iPhone 7. I'm saying I want iPhone 7. And then after giving this I want to click on it. Okay. Now I've got these options, Jet Black 128 GB, and then Black 32GB. Let's say I wanna click on Apple. iPhone 7 Black 32GB. So, another link opens up. Now, if I have to automate that I've just performed, These are the various on this page. Everything that you can see on this page, whether it is a text, or or a text box, or a or these images, okay, everything that is visibile You can also call them objects. If I have to automate I first need to find out this dropdown. Let's say I want to entire I first need to find out how this dropdown can be taken care of. How will I do that? I need some technique for it, right? until and unless I have this element, I cannot click on it. Now, once I get this now I need to get this list. Then only I'll be able When I choose a category, Right? Let's say I've clicked on books. Now, this is a text field. I need to get inside this text field and I need to type something here. Let's say how life works. I first will found this text field, then I will send this text Then I will find this and then I'll click on it. The point here is if you want to automate any action or any process, you first need to find these elements. Then only you can perform action on them. How do you find these elements? So, for that, in Selenium, we've got different Okay, I'll just write this down here. To find web page elements, you need to use some locator techniques. Okay, so I'm not saying that you have to use these locator The other tools must also to find these elements. Then only they can automate them. In Selenium, we've got eight which means in eight ways I and then I can act upon them. Let's get back to the slideshow now. The same test cases are created So now you know what elements are. Object locators. Without locators, you WebDriver methods. Now, whatever action you will perform, these are those methods. WebDriver driver methods action on the elements that you will find using one of the object locator technique. This is what this line means. Selenium WebDriver has WebDriver is an API, and you can have this in a form of jar. You can use its classes. You can use its interfaces. You can use the functions It is not an IDE. IDE means it doesn't have any integrated development environment of itself. That's the reason we choose or any other development Selenium IDE supports only IDE, doesn't have programming interface. So, when we were going We don't have any programming interface, as in I cannot call in any or any class within I've got a development environment there. Fast as it interacts Now, with web driver, We got rid of your Core as well. We do not need any core now. So, my script is going to interact directly with the browser. That's the reason it Let's go to the next slide. Selenium suite of tools. Again, we've got this WebDriver. Each browser has its own driver on which the application runs. Selenium WebDriver makes Initially, this point is because it is using terms. If you've just heard of Selenium or if you've just decided you might not have heard about them. Each browser has its own driver. What does this mean? On which the application runs. Selenium WebDriver makes Okay, have you ever thought that if I'm writing a script, and in the script, I'm using some object locator Okay. Now I found these elements, and I'm performing action on them let's say I want to click on the dropdown, and I'm doing that inside my script. Now, when I run this script, how will my browser Because, obviously that They're going to the browser. How will my browser Have you ever thought of it? Because I said Selenium supports, we've already seen that it For every browser, in You can call this driver, Now, whenever we run a test case, we first need to choose I want to run my test case. So, that'll be the first If I'm going to use WebDriver, on which browser am I Let's say my choice is Chrome. So, I need to tell my script that you're supposed to Now, once Chrome opens up, how is it going to take the instructions? It is going to take the instructions only when I have this driver running. So, you understand it as a server. Now, it's not a small thing, and we don't want to get See, even if there's a sever running, there has to be some protocol and written inside this driver. That's how they'll and that's how your browser will understand the instructions. So, we don't want to what protocol it follows. No. What we want to know is which I need to run before So, for that, I need to So I'll talk about the So, let's say I'm working on Chrome. So, for Chrome, I have See, what are servers? They're standalone files. And what are standalone files? Executable files. So, for this, I have That's an executable file Okay. For Firefox. Prior to version three of Selenium, we were not supposed to because that came in So, that was not required. But Selenium 3 onwards, called geckodriver.exe. We need to download it if we want to run our test cases on Firefox, similarly for Internet Explorer... Okay, we've got these drivers. It is called iedriver, iedriver.exe. And if you want to see all these drivers, I'll tell you where you can find them. So, if you want to work along with the Selenium jars, you also want these drivers. So, what you can do is go to Chrome, open up seleniumhq.org. Okay. Seleniumhq.org. Again, go to the download tab. Go here, and we might just Okay, we have it here. If you see here, these and the drivers. Can you see? We've got Mozilla GeckoDriver. We've got Google Chrome Driver We've got GhostDriver. We've got Edge Driver. See, we've got Edge Driver as well. HtmlUnit, this is the one It's a headless driver. SafariDriver. So, you've got all the What you have to do is You can download them on your own. I'll tell one how to download. So, let's say I want to So, I'll click here on 2.27. It'll take me to Google API site. Now, that's the latest one, 2.27. For Windows, we're You can download this one. For Windows 32 and 64. People ask me, this is 32. No, it works for 64 as well. Okay, those who are using Those who are using Linux, For Linux 64, it's this one. Okay, download this one. So, let's say you want download this one. Now, when you download Okay, this one. Now, if you see this folder, I have unzipped it, and you also have to do the same. You need to unzip these folders. Unzip them and look here, what is there. Chromdriver.exe, so that's your driver. That's your server. That's your executable. You need it if you want on your Chrome driver, or if you want to run your Similarly, download Gecko. If you can see, I've got this Gecko, okay. And this is geckodriver.exe. Follow the same thing, click on the link, download the latest version. Alright? Let's go back to the slideshow now. Alright. Each browser has its own driver on which the application runs. Selenium WebDriver makes So now you know because we don't as in your RC server kind of thing, or Selenium Core kind of thing. Types of WebDrivers, Chrome, Safari, IE, Firefox, HtmlUnit, and You've got Edge. You've got Opera, so all the major browser drivers. Okay, we're still continuing WebDriver. These are the features which I'll just quick read them. Programming language. So, we've got support for all the major programming languages. Browsers. Not just these, but Operating system. Windows, all the versions, Macs, Linux, Android, Ubuntu, all major operating systems. Overcomes limitations of Selenium 1, like file upload, download, This was a limitation Now, we can do file upload using a command called which we'll see later. The beauty of WebDriver is we can use third party tools Okay. Now, for upload, I said I can use a Selenium command called sendKeys, and I can also use third or AutoIt, which I'll when we'll come to upload portion. Download, we can download stuff. Pop-ups and dialog barriers. Now, you might have seen that when you work with there's a tendency, not tendency actually. You might just encounter a pop-up. Now that pop-up can be of any type. It could be an alert pop-up. It could be a prompt or Earlier, we were not able to handle them, but in WebDriver, we can Selenium WebDriver drawbacks, the only drawback that I its reporting generation thing. WebDriver cannot create We either need to automate for which we need to Okay. And the next thing is along with Selenium. But WebDriver on its own And the next point is no of objects and elements. So, we don't have any repository asset wherein we've got these and elements of different webpages. I hope you now understand Okay. Alright. Let's come to Grid. Okay, so we have to now start with Grid, so we'll see what Grid is all about. We'll quickly go through the slide first, and then I'll explain. Probably, I'll create a Selenium Grid is used to multiple, at the same Now, if you say at the same time, that means you're doing parallel testing. Parallel execution is achieved with the help of Hub-Node architecture. I'll come to that. Hub can control different test scripts on various browsers, operating systems, and programming language Hub and nodes started using jar files. Supports RC test, as Now, Grid is another feature in Selenium, which is beautiful. Okay. So, I'm gonna explain this to you. Let's say I'll open up my paint. I'll try my best to create Okay. Alright, I'm basically and that's my master system, okay. That's my master system, and I'll use this line. Okay. This is my master system. I'm gonna call it Master or Parent. Okay. And this is Child 1. This is Child 2, This is Child 3, and this is Child 4. I'm not saying that this is, I mean these many systems but the architecture of You've got a parent so-called hub here, and these child systems So, you can say that this is node one, and this is node two, this is node three, and this is node four. What is the use of Grid? You can run different test cases at the same time on different systems. When I say different systems, it means all these systems are different, having different operating system, and maybe different browsers. Okay. Now, let's say that's a Windows system. This is Windows 10, okay? This is Win XP. For example, or let's say that's a Mac, and let's say this one is Ubuntu. Okay, and that one is your Linux. So, we've got different operating That's what I want to achieve. How can I achieve? I cannot achieve this using WebDriver, but I can achieve this using Grid. I'll have multiple systems I will have one master system, which will control these and these nodes have and maybe different browsers. Let's say Windows 10. This has your Chrome for example, okay, and your Mac. This has Safari. Okay. And we've got Ubuntu who has Firefox. And let's say we've got Linux again with Chrome per se. Alright. Now, I'm running test cases The very first question that arises is why do I need this kind of system? So, that's the beauty of Selenium. Let's say you have created Okay. Now, you don't know whether Windows 7, or 8, or 10, or XP. Or, does it have a Mac PC? Or, maybe he's using Ubuntu and you'll never know that he's trying to run What do you want? You want that your application no matter what kind of So, if you want to test that, and you want to speed it up, Grid is the choice. You can create a Grid and run on different environments. Okay. So, it's all about having hub and nodes. Now, how do you send So, for that, we need to So, I'll have to start these nodes, because they are different systems. I'll have to start this hub also. So, the very first thing So, we've got a few commands to do that. And what helps us in running this hub? So, if you've got a jar called Selenium Server Standalone, okay. We'll talk about that. We'll be downloading it also. So, we have this jar. This is the jar which will help us run hub and also start nodes. And after running a few commands, we'll configure them together, so that your hub nodes, which all nodes have And also, your nodes will also so that I can take instructions from it. So, that's how this Now, I'll explain the slide, okay? Okay. The Grid is used to run at the same time on multiple machines. I hope you now understand this line. Parallel execution is achieved with the help of hub node architecture. So, I've created the architecture. That's how you run test cases parallelly. Hub can control different test operating systems, and and various nodes. Okay, I missed that point. Now, it is not important whether you're using Java here on this system, or some other language here, some other language here. Okay. You can use one language because when you create the structure, you will be sending all the instructions only through your hub. The execution will happen on your nodes, but all the instruction part Your hub will be directing your nodes. Let's say on hub I'm saying that I want to run my Okay. So, obviously, I'll have in my script. Okay, I'll have to write, but on the node which has Safar on it, and Mac has the operating system, and it can use an language. We're least bothered about it, because Selenium supports So, that's how it happens. Okay? Selenium Hub can control on various browsers, operating and various nodes. Hub and nodes are started using jar files. So, how do you run this entire system? You first start hub, and then the nodes. So, both of them are called Selenium Server Standalone. It supports RC test as so you can run both. Okay. I haven't worked with RC and Grid, so cannot comment much on it. But yes, of course, you can Hands-on: handling elements Now, see, when we'll be working with Grid, that time I'll tell you how to run your hubs and So, we'll be talking about Okay, not IDE and RC actually, okay, because I've already covered IDE. We might just take a class on IDE. But RC, of course not. And then WebDriver, we'll all the commands, all kind of commands, so whether they are simple commands, whether they are your WebDriver commands, whether they are classes, okay, whether there are So, we'll be looking at those functions and APIs and classes in the later classes. Grid is done, but we'll have another class wherein we'll be actually creating a Grid. We'll create a Grid so that you know how this Grid behaves. Okay. Now, in this class, how I'm going to end this class is I'll be writing a small script. Now, before I write that script, I'll tell you how to create an environment so that you can start So, we'll be downloading a few things. Okay. We'll follow that up. Once that is done, I'll write a small script, And I'll maybe perform a few actions just to give you a brief what or what you can achieve using Selenium. That'll not be the entire thing, okay. It'll be a small example, but I'll give you a picture that what wonders you or using Selenium as you automation tool. So, gets going, let's get going now. We'll quickly download So, what I'm going to do is I'm gonna share these URLs with you. So, I've got these downloads. I'll go to my desktop, and So, what I've done, I've saved these links here in this file. So, first of all, you're Why we chose Java? Because that's the most and I'm sure that Java has It's not gonna change for years. It hasn't changed and Change as in, I mean Java I believe. Okay, so let's take this URL, and when you'll be watching this video, you can simply take a look at the URL. Okay, maybe can take a screenshot, you can just write down on a notepad, which URL I've typed in here. Basically, I've gone to oracle.com, and then I've chosen Java and Downloads. Okay, I went to Downloads and then Java. I've saved this URL directly. Now, what you have to do is... This is your Java, okay. If you scroll down or so that we get inside Now you can see that we've got Java for Linux, Solaris, Windows, and Mac. I'm working on a Windows system. If you're working on a Mac system, you're supposed to download If you're working with you're supposed to If you're working with then you're supposed to download i586.exe. Okay. And yes, when it comes to the versions, I want everyone to use If you're using Selenium Selenium 3 works well with Java 8. If it doesn't give good results with 7, now you'll have to figure of getting an exception or some error. Alright. My advice, please use Java 8, Selenium 3, and all the latest versions. When it comes to IDE, as in your Eclipse, I'll just tell you about it, which one to download and Okay, so just click on here. Alright, this gets downloaded. You will be double clicking on it. I'm not gonna do that, guys, because I already have java on my system. You'll be double clicking so that it set up Java for you. Now, when you run this, you will see that when you go to C drive, okay, and when you go to Program Files, you will see Java here at this folder. How to verify that your You need to make sure that you have got jdk and jre folders in place. If you see any of them missing, that means that your It didn't happen correctly or it didn't happen well. You will delete the entire thing, download the executable fresh, Okay, but just make sure that that means your installation was correct. Okay. That's how you will download Java. Now, once you download Java, you can download your So, I'll just copy paste this link. Okay. So, that's again googleapis.com. We can download our Control + C. I'll go back again here. Let's open another tab. Control + V. Now, see, you've got Okay, you've got 2.xx versions also. And then you've got 3.0. Initially, we've had beta versions, and then we had full fetch 3.0, and the latest one is 3.2. Oh, we've got 3.2 as well. The last time I saw it was 3.1. So, we've got 3.2 as well. So my suggestions, whenever take the latest one. So, by the time you watches this video, if 3.3 happens to come Okay. So, what you have to do is let's say 3.2. Now, here, I need to go to 3.1 first. Yeah. Don't take 3.2 for the reason that it's showing me some other jars, which I'm not sure of using. Okay, don't take 3.2 because If I click on 3.2, it doesn't give me Selenium Server Standalone, which is the jar which we've used always. This is some .NET jar. So, we don't have any other jars here, so don't use 3.2. Go back and use 3.1, alright? So, I'm gonna click on 3.1. And if you see here Selenium Server, and Selenium Standalone. What you'll need is That's the major one. And you need seleniumserver.zip. These two will suffice This is a jar in itself, and this is a zip file Keep in mind, whenever please unzip it. Otherwise, you won't be able to import jars into your workspace. Okay. So, when you download this, unzip it. Fine. Now, when you download this, So, if I go to D drive, Akanksha, and Selenium new. Okay. So, the last time I downloaded was 3.0.0. It's a zip and I have unzipped it. Now, you've got all the jars in nodeps, and there's a library folder, and you're supposed to take all the jars. If you go back, the Selenium That's the most important jar. You can't work without it. So, please download it, okay? So, this is done. The last thing is to get your Eclipse. So, that's eclipse.org. And what I want you to do is Okay, just take a screenshot of this. And once you take a screen shot, you will have this download document. Okay. And I'm gonna go to Eclipse. Okay. Now, if you see there IDE &amp; Click on IDE &amp; Tools. Now you see here, this Java C++ and PHP. We want for Enterprise Edition. We can work with core Java as well, but I want you to download this one for the reason that majorly in an enterprise edition form. Okay. Rarely, core Java is used. So, I want you to click on here. Now, you can see the releases. You can see the releases. You can have anything from Luna to Neon. Don't use Kepler, Juno, Indigo, Helios. They are older versions. We've got neon right now. So, if you have anything between them, that should work fine for you. Otherwise, I cannot assure or if you get any error I'm not sure. My suggestion, use from Luna to Neon, and it's best if you take Mars and beyond, Marx, Oxygen, or Neon. Okay, now let's say you're taking Oxygen. For example, or you already have Oxygen, or you're trying to download Neon. So, if you take Neon, click on here, that's for Enterprise Edition. So, you've got 32-bit, 64-bit. Please download the correct one. Don't do the mistake of So, if your system is a If it is a 64-bit system, download this. For Mac users, this is the one. For Linux users, these are the ones. Okay. Download, follow the instructions. Now, this is again an executable. Let's say I'm click on 32-bit. Okay. You get a mirror website. Don't get bothered after That's okay. Click on here and download it. Unzip it, and you'll get the Eclipse. Now, what I want you to do is... What people do, they make a mistake. I'll just show you. Where have I saved Eclipse? Let me just find out. What I've done, I'm not I've taken Eclipse in D drive, because that's where I have Okay, so, I think I have in Selenium. Sorry, let's come back. It's here in D drive Eclipse. Now, do you all see this executable file? Do you all see this executable file? That's the exe. I don't want you to run it all the time you want to work with Eclipse. What you can do is right click on it. Okay, there comes an or pin it to Start Menu. Please select that, so that or maybe in the Start Menu. I haven't pinned it in Start Menu. I have pinned it to task bar. Do that. Don't run this executable again and again. Okay. Alright. So, that's about downloading. Now, you've got Eclipse we've got Java, we've got Selenium. So, we are all set to write So, I'm going to start my Eclipse. I already have it in place. My version is Luna, so but it works fine for me. Okay, it's already here. Okay, so I'm gonna close this. I'm gonna put this down. Now guys, see, this is the workspace which I was working in. But for these tutorials, When you will download and open it, it won't appear like this. That's the reason I Don't get bothered. I'm gonna switch the workspace, Alright? You just have to open Eclipse. Don't worry about doing this. So, I'm gonna browse a new workspace which I've created here, which is this, Edureka Tutorials. So, I'm gonna press OK and OK here. So, this is again gonna take some time. They're switching the workspace for me. We can see workspaces wherein So, you can have different or you can create different That's entirely up to you, Okay, now when you will open Eclipse, when you will open Eclipse it will appear like this. That's the reason I so that you can see exactly the thing that you will face when you Okay. So, if you get this page, You have to click on Work Bench, because that's where you So, click on Work Bench. Now you've got a new Work Bench. You don't need this task list. You don't need this. So, what I want you to And if you wanna minimize do whatever you want to do. I don't want them, I've closed them. That's my Package Explorer, What do I want to do now is I have to start working with my script for which I need a project. Okay. So, the next thing is click on File. We've got these options here, New, Open File, Switch Workspace, Restart, Import, Export, blah, blah, blah, and Exit as well. Okay, I want you to click on New. You want to take a Click on Java Project. Name it. Let's say these are Edureka tutorials. That's how I want to name my project. Okay. I'll say Edureka Selenium. Okay, now when this project is done, I don't want SVN. Okay, so, you can just ignore it. If I expand this project, this is the default And that's the Java System Library. How does this come up? Eclipse does it for you. So, whenever you download Eclipse and start working with it, please make sure you have If you don't have Java already in place, Selenium won't get these jars. In fact, Selenium will not start, because what it does is C. What is the default location for Java? It's C Program Files, right. That's where it always get download. If your Eclipse is not it'll give you error. So make sure you have your Java in place, and it will automatically into your workspace. So, we've got java System Library so that we can work with Java. Next thing we want is our Selenium jars. So, how do we bring Right click Build Part. So that's the place you into your project. Then click Configure Build Part. Here, you already have jre. Go to Libraries. This is Order and Export. You're supposed to go to Libraries. This is Add Externals JARs. So, now you have to bring So, click on it. As soon as you do so, you or you can probably give I'll go to Akanksha. And in Selenium New, I've got my Selenium jars as I told you. So, I'm gonna take Selenium and open it up. And then I'll, again, click so that I can go to Selenium Server. Take note, yes, I will Because I have still not taken libraries inside lib folder. I'll do Control + A, and I'll click on Open. So, I've got all my Selenium jars now. Click OK. So, if you see, apart from JRE, we've got Reference Libraries also. Now what people do is they called lib. That you can also do. Okay, you can create a different folder. All you have to do is You can create a folder, or you can directly do so. That's your choice, okay? So, we've got the Reference Libraries. If you expand it, there are if you can see here, right? You've got your Selenium Everything is place. We are all set to write the script. Now, what is my tendency I always do things within a package. So, what I've done, have right clicked on this default folder, SRC, Now, why do I need package? Because, see, if you're or if you've got friends just go and browse their code. You will see that everything And when you'll read the packages, just by reading the name of package, you will get to know that By having packages, we increased the readability of the code. Okay, it'll be easier for us to find out any particular file later on. So, when I'm gonna create Co.edureka.selenium.webdriver.basic, because today I'm gonna do basic. Edureka.com is the website. So, let's say you've got abc.com, so how will you name your package? Com.abc. Now, your application name is XYZ, okay? So, maybe you can give ABC. And then package also have So, let's say you've inside your application. And we've created files and every package is different component. So, let's say you've so you can write admin. And then within admin, some CRUD operations, and maybe you've got and some of your user task. So, you can create packages accordingly. Since this is a tutorial that's how I've named it, So that when I do this and you'll understand, okay, is within this package. Click Finish. And mind you, package name and your class name should all be in caps. Not all, but should start Okay, you can go through of writing code online. You can find them. Please adhere to them, okay? Now, I want this. I've right clicked on my package. I want a Java class. Okay. Let's create a Java class, and I'm gonna name it as Day1. I'm giving it Day1 we're just going to through Selenium. Alright, this is an And I'm gonna tick main as well. Finish. If required at any point of time, I'll explain the Java portion. But side by side, I want you, when you're watching this tutorial, I want you to go through Okay, so, everything, this class, this public static void They have some meaning And why have I take this main here. Maybe when we'll come when we learn WebDriver in detail, it'll be possible to just I'll explain them, okay? Alright, so what I'm going to do is I'm gonna write a piece of code. So, give me some time to write the code. Just keep watching this video. And after writing every function, I'll explain that function. Okay? Now, this is giving me error because I'm using WebDriver, okay? That's where all my functions are, because this is Selenium WebDriver. So, the very first thing So, I'm creating a variable Now, this is giving me error because I have my WebDriver but I haven't imported So, you have to click on it to find out what is the reason of this error. So, if you click, this From where, organization.openqa.selenium. You can do this or you can simply do Control plus Shift plus O. Control + Shift + O. Okay. Let me try if I can write it down, and I'll erase it then. You'll have to write Control, okay, plus Shift. Sorry for the bad handwriting. I just can't use it. And then O. Okay, Control + Shift + O. That will open up the Okay. Now that I have WebDriver, let So, what I first want to do is I want to invoke my browser. So, public void invokeBrowser. So, that's my function. Okay, invokeBrowser. And I'm actually going to because right now it's still a variable. I haven't instantiated it as yet. So, inside invokeBrowser, what I'm going to do is I'll say driver is equal to new. I want to use Chrome, okay. So, I'll say Chrome driver. See, guys, you don't need as in whether it starts from capital C or whether this D is capital D. That's the beauty of using IDE. All you can do is use Control, or you're using Mac, Command, plus space. Control + space. So, that's intelligent code completion. You can choose the option So, I want ChromeDriver, That's done. Now, I told you you until unless you have driver in palace. So, how do you use that driver? For that, we need to Okay. System.setproperty. I am basically about Now, this property has a key value pair. The key is both of them has strings. They're string arguments, and we mention string First, mention the So, my key is WebDriver.chorme.driver. That's my property name, and that's how you have to And the value. The value is where your driver is placed. So, where did I keep my driver? I kept it inside D drive, Akanksha, and Selenium, and here. Right? So, the latest one, I believe, is here, so I'm gonna take this one, take this location, Control + C, Control + V, \chromedriver.exe. You need to mention the And then in Java, your as an escape character, so you just can't have single backslash. You need to place double backslashes. Alright, just place double backslashes. This is the location where your and semi colon. Okay. Now, that's done. I've instantiated my Chrome driver. I'm all set to use the Okay, so what do you do now? You use driver as your object reference. So, we'll talk about that later. Maybe I can cover a bit of Java later in other tutorials, upcoming tutorials. What you have to do is driver. You need to manage a So, how do you tend to Just keep in mind that where all my functions are, which is going to control the browser, and manages the function which will let me manage the browser's properties. Okay, sriver.manage., I want to first of all delete all cookies. I want that my browser of the URL which I'm about to call, okay? Next thing, driver.manage. Again, manage because the again, browser property. I want to maximize my window, because what happens is when when you instantiate your it opens up your browser It doesn't open it wide. So, you need to either or you can simply say for intelligent code completion, include window.maximize, and that's done. Now, the next, this a whole concept, which I'll not explain now. Maybe later. I'll give you a brief. I'll theoretically explain The nice thing I'm going to do is I'm gonna do bait synchronization, which is a very essential And we do bait synchronization but in other tools also. Here what I'm going to do wait statements. Driver.manage.timeouts. Okay, because I'm placing Implicitly wait. Now, that's called an implicit wait, and that's called element I'll explain this later on, but whatever two lines I'm placing here, they mean basically I'm trying to synchronize this piece of or the web application. Because think it this way, these are just lines of code. It is Java. When I'll run this file, one line after the other And it will happen in a snap, because that's an execution, it's a programming language. I have to execute the code, and it can happen within Not even seconds however, using these lines, you're controlling your web application. Now, if I just show you quickly here, let's say I'm opening jabong.com, okay? Just an example. Now, when this page is coming, can you see there's still That means that page is still loading. It hasn't still come up. And even the elements on the page, they're not coming up in one goal. They're coming one after the other. So, it's taking its own time, and then can depend on the server speed and that also depends The basic factor, I mean is the server speed, and then of course my That's the second great thing. So, since this is taking time, let's say in my code, And then immediately, I'm trying to click on this search button. However, this has still because my browser or the web app is taking its own time. What will happen? My code will fail. For that, we need to do That means I'd like to synchronize my code and my web app or my browser together. I'll synchronize them, so that so that my code can wait for that element to come up on the screen. We'll talk about them later in detail when I come to different kinds of waits or page synchronization, okay? So, I'm gonna give this And here we need to mention the time unit with Control + space, okay, .seconds. So, you take seconds, that's done. And the next line is So, we've got two kinds of wait, implicit and page load. They'll be explained later in detail. Let's say I'm giving page And that's time unit.seconds. Okay. So, these are the lines of always and always. These are the important The next thing is I now How do I do that? Again, driver is the object So, I already know and it has got all the If I'm controlling actions from Selenium, then there has to be some Now I want to call my URL. To call the URL, I will This will get the URL for me, okay? And if you can see here, it which means that I'm supposed to give the URL in a string format. That is double quotes. And guys, please remember that your URL should be a fully-formed URL, not just www.abc.com. It should be a proper URL using http://. I'm gonna work with edureka.co. Okay. So, that's my URL. I'm gonna use this one. Now, what I'll do, I'll run so that you know what is happening here. So, which I need to create which is Day1. Okay. Day1 my object is equal to new Day1. I'm instantiating this I'm calling this function Okay, control save. And I would also like to surround my code with try/catch. Okay, what did I do? I selected this piece of code by double clicking on I'll just show you. I clicked here, then I double click, so that the entire code within these curly braces gets selected. Right click, Surround With. I just want to surround because I want. If any exception, there's It'll get caught here. Okay, delete. Control save. I have called invoke. How do you run this class? You can use this green button. For this, I'm only calling edureka.co. Let's see what happens. Okay, just run it. We'll write the code after this. I mean more code. So, don't get bothered by these red lines. They're just warnings, okay? So, did you see it first and then it maximize the window? And then I'm calling edureka.co here. And where are these functions written? Inside my WebDriver. So, when you... As we'll go along with believe me, Selenium is You'll get addicted to it. Believe me. When I'll work with different you will go back after this tutorial and immediately you'll They're so addictive. Okay. Now, that has grayed out, which means my execution has stopped. And since there are no exception, that means my code Alright. Now, we will add some code here. So, what I'm going to do is Let me close all these URLs. We don't need them. I'm just closing the unnecessary windows. We don't need them. Okay. Alright. Here, what I'm going to do I'm already logged in, which is okay. Alright, I'm gonna search. I'm gonna search a course here. Now, if I have to search a course here, I first need to come to this text box. I'm writing Java, so I And then when I type Java, I need to click on this search button. So, when I click here, I Okay. Now let's say I want to scroll down. See, this option, weekend, is coming up only after scrolling down. And guys, just fair information, if you're working with finding elements, you're Selenium can find elements only on the visible page. If that weekend thing is not visible, I'll get an error. You'll get an exception So, what you have to do is you first need to scroll down a bit, okay? And then you can click here, checkbox, I want weekend classes. Then you've selected this checkbox. You've got these options here. Okay. You've got these options. And if you want to login also, you can log in to this form. So, okay. We'll do this much first. So, let's write the code. I'll say public void, because I don't want So, I'm creating another So, public void searchCourse. Okay. That's how I'm gonna name it. Okay, now done. Here, I'll be writing code which will help me find the elements. Click on that search, scroll down, and then click on the weekend one. Okay, now, in Selenium, using the function called find elements. And if you'll see here, It's a global thing. I instantiated inside invokeBrowser, but I have created this which means it is acting Which means I can use this It's not a local variable. So, using this driver, I'm going to call the Find element is the find the element, okay? Because until now, you cannot act upon them. Now, I'll just remove and Okay, if you see here, See, find element, function and that's a by kind of argument. By in Selenium is a class, okay. And I told you, I mentioned at that we've got eight to find these elements. So, all these locator techniques and those functions are Okay. So, I'm gonna take this up, and then by.. Now, as soon as you put by., you get all the eight We'll be talking about I'll just mention all the So, there are eight First one, id, then name, then classname. You need to learn them by heart. People might ask them in an interview. And then tagname, okay. And then cssSelector. Then linkText. Everything will be partialLinkText, and then, last, xpath. So, one, two, three, four, These are the eight which will help you identify elements. And using other WebDriver commands, we can act upon them. So, there are nothing but If you press Control + space, you can see all these classname, cssSelector, id, linkText, name, partialLinkText, All these functions. So, I'm going to use some function, but it depends on my choice. How am I going to find that element. For which we need this. We'll be talking about Okay, this is Firebug and it's a plugin. I have installed it inside my Firefox. So I want to call Edureka. Okay, and I'll open it up, because it will help me We need these tools, guys. If you don't have. Let's say you're working on and for security reasons, And because of firewalls, you're not able to load these plugins. No worries, just press F12. F12 will open the inbuilt system, okay which again acts exactly Okay, so I'll just scroll it down. This is an arrow, which will help me identify This is called element locator. Click on it, hover on Pay attention on the HTML code. See, when I'm hovering my HTML code is changing. Can you see that? Right? What do I want? I want search for Selenium course. I will click on it. Now, when I clicked on it, That means this code, this HTML code is relevant to this search for a course. Okay? Now, if I have got this line, of those eight element locator techniques, I need to identify that that can be used to this text box? As you can see, I've got an id here. An id is one of the eight but IDs can be dynamic also. It's not dynamic in this case. And about dynamic If you see just by reading dynamic value, that yes it is relevant to this field. Please go ahead and use it. They're the most efficient Okay. id is equal search input one. I'm going to copy this. If you see, I'm copying it here. Okay. And the id is this. And id or any other it takes a string argument. So, you have to take a string within double quotes. Alright, so we've got and then you need to send some text there. For sending the text, we've got sendKeys. Okay. And then sendKeys, I need So, my search text is Java. sendKeys again is a command WebDriver. We'll be taking care of all This is just an introductory video, okay? So, I have written the first line. The next library is to So, you need to identify Identify it. I'm not getting it. I need to find it. That's written something Java. I guess it doesn't get enabled unless I write something. So, that's okay, that's absolutely fine. Now, I'll click on it. So, let me identify it now. Okay. So, that's search button. If you see here, it again has So, I'm gonna take that up, Control + C. Okay. And I'll save driver.findElement. I'll do that quickly now. Okay. By.id, again, that's an id. And id is Control + V. And then I have to click on it. I have to click on this element, so the function name is click. Now, I've clicked on it, which will help me searching. So, I'm gonna execute so that we are sure that Now, I have already called invokeBrowser, but I haven't called searchCourse. So, what I'm going to do is I'm gonna call searchCourse from invokeBrowser itself. Because after invoke, So, I'm gonna do that from here. I'm calling this function, Let's now run this class. Okay, maximize. Edureka coming up, okay. Type in Java, and then I think I've got some exception. Maybe that's the reason So, that is saying Selenium So, I've got this here at line number 33, when The possible reason is that it was getting enabled only after I got those options. So, maybe I'm gonna try Because I haven't covered explicit wait, so I'm gonna do a hack here. What I'm gonna do is I'm But before that, I just wanna make sure whether this element is So, that's the thing search button bottom, that's correct. Now, what I'm going to do which is I'm gonna insert some sleep so that this button gets enabled. I'm not placing explicit wait code because you won't understand So, Thread.sleep is a concept in Java that you can make your code Now, that value is in milliseconds. That's why 2,000 which means two second. I'll just make it three seconds. And whenever you use threading, there's a tendency that might yet occur. So, that's exception handling in Java. So, what I need to do this piece of code with try/catch. Who was doing this? My compiler is warning me that you haven't got Compiler did that for me. Control save. I'll close this window, this piece of code again. I should type Java. I should wait for three seconds so that this button gets enabled. Okay, and then click on it. So, let's see if it works or not. Yes, it is working. So, the wait has worked. Okay, so I need to scroll down. So, my next step is I'd Now, scroll down, again, But what I'm goin to do is I'm gonna write an easier piece of code Okay. So, what do I want in this search course. We've got the search course, and I will write a small so which we need JavaScript. Okay, we've got a question What is the difference and thread.sleep? See, guys, this is a huge which will be explained later. But for now just understand and I find giving a three-second sleep, it means my code is going It has to sleep for three seconds now. But when it comes to page synchronization, we haven't covered but if I'm placing 30 seconds here, it means that I'm allowing for any element to come up inside the DOM of this page to get loaded, but it doesn't mean that It might take zero seconds. The default value is zero second. That's a whole concept. By writing this line, what happens is, you know your DOM, data object model. You can just go through WebDriver will keep pulling DOM until it finds the element inside the DOM. For maximum, 30 seconds. Now, that element might it might occur in two Let's say it comes up in five second, so after five second, my control Because these waits, once written, they're applicable to every line of code inside the application, which They have to be written just once. They'll be applicable to the entire code, until and unless your Okay. So, that's a hard thing, because it means if you're it'll sleep for 30 second. No matter your element comes before that. But with implicit and we'll talk about that later, if I'm mentioning 30 second, Minimum time is zero second. And once my element is found, my execution will go to the next line. But in sleep, my execution until that sleep time is over. Alright. Okay. So, left click, and now So, what I'm going to do is I'm gonna quickly clear No worries, if you don't understand, this is a class, okay, which lets us execute a few Sorry, interface, not class. So, I'm gonna create this one, and I'm going to instantiate it here. Okay. So, let's say I'm saying That's called casting JavaScript executor. Okay, I'm casting my driver to executor, JavaScript executor. So, that's done. Now, what I have to do How do I scroll down? So, there's a function which will help me execute some script. So here, I need to scroll down. So, what I'm going to do that should be string, I will just scroll. Now, see, guys, I'm taking a random value on the basis of my experience. Don't worry, when I'll come to WebDriver, and we'll be talking in Selenium WebDriver in detail, I'll tell you about this. What I'm going to take is, let's say zero and thousands. So, that's gonna scroll vertically down. Okay. And I think I should the element I want. Now, once I scroll down, what is the next step? To click on weekend. So, let's expend this I'll click on search. And we'll just scroll down. I think it should come within this frame, and then I'm gonna inspect this checkbox which is important, okay. So, that's weekend. And if you see here, that's Now, I need to identify which element locator technique to use. So, I'm gonna use xpath because there's no other option here. Don't get worried, we'll talk I'm gonna make you expert in that. So, I'll take label, and And I'll show you to find that out. This is file path. I'm saying label. I'm creating relative xpath, okay. And then I'm seeing contains. I'm using xpath function. Text, comma, and the text was weekend. So, that's how I'm gonna find it out. Let's verify if it's working. So, I've got this if you can see, right? Label, we check for, and weekend, right? So, this is absolutely fine. I'm gonna use it as my xpath. And here, I'm gonna create xpath. Driver.findelement by .xpath. Okay. And my xpath is this, Control + V, which I already tested using my plugin. So, that was Firepath, guys. Just in case you missed So, there are two plugins, We'll talk about all the plugins later in the next tutorial, Okay, download both of And then what do I need to do. I need to click on the checkbox for which the function is. Again, click, Control + C. And when I click on it, I'll So, let's execute this script now. I'll close this window. And for today's class, Next time, when we'll come, we will see how we can use login form, I mean there's so many with your mouse and your keyboard manually on web applications. Search for Java. Okay. And then let's just scroll down. And then did you observe that? It scrolled down. And then it should click on weekend. Is it still happening? Did it click on weekend? Have I got only weekend matches? No, I don't think so. Start over, and we don't Search course, it comes here. Driver.findElement weekend. Label contains text is equal to text. I don't think so this line happened, otherwise I would have got There are eight batches. Let me execute the script again, and I'll quickly verify with the URL. No, URL will remain the same. One, two, three, four, There are eight batches here. Let's look at the code again. What did I miss? Let me find out. So here, I'm searching for the Then I'm scrolling down. And once I have scrolled down, I'm trying to find the element, driver.findElement by .xpath. I've got this, and then I want to click on it, that's it. Let's verify. If I click here, yes, it should work. Control save. Let's execute the script again. Okay. Okay, scroll. Oh, that's the reason. So, what we're doing is due to which it is not Okay. So, what I'm going to do I'm scrolling a lot here. Control save, and let's try this now. I'll just quickly close. 800 will work for us I guess. So, we'll talk about scroll, how to use the 0 800 or We can also use the element location, the point where element is located, and we can scroll down til that point. We can do that also, but we'll learn about that Yeah, now it worked, right? So, it clicked in here, and we've got the weekend batches. So, that's the beauty of Selenium. We can use anything we want. All the functions are When you're working with it, see, obviously, if you're that means you've decided and you're working on if you're watching this Please, my advice, please be patient. Okay, if you get exceptions, there must be something or the other which you haven't written Exceptions don't come on their own. There must be something If you're patient enough to just go through the stack trace, through the error, or the believe me, you'll get rid of it. You'll get the answer just Alright. So, that's it for my In the next tutorial, okay, if the tutorial is on WebDriver, we'll be learning about all So, if I talk about WebDriver, you've got dropdowns, you've you've got switching to alerts, And even before that, we need to know and have to find elements. So, when I'll be telling I'll be talking about all the eight element locator techniques. And then in the xpath, I'll tell you how you can become And no matter what, if I'll be telling you about which will make your life so easy that even if you encounter and nobody is able to work on it, you will be able to work with it. And another functions like, I've already covered then we'll be covering Then we'll be working checkboxes, radio buttons, et cetera. There's so many things to web driver. We can't complete it in one tutorial, so we'll have a couple I want you to stay tuned, alright. I hope you enjoyed this tutorial. We'll be coming up with the Thank you very much. Alright, guys. So, that's it from my end. What I'm going to do is... Alright, so I'm gonna quickly and let's make sure we Okay. So, handling elements and taking care of Edureka's Let's go to the next slide now. Okay, course details and customer reviews. Guys, Edureka has been from all over the world. If you just read out the name, okay, we've got Tom Tully here who says, &quot;I wanted to learn Selenium WebDriver &quot;in a live, real course, not self paced, &quot;so there would be &quot;Edureka accomplished this at a price &quot;far lower than in-person class. &quot;And as far as I know, they &quot;that has live lectures on this subject. &quot;Teacher was very knowledgeable. &quot;I learned basic uses of Selenium. &quot;No problem with me being &quot;They have US number.&quot; So, we've got a toll-free number also, and we've got 24x7 support. And there are just these four reviews. Believe me, there are so many reviews we've been getting form Okay. Teachers here, the instructors here, not just in Selenium, but they have got their expertise They've been working on in corporate sector, and that's how we choose So, if you want to find I'd like you to go to edureka.co. If you want to search about any course. You can search about the course. I'll quickly show you the page. So, hat's edureka.co. And through the example if you go to edueraka.co, you can search for any course here. Alright, these are our trending courses and popular courses. Okay, we've got instructions, we've got 24x7 support, we've got flexible schedule, and of course live classes. What is the benefit of live classes? You can ask your questions then and there. So, there are more reviews here. You can find them out, alright, not just about Selenium, Okay, I'll just quickly say thank you, and thank you very much for staying intact for these three long hours. I hope you enjoyed today's class. Till we come back for Bye bye. I hope you enjoyed listening to this video. Please be kind enough to like it. And you can comment any of and we will reply to them at the earliest. Do look out for more and subscribe to our Edureka Happy learning.