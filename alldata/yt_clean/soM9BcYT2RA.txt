Flutter has been forked, and there is now a second version of Flutter, if you want to call it like this, called Flock, which will be developed and evolved independent from the original Flutter. Now, what does this mean and why is this happening? Well, there is a blog post published by the team that is doing that second version, so the team that did fork Flutter, and you find a link to it below the video, of course, if you want to read it on your own. Now, just to make sure we're all on the same page, Flutter, of course, is this vastly popular framework and tool and technology, if you want to call it like this, you can use to build cross-platform applications. Most importantly, iOS and Android applications. You can build applications for multiple operating systems, multiple platforms, based on one single code base. That's the big selling point of Flutter, just as it is, for example, for React Native, though there are differences, but, yeah, that's the big selling point, and that's why Flutter is extremely popular. For example, my Flutter course alone, which is, of course, not the only resource out there, though it's a pretty good one, but my Flutter course alone has attracted more than 300,000 students who wanted to learn Flutter over all those years since I published it. And, of course, there are way more Flutter developers, because obviously not everyone did take my course, but you can see by that number alone that there is quite a decent interest in Flutter, and that there are many people working with Flutter. And you cannot just build iOS and Android apps with Flutter. Instead, it actually supports multiple platforms. You can also build desktop apps with Flutter. For Windows, macOS, and Linux, you can build web apps with Flutter, though I will say that, at least in my experience, support for those different platforms is not equally good. For example, I never really used Flutter to build web applications, because I don't really like the approach Flutter is taking there. I think there are better ways of building web applications than using Flutter, but for mobile apps, for example, it's amazing. That's also what my course, for example, focuses on for that reason. But this cross-platform support and the unequal quality of support for these different platforms is one of the main reasons why this fork was created. And now, just to make sure that it's very clear what exactly this means, a fork essentially means that a copy of some GitHub project or some project in general is created. In this case, a copy of Flutter is created. A recent snapshot of the Flutter project on GitHub was taken, and now the Flock team is continuing development of Flutter under the name Flock based on that snapshot. So they basically took a copy of the project as a base, and now they'll build their own project, their own version of Flutter on top of that snapshot. That's what's happening. And they're doing this according to their blog post because they think, they claim that the Flutter team is understaffed. It hasn't grown. It actually seems like it has shrunk over the recent years, at least slightly. Maybe it's grown a bit now, but it definitely did not grow as much as Flutter did. At least that's what they state here. And since Flutter got more popular, there now is this problem where we don't have a team big enough to support the huge user base of Flutter. That's at least what they claim in this blog post here. They also argue that Google seems to have other points of interest nowadays with AI, which is probably fair, and therefore Flutter, at least according to them, might not be a high enough priority for Google. Now, the problem the Flog team sees with that is that the number of developers working on the Flutter team is not high enough to basically support all the issues or handle all the issues that are opened, handle all the pull requests that are opened, and so on. And therefore, Flutter development, at least in some areas, seems pretty stagnant. They also describe the Flutter team as not very welcoming when it comes to external contributions to the Flutter framework, which adds to the problem of certain issues not getting tackled and certain platforms not getting the love they should get, so that Flutter theoretically supports many different platforms, but practically doesn't really do At least not very well. And that at least is also something I feel like is the case. I always felt like Flutter grew a bit too fast or tried a bit too much to become this huge we-handle-all-platforms thing. In my very personal limited experience, the main benefit of Flutter always was that it was really great, a great choice, and still is, for building mobile apps, Android and iOS. Flutter is really great at that. And I would have loved if the Flutter team focused on just that years ago already. If they did not try to become this all-platform thing, because I think for many platforms there are better choices than Flutter, but for mobile apps, it's amazing. And if they would have doubled down on that and really pushed that and made sure that Flutter had a clean codebase and a clean widget catalog, because these days it's a bit cluttered, if they really would have focused on that, I would have loved that. Now I think like Flutter in its current state is still an amazing choice for mobile apps, but they could be even better if they would have focused on just that. But these of course are just my two cents and there definitely will be people out there who are building desktop apps with Flutter and who love it. So it might be great for that too, it's just not my personal experience. And combine that with the team size, the number of issues and contributions, which are not very much appreciated as it sounds, and which are not really handled that well as it sounds, at least in that blog post, combine all these things and you indeed have the description of a project, of a framework that does well in certain regards, but not so much in other aspects. And that's why the Flock people created that fork, because they want to do it better. Specifically, their goal is to make Flutter or Flock really open source. They want to work with the community, they probably need to, because it does not sound like the Flock team is like a huge team instead. The idea really is to make Flutter really open source and develop it together with the community. They're asking for contributions and they want to build a better Flutter, therefore, you could say. And therefore, they are asking for different kinds of contributions as an alpha tester, as a reviewer, as a lead, because in the end, the idea is to build a Flutter together with the community. So that's the project. What are my thoughts on that? Well, as I mentioned, Flutter, like all big projects, has certain problems and it probably is true that Google has different priorities, which does not mean that they're dropping Flutter. Of course, it just means that it does not get as much love and support, financial support, team size, as it probably should get. At the same time, I'm very skeptical that Flock will really help here. I mean, it really needs to gain a lot of traction for the plan they have to work because they need to get a lot of contributions and those contributions must be of high quality. They must be integrated well. There must be an overall vision to really develop Flock in a good and focused way because if you're just getting a bunch of contributions and you don't have like a clear plan, you might end up with all kinds of features and building blocks and things that don't really work together that well. You might end up with a code base that's messy and where some feature exists on one platform but not on another and this cross-platform idea might get lost even more. So there definitely are dangers regarding that. Now, of course, there also are chances. If this does work out, it could, of course, make Flutter better. It could be a better version of Flutter. At the same time though, it's important to keep in mind that Flutter has a team, a decently sized team that is actively working on it. It is getting maintained and developed. It is getting new features and depending on what you're using Flutter for, you might have an amazing Flutter experience already because as I said, for building mobile apps, it's great in my experience. So you might not have any problems Flock would potentially solve. Of course, though, if you are looking to build applications that really run on all platforms with Flutter, then Flock might be great but that also is something we have yet to see because they're just getting started. And of course, it's always also a bit dangerous to split a community like this. or to try to split a community like this. Because even though the flutter team might not be very welcoming, those contributions might not be handled that well, it's of course probably also not good if flutter gets way less contributions because then we might end up with two versions of flutter, flutter and flock, which both individually are not that great because the flock team might be too small or might not be able to like develop an overall vision and make sure that all these different contributions they get are in line and work together that well and the flutter team might not be getting the feedback they need to push flutter in the right direction. That is at least one danger I see. It's also very much possible that flock is just a short lived thing and it does not gain any significant traction and we'll have forgotten about it soon. That is definitely possible. Nonetheless it is definitely an interesting project. It's a step that definitely surprised me which is why I wanted to share it with you and I'm super interested in your thoughts on this of course. Please share them in the comments, let me know what you think about this because it definitely is an interesting event to put it like this.