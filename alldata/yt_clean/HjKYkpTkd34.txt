It's simpler than you think. Unless you already think it's simple. In which case I like the way you think. We're gonna build a full tech stack made The goal: to allow a non-tech founder to build code development offers. If you use this tech stack, whatever you can't Or you just didn't read the instructions Just for context, my name's Adrian and I've years. I'd like to think I know my way around a for me. The condition this time is that I can only is function, not simplicity or cost-saving. No noobs or cheapskates allowed. Just kidding, all these tools have free trials. The functions we want to cover are: Frontend development User authentication, and I don't know when you're watching, but of filming this, these are damn good pieces Are they the only great options? No, there's always another - and that's If you're the type that goes from video got a recommendation: stop looking for recommendations. If you're like most non-tech founders getting good enough for you. Let's look at the first component. Frontend Development Bubble for web apps As a rule, most front-end app builders give of ready-made elements that you can arrange You have design elements that determine how You have logic elements that determine how experience. Since we're building a function-focused that offers the most variety of functions, For that reason, I recommend Bubble for web-based Their builders let you put together very technical you have a lot of freedom to create apps that input. If you can imagine it, Bubble and Draftbit That can't be said for every drag-and-drop Draftbit is a dedicated frontend builder, be your backend. You can use Bubble, but, - hehe, bubble butt with a dedicated backend provider. That brings us to the second component: For the only no-code backend you'll ever Your backend is where all the data gets stored Those functions alone would mean a very simple manual, that's pretty much what it lets It also offers suggestions for how to structure quite a few different options: It's serviceable, but Bubble doesn't come offers. Let's take a look. Those API calls cover a lot of different functions, I'm not hating at all. I'm not trying to burst your Bubble. Bubble is not marketed as an all-in-one solution. It sells itself as a premier frontend builder Thankfully, Bubble and Draftbit know this on their platform with a Backendless database They both have step-by-step guides for non-tech But what about &quot;insert whatever backend tool Sure, they probably work. There are a few established tier 1 backend But you just need one. Is Backendless good enough? I always say check a developer's portfolio Let's look at Backendless's portfolio. Look at this: Bank al Etihad - bnk ltHd - Apps Backendless supports a full-fledged banking You're talking about strict security requirements, users, and integrations with QR generators, Backendless can handle all that, in addition If you want to use another backend provider and see what they're capable of. But for now, Backendless it is. Front and backend done. Let's make it easy on our users with the User authentication Say hello to Auth0 and Firebase, two of the platforms on the market. They are staples even in code-based tech stacks Customizing login protocols and security settings specialize in that area. Say you want to authenticate via SMS or a Or you have multiple apps and sites and you them. Good luck trying to do that yourself. The simplest, fastest way to implement complex like Auth0 or Firebase. If your app deals with sensitive data, you'll see how a non-tech founder is gonna do that do it for you. You just focus on the processes you want to They've got a list of use cases, and if on the kind of app you want to build, those Here's where we run into a small problem. Bubble can easily connect to Auth0 and Firebase, Not really, not yet, anyway. Someone had that exact same question and look Those cheeky monkeys. So, we're in a bit of a pickle. Say I want this tech stack to use Draftbit, as my authentication service. However, they don't have pre-built APIs Normally, I'll just sigh and write a custom A perfect segue into our final tech stack Automation and Integration knows everyone and is always open to introducing For a price! Zapier acts as a middleman to transfer data The beauty of Zapier is that it can be easily any use case you can think of. And whatever your Zapier account is connected You can now customize the flow of data between say when a user makes a request, or automatically Then again, who needs to integrate with 5000 There are alternatives to Zapier. You might look at something like Integrately They've "only" got 1000 integrations You have more leeway with your choice, the tool in your tech stack, so the moment you So, Bubble or Draftbit as your frontend Auth0 or Firebase for user authentication integration and data automation That is a hell of a tech stack and if you you can build a very complex app. So the question is, do you actually need to You may not need a full-blown no-code tech Take a look at these two pictures: The picture on the left is a goddamn wrench They're all specialized, meaning you need different sizes. The adjustable wrench on the right may not by itself, it lets you do a good enough job Your tech stack should only be as complicated There's levels to tech stacks based on complexity. If your project is going to be really simple, like Bubble for web or Adalo for mobile, since If your project needs advanced backend logic, or any suitable alternative custom whatever else that you can't build suitable alternative If you don't need it, don't use it. You always want to consolidate into fewer So how do you know what you'll need? At the very least, this means doing some thorough know beforehand what you need to at least And with that, I'd like to invite you to workshop in the form of a Youtube video. When we get a new client, we spend a day planning We make sure we understand our target users needs to offer initially, and nothing more I still haven't found a smooth way to end I have a request: for those who do have experience - what would you give it out of ten, are there any components I left out? Please subscribe and like the video, see you