My most popular video since a recommendation of no code app This is the TL:DR version of what I said: Everyone was cool, and we And then the bubble burst. On May 1st 2023, Bubble introduced an It's been...fairly unpopular. It's a big change, and it was But has it made me change my mind about No, not really. But also, yes, kind of. A quick look at Bubble's atom bomb Bubble now charges based on Essentially, how much your And every little thing now has a price. User taps a button - workload units. User goes back? - more workload units. Problem is this was never a so users didn't pay attention Why would they? Well, now they have to - the new plan That nukes your business model more to run your app than you On top of that, Bubble doesn't let you export For many users like Jordan Ryan, George Carlin Why am I still kind of OK with Bubble? Existing users are suffering - To a new user who signs up today It's just 'the pricing system'. Aside from this, Bubble is still Bubble leading in terms of flexibility New founders will build apps within I predict that apps with subscriptions in the hundreds of dollars will The lack of transparency with workload But I can't imagine the Bubble team will leave us Or they won't - and they implode from their You gotta remember this is a You...are kind of at their mercy. You can use alternative no code builders, but they could pull a Bubble too - if it Why am I not OK with Bubble? If it means more revenue, why wouldn't they? Because it's possible to balance additional Bubble knew what the change meant If you're gonna implement changes this drastic, I think more transparency AKA, how the f**k do you rack up While in theory any no code app builder And you never realize how exposed you are to vendor lock-in until you realize how I understand how that makes some So, if you're one of those, here are can use to build robust and complex web apps. 1. First use case: you want to own your For the first use case, we have the non-tech possible and might want to hire a developer They've also seen the dangers of being locked f**k that. They prioritize function and freedom and they're prepared to put in the work. For them, I'd recommend Wappler. Wappler is a low code platform no coding knowledge to build complex They have the usual: visual front end and logic builders, and Here are key differences: You can access your source code and files any they pull a Bubble, you can tell them to get There's no hosting option like on your own external hosting - good thing Having a low code option makes hiring feasible - as long as you've done someone like me can just take over and To be fair, I think the learning curve to fully utilize Wappler is steeper I've always thought Bubble to reach the limits of no code development. I still do - as long as they can But I think Wappler bridges the gap between no I recommend going through their tutorial at least once and keeping it open as Take a look at their pricing keeping I think it's very reasonably priced. 3. WeWeb + a backend of your choice For the second use case, we have the for as long as possible and has no doesn't have to be easily portable That saves you the trouble of learning Wappler. For your front end, you'll be using WeWeb. WeWeb is a no code front end most of the functionality of Bubble with a You can: Build complex workflows. Connect to all the usual third party APIs And upload your own elements if you want to. WeWeb also lets you export your source but it can be done which is Just like Wappler, WeWeb doesn't host or provide which you want to use - the most common stack I've I suggest taking a look at WeWeb's that have been built with it - some Their pricing is pretty comparable to Wappler With Wappler, it's going to be easier to when the time comes. If you're sure that end builder to master, and Wappler's 3. If you want a web app with The last use case is a founder that Instead of using a generalist no code builder, choose a platform that specializes If it's a common app type, there will be. And specialized boilerplates are more complete Also, their support team can serve you better since they're specifically trained One super common example - a marketplace app. You have a few platforms to choose Sharetribe. They handle technical parts of user management listing management They've helped over 1000 marketplaces If you've got a new idea to where they've got existing templates that As you grow and want to further customize where a developer can add third party integrations You'd never get this level of specialized There are other specialty Say you want an ecommerce app - go with Shopify. Say you want to build an internal tool for I don't think I can cover all the specific I don't want to. Because inevitably, whatever I recommend, ten people will come along asking I don't believe in giving someone a Check out No-Code.Tech, a no code tool aggregator They've got a curated database tentatively every use case you can think of. At least, I've never had a moment No Code Tech didn't have some suggestions for me. So if you think you have a common use case, along with everything else So, after looking at all these options... What would I suggest for the I'm going to put myself in If I understand you correctly, I'm not sure what I want to build I want to keep costs low in case I fail, and a developer down the line, I don't First, understand that the whole low - the alternative is hiring a When you compare it that way, suddenly the And if you're already going to do you really need to penny pinch even more? Why not go for the most robust option? It's like when companies outsource They're already getting it for dirt cheap. Some directors get blinded by that the cheap - and even if the project succeeds Don't be that director. So with that said, I'd go with Wappler. You'll need to learn how to use the platform but once you get things going, you And because it's in HTML and CSS, once you've taken it as far as you At that point, you already know you have becomes something worth paying for, since Now, I take it when you start development, you'll I'd like to introduce you to the The difference between the two is that an MLP it's supposed to trigger a positive It means more work, but being smart about it. So just a bit more work, gets If that sounds good, check out my video If you'd like to get a refresher on MVP I hope you found these recommendations a like and comment below - what questions about