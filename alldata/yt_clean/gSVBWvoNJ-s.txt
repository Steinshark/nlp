A study was done by a consulting firm, projects that were developed using agile failure rate than those that do not. Now this study is probably biased. They surveyed 600 software And it does seem like businesses the actual workforce that has to hate what Agile has become. Agile is a development methodology The idea of doing projects in small cycle and it needs to follow the Agile And look, if you actually definition of Agile, it's good. That's not the problem. The problem is that businesses have come blindly without any project context Nowadays, Agile is practiced like this. Devs get a list of tasks that weeks, also known as a sprint. Objective one is to get the product out And objective two is to communicate And I think that is problem number one. an Agile environment, if you are of Agile, you have a few meetings. You'll have a sprint planning meeting, Then you have daily standups then after the two weeks a sprint review to discuss the You also have a sprint retrospective. This is where you reflect you have something called where you review the backlog. And there's a whole bunch You have presentations, demos, one There is a lot of communication. And are all of these meetings actually No. In fact, this is the only At regular intervals, the team reflects on and adjusts its behavior accordingly. This was on the subreddit ExperienceDevs. Since switching to Scrum, my entire This is my fifth company I have done Scrum However, since switching to experienced one huge problem. All we do is go to meetings. Our daily standups are 15 minutes, which 5 hours, sprint planning for 1. 5 hours, long retros. Demos, process meetings, values peer meetings, one on one department For reference, prior to Scrum, I Now I average 13 hours of meetings a week. again, I don't think Agile here actually interpret Agile. And interestingly in this thread, a yes, they have worked in an environment This person responded, Just left a That's another framework. What a effing farce. Literally 60 percent of sprints Great username there as well. but often one of the major complaints Like with this post, it says, Team What can I do? Someone responded, Too many meetings It means that meetings aren't effective. Figure out why they don't think meetings effective or nobody's learning anything and the issue here is that often This is a conversation that I've They will bring up the issues of scrum master or project manager. And often the scrum master or the project that's agile, that's the framework. Which leads me to my So this Reddit thread is titled, days are nothing but meetings. And someone asked OP, what would If you aren't getting or And the response from OP was brought this up in the retro. the people on the team were However, the engineering manager, And the scrum master were So needless to say, I haven't And yes, you can be vocal about Project managers just The project managers or Scrum Masters of And please let me know your opinion I've always thought this, but I was obviously don't want to hurt the But the way that role is set up, by leadership to be spies. I feel crazy for saying that. And I obviously don't think It just feels like they are imposters. Just the way that they interact It just feels like they Like they're just meant to go The other thing as well is that developers with experience. So it is hard for you to get actual creating tasks, chatting about like they don't know what's going on. and all they do is care And don't get me wrong. I've known some amazing project managers, managers are often really experienced Because the pool of experienced And then the pool of experienced project management is even smaller. This Medium article titled Good Scrum And the person who wrote it Good Scrum Masters care for people, He goes on to say, they try to get the as detailed as possible to create But this approach doesn't pay off because factory and an unhappy zombie scrum this was a popular thread on Reddit where their frustrations with project managers. anyone else getting taken over by The poster says that their company and they go on to say this. This person came from a company little company of 800 employees. Spent a few weeks reconfiguring on all the development teams. She and her direct report, the Scrum IT PMs that went out and got a Scrum job market and seem to have no trust or because they really don't understand it. And the responses below were pretty sad. They were concerning. One developer said, I've been You have no say whatsoever. You either get in line and play fighting this will brand you as hard Harsh reality, but the And the response to that was, Second as OP and I believe scrum masters are I try to keep this channel PG I'm trying to grow and I think the But some posts on Reddit So, in the same thread, another dev responded. I am in a similar situation. In my 10 years of experience, I But with this new management day to finish my tasks quicker. And I feel burnt out. My life feels like it and the life restarts every And there were so many responses of people So what do we as software engineers do? I don't really have a I can't say if your company is using Because the job market is terrible. So if you do something like that, branded as a developer who is Cool. And not fitting the core And when it comes to layoffs, and is that fight really and sure, I'm sure there are other done right is fine most of the time. this post is titled Waterfall is another project phase must be complete before With little to no overlap or generally much larger than Agile. Waterfall is older and it does div is actually loving it. They say, I'm secretly loving it. This is the first contract where trying to piece together half baked Everything is regularly Nothing gets released until No sprints. We celebrate every release. Client gives feedback. Someone responded with They said, Waterfall done well and the entire issue is that Not that Agile is a bad methodology. someone also said, you're just describing True Waterfall is designing Agile is doing it feature by Scrum gets a lot of hype, but are not what Agile is about, So is a time to move on from If someone could come up 0 that actually puts the developers and not the company or the customers, thank you so much for watching. If you like my content, I'll see you on the next one. Bye.