Hi everyone! My name is Patrick Akil and in this episode we cover So how to go and we slice open the topic of leetcode. Very controversial. Is leetcode a good thing or a bad thing? Find out. Joining me today is Ilya Pimenov, senior And just a great guy in general. So enjoy this site coding. I was actually on LinkedIn yesterday That's a guy and I was actually quite a good track And his question was, if you were to start software engineering, first from an engineer back, And in the other people who were like QA, what have you to transition But the biggest amount of votes was full stack engineering, and I did Why not? I don't know, like full stack really good Well as well as frontend. Well. And to start off full stack AI, you get a complete understanding But to start off with well, I mean, I do unconsciously think that most people, most unconsciously start as full stack some while dependent, like I, you start or you didn't, or you like, and then you somehow what do you do with the job? You just do everything I very often sound like Python sharpish. Then ML Or you just make things work together, You're not really good at, any particular fields you like? Very, on the surface of things. But you solve the technical problem essentially as a full stack engineer, maybe I was very biased it was not with this traditional computer I had more of a data science background, where people were their consultants and their task was to educate me And they were like, okay, And I was like a little bit here and there because we had an exercise in university. And they were like, to start off with, and I was like, okay, So I started with more backend That's how I got into that, comfortable with that. Then I got into this consultancy organization we don't really have that many backend We have this, project with, Have you with a little, a little bit Yeah. And at that time I was like, I want to learn everything still I do I think if anything, the best Look, I've been developing I started when I was 17, I joined Sun Microsystems and I still everyday feel like Yeah, not that complicated or whatnot, but just like I like exposure I want to continue to be relevant, to not just smash things, like, continuously confuses me. Like, when people sort of run around yeah, we need to build this and that, Again? I find the people, in RL. So most of the things in, software like, I would say probably like, maybe not 90. It's more like gluing things Yeah. Unless you go into like really, really deep stuff, in the back end. So, yeah, I been, something for a company and, like, very big, risk exposure. Most of the things that just like you type some texts and instruct Yeah, I really struggled to find a complexity. it's more fun than the complexity is like to go into something like, and then they procrastinate trying to find somebody else Yeah. By the bullets, spent two, three days and they would have been. Okay. You saw that particular business need, Yeah. It's interesting that you cut that open And then it's simple. And then it kind of gets automatic where you lose that challenge sense. And that's when I step away and I'm like, or a new challenge? Yeah. And then another challenge could be And so let's say I could do another backend assignment and do a project like that specifically, I, for example, moved to IoT and there were very different challenges or that's what I've done of not specifically back in engineering, What is around that? Yeah. yeah. I have no experience So I work a lot with product managers ones at the same time. But you've never found, the allure. I guess I was always afraid I'm like, I really have to talk and find the joy in that. If I haven't recently learned with whom I work, like with mirror that he considers him himself And I was like very surprised by that. Like, you're like all over the place, like husband and night, yeah. I also consider myself an introvert. And yesterday I had a lot of sessions. I was But I like the friction and I like trying instead of, let's say, from the developer And now I feel like So then I feel like, other Like maybe, maybe like I'm still trying to find my drive and see if this is actually, something I'm good at. people are telling me I mean, I don't see it so I like challenging myself And also, like with development, am I going to look to the next challenge I'm not sure yet. That is like, there seems to be like two schools of thought, that, and then some of them are better, And then to become like a stronger self you can either, like focus on those that are weaker you'll become a good or you can just double down fully neglect the weak ones, And I guess, What more like because you've gone more of this What still drives you. So then was like most interesting Well, I mean, I just to give some retrospective, That's right. because I've been working as, engineer when I was working at eBay, I got to what But at eBay, it was, a bit odd, So I was like, people manage. And secondly, it's something between both. I think sometimes it's called Okay. This guy had people reporting to me. both. like, PhDs and, full time employees and contractors. And I ran a part of the product so I worked closely and do something myself and also measure and things like that. and, I did that for quite some time, But at the same time, I don't truly I challenge more in that amount of work and, internal communication challenging, just more like the working focus on that is more work. Yeah. Yeah. and then I, I was asked to join this, It's basically, CTO for, venture backed, startup. That was put in a vertical marketplace. but it was like a full greenfield project nothing to zero at the beginning. So hands on CTO. yeah. Yeah. Well, because initially there's like. No, but it looks like, two people from, another project they were doing, And so I'm like, I can make sure Okay. Because like all the ad, and everything else was written for it, the other gentleman was, CTO that is, eventual app. He was very comfortable and we started building, yeah, it was just a lot of, it was again, a lot of like, work. And then we start hiring with more people It became, got a bit more attention Yeah. I think by the, I think 20 people or something. okay. We had very informal arrangement. The arrangements were sometime you had managing also expectations and there was some people management, Oh, yeah. Anyway, long story short, I am, moving away from being able and, I didn't fully like that, Okay. That, like, I some they tried to jump into management, Yeah, yeah. Wonder that, I mean, I just wanted to do or like, and, be engaged while doing that. and I thought that, okay, back And I thought that at least five years in like, zero before, and then I will enjoy it quite a lot. But then I wouldn't need a slightly bigger field to play in. Okay? Because, like, not a startup, Well, I mean, you can be As a staff engineer, to be able to solve those problems I mean, you could call yourself Anything else. But like in reality, you'll be just a good senior and you'll be But you wouldn't be solving this because, very often you just have to jump into the field which is mixed historical solutions or architecture, to navigate the politics of the company, Yeah. sometimes performance to try to make some part of the org work like, formally, directly part of the one, and I find those, because I feel like that I do have, like, an array of tools. Yeah, that I collected over the years. and some of them are, that I can utilize not to address those, And I find it fun. It's more like I almost say those, like, How can I solve this? How can I make it work that So that is that, there are days you have something that will make business that will be able to sell And we are able to build to the capacity of people and the skills And those that go to the further things like intersect at the same time, like clicks and work through the organization and you feel like, Puzzle solved. And you can like, very nicely on the tail of, And that's what I have. Like, how do I get here? I don't remember, it's more from the And I mean, a lot of what you said and I don't know what my next role is going to be, and at some point it becomes more mundane but once you solve them, it's And yeah, I don't think this routine of so I'm trying out product management. I'm having a lot of fun with it, or if this is, let's say, a longer term Another part could be engineering into what you've experienced. And that's more personal development, but also budgeting with regards to what and finding kind of buying And then the path of developer advocacy, which is more of podcasting I, I personally don't like, And I saw people that are good at it but I somehow just don't feel it's, Yeah. Like, I think it's, it's, almost impolite to the industry yeah. I mean, I think, give back in whatever form, So I like talking. I don't really like reading. So then writing, I mean, I, I've learned that it would Yeah. But yeah, And especially when you said also at that age, to jump For me, it's very interesting I'm on the on the part of the people they might have jumped too early. I'm not sure. And I, I do miss kind of this fulfillment That's what I miss I don't think you can be early and ideally And if you're ready, Yeah, it's almost always like this but you also can go back. I mean, I have to go back and find, yeah. But I wonder, like, four years of, to give an example, that, just projecting Ilia forward I don't, feel like growing into, management positions, I don't find it interesting. If anything. I guess, like, even at, like 40 or 50, just starting ventures, like, going, like, from 0 to 1, but, like, It's not necessarily the strongest or where I get So Alexa, one of the problems. But once the problem is solved, I slowly Yeah, I recognized, so in that sense, and I, over the years, trained myself to see towards the, like to stick around, But I don't feel like that's, like, I feel like I'm much better at, like, Well, we'll keep on doing in in that frame and how potentially want to, found, another company myself. The best thing you can have is, And I see the first year. 2 or 3. Yeah. Of, company or whatever you'll be You'll be a different engaged. And that's if you like the tech side. They will some like hustler on board but, there'll be lots of things So that's why I think the current track potential out of my vision for myself. So for that, I wonder, like, That's exactly why I'm hesitant, Where? I don't know, it's I guess that's always been in there. I want to build something on my own, from scratch, from 0 to 1, make it scale And the IC role and skills are incredibly Yeah, I don't want to lose that. That's why I'm kind of hesitant and I try and kind of get a feel So then I can also judge what is not going well. I know a lot of kind of everything. Yeah. But I still need depth. That's true. That's why I'm hesitant in going all in I want of that's really you need the depth to start companies I mean the people that started companies I just start it. Yeah, yeah. I mean, you start and then you can just continue But I feel like, a little bit about you that I do I mean, you've been the full stack back That's very good. all around skillset. Like, with communicating with them, just talk the language that, Yeah. For me, like, that was a bit of a eye venture backed, company that, Yeah, people find that very important. They talk a lot about that because, like, how are we going to build this people that are bringing the money, they're thinking about the business, so in that sense, product management which I think is cool I'm trying it. And I feel like, I mean, this podcast I've worked on my communication, now of that labor in the conversation Yeah, like I can see. And they tell me like it's very it's and it might not have been clear And when I do, it just clicks. And I'm able to communicate And that's really cool to see. But I also know from the conversations I don't have the same depth that you have I mean, just by looking at number of years you're definitely ahead of that. And I'm very curious seamlessly challenge yourself to kind of I guess many like crippling imposter syndrome, just like, And partially as I like, I feel like now the time I spent because, like, whatever I was doing, five years plus like seven years people don't read, which is fine. But at the same time, and somehow become much more brave individual, into any new field right away Like, I know, to give you an example, I, I happen to work as, data scientist And back when I did it, and I was in Amsterdam, essentially what we are doing with, listening to the internet traffic of, because, oh, technical draft. When you open a web page on the internet, Right, like if you open landmark spots, the way those ads, unpopulated request goes from the server to the and all the open RTP protocol, to with the stamp of your personal your data so that people that are connect guess where to bid and not bid, Yeah. And then they'll like say like, okay, ten, which is like 1000, of dollar or a cent but then has bid wins and that bidder pays the second bid so that how it works. But essentially with any ad, the request and people that are trying to bid on that so if you build a company it can just like listen to all the web Okay. So, and I think nowadays it's not straightforward and, well, it's legal, But essentially, whole country was Netherlands, U.S. and Russia. And, we then tried to profile how many people are there behind a particular IP address, How many people are living there? What are the ages? And you can also like deduce that also we couple all your devices together. We will say, okay, this is your smart TV, Because if you travel between because you travel between your home network and Netherlands, And then it goes to the same device which is sent to this, exchange. on another network And then also like, hey, it's you are there and we can do your there. We say this device showing up that and during the work hours, this device So it's you and you are one person and you know that. Yeah. Lancer shot isn't that. We, try to like to sell sneakers or whatnot. Yeah, but, BigQuery came to be about or like, or, Databricks and, using MapReduce. Okay. Good old MapReduce, Er, but it was the MapReduce. and you like literally bought EC2 instances from, Amazon and you ran to your data It took forever, was very to work with as well. Yeah. Because like MapReduce You can map things 1 to 1, like a sequence of things So in order to express data pipelines, you would, use, things like closure to do this and map them to the jobs So did that I so that I stopped doing that very different type of work, with the also ads, but like on the server side, And so the traffic of people forward to nowadays I'm always like it And I have to say like, but you are an engineer, probably have to Yeah. And if you don't understand them, well, it's going to play against you you wouldn't be able to, advocate or talk you potentially can build to them, especially if you are more like Yeah. specialized in the backend. So I was like, oh, okay. I think I'll have to, dive back into that field again So yeah, I am now trying to see how to build your own And I feel very out of my depth doing anything like that start with the baby steps with, almost inevitably we were able to do of experience programing, like maybe some the math is a bit more complicated than it has to be Linear algebra. Yeah. And you had a university of you spend but I have no advantage over anybody who maybe I'm more comfortable with, not my vim and stuff like that, and the amount of time it will take me At the same time, it will take any other engineer with one I think you might be doing yourself because the like the perspective you can leverage that in whatever Like if I really pick up something If I've picked up many things from scratch you get better. And actually the comfort zone, going through those steps. And especially when I did pair program and this person Yeah. And after I did it, I was like, well, but now we achieve this. So I felt good. And then at some point and doing it more often. In the beginning I was like, okay, where do I start? And then you learn to step back but theoretically break it down your head Actually start in the first place Like those things I feel like helped me But you're right, and you don't actually know how it works, you want to go with If no one has ever done that from an Yeah, yeah, maybe it's true. Maybe you have to kind of like, with a getting out of the comfort zone if you don't dwell around I'm gonna go right Mostly because I don't know if I need it. Yeah. And I'm not sure if I care enough You don't care about other lives. Come on. Like I like using them. Yeah, but do I really want to know Or do I want to make something That's for me, the difference? It annoys me that I don't fully understand I can see that every time. I'm like looking at a pair eyes Prompt engineering. I'm like, I feel so annoyed that Yeah, like I'm curious. But to be effective, let's say something that analyzes a PDF based on the contents of the PDF, Yeah, the right answer I would, I think, be able to build that knowing what the model actually does And sure, I would have to go in depth but I think I could execute. I might not understand the full thing. I'm not sure if I need to, or I don't want to understand And that's definitely different from you Yeah, I kind of do like, I like I don't So if it feels like magic, I'm like, Yeah, yeah. Like, yeah. And I think that's I mean, that's probably I think you have a, a deeper path on the I0 than me so far, because I've always had How do I execute? And sure, I go deep in, in certain Fundamentals training. And I need that knowledge So I got the knowledge Like I still can go deeper probably. so I execute based on what I need to do Maybe I would have interested me But for some reason And for you, Yeah. Yeah. Right. Yeah. but I do A lot of people will want to be productive And I've seen, let's say, variations want to go with approach Yeah, a backend engineer into backend engineering, and then want to be a Google cloud When it comes to the infrastructure whatever you have that is running. And I don't think there's a bad path I somehow I think, focus around disciplines, around back and engineering, it always felt and still does that in, in a growing business, the most impact as an engineer, the things that together Yeah. I think like about ten years ago a really, strong advantage if your UI and UX were, like, top notch. Okay. But but now. Yeah, everybody's UI and UX is top notch. It's like, just became the new normal. and you don't surprise anybody get a huge outsized That's interesting. But it's my subjective feeling. well, at the backend sounds you always, They will probably have a have a back Some points. Yeah. That's interesting for me. The like I have done In the end it ended up being two, And I now really appreciate people And I do agree. Let's say I don't know but there are a lot of frontend engineers Like I appreciate that because they know to JavaScript or a lot of things And they're very, very good at classifying with the rest of the requirements Yeah. and I'm not sure if that's a frontend specific skill I think it just so yeah, good engineering. All together. But I, feel like there's engineers, like, Like what kind of threads run, or will they to slow, and how to access, they will start writing rust and then, tie this together with their, and that's like a whole new depth yeah, that's new, that's like, And that's also like super hardcore, sometimes there's like, yeah, deep like, well, yeah, it's getting depth I think, to what we had 5 to 10 years ago is getting more and more depth They're like, Oh, you might Oh, we do everything on the front end Yeah. Oh really funny to see. Yeah. Yeah. But I want to touch on interviewing you started at that CTO position You you've grown the team Yeah. And probably in your career you've been Yeah. And I told you in the Reddit communities that I'm in At least that's What do you think about LeetCode? I love leetcode. Moreover, Like everywhere. if anything, I think companies that don't, ask questions, they could, they would have, like, that we were able Yeah. So, Oh, yeah. I'll try to break down why people use leetcode in interviews Like, like you have an interview process, you want them, to solve a technical And no, you want to hire them for now, So you also want them to be able to grow that it's going to appear, as a company, no, maybe the marketplaces may be, building construction or whatnot, or maybe, selling luxury goods, Something like Miro, You have to understand better and better. Maybe you're in Texas, and you should be able to navigate that. How can I verify that? You're capable to acquire a knowledge in some domain and then operate Yeah. Like, well, I need some domain and then can, reason about because like, builds, a no factories, it's unreasonable to expect you to have any domain knowledge and you wouldn't build it. So you want to have a shared field, like, algorithms and stuff like that, for all software engineers, So it's very, democratic to ask things in this field to expect you to know that field, So you are able to tap into a big pool of, the company to, like, expand your income and funnel they're able to come in because you, for example, you'll be, please do build this in, turbo C, The microcontroller and the task is that, the lights which go up and down, yeah. To figure that out. No. Yeah. Like, you get this, like, the microcontroller had to see, like, God knows, to have that domain and, like, You're gonna have, like, questions Like your income in front of people able can be a very tiny, non-existent, almost, So that's why they were let go tell. So because it's a common Then, yeah. And then you are given some problem, the person it's The question is more like that. You will be able to take that into your of solving the problem. Like you kind of first want to clarify You want to ask around to understand what other ambiguities were there I forgot to tell you so you understand, like, okay, Scope of the problem I have like 45 minutes to address it, it in this time? like a surface level, but that's fine. and then you try to work out this plan Okay, I think I'm gonna use a breadth and then I'm gonna find the shortest path, with that solution. and I think it will help. Like the complexity and, I'm like, yeah, okay, I like that. Seems fine, And then they want to say that you okay, the problem, you solve the solution. And then they want to say And you just like I don't write down 20 lines of code Yeah. All together. So you are being like dragged through all the things which will take you like an a month of the LeetCode task, Like, all the things that that people and time complexity of the problems You work, at the levels like, once you, especially in the backend, it's a big problem if you are, have, it's like when you are acquiring software you're going to kill It's not a rocket science to go from like everything else. But like, just so you understand and how do you create it, where you create It does help you a lot to build better and that are easy to maintain Yeah. And I do feel like that's, space, space time really well to build in software that you build in both, you'll in bricks here apartment. I think mainly due to your experience, And a lot of the frustration in career, but even with senior engineers, And then I get it because if you don't see okay, And when I land the job, then I'm doing But I think there are places or at least you have to think about it. I think the disconnect happens. Mainly I lack, entry levels, like at, I probably will Will be trying to and how things are tied You'll be doing like just brick in basically the software But, not those skills will hold you back dealer. ideally companies don't want to hire reach their ceiling at the middle level It takes quite a lot of time to hire a person, educate, And it's nice if you know, okay, to grow further and further and further because you want to be people If the business grows. Yeah, altogether. So it's much better to have people okay, that person will have a potential And probably they also will do that faster exposure to leetcode, stuff like that. What I don't understand, like people It doesn't take a huge effort like, coding interview and stuff like that this let's call itself problems altogether, And they're like basically trivial. It's more like, can you altogether But if you solve all of them, then you'll feel much more comfortable And if you sold like 2 you can all in all, from a level, being able probably takes half a year every day, every day. Spend half an hour. Yeah. So you have like, happy investments and then you are able to go Almost. It seems like a good deal. I don't know where else you have to study and then being able to tap into, You don't you can start like, medicine like analysis and work years Absolutely. Yeah. Like, so what's the problem there? Like I don't know man. Half a year and bam all the opportunities just work And if you speak English well like yeah, I struggle to see how. How are you You're slowly convincing me like I was. I was in the camp of. And it's also because I'm not great at it. Like if I were to do a hard exercise I've done a few here and there And it is effort, effort that I don't know I'm sure I just have to bite the bullet Yeah, that's the thing. I do like this mantra. And also transitioning from the interview let's say still standard, where we can still have the discussion, Yeah, but it's more Let's say, okay, if not, e-commerce In any case, ask for an order, see if it goes through That's the interview, is then we're talking about APIs complexity in isolation, do the effort of half a year and then make the wrong decision That's something that's harder algorithmic, let's say, exercises. Yeah, But also like this other topic that's more like system design interview Yeah. that's fine. They go hand in hand. Do they go hand in hand, do you think? Well, usually like and they partially test similar subjects as well. Yeah. Like, especially in the system design you will have to think about, problems and you have to think about like, those things, and understanding of complexity Yeah. It helps. Like, back to your question, if you try to solve a hard, Oh, yeah. I mean, if you go to the gym and he put like, 200kg on the bar Yeah. If you put, I know 50kg and lift it, for like ten times. You do that for half a year, you'll be And another, probably yet. No. How long? But at some point and you be like, Like it's the same thing of going to the that's trying to like lift 200 kilogram to the gym like it's the old expectation I think that's what Yeah. Like your brain is also a sort of a You can train it, And that's also why I feel like sometimes problems like that helps a little, Yeah. This is got together and trying And like I still don't get it as like, it's painful almost sometimes. But then once they go through the pain once all the sudden like, And next time you're like, how did I not get it earlier. Yeah. So it's very similar process. So it's just like training your Yeah. Yeah. Yeah it might be then. My. So I've never gone deep with a very the past where throughout my career as I wanted to, was where I would either Yeah. So I would I would feel effective or think And then all of a sudden I would get stuck or be like, Yeah. Then I would realize that's actually either fundamental knowledge But I would do that continuously, and I've never actually done because I do it reactively based on And I feel like the LeetCode if you compare it, if you combine that, if you can both do both really well. He's just a really senior engineer, or an individual contributor in that way, And that's, that's the part where I would underestimate it, I expect to do what I do now, Like you mentioned, we don't really do Yeah. With these code, it's complexity Yeah, yeah. So it's good to train you almost in like Speedrun your own career developments LeetCode and system design. because you'll be able Yeah. Like, it's not going to take you five years to grow It's pretty good, I think. Yeah. That's what I love about what sound like a cheat, And I never viewed it like that. I did see it as a hurdle, to be honest. I was in the camp of okay, why? And in reality, it's it's there, And it's just this hurdle And I still believe that. But I also believe that you build if you're good at it, or at least try to present and like, think, it's useless. I don't think it's useless. I just think it's not represented enough Oh for sure. Right now it's, That's that's why I question this. Like. Yeah, like a moral I and, he was very good at, late coding, And I think he sold, like, 75 to 80%, Yeah, I spent a lot of time And he was a computer science. and then I think he got himself a, junior position at, Amazon, Okay. Good for him. And he was, like, absolutely useless. Like, Like, he literally couldn't write any code Okay? Like, he was only good at leetcode So, like, he got in and that had like, a very frustrating, And after that, he was kind of like, yeah, I'm out, like so called pimped out, Oh, wow. Oh yeah. Because like, even though like very basic level and struggle It's like could also do that. If that's your plan, please don't. It's a bad idea. You're not going to be happy. You can feel pretty miserable Yeah. So yeah, Because I get this question a lot as well. But that's more on the soft skill side if we stick to the technical You mentioned system design as well. but what makes a really good, let's say Well, I mean. I know it's a problem. It's like an open question, and I don't feel like the solution lies in leetcode or system design, like political I think there like a list that, like hundred 50 problems And then also like, and, like, if you are someone trying to solve a problem, You still have nothing in your head as to how you can approach it, look at solutions Like, if it's exercise you try to take, You start the solution, you without looking at the solution. Yeah. the learning process already happens, like, two hours instead of Yeah, like out of those, hundred 30. So. Well, Course they have. after that, you know, If you will start enjoying it. Sure. Continue. But it's not the point of diminishing Like it's not going to get better, for the system design. Yeah, there system design is also very different And data scientists. I think I have mainly exposure to backend Yeah. I have no idea. How do people do systems on the frontend, it's to be rather generic. Guess I'd rather not share it. but I think it would. Even what makes people say it all together and be able to solve And there's also like how people are gonna like if you are trying to build the best architecture for a problem it's not gonna be very useful at times or architected, the level complexity which you will be operating Hook complex the architecture. Yeah. Maybe it's going to be very by the book like they want to in clean code but it's not going to yield So you ideally want to holistically It's like been overused a little bit. But you want to holistically understand and where you can, outsize your impact. like, if you talk with the business people or people like, hey, what are you actually trying You be like, oh, maybe you don't even need You can just like, And then we'll get some learnings. And if you don't double down on that, two months But otherwise we can, acquire Yeah. So almost like if you can hack your way like, that's the best, have to play both hats. You're trying to hack things where it doesn't matter that you But you want to, do things, in a more sustainable way there seems to be a business buy in. And this is going to be your roadmap potentially you want to be able so like there's no like one clear outcome I'm like not being I'm like, do you think that, people Okay. Like, know. Yeah. Because like, I knew it's going to be I yeah, I can absolutely, That's good. I very interesting because something you mentioned I had a person on product manager, engineering management. also came from an engineering background. And I asked him, now that I've done this product management like that was very early on in my switch, Yeah. What makes for a really good product And he said navigating ambiguity And that translates that at that from the engineering side, Also, on the product side, being more comfortable in the ambiguous whether that's on the technical side with regards to domains or even Yeah, I think that makes for Doesn't matter if it's on the product side Yeah, that's a very interesting insight. I feel like you just brought in the amount of people Like if you're just now getting coding, that define the particular problem And the code, but if you're able to go beyond that, you're able to talk together to help him to navigate, the ambiguity and you can just, like, see, okay, hassle together with, him or her, to have, yeah. Product outcomes. If you can go even further beyond that and then go to salespeople is also great. And, the only makes it more and more important Yeah. And I feel like that is a skill And it's very let's say I think, from the engineering side, because, you know, where something is okay, we don't know that You dive into something new, specifically scope Yeah, based on that domain or based on a new organization whether that's scale or just ramping up And then if you were to I would not have any experience I'd be like, okay, this person says X, I don't really have any history. Yes. No, maybe I have no clue. Yeah. And I feel like I have a better, gut feeling, or at least history okay, no, I actually think this to some things. Yeah, implementation Yeah, that's very interesting. I'm happy it does translate though, I can have a lot of fun in different roles with kind of a life Do you deal with ambiguity where have you found that as well? Well, yeah, for sure. So, I decided it's a good idea to well, But we also decided together to renovate it ourselves. We say that's still a good idea. And, renovating things. but a yeah, that's a good idea. And I also found this journey painful but also pleasant, but, fit, solutions to problems And then like, it's, up to you and your ethics, are you going to go for a better solution? I got to, cut corners. But it's like if you're doing this it's going to impact your right, Yeah. Like you are the end customer. So you like it. Feel the full cycle. Oh, yeah. Because when you do it for something else probably you have slightly different Okay. Like I should make this economically Like, no, I should make it nice. you want the full blown sweet. Yeah. It also exposes, Okay. Your kind of those, do you? Because this is what I see People And I'm trying to make sure And we we basically build Yeah. And are flexible for the future. Well, how you can do that as much. So you have to to be. Yeah. I don't, fully agree with that idea that To be honest, I can it's like another sort You know, that the future they want to look like should be, I feel like everything above a year, which is does makes sense, like in that time, the people that you're going to be working If a company is itself, everything you create right now a year later, maybe two years later, But maybe I phrased it differently to not lock myself in, let's say, What I've seen is that people love future Yeah, and I can't future proof anything Oh yeah. Yeah, yeah. So I've been saying the same things but what about the how situation Oh the house. Well I do we do twice slightly more modular approaches to constructing the house like a, unlike, the road construction, we build almost everything I don't. Have to come up with examples. simplest example is like you're building, and you will have a bathtub. Okay. Like, how do people normally place like this, Hulk or the, like, black walls, like, Just like raw. Yeah. Blocks of, people for the bathtub. And then they build, Well, this one with did but then if, for whatever reason you want to get under it, you want to Whatever else. you kind of have to yeah. with this, like, big open space where things don't look very nice the way we decided to put this bathroom, the whole space, it tiled it, And then we built the thing around it, So if whatever the reason, or remove it and put the shower and shower there instead, further investment And that's the modular part. the sound like with all the pipe where you can access it. almost everything is built in a way You can get to the things And then the concrete is poured on top, it does require more effort and, more time somehow it made me feel much in the future. And how will be living there? Yeah. It's going to be a very fulfilling not to brag. It took us almost two years now. Yeah. I think, about the finish line. That's chunky, But, it's a classical software project Yeah, probably like, six months to nine months. We were done. Okay. Optimistic. And then it's like, yeah, okay, okay. And then at some point with us, like, so when do you think you're Yeah, maybe then, I think about half a year later to seven months, we stop, answer the question. You know, like, We don't take our time. And basically we also restructured any deadline anymore. But, try to restructure this process, some just some part of our life and will, learn to enjoy it and, like, be whining about it and it was not very economically viable, Yeah. Sounds like a lot of learnings in there Also, and not setting deadlines. That's really funny because there's a lot There is also like selling Yeah. They also have different opinions Oh yeah. Quite some, politics in there. as, as a final question. And I was getting to this, you mentioned you have this kind also kind of aim for the future be there more hands on Yeah. Why? It hasn't started yet. And I love this question because people well, I don't hate it. I did, and it's just like with let's, let's try for, Yeah. Like, they sound like attempts eventually, Not as serious enough from where they should build this recommendation That would recommend, movies which will then allow you like from the tests and movies, type of music you would love to listen, because they'll try to like, break down Make a graph out of that also in the cloud of tags, like, I know, I was we you mentioned Okay. Yeah. sort of almost fresh out of university. We're building that, build for quite some time. Got to some prototype, they didn't take us in, but I guess we Hard enough, but. No, and. Yeah. And then somehow, then we got into fight. the thing kind of fell up and, joined, a few years later after, working at some other companies, I talked about where we profiled I was basically the second engineer and the fourth person So that was like, CTO, CEO, and engineer, and building that product but like, wasn't for product market fit. And after two years, we, didn't get enough, we didn't didn't have enough money to pay me. I did didn't money to live and then I joined eBay because I was like, But I was like, hoping to like, I would just double down And this early ventures. Yeah. I then joined this another, venture with luxury as well, And my general desire was also to try building that as an independent venture And even while doing that, which is a marketplace So you could like, create And then people were able to sign up and, you know, but since I was doing this who's also an engineer like him back then, now he works on other startup. we got engineers We published the the App Store to the Android store, like I said, everything within the to do, but, like, you just didn't do it, okay? Because, like, for me, it's like, it's hard to explain the level of, how good I am at sabotaging myself. I'm not doing that. Okay. and I found myself continuously, but, something I learned about myself that I do what do you mean with hustler, then? Like, actually, because it sounds like you and I'm not sure what solve fell flat. hustler is like, contains the talking to, product manager, And customers, will be very patient the request and asks to help the building Yeah. And like, yeah, that part because I don't, find it somehow for myself as engaging. and I don't do it very well. Yeah, but once we presented the challenge, which will work going from, like, But like that can contains, I don't have that part. And I was thinking about myself. Maybe I have it. And over the years And by this time I'm absolutely ready to like fully have buy and be like, I'm good at other things. Yeah, I just need to partner up with, But yeah. And like, even right now, at Miro, quite often partner up with people Well, then then this ventures, but, like, you complicate developments either focus on customers And I really like to support the thrive and build, like with the execution But I'm yeah. So that's also why I altogether think One way or another, I will find myself I will be, taking another maybe even within Miro, maybe outside, but probably, doing the same function That's why I feel very comfortable because, yeah, I just find whatever the challenge I see, like, make things happen, and they they know what they want, they on the product business side, and they struggle with that because, I get lots of joy in Yeah. the hardest thing and I like I thrive in that. That's cool man. Come back to the idea of, like, catch up on the skills like, double down on skills I feel by this time I got a doubling down because I do have and, like, be at peace with the things that I am just bad at Yeah, that's really cool, man. I love that perspective. And even when you say you're bad at it, because I don't think you can go Otherwise the really good skill on the other side to support in that way, or that you need And I question if I can do that. Right. Yeah. Yeah. That's fair. That's fair. Titles. But even if all get them felt, I find myself where I, find interesting challenge I'm ready for some other challenges, I don't have to like. Like, log on to the office That's the best. doesn't mean I wouldn't maybe mind doing something but also, I don't mind just working like, make a million bucks or 10 million And then I'd be like, do nothing. And just, like, chill. I'm like, no, I probably wouldn't. I was building something It's, It's fine. Cool. Man. I, I really enjoyed this conversation. Kind of an insight in your mind, discussing what it means as well as this little topic of leetcode, Is there anything you still want oh, I always thought, I'll just go for it. That's why I got this Yeah, I think I'm getting it. But I was originally I was chat as well. Very nice. Thank you as well. Then I'm going to rounded off check out Reach out to him, And with that being said, We'll see you on the next one. The coding.