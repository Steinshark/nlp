[MUSIC PLAYING] [AUDIENCE EXCLAIMING] [APPLAUSE] SPOT: Hello, world. This is CS50, Harvard to the intellectual and the art of programming. Woof, woof. [LAUGHTER] I'm sorry, Dave. [PINK, &quot;WHAT ABOUT US&quot;] What about us? What about us? La-da-da-da-da-da-da. La-da-da-da-da-da-da. We are searchlights. We can see in the dark. We are rockets pointed up at the stars. We are billions of beautiful hearts. And you sold us down the river too far. What about us? What about all the times you What about us? What about all the What about us? What about all the plans What about love? What about trust? What about us? La-da-da-da-da-da-da. La-da-da-da-da-da-da. La-da-da-da-da-da-da. La-da-da-da-da-da-da. DAVID J. MALAN: All right. So-- [APPLAUSE, CHEERING] This is CS50, Harvard to the intellectual and the art of programming. And this is Spot. And our thanks to our for bringing him by class today. Perhaps a round of applause for [APPLAUSE] My name is David Malan. And I actually took this class, But I almost didn't. And I didn't because when I I really gravitated toward with which I was already comfortable, And I came in here thinking I was going And it was only once I got to that some friends of mine were CS50 that was very much to was an unfamiliar field to so But I got up the nerve to go over the just shop it, so to speak. And I was hooked. I found that homework was, And this was after having enrolled me enroll pass/fail or [INAUDIBLE] think I could even cut it. But fast forward to five I actually switched to a wow, this is actually something for me. And I say this because I didn't realize about is this very general purpose way of And even if this is the even if this is the only formal as a practical skill, it's to so many other fields-- the natural sciences, and beyond, and themselves. That said, it's going to often This is from our friends at MIT, down whereby they connected a fire with a little sign up there that says, DRINKING FROM A FIRE HOSE,&quot; going to feel, quite too, that there's just And you can't possibly that's to be expected, especially The whole point is for so much of it to with years, even, looking comfortable with the material. But you're not meant to feel And so let me encourage you to get comfortable feeling whether you have or have not prior experience. Now, back in my day, the class' And, really, when I and all of we would say to friends to program in C, which is a language learn in this class. But that was it for languages. But nowadays, as you'll this older language called called Python that's very much in vogue and much more. But we'll also introduce to another language called S-Q-L or SQL, And SQL is a different type that's just going to give you different building blocks with which We'll introduce you, toward yet another language, with markup languages called HTML have some experience if But we'll do this because so many of is web-based. Or it's phone-based, it's using these same And so by the end of you won't know how to program But, period, you'll And, indeed, among the is to equip you with enough of a set and experience that after CS50, again, you can teach yourself new languages. And you won't feel-- you won't have been reliant introduce you to each And what are we going to And, really, what are we Well, we're going to learn And that's really what We'll, very specifically, We'll learn how to represent We'll learn how to represent letters We'll learn how to represent and everything in between. We'll learn how to represent, full-fledged images that you might We'll talk about representing So, by the end of today, with a newfound mental represent all of today's media and and use most every day. But we'll also focus to write algorithms, like some problem, specifically, And that's what we'll find. An algorithm is just in English or any human language, to, presumably, the 0's and is all that computers ultimately speak. And if you're feeling like if you're feeling like that's realize and take comfort in have never taken a CS course before. So even if you think, like that, surely, my friends, the must know more than I, since they were six years old. That's just not the case. You're in very much good company. And within the class will by way of the homework by way of the sections or recitations. There will be different less comfortable, more And if you really don't we'll even have sections for those don't necessarily feel ready to dive But we'll get you there by way of And it's very much What ultimately matters in where you end up relative but where you end up relative So whether you have or have not it's not going to matter when it comes to the output, be it a grade, It's going to depend on, in this, what we call week zero, versus you will have built something grand, But CS50 is also by its community, its culture. And along the way, you'll is punctuated by a lot of social CS50 lunches, most every Friday, called Changsho where we'll And as many of you as that week will be able to join us, the course's teaching staff, friends CS50 Puzzle Day, coming up this even if you have no prior CS not jigsaw puzzles, but We'll hand you a packet of puzzles-- logic problems, or that you, as teams, can solve together. And at the very end, And along the way, there'll be not only and so much more, as well. Towards the end of the semester, we'll get together around 7:00 PM, and we'll finish up around And it will be this with your classmates, your project on your very own final to be a capstone of the course, that we don't hand you But it's your final offboarding, you don't need CS50 anymore. You don't need me. You don't need your TF. You can actually write code So this picture here is one of our past Things get a little quieter drive anyone who's still awake for pancakes, around then. But here is how most of the evenings of your classmates prior. But at the very end of the class an exhibition of all of your final students, and staff you'll be invited to a space like this. Bring your laptop. Bring your phone, whatever it And we'll just show it off complete with music, and and candy, and all what makes And you'll wear, we hope, your very own &quot;I took CS50,&quot; what I did some years ago; that, indeed, So, today, let's focus, then, on Well, it's really the But, really, it's, more using certain ideas and techniques, all So, as such, problem approach by way of something So computational thinking, you can as thinking like a computer. But it's really the application of and we'll finish some can apply to problems from this field or that is, a very methodical, And that's what CS really did for It helps clean up your Even if you go off into the real you have an ability, to express yourself a precisely and, generally, of your own ideas and your language. So what's problem solving? Let me propose that this is it. This is as simple as we can make Problems to be solved look like this. You've got some input, You've got a goal being the output, And then somewhere in the where we'll spend the next we can convert these inputs to outputs. But before we can do to agree on how to represent whether it's with English or, But, as I spoiled earlier, you with a general sense that, only speak or know 0's and 1's, But that's just one way of Even simpler than binary is unary. So if you've ever, at this age or any this is unary notation, whereby literally represent some taking attendance, like 1, 2, 3, 4, 5. But on your one human hand, how high AUDIENCE: Five. AUDIENCE: Five. DAVID J. MALAN: Five, I'm hearing five. Six, I heard one six. But I'm going to go further and say is actually-- AUDIENCE: 40? DAVID J. MALAN: Not quite 40. You overbid, but-- AUDIENCE: 31. DAVID J. MALAN: 31 is as And that's because if I this is weirdly painful is my hand representing the number 0. Normally, in unary, this is 1, But what if I take into putting my fingers up and down? So maybe this is still 0. Maybe this is still 1. But maybe this is now 2, where it's not two of them, total. Maybe this is now 3. Maybe this is now-- often offensive, This is now [LAUGHS] 5. This is now 6. This is now 7. And my hand just hurts too much if But, theoretically, because each and I've got five of them, that's up and down. But wait a minute. We said, 31, but if you start at 0. You have to subtract 1 from So this is to say you and I have been and it gets the job done. But if we just think about we can do exactly what computers do, &quot;base-1,&quot; where the finger is either And in base-2, we just need And we could call these digits 1 We just need two words to describe Computers keep it simple. And just like we humans start computers use 0 and 1, and that's it. But that's by convention. But why do they do that? Well, it turns out, when you use it just maps really Because, at the end of do, if you've got a laptop, You plug it into the wall because And what if you have electricity or not? Well, there's your two possible values. Either it's there, or it's not. And because computers this is why binary is just useful. It's nice and simple. Either electricity is So when you plug this got all these electrons if we just hang on to we can represent what we'll call a 1. And maybe if we let it dissipate So on and off maps very readily And if you've ever thought of &quot;bi&quot; implying 2, 0 and 1-- well, &quot;bit,&quot; it just means binary digit. A single bit is just a 0 or 1. But we could have called Now how does this map to Well, we can't see the tiny little PCs, and our phones that are or off, storing electricity or not. But they're called transistors. They've got millions of And they're just on or off, So, for instance, if the switch is off, we would If, though, you throw the switch and it AUDIENCE: On. DAVID J. MALAN: --an &quot;on,&quot; exactly, a 1. We could have reversed it. But this is just the way the And that's it. So you've either got something And this, then, is this thing we So once we've got these how can we go about, Well, you know what? It turns out we've got a lot Let me grab-- thanks. Excuse me, spot. Let me grab the little music stand here. Let me borrow a couple if we can't make clearer than my So I'm going to go ahead And I'll just put them here. And I can turn these So if I've got two bits, two switches, if I go ahead and turn on this one, perhaps? AUDIENCE: 1. DAVID J. MALAN: So just 1. Now, if I'm using unary, I would And that's 2, but not in binary. Binary, it's the permutations, which So what, now, am I AUDIENCE: 2. DAVID J. MALAN: 2. So this is when I put my But then when I did this was like representing the number 3. How do I represent the number 4. Yeah, I need another light bulb, so So if I turn-- if I leave this one-- if I turn this now I have the number 4. And someone tell me, and &quot;on&quot; and &quot;on,&quot; or using combinations of and &quot;off,&quot; how do I represent How about over here? AUDIENCE: On, off, on. DAVID J. MALAN: &quot;On, off, on,&quot; I heard. And that's exactly right. And how do I represent, maybe, 6? Over here? AUDIENCE: Off, on, on. DAVID J. MALAN: Off, on, on, not quite. From left to right? AUDIENCE: Off-- the other way. DAVID J. MALAN: The-- [LAUGHS] OK, so from right to left. So I think we leave this one on. This one, I'm going to claim, AUDIENCE: On, off. DAVID J. MALAN: I'm just going to-- Now, if you're wondering, where with these combinations, It's actually hard for But it turns out there's actually a In fact, let me propose this. Let me propose that we learned in grade school, which was meaning that you use 10 So 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, that's as decimal, &quot;dec&quot; implying 10. So that's what you and I use every day. Well, let's think about how we in the normal human way. Well, here is a number. It's what number, of course? AUDIENCE: 123. DAVID J. MALAN: 123. So we all just have an But it's not necessarily 123. You're just assigning meaning to This is really the pattern 1-2-3. But you immediately jump, Well, odds are, in grade school, you the ones place or the ones column. This is the tens place This is the hundreds place. And so why is this relevant? Well, this is like doing 2 plus 1 times 3 or, if we multiply ergo, the number, now, that we But that's in base-10, the whereby each of these digits And those columns are, again, If we keep going, thousand, But where did these come from? Well, here's the base. If you remember exponents this is just 10 to the 0, 10 to And so, now, what if we just changed to just two digits, 0 and 1? Well, now the math is But it's 2 to the 0, 2 which gives us the ones place, Now, why is this relevant? If you've got three light bulbs or what have I done? 4 times 0 plus 2 times 0 plus 1 you and I know, in decimal, as 0. This, though, represents the AUDIENCE: 1 DAVID J. MALAN: This represents-- AUDIENCE: 2. DAVID J. MALAN: --3, 4. And just to be clear, this is why, when we claimed that this now was 4. Because we had &quot;on, off, This now is 5. This now is 6. This now is 7. And if I wanted to count higher, what for the number 8? AUDIENCE: 1, 0-- DAVID J. MALAN: 1, 0, 0, 0. So we just need more So it wasn't arbitrary, what I was actually doing with Now, it turns out here we are talking like numbers, but we could also to represent instructions, as well. Because, at the end of the They process data, information or numbers, or images, And you do things with those files. You open them. You print them. You edit them and the like. So there's this notion of instructions, And I bet we could come up with or, equivalently, light bulbs Maybe, go up, or down, And it could certainly do this We need to keep things safe today. We're using Wi-Fi in sending But what's happening, wirelessly, essentially, he's sending Spot somehow, as patterns of 0's and 1's. And the folks at Boston Dynamics, Spot to recognize certain a certain pattern as meaning and any number of other things. So, in fact, Spot, come on Come on, Spot. [FOOTSTEPS] OK. So Spot, for instance, may of 0's and 1's that represents shake. Shake, Spot. So he could do that and any number And maybe, especially with sensors here for today, what if we went ask Spot some questions? So let's go ahead, and Spot, here we have some Spot, what [LAUGHS]-- OK. Spot, what is this [SPOT TAPS STAGE] Correct? I think so. Very horse-like, OK. Thank you. All right, so a round of [APPLAUSE] All right. So, Spot, what if we [LAUGHS] turn-- OK. We'll turn that one off here. How about if we turn this one on? So it's &quot;off, on, off.&quot; Spot, what's this number? [SPOT TAPPING STAGE] Is that correct? Nice. OK. [APPLAUSE] [LAUGHS] How about one final flourish? How about, Spot, instead let's go ahead and do &quot;off, on, on&quot;? So think, in your mind's eye, All right, Spot, &quot;off, on, on.&quot; [SPOT LANDING ON THE STAGE] OK. And a round of applause [LAUGHS] [APPLAUSE] So this is to say, no matter how-- thank you, Spot. No matter how fancy today's it really just boils information and instructions. And computers, and phones, operating on those same whether implemented in 0's and 1's All right. So, where can we take this, once for representing [LAUGHS] information? Well, it turns out that using three isn't actually all that useful. And you and I, even in conversation, We say the word &quot;byte.&quot; And what is a byte, if familiar? Yeah? AUDIENCE: It's eight bits. DAVID J. MALAN: So it's just eight bits. It's just a more useful unit of measure. And it happens to be a which just makes math work out cleanly. But it's just a convention, to have than individual bits. So a byte is eight bits. So, for instance, this represents, the number you and I know is 0. And this byte of all 1 bits-- now you've got to do some quick math-- So it's all 1's; eight of them, total. How about over here, on the end? AUDIENCE: 255. DAVID J. MALAN: So it's, indeed, 255. Now, that's not the need to do in your head for a This is the ones place, twos, And because they're all 1, you just have And you get 255. But a little mental trick, too, and each of them can be two that's like 2 possibilities here times So that's 2 to the eighth, so that That's 256. Or easier, in the sense that you get That's 256. But wait a minute. How do I reconcile this with your 255? Because you start at 0. So you lose one on the high end because the number, like 0. All right. Questions on how we've represented instructions to Spot, thus far? Any questions on binary, No? All right, so seeing none, So how do you represent letters makes our devices more in English or any other human language. How could we go about representing If, at the end of the all our phones have access to is switches; or, metaphorically, inside of them that can There's no more building How could we represent Yeah, how about here? Yeah? AUDIENCE: You could assign a number. DAVID J. MALAN: Perfect. So we could just assign And we could do this super simply. Maybe 0 is A, and 1 and 2 is B. It doesn't really matter, use the same types of computers, Well, for various reasons, the they went with the number 65. So, nowadays, anytime your computer A on the screen, underneath it's actually storing a pattern of 0's And it tends to use seven bits even if it doesn't need So how do we get there? Well, here, for instance, Here is that pattern of And why? Well, quick check here. This is the ones place, twos, OK, so 64 plus 1 gives me 65. So that is to say here's how a computer, would represent the number 65. And our Macs, our PCs, our So whenever they see that in they show a capital So that's it. That's the system known as Code for Information Interchange. And the A is actually operative there about English letters in our alphabet. And, in fact, I claimed, a seven, maybe eight bits to So, just to come back to possible letters of the many possible letters of any alphabet AUDIENCE: 256. DAVID J. MALAN: 256, the Now, that's more than enough got A through Z, uppercase, a bunch of punctuation symbols. But in a lot of languages, with accented this is not nearly enough to represent all of So we need to do a but we can build on top of So here is a chart of ASCII codes. It's just a bunch of columns showing and numbers. So, for instance, up here is the capital C, 67; dot, dot, dot. 72 is H. 73 is I and so forth. There's some weird things over that we'll learn about over time. But there's a mapping of the alphabet and some both for uppercase and lowercase. So, for instance, if we highlight and I say that I've just received underneath the hood, so to to look at what switches are on and Well, first-- and this is not what Does anyone know what number if this is the binary pattern, AUDIENCE: 72? DAVID J. MALAN: 72 is correct. And again, not, intellectually, and this is not the kind of math a computer scientist doing. But it's just following the is to say it might look intellectually, it ultimately So, yes, I'll spoil It's 72, 73, 33. Now, anyone remember, in your mind's AUDIENCE: Hi. AUDIENCE: Hi. DAVID J. MALAN: Yeah, Though, no one really What's the 33, if you noticed? AUDIENCE: Exclamation point. DAVID J. MALAN: OK, so Yes, it's an exclamation point. And that's, indeed, 33 is the exclamation point. And that's just something, But, for the most part, if you can figure out at least 25 other because they're all So there's the exclamation point. But at the end of the day, we might And it's how our phones, and generally, actually store information. So we thought we'd make-- maybe take a little And could we maybe flip things around? How about we try applying if it's, indeed, new to you-- with seven OK. I saw your hand first. Come on down. Maybe your hand, there. OK, three, come on down over here. How about four and five? Yep, come on down. Yep, in the black shirt, yep. How about let me go farther back? How about in the green, over there? And how about you, seven, over here? All right. Come on down. [CHATTER] Come on down. So a round of applause [APPLAUSE] All right. So if you'd like to stand, roughly, of the stage. First of all, thank you. Let's see. 1, 2, 3, 4, 5, 6, 7, perfect. OK. And let's go all the way If you would like to introduce RACHEL RICHEY: I'm Rachel Richey. DAVID J. MALAN: OK. And what year? Anything about you? RACHEL RICHEY: Oh, first DAVID J. MALAN: OK. Welcome to the stage. Next. SPEAKER: Hi. I'm [? Kang. ?] Also a SPEAKER: Hello. My name is [? Lam. ?] I'm a [INAUDIBLE] DAVID J. MALAN: Nice. OK. Next. JORDAN MITTLER: Hi. I'm Jordan Mittler, concentrating SPEAKER: So, hi. I'm [? Natalia. ?] First SPEAKER: Hi. I'm [? Khadija. ?] I'm a DAVID J. MALAN: [LAUGHS]. SPEAKER: Hello. I'm [? Caleb. ?] And, once again, DAVID J. MALAN: OK. Wonderful. A pattern, yes. Thank you. Thank you. [APPLAUSE] So, if you haven't guessed is going to represent a bit, from in this case. So let's see. If you want to represent-- How about the fours place, the eighths Although, wait a-- I think I screwed up. We needed one-- eighth volunteer. I think you know-- well, I think-- [CLEARS THROAT] Spot? OK. Come on over. If you guys could step forward a just to give Spot some room. [FOOTSTEPS] So Spot will represent the ones place. Now, what our volunteers have on are little instructions. We're going to spell out a three-letter from left to right, because I'm going to propose that you supposed to represent a 1. Or you just stand there, if you're meant to represent a 0. And what we'll have the to figure out-- one, two, three-- What letter is it? And we'll see what word that All right. So, in round one-- you have instructions on your back what your number is. If you're 0, stand there. If you're a 1, raise your hand. [PAPER RUSTLING] What number do these guys AUDIENCE: 68. DAVID J. MALAN: 66, I think. 64 plus 2, so 66, which is the letter-- AUDIENCE: B. DAVID J. MALAN: OK, so, Hands down. Second letter is going [SPOT LANDS ON THE STAGE] AUDIENCE: Whoa. AUDIENCE: Whoa. AUDIENCE: Whoa. DAVID J. MALAN: [LAUGHS] All right. What are we spelling now? [INDISTINCT CHATTER] I think-- psst, yep, OK. Yeah, I think you're one. [LAUGHTER] OK. Now what number are we spelling? AUDIENCE: 79 DAVID J. MALAN: 79, I AUDIENCE: O. DAVID J. MALAN: O. OK. So hands down. Thank you, Spot. One final flourish. So we've spelled B-O-- third letter, go ahead. [SPOT LANDS ON THE STAGE] What number, now, is this? AUDIENCE: 87. AUDIENCE: 87. DAVID J. MALAN: I heard it here, 80-- AUDIENCE: Seven. DAVID J. MALAN: --seven, which is? AUDIENCE: W. DAVID J. MALAN: W, which, So if our volunteers could [APPLAUSE] So this will make more when we have an assignment involving World. But we have a lovely parting SPEAKER: Thank you. [LAUGHS] DAVID J. MALAN: Thank SPEAKER: Thanks. DAVID J. MALAN: You might need to [CHATTER] Oop, here we go. There we go. Thank you-- SPEAKER: Thank you. RACHEL RICHEY: Thank you. DAVID J. MALAN: --so much. One more round of applause, if Thank you. [APPLAUSE] Did you lose something? OK. All right. So, [LAUGHS] Spot's had it. So let's see, then, the problem of representing being able to spell out words like have accented characters? What if we do have other glyphs Well, here, of course, is a standard might have. But there's also characters easily if you have a foreign or with certain keystrokes on But, nowadays, too, there's used in the past hour or two An emoji, even though and they actually are they're, technically, just characters, that happened to use a certain each of these faces, each of these And it turns out that one of so many [LAUGHS] such characters use Unicode instead of ASCII. So Unicode is a superset, which is to say that we, humans, using eight bits to represent certainly isn't very good other, non-English languages. So Unicode doesn't just use eight bits. It sometimes uses 16 bits per character, and sometimes even 32 Now, why those numbers? That's just one byte, two bytes, And that gives us-- does anyone know? That gives us the ability billion possible characters. Because if the longest one is which, if you do out the math, So that's a lot of characters. And we've got a lot of But it's not just about having Unicode's mission really is to represent digitally, both past, So it is really about capturing as we've expressed it giving this newfound ability that's been on walls, and the like-- we can still communicate, of our own human language. So we'll reduce it, today, to the problem being solved is much greater So here is a pattern Unicode, so more than eight bits, that might be a bit of a hint. This is the most popular emoji, statistically, internationally. [INTERPOSING VOICES] DAVID J. MALAN: Does this help? It's, roughly, this number here. No? It's this one here. So this is the most popular emoji, But it doesn't always look like this. Those of you who have a Mac or an immediately. Those of you with Android might notice that it's the same idea, And this is because, too, just represent character, but can be painted in different ways. And reasonable people this emoji, whose official name And, indeed, Google interprets from Apple, versus Microsoft, versus So you can almost think of as having different fonts for emoji. And that really starts to connect things So, just so you've seen it. More on this, another time. It turns out that emoji and, we don't use binary 0's because no one, myself included, It's just too much math. It's not interesting. And even decimal numbers-- I don't remember which number is which. So we represent things And this, too, admittedly, but this is a Unicode code point that called base-16 or hexadecimal. More on that, another time. But it's just a way of representing writing less on the screen, through 9, as in decimal. But you're using A through of the English alphabet come into play. But, for now, that's to remember, too, for people who represents &quot;face with tears of joy.&quot; But what if we want a customized emoji? And this, increasingly, is the case. Here, for instance, that phones, and laptops, and It's based on something called the categorizes human skin tone different categories, But this suggests that, wow, with five different skin tones, increase how many unique need for every possible face. But if we think about it from we can actually just think of skin color, for better or for worse. And yellow is the de facto But to modify it to look more genuinely well, maybe we just use to represent a human thumb, for And we just, then, modify that character tone. So, for instance, here, that you might use on various platforms. And let me just stipulate that That is the number that use underneath the hood to represent But if you want to give you still use that same number, or switches, underneath the hood. But you use a few more switches will interpret as, &quot;Oh, you don't because of this second number that's You want me to adjust it to of the other values, instead.&quot; So that's the engineering of just trying to represent Well, what about something like this? There's a lot more on your keyboard for So here is a &quot;couple with heart&quot; here. So the couple, here, of course, this number here. But that's it. But if you want to be more or man-man, woman-woman-- but we just need to express more information. So, for instance, the way the years ago, to represent, for instance, from left to right, would So things just escalated in the sense that we're using more more expressively, this So this happens to be that represents the woman at left. This is the number that And this is the pair of the heart in the middle, sometimes red, But if we want to change the say, woman-- if we want to change the notice that, now, the left and Or if we flip it back to man-man, on the tail end again. And meanwhile, if I rewind, there's These are called zero-width It just is a special number glue the emoji at the left to the So it connects ideas in this way. So there's actually a that are a combination &quot;Heart on fire&quot; is one the combination of a heart joined together, So computer scientists who are just reducing things All we have at our So we all just need whether we're Google, Microsoft, or the these kinds of things as information. Questions, then, on how characters be it English or any other language? Yeah. AUDIENCE: How is the plus a number? DAVID J. MALAN: How is the what? AUDIENCE: The plus, the U+. DAVID J. MALAN: Oh, the U+ So U+ represents a which is a U with a plus in the middle. And this is just the hey, everyone, here comes a number The U and the 1 have no-- sorry. The U and the plus have no It's just a visual clue to folks. Other questions on All right. So what about colors? We've already started Well, how are those pictures, be it One of the most common red, green, and blue. It turns out that if we just be on the screen, and how much green, that gives us every from white to black and So how do we represent an amount Well, frankly, just with And this is how computers Every one of the dots on your is called a pixel. And every single dot underneath the hood so three numbers, three numbers, And those three numbers, together, should the device So, for instance, if you that said, &quot;use this much red, this of these numbers, I'll tell which means the total let me just ballpark that the 72, because it's in between 0 and 255. 73 is a medium amount of green, and So if you combine a medium amount of anyone want to guess what AUDIENCE: Brown. DAVID J. MALAN: Sorry? AUDIENCE: Brown. DAVID J. MALAN: Brown? So, close. It's a little more But if we combine them, it looks This is just CS trivia, I would be able to eyeball, unless I But wait a minute. We've seen these numbers before. 72, 73, 33 represented what-- AUDIENCE: Hi! DAVID J. MALAN: --a few minutes ago? So it meant &quot;Hi!&quot; but here I that means yellow. How do you reconcile this? Well, at the end of the 0's and 1's, whether you or letters, or even colors now. But it depends on the context. So if you've received a odds are the pattern of 0's is showing you are going to be the whole point of a If, though, you opened up MacOS's calculator app, the same be interpreted as numbers for some If you open the same pattern like a graphics program, they're going as colors. So context matters. And, indeed, as soon start writing code in the onus will be on you, the programmer, the following sequence of bits as a And you won't have to even worry but you need to give the computer or piece of data you're representing. So that gives us bits. And you can actually see these Let me zoom in, zoom in. And here we have it, just with this is a picture that someone at And you can see-- if you really and really put it close to your depending on the hardware. And each of these storing 24 bits or three bytes, And that's whey, dot, got a photograph, for instance, is 3 million bytes, well, odds are because you're using to represent each of those colors. That's a bit of an why images and photos are getting Because we're throwing even Music-- [MUSIC PLAYING] --how could you represent using just 0's and 1's, Any instinct, whether a musician or not? Yeah. AUDIENCE: The notes could DAVID J. MALAN: Yeah, so we can So A is some number, and B. And maybe But note might not be yeah? AUDIENCE: [INAUDIBLE]. DAVID J. MALAN: Ah, OK. So one note-- one number to the sound or the pitch; one other In the context of piano, how long And maybe I can think of How hard has the person So, minimally, with imagine representing music, as well. And, indeed, that's very are doing when you listen to sound. What about video? How could you represent videos, as well? Yeah? AUDIENCE: Through many images. DAVID J. MALAN: Yeah, many images. So if you've ever produced a film 30 frames per second, FPS, is just how many pictures But that's really all a lots of pictures moving so quickly in interpolate that as being actual motion. And, in fact, from it's like pictures that are even though there's only 30 or so So we have a way, now, to input and output, whether it's numbers, Let's now focus on what's so to speak, wherein we have for solving some problem. Now, what do I mean by &quot;algorithms&quot; Well, maybe, if we were and that's how we'll connect Code is just the implementation, An algorithm can be something Code is how we implement that exact instead. And here, for instance, is a very for your context. This is the iOS version of the icon. And, typically, if you you'll see something like typically, alphabetical, And your phone or your computer lets at the very top. And it will autocomplete, and But it'll be pretty darn fast implemented that application are Now, I can do this old school style, from yesteryear, an actual phone book. So, in a physical phone book like And on every page are a bunch And as I flip through this, I So suppose I want to call John Harvard, starts with a J. Well, I looking for John Harvard. And if he's not there, I So this is an algorithm. I'm stepping through the phone Is it correct, this algorithm, So, yeah. I mean, it's stupidly I wasting my time with the A's, I could probably take But it is correct. And that's going to be one of the goals solve the problem you So correctness goes without the point of writing the code the algorithm? All right. Well, let me at least speed things up. So, instead of one page at a no, ignore that-- 10, It's a little hard to do, It was twice as fast, AUDIENCE: No. DAVID J. MALAN: So, no. Why? Yeah? AUDIENCE: Yeah, you might [INAUDIBLE]. DAVID J. MALAN: Yeah, I might miss he might get sandwiched But do I have to throw the Probably not. Once I reach the K section, I could double back at least one and just make sure I didn't So that is twice as fast, at a time, plus one extra step. So it's still an improvement. So the first algorithm, not John, but someone that might take me a full 1,000 steps. The second algorithm is going two pages at a time plus but that's in the worst case. But most of us in the-- in yesteryear, are actually doing is, in we're typically going, Especially if there's no cheat I'm just going to go And, oh, here I am, not But what do I now know. If this is the M section, So, clearly, to the And so here is where we can take a We can really divide by tearing [TEARS BOOK] the problem away, 500 pages away, leaving half as big, that I can So I go, roughly, here, and So I went a little too far back. But what do I now know? If this is the E pages, where's John? AUDIENCE: To the right. DAVID J. MALAN: So So I can-- again, hopefully, I can tear the problem in half And now I've gone from Now I'm moving because the first second was two. This is hundreds of pages at a time. And if I go, roughly, again, to the middle; roughly, to find John Harvard on one final page. Can only do this once, So that invites the if the phone book does how many times can I divide the problem So it's, roughly, 10. And the quick math is 1,000 goes to So we have to deal with But assuming we work out the math, And that's crazy faster than 1,000 So it's fundamentally better. And, indeed, if I finally get to that you'd see something like this, which you're welcome to call or text. But that's how we now have our answer, But let's consider just how So here's a very rough, broad-- So here's an xy plot. So here, on the horizontal, is And, by that, I mean, how many This would be zero pages. This would be a lot of pages. How much time does it How long does it take to find This means no time. This means a lot of time. So what's the relationship Well, the first one is If there's n pages in claim that it's a Because if Verizon or the phone that just means I might have as well, to find John But the second algorithm, but it's lower, even though And what do I mean by that? Well, let me just draw If this is how many pages dot, dot-- notice that it takes to solve the problem. But if I, instead, use it takes me half as much time. So, even though they're one is strictly lower than the It's better. But the third algorithm is a and it looks a little And it looks like it's going to but it never does. It just rises ever so slowly. And what this means is that if in Massachusetts, merge next year, to a 2,000 page phone book, that we're over here next year. It's not all that much higher. But it would be much higher if we Why? It'd be an extra 1,000 steps to book or maybe another 500 steps. But, to be clear, if we're using how many more steps will when Cambridge and Allston merge Just one more step, no big deal. It's one more page tear. And this is what we mean, code or implementing algorithms that are well-designed or And this is what makes someone than someone else, or a better is acquiring, over time, these skills. So that, sure, you could solve so to speak, but if you're eventually, be it in your phone book if you're searching to want to try to think about how to Mathematically, this And it's log base 2 because I'm halving, But, for now, just know that it's a shape. So, among our goals in CS50, to write and solve problems correctly, as well. Any questions, then, on these Any questions here? Yeah, in back? AUDIENCE: [INAUDIBLE]. DAVID J. MALAN: A good question. Just to repeat it, can a graph like this Short answer, no. For instance, if I drew is super low on this graph, which the same amount of time, no my algorithm might actually be to book, one step, and say, here it is. But that's not necessarily unless I get really, really lucky. So the graph really only and the design of the algorithm, To analyze the correctness, you need namely, logic. Other questions now, on No? All right. So, with that in mind, let's begin to And, in fact, before we look at, albeit a graphical one, let's So pseudocode has no formal meaning. Generally, you write it in English or But you write your thoughts down You try to really convey your metaphorically, but So what do I mean by this? Here might be some via which I describe that third that I could hand it to you and Or I could hand it to someone at Google, Or I could hand it to someone at Apple, So, step one, I claimed, Step two was &quot;Open to the Step three, &quot;Look at And now things get a Step four, &quot;If person is on Presumably, what should I do if John So stop and probably make the call, or And so I'm going to actually indent just to make clear that you should only is yes. Otherwise, you don't bother. The next thing I'm going to do, line &quot;If the person I'm in the book,&quot; what do I want to do? Well, I could write-- I could describe this I'm going to do this &quot;Open to the middle of so it's open to the middle And then, what am I going to do? Well, I've just divided the But it's fundamentally the same problem. It's just a fewer number of pages. So I'm just going to go back because the problem is just getting Else, if the person I'm looking open to the middle of the and, also, &quot;Go back to line 3.&quot; But there's a fourth to realize, sometimes, that there's make computers crash, or spinning if a programmer doesn't What's the fourth possible situation, AUDIENCE: If they're not in the book. DAVID J. MALAN: If they're And, indeed, I might get to the very on that one. I'd better handle that and say, else, And, truly, often, in when they freeze, or, again, and just weird things because some human made a dumb mistake. And they didn't realize that you could into a configuration that So we're going to try Now this is just one way There's no one way to do this. All of us in this room could come up But I think you'll find blocks in all of our answers. Here, in yellow, are going to start calling These are like actions or verbs that what to do. Next, we're going to have forks in the road, so to speak, that metaphorically. So I do this thing or something else. But how do I decide if I want or this way, or this way? I need to ask a question. And in programming, are called Boolean expressions, And a Boolean expression is with a yes/no answer, a true or It doesn't matter how you think about And so you can think of these as even though I didn't draw such. Person on page, person earlier those are Boolean expressions. And they tell me whether I should go And, lastly, there's this, &quot;Go back That represents what we call a doing something again and again. Now these are just a few functions, conditionals, But you'll find that many different languages, one of which we'll look at next week. And those include, indeed, C, and And so this is why we and fundamentals in these going to see them again and again. So even if you feel like that we'll give you, today, by which you can hang onto, so as in different languages and Now, we'd be remiss in not bringing and ChatGPT, and other software, And it turns out, to we're actually going to need functions, and loops, and conditionals. It's not going to be quite that simple. But this has been a lot, so far. Let's go ahead, here, and And when we resume, we'll but also a specific So no cake, just yet, but Before we dive back in, I just that we have here today, who's come from even farther away. And, in fact, if any of you have taken of the class, or dabbled in in some of CS50's online you might have had by a certain human from New Zealand. And she's come all this way, today, This is CS50's own Brenda Anderson. If you might come up for [APPLAUSE] It's not much, but just a Brenda has helped, truly, for the past many years. And, in fact, her own behind the duck that's about to loom So, thank you to Brenda. [APPLAUSE] All right. So it's hard to escape a discussion but we thought we'd use to connect some of these dots. Because, indeed, over the we'll be-- not only be talking but really using it all to help you solve problems, when you hit a wall, cognitively or And, indeed, it's no accident looming large, which is really that you'll experience within So let's talk about the inspired some of those class, that weren't quite on the nose. So the class will still but helped by this CS50 Now what do I mean by this? Well, it turns out that, when it like an artificial have all of the building blocks yet, to implement something like that. But I think we can skate in So, for instance, if we were to take a some interactive text-based and answers questions, try borrowing some of today's ideas loops, and more. And I could write something like this. If I am writing code or I could program the chatbot If the student says, then the chatbot should Else, if the student says, should say, goodbye, back. Else, if the student asks how you are, But things get a little asking more interesting if the student asks why 111 Now, you could imagine that with this Boolean expression, that the answer and explain, in an English But what if you, the student, asks why I mean, you can just imagine the that we would have to write to just might ask about today and every of the knowledge in the universe. So, surely, there are other that allow something more generally, to be fed input, of the worldwide web, all of the but to let it just figure out on those kinds of inputs, assuming So &quot;large language models&quot; have heard bandied about over And a large language model really of code that actually takes, as like the text of lots and lots of web Wikipedias, and the like-- and infers, from the patterns of what a typical human might And some of these Probably, on the internet, alone, not extends their hand and says, &quot;Hi. How are you,&quot; odds are, with 90% &quot;Good. Thanks. How are you?&quot; So I bet we could write infers what it should say, on those kinds of patterns online. And that's, indeed, where to go, when it comes to of algorithms, where we don't try to anticipate Rather, we give it a input, like all human knowledge, and Now, we're not quite there, yet. And odds are you've heard of that these large language models make. But their inputs are imperfect. And sometimes there's a in because you don't want the thing Even you and I might say, &quot;Eh, I'm So you need to perturb But within CS50 and within this we do have these tools like And we'll stipulate that, the direction we're going is what's in the that it will not be allowed, not reasonable to use AI-based So the goal here is tools that are clearly inevitable, and productivity savers. But we'd like there to be some helpful these chatbots are. Because as you've probably these chatbots are already you finish your current hand you your second and your third But I think, through we'll be able to coax being computer scientists, that you actually find to be the a good tutor by your side 24/7, but, indeed, tries to So you actually get something and, ideally, three-plus those training wheels can come off, too. And you're able to So it will be reasonable to use will actually take the form of a CS50 and we'll use it throughout the term-- that's quite similar has the personality of a CS50 teaching TA, that also happens to And for reasons we'll get to but rubber ducks, in particular, But more on that, before long, there on my desk. With that said, too, well, I'm Anderson, whose daughter, the first incarnation, digitally, most recently, once it actually of times in response been virtually brought to life, too. So, all that and more, over the coming that the goal is to really bring to life that you have access next to you, that will help guide challenges along the way. And we actually rolled already, with some of your predecessors, One student wrote, at &quot;felt like having a personal tutor-- I love how AI bots will answer questions generally entertaining even without treating them It has, as one could expect, So there's actually something really as there are in CS50-- myself, the course's preceptors, and course assistants-- And we're only awake so And I think you'll find, too, that pretty remarkable, in it's going to get a lot more not only within the confines of a class, And as one other student put it, at &quot;Love love loved the duck. We're friends now.&quot; So that, too, awaits. But, first, we're going to And we started today by And darn it, here it is again. So we can't actually get to the point until we understand this. And odds are most of you won't know, at does. But these are the 0's and the first program that any programmer of you who have dabbled in code before. What does this pattern of 0's and Might someone guess? AUDIENCE: &quot;Hello, world.&quot; DAVID J. MALAN: It's going to which is one of the very that most any programmer writes. Should you be able to Do I recognize these 0's and 1's? No, not at all. I just happen to know And that was a leading question. But they are representing data data like H-E-L-L-O, comma, &quot;Print that data to the screen.&quot; As for what these patterns this is not something that a computer We just stipulate that, OK, someone, And it's probably someone the hardware inside of the computers. But you and I, starting can start to view We don't care about the 0's and 1's. We only care that you to represent more useful and letters, colors, and more. So this, next week, is going start writing at a keyboard. And this is that language called C. It's years ago, when taking CS50, when But this, too, has And if you've never programmed before, OK, I'm guessing the &quot;printf&quot; But what's with the semicolon, and the curly braces, the #include, A lot of this, in the beginning of It is not intellectually interesting. But it's the stupid kind of stuff And so, today, what on syntax, characters on because what really is that &quot;printf&quot; is a function And that function is to display Everything else, as and will be understood by you, before Let's focus on those building blocks. When it comes time to write especially if you've use a very popular free called Visual Studio Code, or VS Code. We'll use a cloud-based version of you need in the cloud have to deal with headaches like You'll use instead this on that in next week, week one. For now, we'll use another And odds are some number as early as like middle And that was fine to create interactive art, or the like. But we'll use it today for just a bit. And we'll use it in the AKA problem set 0, to explore And among the goals today is not to focus so much on because this is not a going to use often but to give you so that when things do escalate it's the same ideas just typed out So by that, I mean this. I'm going to go ahead and share in just But what's nice about is how we're going to implement These are two blocks or and they've been interconnected to on the screen. The user interface will look generally something like this. It's a web-based editor download it locally to use offline. And you'll see that at the left here or blocks. They're categorized by tend to relate to motion, for instance. The purple ones represent looks. The pink one represents sounds. The yellow one represents events. More on that soon. The orange ones represent there's operators, variables, my we can install as well. So it just categorizes things can find what you're looking for. But we're going to use these onto this area here. And we're going to connect them What can they do? Well, by default, Scratch comes as a sprite, which is a character And this cat lives in this the cat can go up, down, left, right. And you can actually to be a dog, a bird, or anything else. It really is more of an idea than it But the world that Scratch lives in It's like a Cartesian plane with And the numbers don't so except that when you want the down, left, or right useful to know, for instance, that 0, 0 All the way up is a y value of 180. All the way down is -180. All the way to the left is -240. All the way to the right is 240. And generally, you're not going You're going to use these relatively-- But that's just the world that So let's go about using Scratch here. I'm going to change over here, where I've gone And I've clicked Create in And that gives me this And I'm going to do these somewhat what I'm looking for. But part of the process with problem and dragging, and sort to see what building blocks exist. But I know under Events when green flag clicked. Why is that germane? Well, if I zoom out, and go back to notice that above a green flag, which is going to of course, is going to mean stop. So if I drag this puzzle piece it's just going to plop where I put it. But what that means semantically is I want Scratch the cat Well, what do I want it to do? Well, let me go under Looks. And looks here in purple have Well, I can say hello for or I can just go ahead and say hello. So let's do that. I'm going to drag this say block. And notice that as soon it's going to magnetically So I can let go, and they because they're the right shape. I don't have to say I can change it to the more So anything in this that you can change as just text there. If I now zoom out, let me go And voila-- this should be Hello, world. Without any of the or weird characters on the screen, All right. Let me go ahead and click Stop there. And let me make it a to what we've discussed thus far. So this puzzle piece represents what type of building So it's a function. So these purple blocks are And let me give you another These white ovals that in general, those are called And they customize the So a parameter or an modifies the default behavior of a Similarly, in the C code from the printf function took a quoted phrase But more on that in the future. So how does this connect to the Well, here's problem-solving as I with algorithms or code in the middle. Well, what we've got here really is an The function or algorithm that it's And what is the output of using It's the visual effect of having the above its head, saying, hello, world. So everything we do, in to that very simple idea Well, let's make it a little It's a little boring to just Let me go ahead and drag this away. And if you just drag it to the left and Let me go under Sensing And you'll see there's a is an ask block, an ask function, the human, me, for some input. So let me go ahead and drag that I could change the question, We'll use what's your name. But notice that this block, It is not just going to display It's actually going to another term of art today and onward. A return value is some value that can from a function so that you It's as though the ask function writes it down on a piece of paper, You can do anything now that And here is how you access the answer, which, again, will So if I want to say &quot;hello&quot; to someone Let me zoom out. Let me go back to Looks, And I'm going to change the say Then I'm going to zoom out. Well, I need two inputs, I think. So I'm going to grab another say And I could just type going to defeat the whole point And it will only work for me. So I don't want to do that. So let me go back to Sensing, and Even if it's not quite the And I can actually drag this and to be whatever that return that has the person's name on it. And it grows to fill, that I think when I click the green What's your name? And now I have room to type down here. So I'm going to type D-A-V-I-D. and it should say &quot;hello, Dave.&quot; Wait. Hmm. Huh. Maybe it was-- didn't work. D-A-V-I-D. Here we go. Hello, David. Hmm. It's missing the hello, but I'm quite So what explains this bug or mistake? Yeah. AUDIENCE: [INAUDIBLE]. So they overlap. DAVID J. MALAN: Exactly. Put another way, my Mac, fast that it did exactly But it said &quot;hello, David&quot; so fast that the slowest part of the So there's a few different We could have it say &quot;hello&quot; So I could kind of do that. So let me do this. I can decouple these by just so that they're magnetically far apart. Let me go ahead and drag this I'm going to change the grammar I'm going to go ahead I'm going to throw away the old And I'm going to reconnect OK. It's going to say hello for two So let me click Stop and Start. D-A-V-I-D. Enter. OK. So it's better, but it's Like, come on. I just wanted to say hello comma David. Why is that hard? Well, maybe we can actually And let me propose this. Let me actually get rid And let me go ahead But can I somehow combine this to say Well, it turns out if I know from having played with this piece down here called join. It's an oval. It's a little big, but, And by default, it wants to join But those are just placeholders. So let me go ahead and drag Let me change &quot;apple&quot; to hello Let me go back to Sensing. Let me grab answer and So now notice that I'm And put another way, the is presumably going to apple and banana or hello comma David. And then the output of join is So aesthetically, it just looks better. It's still correct, So if I type &quot;David,&quot; and This is what a normal do, not show you part of the phrase Like, it's just better in this way. So let's connect this now to this same So here's that same puzzle piece, ask. How do we fit it into this input Well, the input to that puzzle piece question mark. Then the algorithm or the is this ask block and wait so the human The output of that function You don't see anything on the screen by but we get this return value. And let me scooch everything join those inputs together. So here's this puzzle piece. Let me go ahead and propose that are two arguments or two parameters, They go into that join puzzle is to return one joined version thereof. Let me slide this all that now that output becomes and now is why the cat has the hello comma David. So what we've done here is and from one function And you can think of this in left to right, as I like stacking these things But at the end of the gets more and more powerful for us, and outputs. And thankfully, with built-in at MIT who designed Scratch, I can I can go to that Extensions And there's a lot of fancy things I So let me go ahead and And let me go ahead here and Let me get rid of the say Let me get the speak block like this. And now let me drag and drop this oval. It's going to grow to fill. And I think it's just about to Let me click Play now, and D-A-V-I-D. Enter. SPEAKER: Hello, David. DAVID J. MALAN: OK. [APPLAUSE] Thank you. Thank you. That's a low bar. [CHUCKLES] Let me go ahead And you might now remember we had a robotic, computerized voice. Well, we didn't use Scratch at the time, alone to be a little different. So D-A-V-I-D. SPEAKER: Hello, David. DAVID J. MALAN: OK. Little creepy, but we can But the point is that now doing something a little different. But it's just these inputs and outputs. Well, let's make the Let me go ahead and throw away Let me go up to Sound, and drag the play sound meow until done. And here too it comes with meow. You can add your own sounds as well. But I'm just going to use the Hopefully, this won't be too loud. Let's make the cat [MEOWING] OK. It's a little piercing, but it's cute. And if I want the cat to meow twice, [MEOWING] All right. But it would be nice to just get it or more times. So you know what I could do? I could just drag a second one of these. Actually, you know what? I could even just right-click or But I'll just keep There's different ways And now let me click Play. [MEOWING] OK. Cat does not sound particularly happy. So we could go under-- how about Control? We could wait one second. Now, there's no room, but it will So let me try this. And now it's going to wait [MEOWING] OK. Let me stipulate that is correct. If my goal is to get the cat to meow But per our discussion earlier of this is not the best design. [MEOWING] OK? [LAUGHTER] Thank you for playing along at home. Yeah. In what sense is this Yeah. AUDIENCE: You repeated yourself. DAVID J. MALAN: I repeated myself, tends not to be a good thing. Now, it was easy. I almost resorted to copy-paste, But just imagine a contrived scenario. Now, what if I want it to wait All right. It's not that big a deal. I change it here, and I change it here. But what if the program Then I have to change it here, and And eventually I'm going to screw up. Humans are fallible. I'm going to overlook one of them. One time, it's going to be one second. Another is going to be two, and You're setting yourself up for And so I would propose that we to solve this instead. Yeah. AUDIENCE: [INAUDIBLE] DAVID J. MALAN: Yeah. So we could use a loop and but to accomplish even So let me throw away And let's go and grab this repeat but it's right there. And as the name me to repeat something Let me put these two It'll grow to fill. Let me reconnect it to the green flag. I'll change the default 10 to a 3. And now-- [MEOWING] It's just sort of better because if you change it one place. If you want it to slow down, There's no room for error. And that's generally a good thing. But this is silly. Like, Scratch comes with a cat. Why didn't MIT give us a Like, why am I implementing Like, that took me what? 1, 2, 3, 4 puzzle pieces. Why isn't there just one This too we can do in code, be it in I'm going to go down to where I can create my own puzzle piece. And I'm going to call And I'm going to go And notice that it's given me It's a start puzzle piece But you can put anything And I'm going to go I'm just going to grab my This is code I'm writing, even And now let me just claim, Here is now an implementation my own block called &quot;meow,&quot; is to meow until done But what's powerful now is notice at I can use it any number of times. So I can grab this meow block, drag Now that &quot;meow&quot; exists as an And I'm just going to arbitrarily I'm not deleting it. I'm just putting it out that we can focus now on this idea. And I claim that this is sort of better because it's and I don't care about the So this idea of abstraction, something To abstract something Don't think about the underlying Just care about what it Someone has to care about like me 30 seconds ago. But here on out, I don't need to care. And so in fact, you and I that is Scratch because I don't know how I don't know how to MIT did that, and they of functionality away already these puzzle pieces we see here. So the code will work the exact same. [MEOWING] But it's sort of better abstracted away the idea of meowing. But I bet I can improve this further. Can I get rid of the And let me just tell the meow Well, let me go down to the bottom and I'm going to right-click and I'm going to edit it. So I'm going to make a change. And I didn't do this before, but I'm I'm going to add an input. And just so I know what I'm going to add the word &quot;times&quot; here. And I'm going to change n for &quot;number&quot; is the we want to talk about a number in CS. So now notice the puzzle piece It takes an argument n, which represents the number of Now, that doesn't do that yet. So let me go back to my other code. Let me just decouple these temporarily. I'm going to move my loop into But I don't want to hard code, that is I'm going to grab this So now I've generalized the function. So now it will meow any number of and now more powerfully. Out of sight, out of mind. Notice that my code just Like, my function is called &quot;meow.&quot; It meows some number of times. All I have to do is type a And I don't care any more about implementation details. So here, no surprise. If I type in the number 3, [MEOWING] --it still works just fine. So any questions on what It's still just meowing, but It's this creation of our own this abstraction that's going to be No? All right. So let's make this a Let me throw away all of this code. And let me go ahead-- oops-- let me throw away this code And let me go ahead and give And let me go ahead, and let's by moving my cursor over the cat. And maybe it likes that, so So let me go under Control, and which we talked about as Let me go to Sensing, and But here is a weird that says touching mouse So that's a Boolean expression. So I'm going to drag that, and But it is the right shape, And the question I want to ask is if then go ahead and meow happily. So let me grab the meow And so I think when I click the and now I let the mouse pointer huh. huh. Doesn't seem to be working. There's a bug or a mistake What did I do wrong? Yeah. AUDIENCE: You didn't specify DAVID J. MALAN: I don't need to because a detail I In the bottom right that the cat is already selected. So this code relates to that cat. So your instinct is good if but I just have one, Other thoughts. Yeah. AUDIENCE: It only checks once. DAVID J. MALAN: It only checks? AUDIENCE: Once. DAVID J. MALAN: Once. So I click the green flag. The computer did what I told it to do. The mouse pointer was not because it was touching the green flag. So, of course, it didn't meow. So what maybe is the fix here? What puzzle piece can we add? AUDIENCE: After the green DAVID J. MALAN: OK. OK. Interesting solution. So let me go ahead, and under Control I'm going to change the 1 to 5, and So here we go. 1, 2, 3, 4, 5. Damn it. [MEOWING] OK. That was yours, not mine. [LAUGHTER] It didn't work. AUDIENCE: [INAUDIBLE] DAVID J. MALAN: Sorry? AUDIENCE: [INAUDIBLE] DAVID J. MALAN: Oh, maybe forever. So your approach would work, but Like, I would have to time it perfectly it, or, conversely, I have leave it there for five seconds. And that's a little weird because and then five seconds Like, presumably, we want So I like this idea of a loop. Right? Why don't we just tell the cat as by using not repeat but forever? Let me move this in here. So now the cat's going to be told when if touching, if touching, if touching. Oh, meow when actually touched. So now if I zoom out and hit I don't have to wait But when I do touch the cat-- [MEOWING] [APPLAUSE] [CHUCKLES] Fan section here. Thank you. [MEOWING] So now it's actually working quite well. So there we have sort of a logical bug. But it does make sense if you told the computer to actually do. Well, let's make things by using one of these extensions. In this bottom left corner, this is Let me go to Video And I can actually-- there we go-- Let me go ahead and do this. Get rid of this code, and When video motion is greater than-- well, this is CS50, so which is just a measure of motion. Let me go and play sound meow. OK. And let me stop and restart. All right. So there's the cat. [MEOWING] OK. It worked. The cat's a little insensitive. [MEOWING] There we go. Actually, you know what? Maybe it's just-- let me 20. Oh, my God. Oh, that's OK. [MEOWING] There we go. All right. There we go. So now it's a little more sensitive Now, this is kind of a weird example. And if I just start moving it's just going to meow incessantly, [MEOWING] Stop. [LAUGHTER] OK. When in doubt, this is [LAUGHTER] All right. So now we're back to But where can we now use these Like, we were doing such But even that we could turn Could we get like one One volunteer? Everyone's looking down. OK. On the end here. Come on down. Yeah. All right. Round of applause for our [APPLAUSE] All right. These Super Mario cookies depending on how this goes. So I'm going to have you come over here. And in advance on Scratch's website, one of them written by one of your that they implemented this So what you're about to see And you're going to see four moles And using only your head-- up, down, left, right-- to get a point every time your So you're about to see things get But using these building blocks but have four sprites, not We can actually turn [MUSIC PLAYING] So here we go. Click Beginner. OK. And we just need you to [MUSIC PLAYING] [INDISTINCT CHATTER] [CHUCKLES] [MUSIC PLAYING] Nice. Ten seconds. [MUSIC PLAYING] Nice. Two seconds. AUDIENCE: [LAUGHS] DAVID J. MALAN: All right. A round of applause. [APPLAUSE] Thank you. You want to introduce yourself? AUDIENCE: Hi, everybody. My name is [? Vanilla. ?] and I'm going to be majoring in DAVID J. MALAN: Nice to meet you. Here we go. Thank you. AUDIENCE: Nice to meet you. [APPLAUSE, CHEERING] DAVID J. MALAN: So we won't look It was written by one And you can see it But you can think about now with Boolean expressions, loops how you could So odds are there was a loop that for that kind of of those extensions that touch one of those sprites. Notice that there's And we haven't talked about this yet. But just like in math, where you in programming, you can create in Scratch that just keep track that keeps track of how many times And so you can implement the mechanics blocks. But how do you go about that's more interesting Let me go ahead and one of the very first when I was in graduate school I was taking a class at MIT's Media Lab. And they invited us to beta test-- that became part of the world. And the game I made was this one here. Let me find the right So &quot;Oscartime&quot; is a game that took It was a little bit addictive, but And I won't play the whole game. But it looked a little OSCAR: (SINGS) Oh, I love-- DAVID J. MALAN: Where trash And I can click on it and drag it. And notice as I get close, And if I let it keep falling, it And I can do this again. OSCAR: If you really want DAVID J. MALAN: All right. Here comes something else. OSCAR: I have here a sneaker that-- DAVID J. MALAN: So now OSCAR: It's all full of DAVID J. MALAN: And it just keeps And if we can lower the volume for just But to your comment earlier sprites, that's what we're seeing here. Even though our examples thus far pieces, or a few puzzle pieces. Here is, I claim, a sprite. Here is another sprite. Here is another sprite. And by toggling among them in I can just associate different puzzle Now, I didn't start off by And in just a moment, if we can we'll see even more trash is falling. So this is what-- I hate this song now, like 10 plus just to get the timing right. But it brings to life all And if you play it again and again, because I'm using some randomness. So this newspaper doesn't Sometimes it's here. Sometimes it's here. And so here, again, we have things are being perturbed a to keep things more interesting. And let me go ahead. OSCAR: (SINGS) I love trash. DAVID J. MALAN: There we go. How. about raise a little volume? One more piece of trash. So a clock. It just goes on forever, But let's go ahead and consider. Let me close that. Let me go ahead and consider. How I went about implementing So I will stipulate-- let me open a few of these versions was pretty much just Right? I was kind of procrastinating, I found the Sesame Street lamppost, And done. Version one is done. It didn't do anything, but at least That is to say I took a Then I started thinking how do I bring the trash to life, even And so I created another sprite in that bottom right-hand corner. And I thought about, well, what I want it to just kind And so what I did here If I go to this trash piece Out of order. What I actually did first was I If I play this game, the trash But I can do this. I can drag it, and as before, I get the trash can lid to go up. So how do I do that? Well, let me click on Oscar And here are the puzzle pieces I changed Oscar's to be just number one, which was one of And then I forever did this. If Oscar is touching change Oscar's costume to number So it's super simple animation. I'm just toggling between lid but it kind of feels interactive. And if I wanted to I could have 30 different costumes where Then it would look even more But this was enough to is to say I didn't try to implement I just took a second And then my next version have looked a little something there's more going on here. Let's look at two of The first thing I did was I and I had to Google to figure didn't let me drag the trash But once I figured that to go to a random from left to right and because I always want the And then what do I do? I told the trash to forever change its by negative 1, negative at a time, which creates the But I needed to do one other Each of your sprites can have so to speak, that are not They will happen in parallel for you. The second one is saying this. Forever if the trash is touching Go to a completely different x Why? Well, as soon as I drag I want it to disappear as And I then want it to reappear So I just thought about for the trash to go into the trash can. Well, who cares? What really matters to the disappears and teleports elsewhere. And so that's the idea So if you can reduce intuitive ideas to you can start to make things And lastly, if I look you'll see that we've combined these. And so indeed, if I actually not only is it falling. I can let it fall right on top But notice Oscar doesn't pop out yet and then the fifth version. And then I added the annoying composed this program so as to accomplish my larger goal. And this is going to be true be it in Scratch, or C, or Python, or or rather, trying to reduce your ideas, building blocks so that and maybe you submit version 10 or 20. But you don't try to implement You take those incremental steps. All right. How about one other? Well, let me propose this. Let me go ahead and open that your predecessors also implemented, like this in version zero. Suppose I wanted to simply has these kinds of mechanics. I'm touching my arrow keys on my And I'm moving the Harvard logo. Let me zoom in a bit. So if I hit the up arrow, If I hit the down arrow, If I go all the way to until it hits the wall and So this is like the beginnings of a maze, something like that. Well, how might I implement this? Well, let me look inside this one. And there's a lot going on, but, Notice that I've got three sprites-- a left wall, which is the right wall, which And just intuitively, why did Why do they need to exist Yeah, in front. AUDIENCE: [INAUDIBLE] DAVID J. MALAN: Yeah. I want it to interact with the shield. So I need to be able to ask not touching mouse pointer but a different type of yes/no question. And so what is the code for Well, there's a lot of duplication, and Notice that I've got this I want the shield to go and then forever listen for the human's So I decided to implement my implement the two separate ideas. One, just listen for the right-- and then do something. And then feel for walls is down, left, or right, need to stop doing whatever the So now if we dive into those are abstractions, custom puzzle pieces. Let's look at the Well, here's the keyboard. If the key arrow up is If key down arrow is pressed, And you can probably Right arrow is x by 1. Left arrow is x by sort of all that's involved But wait a minute. Why is there no loop in this I needed a loop last time AUDIENCE: [INAUDIBLE] DAVID J. MALAN: Exactly. I put the loop in my up top so something is telling me So it's got to be somewhere, to be in the actual implementation. And lastly, how about Well, if touching left wall, which is So that is to say if I'm I want to bounce it and same thing on the right wall. If I'm touching the right back to the left, which effectively the key, it's like but it's never going to go through It's going to stop it right there. All right. Let's add something else to the mix. Suppose I want the game to change where Yale is some kind of block So some dramatic race here. OK. I just got by, but the to be doing all that So I'm guessing there's a loop, maybe too. So let's go ahead and Let's not worry about Harvard Let's look at the Yale puzzle pieces. And sure enough, go to the middle. 0 comma zero. Point in direction 90, so And then if touching left I'm kind of cheating this time, but so you effectively bounce off the wall. This just tightened up my code. I don't need to do the I just say bounce in this constantly move one step. Now, if this is a game where Yale well, let's change the 1 to 5. Move 5 pixels at a time. Let's move it 10 back and forth. Let's maybe 100. Uh-oh. So what just happened? That is a bug, which we can But why did it break out of the wall? Yeah. AUDIENCE: [INAUDIBLE]. At first it was [INAUDIBLE]. DAVID J. MALAN: Exactly. Because I'm doing 100 never actually touching the sort of stepping way over it. So there's never a moment where So previously, I was just getting gradually going over just enough time to detect as much. So I would have to kind handle this a little bit differently. So it's a bug if it's too fast. But at least if I keep the math actually does work out, so Well, let's do one final flourish here, Right? They're super smart, so track us and follow wherever I'm going. So how might this work? All right. So nothing happens yet because we And notice here-- OK. Now MIT is struggling. It's kind of twitching there because and then above, and below. So we could fix that too if we want. But that's just a function of Let me open up this one, see And it doesn't take much So go to random position, forever AKA the shield, and then move one step. So if I wanted to make MIT even smarter, AUDIENCE: [INAUDIBLE] DAVID J. MALAN: Yeah. Change one step to two steps to double or 100 steps. And the game is going But that's all it takes to now So if you are a game player or computer, or whatever, if you can probably now start to those mechanics because it's just being loops, variables, and So let's go ahead here and We've got one more bag of Oreos here. OK. That was super fast. Do you want to come on up? All right. Brave volunteer. Come on up. [APPLAUSE] All right. Let me find the full-fledged version made. And let me get the right one. OK. Here we go. We'll see some instructions on And when we hit Play, you'll see that into one full-fledged game. But first, an introduction. It's on. SAM: Hi, everyone. I'm Sam. I live in [INAUDIBLE]. I'm a freshman, and I'm from Nepal. DAVID J. MALAN: All right. Welcome to the stage. [APPLAUSE] SAM: Thank you. DAVID J. MALAN: All right. So here we go. Yep. Go ahead and click the green flag. [MUSIC PLAYING] [MC HAMMER, &quot;U CAN'T TOUCH THIS&quot;] DAVID J. MALAN: You see the (SINGING) You can't touch this. DAVID J. MALAN: Nice. Now there's that Yale element. (SINGING) You can't touch this. My, my, my my music hits me so hard. Makes me say, oh, my Lord. Thank you for blessing me with a It feels good when you know you're down, DAVID J. MALAN: OK. Third Yale. All started at slightly (SINGING) I told you, homeboy. You can't touch this. DAVID J. MALAN: Nice. All right. There's MIT. (SINGING) And ya know [CHEERING, APPLAUSE] DAVID J. MALAN: Oh. (SINGING) You can't touch this. Yo. Let me bust the funky lyrics. DAVID J. MALAN: Gotta go fast. Oh. No. Oh. [CHUCKLES] (SINGING) Cold on a Let them know that you're too much, DAVID J. MALAN: Nice. [EXCLAIMING] (SINGING) You can't touch this. DAVID J. MALAN: No more (SINGING) Yo, sound the bell. School's in, sucker. DAVID J. MALAN: Princeton now. (SINGING) Give me a song or rhythm. Making them sweat, that's Now, they know you talk about 'bout a show that's hyped and tight. Singers are sweatin', so pass DAVID J. MALAN: Second to last level. (SINGING) The chart's legit. Either work hard, or That's word because you You can't touch this. Break it down. DAVID J. MALAN: All right. Clear. There we go. Nice. Oh, oh. Oh. Few more lives. Oh. (SINGING) Stop. Hammer time. DAVID J. MALAN: Here we go. There we go. [EXCLAIMING] All right. Couple more tries. Yes! Oh, no. (SINGING) This is it for a winner. Dance to this, and Now move, slide your rump. DAVID J. MALAN: Starts (SINGING) Just for a minute, Bump, bump, bump. Yeah. You can't touch this. Look, man. You can't touch this. You'll probably get hyped, boy. DAVID J. MALAN: One more try. (SINGING) You can't touch this. Ring the bell. School's back in. DAVID J. MALAN: All right. A round of applause, nonetheless. [APPLAUSE] Nicely done. Thank you. So as you might have to wander to the light actually 64 of these light bulbs. And I'm wondering if you divide 64 And we now have some So might very well be been spelling something out on the But before we adjourn for cake allow me to introduce some the Harvard Krokodiloes to give us this exciting [APPLAUSE, CHEERING] [HARMONICA NOTE] [VOCALIZING] SPEAKER: (SINGING) There's a And since the old [? BNC ?] has A two, three, four. [VOCALIZING] Oh, rubber ducky, you're the one. You make [INAUDIBLE] so much fun. Rubber ducky, I'm awfully fond of you. [SCATTING] Rubber ducky, you make me Rubber ducky, you're It's true. When I'm at a standstill, your When I'm at the end of my rope, you Rubber ducky, you're so fine, Rubber ducky, you're It's true. You're my best friend. It's true. Rubber ducky, I'm awfully fond of you. [CHEERING, APPLAUSE] SPEAKER: Good afternoon, CS50. We are the Harvard Krokodiloes, founded way back in 1946 at the We'd love to make a big and to David Malan for having us And you enjoyed this performance, this weekend at Farkas Hall. [CHEERING, APPLAUSE] SPEAKER: Hello, everyone. We are some of the Radcliffe hosting auditions this weekend. You can find more information at Now, let me tell you a little today, when I was sitting in your very And this is just about [HARMONICA NOTE] [VOCALIZING] (SINGING) It's the first day of Is this for me? So many people around. Can I get through the workload? But it's my dream. I tend to stick to English, not science. But my [INAUDIBLE] friends Hey, dancing robot dog, you kind of I guess. I really need some advice. (ALL SINGING) We know but this is really the right call. In CS50, you'll meet new You'll be all set for this fall in CS50. You have a thousand You'll get cupcakes, And you can always take SPEAKER: This is CS50. Fist bump. [LAUGHTER] [APPLAUSE, CHEERING] DAVID J. MALAN: Thank you to the Kroks. Thank you to the Pitches. Cake is now served. Come on up to say hi if See you next time. [APPLAUSE, CHEERING] [MUSIC PLAYING]