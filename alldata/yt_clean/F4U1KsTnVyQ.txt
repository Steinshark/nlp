In this video, we'll take a look important components that everyone should The two high-level components of Kubernetes Let's say you develop an application, create container registry such as Docker Hub or to deploy the application to Kubernetes, we kubectl will upload this object to plane will select an appropriate worker First, let's explore the worker node every single node. They are used to provide the The first one is kubelet. First of all, it is establishes a connection with the control It takes a set of PodSpecs from the containers described in those For example, it can use health checks to verify the status of applications. manage containers which were not Next is kube-proxy. It is a network proxy probably aware that to expose an application service Kubernetes objects. This kube-proxy It maintains network rules on nodes. These to your pods from network sessions kube-proxy uses the operating system packet available, such as iptables. Otherwise, Now, kubelet doesn't run containers directly; we had to install the Docker daemon on every Kubernetes deprecated Docker and developed One of the most common open-source projects used implements that runtime interface and needs to for managing the execution and lifecycle of Now, let's take a look at the control plane makes global decisions about the cluster. create a cloud load balancer to expose At the front end, we have kube-apiserver, a can access the Kubernetes API by using kubectl, One of its functions is to provide secure access cluster, the API server operates on port Once TLS is established, the HTTP request the request is authenticated as coming from Another function is to validate and configure services, replication controllers, and others. spec and try to apply it, Kubernetes Also, the Admission Control module, can be used to dynamically modify the if you use the Istio service mesh Kubernetes will inject a sidecar It is a stateless component that can be scaled Like any other stateful system, Kubernetes specs somewhere. For storage, Kubernetes highly available database, which means 3 or 5 instances to form a cluster. It and in case one fails, another etcd member That's why, when you manage Kubernetes yourself GKE, or AKS, you need to periodically any other database you have. In case of a restore the state, and Kubernetes will take care Next is kube-scheduler, another control plane pods and, if a pod is not yet assigned to a node, cluster constraints. For example, it will take and it will also consider pod and It's a three-step process. scheduler finds the set of nodes where it's a node must have enough available resources In the second step, scoring, the scheduler ranks the remaining nodes Finally, kube-scheduler assigns the Next is kube-controller-manager. While there to reduce complexity, they are all combined into Kubernetes has a reconciliation loop that desired states. For example, if you will change the desired state. then try to perform necessary actions, such as Let me give you a few examples. which is responsible for noticing Then, we have the Job controller, represent one-off tasks and then creates Additionally, we have the which populates EndpointSlice objects to And there are other controllers as well. And finally, we have the cloud-controller-manager, logic. For example, if you host when you create a service object of type the necessary API calls to AWS and create an AWS responsible for allocating EBS cloud volumes So, this controller is used to integrate these controllers are developed by the there is definitely a trend now to decouple For example, AWS created the AWS Load Balancer deploy to the cluster to achieve the same develop and integrate new features quickly without If you're just getting started, a local cluster. By default, it cluster where the node and control In some cases, for staging or development, you can create a Kubernetes cluster with a nodes. This is typical if you want to save Even if a single-node control plane goes down, unavailable; it simply removes Kubernetes from you would still have time to fix the Typical production setups usually deployed on three nodes. If another node becomes the active one, and Nowadays, the most common deployment is to use the control plane is hidden from you, and you I think, the most ideal use case if you Additionally, some cloud providers even let you GKE Autopilot, and others. When you 3 replicas, the cloud provider will create definitely reduces maintenance costs, but these If you want to learn more about Kubernetes LoadBalancer, and Ingress, you can watch tutorials that you may find useful. Thank you