Hey everyone in this video I wanted to provide kind of a how to study for the PL-900 exam the Microsoft Power platform fundamentals. As always this is useful. A like subscribe, comment and share is appreciated and hit that Bell icon now I did a number of other study crams for the fundamentals and people said do one for the power platform. Now hopefully you know I'm not really a power platform person but I wanted to try and help. As best I could. So I actually went through, studied and took the exam and I did pass the first time, so I'm going to kind of walk through what I did to pass the exam. Now the first thing is, it is a fundamentals exam, so you don't need to know huge amount of detail. You don't need to be an expert in any of this at all. The key point is to understand what are the key components of power platform, how do they interact and what are really their key features. Where would I use them in my business? Now the first step is you can get a free single person learning. So there's a developer plan and I've got the links in the description below. But if you actually head over. You can go ahead &amp; up for this powerapps developer plan so you can build and test power apps for free. So it's going to give you kind of this little dev environment. I can't collaborate with others. It's just for really my learning, we can go ahead &amp; up for this. That's really going to help you to just understand what some of the options are. You can go and have a play around and I think that will help in your overall learning. So that's kind of the first thing I would go &amp; up for that. Now it is fundamental, so I think about what is the exam. It was 60 minutes long so it's not a long exam. And I got 45 questions. Now all of those questions are either single choice, hey pick from this list what would let me do this, or maybe it's select multiple things that apply. Maybe there's a set of things and I drag and drop it onto. Maybe there's multiple questions using that same list. Which would I use for this? Or, hey, I want to do this thing, kind of put them in a sequence. But that's all it is. They're very simple questions. There's no case studies, there's no hands on labs. It's just kind of answer this either by choosing one thing, choosing multiple things, or drag and dropping things. So how would I do X? Or maybe that's a power app. Maybe that's a canvas app, maybe that's a model based app that's a power automate, maybe it's a schedule. So we're really just targeting how would I do certain things. Now from a learning perspective. You don't actually I think require any real hands-on to pass the exam, but start off going to the PL 900 site. So if we jump over to the PL 900 site, we have the Microsoft Power platform fundamentals talks about scheduling the exam. Pay attention to this skills measured. And what you really want to do is download the exam skills outline. And it's going to walk through what are the individual skills you actually need. And what are you being tested on? So think about going through these and making sure you can actually understand. OK, well, what are these things? Do I know what these mean? And sometimes if it has changed, if you go down the bottom, you can see kind of a red line version that shows you what changed from the old version and you kind of you'll see common data service and you'll see Microsoft Dataverse. They are the same thing. So there's been some branding changes. They did some branding changes. Instead of using the word entity, they used the word table. Now there were some changes they kind of recently made and you can see that right here. So you can see, hey look, describe. The Microsoft dataverse and they've changed the word entities to table fields to columns, so they've gone some more common language. So if you knew think before you can kind of look at, hey, what has changed with this more recent version. So you can really, I would make sure you go through that. Now the next thing, and this is what I did, I just went through the free learning path. So there's a Microsoft Power platform fundamentals basically course there's 12 modules you kind of go through and I really think that will put you actually in a great position. So I would go through that, make sure you've gone through it, taken the time. And that is all I did. So I went through that and again I passed the exam the first time. So go for the skills outline, go through and that online module and I think you'll be in good stead. Now, what I'm going to do now is just talk for I think some key items, just there's going to be a last minute cram before you're about to take the exam that I think would help. Firstly, why do we have any of this at all? I can think about as an organization. I have various types of data. Now that data could be kind of on premises, it could be in databases, it could be kind of in files, maybe like XLS documents. It could be data in the cloud. So I have all these different kind of sources of data and ultimately what I want to do is people want to get value and insight from that data. And the whole point of power platform. Is to democratize the ability to interact with the data. In the past, we could think about, well, we had to be experts. I had to be a developer, I had to be a DBA to be able to interact and get value from the data. The point of power platform is that anyone? A regular user A C-level executive. Anyone can actually go and create ways to interact with the data and get value from it. So if we think about kind of the whole term of power platform. A big deal around Power platform is you'll hear the term no or low. Code. I do not have to be this expert developer. We want to be able to bring these tools so that anyone in the business can actually go and interact and get value from it. So the idea is citizen developers, and I'm not developer citizen developers. Anyone in your company can go and actually get value from this. Now when I think about what does it actually made-up from, there were four key components. So I want to kind of go through those four key components and talk about what the true value of them is. Now. The first one a lot of people are going to interact with is actually power apps. So we have power apps. And these I can kind of think about as really this user. Facing app. So I'm creating this user facing app. Again this is low or no code, but it's a custom app I'm creating to meet some business need. Now it's going to take advantage of different types of data. I can kind of think about it had those data sources and one of the things we're going to have is connectors. And we're gonna talk more about these. So we have these kind of connectors that can go and talk to data in the cloud, other clouds and there's even kind of data gateways to go and talk to maybe data I have on premises. And then there's also this idea of this native kind of store, which is that data bus. Now that was and you might still hear this talk PaaS kind of the common. Data. Service. Or CDs. And commonly there'll be things that essentially enable us to get data and I can bring it into the common data service through some of the other things we're actually going to talk about. So we have these user facing apps we actually going to create. Now, this is all browser based, so I'm doing all of this from my browser. There's not a client application I installed. I'm actually going to go to themake.powerapps.com to actually leverage this. This is all built around. We're kind of write that in. Make. dot power apps.com. Now these are actually just linked from the office portal. So if I go to the office portal, we can kind of go and I'll show this later on this all apps and I can easily get to my power apps, I can get to the other things I'm going to talk about as well. So we're going to create an application to interact with the data. That's the whole point of what we're doing with these powerapps. Now there were different types of power app. I can think about. Well, there's three types. We have a canvas application. Now is the name kind of suggests with a canvas application. I'm presenting with a canvas that I can drop controls onto. So I'm controlling that user interface. I'm constructing what I want it to look like now because of that I design it Eva with a phone interface in mind or a tablet. Interface, which is really the same as a PC. So we have this wider kind of landscape orientation type app or phone, a portrait type orientation and how we kind of lay out that data. Now I have to pick this that's going to drive the design layout and I cannot change it. So I have to think about what is my audience for the app I'm going to create. When I use a canvas app, I pick phone or tablet and then I can't convert it really after that. So make sure I pick. Out of the right one, so know the gold platform. Now for my canvas app, I can actually bring in data. From these connectors so I can get data for my canvas app. From a huge number of connectors, I think they say 275 in the course, but I think there's about 300 now. Or and or. Kind of data from the data bus. So the whole point of this is, hey, I'm going to construct this interface so if we jump over for a second. Now once again if I was just in office, if you click kind of the the app launcher at the top from up here. In these kind of three dots so if I click that we can go to all apps. And we'll see down here power apps. So I can click that and it will take me over to make powercom, which is where I am right now, and you'll see it's giving me the choice of make your own app, Canvas app from blank, model driven app from blank, or portal from blank. It's also giving me this option to start from data. So let's say for example I had a SharePoint list which I actually do, so I created a SharePoint list. And this is kind of a a document how you can create a SharePoint list and I can put that kind of in the link below. But I'll actually show you my SharePoint list data. Let's jump over here. Actually under work can find it easier so I can actually see. I created a SharePoint team site and I created a SharePoint list on that and all I created on this was Super, Super Simple. It's just a couple of video pieces of data. So it's literally just two of my ask me anything sessions and you can see I've got a 50,000 AMA, 60,000 AMA and I have a link to a thumbnail as a URL which is not showing on this chart, subscribers published date and a link to a YouTube video. Now you can see from here I can actually select integrate. Power apps create an app. So I have that just natively in SharePoint right here. To go and create an app and I that's what I did. So if you do this it will go and automatically create a three page application for you, which is what I have down here. So all I did was select that option, you give it a name and it created me this power app. So it's linking to the SharePoint list. And it gives me these three screens. So the first one is going to kind of be this summary view, a gallery. So there's different types of components we can actually have in our power. So gallery is 1, where it's displaying kind of the multiple items that we have from our data source. This is taking a long time. For some reason it's having a bit of a laugh. There we go. So it's loading in and kind of this is the application. And you can kind of see, hey it's actually going and getting the images that were from the link and I have kind of the data from there. Now what I actually want to do on this is rather than just run the application. Let's actually go back over. We go back to our power apps. Let's go over here. And what I want to do? Is actually edited so we're slightly edit button. And I can actually hear see the editing environment and some of the things I can actually do. And this was again all auto generated now instead of doing it from the SharePoint site. I could, absolutely. I've just done exactly the same thing by selecting hey start from data, for example SharePoint. And then I can actually say, well, what data am I actually leveraging? And it will actually go and load. So I can say hey you've got a SharePoint so I can say yeah my recent site I'm going to pick the list and then it would go and create the item. So I can create it in multiple different ways. But here. Is my app so we can see what did it do for me. So it created 3 pages. It created a browse screen. Over here. It also created a detail screen. And an edit screen so it just automatically create this nice three page app. And it's composed of various elements. So you can see kind of, hey did a rectangle here, a search icon, added a text box, and then we have really this browse gallery. So these are the items it's showing me. And you can see it has a data source, which is the YouTube AMA. I can edit the fields it's showing. But because it's a gallery, notice I have this layout on the right hand side. So I have this layout option. And I can change that. So I have all these different options. So I could say we'll just show me the title and subtitle. Done. I could say hey I want the image, title and subtitle. Now it's going creating that so it's just basing and I could customize that even further if I wanted to if I actually go and dive in. You can see hey all the different elements and I could add elements, remove elements, it has all these different parts to it. I could add additional buttons so if you go and look at insert for example, well I can add labels here at the top. Buttons, text inputs, gallery, data, tables, forms, media, chart, icon, mixed reality. All these different types of things. So input hey I could add pen, input hey I want them to sign something a radio box from the gallery. Hey different types of galleries to show things. I could add a form, I could add media, I could add a camera. So it actually use my kind of device so I could take the camera. And add that onto it. And I could say, yeah, allow the camera. And now I've got a little camera part. So this is me waving over here, but I added two by mistake. But I can kind of remove those. But you can drag and drop those various elements. I could add icons. So there were some very rich, powerful controls you can see, like barcode scanners, microphones, charts. I could add things here, a power BI tile. So we're going to talk about other components. But the whole point of all of this is I'm really, I'm designing it. Creating I'm dragging and dropping a ranging different components I want onto my screen that we have a detail screen. And I can even have an edit screen. Now I can launch this. I can click this little play button, hit F5. Up here. At the top. And see it in action. So it started from where I was, but let's just close that. Just do that quite right. Let's close this second. Go back to my browse. Let's try that again. So here's my app. I could go in and look. There's the detail. There are actions. I could actually go and use this to modify the data. Go into this one. OK, great. I could go and click and launch the video. So all of this was just done automatically for me. I didn't have to do anything. So you can think about, hey, there's some source of data. This could be an XLS spreadsheet. There are many different things I can do with this, but the whole point of what this power app Canvas app is doing is I say hey. I want to create an application as easy for users to leverage. So I'm designing the layout. I pick where the data is coming from. Go and play with this again. This is an easy one it created for me from the data. I could just as easily kind of start and create a blank one. If you create blank then it's going to ask me, hey, is this for a tablet, IPC or a phone? I have to pick that and then I can't change it. I'll give it a name, I'll have a blank canvas, and then I just start creating the various things. So that's that kind of canvas based application. Now the next one I have over here you'll see this model driven app. So if on the Canvas app the point was, hey I've got this canvas and I had to design the layout. The model driven is completely different, as the name suggests, with the model driven. This is based on the data bus. Not connectors. Now the data verse we're going to talk about this is really made-up of tables. I have tables with rows and columns. Columns with certain type of data rows, the different entries within there. There's a whole set of built-in ones and I can add custom. Ideally we try and use the ones that are there by default. So with a model driven a, I'm really just focusing on relationships between data. And kind of the forms that I want to expose. I don't worry about the layout that's auto done for me. I just say these are the things I want to kind of show. These are maybe the rules around how they interact. It does all of the work for me. I focus on the data entry. I'm using this because I want people to be able to enter data. For this, I tell it what things I want to show. I create that model of the data, the model of the relationships between them, the business process, and then just build the app. Again, it's only created from data in the data bus. I can't on here go and use like an XLS spreadsheet. I'll have to bring me the data into the dataverse from that XLS spreadsheet first. All that SharePoint list, which I can absolutely do. So again, if we jump over and looked at this one. And so the think of the difference here. So if you get questions like, hey, you want to be able to design an application where you pick the layout, well it's going to be a canvas app. If it's hey we want this basic auto formatting application that just focuses on forms for data in the database. Well hey that's probably gonna be a model driven app, so I a model driven app. And literally all I do I'm going to change my environment over to my little developer free one. So I'll do my classic a designer. And literally all I have to do here. Go away. He's. By select what entities. Now it's the terminology has changed, but sometimes you're going to see the world entity is. Sometimes you'll see the word tables and entity. Remember is a table, it's just the terminology has been changing between them. And the test might say entity, but realize entity equals table. That's kind of a key point in all of this. So this will open up this app designer. I don't know why this is all so slow today. And all I have to do is really define. What are the various groupings of data and what forms I want to actually expose to the user? What the relationships are between them and if also there's any kind of rules that there has to be followed as part of completing this? Let's just wait for this to finish. There we go. So it got them in the end. So notice I could pick a different tile if I wanted to, but I'll just call this demo app one. I can add descriptions I could if I wanted to pick a certain icon over here. And we're just click done. And it's a very simple experience what I'm doing here. I have to create a site map. So the site map I click the little edit icon. I'm really I've an area, I have a grouping. These are just labels I can give. So my area for example, I don't know, I'm just going to say business. 102 whatever the name is as a certain grouping of the various tables I'm going to have under there. So maybe other customers, whatever it could be, what you're really caring about is the sub area. So now it's have these components on the right hand side, I have areas, groups and sub areas. So we're sub area. Well this is actually something for example. My sub area here. I have a particular entity now. If I go down don't want it keeps changing to this. This is doing weird to me today but I have to select a certain thing. I really don't know why this is doing that. Or is it doing today? Let's give it a name second. So I'll change it. I don't know why it's it's misbehaving as I'm trying to demo this thing. So I'm over here. I want to change this. From the drop down there it's working OK. I might say this is accounts. Notice it just changes that text for me and this obviously type is an entity, so this is from the accounts table. Now what is that if I just jump over to powerapps for a second, if I go to data, so this is the data bus, it's showing me the tables which again remember is another term for entity. There's all these built in tables and out of those as we're kind of see kind of quickly there's like account activities address. Appointments, attachments, contacts, emails, things like phone calls. I might be having tasks so I can. Kind of have all of these different things and these are made-up of various columns. So I looked account. Well, we can see hey from the columns we have for accounts within the data, verse count, names, addresses, all of these different columns I could actually go and add. Then I could define relationships between those various tables. Now what I might say at this point is, OK, so under customers. I want to add a new sub area. So I can. Drag this, it would let me. Let's just do add. Sub area. So I've got a new sub area. Once again. I might add. Another element. That is related to what I'm trying to achieve, so I might just say tasks and again this type is an entity. At this point. So this is the site map designer and I could add additional areas and these are all going to be generated for me as an interface for people to actually go. And enter data into so I could save my changes and save my site map and I could publish that. It's publishing the site map. And I'm just going to. Save and close. So now I have. You can see this entity view. I have accounts and tasks. There's a whole bunch of built-in forms, built-in views, dashboards. I can edit that so I can say, well, the only ones I want. So it's there's domain forms, there's an account for interactive experiences, there's quick view forms. I could turn some of these on and off as I wanted to. Same for tasks. There's different types of forms available now to have to unselect all and then I could. Going to control which ones are available. Same for all of the views so I can go through and customize what things do I want to be available. I could add business process flows to control sequence of steps when they actually complete this. But at this point, if I just hit save without really doing anything and justice publish it this. What you'll see is I just added the tables from the database. I've not added rules, I've not really changed anything. If I just hit play, this is now the user interface. So through this model driven application. All I did was say the tables I want and normally you would define relationships and some business rules about actually completing this. But now I actually have this interface automatically generated for me. That. I can just use. I don't have to worry about anything. So now as the user of this model driven power app, which is what we're dealing with right now. That's all I focused on is what data, so I could go and look at the accounts, for example. Once it's actually loads. It's a everyone must be using powerapps right now. It's being super slow. But I could go and look at my accounts and it will have default forms associated with that. And from there I could then go and add so I've got no data available. OK, but notice I could do no. If I do no. It's giving me this layout. It's automatically generating it based on the form factor that I'm in. If I was on a phone, I would get a different type of view and I could go and complete the data. Or I could go and look at the tasks. And again, I don't have any, but I could go and add. A new task and then we'll go and add it into the data verse that common data store. So that's kind of a model driven application. I'm not focused on the layout, I'm really just focusing on what data do I want to be able to be input through this application. And then it goes and really does all of the work for me. I'm not worrying really about anything else. So that's the model driven and then the final one. And so really both of these, these are focused from an audience perspective as kind of internal users. That's who I'm really focusing for these. Then we have this portal. Based application now the portal one is more about external. I want to be able to go in and expose this and once again it's this web-based experience. And it's just dragging and dropping components that I want to make available. Now I can create the portal from a blank based application so it's just blank. Let's jump over for a second so if we go back again, going to close that down. And we go to my power apps. Just go home. No. So I have the portal from blank over here. Got my option. If I had things like Dynamics 365, there are other apps, there's portals like community customer self-service, employee self-service, partner portals, customer portals for the Dynamics 365, supply chain management. But the whole point is they're designed to be public facing. I create these portals, let's switch over to my dev environment a little again. Then I take a little while to provision, so I created this. Sample portal over here. Sending me look is going to expire in a period of time. And I didn't put anything on that portal, so you have to actually drag and drop things onto it. So what I would actually want to do is go into here, select edit. And then just like before, I'm going to go and drag things really onto there and create my now more public facing. Application I want to be available so for this I can be anonymous or it can be an authenticated website so I do actually get that choice but these are all going super slow. But hey this was my the sample I didn't put anything on it so you can see it's just doing this default. Hey welcome to powerapps portals but I need to actually go and edit this and create things onto it. You can see hey this was my default layout. But obviously that's probably not what I want. I can go and add components of column selections, 2 columns, text, images, iframes, forms, all of these different things are available to this. Now an important thing when I actually think about these portals is once again in terms of the data. The data is coming from the data bus. I am not using connectors to actually go and get data from this. I can use AI for these applications like the Canvas app. A big one I could actually use is for example these AI integrations. And so I could use things like forms processing, find text in something, find objects class, text classification, is it a positive or negative sentiment. And these all use Azure services, and we'll actually talk about that as a component a little bit later on that could be common to a whole bunch of these things. So I want to be conscious of time. So the next one we actually have, so it was power apps, so I can think about the next component is actually power. Automate. And power automate, this is all about automating repetitive process. So I think about, hey, I'm going to automate. Some process. Something that hey, I constantly need to do. I need to collect and act on data for example. So I can think about. Hey all of those kind of. And this database I can interact. I can interact with different types of connectors to actually perform certain things. It used to be called power flow, was kind of the old name for this. But anything I need to do? That I can breakdown into a series of steps I can do with powerapps. Now they're all these huge numbers, different connectors that I can actually leverage for this. So once again from a data perspective. I'm using. These kind of in in those directions. And I have these event driven flows, so I can think about kind of event. Driven. Flows. If you've ever used logic apps in Azure, this is built on those logic apps. Now when I have these event driven flows, you'll see they have a my flows. These are things that I'm using I'm creating. And there were also team flows. OA team flow is just started off as a my flow and I now have multiple owners. I added additional owners so other people can now use it. So it's a flow I have shared. So this flow has to have a trigger. So this is something that's actually going to go and make this start. There's a whole bunch of different triggers. I can have for example time based. Umm. Schedule. I could have something happened and e-mail received, an object created, maybe a user pushes a button. There's a whole bunch of these different types of things. The easiest way to actually know what those are is we can actually go and look at it. So if I just jump over to power automate. Let's go. And now to get to that, I could be in my office again. And I do my all apps. And I'll see power automate over here on the menu. Now I've already selected that, so that takes me over to this. Basically flow.microsoft.com. And we can see. Hey look they have a templates so I can start from a template to do all these various types of things. Or if I look at kind of. Create. And I do a new flow. You can see you build your own flow from blank and I can see automated instant scheduled desktop and business process flow. So these five kind of flows available to me. Let's just talk a little bit about really what these are. So when I think about those triggers, if I think the automated. O with that automated type that sum event. So that could be an e-mail arrived, there's a tweet, someone created a YouTube video, there's an object created, some event is triggering that. Then we have instant. So instance is some manual. Interaction. A user pushes a button. So hey I see is some question about hey what would I use if I want to call a power automate if. Someone pushes a button in this report. OK, I want that instantly run based on some manual action. Okay instant. And there's scheduled. So this is it. Some predefined time, some interval which is some recurring. So hey, I wanna run a report. At the end of every day? Ohh, OK, well, that that's going to be scheduled. And then we have this UI flow. Now this UI flow is super interesting. Think about there's some user interface that doesn't have an API. I can't programmatically interact with it. What UI flow does is an application you run on your machine and it's basically going to go and capture the clicks you do. So it's going to record you performing the action and then it will allow it to go and do that in the future. So this is also known as robotic. Process. Automation. So it's going to record me clicking on buttons and filling things in so then it can go and rerun that in the future. And then the last one we had, if we go and look was this business process flow. So we have a business process flow that's all about. I want to make sure someone doesn't consistently is in there business. I want to make sure it's done in a consistent way so this is a consistent. Um, way of doing things. So hey, I want users to do this thing and I want to make sure there's no variance in how they're doing it. They're always fill in these things. They follow these rules. I would use a business process flow if I see something about hey, make sure users do this the same way they don't vary, we check what they do. That's a business process flow. So that's why we have these five different types of kind of triggers and the things we're actually going to do and there they call actions. There's a whole bunch of different actions I can perform. I can call power automate. They could send emails, they can call artificial intelligence, I could start an approval flow. So one of the things I can actually do, if we look at the samples, it's kind of interesting. So again, there are all these different templates available, but you'll see these desktop flows, business process flows, hey, notify our team when our forms response is submitted, follow up on a message, create a task from message, schedule a meeting, start an approval in teams. And there's actually a whole section around this if I go home. In my power automate, if I have approvals notice it's got there's a whole thing about approval requests. So within here there's a whole set of things I could actually do. Around hey, I need something to actually go and approve. You can see it talks about hey look approval requests. I can actually go and do that and the templates are organized so there's actually approval examples that I could use as a template. Where I want those to actually be leveraged and there's all the different services we can actually go and hook into, but this is all a web-based layout if I've got to see if I got any flows in here already. So I don't have any. But you could go and create one, save a message to OneNote and what is basically going to do is I have to give details about this. And it will actually then go and on the canvas. They don't have to go and select an item is going to give me these series of boxes that I can just drag and drop. I can have logic between them to actually describe how this is actually going to work. Now an interest, I'm not going to go and create all these different things. But that's what this is going to do. It's a nice web-based experience. Drag and drop, the different types of connectors. I want to do different types of actions and really complete that entire process. So that's what this is going to be about. Hey, I want to perform something. There's a whole bunch of templates that I can leverage. Super simple to actually go and use. Again, I'm selecting this template so it wants hey, what notebook you're going to go and add this thing to from? What teams are going to have to give a whole bunch of details about this that I really don't want to do right now. But that's what that would have done. Drag and drop the things. And it will automate all of that process for me. OK, great. So we've got kind of applications that I can have users interacting with. We've got ways to do repetitive processes automatically. So we have power apps, we have power automate. The next big component is kind of power BI. So this is all around business intelligence? So I have this idea that I have this business. Analytics. I want to actually go and get information about my environment and this is all about generating reports. And dashboards. So report is obviously detailed information that based on again. Remember that common data service over there I can feed into that. This is kind of all built on top of this. I have all these connectors I can go and hook into and really surface this. Now the way we do this and actually leverage it, again it's about getting inside might have KPIs key performance indicators that I want to be able to get into it. There are a massive number of connectors, so if we actually go and look quickly. We can kind of see that there's this power query, ways to actually go and interact, and it shows me the power BI datasets, power BI data flows, all of the different things that I can actually go and get data from. So lots and lots and lots and lots of these ticks. This is all for kind of the power BI, huge numbers of places I can actually go and get data from. Now, the way it's actually constructed is really, there's three main components to this. So there's kind of the power BI desktop application. So this is the really really rich authoring experience. I do very complicated types of queries. Very rich analysis within there. Then there's kind of a cloud service. This has a lighter offering experience. I can't do with the same level of kind of rich interactions, but it's very good to collaborate with other people and surface things, have those reports running. And then there's kind of a mobile application which is really aimed at just consuming the data if we go and look at the Microsoft site. It talks about kind of the parts of power BI and it goes through, hey look, yeah, the desktop application to author. I can then surface and share and collaborate with others by the power BI service and also just consume them on the mobile application. Talks about. There's some other components as well, and again, I'll have the link in the description below to kind of go and read just a little bit about the common kind of flows we're going to see. There were comparisons between the desktop and the Power BI service. So it talks about, hey, look, many data sources, transforming, shaping, modeling measures, more advanced things. They can both do reports, visualizations, security, bookmarks, etc. Power BI service has some sources, but it has these nice rich dashboards and sharing is a huge one. Data flow creation, Gateway connections, maybe it's going to connect to things on premises for example. So we have these different elements that we can leverage. So it's good to go and read through that have a good idea of just what the key components are. Again, this is a fundamentals, you're not getting kind of an advanced questions on these things. But I have a basic idea of where these various components actually play. There's a whole bunch of templates available. But there's a whole relationship between these things. So if I think about power apps, power automate and power BI. So a key part of this is from powerapps for example, I can actually call. How automate? So I can go and leverage that from there, power BI? Can call because remember what is power automate do some repetitive process so I might have something in the power BI report. Hey I want to trigger something. I can add that in within my power BI powerapps. Might have a button I add that goes and calls it. I want it to go and maybe refresh some data into the dataverse. Hey I can go and do that. We should draw those boxes. Think of the data 1st and the connectors really should have been under there. My planning wasn't the best when I drew this picture. Additionally. In my power app, Power BI can have tiles. So one of the things I can actually do is I can add a tile from my power BI. And have it share show in my power application and from an application I can actually go and trigger. To go and show a power BI so there's all these rich interactions between the different elements. It's not just some standalone thing. So there is another component, so we kind of think of four. So the next one we have is actually these power. Virtual. Agents. And you can really think about this as a chat bot. So hey, I want to create something to enable people to talk and maybe ask queries from something. Well, that's going to be a power virtual agent and this is kind of license and you kind of pay for this based on how many you have and it's really constructed of hey I have a topic. So I can think about a topic is a trigger. There's some trigger phase phrase. This is going to help lead some particular element. Excuse me at the conversation. This is using natural language processing, so it's not that I have to get the exact phrase correct. If it's something that's similar to the phrase I use for my trigger, that still actually going to use so I don't have to match the exact words. Then I have entities. This is not the same as entities or tables in kind of the data verses actually an entity of something. And this is helping me understand the intent of kind of what the user is trying to do. And then we have actions we can perform so I can actually go and call. Power automate. To actually go and do saying maybe hey let's go and look something up. They went to some question, hey, when is my older arriving? Oh OK we can go and trigger a power automate that goes and talks to the date of birth, gets the result and passes it back. And then what we have is we basically publish this. Now we can publish this to a huge number of places. So I could publish it to teams, so I can interact from teams, I can go and chat for this thing, I can integrate with things like Slack, I can integrate with things like Facebook. And again, go and look at these and you can see all the different places I can actually interact with now. It's built around a chat session. So a session is 100 turns. Or 60 minutes. Whichever happens first. So that is one session. It doesn't mean if I go past 100 the user gets dropped. It then becomes a second session and this really all aligns with billing. You pay based on the sessions and so just be aware those things are in place for how I actually enable and pay for the service. As for actually go, look at the pricing quickly. If we look at the power virtual agents pricing can see hey look. There's $1000 for 2000 sessions. There's also sessions add on for additional and you can try it free for example, but realize there's obviously there's a pricing element and that's where that kind of session comes in and it kind of it's in small print here. 60 minutes or 100 turns, so that's what is considered. As a session or obviously if the users question is answered then that's the end of the session as well. So those would terminate those particular things and I can see it from powerapps, so if I just go back. So my main. Power apps portal leave. Can see we have chat bots over here. If we do create, I can say, hey, a new chat bot and you can see it's kind of showing me hey look, I create the various elements. There's a whole video. Go and watch it get an idea. Again this goes through in the Ms Learn module talks about these. But hey, I can start the basic conversational bot. I've actually been in that environment. But I don't have any licensing for this, so I'm not even sure this would let me do it. I mean, you can start free trial if you want to play, you can trigger the free trial. So you can go and learn and have a little play around. You're basically going to add the topics, entities, create links, logic flows and then you will be kind of off and away. But I'm not going to wait for that. But you can go, you can go and play again. Learn module goes through all of that now on all of these things. So they like the four key components. So hopefully you understand what they're doing. Hey, create an app. I want users to be able to interact with data entry, interacting, viewing data. Hey do saying automatically rich analytics, querying, hey the experiences. I can actually go and chat and allow users to interact, query, etc. Now. The data versus these connectors are kind of common across all of now. There's also an AI builder. So is this common kind of AI builder? Component as well. The AI builder component is what's based around that kind of forms processing, object detection and prediction. So that's kind of a big one when I think about, hey I'm. I need to try and work out what's going to happen based on past events. Well, that's prediction. There's text classification, is it positive or negative? And we'll see that once again over here. So this was my kind of, hey, start my free trial for my power virtual agents, but back in my power apps, my AI builder. If I go to build. I'll be able to see the different types of things available to me. Now, I don't have to be a kind of data scientist to create. There's a whole bunch of models built in, which is the point. But I can see, hey, look, forms processing, grab text from. Something so that just kind of just built in available detect objects and count things in an image prediction. Hey, help me understand what's going to happen based on past events and category classifications and they've got these samples available to me to help me get started even quicker. So sentiment analysis or sentiment analysis that's going to be based on that text classification. Ohh, receipt processing. OK. So I'm going to go and look and extract the text from things language detection, key phrase extraction, text translation. So we have all of these different things available that I can leverage as part of my solution. So these are kind of big deals that I can leverage in the other components I have. So that's one of those common things that all of these can leverage. But then we really have this kind of data bus and that data verse is key to a lot of the things we're actually doing now. I might have multiple data verses. These are known as environments. So all of this and you saw me switch environments, all of these instances of things this within a certain environment. Now I might have multiple environments under my tenant. So I have my Azure AD tenant and then I can have one or more environments. That environment typically will have a data verse, but turning what you doing it may not have to have a data verse. But it's one or zero data verses. And that data verse Is really constructed of tables. Used to be called entities that are made-up of kind of the columns, either types of data that we actually have. And then we have rows. Now they did change the terminology. So that there were kind of changed. I'll talk about that in a second. But this is the key kind of local storage. Now the benefit of bringing data into the data bus is I now don't have to worry about the users leveraging my apps or my automate having permissions to these datas. I'm bringing it into the data verse via connectors, so this is just common. It has its own kind of permissions model in there. I don't have to worry about the users being asked, go and get back to the back end data sources and of course. There's basic data in the database, but I can also do rich types of columns. Within my data verse, so I could have business logic calculating new fields of data that are stored in the database that can then be easily consumed by the applications. So the person writing the app doesn't have to try and do those calculations, I can just add it as a type of data just available in the data bus. So that's kind of a big deal in terms of being able to interact. Most citizen developers, just our business users, can now easily go and get access to that data. So the whole point is a standardized. Eight base model. It does have row and column level granularity. Remember this is made-up of tables. I can kind of think within here we have a table. And it's made-up of kind of the columns. That's going downwards and rows kind of going that way. So I have the ability to provide granular based on the Azure AD who can access what types of data. It's built on the common data model, which means there's traditional and standardized schema, IE what tables we have and the attributes of those. And we saw that earlier. So remember when we actually was in here in my power up and I look at my data if we look at these tables. There's a whole bunch just built in, so these are all built off of the common data model. So really any kind of application that you built off of the common data model will be able to easily interact. Where possible. Use the built in tables and use the built in columns. If it doesn't match exactly what you want, you can add additional ones, but a better way to handle that is you can rename the display name. So I don't actually have to rename the internal name for that, but see this display name. You can actually change things about these. You can actually go in and notice the display name. I can change that. I can't change the internal, but that doesn't matter. I can actually change your best practices. Try and keep those. I can rename them, I can add additional columns, but I can't remove columns from this standard. And again, I did mention there were terminology changes so this is a particular table. This used to be called an entity. We now have columns. Which used to be called fields and we have records. That you saw, we have rows that used to be called records, so those are kind of the new terminology. And again we can have complex tables that have server side business logic, workflows, plugins that can then be more easily consumed by various apps and reports. I can create relationships between different tables. This is going to be based on, we can see here some kind of primary key that enables us to have a link between the different tables. I can have relationships that are 1 to one, one to many, many to many. And once again, the benefit here is yes, I can Add all these other custom types of data because it's in the cloud, I don't have to worry about the applications actually having access to the back end data. I can have business rules built on this, and to actually make sure I have the right types of values, I'm entering the right data. To make sure I don't get kind of inconsistent data within my data verse. And then we have connectors. Connecting to apps, to data, even devices. They can be tabular data, so it's some kind of structured table format that it's actually reading from. I data from SQL Server from an Excel spreadsheet. I can both read and modify where it's supported by the back end resource and then I can have function based data. So this is used to interact and getting maybe a data structure back, maybe it's an event, maybe it's an update of permissions. I don't have to import into the data verse you saw this. Some things were just interrupt the connectors directly. Somethings want to interact with the data bus, but those canvas apps I can just go and directly talk to my SharePoint on my SQL database etc. I don't have to bring it in. Now, out of these connectors, there were really two types. There's standard and premium. And if we go and look at the reference, this kind of list through whatever standard connector and it tells us where they can be used. Azure power automate power apps and. The same for the premium connectors. So this is kind of the list of the connectors that are kind of premium and again you can go and look at all these and the list of the standard. So standardize things like Outlook and YouTube team, Twitter premium are things like hey SQL Server, Azure, Data Lake, Cosmos DB, Dynamics 365. And it really goes through, hey, look where you can use all of these different types of things. I can create custom connectors as well through APIs. They can talk to on premises data if I have a data gateway. So we kind of drew this idea so I can have a data gateway. Because often I won't have just a direct access. So what I would do is I'd have a component here that facilitates the outbound connection, so I can then talk to that and actually go and get the data. So that's that's really it kind of. That was the quick summary I've actually wanted to do around it. I hope that's useful. Again, the key point is just understand what the bits do. Go through the Ms learn, take the time to go through it, sign up for that developer account, have a little play around, create a power app, canvas app, see what you can do, quickly go and create a SharePoint list, which is what I did, and then see how easy it is to create that three page power app. Go and create a power automate. You can see kind of the the tiles on the screen just to get an idea. But the key thing to realize is hey powerapps some kind of interaction canvas. Hey I'm designing the layout. I drag and drop the components I have which components like a camera and take pictures. It could then go and call a power automate. Automate. Hey I want to do something. Automatically different types of those remember model driven. I just defined the types of relationships and it creates the layout for me portal how I want to present some data. Power automate. Remember different types of triggers. Automated. Something happens in e-mail received a tweet instant. Manually triggered. Hey I pushed a button, hey I'll use an instant trigger. Scheduled I want to run a report every day, week, month? Great. Hey, I need to perform saying in a user interface and have it then be able to repeat it automatically. Well that's a Uri flow. A robotic process automation and need to make sure people follow a consistent way. Need to keep consistency as people do X hey, that's going to be a business process flow. And then we have various types of actions, power BI to actually go and interact, create dashboards and reports based on our data from the data verse and it has its own sets of connectors it supports. Power virtual agents when I want to chat bot. And again, we it's made-up of topics, entities and then actions, and a guy can publish to many different types of place to actually use those. These can all use the AI kind of builder, so I have those forms processing, object detection, prediction, what's going to happen based on something in the past, sentiment analysis, language processing, etc. We believe different types of connectors to go and talk to data and the data verse is that native, really common data service built in the common data model that can be used by all of these things? I can have standard sets of data or I can actually generate new types of data server side that can then be easily consumed by the apps. Whole point of all of this nodes are low code citizen developers. Everyone can kind of use this. I as a business person. Hey, I could create an app that's the rest of my company could then use. So that's the point. Read through the Word document, make sure you understand all the items. Go and read through the Microsoft docs. Go through the learning module. Take your time on the test again. Remember, everyone fails things sometimes. If you don't pass it the first time. Pay attention to where you're weaker and go back and redouble your efforts to learn those things. And you'll pass it the next time. So good luck. I hope that was useful and take care.