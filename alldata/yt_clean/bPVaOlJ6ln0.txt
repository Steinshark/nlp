Hi, I'm Carrie Anne, and welcome to CrashCourse Over the last three episodes, we've talked allowing us to communicate near-instantly But, not everyone who uses these networks best interests at heart. Just as how we have physical security like crime in the real world, we need cybersecurity world. Computers don't have ethics. Give them a formally specified problem and speed. Running code that takes down a hospital's no different to a computer than code that Like the Force, computers can be pulled to Cybersecurity is like the Jedi Order, trying INTRO The scope of cybersecurity evolves as fast think of it as a set of techniques to protect computer systems and data against threats. Let's unpack those three goals: Secrecy, or confidentiality, means that only or read specific computer systems and data. Data breaches, where hackers reveal people's Integrity means that only authorized people and data. Hackers who learn your password and send e-mails And availability means that authorized people and data. Think of Denial of Service Attacks, where to make it slow or unreachable for others. That's attacking the service's availability. To achieve these three general goals, security your "enemy" is, at an abstract level, This profiles attackers: their capabilities, called, awesomely enough, an attack vector. Threat models let you prepare against specific all the ways hackers could get to your systems And there are many, many ways. Let's say you want to "secure" physical Your threat model is a nosy roommate. To preserve the secrecy, integrity and availability your dirty laundry hamper. But, if your threat model is a mischievous then you'll need to do more: maybe lock In other words, how a system is secured depends Of course, threat models are typically a bit Often you'll see threat models specified For example, "someone who has physical access With a given threat model, security architects a system secure - as long as certain assumptions to the attacker. There are many methods for protecting computer A lot of security boils down to two questions: who are you, and what should you have access to? Clearly, access should be given to the right Like, bank employees should be able to open I'd take it all... all of it! That ceramic cat collection doesn't buy So, to differentiate between right and wrong by which a computer understands who it's Generally, there are three types, each with What you know. What you have. And what you are. What you know authentication is based on knowledge real user and the computer, for example, a This is the most widely used today because But, it can be compromised if hackers guess Some passwords are easy for humans to figure But, there are also ones that are easy for Consider the PIN: 2580. This seems pretty difficult to guess - and But there are only ten thousand possible combinations A computer can try entering 0000, then try in a fraction of a second. This is called a brute force attack, because There's nothing clever to the algorithm. Some computer systems lock you out, or have That's a common and reasonable strategy, attackers. But think about what happens if hackers have forming a botnet. Using all these computers, the same pin - 2580 of bank accounts simultaneously. Even with just a single attempt per account, that just happen to use that PIN. In fact, we've probably guessed the pin Increasing the length of PINs and passwords easily cracked. This is why so many websites now require you special symbols, and so on - it explodes An 8-digit numerical PIN only has a hundred for breakfast! But an 8-character password with all those combinations. Of course, these passwords are hard for us is for websites to let us pick something more "green brothers rock" or "pizza tasty English has around 100,000 words in use, so 1 quadrillion possible passwords. Good luck trying to guess that! I should also note here that using non-dictionary kinds of attacks, but we don't have time Computerphile has a great video on choosing What you have authentication, on the other that only the real user has. An example is a physical key and lock. You can only unlock the door if you have the This escapes this problem of being "guessable". And they typically require physical presence, to gain access. Someone in another country can't gain access to Florida first. But, what you have authentication can be compromised Keys can be copied, smartphones stolen, and Finally, what you are authentication is based You authenticate by presenting yourself to Biometric authenticators, like fingerprint These can be very secure, but the best technologies Furthermore, data from sensors varies over What you know and what you have authentication - either correct or incorrect. If you know the secret, or have the key, you're If you don't, you get access zero percent Biometric authentication, however, is probabilistic.There's some chance the system won't recognize you... maybe you're wearing a hat or the lighting Worse, there's some chance the system will your evil twin! Of course, in production systems, these chances Another issue with biometric authentication You only have so many fingers, so what happens if an attacker compromises your fingerprint data? This could be a big problem for life. And, recently, researchers showed it's possible of you, so that's not promising either. Basically, all forms of authentication have in one way or another. So, security experts suggest using two or accounts. This is known as two-factor or multi-factor An attacker may be able to guess your password to do both. After authentication comes Access Control. Once a system knows who you are, it needs and for that there's a specification of This is done through Permissions or Access each user has for every file, folder and program "Read" permission allows a user to see allows a user to modify the contents, and run a file, like a program. For organizations with users at different agency - it's especially important for to ensure secrecy, integrity and availability. Let's say we have three levels of access: The first general rule of thumb is that people If a user is only cleared to read secret files, files, but should be able to access secret The second general rule of thumb is that people If a member has top secret clearance, then secret files, but not secret or public files. It may seem weird that even with the highest clearance, you can't modify less secret files. But, it guarantees that there's no accidental or public files. This "no read up, no write down" approach It was formulated for the U.S. Department There are many other models for access control Which model is best depends on your use-case. Authentication and access control help a computer access, but depend on being able to trust and access control programs. That's a big dependence. If an attacker installs malicious software computer's operating system, how can we that let attackers in? The short answer is... we can't. We still have no way to guarantee the security That's because even while security software bugs can still result in vulnerabilities. But, we do have techniques to reduce the likelihood they do occur, and mitigate damage when a Most security errors come from implementation To reduce implementation error, reduce implementation. One of the holy grails of system level security computing base": a minimal set of operating system software that's close to provably secure. A challenge in constructing these security Remember, the less code, the better! Even after minimizing code bloat, it would is secure. Formally verifying the security of code is The best we have right now is a process called This works by having code audited by a crowd This is why security code is almost always It's often difficult for people who wrote developers, with fresh eyes and different There are also conferences where like-minded share ideas, the biggest of which is DEF CON, Finally, even after reducing code and auditing that let them in. With this in mind, good developers should programs are compromised, the damage should other things running on the computer. This principle is called isolation. To achieve isolation, we can "sandbox" This is like placing an angry kid in a sandbox; the sandcastle in their own box, but other Operating Systems attempt to sandbox applications others programs can't touch. It's also possible for a single computer simulated computers, that each live in their If a program goes awry, worst case is that machine on which it's running. All other Virtual Machines running on the Ok, that's a broad overview of some key And I didn't even get to network security, Next episode, we'll discuss some specific systems. After that, we'll touch on encryption. Until then, make your passwords stronger, click links in unsolicited emails! I'll see you next week.