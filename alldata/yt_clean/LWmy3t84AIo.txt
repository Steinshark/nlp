- Cool. So this is Zerodium and there at the bottom, it up to 2.5 million US When you're selling exploits, there's different types and that's what could get into potentially interesting stories. My stories are more about what versus what I've actually done. There, the ethical buyers out there, you can of course go to the or Apple and they typically And if they look at what you've discovered and they think it's worth something, they might pay you for it. You could sell it to the highest bidder, which could be someone who a nation state that's an that might use that exploit (upbeat music) - Hey everyone, it's David Bombal back with a very special guest. Stephen welcome. - Hey how's it going? Thanks for having me on. - Yes, it's great to have you here. Stephen, for those of he's the author, well one &quot;Gray Hat Hacking&quot; is and forgive me if I use one of the most insane, So perhaps we can start there. What's this course that - Yeah, I've written quite but I think the one you're referring to is the &quot;Advanced Exploit So I kind of designed that course as more of like a survey course on different advanced exploit techniques so that you could have one course that focuses like five on a single topic like kernel But I wanted this one to be here on kernel stuff. Let's spend the day there and then you can continue So that was kind of the thought process. - Just for everyone watching that's like really advanced stuff. Does SANS or do you like how do I go from sort of someone like who's perhaps new to this but really interested in like zero days, interested in the stuff that you do and perhaps you could talk a around that. Like what exactly are you but like how do I get to that course? 'Cause I'm assuming I couldn't - Yeah, yeah. Depending on where you, what your experience is it's interesting now because that was kind of around when into the exploit It was a lot easier then. Now back then these techniques that were being discovered They were new, they were But I always like to use the Tony Hawk's a well-known skateboarder, everyone knows who he is. And back in the 80s I guess, or 90s when he was really at his prime, the tricks that he was doing were insane and no one could do them. But nowadays it's almost and all the kids are doing that he was pulling off back in that time. So you need to ramp up and understand all of those and almost repeat those steps and work your way up to what And that's a good starting point. So I think like going back, you'll always hear written by Aleph One called &quot;Smashing a Stack And it was written in the earlier mid 90s and it's basically a classic But it's that great starting point that pretty much everyone needs to get through in order to move forward. - So I mean, just for the audience, I've got some great news for you. Stephen's recently So Stephen, perhaps you and we can take a quick because one of the this stuff's fantastic, but it costs like crazy Unless you're working for a company, it's not likely that you're gonna go for, go to one of these courses. But I believe what you're doing and I'll let you take it away. What are you doing on your channel? - Yeah, so I just started So it's quite new, as you can But the thought was like you said, training is expensive and out there, more like where you can kind of pick and choose a bunch of little modules. And then there are more advanced training or more expensive training as well. Offensive Security, SANS Institute, many other ones out there. And getting access to that for a lot of people that's paying for it. I mean I remember back I went and I paid for and I paid out of pocket. - It was over $3,000 and back at that time that was quite expensive for me. So I had to get a loan out and pay it off. But you know, I was investing But like with this channel, what I wanted to do is take pieces of, it's a couple of things. One, it's sometimes going to be content that's still really relevant but maybe that I've retired out of a course. So for example, if you see the very first one that I did This I would say probably 2014, right around there was like against Internet Explorer 8, which was the default on Windows 7, was at its peak and use exploitation technique that we were going after Once you learned how to to gain code execution, I mean obviously you have in the first place, but Getting crashes to occur that's the easy part. The hard part is determining whether or not it's something and then actually getting it there. That particular one that I started with, it's ended up being two hours through just like if I and take it from A to Z, A to Z, and that's a that I retired out of Aside from that, I'll also be doing stuff that is still in the courses If you look over to the left, the most recent one I did at And that was a session on which we are still absolutely covering. It's a whole entire day and it's something I and almost not appreciated And so I wanted to present so folks can come in and get and start going and bug hunting. - Stephen, this is fantastic news. I think because one of I think a lot of people and I get this as well, it's like, David, you keep teaching the basic stuff. You keep, teaching beginner stuff and a lot of people, you know, may start with the beginner stuff, but obviously they outgrow that as they go through their career and there's obviously people So if I understand correctly, your channel is not for beginners, right? - Yeah my original thought was to focus primarily on advanced techniques. 'Cause like you said, when I go and type buffer there are thousands of hits I think. And so I didn't want to kind but the funny part is people and they were like, hey, I just wanna hear you because maybe the perspective But yeah, so I do plan on doing some talks that aren't gonna be Like I'm doing one on kind of which won't be as technical, so I'll kind of weave in and out. - But I mean, that two hour session. When I started looking you don't mess around as in like, some of those sessions for lack of a better word. - Yeah, I think, you know what, you're making me think of which is maybe at the beginning I'm gonna talk a little bit Like, if you're gonna watch this, here's the things you or go and, you know, get up to speed. But yeah, I just wanna get and not have a bunch of fluff - Yeah, I think it's brilliant. I mean you've been doing this - Yeah, around that. - Yeah, I mean you, I think you said, the person that got you sort of excited about it was your father, right? - Yeah, my dad was, I was lucky we had computers all connected to the on seeing how to connect the and watching the movie war games and of course you got a modem and you're looking some this actually works and is really easy and I see I can get into It was great to have that in the house. And I remember one time he might not remember this, but I wanted to play video VIC-20 computer, this old And he was like, I want you to work through all this BASIC code, in BASIC, and it was like over 1,000 lines. It was like logo this, go to that. And I didn't understand what it was, but so many typos and, you know, I still make those today, syntax errors. And and you get to the like two hours of it and it And I'm like, well that (David laughs) but it was a great start. - Yeah, so I mean he got you involved and then you started, I think on SANS you said you were really, you really enjoyed the course Is that right? And that that's why you - Yeah, it was back in I took the SANS Security Essentials course and I had never heard of SANS before that, my manager at the time sent me and I was just blown away by It felt like he knew everything. Like there was not, in the class and there that he didn't know the answer to. And like the one time he didn't great question, I think I know the answer. I don't wanna give you wrong information, let me go call some friends, validate it. And right after lunch he came So yeah, I just was blown away by that. - So do you teach at SANS or do you just write the content or both? - Yes, I've been teaching for SANS for I think around 15 years now. - Now I don't wanna show our age, but I think you've done a You mentioned, and I think on your channel, you talk about Can you explain why, what that is and how things have changed? - Yeah, that's a long, I that last days if we wanted to, (David laughs) I would say back in the, like there were no exploit mitigations. Windows XP was out, it had just come out, windows 98 and stuff was but Linux was on very unsafe versions. There was no protections, like common protections like safe unlink. It's a heap protection that It works with the metadata to protect like right what, and like all of this basic mitigation that we count on today was So that means if you find a vulnerability and it's something that can be weaponized, there is nothing that can stop you. I mean this was back when firewalls, if you had them on a client system, again, a big if, was only doing outbound filter or inbound filtering I And I remember I moved to San Francisco from Baltimore, Maryland and I lived on a place and I was lucky where there This was San Francisco had occurred and tons of techy people. And so it was a really neat community, I guess you could say it that go to Burning Man and I remember one of the guys that was there on some of the and lots of hackers. And so we were just like, hacking at each other all the time. And I remember when Metasploit came out, I think it was 2003 and MS the MSRPC DCOM, the infamous bug, that was one of the first ported into Metasploit and you could literally like do a Nmap scan and load the module, say exploit, and you get a shell on your screen. - Yeah. of the time, you would just Because there was no filtering There was no patching happening. And so what I mean by the golden age is pretty much that it was, it was, there was limited if any, intrusion detection, prevention, all of that was all pretty new there. Patch management was even which is saying something, there were no exploit You didn't have to know anything at all if you wanted to do hacking. - Yeah, I think you said that it's the operating system but you said there was some - Vista, yeah, so Microsoft at least it seems that way, where every other operating system is (David laughs) successful and yeah, and you It's like XP was super Vista people didn't like it. Why? Because UAC and some other things. And then they try to with Service Pack 1. people are like, nope, I So then Windows 7 comes out, which is very similar if and people love Windows 7 and then Windows 8 comes out, the tile menu appears and people get stuck and they say, oh, we're sorry 8 already got a bad reputation, windows 10 comes out, people love it. And now we've got Windows that one taking off at least not so far. Yeah, Vista was the first operating system from Microsoft that underwent their security development yeah, in the early 2,000s. And so aerospace layout, randomization came out - I think I've heard changed the way that around that time and that's why Vista, even though people hated it, did some great stuff from Is that correct? - Yeah, I think it was called memo or email. It was this infamous memo I think it was 2002 or 2003. And that time was when and also the security which was all about into each phase of the So if you would have something which is a standard phase in you would factor in things like attack surface reduction And you would talk about and all these things that you would decide on before you move into where you actually start writing the code, which you map in security, like which exploit and which band functions and what static code when things cross trust boundaries. So Vista was the first OS from start to finish. So yeah, it was a much more from a security perspective. - So in other words, even though people hated Windows has got a lot more And that's what's made, as you said, the golden age kind of end. Is that fair to say? - Yeah, and it's not, yeah, absolutely. And it's not just Windows. I mean obviously Apple's I saw a talk recently that the use after free bug class that they were able to depend on to be able to do the jailbreaks and such are pretty much coming to an end. And I guess you could say and gladly from another same way it's the phones as well, that's why you see the bounties on things like an Android zero day that allows you to do getting up into the seven - Yeah, I mean let's, I wanna talk about zero so perhaps you can just give people who are interested in doing this, it sounds like there's if you find a zero day in like Android or other operating systems. - Yeah, so I'll share one quick story and people have heard me teach before, have heard me probably I had said that year already, and it was a notable without giving any warning, not that they should came out with these two It was isolated heaps and These were mitigations trying to stop and doing use after free exploitation Because if you were watching like 2012, 13, 14, there were anywhere from being patched in Internet So back in 2014, a good also known as Peter Van Iko, He has a psych and a he's made an amazing plugin called Mona dot Pi, which debugger and also window bug. He and I both at that same time were making money weaponizing and selling use after free exploit And when those updates came out, when those mitigations came it pretty much broke our attacks. Like we couldn't, the but we couldn't weaponize because the mitigations And when that happens, the if you're gonna sell them go up of course because they're harder. - A zero day and one day just for people who are And then I want to talk that you can make with this kind of stuff. - Yeah, so it's subjective depending on who you ask with regard to the But I think everyone pretty much agrees that a zero day is a vulnerability that has been discovered by that is not known to I mean there could be who found the same bug as you and hasn't told anyone but for the most part it's a vulnerability that the majority of the world, including the vendor of that application or operating system doesn't know about. And so if you have that, you've got different You could of course use that are not gonna be patched You could sell it to or lots of different types of buyers out there So that's a zero day like you there's unknown unknowns, there's known unknowns and and it's a really strange, but unknown unknowns would be zero days or vulnerabilities out there That's all the vulnerabilities that are sitting there Then there's known unknowns like zero days someone's discovered it, but there's no patch yet. And until people start and it gets detected to an ethical buyer, then And then there's known knowns that have a corresponding patch but sadly are still incredibly valuable, which gets us into one Those are exploits that through a technique called which I have recently done a webcast on the Off By One security channel. And basically that is like Microsoft don't So when you download the you can do a differential between the new patch that came out against the unpatched version. And what you're able to detect there are the code changes at the assembly and the function level. So let's say a dynamic link library has 20,000 functions in it. If you're properly doing a diff, you may see that only five of have code changes and that to be able to go in and locate the patched code related So you get to learn two things, one, where the vulnerability because one thing you can do is if you've got the skill to do so, you can try and weaponize it organizations often are and it may be months So the faster you weaponize the more valuable it for those as well. And then the other is you get to learn how Microsoft, in this case with the example I'm using, how they go about patching and you can use that knowledge to go and hunt for other bugs - So tell us some of your stories 'cause I've heard you say that I think it was at RSA where you mentioned like a figure here, but like $2 million or for like a zero day, right? Have you got any like cool - Yeah, I mean it's a tough one 'cause what can you share and not share? (David laughs) I so growing up and getting in the 90s and the 2000s, I had a really tight group of you need to use a handle, I mean now everybody uses it. We all played, Xbox or whatever and everybody's got a handle. But back then it was a way because you didn't want to be associated with what you're doing. You could, end up like and go to jail. Anytime I would be doing things or talking on message groups, like back then it used to be Millworm, which is before ExploitDB and you would always use your handle. So a and always use VPN couldn't find you or know or And so having grown up with the people who helped me understand is what allows me to remain I'm not someone who has a bunch of CVEs under my name or be known on exploit database for having published like personally it's a personal decision. I just don't care. I don't want to be because I have a professional career and I've always been very ethical. And so some people may view those types of research activities or sales that you're doing as don't want that negative association. When you're selling exploits, there's different types and that's what could get into potentially interesting stories. My stories are more about to do versus what I've actually done. I have a wife and a I know people, I won't name them, but I, there's one guy he's like, I have a black van in and he is in another country And I'm like, no you don't. 'Cause I mean that sounds like a story. He has taken multiple videos and photos and sent them to me and he It's always there because I'm like, who needs that in their life? But they're the ethical buyers out there, you can of course go to the or Apple and they and if they look at what you've discovered and they think it's worth something, they might pay you for it. So that's one way and because you're only giving and they can get it patched. You have to sign an agreement, like a non-disclosure agreement and you can't violate after you to get their money back. There's also, there are and the Pwn To Own challenge where people work on and do it in a competition and the agreement is it goes to the affected vendor. So those are seen as more ethical routes or route you can go. It's still seen as ethical, but it's kind of the next level up, which is you could go to a Tipping Point, ZDI the Both of those were started He's kind of like what I of the whole bug bounty realm. The way I don't quite or where they get compensation for it, but they would buy from and once they validated it, they pay you, if let's say it's a browser-based 10 years ago, if it's against it would've been worth by And that's for an a exploit use after free remote code execution bug. So when that company like ZDI, I or Verisign would've or not that's why I said Verisign, I They would then take the exploit and they would disclose and get it patched and no one So again, I don't quite understand what the benefit to them is. I don't know if they have an agreement with like anti-virus vendors or maybe with the effective I don't know. Then if you take a step back from that, it's when you start to cross into the, what people would consider Every country almost has And those intelligence agencies absolutely have like whatever you want to call them who go out and will launch campaigns against their adversaries, which could be nation And so when you're selling to now, you don't go up to the and knock on the front gate and say, &quot;Hey, I've got an exploit, There are, there are proxies out there are contract you can sell them to and then and then they'll go and do I have no idea. There are then you go another step. So the reason I consider that a step back from kind of going to the affected vendor or I defense or ZDI is that those are making sure the thing gets patched. When you start selling it to launch nation state campaigns, now it's being used to - [David] Yeah. - You don't know what's And even worse, if you or layer go another layer of the onion, you could sell it to the highest bidder, which could be someone who a nation state that's an unfriendly or sanctioned nation that might use that exploit against They'll probably, and as you the price tag gets higher. Like Zerodium is an example and we can look at the site real quick if you want and look at the bounties. - [David] Yeah (indistinct) - Let me, cool. So this is Zerodium and you can see right it sticks out real fast, up So as you scroll down, there's a couple different There's the desktop and servers category and then there's the under mobile you can see up for an Android full chain What that means is if in let's say an SMS app and you don't even have to do it, you don't have to click on I just send you something and gives me remote access to it, that's what they're talking about here. - [David] That's (indistinct) - Yes, exactly. Like Pegasus, if you go down a notch here, speaking of Pegasus, that's iOS. So there's up to 2 million. I remember one time when they used to be called Whoopin, I believe it's the same we're no longer or we're temporarily not accepting Apple iOS zero days because they had enough of them. That's crazy. And then they opened it back up again because now it's even harder it's not just one exploit four or even more to get you that remote code execution. And then you see other big apps like WhatsApp is huge, right? iMessage, telegrams signals a big one. There's also bounties and browsers like tour at the Tor browser or de anonymization of Here's the desktop and server one. So up to a million US dollars for a Windows remote code execution, zero click Chrome Apache. So up to a half a million dollars for a remote code execution with local privilege escalation Those are some significant payments. But that goes back to my point, which is who are you selling it to? Who are the customers of So as you work your way out you can imagine who the Now with regard to just stories does, I guess more like, I'll where I've been hit up on Twitter DMs, people have gotten my Signal info somehow and sent me a message that of obviously I didn't give this number and they hit you up one crazy example is we who is not someone who clearance or anything who is willing and interested in going I won't name the country but I'll say it's one of the countries who are very loose on hacking laws, bypassing passport control. So bypassing customs that will get you in and you'll be there for about 48 hours and they'll get you back out. And it's kind of one of those things where when I've talked to people who work in intelligence or military and I asked them about that particular type of request, I'm like, what happens if you get caught? Like what if you're over there, they're like, they probably don't, they don't know who you are. They don't, they're no one's gonna come rescue you in a helicopter. Another one where it was all about going onto container ships and back dooring firmware the supply chain of things because routers and switches and such, those and other organizations where you now have access of traffic or people who request that you meet them at a coffee shop. So that's one thing I'd recommend. If you're someone who has a vulnerability that you think is worth money for stuff like some random it's gotta be the things that that's the kind of apps Don't ever send them the exploit or the trigger unless you've been paid. Don't ever meet them somewhere The best way to do it, if you're actually gonna go that path. And again, I'm not advocating but I know people will go and do it and you want to be you wanna make sure you're through the Tor network and using some way of anonymous screen sharing to the interested party Because they're gonna quickly say, especially if they think they're gonna send it to us. Just send us to trigger code. Don't weaponize it, just send us like, you have to prove it to us. We'll pay you and you're not It's best to go with I'm more than happy. Like if you ever, my Twitter DMs are open and if you run into a situation where you have an exploit about who might be interested in buying that or if it's something you totally hit me up now I'm on who you should sell it to or especially if you're going But I'm happy to like at least help you not make poor choices. - I think it's, I always wanna highlight, do the right thing, the that story of your friend or You know, I don't wanna live the rest of my life worrying that I could walk down and alley and not come back again. - Yeah, yeah, absolutely. And I, as we're growing up, and I definitely did things as far as like dialing up or without permission launching an exploit against some random computer. But that's long in my past I'm like, that was really dumb and I would never advise doing that. I've always been very ethical 'Cause like you said, you want to keep you and your family safe. - Yeah, exactly. Especially if you've got kids, and you're married or you know, you've got someone that when you're young and dumb, when you and I were young and you might be like more that are more risky. But it, the problem with that once you overstep it can So yeah, I'm glad that you, you're highlighting some of the problems and do it ethically and So I'll put Stephen's links below so that you can follow him on Twitter. I suggest you do that. Go to go and subscribe but also, send him a DM. Please don't send him a But you know, if you've got something that you think is serious So Stephen, I really wanna But let's say like, okay, I mean we're talking millions of dollars. It's crazy amounts of money, especially for some people perhaps in different parts of the world. I mean they could submit one How do we start? I mean in this gray hat hacking book as an example that the and I So you perhaps you can tell us about that, but like you talk about like Python and C assembly is there like if I want it sounds really exciting. Have you got some, like a roadmap I kind but perhaps we, you can give us some like kind of guidance of what or where I need to go to, - I mean, I guess first on the book I will say something kind of funny, but writing a book is hard. It's time consuming and from the financial side typically. It's not, yeah, it's very and contributing to the community and getting your name out I will tell you I was by the original authors I'm on the fourth, fifth and sixth edition that came out in 2022, the first, second and third I was not on. And what happened is we can't be involved in it And I was lucky or and trusted and it's a great opportunity when you can co-author a book with a few other people as big of a time investment but you still get to benefit So yeah just a thought, but certainly write a book by yourself and the passion to do so. Just know what you're getting into. - I've been asked multiple and it's like no rather - Yeah, exactly. - Books are hard. Books are hard. Go on, sorry. - I guess on the getting started side, I said a little bit earlier it's, you still wanna start from which is if you're you're not gonna start with calculus if you don't even know basic addition and subtraction and algebra. You wanna start with the Even if, 'cause I get some if I'm teaching one and they say why aren't with Windows 11 with every And that's pretty much my answer. It's like, do you know how this works and that works and have And if they're saying no, we can't just jump right into that. You need to understand the basics. So when I teach exploit development, I always start with a on the stack with no mitigations so that you can see what or what it looks like and then start turning one So let's turn on randomization. How does it change the attack? It breaks obviously, so what It's not always gonna so let's understand when it is possible. And then let's add on another mitigation like data execution prevention. I say like treat it like a video game where I used to play games like Halo and Skyrim and once my wife I had to give up something to have time and I was like I gotta give up the gaming 'cause I've gotta stay on top of the exploitation stuff on computers. If you take something like Exploit Guard which replaced the enhanced on Windows, Exploit Guard is kind of like the flagship or custom, no I shouldn't say custom that aren't turned on by default. Microsoft's in a situation where if they go and turn that they have, it's gonna because a lot of applications on third party DLLs or may not be written the same way Microsoft writes things and so they don't want to break things but they're there for you. If you're an administrator mitigations to make sure they're production, that's awesome. Most admins don't know how to do that or don't take the time to But if you do, you can significantly cut down will it be able to exploit What I was saying is if on like a modern Windows then you can start turning one at a time and treat where it's like level one, level four as you turn on each one. You learn a ton by doing where you probably are way beyond what you actually need to be able to do because most people don't So I would say to like get started, a lot of operating system vendors, like even Microsoft, I remember, I think it was Mark Rossovich if you're gonna start a the power of a low level use Rust because rust is a lot safer from a memory management perspective. You shouldn't go and start using C and C++ because there are some inherent problems with those languages and and understand the power that you have can result in pretty if you don't wield them that properly. So I would say like pick up a C book, pick up like an introduction to C, introduction to C++, write hello world, I mean it to write Hello super easy right print, hello world. - Too easy. - And and in and C it's even easy print F but is there a safer Yes there is. So like figure out what the but if you wanna use the unsafe versions of hello world program, compile it, and then open it up in or some other disassembler to see what, a basic program like that level and then go in and So now your C program it doesn't just call print The main function actually can pass a string argument to print out what you want it to disassemble it in Ghidra or whatever. And then you get to see the delta what the difference is now that more complex and spending how to write a driver, a really basic driver on and going and playing capture the flags and trying those little crack me programs where you're doing reverse engineering. Anything like that is gonna give you a great kind of headstart, especially if your goal is to if you're doing self-study and and further along. There's a great group of people Shellphish, shell as in like seashell and fish as in phishing scam, Shellphish. And they've got this the website and it's all of exploit techniques going all the way up to today. So it gives you a good starting point, like getting old version and trying out the old and working your way up. So I guess my point is and work your way up and do and some people will say they're not worth your And I completely disagree with that. Not everybody goes to university and you certainly don't but some people that I know that are really well known and security programs, if typically to a theme from them is it's not about the classes and the professors being so amazing that you're getting an exponentially greater experience than another school. It's about the people that the capture to flag groups And instead of going out and the weekends, these people And when one of these I'm teaching, I'm like, oh even what we're covering and I gotta step up my game. So associating with smart people and finding what the local or security groups and I made the example of and I said, I'm not gonna so I'm gonna give up video games. I'm not, I don't wanna talk about Twitter, I don't personally like for whatever reason certain people in the hacking community - Yeah. - And so I try to not, I have made good use of the whatever mute words. - (laughs) Exactly. - Because what I'm gonna say is something that I've seen people campaign against and I'm sorry I'm for this, which is you gotta give up time somewhere if you want to get really good at this. We don't have the luxury of going back and being a child again and or something if we wanna If you wanna learn Japanese today, it's gonna take a huge amount of dedication and self-discipline. So to get good at reversing, programming, if you don't and even if you do to get better, you've got to give up sleep, going out with that friend on that Friday night, using some of your weekend time. I mean I remember riding on the Bart train which is our subway, and crack open a book. I was always, anytime I had a spare don't have the luxury who is gonna pay us to To get those cool jobs, you need to know this stuff already, but to know this stuff, or take classes or self-study. So you've gotta be prepared - It's hard advice, but it's true. I mean, if you really want to get, become the best in there's only 24 hours in a day, what are you doing with your time? I don't watch television as an example because I just don't have the time. And you, like you gave up gaming, you've gotta give up something if you want to be really And it's life choices, you've gotta decide what's right and wrong - No athlete in the Olympics is- - Yeah. - Is gonna tell you that - Yeah, exactly. Yeah exactly, exactly. - And you know, and I'm absolutely not and go 24/7 hard on this. You still need a life, you still need hobbies, That's all very important. I'm just saying, oh that one time your friends maybe stay home and do I could have done this. And exercise is so - You gotta decide what's right for you. I think, I mean if you wanna watch, if you wanna watch TV shows the whole day and sit on the couch, that's your choice. But you know, you're gonna, you're not gonna be as someone who exercises every day. It's like, what are your life choices? And I mean, if this is really important, I mean it sounds like the from a financial point of view as well because I mean those prices that you were showing that's more the how did you say, the is that right? But like reputable is, it's - Yeah, yeah, absolutely. The prices have gone up. So like I said earlier, what would've been worth 10 to $20,000 back in 2014 before the would now be worth potentially $100,000. So you're getting paid a It's, I'm not gonna discount that. It's a lot of work. - So Ghidra, that's a tool engineering and - Yeah Ghidra was released by the NSA a couple years and it's a free disassembler and it's also got a decompiler So I mean the great thing about it's free. The commercial defacto kind but IDA Pro is very expensive. But you know, if you ask me if I have the choice between both and someone bought me IDA Pro, I'm gonna use IDA Pro 'cause it's a commercial application. So it's got a lot more dev resources and community support over the years. - So I mean, is the reason I'm asking this is they're huge financial Or is it like, is a lot - Oh, you can do I don't see many instances where you have to spend because all the tools that you need, they're all free, like and GDB and people have like Jeff and Peter and such on GDP that you can use So I can't think of any, a whole lot of costs aside from - And I mean hardware, it just depends which operating system you're going after, right? Like is it Android or is it iOS Is that correct? - Yeah, so I mean I if you're just getting to start going after IOS. It's really hard. There are big groups and that are decades ahead they've got a lot of money and it's the ramp up to get I don't wanna say useful, but effective or like, it's long and the techniques that you are oftentimes outdated by a year or two. And so to get cutting edge, that information is It's worth a lot of money. So why would people just Yeah, I would say, starting off on like Linux or I mean there's a lot of companies out there still running Windows of millions of Windows And when you look at Windows of course the mitigations and the security is gonna be a lot weaker. - Yeah, I mean, so if I'm starting, I can start for free and I I've perhaps got a Windows and run Windows locally or Linux locally and start learning this, right? - Yeah, absolutely. The cost is in like if you or something like that at home, obviously you can increase the likelihood that you're gonna find a bug if you build a big or with hardware resources at home and the cost can go up at that point. But getting started in it you don't need much at all. - In on your YouTube channel, and I just wanna you putting a whole bunch of like more advanced content you had was with someone is that right, and blockchain hacks. - Right, I had Steve Walbro who's like the top company smart contract security web code review and assessing. - The reason I ask this is obviously there's a lot of interest in crypto and blockchain and stuff like that, but it sounds like a by some of these organizations Like Microsoft has got years and years of experience of Is that fair to say and is like attacking crypto block, - Yeah, I mean, anytime there's a new attack So mistakes are gonna be made and there are new languages You hear about things like Then there are other languages like Rust that people use to build You know, build blockchains So the same programmatic errors are able, they can be made with any new technology as long as those languages are being used. Like what I've seen are being used that might allow And if it's not properly coded and a user can impact what's it could then potentially And one of the things we that could be executed that a rock chain return or something else. Some type of code in some something significant. And one of the big spaces, the vulnerabilities, I'm not saying there's but when they are there they can be worth millions And there are other like scams out there like the rug pull scams and someone says, oh there's all these new coins coming out. Like luckily, or I should say sadly, the crypto boom that people saw that, hey, There's a lot of people So people started to I'm gonna go get an influencer to their people there's and it's not public yet, but if you go and go in the defi space, and I shouldn't say defi space, but if you go into the right locations and use pancake swap or whatever you're gonna be one of the first and it's probably gonna blow up. So you're gonna get rich. So people go in and five, $10,000 and then there's a rug pull where they execute some function and it just, takes everything. Or there's different types of attacks, like 51% attacks where if in a particular crypto, you can make decisions And so some of it's like just some of it's coding flaws in a normal programming language And other is specific to like new types of attacks that no one ever knew about before. - Yeah, it's very interesting. I mean there's been a lot of interest I think especially younger I agree with you, there's been a lot of and in a way it's sad a a lot of money, but it's good that people are aware of the problems with crypto, but from a technical point there's still opportunities there. So I wanted to ask you, we spoke about iOS being and just give us your opinion, which is more secure 'Cause I know that there'll but it's good to get like your opinion. Have they all got vulnerabilities? - It used to be an and like I said, back that trustworthy computing memo and they started really it took a while, but Microsoft's in the space of security. So if you take a fully with all those mitigations running, the kernel has gotten hardened to in the past. And it's really hard now on a in user land and there's all kinds of code and virtualization based security and I mean there are dozens of mitigations and they're doing an and it's near impossible to get like a remote code execution opportunity into Windows kernel anymore. You can get right that can result in like that's owned by system and local privilege escalation and such. But like the days of, hey, here's a malicious font and document and this font's and exploitive vulnerability in the kernel and I'm gonna get remote code execution and set up command and control. That's mostly unheard of. They do happen and they're So it takes a lot of work to get there and that's why you see and focusing on like or IT type devices or newer areas like you were just talking about but with all new technology you've get, you get these new as they go as well and you who identify the vulnerabilities and type of mistakes that can get made and then they go and find them. So when you look at, if you and Linux operating system and compare it to a modern cutting edge iOS version or Mac OS version and compare it to a Windows 10 or 11 it's, they're pretty similar. They're really, I wouldn't say that one is any greater than another as long as it's deployed properly. Most of the problems I see programming errors as for developers themselves, they're Microsoft's can't stop you from installing a third party application that brings along with it a bunch of DLLs that weren't compiled properly. - So the operating system the problem is the, it's tricking It seems to be a big problem. - Yeah, look at how - Yeah. - That's like a extremely trivial problem. You're just getting someone to that's malicious so you can I mean you, we've seen a where someone wormed a and it gets onto a system and executes. But like if you're properly using VBS, Virtualization Based Security on Windows and you're technically if you're doing it right, if that ransomware is executed, it should be contained in an and encrypt the files on your file system. - God's I'm glad you said this, I mean it's always, there's always people in different camps saying like Programming languages, you seem to be, you've mentioned Rust a few times, if I was wanting to learn would Russ be a good place to start or would you like do Python perhaps? 'Cause that's another one a lot of people seem to talk about. - It depends on your goals. I mean Python is, used to be Pearl, right, everybody used to Pearl. - Yeah. - And then Pearl I would with regard to this new language called Python came along They thought it was more friendly, they thought it was more intuitive and everybody started contributing to it. And so from a security which is Python based for Python with IDA Pro and Ida Python, you've got support for debugger and tools like PyMade the reverse engineering and like all this with Python and I remember almost moved to Python instead But like it's, if you want to do scripting and be able to automate those are all really easy languages and more intuitive to get up to speed at. If you want to be a developer applications that where speed is critical, then that's where you and your Rust and Rust is seen of the power and speed of like assembly and C and C++. But a lot more of the safety like intermediate where you've got MSIL and you've got memory management So it all depends on your goals. Obviously if you're going to, if your primary goal is most of those things are in C, C++ like your operating systems. And so those are important and it's interesting, you where I've met so many people in security who have avoided learning how to program or being a developer their whole career and they know a little scripting And so when you see them they'll never use a decompiler. They're always living in disassembly because to them it's easier and But if you take a developer the assembly versus decompiled pseudocode, they're like, you people are crazy. Like why are you using disassembly? It's so much easier to because what was like is only 10 lines in pseudo code. - I think it's great advice. I mean it's like you said, I mean are you gonna be like someone who does it's for some people it's a big jump to jump from one to the other. But I think it's like you Where do you want to go Stephen? I we don't want to, we don't wanna sell SANS The point is like is there or something that you can share like okay I wanna get to your course but that course is really like you know, difficult I can't start Is it, what do I need to Like is there roadmap of course is that you've written that I would take and mean again not sales just like give us the kind of like courses and courses show content so then people can see the and prep self-study or go to SANS. - [Stephen] Yeah, absolutely. So if you do decide to invest and if you can do it yourself obviously or if you have an employer who And one thing I will mention before I even talk about specific courses is at SANS, there are and a facilitator is someone who pays, I believe it's 2,500 US dollars. So a pretty reasonable And you get the whole course, you get the labs, you get everything, you just help out a little when it's running, you will and collect those evals. You might help students out if they have questions in just in general it's a pretty easy role but you're just helping out the instructor and SANS with the course and in return you pay less than one for the course and to I believe it is get involved work study, if you go to get involved work study that will give you all the information and allow you to apply to that. And I'll tell you one trick I might get in trouble for saying this but I've seen it a lot where there are even opportunities where once you become a facilitator and you're known by SANS, oftentimes last minute and they'll say we need these two courses next So you can sometimes get completely free but that's not the norm. But I just wanted to let you know that little trick in case - But you also get to you know that's also another - [Stephen] Yes, absolutely. (chuckles) So with offensive operations, that's the curriculum So I'm the curriculum lead curriculum and we put and we try to categorize things and examples would be red teaming, purple teaming, application pen tester, and then vulnerability That's more along the lines of what we've been talking about. But you can certainly be a pen tester or red teamer. There's actually a class sitting in on that's offensive So it's all about kind command and control on Windows systems. So really cool, very specific stuff. But if we go under and exploit developer, you So not a ton but we're talking The 660 course is both an and then three days of so finding bugs and then and exploit development on Windows. And this would be what but quickly getting you into intermediate. We focus a lot on getting because you're so likely Then once or maybe you already have a strong foundation on maybe you've gone to the core land website or diff security tube or and other resources out there on the basics of exploit development. If you feel that's where you're at. We've got a couple options. One is a two-day course on ARM specific exploit development. ARM is the second most popular there and a lot of the IOT are running ARM, a lot of mobile type So it's specific to that But the more advanced course is this SEC 760 advanced This is the one where there's but we spend five full course days and they're extended hours days looking at reverse engineering using IDA Pro how to do things like IDA scripting, looking at exploit mitigations. Then we get into the next day So a whole day on Linux heaps because there's not a there that focus on Linux. Day three or section three is a whole day on advanced fuzzing. So using things like WIN AFL and Frida and other tools as to how you would go about setting up your fuzzing harness to go after real commercial applications. Day four is spent 100% on binary dipping and patch dipping as well as a bit of Windows internals on the end. And that prepares us for the day five, which is 100% on Windows And then from there, and that's why I call it a survey course 'cause we kind of touched and then from there you would then go take a five day course specific on or specific to like Windows We don't offer that right now, but there are classes out there, specialty classes and and other locations where you can get that - That's great. I mean I think the, there might be criticism but you know the good thing about this is if someone's interested in, what those courses contain, you've given us kind of a roadmap and someone can go look at like the what those courses have as like topics and that can give them an Did you wanna show something else? - [Stephen] No. It's just going back to where you go and click apply and again you can potentially - That's brilliant. So you mentioned CTFs and Is there any like websites or places that you could recommend for CTFs? Is it like hack the box or Or is there something specific? - Yeah, unfortunately I don't remember it off the top of my head but where I'm sure you can but it's a big list of all the capture to flag events going on around the world. Some of them are put on by universities, some of them by companies But there are more than you absolutely would ever have time for and they span different Some of them are very intro, some of them are extremely hard. At SANS we have a lot of capture the flags we do with Counter Hack with Ed Scotus, we have a holiday hack that happens every winter around Christmastime and that's a really fun the flag game where there's and you get to do all kinds of things. I heard from Ed that they're even putting like a blockchain capture to This year we actually at they're called summits. So we have the conferences where there are the training courses, then we have summits like every November we have the Hackfest summit where we run multiple capture the flags and if you attend it virtually So that's a good option a free CTF from the SANS Institute. There's a lot of different like if you are in the military, if you are a veteran from the military or if you work maybe in law enforcement or if you some for students, there's diversity programs and initiatives as well and you can go and to see if there are that are focused and even win things like But absolutely there are, you could go and Google and Try Hack Me as a good example and hack the box. I believe that's for a fee. I don't know if there's free ones. - [David] There's some Yeah, yeah, yeah. - Yeah. I think most organizations of free stuff which to, for And then of course there's - And books. I mean obviously this is the Good book, great book Any other books that you have a look at or is it just but anything that you - Yeah, there's a lot of great books. They, some of them are a bit outdated but they're still good on the foundations like old ones like Hacking from John Erickson, that's Shell Coder's Handbooks, quite outdated. But that was a great book. There's a ton of free papers at different conferences There are very focused books Like there's one called and it focuses on how whether it be Linux or Windows. And that's a really because I always like to but to the original Karate Kid movie if you saw that where Mr. Miyagi is having having Daniel-san wax the car and paint the fence and sand the floor and it's all these miserable arduous tasks and he finally gets frustrated. He's like, why am I doing all I'm not learning anything. And he is like, show me What? Show me paint the fence, show And and then suddenly it clicks and he sees that this A lot of these foundational &quot;Linkers and Loaders,&quot; &quot;What Makes It Page&quot; is all about 64 bit virtual memory management and how you do virtual And it's like several 100 pages and it's a hard complex There's a book that's entirely on C++ dynamic pointers I'll give another analogy. The reason that it's so and indirection with languages like C++ and my analogy is if you don't feel like and you order it, there's You've got the cooks who you hope they wash their hands, you hope they didn't drop the dough, you hope they wash the vegetables. Then there's another layer of indirection who delivers the pizza to your house. You hope we've seen horror stories, you hope they don't eat And versus if you were to make it yourself in your own kitchen, you know it's safe. So when you're dealing with a language or these dynamic tables at runtime in a process and things are being populated dynamically, those are points of indirection. We used to call this hooking, a lot of malware and root Now a lot of the operating the ability to do a lot of this hooking, but it's still there. Of course there's dynamic and so when you're dealing with a language that you need to understand that It's like specifically like But in the early 2000 tens &quot;Journey Into Ring Zero,&quot; which was great. It's all about kernel exploitation and it touches a bit on There are the Windows or Intel It's a set of a few books. You can typically purchase a set of them or you get 'em free online and those are fantastic resources. Honestly though, like I mentioned before, writing a driver, like one is download Visual Studio Code if you don't have Visual Studio, the big version and just start playing around with it because you could get lost and spend a ton of time there and just Google for some tutorials on how to do basic compilation, how things like calling conventions work and how subsystems work so because when you look at a tool it can be intimidating. Same thing with looking but you gotta get started with the basics and there are guides out there that teach you how to Doing stuff like that and values are and IRPs that is priceless. It's extremely useful that you understand about the easier it is when like reversing something as Oh there's a great site I wanna show you. So there's this great project that you see right here by a couple awesome people it's got every single Windows right XP even all the way up to Windows 11 and you click on let's say Windows 10 and it's got all the different versions, even 21H2 and 20H2, you know and you click on one it shows you all the structures. So you can either navigate or you can type in a structure which is the kernel process And we click on that all the different fields and the data type and such. And then you can click on and you can see kind of And the reason this is so important is because a lot of the Windows and it's not just a kernel. Like we could even go back and say, well what if I wanna look at some user mode structure like the tib, so NT tib let's say 64 and this is a thread with each thread in a userland process. They all get it. So it's a Window specific thing and you can see what the of that structure hold It's immensely useful and saves you a ton of time because again, a lot of the stuff in a And this is helpful but I'll say it again, the more you understand about programming in C, C++ or Rust, you're because if you don't like mutexes and spin locks things like K Process and EProcess and the thread local storage and like all these things you're gonna have a more difficult time because then you gotta You gotta say, well what is this thing? And it's a lot easier if development and that's why like writing a driver is very useful. - Stephen, I really wanna thank you for, sharing your knowledge and it's so nice to hear from because if you're starting out you're not quite sure where to go. So I really appreciate talking about things and if I've learned anything is I need to learn how to That's a great place to start. Give us your socials out who's watching, please go and subscribe to Stephen's channel. Again, a lot of people on YouTube being too basic, to get like really hardcore stuff. Stephen, just tell us to make contact once again. - Yeah, so my Twitter but there's a three and one of 'cause it was I didn't sign out to Twitter until very late in my career (David laughs) So yeah, Stephen Sims with a three instead of like you said, the channel the Off By One security stream or whatever it's called, I plan. I'm trying to be diligent. I've been meaning to and now that I finally have, I'm doing okay with being consistent. I'm trying to do it every Friday and I'm gonna start doing them out in advance if I'm But I hope to be consistent with that. And like you said, the goal from like a basic position 'cause I think there's a lot of material already out there on that. And then hopefully to the taking in and willing Like if you wanna see a particular topic and it's something that I can talk about it or maybe I can get someone to come on as a guest. The example you mentioned and smart contract security, I dabble in that but it's not my forte. You can't be an expert at everything. So having someone on is fantastic there. My Twitter DMs are open at Stephen with a PH Deadlisting.com. Deadlisting. But that's pretty much the only places I'm at on the social media side. - That's brilliant. Stephen, thanks so much once again. Really appreciate it. - Yeah, thank you for having me. It's been a lot of fun and I look forward to - Yeah, hopefully we can get you back. I mean, so just for the audience, if there's any topics that and talk about, put in the comments below, buffer overflows or you know, getting into some more Stephen, thanks. - Yeah thank you. (upbeat music)