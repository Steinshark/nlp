[MUSIC PLAYING] DAVID MALAN: All right. This is CS50. And this is already Week 8. But this is a CS50 bingo board from one kindly sent this to us. And she's apparently been taking that I apparently tend Some of which I'm aware And the idea here as she I say any of these you can draw a line through that box. And if you get five in a row, It seems only fair, then, if we if and when I actually do say Perhaps it'll be all the more motivation we're talking about today. So if and when that happens, And then please see Carter during the All right. So today, ultimately though, Week 8 how it works and, in fact, how we can So up until now, of course, spent quite a bit of spent a week plus so far on But ultimately, we're going and tie all of those languages together. But we're going to do it And in fact to do that, three different languages is a proper programming language. The other two are more about so to speak. And those languages are HTML and Some of you might have done this middle made a personal website of sorts. And JavaScript, a is very commonly used in to make interfaces that are But it can also be used server side. And what you'll find that like last week, like two weeks ago how to program, how to and also with elements of programming, concepts that you'll explore more if you classes. But at the end of the day, having learned how to in a context that's very much in or be it for mobile devices. And all of the ideas thus far begin to build on top of the internet. So what is it? So back in the late '60s and This is an early diagram on the West Coast of the what was originally called ARPANET. And this was a project from to begin to internetwork them to exchange data using packets of information back and forth. It wasn't too long before East through MIT, Harvard, and others. And nowadays, fast just a few decades later, is somehow interconnected, But how do you actually get to any of these other points or Well, let me stipulate, that the world nowadays simply computers, servers whose purpose left to right, top to so to speak, to just get But typically, you're not going to have and B. You might have you might have many different So if you have a friend and you simply send them are that email is going to be put inside And that packet might actually pass of any number of routers, but typically fewer And it's up to the IT administrators to route data between these servers. And we have software nowadays that It's not necessarily might be in the world of mathematics. But hopefully, it's the fastest way So the teaching fellows, thanks to past a demonstration of this whereby that you see on the screen here is a device on the internet is to get data, North, South. East, or West, between And if we assume that wants to send a packet of information from bottom right, it turns out that by over any number of routes. It can go up and to the left. It can go left and then up. It can double back a little bit. Again, it's not necessarily And this is a feature, not a bug. The intent of the internet able to route around downed servers. So if one router is overwhelmed, the internet can still adapt dynamically So here, for instance, is that our packets might take. Thanks to the team. [CLASSICAL MUSIC PLAYING] So my thanks to the team. And if you've ever used that you don't often see exactly the So it took us forever to Because no one actually knew to whom But if all of those TFs and TAs they were handing? What is it that Phyllis Well, I've called it And a packet is a generic term But it's kind of analogous to If you're still in the habit of you typically put your information And then you hand it or you drop it into the mail box. And then humans, in the actually get it from point A to point B. But odds are it goes through different So you can think of that as roughly routers. But the technical term for what is they were implementing a And this is actually that you've probably seen, even if you haven't really But this is actually a pair that the internet generally for some time to get data And let's consider each have a sense of what it is the internet or do anything else. Well, first, IP stands And you've probably even heard this in are indeed familiar And they associate it typically So I'll stipulate for today that device in the world has an IP address similar in spirit to Here we are at 45 Quincy Street, That is a unique string, theoretically, Similarly, in the world of computers, numbers of this format that Now that's a bit of a white lie. Because there's actually a And within your home, often within you'll actually have what appears to be or family members. But for now, let's keep that every Mac, PC, has a unique IP address that's dot number dot number. Each of these number signs And even though we haven't played in some time, if each of these how many bits are being used Think back to Week 0, Week 1. Yeah, so 8, in fact. 8 bits in total, or 1 byte. So IP addresses are And the other math we kept doing early that's a maximum of 2 to the 32nd How many IP addresses can you have, Enough. Actually, not enough would But roughly, 4 billion was the did anytime 2 to the 32 was involved. But it turns out with all of the clients, PCs, Macs, phones, internet of things devices nowadays, So the world is gradually in from this format, which is And in the world of IPv6, we've to 128 bits, which is a crazy number So you'll gradually see that over time. But those are a lot messier of a So we'll use the more Now just to get into the weeds That is, someone wrote this file to represent the layout So think of this as, like, the digital And even though we won't get into up here you just have some values This is byte 10. This is byte 20. And this is byte 32, but 0 indexed. So that is to say that this is just of bits, top to bottom, left to right. And what's going to be interesting for There's a whole bunch of information of any one of these packets. But we'll focus initially on these two, Maybe the most important it standardizes what on the outside of these envelopes. It says that every computer is going something dot something dot And so just like in the to send this packet and suppose that Brian's like, very simply 1.2.3.4, is put that IP address in just like you would address But so that Brian could reply to she's also going to put in virtually, her own IP address, is maybe 5.6.7.8. In practice, they won't But it's the general idea. So you have a source address from to which it's going. And that's what IP does. It sort of standardizes, in addition that need to be in this envelope, too. It really just mandates that provide a source address address so that the envelope But that's not quite enough. Because it turns out, and if you session there, you would see that to physically drop an and frankly, even in the to lose mail occasionally, And so it turns out that IP alone because sometimes the packet just More technically, that might happen It only has so much memory. It only has so fast a CPU. And if it's receiving because so many people are on the well, it might just kind of get drop certain packets in the enough room in its memory So the effect for the sender is that And so there's this other protocol, use in conjunction PCs, and phones that does a One, it guarantees delivery, or And it does that actually by doing this. It does that by having Phyllis write just the source address but also what we'll So, for instance, this that she might be sending to Brian. So maybe in, like, the memo And then, if she happens to she might write similarly a source But she might write two out of two. Because now, logically, if that sequence number is to know wait a minute, I number one, or maybe resend number two. If both of them don't get that's probably when Phyllis But in general, these sequence numbers But if Phyllis and Brian are each they can be doing different things. They can be doing email, chat, video or any number of services So TCP gives us one other Because when Brian receives indeed a computer, how inside of that envelope is indeed versus a little bit of video, versus Ideally, the outside of the envelope that indicates this is Or more specifically, this that should open this envelope, the program, or whatever else. So what Phyllis would typically do on in addition to the source and the memo field, the sequence number, And it turns out two of the most are these two, 80, which That is to say, something or HTTPS, which most everyone so it's some kind of And that number happens to be 443. There's no mathematical They're just kind of arbitrary. But humans decades ago decided So what it means for Phyllis is she should generally put a address and then the number of the port So if she's actually not sending an and Brian is a web server she would write colon 80. Or if she's using HTTPS securely, There's other stuff on the In fact, just like with IP, there But just to give you a sense you'll see that indeed sequence They use all 32 bits of this is to say that generally more than one packet or two. They might be sending even, depending on the size And there's some other source port and destination port. Destination port is the 80 or But long story short, Phyllis also identify this particular request. But more on that another time. For now, just know that TCP that the internet uses to point B. IP standardizes And TCP guarantees delivery and also helps the servers do more so to speak, among email, by using those port numbers. So at the end of the day, everything, it all boils down somehow to zeros as we might think of them in this case. Questions on any of these Questions on any of these? No? All right. Well, on the outside of this envelope 3, 4, 5, 6, 7, 8. That's obviously not what you When we actually visit websites, are generally in the habit of or google.com, or the like, But your Mac, your PC has address those virtual envelopes, AKA There is no room for words, letters of that we showed on the screen. It's just 32 bits, here 32 bits here. So it turns out, on the internet, That, unlike routers, which route there's another type of server that in your home, on campus, in more broadly, known as DNS servers, So what do these things do? This is just a type of server on is to answer questions of the form, what So for instance, if you on your Mac or PC or in harvard.edu and hit Enter, is to ask some local DNS server on network, on your apartment or address of harvard.edu, or yale.edu? Whatever you actually is a nearby DNS server that will respond something dot something dot And that's the number your device will actually use on the So you can think of as fitting the model that we keep coming or a hash table, more specifically, is essentially a dictionary, a two if you will. And in one column are domain names, On the right-hand are just the corresponding IP addresses. And that's it. To be technical, if they're not technically, it's a fully More on that another time. But domain names as we know them, And we'll soon see how to tease Questions though, on what DNS or how this might work? No. All right. So how does your Mac, how does know what these IP addresses are? Well, they don't come from And there's this whole hierarchy such that your phone, your ask the nearest DNS server, which is provider at home, in your apartment, or But it's a hierarchical system. And it's kind of a recursive design. In that if that local DNS it's going to ask someone If that one doesn't know, it might ask And throughout the world, of what are called root servers that coms in the world, all of the of the dot whatever is in the world. And so someone, at the end of the And in fact, if you've ever bought, or part of that process is paying someone with the actual server that So your final projects, for instance, to actually buy for personal for a few dollars a year, typically. So you're sort of renting it But among the steps you'll do that is to essentially inform the addresses of your particular bought for, say, that calendar year. All right. So how does all this get started? Well, back in the day, when you or in the world, you would to know the IP addresses of your nearest So literally, someone back in the day when signing and configure your Mac or PC for you. Of course, nowadays I don't remember recently to configure it for me. It all seems to happen automatically. And indeed, there's this other another solution to a human And I think this is among the remaining configuration protocol. And it's not that intellectually But what DHCP servers of the form &quot;what should be my DNS So nowadays, when you turn if you actually powered your laptop lid for the first day of your phone is essentially unbeknownst to you, that's just what IP address should I use for And hopefully, Harvard or Yale or generally has a DHCP server is just to hand out And what these DHCP tell your Mac, your address your device should is no longer manually configured. So this all just nowadays And in the case of a campus it's because, at the very you did register somehow. You probably logged in. You authenticated against your And that is what enabled and forever to recognize and answer those questions for you. All right. So that's it for how the far as we are concerned today. We're going to now start And undoubtedly, the most nowadays is something called HTTP. That is the World Wide Web, though most anymore. But HTTP is just another protocol and how web servers a protocol that governs how computers and how TCP governs how computers from point A to point B and also using those port numbers. And to be clear, what's a it's a very common protocol. And I can't reach any of you. But if I were to reach over You presumably, if we weren't five We would sort of acknowledge, in But that's a protocol. I know how to do it. You know how to do it. I'm initiating. You're responding. And that's exactly what's happening You have a client, like me in this You have a server, like responding to that request. Or analogously, if you might be the client You want to order food. And there's a server that serves you So computers, really, on the internet So when it comes very specifically to from email and video of these other services on the uses this protocol, what goes inside of to allow a web browser to request and So we've talked about really the the outside of the envelope. Let's now look inside of the envelope that you might visit or soon So HTTP stands for Hypertext Transfer but, again, just standardizes how we're to point B, from browser HTTPS is literally the And what that means for today's purposes encrypted, scrambled using so that it is very, very, who intercepts your traffic, your will have any idea what is They might intercept the They might try to open it up. But it's going to look and ones on the inside when using HTTPS But let's look at some canonical URLs. All of us are in the habit of seeing Well, let's actually tease So here is an example URL with So here, for instance, this generally means, even and you rarely see it nowadays, this Give me the root of the So this is to say this like, the default folder inside of which And we'll see what that means If, though, you're visiting we're going to henceforth So slash something is representative of just like in the world of Specifically, you might sometimes be in something like /file.html. Nowadays, this is kind of Nowadays most web servers the dot HTML, even if It just looks a little messy nowadays. It sort of reveals information So very often you won't see dot a file ending in that suffix. You might instead see Maybe not a slash, maybe a represents a folder on the server. And sometimes there are, of So all of this stuff you're probably Google Drive and the like. Those same semantics exist So there's a mapping between this URL on some server. All right. What about the other parts? So this is the fully qualified Even though you and I, we typically just mean this So technically, the W-W-W is what A host name is like the name of a in that domain. And this is just a human convention. Even though most URLs still probably that's not strictly required. That's just a configuration detail. And historically, this to less technical people in particular, that oh, this is a web address. This is an address on W-W-W just kind of connotes that. But decreasingly, do you I mean, some of CS50's own It's just CS50.ai. Because most of us are now oh, OK, that's probably a URL, even And in fact, even if you type the you can redirect the Essentially, remove the W-W-W to the address bar in their browser. This thing here is called And many of the domain names certainly in the US nowadays, end in .edu stands for educational, But of course, there's hundreds of are two letters. So .uk for the United and two characters for every But even those have kind of So .tv, for instance, is actually a of the English-speaking world for TV shows and the like. .ai, similarly, does not actually It's a two character country code that to represent AI. .ly for bitly and CS50.ly, too, that's a to essentially buy domain But long story short, used to be a few of Now there are hundreds of them. So I do think, over time, a lot less regimented as it seems to be Lastly, beyond the :// here is And this just means to be securely accessing the server Mouthful. But just to get some Questions on these here been taking for granted for years? AUDIENCE: Who approves .edu? DAVID MALAN: Really good So you have to be in an accredited I don't recall the name of the But it can't be anyone on the internet. You actually have to apply educational institution. That is not true of a Anyone can buy a .com. Anyone can buy .org, a .net, And then different countries over who can be in what All right. So now that we have a couple of verbs with which to be namely GET and POST. And that is to say, to request information from a server. That is, there's two different that go inside of this envelope. And the default, daresay, and the most literally the verb, And we'll see in a moment what But just know that there's play with over time known as POST. And whereas GET, as the verb suggests, POST, as the verb kind of suggests, So POST is used when you Because you're sort of sending POST is used when you upload an but GET is used when you're and visiting web pages and not really So for today, we'll So what does this mean? Inside of this envelope, probably is our messages that look like this. These are HTTP messages that in these virtual envelopes for you So for instance, if you were to you would hit Enter. What your Mac, PC, or is put a textual message like this inside of a virtual to the appropriate IP address address as the source address, and then But inside of this envelope is to know what it is you want. So for instance, GET is the verb. So you just want to The information you I defined earlier as just the HTTP/2 just means what version You'll see nowadays in the you'll start to see version 3 over time. But I'll use 2 for all And you'll see inside what we're going to start calling an literally tells the server what fully And this is important only insofar you might have multiple This is not going to be true or Meta or massive companies like that. But it's definitely going to be places like Harvard that don't but maybe just a couple, So in this case, this ensures that it knows to serve up or some other website that, hosted on the same server because paying the same cloud provider So dot dot dot just means But notice the colon here is just giving pairs. The key is HOST. The value is www.harvard.edu. There, again, are those claimed we would continue What then comes back from the server? If this is what's inside the what does the server send back? Ideally, the server looks like this, an acknowledgment a status code, which is going to be It's going to then have another what type of content is something called text/html. That is hypertext markup language, And then some other stuff. That's what's coming back from And we can actually now see this. Let me actually go over to VS Code here. Let me maximize my terminal window And let me go ahead and curl -I https://www.harvard.edu/, that's got the host name of W-W-W. And curl just means connect to a URL. It's a command line program that comes You might have to And it just lets me It's going to let me simulate without caring what the so no pictures, no images, no text, of the envelope in terms And here's mostly dot dot dot, the There's a lot of these key value pairs. But if I scroll up to the is the status code that came back. And you'll see that the content And there's a whole lot of A lot of this is diagnostic. It reveals information might be useful generally to at this point in the conversation, For now, we can focus of this response, which is this here. But here's where even these to get a little more familiar, in fact. Suppose that I want to Actually, let me do this. Let me go back to VS Code here. Let me open up incognito generally is to give you And we'll talk more In incognito mode or private mode, you you have no sessions, terms I'm going to use it to make sure that my starting from scratch, freshly, so that from previous examples. And what I'm going to is open up, via my browser's These are going to look a versus Edge versus Firefox versus But almost any modern browser, has built into it developer tools. And you might have to click a But these are tools web developers that want to not but use the browser to develop their Now there's a whole bunch of tabs here. And I'm going to focus on Essentially, this is like diagnostic like a debugger. But it's specific to the web So with my developer tools open I'm going to go up to the URL bar So the exact same thing that I typed I'm just typing in my browser And if I hit Enter, what's and let me go ahead and drag them is you see all of the HTTP requests, that just went instantaneously between my Mac here and And notice it's way more It's way more than a single request. Why? For now, assume that each represents maybe a sound a video, an image, some text. There's all sorts of media And they might actually be Browsers are designed, if all of the media for a single web with we humans only typing But watch this. At the very top of this to the top of my network tab. I'll see a request, my original request for the website. And if I Zoom in here, we'll see So all is well. Here's the contents of the website. But there's a lot. In fact, if I look at the harvard.edu is composed of 91 And that's just the to mention everything else But 200, OK, is a good thing. And odds are you've never actually So let's consider happen when you make these requests. Well, here, for instance, Suppose that I omit the W-W-W And honestly, you and nowadays I bet, in the habit of just We don't bother typing the HTTPS, We probably don't You can probably think who's very pedantic like that, But you don't need to do that If I, in fact, go back me use curl again to connect https://harvard.edu. Now notice before I went to W-W-W. And if you will. But harvard.edu will still work. But watch what happens when I hit Enter. I'm going to get back the that Harvard just sent back to me. But it's not OK. It's not 200 anymore. It's actually this actually means something specific. 301 actually means that Harvard's In other words, Harvard, can configure itself to redirect if they prefer to canonicalize So by default for branding probably use www.something.something. So Harvard is, in fact, doing this. And for reasons we'll there's technical motivations called cookies and sessions. But for now, that just seems But if I now open up another browser let's say, how about incognito mode, new window. Let me open my developer tools again. Let me go to the URL bar and only I'm still in my network tab here. And if I scroll to the very the top row looks a It's not 200 anymore. And I can click on that here. And what I'm now seeing in yellow So this is to say you've been able to if you care to. You can see what's going on Check that off, I think. Underneath the hood so as to Now for users, this is not that But for developers, this can be and also diagnosing problems ultimately. So that's just a couple of the status but perhaps 301. There's also this one now, with which Well, it turns out 404 is what So I can simulate that here. Let me go back to VS Code Let me do curl -I https://www-- because Harvard prefers Let's see if there's a page about I'm pretty sure there's not. And so, indeed, when I hit Enter, a headers. But notice at the top, 404. It's File Not Found. Now what you see in the browser is going Some websites just display an error And that's why you and I have seen Sometimes they're much Sometimes there are links back It's entirely up to the server. But that status code indicates And in fact, there's a whole Some of which you'll now 200's OK. And it's a good thing because it means everything's working. 404 is not found. 301 is moved permanently. Any of these that start Long story short, there's different to another, as we saw from that 400s are generally bad. It means that the user, the browser Like, 403 forbidden probably 500 you're going to start 500 is, like, the segfault So there's no pointers But 500 means that you wrote some next week. 418 is an April Fool's Some servers honor this. But someone wrote up literally proposing a response that says even though it was just a joke so sort of geek humor, if you will. So those are then the status Let me show you one other. Has anyone been to this URL here? So you have? All right. So without spoiling well, let me go into Someone's pulling it up Safetyschool.org/ Enter. Oh, my goodness. Another box gets crossed So how is that working? Well, if we actually diagnose this curl -I HTTP-- and it doesn't support ://safetyschool.org/ Enter, all this response with a location that And this is amazing. Someone has been paying for And all it does is literally this. Now I know for our friends at it's not quite fair to poke fun. It turns out Yale got us even better. So later today, we'll turn All right. So let's go ahead and it is that composes this web Let's introduce another language called HTML, which is not a programming Which is to say it's all mocking up a web page so that you can But HTML is not going to have and all of that stuff we It's just about presenting information. So here are some of the You're about to see really HTML honestly is the kind of language and then you're just kind of off documentation, and the like. I still remember years from a teaching fellow who and then you kind of fill because it has relatively few Even though, in fairness, to get good at making can get good very quickly at that artistic disclaimer. So in the world of HTML, there's really And those of you who have might be familiar with So here is some sample HTML. HTML is just a text-based language. You type it out with your keyboard. Again, it's not a programming language. So you can't call But you can mock up a web page. And this web page, for going to say hello, title in And then the body of it's going to say hello comma body, just before we make more interesting pages. So what's going on in that the server can display So in fact, let me go ahead I'm going to go over to VS Code here. I'm going to create a new file let's just call it hello.html. And I'm going to really quickly whip So DOCTYPE html html lang equals Open head, open title, And then down here, open body. And you'll notice I'm actually not VS Code is configured to automatically So when I open one of these things VS Code is doing some of And in here, I'm going But I think this is the that I just proposed in So this is clearly now a text file How do I actually view So if this file were I could literally double click it would open up and show me this web page. But this file, technically, It's in the cloud. It's in your code space. So all that we need to do is to serve this file to me or to And the command we're going to run This is a piece of wrote that we pre-installed And by running this, it starts is to listen for HTTP requests. And as soon as it receives be it mine or anyone else's, it will So let me go into VS Code here. Let me reopen my terminal window. And I'm going to go ahead and And now you'll see a whole isn't germane to our discussion yet. But here is this URL here. And if I hover over it, I'll that I can click on, or on my Mac, I and that will open up in So this is going to look a But this is what's called It's just literally the contents So I'm in my Codespaces default folder. I deleted everything from Your folder will, of course, that you've created and kept. I have a Source 8 in advance because it's got all of But there's the file I just created. And there's some other information I created this file, and so forth. But you'll see that this is just a And this is actually somewhat the infrastructure we're using. But if I Zoom in up here, running my own web server that GitHub dynamically And you'll have a different You'll see that baked into this And they're doing some trickery. Normally, I would have to access or even 8080. And the reason for this that is to say Codespaces, the is obviously itself And it's GitHub's web server that's So if I want to run my own web I just have to pick another port number. And so what you're seeing in By convention, the program I just ran, It does not try to use 443. It uses 8080 by default. And that's And underneath the hood, that virtual Because this is not an This is not CS50.dev or GitHub.dev. This is little old me trying to serve But the point here is this. When I click on this file, I should And there is a big white box, otherwise are the only words in the And if I scroll up further, you'll So this now maps back Here is the HTML that I just And it is what told the So let's walk through This first line here is what's Honestly, you just copy And it means hey, browser, Odds are in some number might change over time to But for now, this just means I'm language. That's kind of anomaly, to see this exclamation point again. Everywhere else, you're going and greater than signs or But they're almost always going This tag here, this is an HTML tag, And this is what's So anything after the name of a And attributes can have values. Those values that are associated with and typically quotation marks, as in this case. So here we, again, have that paradigm They're everywhere in computing, keeps changing, whether when we're This tag at the very bottom now means So when you see a tag but starts with a forward slash-- and you do not need to repeat be very annoying to have to keep it succinct-- this is what's known conceptually corresponds to So they're sort of symmetric. Inside of that are two So there's actually a notion of a family as we've discussed in data structures. The HTML tag, per the one child called head and Everything between the here is what's also generically So this is the head element. This is the body element. A bunch of new vocab, but it's not It's just jargon that we'll use. Here means hey, browser, here So like the very top of means just the title bar. In fact, this means, hey, browser, And then here, notice there's This is literally raw text. And this is why we saw in the actual title. This means, hey, browser, This means, hey, browser, Meanwhile, down here, hey, browser, Like, 90-plus percent of the page the big rectangular region, hey, Hey, browser, sir, What is in the body? In this super simple case, That's it. So HTML really is that pedantic. It just tells the Stop doing this. Start. Stop. Start. Stop. And that's how it knows left to right when actually All right. Questions about any of And yeah, in front? AUDIENCE: Would browsers be DAVID MALAN: Say that again? AUDIENCE: Would browsers be DAVID MALAN: Oh, yes. I think that's fair. The question is, can browsers Yes, I don't think people Interpretation generally parsing something that's logical conditionals, and so forth. Parser is a term you might A parser is a piece of analyzes text top to breaks it down into chunks that have like the attributes, like the and then it displays them, in this case. There's not as much to But that's reasonable, nonetheless. Yeah? AUDIENCE: With all think is is worth or just use a Bootstrap [INAUDIBLE]? DAVID MALAN: Really good question. With all the frameworks bother learning HTML and writing it like something called Bootstrap. Well, we spent a few minutes today But even frameworks like assume that something also about something called CSS, more something about JavaScript. If you really don't want to know that's when you reach for like Squarespace nowadays or Wix, where and create websites that are, at But the developers at have automated the process or GUI of letting you create it. But even then, most web developers, who want to create their programmers themselves they might still like to know a and JavaScript because then you and configure things. And indeed, that's a tend to feel if you can't quite drop All right. So just to make this a little more-- to give you more of a this indentation is Kind of, like, in C, where we Clang, about what your code looks like. Similarly, browsers are pretty tolerant. You can have all of this white space, Or you cannot. It's not going to care, However, this is certainly But we'll see next week as we start it's not always important that the But when you're writing in should be when you're collaborating So this, though, is what we would So here is that hierarchy. So if we think of the whole web page as that document has a root element it's open HTML tag and its closed tag. It has, as I claim, two children. The head tag has one child title. And then both of those to borrow the family tree vernacular, and hello, body, respectively. So this is going to be useful with JavaScript, an actual we can start to modify this tree and make the page dynamically creating new HTML on the fly, even Case in point, many of you Generally speaking, you to see if you've got new mail. It just magically appears at the And it just keeps pushing Well, that's going to be the code updating this tree in memory. And it has the effect of more and more HTML that represents All right. So with that said, why don't try this out in a couple of ways. So let me go back to VS Code here. Let me propose to actually So let me go into, let's Let me zoom out. And notice down below, as I was clicking on hello.html, actually is outputting sort It turns out any time you request a that server is probably logging One, it's probably Two, it's probably logging you're using Chrome, or Safari, It's probably logging the operating be it Windows, or Mac OS, or and maybe some other We won't dwell on this today. But there's a lot of information that are in incognito mode or private mode. So more on that next week. And today, unlike all past see this in your own a ports tab, which for the most part But you will see that this Why? Because in my terminal, that It is a server. And it's just there living to serve for me to click on more of those links. And every time I do click on a link, But it turns out that all this time can see all of the TCP ports, Now generally, you haven't needed any But notice that HTTP server is CS50 has some of its own customizations. And this is a bit of a geek Easter egg. But we presume to use Port 1337, will know what it means. This is like leetspeak. So it actually spells Leet if you're OK. So anyhow, we chose that port number. But there are some conventions. Next week we're going to actually isn't in use at the moment. But long story short, you can see And indeed, we're just some of these layers that have Well, let's go ahead and do this. I'm going to go ahead and create another here in the console. Notice that at the right-hand side of Bash is the name of your prompt, so If I click on the first It's still running. And I want it to keep running today. But I'd also like to be able to So I've simply created And I can go back and Let me go ahead now and copy hello.html called-- how about paragraphs.html? And in paragraphs.html, I'm I'm going to hide my terminal window And I'm going to go ahead and just And in fact, let me go ahead I'm going to go ahead and, in my a whole bunch of text so that I can So now I'm back. And all I did was secretly copy I'm going to make a couple of changes have just a title and a body. One, I'm going to rename this to which file is which. And down here, I'm going to go ahead This is not actually Latin. It's sort of lorem ipsum text, which meant to look like Latin. And typographers historically for actual text. But notice this is a pretty And so it's going to make So let me go back to my other tab, where Let me click back. And now notice, in my directory listing, Let me go ahead and open that up. And voila, there is a Just for fun, let me create So I'm going to cheat temporarily and But I'm going to separate as you would in, like, Google Docs in English or any language. And I'm going to go Nothing has changed yet because HTTP, and Brian, requires that we send want to get updated content. So I have to click my browser's reload depending on your browser or OS, I definitely get more text. But it just looks like one big What might your is, even though I've clearly indented Yeah? AUDIENCE: HTML doesn't DAVID MALAN: Yeah. So HTML doesn't care about more than one whitespace. I can hit as many Enters as I want. All of them are going to be It's going to be normalized In general, this is useful. Because it means I can pretty print even if I don't want the browser But here's where we're going And it turns out the is to use the paragraph tag. And for short, it's just I'm going to be a little is being a little annoying because but I don't want it to sometimes you have to So these autocomplete features But I'm going to go ahead open and close around And I'm going to maintain it visually clean on the screen. And now I'm going to put this one And so it's a lot more verbose. But notice that it's effectively end a paragraph, start a paragraph, So if I go back to my other now we have some semblance which is three separate All right? So that's the p tag, the paragraph tag. P for short, because as you'll abbreviated just because Let's do another example. Let me go back to VS Code here. I'm going to copy this text. I'm going to create a new file called-- how about headings.html? And I'm going to paste this, close my I'm going to rename the just to keep straight which is which. I'm going to delete all of these no, let's not do that. Let's keep the paragraphs. But like an academic let's give these chapter headings Well, I could just do How about 1? And then down here I could put 2, But of course, if I reload this, it's if I go back to this directory listing, It's not super pretty. But it would be nice to give a little And in fact, there's a I can use H1, for instance, And then let me close the Then down here-- and, again, so I'm going to give myself a little which of these is which. For this, maybe it's not So let me do H2. And then inside of this, I'm And just to be clear, I don't have I'm just doing that You can technically just do this But I'll be consistent, at least. But either approach is fine. And then, down here, I'm going So let me delete this and do h3. I'm just going to write the word three. And then just to be neat, I'm going So now if I go back to I'm going to get some It might not be the looks like it's big and bold, H1 is the biggest. H2 is smaller. H3 is even smaller. And you can go down to h6. And it gets smaller and smaller. And at that point, if you've subsections of your book or paper, So they stop at some point there. All right. Well, what else can we do in HTML? These things are omnipresent. Let me copy this HTML and close and create a new file, And let's make a list of information. Let me just paste that HTML, just my title to list. Let me get rid of all of these So now I'm sort of And then inside of the body of this like foo, bar, baz. If you've never heard these computer scientists go-to words. A mathematician might choose CS people tend to go with foo, bar, So here's a list of If I go over to my other tab, there's my new file. Let's click on list.html, same problem. It's a list. But it's not one after the other. Last time, of course, we But you know what'd be nice? To make it a little prettier, are kind of everywhere these days. So I could try to simulate this. And you might be in the habit But of course, if I go back I'm just sort of making But it turns out-- let me undo that-- there is an as ul for short, that of these words in an unordered list. Let me go ahead and indent But to have three items need another tag, a list item tag. And I'm going to go ahead and add that and then another list item tag here. And here's where it's I could move foo and bar and But this is going to start to much white space. So reasonable people will disagree. But this feels a little So I'm going to leave it as such. Go back to my other tab. And now when I reload, you get And you see these all over the web. What if I want to have a numbered Any instincts for changing So ol is a good instinct. And, indeed, sometimes As in this case, if I change ul to ol, I Because when I reload, it's going for me like this, top to bottom. And what's nice about this is, if I go I don't have to manually The browser is going to And if you're doing an specify whether you want double I, triple I, or so forth. There's different numbering But by default, we get I'm going quickly. But it's hard to get too excited But any questions on We'll by design try to All right. So how about just a few other tags to Let me go ahead here and that I made in advance that's going to So here let me open a file that I And because I brought it with me, I And in fact, if you download you'll see that they're like our C code and Python code was. It's a little weird. But here is the syntax It's a less than sign, or open bracket, dash, two hyphens. Then at the very end of the comment, It's hyphen hyphen Why these symbols? Humans probably decided no way someone's going to accidentally type those characters visually. So let's use them for If you really want to type them, But here is my table title. And here is just kind of a Here is a table tag with a tr child. And here's the closed child. And then there's a bunch of td tags. So I'll give you tr td stands for table data, from, like, spreadsheet software. Does anyone want to going to look like if I open What is this reminiscent of? Yeah? AUDIENCE: Num pad. DAVID MALAN: Yeah. So it's like a numeric for instance, if you're dialing So let me actually go to my other tab. Go back to my directory index. There's table.html. And it's not going to look very pretty. But it is structured in And in my browser, I'm going Command plus or Control It does look like it's laid with everything very nicely aligned. So that might be useful as we get Let me go back to VS Code here. Let me create one more And how about code image.html? And just to save time, And also, let me that I brought with me that Let me close my terminal. I'm going to delete everything because I'm just saving But I'm going to rename I'm going to get rid of the comment But in the body of this page, I'm going bridge by the river. So I'm going to use an And now, huh, it's obviously not going Because what image? So here is where attributes, This attribute earlier, though seems to indicate that this page been my past ones, the Latin one aside. That attribute on the HTML tag is useful or something similar built in. And also, it's useful for SEO, Because when Google and crawl my web page in the future, I intend for most of the content to it and keep track of So here, for the image tag, I'm And that attribute is called And what you put inside of its or single quotes, is the name of And I include it in a file called bridge dot ping from Week And if I go ahead now and go to my and zoom out, you'll see portable network graphic, which image.html, which I just created. And voila, here is It's a little too big We'll see in a little bit how But indeed, that's an image But notice, if this or if I had visual difficulties software for accessibility generally good practice that pages are accessible as possible. And so some tags have additional Like, for an image an Alt attribute that to describe this image. This is what a human a very slow interconnect connection. And before the image downloads, Or if I'm blind, I could have these words recited to So it's best practice to include so that all users can know what they're so keeping that in mind, too. All right. Let's do one other piece of multimedia. Let me close these two tabs. Let me open my terminal and open Let me go ahead and copy, which is a common video file and go ahead and paste in But let's now embed a video file, as you Let me rename this one, too, to video. Let me get rid of the old And it turns out videos There is a video tag. There is a bunch of different But I'll come back to that in a moment. But videos, because you might want to depending on people's bandwidth, they actually have source children. And confusingly, it's actually And even more annoyingly, it takes This is not good design. But this is what we're And then the type of this look up if the browser doesn't This is what's known as a And then, I can actually configure this. And you would only know this by looking at an online reference. I can actually add some video like a Play button, a Pause I can mute the video is just going to modify the But this is anomalous. For some attributes, it just Because muted, it sort of says We could do, quote, unquote, &quot;true.&quot; But humans decided years So some attributes do not need value. So you do not need equal And you would only know this All right. Let me go back to my directory listing. Let me go back here to this here. You'll see that there's now not I hope you'll forgive me for this. There's at least no sound. But when I click on this which I can then click And you see some short video file All right. None of that, let me go And let's play around now with which is hyperlinks. So hypertext markup about linking one site to And nothing we've done beyond this own video controls. So let me go ahead and do this. Let me go into VS Code here. And let me go ahead and that just allows me to click on a link. So let me go ahead and open up VS code's terminal window. Code a file called link.html. I'll close my terminal. Paste this code. Rename video to link. Get rid of the actual video tag. And in the body of this page, let's to visit, for instance, Harvard. All right. If I now go to my directory index And of course, this doesn't because I literally All right. Well, what if I do what on social media and various Let me go back to the web page, reload. The text changes. But it's clearly not I still can't click on this. All right. Well, maybe it needs Let me go back, reload. All right. Still not auto linking. Let me go over here. And maybe it needs https:// and a Let's go over here, reload. And it's still not working. I can highlight and copy it, but So what's going on? Well, all of today's social media someone at the server in Python or JavaScript to automatically notice wrap them with HTML tags So what I actually need I'm going to introduce an The hyper reference attribute to send the user to, so href for short. I'm going to close the tag. But then, in between the I'm now going to put the text So it's a lot more verbose. But this is what websites are generating automatically for you that you have typed something Let me go back to VS Code. Let me go back to this And now we actually see a working link. And this is going to be super small. You're not going to be able But if you hover over this link, a little clue at the bottom to be directed before you click there. This can help if you're and might not want to It's small on my screen, but That's not generally the case on But notice that this very simple can pretty quickly be In fact, let me go ahead And I could do something like, actually trick someone into by just changing the href to not match And if I reload the that it looks like I'm going to Yale. But notice, super small, it still says the real URL. But you can get even more malicious. You can not just say Yale. You could literally say You can make it look like And now it's really quite malicious. And this is representative of what you attacks, P-H-I-S-H-I-N-G, whereby People are trying to dupe that leads you to your so that you log into some bogus website. Now you've given them access to your It's this simple because these building blocks of HTML. All right. With that said, any questions on this? No? All right. How about just for one final flourish let me propose to introduce It turns out, and I'll open Let me open up VS Code and open This has nothing to do with It has to do with metadata, It turns out that in the head of the we've only had titles. But it turns out there's called meta that has a couple of And this one here, it's a little to copy paste these into nowadays because essentially, Instead of making the font it will take into account or the tablet and sort of So there's some useful accessibility There's other use cases Let me open a file called Here are three meta tags They're using a property attribute And this is a little more specific. But nowadays, too, on social a URL into a message you very often see a It's sort of automatically generated. It makes a nice pretty Where does that image come from? Where does that information come from? From these meta tags, any web so that when this page's into social media sites know what preview to show to humans. It comes literally from So for instance, this would that says CS50, Introduction of Computer Science and And in this case, it would as the default image for You have full control as a web Lastly, when it comes to features reimplement Google, if we may. So let me go ahead and create a Let me copy paste some Let me go ahead and get tags to make a different Let me get rid of that comment. Change this title to And inside of the body I'm going to introduce a form tag. And now in the form tag, I'm going And let's go ahead and And now I'm going to let's say, button, that has a value complete. But let me go to my Let me open up search.html. And I actually have the form, an interactive form for the web. But it doesn't actually But let me do this. Let me go to the actual google.com. Let me search for something And of course, we're going to And we're going to see that the populated at the very top of the page. Now the URL that Google started at the very simple And I'm going to frankly just Because I'm going to distill It turns out that in URLs in the form of key value pairs. So in any URL, you can like we saw earlier, you and a value prefixed with And in fact, if you want to you just interpose them So this is to say there and really HTTP for sending And it's generally formatted like this. What this means is actually this. Let me zoom out, close that And let me manually in-- Now it has to be q, because that's decided two decades ago when Q stands for query. But they could have called I'm going to hit Enter And what you'll see is that I don't I can literally go to a URL of all Now no one's normally going to do that. That makes no sense. But it does suggest how simple If you want to pass input to with a question mark, key equals value. Key equals value may be separated you So what does this mean? Well, Google really did the hard They crawled the internet and But I can make the front interface that still works for it. And I'm going to do this. I'm going to add an specifies an action attribute of And I'm going to specify that the is indeed get. This is inconsistent. I capitalized it as all caps before. In HTML, you actually But that's also the default. don't even need to specify that. But I will, just to be pedantic. Inside of my input, my to look like this, just I'm going to actually give know that's what Google servers expect. And I'm also going to specify-- eh, just that for now. Let me go back now and reload. And it's going to But notice this. If I type in cats and click I'm going to be whisked away in search.html to, after zooming out and Which prepopulates the URL prepopulates this text which is to say, like, the front as is most every website. It's as simple as these key value pairs Now I can make this a little prettier. And just so you've seen it, if I isn't text, which is the I actually get some nice features. Let me reload this now. And if I start typing in, like, to click, which clears it. So a lot of websites have that. It's a little bit of a nicety. If you don't know what you you can actually be kind And you can add a placeholder or whatever you want to show them. If I go back to the see a grayed out text It goes away if I type But it's explanatory, You'll notice that it wants to or anything I've typed before. You can disable that. There is an attribute whose value can be either on, can be explicitly specified. And notice this, too. When I reload the page, it's actually Before I can search for anything, I have to click in the text box. And now it has focus, so to speak. It gets highlighted in That's not the best website. Why are you making the users pick up to click on the only thing So there's another Auto Focus, which will just move So this is to say, even though there's a lot of functionality knowing the language all the more. So with that, we now have In fact, heck, I can say change the value of that button, reload. And now I'll go ahead and type Now we have a whole So that's a lot. I think it's definitely So let's take a 10-minute And when we come back, we'll All right. So we are back. And it was brought to my that we were pretty darn close And I will concede that your socially engineered me into saying that they needed. And so I'm sad to say that bingo was has already confirmed, because a long answer to a short question. So congratulations to those two. I do dare say, too, that whole isn't going over well in New Haven. So I'm pretty sure we can However, as promised, in fairness, I thought it only fair to resume now Harvard-Yale pranks with this 2.5-minute glimpse at how our years back. If we could dim the lights now for this. [VIDEO PLAYBACK] [MUSIC PLAYING] [CHEERING] [BAND MUSIC PLAYING] - All the way at the top [CROWD NOISE] - [INAUDIBLE] this for you, Yale. We love you, Yale. - We're here to cheer for Harvard. - Yeah! Go Harvard! - Go Harvard! - [INAUDIBLE] one and pass it down? - Pass them down. - Great. - It says go Harvard. - We're nice. - You see that [BLEEP]? - Look at them. They have the paper! - It's going to happen. - It's actually gonna happen! - I can't [BLEEP] believe this! - What do you think of Yale? - They don't think good. [LAUGHTER] - It may be a complete mess. I don't know. - Dude, does everyone have it? Does everyone have their stuff? Does everyone have their stuff? - The probability that it's going to - I agree. - It's too complicated. - [INAUDIBLE]. - I know. But it's too complicated. - What houses are you guys in? - [INAUDIBLE]. - That's not a real house. - How many extra are there? - Ho-fo. - Yeah. - You guys aren't from Harvard, are you? - Fo-ho. - Pforzheimer. - Yeah, but you said ho-fi. - Just make sure everyone has it. - Well, she's probably drunk. - It looks like they're still passing. Are all the cards distributed? - [INAUDIBLE]. - All right. Let's do it now. [CHEERING] - Hold up your signs! - [BLEEP]. [CHANTING] - You suck. You suck. You suck. You suck. You suck. You [BLEEP]. - Did it. - [BLEEP]. - You suck. You suck. You suck. You suck. You suck. You suck. - What do you think of Yale, sir? - [INAUDIBLE]. - One more time! One more time! - Oh, and there it goes again! [CHANTING] - Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! Harvard sucks! [END PLAYBACK] DAVID MALAN: So fair is fair there. So now back to some HTML. And we will transition momentarily by which we can style So there's this feature in HTML even though we didn't use it yet, and, really, most modern languages Which is otherwise is a way of using or to extract information from strings. And so by that I mean this. Let me go over to VS Code here. Let me go ahead and create a I'm going to copy paste some code from And in here, I'm going to go ahead And in my code, I'm going to go representative of a So in this body, I'm I'm not going to bother sending it to here. I'm going to give it an input tag with I'm going to have auto I'm going to give this form field the I'm going to give it a unquote &quot;email,&quot; just so that the user And it turns out that browsers have type email, whereby you can rely on the actually typed in an email address. Now I'm going to go that this time will be called Register. And now let's go over to my other There's register.html. And we'll see a relatively But it's prompting me to If I go ahead and sort of type you'll notice that the browser sort message saying, oh, please include And it's pretty good in that if I which is also not valid, and try that it's incomplete. So built into browsers is some in this way. If I finally do type in then the form would be submitted If, though, I want to tolerate only an education-themed website I can actually add another attribute too. I can add a pattern attribute. And inside of its value, I can a regular expression, or a regex. That is an actual should match the user's input against And this is going to But I'm going to go ahead and do this. .+@.+ backslash dot edu. Now this looks a little weird. But it turns out I'm using certain scratch the surface of today. But it's an incredibly useful and languages more generally. Because in the world there are certain patterns And here's a really good they're for in the world of the And here's kind of a short cheat It turns out in the world of a dot represents any single like backslash n. A star or an asterisk A plus means one or more times. A question mark means 0 or one time. A number inside of curly braces And then two numbers in means at least n times, but at And then there's a few other, actually. So what does that mean? Well, let me go over to VS Code again. And let me zoom in on And it would seem that, in this Plus means one or more. So one or more characters to the left Then another dot plus means one or more But the whole thing has to end in .edu. But there's this additional And why might that be, intuitively? Even though I've not said? Because I want a literal dot, a literal So I escape the period special significance per this cheat So what this means is if I go and I try to claim to work at like that's a valid-looking email address. But when I click Register now. Whoops! Sorry. It went through because I did not So I screwed up. Let me go back to the register.html URL. Let me reload the page and type in and even-- sorry. Let me type in malan@harvard.com. And even though it's a valid-looking So the browser can defend But the more important that as useful as this is, this is not generally the best and protecting against Why? Browsers can't be trusted. Or more generally, Why? Because the way HTML works is that everything is happening or your own phone locally. Per the envelope story we told earlier, reading it top to bottom, displaying it on your computer. But we've already seen that has built into it these developer tools. And there among the tabs here, let me actually go to the Elements In the Elements tab, you actually of the same HTML. But what that means is that you can actually change it. Now you're not going to be able But I can absolutely So suppose I'm now a And I really want to but it's apparently restricted I don't have a .edu So that's fine. Let me actually go into Let me just double there, highlight it, and boom. Now gone is that pattern entirely. The web browser now will let me because the developer tools give you HTML. So if I've changed the HTML, the Now what's the takeaway then is wonderfully user friendly. But it's not secure. It's not safe. So next week, we'll spend at making sure that even if someone they still can't actually get through And this is true in general, too. Let me actually, just for fun, go Let me open up my development tools. And let's see where I might go here. Suppose that I want to Well, notice that I'm on a lot of HTML that composes this page. And notice that these triangles indicate But if I expanded them, I could see more But suppose I'm now a hacker. And I want to maybe delete this menu. Notice that you can also click on any element in With these developer tools, click option, and you can actually been that implement that One, it's wonderfully useful teaching yourself new tricks, Here, though, I'm going to And I'm going to highlight this I'm going to delete it. And watch what happens at top right. Gone is the menu. Now, of course, if you go to harvard.edu If I reload harvard.edu So it's only my own local copy. But this does speak trust anything happening client side. Because someone can be Now it turns out there's can use in regular expressions. For instance, these are what You can, for instance, some number of digits or characters This is a range of So it's effectively the same There are certain shortcuts, backslash Backslash capital d means anything And dot dot dot, there's You might use these to maybe validate if you want it to be formatted in a But long story short, someday, your friend as you try to As an aside, it does escalate quickly. So this is typically that browsers nowadays use It is way more complicated than . +@.+. Why? Because you can't have @@@.edu. There's certain characters There are certain characters So long story short, this is a that is more correct when it All right. So with that said, there's one tool And that is at this URL And this is a free web service which is the group that essentially And if you go to their web page, to validate your own code. Essentially, check it for otherwise known more generally as a URI, So just for kicks, for instance, and grab my HTML that I just made. I'm going to go back to validator.w3.org and click Check. And it's just a nice handy website you will hopefully see this, So it's a handy feature just to make your code is correct, even if it's not All right. With that said, the second and we'll just scratch the to give you a sense of is something that's worth understanding thereof. So let me propose that there are In the world of CSS, we're, again, In this world, they're called Why? It was invented by different people, In the world of CSS, ways of specifying different That is to say we're going the font size, the color, the when it relates to tags in our web page. And there's going to be different as we'll soon see. In an HTML page like this, this is our it turns out that you tag in the head of of your stylistic decisions, and all of those kinds of aesthetics. We'll also see another approach whereby to a separate file, like And you can link to it Link here does not mean A, like, would have been called a link. But it's not. This just means that these two files All right. So that is to say we can use these kinds So let me propose that we do this. Let me go into VS Code here. Let me go ahead and create page for someone like John Harvard by And in home.html, I'm going to from before. And now in the body of this page, I'm going to have a web up here that just says John Another paragraph that like welcome to my home And then, like, a footer at the that's a copyright, say, So super simple, but representative and a footer thereof. If I go into my other tab and I will see now home.html. And it's going to be It's the same text, same font size. It is three separate paragraphs. But let me start to stylize Let me make the top bigger and the top bigger and centered and So I'm going to go ahead and do this. It turns out that you can have but even more simply, a style I'm going to add a style attribute And how about a style attribute And then maybe down And then down here-- whoops. Thank you. OK. I owe you some cookies. All right, so style here of font size And here is just another stupid Again, left hand is not In CSS, cascading style sheets, which it's key colon value. In HTML, it's key equals It's just different techniques for All right. If I go back to my other tab and reload, but it is large, medium, and small. I didn't center things It turns out that this is what's called a property. And a property is defined If you want to have multiple in CSS, you separate So those are back. And if I want to center the text, I could now end my thought It's not strictly necessary. But I'll keep it just But it's only necessary I'm going to go ahead and So I'm going to go down here and add and add a semicolon after small. So I align, text-align center, center, If I go back to this other Now it is, in fact, centered. But here's where we can start to have So I claim this is correct. But is this perhaps the best design? Well, maybe not. I mean, these aren't really It's not even complete sentences. But there are three different right, like, the header up there, the footer. So it turns out, and we saw a glimpse there's another tag instead of p for And even though this to have much of a it's maybe semantically a bit better. Because, again, these So if I really want to nitpick, I So div is a very common way to give of the page to style as you see fit. If I go back now and reload, notice The paragraph tag gave me some So I've lost that. But I could add it back But now, let's come to What's redundant about what I've seen CSS before? Yeah? AUDIENCE: [INAUDIBLE]. DAVID MALAN: Yeah. I mean, I had to center all three it would seem. Copy paste has generally Even though I'm doing it to when the results are copied has not been good practice So it turns out I can do this. Let me actually delete this one. And I can keep or get rid of the for parity with our first version. I'm going to get rid of this one, too. And you know what? Here's the C in CSS cascading. It's more like a waterfall effect. And if I go up to a parent the parent of all three divs, I and say text-align: center there. And that has the effect of of the children that So now it's sort of better said text-align: center once. If I go back to the web page and reload, But it's better design. Because if I want to align I can change it in one place and All right. What else might I Well, it turns out that I could do This copyright symbol? I mean, it's just sort of homemade It turns out that there are ways And you can use what are You would only know these by looking But it turns out that number entity for an actual copyright symbol. So let me zoom in here and then reload. And you'll see that the parenthetical for copyright, so marginally useful. Or you could copy paste it for instance, if you didn't know So that's an HTML entity, another But having three divs on a page especially for search for screen readers for accessibility. Because at a glance, I don't is the most important. Arguably the footer is like, the least information-bearing So why don't I try to signal as much to the search engine? So it turns out there are what Indeed, we're up to version 5 of HTML. And one of the relatively newer features you can actually use like header and main and even footer. And here, too, the visual to be any different if But there's more semantic So that, again, all of of services, the browser, the just know a little more about the page. And maybe a screen reader now would before reciting all of the fine print in All right. Well, what else could we do here? Well, it would be nice at some point And if I find myself making not one page it's kind of annoying to have to So wouldn't it be nice to Well, I can do that, too. Let me actually go ahead and do this. Let me get rid of this attribute and And honestly, too, as I do this, looks just a little cleaner now. It's more obvious what is a tag and is, metadata and data, if you will. But I've lost all of my styling. But wouldn't it be nice to by doing what I proposed not a style attribute, but a style tag. And indeed, you can put a style where you can put all of And you need a little more But I can say this. If I want to center the I can actually do so by Here the semi-colons are going especially have you multiple properties. Next I'm going to say header. And inside of these large, unlike C, where you could if there's a single line, In the main tag, let's go ahead And then in the footer tag, let's go Now this looks a little worse. Because it just kind of blew But it is a step toward And honestly, when it I'm not the best artist in the world. I can make the data display. But friends of mine are certainly pretty and pixel perfect, so to speak. So it's kind of nice if I can isolate and all of the content to another. Because maybe I could now So if I go back to now functionally, no different still. It still looks exactly the same. But I'm starting to make it And in fact, there's Suppose that I find myself in the habit And honestly, it's to have to type this out for Well, I could create what are It turns out you can but I'm going to choose by prefixing them with And if I want to call even though there's just one, centered, instead. I can write this .large. I can call this .medium. I can call this .small. And what this means now is I kind of like containers whereby it's going to get that one Anywhere I use quote, unquote And so if I scroll down now here, I do but it's a very common one in the So class equals large. Down here I'm going to Down here I'm going to And it's getting a little more verbose, with the actual styles. I'm just kind of having and of abstraction, if you will, on And then for the body, Class equals centered. And if I go back to my web page here and But I've kind of centralized And frankly, I could do I can package up multiple properties, And now that has applied to everything. So I have a reusable set of properties. Even though centered is because it also makes things red. But I can come up with And honestly, one final be let's not assume that my project partner or a it's kind of stupid to Because invariably we're going So I could actually do this. Let me take all of this. And I'll get rid of the red. Let me go ahead and highlight everything I'm going to get rid of But I am going to go into VS Code home.css, just so I know what's what. And in this file, I'm just going to But I'm going to go back And I'm going to add that other tag I and I need one weird attribute, too. The relationship of this link is that And that's just the way it And now one last time, if I reload Because I deleted that. But the font sizes and But what I've done was blocks in this language I going to allow me to now centralize of my web page. All right. Let me pause here and see if there thus far. It's just more key value pairs. Questions on this? No? All right. So here's where things Let me go ahead now and Let me go into a file we created earlier looked a little something like this. And now we can make this web page behave Let me undo the phishing attack and But let me go ahead and start to Previously, this page looked The link was blue originally. But because I visited harvard.edu, by Which is fine, but maybe Maybe we want something that's a So let me do this. Let me go into the head Let me add a style tag herein. And in there, let me style Inside of this anchor tag, And let's go ahead and Let me go back to the And it's going to be a little subtle. But right now it's purple. And now it's definitely red. So I've modified that. Now underlining links is But a lot of websites choose to underline them when you hover over them. So that is an effect we can achieve, But let's at least demonstrate I can specify that this link should Now I would only know that by looked at an online reference. The default is underline. But I can override that by saying none. So if I now go back to my page, But it's now not going to be underlined. But notice if I hover over it, it if I zoom in here. But it's clearly not Because there's another I can say a:hover. And then inside of this CSS, underline when the anchor tag is If I go back to my tab here and But watch as my mouse gets close. It now underlines, as So it's a relatively simple idea. It's not as compelling because it doesn't do anything over the glass of your phone. But it does work on laptops even though it's perhaps a little But there's other ways And in fact, let me go And in this page, let me propose Visit Harvard or a href = Yale's website. So it's getting a little long. So I'm going to hit Enter. Because the browser won't care But at least, now I have If I reload this, you'll are red or crimson, But that's OK. I can actually distinguish One way to do this would attribute that we haven't needed I can use almost any name And I'm going to say, is the unique ID of this link. And the unique ID of this link is And what I can now do up here is I'm Because I don't want all want Harvard tags to be red. So I can say #harvard and then and I can say color: The hash symbol here represents an ID. The dot we saw earlier And when you don't have it represents literally So when I mentioned these type selector is just Class selector is the dot. ID selector is the hash. And there's also ways to So if I go back here in VS Code properties. But if I reload now, one of these should So in short, just by way of these we have a lot more control over how And here's now where And you asked about Bootstrap, There do, indeed, in the real world that a lot of smart people would make our web pages look prettier. And they've come up with make it way easier and way faster pretty looking tables, and the like. And one of these products It's freely available. And you can see its own And what I've done in advance is I've to actually be formatted So let me actually go And I'm going to open up a terminal. And I'm going to cheat and copy a file I And if I open this file, you'll It's a big table that has two And I've added some other tags but I didn't need them before. But in this table, there's a table So there's, like, a and then all of the rest of the And you can probably infer from from this table row, it kind of So if I go back to my browser and open up phonebook0.html, But it is tabular. And notice that the browser has and the number, and But it's not very pretty. But what if I do this? Let me actually go into VS Code here. And let me borrow another file I And that file is going different than the [INAUDIBLE] in that Now I'm not linking to my own CSS. I actually went to getbootstrap.com. I read some of their documentation. And I'm linking now to Bootstrap's really big. And in fact, if I open this file here, and visit this URL here, have written a crazy by defining their own classes And you and I and really is welcome to use all of this CSS. And the documentation makes A normal person would not need to But I've included this file And min just means they got And if I now go back to my other it's the exact same data. But thanks to that link tag, And I didn't have to figure out how I didn't have to figure out I didn't have to figure out how to Bootstrap, wonderfully, Now this is still a very static table. It's not interactive. I can't sort by names So let's revisit one other program And this one is actually a new So if I open up this program, window, you'll see that I've borrowed Let me go to the essence of it. Here is the form and the But I've added a whole And this is the essence of They generally create a whole bunch But they figured out all So for instance, for my I've given it two classes, a and button-light. These are not standard These are Bootstrap names that they and large and medium and small. I've also specified that there are a with pretty much every tag in this file. So if I zoom out here and go and open this, the It was super, super simple because Let me go ahead and And the essence of the Therein is the query at But thanks to CSS, I now have a button It's gray and it's rounded. I also have an I'm feeling lucky button, and show me by default the So in short, the file that I just in advance, it's only 55 lines. And most of that is whitespace. And it did take me a little bit and read the documentation. But most of the work is done or library of CSS classes and properties And so as CSS goes, that's It's just a bunch of more key value whereby you can select elements or classes, or even the names thereof. And here's something Let me go to harvard.edu again. Let me go ahead and open up and draw your attention to one final under the Elements tab. So under the Elements tab that composes harvard.edu as of today. But let me go ahead and expand It turns out you can that is being applied to So for instance, if I go to a Might as well. Let's give them a plug here. Under Give Now, let's see Let's go ahead and highlight this part. Suppose they really want to And I right click on that. I choose inspect, as before. And here now, notice jumped right to the that particular line of text. If I zoom in, it turns It's big and bold. Suppose, though, I want Well, if I go over on the right here, that currently apply And most of these we haven't even talked font, weight, margin top, and a bunch But if I want to experiment, I can And I can literally change that on It's not changing the server. It's just changing my copy. But I can at least make that change. You can do even fancier things you can scroll down and It's white right now. That's the same thing as That's the same thing as But I can click this little arrow and it that white color comes from. So if it's actually my site I and make changes as well. So in short, if you find that you in your own browser that there's so much darn And it's just up to you now to exploring what you can But let us use our final moments today called JavaScript, which is itself And you're about to see kind of new, but kind of familiar. And the goal here is not to but to begin to lay the learning a new language on your own. By the end of CS50, you all that is out there, certainly. And the goal here have a sense with a support or the [INAUDIBLE] involved that you Let's go ahead and do this. In my directory index, I'm going where I've got all of I'm going to go into VS Code's Explorer, And in my source 8 directory, hello version 1 dot HTML. Recall that the last time we played with But here's an example of a And at this page, it's If I open hello 1 dot html in my Let me zoom in. Let me type in my name, for And voila! This is not a very good user interface. But you can see that this web page So how did I get this Well, if I go into VS Code But I've added another attribute, And in the world of you to write a tiny bit of that will be executed whenever So what this is saying is and then return false. And what return false means submit this form to the server, so we can just see a pop up. So what is this greet function? Well, it turns out, there's not only a style tag you but also a script tag, inside The syntax is a little different But it's maybe a little Instead of def last we'll now use function, literally, to And if I want to call this JavaScript comes with a And so if I literally do alert, plus something else, just like in or join the two things left and right. But here's some functionality It turns out, per the notion of you can call allows you to select any of the specifically you can select So CSS and JavaScript If you see hash something, that that you created. If you then, after selecting the want its value, you just do dot value. So we saw dots a lot in Python and You can go inside of that So notice here if I am I using autocomplete I also, for convenience, gave my So what's effectively happening my JavaScript's greet function is goes inside of it and gets its value. And then, using this plus concatenates the two to this alert function for an in the window. All right. How else can we do this? This is generally frowned upon Generally speaking, mixing attributes, rather JavaScript So let me show you even though it's going to But at least it will be representative In hello2.html, we have this code. Notice that at the top of But at the bottom of the So I've just moved it from Because I'm going to If I want to tell the browser to I can use this fairly cryptic syntax, over time as follows. Go into the document. Select with this query the form tag. And then call this special function addEventListener. So tell the browser to listen for a What event do you want to listen for? The submission of the form, What do you want to have happen You want to call this function here. So this is what's known The syntax is a little weird, but It apparently takes an but that's per the documentation. And what these two lines is they still call the alert function. They still output hello comma space. And they still query to get the value that And then just for good measure, for any form with this line of code, submit anything to the server. It keeps the user actually here. This will be a little scarier, In hello3.html, this is actually Whereby you can listen for It turns out when you load a web It's got to be read top It's got to download other files, the forth. If you want to wait until the whole page you can use this event as That tree we drew earlier is what's which is just a fancy way of saying that represents the web page. So this is the syntax that use to tell the browser once the whole then go ahead and execute this code. And it means that no matter what, the before this code is actually executed. And this ensures, for though this script is and my form is at the bottom will get executed until the whole has been read top to All right. Well, let's go ahead and make just to show you some of the within a browser nowadays. So if I open up maybe this And let me open it up in the browser. And this is going to be super But here's a big white viewport, by default. But there's three buttons at top left. And if I click R, it G makes the background green. And B makes the background blue. What's interesting about this as the user interface is, can modify CSS using JavaScript. And HTML, CSS, and very intertwined in the How? Here's the raw HTML. Here are the three buttons. And I've given them three just so I can refer to And notice what I've done here. I've declared a variable uses slightly different Instead of int or char use the keyword let, which me create this variable called body. And this is just how, I can select the body Because I'm going to use What do I want to do For instance, this. I want to go into the element has the unique ID of red. I want to tell the browser to So we saw submit before. You can listen for clicks as well. When the click happens on this button, What does this function do? Something super, super simple-- all it does is it changes the to be, quote, unquote red instead. So what's going on here? We didn't see this earlier. But it turns out in a CSS property called background-color. And I can see it as follows. Let me reload this page. Open the browser's inspector. Open up elements. And if I hover over that there's no background But if I do in, say, lowercase, it immediately changes Unfortunately, in JavaScript, you Why might this be? Yeah? AUDIENCE: [INAUDIBLE]. DAVID MALAN: It thinks Right? So I would wager there was a human JavaScript where they We shouldn't have used a hyphen in CSS. Because it's now going to be operator in JavaScript. So the way the JavaScript world solved as background dash color, you thereof to be camelcase, so to speak, with it's a capital C, no hyphen, And I do this here, as to essentially listen for a so that the end result is that it based on what I'm clicking. And here's where the developer Notice at bottom right here, the CSS of the page at to match whatever is happening. So you can really see and understand there. All right. We have time for a few Back in my day when I learned HTML, still in circulation. Among them was a blink if you used blink and put words in you would get text on your Even uglier was what was called the scroll text across the screen like this. And no self-respecting website tends text in this way. Because it's just tends to be ugly. However, even though the blink ever been removed from the with a bit of JavaScript. So here, for instance, is Here's a super simple page. The only thing in the But there is a script tag up And let's see what's Well, I've defined on line 8 What does it do? Well. I first declare a variable called body. And I get the body element I then ask this question. If the body's styles which we haven't talked unquote, hidden, then change the to be, quote, unquote, visible. Else, if it's not hidden, that is it's And here, too, this is another one of I do not know why the opposite It is, instead, hidden. So, again, arguably poor design, How is this useful? Well, there turns out. In your browser, there's called setinterval that's associated but the window, which is another get automatic access allows you to call a function, and again and again. So if I want my text to blink every I just use window.setinterval to And notice, it's very important not to like in C or Python. Because I don't want to call I just want to inform of the name of the blink function. So I just pass in the name blink. And if I go back to my directory you'll see what I used to see in all the rage, like at the including my own personal My own personal home which is probably findable it was back in the days show people the content of your page. You had to click a Enter page and just really ridiculous. There's a lot of things in tech And the world has learned All right. Let's do a couple of final representative of what and what you and I take for granted For instance, this Case in point, when I and I started searching it was trying to finish my with a bunch of different suggestions. I can actually do that myself Let me open up a file is a file that I made based Recall that we gave you a big list I copied those into But I formatted them in what's So JavaScript has arrays. They're more like Python lists The syntax is square brackets. Let is my keyword to say WORDS, which is all caps because And here is a 100,000 words from All right? Now let me close this file file, autocomplete.html. Let me scroll down to the bottom. And you'll see that in this One, an input, so a text box And then, two, an unordered So there's no actual list items but there is a lot of JavaScript. Here's how I'm including And here's how I'm So let me first show you what this does. Let me go back to my directory I'll zoom in. And if I type in C, I immediately starting with C. If I type CA, it gets filtered further. But we can't see the difference because CAT, the list is changing. CATS, the list is changing. And notice that if I were to gets really interesting is you can Let me delete it. Notice that the UL at But if I type in suddenly CATS, notice are all of the list items that dynamically creating. And indeed, how do I do this? Well, this one's more of a I used a queryselector function I then add a listener to that input, It turns out you can listen or the finger going up. So I'm waiting until the user lifts key up. When it hears that event, It's going to create a variable, a temp unquote nothing. In JavaScript, as an aside, or double quotes for whatever reasons tend to use single quotes. I can then say if that input has in one or more letters, all of the words in the dictionary. And we've not seen of before, of Python's for loop. If that word starts with whatever the that is concatenate to the Then, whatever the word is, using this close the tag. And then lastly, using go into its inner HTML, and change it to be this And so in this way, using and subtract from the HTML in the page. There are so many other events here, dragging, and dropping, and so forth. This is just some of the events that web But we'll do one final one, which and even the implications for privacy. If I go into you can figure out where in the world a nowadays, assuming they've and opted in on their device. Here, albeit cryptically, that comes with browsers It has a geolocation which comes with a function You can then specify or figure out longitude. And all I'm going to do is so I can see this demonstration live. So our very final demonstration is going to be this one here for and how invasive even code can be There are my GPS coordinates, And to confirm as much roughly, paste in those coordinates, click on the Zoom in, in, turn on satellite mode. And in-- and I'm not quite in But I'm presumably close to an access and associates with my GPS coordinates. It's that easy when you actually use to figure out where the user is by like this. So that's it for HTML, In the problem set, you'll One more lecture to go in which But until then we'll see you next time. [MUSIC PLAYING] Buffering, OK. Josh, nice. [INAUDIBLE], oh! [LAUGHING] [INAUDIBLE] No, oh, wait. That was amazing, Josh. Sophie! [LAUGHTER] Amazing. That was perfect. [INAUDIBLE] [LAUGHTER] I think I-- [INAUDIBLE] AUDIENCE: [INAUDIBLE]. DAVID MALAN: Guy. That was amazing. Thank you all. AUDIENCE: Good. [APPLAUSE]