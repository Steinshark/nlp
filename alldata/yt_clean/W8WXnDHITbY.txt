&gt;&gt; Tune in to this week's where we're doing episode 2, and we're going to a Secretless app into Azure [MUSIC] &gt;&gt; Welcome to this week's We're running with episode number 2, and we're going to be talking about Welcome back, Christos. &gt;&gt; It's great to be here. &gt;&gt; Awesome. &gt;&gt; Another exciting &gt;&gt; I know. You're going to tell and why secrets are bad? &gt;&gt; Absolutely. In the first episode, we covered the what and how. Now we're going to look but there's a line I hackers don't break-in, &gt;&gt; I like that. Hackers don't break &gt;&gt; We have done a fantastic job in making committing secrets to GitHub All they had to do is just repositories for information it to make their way into resources. Whether it's through a storage whether it's through VM, username, and password. Once they get their then it's a lot easier for them to break into the rest We want to eliminate that. We're either too lazy about the implications of committing these things &gt;&gt; Absolutely. &gt;&gt; That's what happens Obviously, that's another but that takes too much effort. It's a lot easier to just &gt;&gt; Find those passwords. &gt;&gt; If you know your then you can also find exposed to the world or other JSON Trust me, there's a Please do not scan the Internet. This is like public disclosure. You could be in serious trouble, but the information's out &gt;&gt; Yeah. A lot of companies do get targeted and there are holes there's holes in their code, etc. We need to find ways &gt;&gt; Exactly. &gt;&gt; How can we eliminate it? How do we resolve this? What &gt;&gt; Well, the best thing to hence the Secretless apps. But they need to live somewhere You have connection strings, you have keys to other APIs. This is information that we need to use to make our application run. The best way to do that is to Back in the day, we used to do SQL. We store all our secrets in SQL, but you still have to access SQL somehow, so there's What if we could That's where Key Vault and Azure If you are running anywhere, you can use Azure Active Directory and Key Vault to help Key Vault becomes the focal point for storing all the Azure Active Directory and your application all it Key Vault without having to &gt;&gt; Cool. Can you show &gt;&gt; Absolutely. Let's do a Azure Active Directory the Azure SDK libraries Perfect. Let me switch to my screen. Here I have an app that so I don't have to go through We're going to quickly This is Adobe Everything I show also Python and Node and Go that we have for Azure Azure Identity and the address SDKs are available in What I show here, it's also I have a lot of underlines here Switching branches. Anyway, so here we have two things; one is some settings that I've but I don't want them to be I'm using Key Vault at There is a builder extension for the configuration You'll notice that all I need which is part of the Azure Identity, and a link to my Key Vault. But there is no secret anywhere. &gt;&gt; Awesome. &gt;&gt; You can define how There is a default Azure credential I will try to get secrets from the starting with all the way to using Now obviously on my local machine, I have a mass identity, so and then when I switch to it will use that same token the list of credentials So I always like to because I need to know which account is used when it If it uses my Visual Studio it can have a lot more privileges. We want to eliminate that &gt;&gt; We want to use privileges required to do the task &gt;&gt; Because many developers production systems and they or sometimes own their rights We want to get the all the mass identity in Then this allows us to bootstrap Asynet does this clever thing It populates any it finds in the app settings Then later on I have another page where I want to not a start up, but a runtime. I want to say go and grab my secret. This page here, the Key does exactly the same thing. You will try to authenticate using my Azure Identity credentials This is not the best design. This is mainly for demo. Ideally, we have probably your Key Vault client passing it through dependency But just this is a simple example. Let's run it and see We have similar examples exactly the same principles. Now it's going to use the Hopefully, it hasn't timed out. If it has, we'll do an will pick it up. God, this is slow. Now I can open the The fact that he started we are already connected to Key Vault because he wouldn't he would get an exception Key Vault or the account that you're using does not have Here you can see I'm pulling and then when I jump into my page, which is tiny, has Now I can easily go into my Key Vault and change This is what IT ops will be doing. They will be managing You as a developer what the secrets are You can develop against a and then when you move to production you get the exact same benefits. It can be secret. &gt;&gt; We want to do this environments, our If we have stage changes, ie, Dev test, pre-prod, canary environments, we want to have this &gt;&gt; Exactly. I'm going to change Let's see if you're &gt;&gt; Is it the DevOps Lab? &gt;&gt; Oh, come on. &gt;&gt; Is it April is amazing? Because that would be pretty cool. &gt;&gt; There you go. Lo and Your admins will manage the secrets, you as a developer all which secret do I need to which secret do I need and therefore we eliminate &gt;&gt; Awesome. That's really cool. We know how to deploy we know how to use Key Vault. &gt;&gt; Yes. &gt;&gt; We're good. We've Awesome. Well, thank you, everyone, for joining today. We have learned how to pretty much make our apps which will secure our Tune in next time as about security for developers [MUSIC]