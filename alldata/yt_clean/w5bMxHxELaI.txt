now we will see solved problem number two in subnetting we will start the session with the outcomes upon the completion of the session the learner will be able to outcome number one we will submit the given network based on host requirements outcome number two we will find the number of networks or the number of subnets and outcome number three we will find the number of hosts per network or per subnet let's revisit what are the five steps in submitting these are the five steps i request you to pause this video for a while and go through these five steps i will directly dive into the question now the question is subnet the ip address 196.10.20.0 into 52 hosts in each subnet if you are directly watching problem number 2 without watching solved problem number one i request you to watch solve problem number one first for better understanding so let's start with the step number one we know step number one is identify the class of the ip address and note the default subnet mask in the question it is mentioned as 196. if the first octet in an ip address if it is between 192 and 223 it is obviously classy so here this is a classy ip address and hence the default subnet mask is 255.255.255.0 so step 1 is done step 2 we will convert the default subnet mask into binary when we convert the default subnet mask into binary we will be getting this as the result because 255 means all bits are one in the octet so we have three two five fives so we have all ones in the first three octets and the last octet is zero so we are filling up with zero so step number two is also done we have converted the default subnet mask into binary now let's move on to step number three here we need to know the number of hosts required per subnet and find the subnet generator and the octet position we know the number of host required per subnet is given in the question it is 52 host required so the number of hosts required per subnet is 52. in order to find the subnet generator and the octet position we need to first convert the decimal number 52 into its binary equivalent when we convert that into binary equivalent we'll be getting 1 1 0 1 double zero let's verify that let's bring in a calculator i'm choosing the programmer calculator and let me type 5 2 when we type 5 2 it is the decimal number the decimal number phi 2 its equivalent is in binary it is 0 0 1 1 0 1 0 0. as i already mentioned in the previous lecture that we should not take this leading zeros that is the prefix 0 should be omega so we will be getting 1 1 0 1 0 0 here it is 1 1 0 1 0 0 and that's it so we got the binary equivalent for the number 52 so how many bits are required in binary in order to get this number 52 we need 6 bits compulsorily so without 6 bits in binary we can't get the number 52 so this 6 bits plays a vital role now what we are going to do in order to generate the subnet generator and the octet position first we need to take the subnet mask right it's a class c subnet mask right so i'm just bringing in the subnet mask here and how many zeros we are going to reserve six zeros six zeros means we need to start from the right so it's obviously eight bits are there in the fourth octet anyway we are going to reserve only six zeros we need to reserve six zeros from the right then after reserving the six zeros we need to fill all once in the remaining places so all the remaining places are filled with one so as we already know in a subnet mask if it is a valid subnet mask it should be continuous once if a 0 is started then the 0 should proceed till the last so this is a valid subnet mask now how to find the subnet generator we need to find the decimal place of the first one we are encountering when we move from right to left so this is 2 power 0 1 this is 2 power 1 is 2 this is 2 power 2 4 this is 2 part 3 8 this is 2 part 4 16 this is 2 power 5 32 and this is 2 power 6 which is 64. so the decimal place for the first one which is encountering when we move from right to left so the subnet generator is 64 and where the subnet generator is occurring is it in the first octet no is it in the second octet no is it in the third octet obviously no and it is in the fourth octet so octet position is four step number three is also over now let's move on to step number four the step number four is generate the new subnet mask already we have generated this new subnet mask so what if all bits are won in an octet it's obviously two five five so this is two five five this is two five five this is again two five five and this is 128 because this place is 128 and this place is 64. 128 plus 64 is 192. so the new subnet mask is 255.255.255.192 or it can also be represented in a slash notation how many ones are there in the new subnet mask eight ones here eight ones here and eight ones here so a total of 24 ones in the first three octane 25 26 so there are 26 ones so we can also represent this subnet mask as slash 26 and that's it we are done with step number four as well let's now see step number five where we are going to generate the network ranges which is also called as the subnet so we are going to generate the sub networks or the network ranges the ip address which is given in the question is 196.10.20.0 and we know in which octet position the subnet generator should be applied it is applied on the 4th octet so this is octet number 1 octet two octet three and this is octet four so the first subnet will start with zero and then add the subnet generator to the fourth octet so we'll be getting 196.10.20.64. so we got the first ip address of the second subnet we will again add the 64 to the fourth octet of the second sub network so when we add the subnet generator to this we will be getting 128 so with this when we add the subnet generator will be getting 192. okay so we have generated four sub networks later i will tell you why we are generating only four sub networks so for this ip address which is given in the question we are able to generate only four sub networks if the second subnet is starting with 196.10.20.64 and what about the previous network so the previous network ends with 63 right so the first subnet is 196.10.20.0 to 196.10 and what about the last ip address of the second subnet since the third subnetwork is starting with 128 the previous subnet will be ending with 127. since the fourth sub network is starting with 192 the third subnet ends with 191 and that's it we have generated the network ranges if it is a class c subnet mask it is 255.255.255.0 all of these ip addresses will be belonging to a single network because it will be checking only the first three octets if the first three octets matches in an ip address then obviously they are belonging to a same network in this case it will check 196.10. since all ip addresses are starting with 196 or 10.20 with this subnet mask they are belonging to the same network but with this subnet mask they are not actually belonging to the same network because we have generated a classless subnet mask but coming to the topic i already mentioned you a classful world based ip addresses suppose if we go for classful world in this case we'll be having a maximum of 256 ip addresses possible per network and obviously we are going to use only 254 because the first ip address which is 196.10.20.0 is the network address and 196.10.20.255 is the broadcast address and we have a maximum of 254 usable hosts or usable ip addresses but if we go for this subnet mask it's a classless word we have four sub networks and in each subnet we have a maximum of 64 ip addresses for our requirement in this example we need 52 hosts per sub network right but if we go for class full world will be getting 254 usable ip addresses but our requirement is just 52 so we are going to waste 202 ip addresses but if we go for this classless addressing using subnetting then we are getting 64 ip addresses per sub network and our requirement is 52 and obviously we are going to waste only 12 ip addresses not even 12 the first address and the last address are always reserved right and that's why in one of the previous lectures in the classless addressing i mentioned it doesn't mean classless world will not waste ip addresses but it will waste ip addresses but this wastage will be minimal when compared to the class full addressing so we have generated the network ranges and we have generated the new subnet mask so with this subnet mask 196.10.20.0 to 20.63 will be in one network say 20.64 to 20.127 will be in the other network similarly in the other cases as well so this can be applied to one local area network a total of four local area networks are possible and per local area network we can have a maximum of 64 ip addresses but 62 ip addresses are usable two ip addresses are not used because the first ip address of every subnet is the network address and the last ip address of every subnet is the broadcast address for example if we take the third subnet which is this what is the network address it is 196.10.20.128. and what is the broadcast address of the third subnet it is 196.10.20.191 that's it guys i hope now you know how to submit the given network based on the host requirement we found the number of networks or number of sub networks we get and we also found the number of hosts per sub network i hope you guys enjoyed this lecture and thank you for watching [Music] [Applause] [Music] you