If you already work with data in Excel, and and evaluation using Python, then this is the and he will teach you how to use Python to work draw that. And this is my Python course for Excel move from Excel to Python. That why Python? we will do in Excel, such as working with data, all. We can use all the power of Python and do lots of things. Thanks to the 1000s Python can help you become a better data analyst I divided this Python course for Excel users in the Python core concepts you need to know for data pandas is a Python data analysis library that will in module three, we'll put into practice what we and visualizations such as line plots, bar plots, you will find the files code, as well as a free There, you will find the concepts, methods and I'm Frank, and I will be your instructor To download Anaconda, we go to anaconda.com and option download Anaconda is Tollers. And then we there are Windows, Mac, and Linux. So in my case, 64 bit graphical installer. So now I'm downloaded click on it, and a message will pop up. Do you right now. So just click on Allow and then So I just click Continue and then agree and then Anaconda. In case you're on Windows and you're make sure to check the first box you see now now. Okay, the installation is almost done. And term. And now I'm just going to click on Continue And then we'll see just a summary of what was and I'm going to open Anaconda. So I'm going to you see here. And I'm going to open Anaconda. I'm what was installed. So here we have that you put used in data science. So I'm going to launch Notebook. Let's give it a second. And now we open was installed to and that's it. In the following In this video, I will introduce you to the is an open source web application that allows live code equations, visualizations, for doing data cleaning and transformation. Jupyter Notebook is widely used in data science we installed Jupyter notebook in Python with the have installed some popular libraries used in terms of Jupyter Notebook is Jupiter lab. Both are in this course, because of its simplicity. So we have to click here on the launch button. So I have here the interface of Jupyter Notebook. So Notebook opens the root directory of your where all your Python scripts will be located. In So I click here. And now I can navigate through this example is this one that says my course here, To do that, we click here on the New button. So option that says, python three, there are other but we're not going to use these options And now we have a Python script powered you can see that it says python three, and also can see here the Jupyter Notebook logo, and also change the name of the file by clicking here on let's say, example. So I write example, in I click Alright, now let's navigate through this menu bar So the first option is the file. In here, we can click here, we're going to open a new Jupyter then we have the open and in this case, we can also make a copy to Jupyter Notebook and then file and rename the file as we did before, we only all the progress we make in Jupyter Notebook. you can save all the progress you make by pressing create a checkpoint. And later you can revert to So here you will see many checkpoints and you by default Jupyter Notebook makes saves So there is no need to press Ctrl S every time. So I don't use so much like print this Jupyter file to HTML or PDF and so on. Okay, now And here we can edit all the cells we have here what you see here on the screen is a cell. So we can cat cells, we can copy cells paste cells above shortcuts that we're going to see on the next edit options that you can perform on Jupyter toggle the header, the toolbar and also line the header is going to disappear. And if I click also here and toggle line numbers we can show we can see that it says 123 and so on. And I'm going to leave it with the default original options. So without line numbers, and but you can personalize it as you want. Next in or below, we only click here. And well we're going Then we have the cell options, we can run cells or And then we have the kernel option. And a kernel contained in a notebook document. When we open launched. And we can interrupt this kernel by the execution of our code we can also restart for example, I interrupt the kernel when I line And well you can do the same here with restart or doesn't actually have anything here, widgets I think it will send you to that documentation want. All right here. Then we have the toolbar, menu bar that we've seen before. For example, click here. And as you can see, here, it says checkpoint created and the time that he was insert, cell below sway click here, and as you can use shortcuts, but that I'm going to show you with this button, we can copy a cell with this we can move a cell above or below, for example, I can move it evolve with this button or below, for example, I can write the number one, and the code ran and it shows the number one and well, in the toolbar. And that's everything you need to before finishing this video, I'm going to show the user notebook interface. In here, you can see we are in the Files tab. And we can change to the currently running Jupyter Notebook processes. file we created and that we opened. So you can or that is running, because here the icon will be we can see that this Jupyter Notebook file, which green, so the icon is in green. So this indicates So here we can see that is open, and we can shut this file. For example, here I have the file. file is still running. Here we see running it still shows up. So if we want to shut down are not not books running. And we can see here then we have the clusters tab and this tab I anything here. And then we have the NB Extensions personalize Jupyter Notebook even more, and we're in the next videos. And by the way, this NBA of Jupyter Notebook, but we can easily install extension step in the next videos. Finally, we this folder indicates that root directory. So if click on the folders, Anaconda script and then my that's it. These are all the things you need to in this video, we're gonna see some cell types and going to open that Jupiter notebook file that we example that I p y and b. So we click on it. And In here by default, we have these four sold in mode because here this blue color indicates are in command mode, we can do things outside all the tools we see here in the toolbar, we can we can apply some shortcuts that I'm going to show shortcut window, we press the letter H in command So here You can see all the shortcuts in all the I'm going to close this one. And also you can if you press B in the command mode, you will shortcut that introduces a new cell below. Now, color is going to change to green. So here we have we are in Edit mode. And the edit mode is for context of the cell. For example, introducing say 123. So if I write 123, and then I click And as you can see here, I run this first you can see that we are again in command mode. now we can edit the numbers we introduced. So for here you can see that the output shows 12345, and in edit mode, it won't work here, press enter. And you can see that nothing happens, we don't have you can see that we don't insert any cell below. command mode. So to escape this edit mode, we have now I'm again in command mode. So if I press H, we B, you can see that we inserted a new cell. And we'll see the cell types in Jupyter notebook in And we can see all of them in this drop down here. it says code. But if we press here, you can see convert. So we're gonna see first a code cell, code cell. So now I press here, and now well, it's And here I can introduce any code I want. So here Enter, we can see that here, this is the input going to see how the code cell works throughout markdown cell works in Jupyter Notebook. So here, cell type. So I press here in the drop down. we can introduce any type of text we want. For this and press the hash sign, we can get title. So in now I write title. Now I press Ctrl, enter we got the title. By the way, you shouldn't get behavior of Jupyter Notebook. So mine enumerates will see only the word title. And if you want, you I'm going to insert a new cell with this button cell up with this button here. So I press this code cell to markdown cell. So I go to the you can change the cell type also with shortcuts. Y button to change the code cell. So I press in and this in with square brackets indicates that introduce any code here I introduce numbers and we have an input and an output. So this is a to make this cell a markdown cell. So now So now we can get this markdown cell in here. You anymore. So now I'm going to edit mode so I Go to Edit mode. In order to introduce a subtitle, hash sign twice. Now let's paste in. Now I'm I press Ctrl, Enter, or the run button to And we can also introduce text, I'm going And you can also do it without beat shortcuts. I press B. And here I got this new cell. And now we have this cell in the position we want the cell to markdown. So here, I choose markdown. I can introduce any text. For example, I can write that we have here this text. And finally, the last type of cell is not ever loaded by the notebook cell, this cell won't be emulated by the notebook converted. Now we can see that this looks like a that often, actually, we're going to use only And that's it. In this video, you'll learn the Okay, in this video, we're going to see Notebook. And we're going to start with the F you have to make sure you're in the command make sure that the cell has this blue you can press the letter F, and you're going to allows us to find our word in a cell and then I can write here the word hello. And hello, world sentence. And now I can replace So here, I write Hi, in red, we can see the match. to insert. So here, let's click on Replace all. world anymore. But now it says Hi, world. So now run the cell. So you can press here and run press Control Enter. And now we ran this cell in But in this case, we're going to run an insert Enter a note here, it ran the cell because In here, we can see that we have a new cell. Okay, y and m shortcut. So now this cell is a code we only have to press the M letter, so we markdown cell. And if we press the letter y, also you can change the heading here, you can I'm going to locate the cell A now to make So if we press the number two, we can see that three, the title gets smaller for smaller and the smaller the text. So here I'm going to delete the biggest phone size, which is the title. So in heading one. But if I press number five, and cell has had in five and it's smaller. So now I'm and then Ctrl, enter. Okay, now we can navigate keys on our keyboard. And as you can see here, we can also press with the mouse, we can press on cell above by pressing the A key so if I press a b, we get a new cell below. Now if I press and you can see that the cell was Cat A. Now if we now we got the cell. And if I press Shift plus V, V, and we get this new cell above this cell I have D twice. So impressed the two times. And as you it tried again, and we don't have the title we can Undo those changes. So let's undo what we back. Okay, another useful shortcut is ctrl S, Jupyter Notebook file. So I press Ctrl S, and you going to press again Ctrl S, and here it says and it says these are some of the most common see other shortcuts by pressing the letter H. shortcuts. Or you can also go here to help and the same window. So here you can see a list of mode, you can see the description of a shortcut, One of the typical ways to get started is printing a simple message, you can write any coders to start with a Hello World. So let's try function. The print function prints a message to And then I'm going to open parenthesis, we have to open parenthesis, well, in this case the functions get green color in Jupyter inside these parentheses, I'm going to write the world. So this is our first message. we have to press Ctrl N, Enter, or command and this. And as you can see, here, we have our first is pressing here on the run button is going to So as you can see here, it says in which cell, as we've seen before, one of the advantages print the last object in a code cell without here, I can print this Hello World with without this Hello World message that it's inside quotes. And as you can see, here, we have this message up or not, if you do this in another Python you can write any message you want. Apart from So we write prayer and then parentheses, and we I'm going to tell you about strings a little bit for example, I can write my name. So my I can print also numbers. So I print my age 26. you can also add comments, comments are a useful here, we can use comments. We just have to write hash sign in, then you write the comment. In this say printing my name so we know what our code is also add a comment. So we write hash sign. And can see here, the comments also have a different color for their comments, green color, for this is just a useful functionality most texts Okay, now let's see some data types in an object has different data types. Let's So one of the most common is that the types in But integers are numbers that can be written for example, the number one, number 2345, and so these value or this data type by using function we're going to see so we and we execute, we run this code. And as I n t, which represents integer, so this is an show you is float. Floats are numbers that contain say 1.25 5.4, and so on. So here, we have another actually floats. So we use type, and then that we have float. And just like on Excel, you numbers. So some operations, you can use our and then execute this code, and you get three, you and you run this code and you get three. exponents in more in Python. But now let's see the and it's the Boolean, Boolean are true or false that type function, and we write type. And true. And we run this code and we see that we got we can also write type, and in this case, false, is Boolean. And we're going to use Boolean, fourth data type I want to show you and it's very of characters. And in Python, anything inside a string. So let's see them actually, we already Hello, world. And you're actually familiar with create a string, we have to open either single or double quotes. So you see it now. And now I'm for example, again, hello world. And again, to parentheses, run this code, and we get the STR a string has is methods, we can apply different Excel, for example. However, in Python, we use an object. To call a method, we use the dot methods to change the case of text. So here, going to use some string methods. So write hello method to make this uppercase, so I'm going to need to use the print function because as I told to use the print, because it automatically prints line of code in this cell block, it's going cell. And we have hello world in upper case. So case of the text. In this case, it can be just copy and paste this twice. In here, I'm going and then title. So you can see how it's going and let's see what happens. So as you can because I told you before, it only prints the last we have two options. So we can maybe here cut and each of them. So here, for example, I can do So instead of using more cells, And here, we can print this one too. Actually, we going to print the last line. But just for the of them. So here, I'm gonna run this code. And as the second has lowercase. And the third has a other string method that you can find Python is and actually this one too. And we're going to see it here. And here, I'm going to use the count. So I open single quotes, and I write the letter I'm going to write that l letter. And what to count how many times these l letter is there are two L's, so it should set two times. So there are two in kilo and one in world. So I was can use is the replace method. So we can replace and I'm going to paste it here. And instead So here, the first letter that we're going to So in this case, I'm going to change the L with want to put in that string. So I'm going to use an O appears here in the string, we're going to I run this code. And now it says, Well, hello most common string methods in Python. Okay, now often in Python, which are variables, variables work with data. So variables are useful to manage which is the information associated with a we use that equal sign. So let's create and stored in a variable called message underscore we set it to that is string. I'm learning Python. learning Python. So this is string. We've and we assign this value to the variable this. And as you can see, nothing happens. to the variable message underscore one. Now, if we we only have to type the variable name, and then here. And then we run this code. And as you can inside the variable message underscore one, we sure to sign different names to new variables. So and stored in a variable called message underscore and underscore two, and then we set this equal to open double quotes, and right, and it's fun. this cell. So as we can see, the string was copy and paste this variable here and run this the way, if you're using single quotes, instead probably you have the following issue. and paste it here so you can see what I'm talking single quotes, instead of double quotes. So you when using single quotes. Because in the So a simple way to deal with this is using double quotes, everything is okay. Everything it doesn't happen. So only the i gets this or the string datatype. So just make sure you apostrophes, and that's it. Okay, now, let's put message two, I want to put them together. If we want to put message one, in message two, together, we can use the plus operator. And we can or the variable message one. And now I'm going And I use the plus in the middle to concatenate So run it, let's see what happens. So here, we But here, there isn't a space between these two is the second and there isn't any blank space just add a blank space. So I'm going to copy do it. So here I add a new plus operator in the or double quotes, in this case, I'm going to use I'm going to press a space. And here we have And now let's see. And here as we can see, we have this blank space. And we want we can I'm gonna assign this to a variable called include here below the code in here, I can print see that the message is there. Okay, now let me So this is called the F string, and it works we write a single quotes here. So one and two in red. So it's like everything is a string in here let's say we write a simple Hello World. So hello, this is a string, it just has this F, in front of this f string has is that it can have variables write a variable opening these curly braces. So So here, I can write message, underscore we have this string, I'm learning Python a now our second message, we just have to include I write message two. And between message one And we have this. So I'm learning Python, and pace also appears here. So for example, if we add between Python in between. So this is how f then open single quotes, and inside you can write you have to open these curly braces, write the Okay, now it's time to see a data type I'm talking about this. In Python lists are used list are order and mutable containers. In Python, values, that is, elements within LA's can change that element inside the square brackets separated First, we have to set the name of the list. And now to create the list, we have to open we open square brackets. And here we have in these countries list just strings, and they're I'm going to write the United States. So write the second, we have to use the comment. So India, tomorrow. So now China, and finally as you can see here, these are lists. So we have And we have four strings. And this is how we to run this one. And to see the content, I'm going I include only strings. But keep in mind that So for example, one string and the other And also lists can have duplicated elements. written twice. So here, for example, I can write can have duplicate elements, but I don't want as it is. Okay. Now, if we want to get an element indexing. By indexing, we can obtain an element by which is the position in the list. Python uses so United States has an index zero, the second So element by its index, we need to use the square Let's start by getting the first element. to write the name of the list, in this case in inside square brackets, we have to write the so we write zero to get that first element. we get the first element. So if we write we get India. And if we write countries square with the number three, we get Brazil. So to So let's see what happens. So here print. And and we shall get each element of the list from the we have each of them, United States, the first it's correct. So this is the most common way to this helps us get elements is starting instead of using indexes from zero and above, So let's get the last element of the list. to get the last element which is Brazil. And three. But now we're going to do it with negative and copy and paste it here. And now I open we're going to write minus one. And these minus the last position to Brazil will be minus one, States minus four. And that's how it works. So I'm minus one, and we will get Brazil and we got it. I want to get United States, which is minus 123, this and we got United States, but now using a called as slicing is slicing means accessing parts is slice notation takes the form of a list. and this tart, then this colon and stop this is his top represents that element to stop at without examples. So I'm going to use this country's list I'm going to paste it here. So this is the name we're going to get, let's say, we're going to and let's get from zero to position number two, at three without including these elements in the as you can see, here, we have index zero, index number three, you know, let's say we want just So it's only zero and one no, because it doesn't run, and we got only United States. So now let's elements from index one to the last one. So let's Brazil. So it's one two and three. So we have to three. So let's write here 124 English this is one way to do it. But another leave it as it is and then run the code. And every time you want to get from one position and just leave it without that element. goes for the start. So let's say we want to get we don't include that start element, and we write United States. And then we get India, because this we want to get from the first element, or into the elements, as we did in these two examples. Okay, There are different methods that help us add The first one is called append. And we're going going to write countries just so you can remember. it has four elements. And let's say we want what we can do is just right here, or paste append in here, as you can see is this method. So we want to add to this list. So let's So write Canada. And now we'll run this but it will print the counters list again, we that append method adds a new element at the end what happens if you want to add an element in a method, which is called that insert method. So you know, I'm going to use the Insert method. So I accepts two arguments. The first one is the index. So let's say we want these are the first position. new element do want to add. So in this case, so these, another country, and it's going So let's try I run this one. And again, nothing if I run this country's list, again, we can see pain. It's located in the first position. Unlike This is one of the difference between the append we can specify the position, we want to the element is added at the last join two lists, using the plus operator would use but you can also join two lists. So let me show show you how it works. So my new list is going to include different countries. So in this case, it's Austria. So we have three countries in this new if we want to concatenate these first countries to We can use the plus And then I run this one. And as you can see, And three elements from the second list in putting these two lists inside another list, So here, I'm gonna create a new list, it's In here, I'm going to open square brackets going to write countries, which is my first list, And this is my second list. So as you can the first is a list in the second is the list. called a nested list. So I run this one, and then get here. The first is as first element and the nested lists so often, but you will encounter this So now we're going to say the opposite of an element. So here, I guess, pasted the country to remove some of the elements of this list. So an element from the list. One of them is the we have to first write the name of the list, and and write parentheses in inside here, we have to it's United States. So write United States. apparently, nothing happens. But if all the elements, but United States is not there. was removed. But you can also remove an element pop methods. So I'm going to copy all of this. writing that, remove, I'm gonna write that pop in but its index. So I write the index. In this case, index minus one. And what pop is going to do and then returns this element. So this element is ignore it. So I'm going to come in this one. And to verify we use write countries, and then run, anymore. And that's how you remove an element way to remove an item using an a specific index. del, it's the function del function. And here, we open square brackets in here, write that index. method, we're not going to get the name of the the element. So I run this one. And here, we So countries and that element at index zero was element so we delete it or we remove the first And there you have it three different ways now let's see how to sort a list. We can easily a new list called numbers. And then sorted from I write numbers, and then open square brackets. So four, then three, then 10, then seven, one, and And now to sort it from the smallest to the then open parentheses. And by default, this the largest number. So I run numbers again, in And as you can see, it's from the smallest to the of the SOC method. But we can control how this SOAR method to control the order. So if we want it again, I'm going to create again, the numbers in inside parenthesis, I write the reverse And then I'm gonna print numbers. So here, I get numbers. So here, I'm going to add the s, and here end here, we see that the list is sorted from So as you can see, the default behavior of this control it here, by writing reverse equal to true update values. And always, to update a value on want to update, and then we set it to a new value update the first element of this numbers let's say, 1000. So we write here numbers. the first element has index zero, so we write set it equal to the new value we want to include. And now I'm going to print the numbers, one. And as you can see, here, the number of so the one that's taught with 10. So it's not one we ran. So instead of 10, we replace this one index zero. So with ID, numbers, square bracket Okay, finally, we can make copies of the list we a copy of a list. One of them is that slicing slicing, we have first to write the name of And then we open square brackets, then stop. So in this case, we're not going So if we don't write start in, we don't write let's try this out. I'm going to run this whole list. So the counter sleaze doesn't have made when we added and remove elements. So I'm four original values that are the United States, changes in how we test it out. In as you can see, United States to the last element Brazil, because new underscore list, and we set this what is going to happen This new list is going So I write here new list. And as you can see that counters list. So this is one way how more straightforward, or is it more explicit, again, countries the name of the list, and and then parentheses. So with this, we create And as you can see here, it returns the we're going to create a copy. So here, I'm going So here, we assign this copy to this new list. So And as you can see, here, we have the values original countries list that is here. And So now let's see how dictionaries work in Python. of items used to store data values, and a this is what you will often see in a dictionary. my underscore dict. And to create this dictionary, curly braces in inside, we write our first item in and then our value here, and it's separated with and then the volume. And then we have here the value. So now let's create a dictionary that going to name this dictionary, my underscore data. curly braces. And the first key is going to be is my name. So I'm going to write Frank. So And then I'm going to add a new item. So I write And the second value is going to be my age. So in So as you can see here, the first is a strength, integer. So we can mix different datatypes. code, and we created this dictionary. So now the dictionary we created. So here we can get the underscore data that keys so this is the keys underscore keys. And the values are name and age, So name the first key and age the second key. age. So we just have to use the values method. So writing that keys, I'm going to write that values. my age. So next, I'm going to get the items. So first item. And this is the second item. So we can we can get this by using the items method. So write here that items and then run this one. So key and value, which is my name am well And then the second items so the key name, a new pair of key value in this dictionary we So I write my data in. Let's say we want to add square brackets here. And then we set this to the and then square brackets, then hide inside it, then I run the dictionary, we can see that there column, and then 1.7. This is how you add update this height. So let's say I'm not is to use that update method to update this I can use the update method. So I write update, curly braces to update this new item. So And then I'm going to set the new height, which then let's see the values. So let's see if it was So it's perfect. So now let's see how we can make for the lists. So to make a copy, we just have to it's my underscore data. And then just as we did we write that copy with parentheses, and then we And now I can assign these to a new dictionary. And now, I'm going to copy this one, I'm going And run this. And as you can see, it has the And something I didn't tell you when I make a inside that my underscore data dictionary, so the seen in the new dictionary. So for example, I update this in the old dictionary, so here underscore dict, we can see that after running, And he doesn't change to 1.9. This doesn't happen So let me show you what I'm talking about. So underscore to equal to my data. So this is the So what happens if I run this, and then I, dictionary. So this is 1.9. And if I update this update here, here is one point 95. And if I we can see that the value was updated to to create a new dictionary that works you should use that copy method. And this is Finally, let's see how to remove elements from a we can remove an item in a dictionary. So the pop method. So right, my underscore data, I'm So my underscore data, and I'm gonna So here I can write that key. So in this case, underscore data the key name, so I write And then the pop method returns this value of that key. the list element, in this case, it returns it returns the value. So if we print this my key value is in here. So we successfully remove an item from a dictionary is using the delta that name of the dictionary. So my underscore of the key. So we open square brackets and open remove the H key with its value. So write H, and again, we get the dictionary and we say that the H you can remove all the items in a dictionary with and use that clear with parenthesis. And now if is an empty dictionary, because we removed Now let's see one of the most common statements the if statement is a conditional statement used statements will be executed or not. Here, you can can see, it starts with the if keyword, followed this code here is going to be executed if The code here in the lf it's going to be tested. will be tested. And if this is true, this code then the else block will be tested. And here, code will be executed. So here one little detail So it's sometimes easy to forget, it's there, some people miss is this indentation. So here, the column. So every time you write here column, editors, you're gonna get this indentation. But and you get something like this, you can indent So just press tab, and it's going to indent column and do include an indentation for here and here. So now let's have a look that if statement works. So first, I'm going to to create an variable, you have to write a name of age, and then you have to set it a value. So in going to set this age to the number 18. And now so I write f, h is greater than or equal to 18, executed. So if this is true, I'm going if this person or if the age is equal or greater and adult ng as you can see here, I'm using single going to use double quotes, and everything is fine adult. So if this isn't true, I write else in then you are a kid. So let's see this again. then we print, you're an adult. But if it's here, we run this code English, we'll get this, can see, we get the message, you are an adult. age value. So here, I'm going to set it to 15. So So this is false. And this code is executed. So you are a cape. So we can try this one more time. So 30. And again, 30 is greater than 18. So this a new block, and I'm gonna use the LF. So I write 13. And then column, press enter, and we got this if the H is equal to or greater than 13, we write if it's between 13 and 17, or well, less But if it's less than 13, it's going to be you're And then we get your kit, because it's less than get you're a teenager, because 14 is greater you're an adult, because 20 is greater than 18. Now it's time to see one of the most common loops are used to loop through an iterable object and example of an iterable object is a list. So we can the same action on each element of that list. Here can see, here is the for keyword, and then we have keyword. And then that iterable in this case, as So you have four variable in list. I'm gonna write have to write that column. And then after a have the indentation in the code that will be with a for loop. So to see this much better, I'm so these are the countries list. And I'm going to have to set a variable that is going to be just be called country. So this variable doesn't exist, then we have to write the name of that iterable so for country in countries and then column Then we say print Country. So for this print each element, this is what we're saying in each element of the list country is printed. and printing each element. So the first is the And this is how the for loop works. Now, implement along with a for loop. And it's called In here, I'm going to put this country's list function does is to enumerate each element of the I'm going to add here a new variable, and it's this enumerate will return two elements, the first second one is going to be the element itself. So i variable that I just created here, or I, and then print country. So here, we're going element. So I run Ctrl, enter, and here we get it. the first iteration with each, which is zero, which has one, and so on. So as you zero. So this is how enumerate works, it starts of the loop and the element. And finally, let's use the dictionary we created before that So I'm gonna use the original dictionary. and it's here, so I'm just going to print gonna loop through this dictionary. So let me and then we write the key. And value because one the value, so key and value. So we say, four key So right, my underscore data. In order we have to use the items method, so we write that and we press enter. So here, we can print the and value, and then we run this code, and as and we get the volume, we get name, and we get So this is how you loop through elements or see how functions work. In Python. A function is a you can pass data known as parameters into a And as you can see here, we have first to set then we have to write the name of this function. of the function that we're creating. Then we and every function should return something. So we something like a variable for example. So now def, and then we write the name of the function. simple. It's going to sum the values we pass into values. And as parameters we said a coma B, then is going to do is to add the a plus V values, write x equal to a plus b, as I told you before, function. So we write return. And here, we're that's it. That's how you create a function. nothing happens, but this function was created. call this function, we have to write the name of in this case, it's called arguments when you call one and argument three. So once you call this and is going to set this one equal to A in these and this is four. So x is going to be equal to the value of x, which is four. So this is supposed and we get the value of four. So this function is in functions that Python has. Python has lots a specific task, let's have a look at some we only have to write the word land, and then you better not look gives the green color to the country's lease. So I have here the conscious it inside parentheses. And what the len function iterable object, in this case, a countries list calculate the length of this object. So I run this And this is how the land function works. Now let's to create a new list that contains only numbers. 1063 81, then one there, 99. So this is my new try the max and min function. So the max function and this one returns the item with the highest and we're going to get the highest value of the And as you can see, here, the maximum value and it's going to have the opposite effect. In of this list. So we run and we get one. Okay, type function and this function give us the type this function does, is to return the type of an country's object. And if we run this, we can see because here we created a list with square And finally, the last function we're going returns a sequence of numbers that start So let's see how it works here. So this one this one, I'm going to write one, then the I'm going to write let's say 10. And then this sequence is going to grow by how much so in going to grow by two. So write two. Now I run in same text here, that if we make a loop here, So this is a for loop, we saw this before. And iterating over this range, and we're getting the is one, the second is incremented by two, so one then seven, and then nine. And then we should this sequence stops at 10. So we only get until works in Python. And that's it. Now, you know, Okay, in this video, we're going to see what files that contain Python code, a module can runnable code. And to get access to a module, and to see a module in action, we're going to see so you don't need to install it. So to get access always. And that's it. We only write this in now So the first one that we're going to see is the to that method, we right always, then get C, W, current working directory. So we're going to get located. So this file I'm working with right now. can see, here, I have the path where the Jupyter And you can see it by using the get CWD method. we're gonna list all the elements in the is located. So here, to do that, we're going directory, and I'm going to run it. And as you that is named untitled. As you can see here, elements, you can ignore it, they are not files, but they don't matter. So right now, the only So this is what the list der does. So it lists Notebook file is located. And now let's see the So this method is called make Ders. And we have parentheses, and inside parentheses, we have to So in this case, I'm going to name it New we're going to see that nothing happens. But now elements in my folder, we can see that there is we got before with this new result, we can see is that New Folder element, which is the folder it. Those are some basic things you can do with gonna install different libraries, packages and In this first introduction to pandas, We're going to compare pandas with Excel, and then So first, Pan This is probably the best tool It allows us to clean data wrangle data, make as supercharged Microsoft Excel, because most do it in pandas and vice versa. That said, there before you learn pandas, let me show you why you know Excel. So there are some benefits that So before dedicating time to learning pandas and So first, limitation by size, Excel can handle millions and millions of rows. Another benefit complex data transformation. So in Excel memory Python. When you work with pandas, you can handle Also, Python is good for automation. While you can create a macro or use VBA to However, Python can go beyond that with its Python has cross platform capabilities. This of the operating system or language set on your me explain to view the core concepts of pandas. arrays. So arrays in Python are a data structure array or two dimensional arrays, also known as pandas are series and data frames. So the first a data frame is a two dimensional array. But if you didn't understand so much the show you another definition, this one using Excel. Excel spreadsheet, pandas data frames, just like So there are two axes and one is the row and known as series. So what we seen before this is another name to call the columns in, in a you will see the name of the columns. And on the pandas start with zero. That intersection of simply data. We can store different types of data Right now, you see on the screen, a data frame I'm going to show you the code to create a data data frame. So the column names are also known population, and postal. While each row value is three features and four observations because Keep in mind that a single column should have and postal columns only contains strings. While We might get errors when trying to insert different type of data. So now let's see that So as I mentioned before, in Excel, we work with So the columns in Excel are also known as series often the word columns. And in pandas we worked are on the left. And in pandas, we also say but rows are fine. And finally, in pandas, we a number. And this is the equivalent of an empty for now. In the next video, we're going to learn Welcome back. In this video, we're going to learn So as you might remember, a data frame looks like series. So series are 1d array. And arrays is how to create a data frame with arrays. So these 1d arrays are basically columns, while 2d arrays we use a library name NumPy and NumPy is what we have first to import NumPy. We're going to do give you an idea of what a numpy array looks like, that array to create this data frame that you see You can also use lists, as I'm showing you right option, when you create a data frame with because you're using some kind of lists arrays. a data frame with arrays. But let's see So the second option is dictionaries, you And as you might remember, a dictionary has column name and the value as the data. So many elements inside a list. So a pair of key in this case is going to be a series So this is the second way to create a data frame with code a little bit later. But now let's see files are files that can be open in spreadsheets a data frame because we only need to read the And that's it. So now let's go to Jupyter notebook now we are on Jupyter Notebook. In here, we're And we're going to use the three ways I showed is to import the libraries we're going to use to code. And I already wrote that. So it's here. So So import pandas as PD. PDS is convention to to run this code, just press ctrl enter in our use the first way To create a data frame, so the we have to use a numpy. This is the first short name for NumPy. And then we use the array and inside we write the array we want to create. random numbers just for the sake of this And then let's write, let's say one and four. one is going to be three and six. So each pair each list or percent row. So this is the first is going to be the second row in our data frame. we can name these arrays, and I'm going to name it I'm going to execute this code. And now we have Now let's create a data frame with pandas. So to pandas. In this case, I can write PD, because I So I write PD. And then to create a method. So we write that data frame, and feel some arguments. So the first one, and include in this data frame method is that data data. So first, we include the data. So first, That's the first argument. So you can create this use CTRL. And enter su as you can see, here, it's full of numbers and column names also have to make it more understandable, we can or index, actually, the name of the row names as rows. For example, we, you only need to add And then you have to specify the names you first or this second argument has a form of the first index. So here, zero, so in case another name. So in my case, I'm going to set as row two, and the third as row three. also the column names, we have to use that And then we open square brackets, because it's at case, we have to modify only two elements. So the and the second call two. So I'm going to write frame. So I'm going to set it to a variable, it's the common way to name a data frame. So DFS code now. And as you can see here, it ran. Now and now we have here, the data frame. And as my first my first list, and the second is the serious as we've discussed before. So we have also So now let's quickly see how to create a data So I'm going to copy these line of code, and I'm going to paste this because this is the base delete this, I don't want numpy array anymore, Now, to create a data frame is the same way we So run this, and now I can run the I can write we have the same result, I'm just showing you learning right now. NumPy. Okay, now let's create use lists in this example, and we're going to in this case, to create a dictionary, I'm going name states in the second, it's going to be the each state. So the first list is states, and I'm because this is a list, you know, I write some The second is going to be Texas, let me write it last one, New York. So I quickly write it here. So in this case, going to pay. So in so it pays to the population on each state, you two lists. So I'm gonna write the name of the Underscore states, then this is a dictionary, so And now I'm gonna set the name of the key. and now the element or the value. And the second key and value is population, And the second is the least population that we So I'm gonna run these two. And now we have lists a data frame using the data frame method that we data frame with an array. So to do it, just write inside parenthesis, the name of the dictionary. I'm going to set this to add a new variable. So So data frame about population. So now I run this, data frame correctly. Here is in capital letter. now to show the data frame, I use paste this data frame. And as you can see here, my first in the data inside the state's list is here. and the same goes for population with its data. So Okay, finally, let's create a data frame from file, we have to use the read underscore that stands for pandas. And then we use the method and then we have to write name of this CSV file students performance that CSV and download video. And actually, we can have a look at this have it in Google Sheets. And as you can see here, and writing. And we have some other data. So 1000 rows in pandas. So all of this is going name of this data frame. So here, I'm now Iran, and to show now the first five named head that we're gonna see later. But just to and we get the first five rows. So as you can see, or actually CSV file. And you can see here, for and math score 72. So let's check if that data and math scores 72. So we have all this data all of them, all of the rows here, we can forget Well, here, we cannot see part of the rows. I'm in this course. But now, as you can see, if we the summary of this dataset, or well data frame actually in Python, we usually call these type of read our data set, using what pandas, the so the CSV file, it's a dataset, and this And that's it. These are the three Okay, now it's time to see how to display CSV file we use before to create a data frame. is that this CSV file should be located in the is located. So what I mean by that Jupiter not the, what we're working right now is a Jupyter working right now. So what you have to do is to folder where your Python or your Jupyter Notebook how you're going to read this CSV file using the both the CSV file in the Jupyter Notebook Okay, now, I'm going to run these first two the first input pandas and the second reads this file is stored into these DF underscore let's see how we can see this data frame. So the this name this variable in our pasting here. Now Actually, this is a summary of the data frame scroll down a little bit. We can see here that So here we can see all these rows and the we cannot see the the rows, so it's until four in work with pandas, we don't need to see that data with pandas. But if For some reason, you need to in Excel or in Google Sheets. I'm going to I'm going to show you different ways how we So the first way to do it is using the head have to write the name of the data frame, in this then parenthesis, then we run this, and this is So as you can see, here, we have from row zero five rows. So this is the head method in the same frame by using the tails method. So here, we only in this case, well, the same DF underscore exams, run this, and actually, I think it's tailed. Yeah, got the last five rows, so it's from 995, to 999. And now in case you want to get more rows, so you can add an argument to the either the head the head method as an example. So here, I copied now we want to get the first 10 rows. So we right and I scroll down here, and we can see that the with tail. So here are right tail. And as we So you can specify the number of rows that So now, I'm going to show you how to display all Excel or in Google Sheets. To do so first, we has. So an easy way to get the number of columns attribute. First, we write the name of the data And then to get to this attribute to get access to of the attribute in this case shape. So now we run rows, and the second is the number of columns. So we have to use that set underscore option method. And inside parenthesis, our first argument is underscore rows. So here, we have to specify the number of rows we want it to to have. and we run this. And as you can see here, the default behavior of pandas. So if we want and execute this data frame. I'm going to scroll the rows of this data frame. So I'm going to it says 999 So all dot rows are here displayed. I'm going to show you the different attributes, Welcome back. In this video, we're going to see we can use in pandas. But first, let's learn what associated with an object and they are So to get to an attribute, we have to use the we have a data frame named df and to get columns, it's an attribute. And that's how now we have a function. A function is a group of So we've seen functions before. In Python, we've that gets the maximum value of a list, or main the length of the list. So those are some Python to. And finally, methods are functions which are anything about classes, because it's not the main functions are inside a class. So when the creators And those functions inside some classes are you can see the head method. And we've seen also as a rule of thumb, when we use methods, we have access to attributes, we only write that that it's with that in parentheses, and the attribute So enough talk now let's write some code in the same CSV file we use in the previous video. read this CSV file with a read underscore CSV writing the name of the data frame, so we've seen see some basic attributes, methods and functions some attributes of this data frame. So first, And now let's check. So the first attribute, it's I believe. And to get to the and then we write the name of the attribute. So name of the attributes. The first is the number of that's good, the next attribute, the next as you might expect, we have to write only that And this is how we get the index of this some form of range, arranged, as you might are necessary. The first is the start, And the second is this top, so the last element my data frame starts with zero and, and finishes 1000. And here it increases by one, so 012 and my index attribute. So now let's continue. And So to do so we write the name of the data frame. in this case, column, it has to be written with name of the columns. So as you can see here, we and so on. And we can use this attribute but we'll see that later. And now let's see how To do so we have to use the D types attribute. So and then D types. And this is going to give us the actually from the gender to the test preparation reading score and writing score are integers. So some kind of string. So I'm going to bring this so again. And as we've seen before, from gender as we can see here, all of them are strings. So we And also anything that has a score So that's why we get here integers. So in 64, so data frame. Now, let's review some methods. And as you might know, it's with a hat method. So the name of that data frame. And then we write the this and we obtain the first five rows. So we can using the info method. So here we write the name So here, we have some information about this type here, and also how many rows are non null. So this data frame are non null. So there isn't any if we want to get some basic statistics of a data write the name of the data frame in right describe and we have some basic statistics. So first, each column has. So each of them have 1000 rows, assume each of the data here, that numeric data rows, then the standard deviation, the minimum value was zero, then 25% represents q2 is 50%. In q3 is 75%. Then we have the maximum the maximum score is one candidate, and each of whenever we want to get some basic statistics of that we have in our data frame. Okay, now let's we can use some built in functions that Python the length of a data frame, we only have to write data frame. So we run this, and we obtain that the length of a data frame indicates only the And this is how we obtained the number of rows functions that Python has like the max function, we run. In this case, we didn't get anything, But if we write here, the index and we write this attribute, we're going to get the list we're going to get the maximum or the So we can also get the lowest index of a data of writing the max function, we write min. So in now we can obtain the data type of the data but we can verify that using the type write only the name of the data frame. And we run. data frame. And finally, we can use common write only round. And this has two arguments. and in this case is our data frame. And the points that we want to have. So in this case, And we're not going to get this number of decimal the numerical data we have here, it's integers. effect. But if you have a data frame with float round function. And that's it. These are the most will see often in pandas. Alright, now it's time So here I have the same CSV file we've well, let's import pandas, and let's read this CSV I'm just showing the first five rows. So now to have two options. So let's see the first option. This is the preferred way to select a column in column. So the first one here, so the first thing frame, in this case, DF underscore exams, and then And now we have to write the name of the column. the name of this column, and I'm going to paste it and then the name of the column we enter to run this code. And as we can see, So here we have this in, as you might expect, we discussed before, in previous videos, if this is true, so we can do this with that column this selection. And now what we're going to then open parentheses, and then inside evaluate. So in this case, is this. And now we run and series, just like pandas, data so we can access those attributes and methods. a series in a data frames are very similar. attribute of this series, we only and then write that and the name of the attribute. index in form of a range that starts with that's sure pandas in series is the head by writing that head, and parenthesis. So as of this series. Alright, that's it for the first most people use it because it's the most practical a column from a data frame. So this syntax So let's say we want to get the same gender followed by that and the name of the column quotes. And we don't need the square brackets. So it's here. And probably now you might be thinking But this syntax has some pitfalls. So now, let one column that has two words, for example, This column that has as name math is core. So now to copy this column name. And now scroll down. the name of the data frame. And now the.so. To get to write the column name. So this is the column error. Because Python doesn't work like that. In underscore. So that's how Python understands this, Python will not understand what you're trying so the square brackets doing have this problem. So I'm going to copy it now I'm going to this only dot notation, I'm going to open and then add the quotes. So as you can see here, that this is a string in now, if you delete this without any error. So these one of the bandages and that's it. In this video, we'll learn how in the next one, we're going to learn how to Okay, in this video, we're going to learn data frame. So as usual, we're going to start we've been using so far. So we execute these two So what we're going to do in this video is to So first, let's pick some columns. So I'm one score column. So to select these two columns, we in this case, we have to use two square So to do this, we have to write first the name And now we open square brackets, so we write square brackets. In inside, we have to write we said that we wanted the gender column, so we was that math score. So I open these quotes, two columns. And by the way, the order that we're going to get that data frame, I mean, we square bracket. So here, we're saying that it should be the math score column. So now, let's first the gender column in second math score and there are 999 rows. So now, we can verify that function. So let's check if this selection is in here. Let's check out the data type of this type function, we open this parenthesis, and now we get that this is a data frame. So here one we use these two square brackets, or two pairs a Data Frame. But when we use only single pair of we get a series. So one pair of square brackets it's for a data frame. Okay, now to select two or more columns using these two pairs columns that we're gonna get. So in this and all the scores that we have here. So the So to do so first, I'm going to copy this first And now I'm going to paste it here. So here, two remaining columns. So here, an easy way to, in the data frame in here, we can paste it. So it here. Now I delete and I put it inside quotes. So here, as I said, before, we can change the here, I cat, this, and let's say we want to here, I paste writing score. And now what then raw writing score column, and then the math run this code. And as you can see, here, we have Okay, now, you might be thinking, if there is that sign, so let's check if that's possible. the gender in the math score column using the dot here, this doesn't look right, because it but you don't have a list, you have square let's check, I'm going to run this code. syntax. So it's a syntax error. So as you can that sign. And this is one of the disadvantages This is why most people prefer to use the square it for this video. In this video, we learn how Okay, in this video, we'll see different ways the same students performance data frame. And as math score, reading score, and writing score. So case, let's add our language score. So to add a or Microsoft, Excel, will simply insert a we have to use different methods, or different So let's see how to do it here. So first, So a scalar value is simply a single value. And single value, so all the rows is going to have the select this imaginary column because this column is to select a column, as we will do with any the data frame, in this case, DF underscore exams. as we will do in any column. So here, instead of this. Instead of selecting math score, we have to So in this case, let's write language score. So we have to assign to this new column, we have In this case, I'm going to add a value of 70. that nothing happens that if we now show the a new column and this column is name, language the same value. So it's 70, in all its rows, so we're gonna see that it's 70 in older rows, so exam, you will have all the students with the same different values to this column. So to do we have to use NumPy. So here in the second way to this case, we have first to see how many rows this And this is important because the number of we're going to create. So let's create this array. NumPy as NP. So we run this code. And now an array of 1000 elements. And to do so we're written like this, our range. And this gives first argument, and that I'm going to write it's going to be 1000. So these are the And as you can see, here, it starts with zero range, we have to use the length function. So the rate has 1000 elements. So now I'm going to name this variable language score. So language I was planning to see the length of this array. So you know, we count the length of the array. So with this array. And to do that, we have only write the name of the data frame. And then we make with the new column Well, in this case is not imagine it's a new column. So it's language score. So we write language score here, and we set it we only show this data frame. And as we can see, starts with zero, and it ends with 999. but now has a range of values, you know, there So it's course are supposed to be between zero also here we have a sequence of numbers, so it's And usually in scores, you will see that students an array with random numbers. And to do that, we a different method. In this case, the method is here. np dot random that ran. And then i NT. So random numbers. And by the way, these are random integer numbers. And in this case, I'm going is the highest number or value in these random And the third argument is the size. In this so we set the size to 1000. Now we execute rate again. I'm just going to check that it has in here we have 1000 elements. So now let's create here, this is going to be i n t, and then language new variable. So here one little detail you should the last one is exclusive. So this means that if this new array, we're going to get that minimum inclusive, which means that it can be included the maximum value of this array, we're going to exclusive, which means that this second argument finally, let's insert these random integer we have to just use the same way we did before. instead of assigning this language language underscore score. So here, I'm going we have this, the same column. And random integer numbers from the rows zero to like a scores like real scores, because these are And that's it. Now, one more little detail random float numbers, because before we created do want to create random float numbers, So we only write in ping, then that random, So the minimum value and then the maximum value, and well, it's similar to the one we got before. this video, we'll learn different ways Alright, now it's time to see some operations we same data frame DF underscore exams. And here we columns like math score, reading score, and in pandas. So first, we're going to see how to to calculate the total sum of a column. So let's sum of this column. So to do that, we have first to select a column first, we have to write the underscore exams, then we open square brackets then we have to write the name of the column. This is the column we want to select. And now operations. So in this case, I want to calculate use the sum method. So we write that sum in total sum of this column. So to verify this, And this is the total sum of this math column. will do in Excel, for example, we can calculate So here, we can easily do that. I'm just going sum method, we write count. So here count and this is correct because these data Has 1000 math score column, we have to copy this one, now to write mean. And here we got the average value we have to sum all the rows in this math score rows, in this case 1000. And this is how you other operations using the method. So here, for writing STD. So we execute this, and the standard we can get also the maximum and minimum volume. and then the main value, you can actually do it do it with methods. So here I ran in as you can is zero, and the maximum is 100. Okay, now I'm calculations. Using that is quite method. I think but in case you don't remember it, I'm going to the name of the data frame with, we don't need the of the data frame. And now we can use the describe Now we got like a summary table with some the account that mean the standard deviation, see here, we get all of this with one method. operations in columns, we're going to learn how to let's say, the sum of the math score, reading make some selections. And in this case, we have to I'm going to copy the name of these three Now we have our math score, reading delete that sign. And now we have to make some name of that data frame. So DF exams. Now to make So now, let me do this quickly in the orders. let me do it here too. And now it's ready. in order to make to calculate the sum in a the plus operator, we have to write it here some in each row. So to verify this, we run this the scores column. So here, let's verify fast plus 74. So 72 with 72 is 144. And with 74 is let's do something else. So now instead of just columns, what we're going to do is to calculate let me copy this in here, we're going to calculate by three. So this is how we calculate the score. To do so we only write equal in them. As we have to add a new column by writing writing the name of the data frame, and then brackets, then open quotes in here we write So this is same as we did in previous lessons I'm going to name this new column as in our to verify that this new column was created. in here is our data frame. So now, in the last average, it has the average value of this math we can control the number of decimals, we can of decimals we want to get. So in this case, I can see, here, our data frame looks much better, In this video, we'll learn different ways to make Alright, now let's have a look at the value counts number of rows in a data frame. So for example, if column, we either use the length function, so we data frame. And we only have to write the this gives us the number of rows. And we can also we get the number of rows that what if we want to or male? What if we want to know how many female column. So this is when the value counts comes category of the column. So to use this method, followed by the column that we want to count. So have to use the value underscore counts method, And as you can see, here, we have not only that divided by category. So we have that there is 518 is spread in the gender column to now we can do the percentage that each category represents in in now to calculate the percentages, also known name normalize. So we write normalize, as we can see here, female represent 51% of while male only represents 48% of the total value count method is useful when you want now let's see another example. And in this case, to choose this parent table level of education let's count the elements by category. So here, the exams. You know, I open square column. Now to count the elements by category in method. So we run this code. In here you can see people have some college level of education, while if we want to get the percentages that represent arguments. So we write normalize equal to true So we can see the percentages If we want to method. So we write that round parentheses we round it to two decimals. And that's it. Now Okay, in this video, we're going using the sword underscore values method. First, been working with in this tutorial. And now data frame, as you might remember, it's, it has to swirl it using one of these columns. So let's I'm going to write the name of the data frame, sword underscore values. Now I open parentheses. see, the only mandatory argument is by so we can the name of the column we want to sort by. math score. So I'm choosing this numerical column actually, I'm going to copy this one, and paste frame is as simple as that. Now, we can run this sort ascending by default. So it starts with So this is how the source and the score values you don't need to specify the byte word, we can it still works. So here we can modify that default we only have to add a new argument in is that going to copy this one first, and show you here. by the same column, so we only write, comma, write a sending equal to, and here, I want to your the sending is set to true by default, but we can change this default behavior by setting going to do here ascending equal to false, so it and as you can see here is sort descending by the And it ends with zero. But that's not all, we can So first, I'm going to show you here how to copy and paste these one. So in this case, we're So instead of writing only math score, we're going reading score column. So here, I copy this one. we have to add the square brackets, write two or more columns, we need the square this written score. Now I add quotes. And that's by multiple columns. Now I'm going to run this first by the math score column, and then by are set here in the list that we include here. and the second priority is the reading score Now I'm going to show you a little detail here. print this one, you can see that the changes we column has the original values. This happens like many other pandas method on Create a copy of one is a copy, but it doesn't update the values which is the in place argument. So I'm going to tf underscore examples. And now I'm going the values of this data frame. So here, I'm going going to add a new argument, which is the in equal to, and now I'm going to show the default value of employees is false. but only create a copy that if we set it to I'm going to set it to true to update the data in apparently nothing happens. But if now we we're going to see that we have that data frame place argument. And you want to update the values we used before, which is overwriting the values delete that input argument and write df underscore values. But in this case, we're not going to do as you can see here, finally, we're gonna see how text. So as you can see, here, we before a sort one has this numerical data. But in this case, which has this text, so we're gonna sort group one, and then Group B, C, D, and so on. And first, we have to write the name of the values method. And now specify the name of the here, let me copy here, and it's done. Now I ascending to true, I know that new argument So add key, then equal to in this case, we're you're familiar with the lambda function. But it before in the Python Crash Course. But in this So let me show you here. First, you have to use now we should write the object that is supposed to that stands for column. And then we have to write make over this variable. So in this and then access that a string attributes. So I So what we're saying here is get the string values So here, we get that textual data in we're saying, sort the values inside the race, sort the textual data of this column in lowercase. but we're going to get it in lowercase and sorted And let's see the results. So as you can see and it's order ascending. So here, we got the These are the different ways to store a data Welcome back. In this video, we're going to you're an Excel user, probably you In pandas, we can also make pivot tables. And the pivot method and pivot underscore table the difference between the two of them. So So the pivot method, reshapes data based on aggregation. So this means that this is not the you can only reshape data with a pivot method, and what the pivot method does, I'm going to show you And this one has six rows and four columns. As For example, in a column foo, that one value is the two value also in the column bar, you So when we have this type of data frame, we can a better analysis. In this case, we can use the you only have to write the name of the and then specify three arguments. So the first reshape this data frame to send that column will be in the position where is right now Next, you have to define that column. So these in our new data frame, the one that we're going to inside the bar column as new columns. This means data frame. And finally, we have to choose the So in this case, I'm choosing the best column. in our new data frame. So this is the column you the result of this pivot method. So here foo in the index, as I told you before, and A, our columns in this new data frame, also all the that is displayed in this reshaped data frame. And is here, two is here, three is here, and so on. So the column. So between one index one, and column the, our previous data frame for the original data A, and the value that corresponds to that pair For example, five, here, we have two in B. we have that two and B, the value that corresponds is here. And that's how this new data we have the pivot underscore table method. pivot table. So this is similar to the pivot table And this one supports data aggregation and explain as well as the pivot method. We're going to see we're going to write some code so you can Alright, now it's time to say how the pivot method we import pandas as PD. So here, I import this data set to work with this peel method. So to read method. And inside parentheses, we write the that CSV that you can find in the notes of this have a look, I'm going to run this one. And as you that is in this column. And basically, this is So here, I'm gonna tell you, which are the So first, we're going to use the Country column then we're going to use that year column that per capita, that it's in this column. So is to obtain a different view of our original here with pandas has this view that we want to So the goal of this exercise is to see the for each country. And then we're going to put data we're going to show in our new data frame is So I want to show you now this with code, and a variable to this data frame. So here, I'm going of my data frame. And now I'm going to show data frame. And to use the pivot method, that pivot, now, we open parentheses. And now we have to introduce three different arguments. arguments, we have to introduce here, you can only and you will get this. And here, you can see So first, we have to write that index argument. I want the year column to be the index of my new year as the index of my new data frame. So right and tap to show this. So the second argument is open quotes. So here, as I told you before, I want I want each country to be an independent column. United States. So I want the United States to China, then Australia, then Spain, and so on. So So that's what we want. And to get that we have argument. So here, country, and that's it. Now, And now the third argument is values. So here, And here, the only data I want to show here per capita, which is the one that is here. And So remember, our goal. Our goal is to over the years for all the countries listed here this code and let's see the result. So here Ctrl, view of this data frame in It looks much better, evolution over the years for each country. So here we have the index year. And here we have columns should be country. And now we have each the values are the GDP per capita. And yeah, and a column is our value that corresponds to so everything is working fine. And there you have Okay, now let's see how the pivot underscore we're going to work with a different data method PD rate underscore Excel, because in but an Excel file. So we use rate underscore the name of this dataset is super market we're going to see after you run this. And columns about what specific person bought in a the city, the gender and different data. So here this data frame, and I'm going to name it DF And okay, now it's here. Okay, the goal of this their money in this supermarket. So to do method in pandas. So first, I'm going to copy this And now we're going to make a pivot table and the pivot underscore table method allows us method doesn't support that. So we're gonna And now we're gonna introduce some important in this case, if we want to see how much the index is going to be the gender. So here, I'm here, index equal to gender. So this is the first be the aggregate function. So we have to write then write the aggregate function we want a sum. So we write, sum, and now everything is the information about the sales here in So we have the female category, and then the to run this one. And as you can see, here, and now it's divided by gender. So we can see how and also how much male is panned. Also in the we can see how many products they bought, how supermarket. And one detail you might have numerical data are displayed here. So for only tax aren't here in this pivot table, we indicated that we want to sum and when we sum data, so only the columns that have numerical Okay. That's our first pivot table. And we can do columns that we're interested in. So let's say we So we want only those columns. So we can get that, get only those two columns, I'm going to add in this case, the name of the argument is I'm going to select the quantity and the total going to select two or more columns. In inside, I right here, and then total. So here, too, so we're case, only the quantity and the total columns going to execute this one in here, I get an error, going to add it here. And now everything should be only the quantity and total columns are displayed spent more than male in this supermarket. we know that female is paying 167,000 In we can even know in which product lines, we can see how the money is spent in this a new argument to this pivot table method. So And now I'm going to paste it here. And how much male and female spent in each category or this one is going to be the columns argument. So I in here, I write the name of this column, that is and then we're gonna see in which category he and so on. So now I scroll down in here, I paste want to display that total, because we only want only total, so I delete the square brackets to and divided by gender. So here, I run, because it's how much female in males pant in each product female is spent more money on fashion accessories in sports, women is pant, or female as pant more by using the pivot underscore table method in you will find in Excel. And that's it. That's before showing you how to make visualizations set. And also we have to make a pivot table. So So first, we have to import pandas to read this as PD. So we just run this code. And now let's to read a CSV file, we have to use the read underscore CSV. And then we write the name of the And I'm going to use this population underscore name. So we have now the name. And now I'm going is going to be DF underscore population. And we're gonna have a first look at this dataset. So And now we have this data frame. So here, as countries throughout the years. So for example, So we have their population, and Kira wrote the some web scraping techniques. And then it wasn't to reshape this data frame. So we make it easy So what we have to do here is to make people what we're gonna do here below. So we're gonna pivot method. So as you might remember, the organized by given index column values. But it's want. So we only want to reshape this data frame. So we do that by writing the name of the data and I paste it here. And now to drop any method, so I write drop in a, and then we have the result, it's a copy from this data make to that data frame, we have two options. argument. So I write in place, and then set this changes that we make to the data frame are going something like this to overwrite the content this, we write df underscore population underscore in a so we're overwriting the content inside this just to reduce some code. So I write in place frame shouldn't have any new values. Okay, now I'm going to show you what I'm going to do. So So here we have the original data frame. And what So I want the year to be in that index. So the index instead of 01, and so on. And then the values inside the country column, I want it China here in one column, then United States in In I want the population data inside the data, I we have to use the pivot method. And that's what So first, we have to write the name of the data pivot, then we open parentheses in here. Let's see press shift and tap. To get this helpful. Let's that this pivot method accepts. So first is the I told you before, the index, I want it to be the open quotes and I write in year, then comma, and is the columns. So I want the columns to be the So here I write columns. Then I open quotes in one, I think, is values. And yeah, its values. So let me see if that's correct. And yeah, it's here. so it looks much better. In our population, it's the columns and the values. Now, I'm going press Ctrl, Enter. Now, as you can see, here, we many countries. It's from the first country, and many other countries. So we have also to 2020. So we can see here the evolution all the countries in this dataset. But as you can here is to select just some countries. So in pandas. So here, I'm going to select some new data frame, I'm going to give it a name. So this is my new data frame. Now I'm going to So now I'm going to run this. And now let's frame. And now we open square brackets, double And here, let's write some countries, the then China, to more countries, Indonesia. we have the five countries. So I run here in we 1855 to 2020. So great. Now we simplify this data inside that data frame DF underscore pivot. And pivot and with the selection, so I'm overwriting DF underscore pivot is here. So we have it here. our new DF underscore pivot data frame. And use it to make free visualizations with pandas. Okay, now it's time to make some visualizations we created. This is the pivot table we created we have five countries in the columns. In here So what we're going to do now is to make our and the first one is going to be line plots. I'm gonna copy the name of the data frame, and I we have to use their plot method. So we And one necessary argument we need to introduce now equal to, and here I have to write the kind of plot. So we write line. And this is actually the now we can run this code so I press Ctrl N As you line plot, we can quickly see the evolution of China and India, which are green and orange while the United States, Indonesia and also, the population didn't change so much in the this plot method to customize this line plot. which is the x label. And this x label is what line plot, by default, it was assigned this year let's say we have, we want to write year, but here. And now let's say we want to add a new label y label, and then equal to open quotes. And in this case, I'm going to write only population. add any title we want. In this case, I'm going to then equal to, and then the name of the title and to 2020. So this is the title. So let's run population 1955 to 2020. And the x label and y argument in this case, the argument is the size of we can add the argument name, fixed size, and And now to edit the size, we have to add two and the second the size of the Y axis. So in this which means that the x axis is going to be here, I'm going to run this code, and let's check And that's how you can customize this line plot. So the first thing we have to do is to select years one year, and we can plot their their one year of this data frame we have before. So I'm can check it out again. So this is the data frame, we have to use the index attribute. And then that the index method, in case you don't remember. attribute allows us to see all the index in this So that's what the index attribute does. And out some inks. So here, let's say we want You know, here, I write equal to, and So it's here. And now I'm going to show you what's and the result is this little data frame that So this is important because the bar plot is So here we have it. And now what we're going to do equal to. And then let's give it a name. So I'm 2020. So here, I press Ctrl, Enter. And now I'm here, and here, one little detail, I have to tell text data in the index. So here, the name of the we have to use the transpose method. So this and vice versa. So here, we can easily do that by you know, that T. So if now we run this code, year 2020 is in the column and not in the index So this is the format we need to have before the content in this data frame. So I write df same data frame, but that T. So here, I run this, I copy the name of the bar plot, you know, I open parentheses. And the first argument is So now it's ready. And we can run it. So as you default values, like the name of this x label. customize this bar plot a bit more, for example, argument and then open these quotes. And let's also, we can change the X and Y label. Actually, I So x label and wire label are here. And let's I can add also the title, which was here. So I a bit different, because in this case is not from only 2020. And now let's run this to see the the x and y label, and bar plot is in orange. So so far, so good. Now let's go one step further here, we have to select a group of years to make going to copy this code we use before to select this case, I'm not going to select only one year, Instead of choosing only 2020. I'm going to easily understand. So instead of choosing only so I'm going to delete this. And I'm going to then 2020 10. In well finally 2020. So we have using the index and is in method. So here, In this case, since it's a sample, I'm going to Now I'm going to first I'm going to show you So now we have five countries, no five years. So So DF underscore p with underscore sample, I So It's time to make these grouped bar plot. and then the plot method. So write that plot, you and equal to bar. Now we run this. And or the bar plots grouped by year. So here's the same arguments we added here. So for example, I'm gonna do it fast. So here, I run. we modify the X and Y label. And that's it. Okay, in this video, we're going to learn make intenders in actually any other visualization this pie chart, first, let's give a look In this case, to make a pie chart, we're making the bar plot because it follows the same we created for the bar plot, which is this one, what we created before by using that index I'm going to copy this. And now I'm going to show data frame. And it's here. So here, as you can are in the index. So everything is fine. That's the pie chart. But there is one little thing because now it's 2020. In this is a number, it's good practice to have numbers in columns. So And to do that, we use that rename method. So we the columns argument, so we write columns, then name of the column we want to change, which value into a string. So we open quotes and but the green one is an integer, and red one is I'm going to write in place equal to true. And here, I'm going to write the name of the data So here I write that plot. So the first argument a now I run this in here, I forgot to include So the y argument is supposed to have the data. the data frame. So the data is here in 2020. So this. And here in the Y argument, you write the So now I run this. And now we finally have that's how you make a pie chart. If you want you example here. I can say that this is a population so write this in our we have this title. So Alright, so far, we made a pivot table in we're gonna learn how to export the pivot table in by exporting the plots we made with pandas and to we write import Math plot lip, that pie plot, and matplotlib.pi plot. So now we run, and we to save the plot. So we write PLT dot save fic. write the name of the file, we want to export. that png. So this is the extension. And this is this file, I'm going to show you something make the plot with pandas, we get these words So we can get rid of these words by using the parentheses. And if we run this, we're going to rid of these words. So let's try to run this. And And also we exported the figure to a PNG file. And where you have this Jupyter Notebook file. Okay, going to export the pivot table. So here, I copy In order to export it, we have to use that to And now I open parenthesis here, we write the this pivot table. So in this case, I'm going So this is the extension of Excel. And this is now the Pivot Table shall be exported. Alright, file we created. So it's here, and here we have So as you can see here, the plot looks exactly And the pivot table is the same. So I'm going here is the pivot table in here is the pivot table exactly the same. And that's it in this video to