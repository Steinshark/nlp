Selenium is a portable framework for testing teaches this Selenium course. He has created many and his own channel. Hi, everyone, and where we will learn how to create user interface used. And it is very popular for a great reason. web applications. And it can also help you So in this series, we are going to learn how to will learn how to create an online bot that will And this series is really going to include some button and as well as click the bell notification. series. So grab a cup of coffee, and let's get we need to understand that there are going to going to assume that you have Python installed. is configured properly with Python. Now you can but just make sure that it is connected And if you don't have any of those, then you can with the installations. Alright, so like a lot we need to somehow use the library of scillonian. computer. And we can do that with the PIP then you should also have the PIP package manager open our terminal here. And I'm going to say pip the system interpreter, because I'm not going to So that's why I could allow myself to do that then it means that everything is great. And we can library and see how we can use it. Alright, import WebDriver. So I'm importing something very there's a great reason for doing that. Now, when in web browsers, then we need to somehow open up a dedicated library that is going to automate when we talk about performing automations on a web browser out there, there is going to be a version automated tasks. So for example, if we want to then we need to instantiate the chrome driver So that's why we need to import that library. then we have to instantiate the library that Chrome browser to us. So that's why I'm going driver is equal to WebDriver dot Chrome, like more options rather than Chrome. So if I delete see that we also got Firefox. And I believe that can perform those automated actions in different I'm going to use Chrome browser. So that's why I like that. Now, we could go ahead and try to the arrows are going to talk about something that my computer. And as well as it is not in the tat. steps that we need to do. So first of them, we chrome driver is a separated executable file that actions in a Chrome browser. So that means that we to our computer. So that's why I'm going to bring in the description for sure. And as you can see, driver, and if we scroll down, then you can see that you can download. Now, you might ask yourself installed on my computer? Well, this depends now installed on your computer. So if you then what we can do is basically go to a separate two forward slashes, and then say, version. like the following. And as you can see from use. And as you can see, we have the major version or even 84. But you need to make sure that to the version that you are going to download from to go back now to that page. And I'm going to And that's why I'm going to click here. And right archive that I need. And for sure it is going to of my machine. And I'm going to click here and have this downloaded, then we need to extract it as you probably know, in Windows, by default, the download library. And you want to move this to a So for myself, it is going to be under the C drivers, as you can see in the left side of my move this to the folder that I'd like to have it. let's go ahead and work with this follow now. C Selenium drivers like that. And you can again, invite up to that I'm going to extract the then you can see that we got the executable file to solving our problems that we have when we try Python. Now, if we will try to execute this file And this is because we did not perform the second And we need to now put the location of our is called a path. Now the PATH environment files that your system should look up for when terminal. So that's why it should be inside the this in the system level. But that is actually perform the Selenium project on another server. So in the code level and not in the system level is going to say up top here, something like import the already existing PATH environment variable. So And then I'm going to look up for the key of capitalized like I did. And now we'd like to use already existing pad, we could have multiple right here, we want to specify the location of C, colon and Ford slash. So I'm pointing to the C selenium drivers like that, because this is Alright, so right after we have done this, then we quotes. And this is actually a convention for a and it is going to be helpful when you specify to try to execute this program, then we should see is happening. So it means that now we are ready to on a random website. Alright, so now that we let's try to perform some automation on a random start by a testing Selenium website which will get started with it. So I'm going to use this this URL in here, which I will put the link of click on that start download, performing it with that, then we should somehow identify that the kinds of actions are good candidates for actions really being involved in clicking manually on So first of First, we should understand how we to click on. And in order to do something like we can click on Inspect like the following. Now is going to have its unique HTML architecture. by each type. And as well as with some additional I'm going to say inspect. And as you can see, we the kind of this element is button because we why it is called a button HTML element. And as you Id like that. So what we can do from here is of download button, like it says in here. So this specific element, and try to click on that. I do that, let me copy the link of the website, All right, so now if I open pi charm, and go down, code. Now before everything, we need to specify use in our automation, so it should be done with So I will say driver dot get. And as you can see, put the link of the URL that we actually look to this is the way that the driver dot get should be then we should somehow tell the Selenium that eats ID is download button. So I'm going underscore by ID. And as you can see, we have class name, CSS selector, and even more like name. the future throughout the series. But let's download button, like the following. Now since object that we can actually do some additional variable. So I can say my element, something like that click like that. And we should see Selenium test this out. So I'm going to execute that right let's see that in action. Alright, so it takes us click on that element, because we see the download has been completed. But there approach. Because sometimes, in most of the cases, that's why we can go between those two lines, and action on an element. So that's why going between that implicitly wait. And here, we should specify this website, it's all being loaded successfully. three seconds, so it's considered as a better our browser being a little bit slow sometimes. server could be very slow. So that's why waiting a So now if we run our program one more time, the page is being loaded. Then as you can see it this is just a simulation, this really doesn't so let's identify what happened in here. So first not wait three seconds. So what that means it special to our driver object, because we did try to test this with 30 seconds now. So I'm going just in a second, it sounds to download it the amount of time that is specified in this saw the actions being taken immediately. Well, sleep, and specify the amount of seconds to to do here. Because sometimes we don't like in case the element is going to be found before next line of code execution. And so using here, Because again, we don't feel the need to wait 30 web page. Now, to be fair, there are more things because it has some more functionalities have any questions about the behavior of this comment section down below. Alright, so before then let's clear some important points about we know that this is much more efficient, because not always we'd like to wait 30 seconds, But there is one piece of information that we be set up as a timeout across all your scillonian only need to call this implicitly await method implicit wait amount for all the elements that for example, I might go down here and say that to be equal to driver dot find element by ID. even existing in the page in the left side. So I randomly. And then I can basically try to execute decrease this to eight seconds. So we won't really crashed. Okay, so if we run this one more time, we have no problem with the first element. But in that the Selenium was not able to identify actually an important point to remember. Because be basically applied across all the elements that future. All right, so now that we completely let's go forward with our automation. So now as if the download has been completed successfully. like this, we need to understand when this complete with an exclamation mark. So let's try select everything in here and try to click on it did not really point to it. Okay, so we can is coming from this HTML element, which says us progress label. Now till this point, we did by its class name. And there is actually a a method with the prefix of find element. So this line actually, and I will stick with element is equal to driver dot find element, by class name. So we cannot identify an element select that. And I only need to now progress dash label as we saw earlier. Now, for web world, it is basically a reference to a filing classes where we use it for object oriented that we don't confuse between the meanings of then I can go to a new line. And I can say here, string. And I can try to basically print the text and it showed that display as the text in here. let's test the result of that. Okay, so we have it immediately showed the text of this element, immediately is actually not a great idea, until we see the complete. But there is actually we have learned till this point. So we need to use that exists in selenium, which is called explicit program to wait for unexpected condition. And then through. So what that means it means that we say here, completed with the exclamation mark. And we will always receive false with that. So we need is through. And let's go ahead and see how we can Wait, we need to import some several secondary are going to say up top here something like from like that. And we are also going to import two dot web driver.support.ui. Like that, we need that is called a web driver wait. And we'd also be Selenium dot WebDriver dot support. Import like that. Now I know that it was a lot of info a great reason for that. And we will see why and I will start writing the condition that we'd that then First I will instantiate the WebDriver I will instantiate that without assigning it to driver object. So we will just say here, driver. that we should wait until the expected condition like 30 seconds again, and the actual be enough. method of until in here. Now by convention, the is usually in a separate line. So I'm going to the condition that we want it to be through 30 seconds approximately. So we can say here e c, used as import in here. And we can now use a So as we can understand this method is designed to text. And I'm going to launch up this method in writing the arguments just in a separate line. Now as the first one being the element that we'd one being the text that we expect to have after downs So I will say here, element filtration. And like that. Alright, so the way that we are going is by using the by class. Now, this is just So it is not going to look complex. So it is as create a tupple in here, and then I will start by class name. And as you can see, we have class name like that. And the second piece of name value, so it will be progress dash label is just another way to find an element in a web meddled, and I just realized that I did not delete ahead and do that. And then in the second line, the expected text. So it is going to be complete program, then we should not receive any errors, us through in less than 30 seconds. So if we run again, we click on this download button. And let's so we got the text of complete. And if we go back finished successfully. So what that means it means until we have waited, that's really verifies successfully. So it is very nice to play around wait to find elements in our entire page. And more custom waiting, so it means that we need to time until some condition is achieved. Now for expected conditions that you can use, you can do So if we delete everything from here, and use options that we can use expected condition for. So elements to be selected and basically wait for are tons of options that you can use if you'd like So it is very nice feature by Selenium that we can as writing more efficient test cases. Alright, so or clicking on different buttons right after it is accounts. And this is something very useful websites to basically performing some UI testing practice this, I am going to pull up this website the page that we are going to try to send the keys forms. And actually, when we want to send the where we actually need to write in some data, and data. So as you can see, here, we have some form were to click on Get total, then you can see that some other number, there you can see that it is try to automate now with Selenium. So first, let back to Python and actually say here rival dot get for sure. So you can directly copy and paste from right after we have done this, then we should some method by ID class name or whatever method it and as usual I will say inspect, and you can see which we can again, find the element by class. And because I think that this is the strongest field some one. And I believe that the second box in with inspect, then you can see that it is just as basically try to send it some keys to it. So I'm some one is equal to driver dot find element by the exact same thing by basically copying this to number two, like that. And then I can try as pulling the element. Because now we have full send keys like that. Now, you can put here, it expects for a value. So this could be any it could be a string, or it could be directly a 15, like we have done manually. And I will do the as well. And now we can actually test this go ahead and say here's something like rival five seconds in here for each element. And now then let's see the results. Okay, so the we received this message. And we will handle it that we got the values. So I know but you can actually see this in the background. as we see this output. And we need to somehow to continue our automation. So this is actually a now I can go to inspect in here and see what needs here and click on that before we go ahead with got this element with multiple classes. And if I some classes in here that are separated by spaces. as I said, then it means that it is referring to this element by class name at dash c m dash, no class name that I can try to filter this use let me copy this down and manipulate this in let me please go down here and paste this text name that we'd like to filter by. So I will delete And I will say no button is equal to driver dot the class name that we'd like to filter by. And apply the click method. So it will be no button is a great idea to do here is to wrap this with to find an element by this class name because it is a great idea to use here, try and basically if the Selenium is not going to find any element our program. Because in the except block, we can class name. So I can say just skipping like that. automation exactly like that. Okay, so if we run this time. So the page has been opened. And as you see any message from the except walk. So what the element with this class name and it emits from the first stage. And then it went ahead and And you can see that the values are right there. that we wanted to complete. Now there is one ahead with the get total element. And I'm talking not only specifying the text that we'd like to the keys like Shift Alt, enter control and stuff is by importing the keys class from the Selenium. you will want to basically automate some actions need to automate Ctrl C. And again, that's useful on some key directly rather than sending some Selenium dot WebDriver, dot common dot keys, you have all the options that are basically the So to show you that, then I'm going to dot. And as you can see, in the drop down, we And we even have the nums that are existing in So if we want, we can send the keys from the that case. But again, sending keys directly need them. So as you can see, you have you want to take a look to all the options, then B in Python or F 12 in visual code, and you can the options are here available. And this is very, then let me try this with the numpad. So in the send pay attention that I can separate the values five, and then it will basically send the 15. we have done. And to show you that it works, then can see down below that the results are quite the keys. And the beauty behind the fate eight is that exists out there. Alright, so now we only not always we'd like to filter the HTML elements more attribute key value pairs that we can try to inspect in here. And we do this again. And as you see before, which is on click. Now say that I'd that value in here. And this is something that we is possible with something that is called a CSS filter an element by its styling. Now, unlike with with CSS selectors, we don't always need to filter example, with CSS selectors, it is an option to that it contains. Now that is extremely useful by exact key value match, because we could want the same prefix or suffix. So let's see how CSS at pi charm. And let's go down and see how we can button is equal to driver dot find element by CSS our CSS selector expression. And the way special pattern that exists out there. You have multiple options but we are going to use a matching key value. Now as an example, we can going to filter that. And you can see that it's and it has the key value of on click return filter all the buttons out there that are having total like that. So to achieve this, we will go need to open a square brackets. And we will need then we will use double quotes in here. Now the quotes here from the beginning. And we do not want return total like that. And as you can see, this you can basically specify the HTML element that it is inside the square brackets right after cert or options, because there are tons of options Okay, so I expect this button to basically have basically use button dot click as expected. run our automation, once again, let's see you can see that we received the text of total A we expected for. So what that means it means that successfully. And that is perfect. Alright, so I took this CSS selector expression pattern. And you examples of how you can filter elements by using with all the selector options. And as well as some can see that if we scroll down, then I actually containing the element type. And in this example, can see that within the square brackets in here, case, as I said earlier, you can not only search can also search for an element that contains some says selects every eight tag elements whose href when you want to select some elements that ends lot of options in here. And that is very useful. is the method that I use the most, because it other elements. So it helps you really to find the to perform some automation on them. Alright, so a file for the project. Now before I started board folder. So this is going to include the code the folder wherever you want, just make sure OK. And we will start from here. Now you can pay the main.py file, so we can just basically working. So if the auto generated file is not file by yourself and name it main like that. Okay, the structure of the project. And the way that be as I described in my project structural video then I have a video that describes how a Python beginner project or an advanced project. So if suggested link. So now I'm going to go ahead and that. And I'm doing this because I want to include this directory. And then this main.py file is Python files from this directory. And let me go more comfortable to win. So I will go ahead and do we will start by creating three files. So let's first one is going to be named booking like that. to have some instance methods that we're going to some actions. And the second one is going to be that we really want to change it through how the those variables in another file that we can name go ahead and do that. And the other file that I'm the following way. So it will be underscore twice actually a great reason that I naming this file when you want to create a Python package. Now it is because we want to call the package from is outside of the working directory. And that is underscore, you need double underscore file, it Python package. Now I will use a few more seconds underscore init file as well. So say that we go to the constants file in order to execute something booking dot constants, import a for example, now so we can create it like that. And notice that now then we are totally fine. Now before I do this, say, I will print first. Now what I'm meaning sub module you're importing from the booking file is always going to be executed. So to prove which basically imports just a variable from then you can see that we received this message. So be aware of when it comes to Python packages. project as well. But I just want to make sure that And now we are totally ready to go ahead and before we start, I will not recommend running few seconds, because it might lead the server side And it is always not nice because then you have did not mean to do any harm. So that's why Be bot on those larger websites like the one that so I have deleted everything that I have showed go and write our class. Now I say that we are this file that I named booking.py file is going to on we are going to call them and those methods are take. So let's get started. Now first, we want to we can create a class that will inherit from some start by saying from Selenium import web driver, class booking so this is actually a good name for from WebDriver dot Chrome. And the reason we want to have the option of both using the WebDriver will design for the class booking itself. So now backslash and design the double underscore init so This method is going to be called immediately we will say def double underscore in it like that. that driver, Pat like that. And if Remember, this of our drivers. Now, just to save us a little bit for this parameter, which is going to be exactly three episodes of this synonym series. So it double quotes, and I will say C column backslash, the location that I have the chrome driver. Okay, equal to rival path. And further than that, I will it is because I want to instantiate the WebDriver want to do this, it is because the constructor is not instantiated yet. So this is why I can't allow if you never saw me using the super method, then created a year ago that you can watch a video that the link in the suggested video up top. Alright, current class as an argument, and as well as the underscore init method of the webdriver.com class instantiate an instance of the WebDriver let's go down and design a random metal. So let's and receive self as a parameter for And now if I was to say self dot get, then you of the WebDriver dot chrome class. And you can by something. And as well as using the get method. saw them in the beginning of the series. So this Selenium methods to play around with the action so I'm actually going to make use of this the first location that we want to do so. And I'm I'm going to pass in the URL of the website that will be HTTPS, that will double w booking.com. created the constants dot p y, what we can do value that is not going to change. So commonly, to always use. So that's why moving this value to is a perfect idea. So we can make use of this file programming, when we have constants, then we base underscore URL is equal to the exact URL in And I can use import booking dot constants like to read. And I can go now and say const, dot here. Now actually, before we test this out, if chrome class in the first three episodes, then because otherwise the Selenium is going to in the system level of PATH variable. So that's always thought envy wrong, if you remember. So because again, otherwise the cylinder is going to here, and I'm going to say import always, and I'm dot envy Ron, and I'm going to access to the cat then I will add the self dot driver path like definitely consider watching the first But let me bring the code from the first episode. published recently, when I launched the series. used in the very beginning, this line that adds have basically use the same expression pretty back to five gentlemen continue. And now what and import this class and create an instance land the first page. So if we go to run.py actually, it should be from booking dot booking, we only want to import the booking class, which I to a booking instance. And I'm not going to pass value of this driver pad. And now I can really So it will be inst dot land first page. So this to the booking.com homepage. So now I can execute So if I run that, then let's see what will happen. that we were interested to be at from the very designing our bot from here. Now there are take to basically fill in the form of where we are check out and as well as adding more people to are going to be divided into instance, medals. And a lot more readable and maintainable. So that's because it gives you the option to extend your Alright, so there's going to be one more very stage. Now you could pay attention that although we still got the driver instance being opened. So the Chrome browser is still going to be opened. browsers open on our computer. Now sometimes when force our browser being closed once the why sometimes we want to have control whether or leave it open. So this is a good candidate because using context managers could give us a and when we want to tear down things up. So that's throughout this project. So in order to implement in the class level. And if you did not hear about a short explanation about it. But basically, then I have a video that is dedicated for context consider taking a look in the suggested link. But booking.pi file. And I'm going to use two more make use of context managers. Now the way that level is by instantiating, an instance of a class Then I'm going to split the panes now, excuse me. I'd like to do that vertically. our booking.py file and on the right pane, I will I'm going to now delete everything and I'm going will go here and I will Se bought that land first it is the fact that once Python reaches the line execute some teardown actions. And the location are by convention used under the magic metal that that, then I'm going to go here, and I'm going to going to use this suggestion of Python, because And I don't want to screw things up. So I'm going So now I can say self dot quit. So quit is going to shut down the Chrome browser, once we have I'm going to run this. And I'm going to say inside try to run the run.py file one more time, and And once we received the page, then you can the Chrome browser has shut down. So what that indentation of weight expression, then it executes this is how complex managers are working. And test multiple things throughout the development option of when we want to tear it down. Or when we receive here one more parameter. So I am now is equal to false by default. And I can if teardown. So this basically refers sorry, this and say self dot teardown equals to teardown and say self dot teardown. So if this is true, then just don't do anything and leave the browser then I can pass in here till now I'm equals to then the browser will remain open. So again, if you want to close up your browser or you want test something else, rather than just testing the line now that we understood this. And I think that that you understood the concepts of how context we have left the previous tutorial, and how we use this booking class in order to have also designed some methods that could be helpful, the option of using context managers when we And we also have designed this metal in here, it basically lends the board on these cons thought in the constants.py file. Okay, so now before we let me do two more actions that are going to be first one is going to be to adding the implicitly implicitly weight is the metal that will allow us is ready on the website. So if we were to say in here 15 seconds, then no matter which method element, then it is going to wait approximately find element method by less time because not method is going to take responsibility for that. in here is going to be self dot maximize window. just want to have a cleaner look when I test the And now you can see that the web browser has been And you can also see that we are inside now that we have done this, then the automate clicking on Choose your currency. Now automate the Where are you going, and as well as people we are, but actually, at first, it might have like a more common look to all the deals that So now, let's basically understand what we need to And right after it, we need to automate clicking Now, for the purposes of this tutorial, I am basically, this is one of the popular currencies basically click on this one. And right after that, then you can see that right after we have clicked then we are ready to try to send some text in understand how we are going to automate clicking click on Inspect. So we can understand which Now, I not sure why I have to do it twice, always. this is happening to you, as well, then maybe try the element in the blue background as expected. that this button is actually what responsible when we try to identify an element with selenium, to identify this element in the most unique ID is actually the most unique attribute but not always, we are going to have ID for HTML other approaches to find that element. And find this element with the class is equal to the most smart way to do that. Because there as classes in HTML are for styling elements. So that's why maybe feel during this button with the is a more unique expression that we can use. So And I am going to basically identify it with third episode. So I'm going to go back to pi change currency. And I will also receive currency the option to change to different currency going to say currency. And down below, I'm going And I will open up and close and I will press of code at all much long, so that it is a great I'm going to now open up a single code, and I'm brackets. Now if you remember, this is how we use type of HTML element. And then inside we wrote the and this is going to be data tooltip text is a great idea to assign this whole expression underscore element is equal to that one. And dot click, so it will automate clicking on that. value. So we will not really have to pass the the run dot p y on the right side. So let me split like that, and then let me call these buttons. So And then let me run this run.py file and are on the homepage, and you can see that we have So that is nice. That is a great first step to to automate is probably to clicking on one of the let me first show how we could identify the that receives the currency type. So maybe we could that we can automate to click on. So let me use And now if I click on this element then you can see that in here, we have this the whole button is coming from this anchor and I hover it, then you can see that we have So that's why maybe we should try to find these help us to identify these a tag. Now I have can have a cleaner look. And you can see that now I can try to find the data model header that is containing the text that looks like USD. Now I know that we did not learn how to But this is actually very easy with the CSS chart on how we can do that, alright, so down can name it selected the currency element, and CSS selector. And here we are going to write the and then we will use square brackets. And will help us to identify this element. So dash, async dash again, URL dash Param, like that. this is actually a great approach to identify this So besides doing equals two, then we should use not something that I have covered in the first find an expression that contains substring. And the equal sign. And then I'm going to use here currency is equal to USD like that. Now, if you this long the key had in this element that we currency dot click. And this should be enough to Now, you may think to yourself, why did you hard the currency parameter. So that is a wonderful So I'm going to add here a formatted string. And like that. And then what I'm going to do now is and working on run.py and I'm going to pass in then this line will be responsible to basically and this should be enough. So let's test Alright, so you can see that the Now we could also test this one more time by So let's go with G BP. Alright, so let's try to besides sending USD let's send GB P and run our All right, alright. So again, perfect. So the perfect key value expression to identify the we We are ready to go forward with the next search for the best deals. Alright, so now that then let's design the next method that we shall to identify an element for sending some text to automation, again, just to have the browser being being completed, then now we should automate inspect again. And I'm going to try to find the to this form field. Now, I said earlier in this ID attribute, then this is actually the strongest identify each uniqueness. So that's why I'm going s twice. So now I can go and say in a new method to go something like that. And I can basically go. And now I can go down and say search field is me if you did not see the text quite well. So by IE. And I'm going to find this by s, twice like we really did not see before, which is clear stands for cleaning the existing text. So then maybe we will have some leftovers. So that's great idea before we write some new fresh text. So I'm going to use search field dot send underscore to go that is arriving from this parameter. And to say bot dot select place to go. And let's now let's see what will happen. So I'm going to Now, by the way, we could comment out the don't want to probably execute it every time we do that just in a minute. All right, so you can then we received a drop down. So what go now and identify the first result of our of that. So this is exactly what I'm going to do. And going to do that one more time. And we should automate clicking on that. So this Now Li is actually standing for a list HTML want to display a list of elements. So that's Now we should again try to find how we this element, I believe Yeah. And then if we have a cleaner look. Now you can see that inside is equal to some string. Now I know that it is left, then you can see that once I point on that is being shown with green background. And if I can see that it now points to the second result that the data I value is actually like an index of the value of zero and the second one is having the value too, and so on. So that's why we call data dash i is equal to zero. So I'm going to open select place to go something like first result is And our expression is going to look like l II and is equal to zero like that. And then after first resolved dot click like that. And because those lines are going to be responsible is exactly what we want to do. So I'm going to And I forgot to uncomment this section, so excuse perfect result, we automated clicking on the first that, then booking.com automatically took us exact place that we can already try to automate there. So this is great. And this means that we call the click on that specific element. All the previous tutorial. Now as you remember, when then booking.com, by default, popped up the check So it means that we can automatically try the check out date. Now the time that I record, you are seeing a totally different result, then some another date. So the results are going to be that will be generic enough to support any kind need to somehow click on two dates, as the first will represent the checkout. So I will just click one more time. And then I will go to the inspect clicking on those buttons. So you can see that it this TD element. Now te D stands for table data. element is part of a bigger HTML tag that is tables. And this is also how this page represents when I hover my mouse, you can see that it totally means that we need to somehow automate clicking on by selecting an element with data date equals it is 2021 05 16. So I'm going to copy this And let's try to automate that. So down here in I'm going to type in one more method that Or we can just call it select date, something like check in date in the as well as a check out date. is equal to self dot find element by CSS selector. the following statement. So I will open single element we'll look to automate. And then we will paste in the statement that we'd like to identify is hard coded in here. And I'm just going to use hard coded to have the value of check in date, makes sense to go down and say check in element same thing for the check out date because this for deciding the dates of our vacation. So I'm element, excuse me. And it will be equal to self And I'm just going to use the same statement like check in date with check out date. So down below, initially enough to basically decide the check we have to do now is go back to our run.pi and So it will be bought that select date, and we are say 2021 dash 05. For May, and then they have the same for checkout date. And we will pass in 2021 test our program. Now we understand that we don't because this works. So I can allow myself to this out and see what happens. Okay, so this works in and check out dates. Now, let me tell something you would like to automate for selecting dates So this is something that I'm not going to show to basically achieve this by yourself. that is going to be four months from today. So on this next button three times. And then you will four months from today, which in my case will be I know that this program is not going to support six months from today. But again, you have all the yourself. Alright, so the next thing that I'm can select the adults to decide our vacation. And this area. And then we are basically looking or this plus sign to basically decide the adults. basically receive a parameter with adults count simulate deciding the adults for our vacation. because this is going to be probably the same the option to extend your robot in whatever way let's start identifying this entire area in so we look for the element that will basically So I think this will be this label with the font is a little bit small in here. But this is guests toggle. So I'm going to just copy And I'm going to go down and write one more method select adults like that. And then we will receive going to control the count of our adults in this element, something like that. And I'm and I will paste the value that I have copied underscore guests double underscore toggle, and the following. And now let me pass in some default arrows when we call this from run dot p y and adults, something like that. And now let's see So until now, we should expect to see only not the page and it looks okay. It looks see how we are going to control the adults for control how we are going to select the adults because let's say that you want to go with you only need to automate clicking on the two. But what if one day the default value say that the default value is going to be changed count. So we can actually be more smarter. Rather depending on whatever adults count we are going decrease the adults count to the minimum value. we really need to click on the increasing button. the count of adults until the value reaches one that we can have. And then we can try to click on is passed in. So this is a more generic is going to be very interesting to implement you know what Before that, we need to understand So let's do inspect and see how we are going expand this and see what is going on here. So then this button of decreasing is being colored that we looked automate clicking on, and area label with the value of decreased number of same thing for increased number of adults weight this one. So if we open this element, and move here. And Alright, there it is. So you can adults. So this is the approach that we're going copy the statement and try to find so right under the Select adults method, we Adults element is equal to self dot find element button and open up and close square brackets and have copied previously. And you can see that it is Now we need to somehow simulate clicking on that as we said, it will allow us to have more control I'm going to use while true, and then inside this look up for the value of adults count. And once it of our while loop. So I'm going to say here while fix the indentations. And then I'm going adults element thought click. Now if I leave the click on the crease button, which is obviously not identify if the value reached the number of one. So it is going to be something like if the value the while loop. So let's see how we're going our browser, and I'm going to search for the be this one in here where my mouse is pointing you can see that I'm pointing exactly to here. So depends on this span element. And you can see it means that we can try to basically Find this plus, then you can see that it got updated. So need. Now I can actually see in this inspect page with the adults count. And you can see up top in see that this element is actually getting updated select this element is actually because it has strongest attribute that the HTML element could plus hearing, and then you can see that it gets by the ID of group adults. And I'm going to go element. So I'm going to go here and say, adults ID, and it should be the value of group adults. element that displays the value of adults count, the adults. Now this is something that we did not actions like clicking or sending keys. But we did in HTML elements. So it is going to be by using in here. And then it is going to be basically by Now get attribute is basically a method that you back the value of whatever attribute it is. So need to work with this key that is called value, right? So we need this key. So I'm going to go in here value. And this entire statement should adults count. So I'm just commenting this up so we can remember what each line is responsible conditional and it is going to be much better if separated variable. So I can say something like And let me just write here some split lines so down below, I can say something like if adults' know that this statement is going to give us back returns the value as strings. And we cannot integers. So we are going to convert these adults going to check if it is equal to one. Now once it So let's see if this logic works. So we should it. And we should see the adults count being set And Alright, so we can see that it works perfect, thing that we have to do now is identifying this go away to 10 adults, then we'd like to launch nine times. So let's go back to pi charm and properly, then really we are going to assume So I'm just going to pass in this argument when method and minimize this wild rule because we have button element is going to be equal to self dot if you remember it was a button with the key going to open those double quotes and say increase and then I'm going to go down. And I'm going to function, so we can really have control in the execute. So I'm going to say for i in range, and because if you remember, I said that we should count that is passed in in here. So we are going that's it. Now I'm not sure if you know or not. variable that is used in here, then by convention, like I or a or something like that, you can just And this is just a convention in Python that says value. So now we are ready to test the entire and we show the C, the adults count being set to all right, so you can see that it really works basically set the adults to one and then we have set. Now this is really generic and working count equals to one from our method, then what to here, and it is going to try to and it is never going to run because if you are you are basically not iterating over anything. one. And that is perfect. So this logic go ahead and click on the search button to results. So it is going to be very easy, because site it is, is mostly having a key value pair that So we are going to click on Inspect and see expand this, and go here and look up for this to submit. So again, we can automatically try to with HTML type of button that has this key we can easily just create one more method that receive nothing in this method because there is And we are going to say straightforward itself dot button with this key value pair, and basically And then later on, we like to click on that. board dot click search, and see if everything logic, let me uncomment the change currency and works. And let me challenge this program a bit and and pass in here 25. And really test if everything have customized the value that a little bit. So so I'm not going to touch my mouse at all, and adults search, perfect, just perfect. Everything different hotels from these booking.com we really have some results going in here. And more complex stuff because we need to only we need to somehow automate applying so here you can see that we have book. But as we can understand from this page, filter to basically improve the results that we filtrations then we're going to need to write some filtrations. But to those in that booking class have too much methods in one class. So that's why that will include some methods about filtrations, so if we go back to our Python now, then we can way. So let me open up booking.pi. And we can go filtrations. And this filtration is should be and instantiate an instance of another class that something like that. And then in this class, we be responsible to really go ahead and apply those go ahead and start working on such a design. and I can name this booking underscore filtration. is the purpose of these pages. So it will be this that will be responsible to interact with to apply filtrations, so we could really right after that, we can basically go down and we is not going to inherit from anything. So we can the constructor needs to receive one parameter. driver that we are going to pass in his argument WebDriver. So if I go to booking.pi, then we of writing methods, we do it on the self object. instantiated instance of this booking filtration. rival equals to self in the future. So that's and basically receive here driver as a parameter. me quickly fix the arrows in the other file. So I I will go to booking.pi. And I will basically go dot booking filtration, import And I will jump here, one more line. filtration, something like that. And I will class. And I see that I missed the tea here as we can basically decide what kind of filtrations actually a good way to design our program. Because then we might have a tough time to maintain our the filtrations in the following way could be a we could structure the booking filtrations, then filter by the results. And you can see that we can So that's going to be the first method that we're file. Now we can see that we have this entire box those check boxes. So I'd like to first work with some more check boxes in that page. And I don't that one, because this same check box is appearing better idea to first take our board and identify whole area. So I'm going to try to click on twice. And you can see that we have this filter is probably what is responsible to display all parent element in here, then you can see that this in its class name and it also has an ID that says because we can try to use our board to basically going to do something very special that will be of this div element. So let's go ahead and work on And I'm going to go back to our PI charm. And you file. So at first, we should assign the driver to So it is going to be self dot driver is equal to to receive the original driver from the booking in here. And I can basically launch a method like self as a parameter. And now I can use something And the ID should be filter underscore class, would like to filter by now notice how we did not because in libraries that are very large, like completion for the different methods to basically the auto completion doesn't work, it is because there is actually something in Python that the parameters type to work with auto completions. working, then I will use I mean to explain this commonly use that is called a list. So say that list like my list, and we always like to pass list, then we will not have auto completion that is very related to lists. And again, it is So we could actually do something like from typing say that this one is going to be list. And now have auto completion for the list methods. In of selenium, we could basically import a library as easy as going here and saying from Selenium web driver like that. And let me remove the list as a parameter. This was just an example. web driver. And once we have set the type going to have self dot rival dot and you can see because now the self dot driver object knows its we can go ahead and basically assign this to a filtration box. And then we could use that. And Child Elements of some element that we have achieve by using CSS selectors. So let me show you this is our I'm going to name my variable. And I'm use find elements and not elements. So I know that element as a method. But actually there is also website. So I'm going to use find elements by CSS find all the Child Elements of a given element and inside a string. Now I want you to take a look So we go ahead and say self that rival and we ICS cert or method. So this will end up giving us is wrong because we only want the The elements Child Elements of it. So what we can actually do replace this with Star filtration box. And then elements that belongs to that star filtration use something like print when star child elements this variable. And we can go to booking dot p y. dot apply star rating. And if you remember, we did run.pi. So I'm going to go here, and I'm going we want to leave here, this method always being we want to execute in this apply filtrations execute our entire project. So I will run run that also show you the results in our console, because Alright, so if we go back to here, then you can inside those for the elements, we look for the to the Chrome browser, again, I actually have set we can see that I have expanded here, this filter more down, so if we go to like this area, then in checkboxes. And inside of that, we have all those we should click on them. And you can see that each classes, I know that it has a very long structure. one of the Child Elements is one star. So what we for the elements in we can look up for those that or four or five. And this is the same structure two stars element, we can actually see that it has So those are the elements that we look to click can basically open up the looking filtration. by iterating over each one of them. So we can say could use something that will look like if star And we should receive the attribute that is So it should be inner HTML like that. So this inside those HTML tags. So for example, if we and we have some value like gym, then if we want the launch obligate attribute medal. And so that's look if this entire expression here is equal to we look up for. And of course, I'm not going to receive use something like Star value. And we want to change this tool store value like that. And if something. Now before I go ahead inside of this we want to convert this entire expression to a do that and wrap all this expression with the str you may be seen before that is called strip. Now to clean all the white spaces, because we might values of the inner HTML files. And this is all of those. Alright, so now I can go inside of element, dot click. And the reason I can do this over for the elements. And if we have one element then we probably want to click on that. So let's now run our run bot p y. But before we do that, is where we use the applying star rating. And we and try to click on five stars. So I'm going to we can really understand what this is about. go ahead and do that. And let's see what will And then it should go ahead and try to click then you can see that it click on here. So that also activated. And this is great because we were that we understood this, then there is going to to this method. Because this is just realistic like four stars or above, or three stars or above somehow receive as a parameter, not just one value. And the way that we can achieve this is by And that is a way that we can pass in many with adding an asterisk sign before the parameter deeply, then I have a video that explains what a parameter to adding a double asterisk sign. And seen previously double asterisk key w arms. And if that explains the differences between those in the look on that one. All right. So now that I have then let me change this to store values because of variable. And I can go down and basically values. And I can take my entire code in this loop. So it will be something like that. And this out with passing in multiple style values. easy as going to booking.py. And besides passing four, and also five. So we should see the results So if we run our program now and wait a few So as usual, we see the regular Alright, so if we take a look in here, then you And if we actually take a look in your filters activated successfully. So we have done a really booking.com website. And we can continue from that there is no limit for the filtrations that results page. So I'm going to add one more that I personally think that is very useful. And board to click on the sorting option from lowest very useful. So if we take a look in the results have some more filtration or basically just some our results whether you can see that we have the like to automate clicking on that. And I'm going is just a button with only this attribute in here And that is going to be this data ID is equal to find This way, the CSS selector and basically to our pie charm, and basically to our booking method, and we could name this sold price lowers element. So we can name it just element. And that by CSS selector, and this will be that one. And element pipe. And we will open up our ID is equal to actually I copied this statement. data ID is equal to price, make sure to use double element thought click in that will be it. Now if our methods, but we don't actually call them in dot p y file inside the apply filtrations. So also sold our results. So we could say filtration, to receive anything as parameters. So we are test this entire program now inaction. And let me four to five stars. All right, so if we run this, Alright, so you can see that we have also as you can really see that we have some more if we take a look in our filtration, then you So I think this will be pretty much enough If you want to basically see useful results. Of to receive better results. And as you can see the similar to finding the elements with the the Selenium library. Alright, so one of the first to support running this project, not always want to execute the bot to do its actions and to you may not always want to open it in a specific bots from the command line is just more basically pointing to your project. And then using sometimes the only one to do it from a terminal in our case it is run.pi. Now I'm not gonna not support such a behavior. Because we have that is going to add the location of our Now executing such a line from Python will work and attach it to a Python process and really But when it comes to other processes that for example, a common line interface in Windows, need to add the location of our Selenium drivers be tricky to handle that from the terminal level. project won't execute successfully if we will try remember, in this directory, we have this file, Python, run dot p y, then you can see that it needs to be in path. So I'm going to fix that. So from your terminal. It doesn't matter if you with a Windows around. Alright, so the way that blocks. And we can actually try to execute those then we could always bring to our users that the a command line that will add this C Selenium let's go ahead and try to design that. So I'm and I'm going to indent all of those ones. And right after this, we can go down here, And we could grab the exception inside a variable, we could say something like print, there is a interface. So that is just a great start handling there is going to be some more additions in the and I'm just going to run the same command. So it now we automatically see this, there is a problem because we were able to hit the except block, But in some other cases, we might also Now, not all the exceptions in the world are about So that's why it is quite dangerous to exceptions that are going to occur in verify that we really hit this message that says that's why we could go back to Python. And about how there is not a folder inside the system to cache the exception message. And we could go specific exception. So if we were to check if this then it really means that the problem is about how So I'm going to go back to pi charm. And I'm going in the exception message, then we could go down some other problems say that we have a problem then we would like to raise the by easily saying else. And basically using the you are doing something like this, then once we raise the original exceptions. So that is a great verify that this works. So we could go back to minute. And we could say again, python run.pi. And So that means that our if conditional works message to be more friendly. So the user could add the location of our chrome drivers to the grab a code snippet that I prepared as a print in here. And obviously, you can grab this from series. So you can see that here I have a nice the bot from command line. And the backslash n is next line. So in the next line, we say please add use this command. Now I know that this looks built in Windows command that we can execute to pad system around variable. Now as I said in the already around 50 or even 100 locations that we and we add the original paths. And in we add our path, which is going to be C Selenium chromedriver window and if you use Linux, then you much similar. Only the windows includes the set our terminal. And again, run this command and now So the only thing that I have to do now is grab the path that we should have. Add here. So it not always sure if it needs to be added with a both. And I recommend for you to try both run Python run.pi. And you can see that I again, and run the same command with a backslash at the you can see that our bot works. And you can see expected, you'll see that we were able to search filter out and also applying the sorting. So this to our terminal, then you can see that we actually to fix soon. But at all in the big picture, our a terminal. Alright, so now you might notice some to our localhost with some port, etc. So that is But actually, when we work with browsers like then chrome now comes built in with some tools built in directly into Google Chrome execute some automated Chrome browser to run some it already executes that utility. Now, in this their tools. So that is why we can allow ourselves those kinds of errors in that stage, we and basically add some additional configurations as easy as going back to pi charm and add some we have some line that says super, that is of the inherited class and as well as the class is why we need to customize this line, because this class that we inherit. So it is going to options is equal to web driver dot chrome built in class that I instantiate. And then experimental option. And I'm just going to write ignore those kinds of errors. And I'm not gonna why do we see those warnings. So I ended up by which I will add in the description. So you can on there. Alright, so it will be exclude switches a capital S. And then there is going to be one is going to be accepted inside the list with one like that. And once I have done this, then we need of Chrome options. And we need to pass this in options is equal to options like that. And then still see those logs. So I'm going to open back run.pi. And I'm just going to let our bot running the terminal. And you can see that now since don't see anything. And you can see that our bot see the results in this Chrome browser page. So errors. And we can continue from here. All right, then there is going to be one more thing that we'd we will really see the original exception, even the chrome driver being in the path. So that's purpose. So I'm going to go to our PI charm and by zero like that. And we should receive basically starts. So that is why we should now go back to try to execute our bot one more time and see the the original exception, which says to us zero a number by zero. So we will have some arrows executing the lines of code, because we had some a great preparation for the future of this board application as much as we want, and even test this wanted the ability to execute this project from a preview of the board, then we like to visualize user can really have engravable look on what are want to avoid doing that with the PI charm. And we So that is why I want the ability to execute this environment, or even if it is a Linux environment. we should identify in order to start reporting So as expected, I'm going to run this project of this recommendation that we have generated drivers folder under the patch system environment as you can notice, I replaced this path with my after that, I'm going to say Python run.pi exactly if you remember, I showed some exception and I deleted that, and it was a zero division And then I can go back to our browser. And you the filtrations and the sorting are pretty much large element that is responsible to display all I'm not going to show how you can see all the the first page for the purposes of this tutorial. that has 25 child elements that are responsible deals price, hotels name and star rating and Now again, our goal is going to be first to find all those 25 boxes, that each one of the boxes are name and star rating and stuff like that. So at pretty much covering the entire box. So I scrolled Inspect. And I will do that twice. Excuse me about the title of the first box. And if I we only see the part that is without the we want the entire box. And as you can see, this And if I minimize this element, and you can see then you can see that the second box has been those div tags that are having maybe the data to display each one of the boxes. And you can is a div tag with the ID of alternate list Enter. the Python side, let me show you some tricks that web pages. Now don't be afraid of JavaScript, that there is a great chance that you did not walk through how I identified when I developed go to console Alright, so the council is actually that is going to be responsible to identify So if we go to console and Way, ignore what So you can see everything. And I am first going clear. And then this is a metal that we should console. Now to grab all the elements that are the built in document statement. Now this is again But I just want to make a short walk through how execute a method that is pretty much similar like ID. Now pay attention that E, B and the AI are fail list underscore inner. And if you remember, the results. And I'm going to assign this whole hotel list, and this is going to be equal to that Enter, then you can see that it returns me the boxes. Now I'm again going to clear the screen the variable. And then on top of that I'm going to and n are capitalized. And I'm going to find here box. So I actually found this ASR underscore you can see that even before I executed this, elements. So what that means it means that now that we can work with. So if I press on Enter, 25 elements. So again, this is what we should first find that parent element with the we should go ahead and execute, find elements So let's translate what we have done here to you this on the JavaScript side is just one more so we are inside pi charm inside the booking.pi type in one more method that we can call it report to say self dot find element by ID, and it Enter. And then on top of that, we are going to actually split the line so we can have a cleaner by class name is going to receive as argument I need to assign this entire expression to some boxes, this is going to be equal to that one. So I'm just going to say return ortel boxes, and say print the length of bot dot report results. And we only like to see the length of this list. is then it means that we are ready to continue go to our terminal. And I'm again going to execute of that. Alright, so the filtrations have been see that we receive 25 back. So this means that that are responsible to display data about the each of the boxes, then we should somehow try to we'd like to start with the details name. So we the 25 deals. So let's try to find these up. So is going on here. So let's go to our first box this is under the elements that we have found. of the 25 boxes. And we can try to find an element underscore underscore name. So I'm going to I want to start working on a new file now, because Python file to basically have more organized directory. And I'm going to create a file that we document first what this file is about. So this the specific data that we need from each one of much making sense. All right. So down here, we responsible to have some methods that will start So I'm going to start by saying class booking anything. So we are ready to straightforward Now what is making sense the most is probably that is responsible to display all those deal something like boxes section element. And then element is equal to that one. And then we are and we're going to pass in the element with on that. So I'm going to go here, and I am going booking dot booking report, import booking say report is equal to booking report and I'm for instantiating this before that one it And I'm going to just move it and actually replace this to return anything for now. So I'm just going pass in hotel boxes like that. Now I'd actually on the booking report side. So I'm just going to with that specific ID. And now let me basically will be it. So later on, we can basically execute like I don't know, display table, stuff like but I'm just assuming the future of our project. be one more area that we should remove everything. the execution from here and continue designing file. And I'm going to just leave everything here on working report. Okay, so now that we have an then we should go and execute find elements all those 25 elements back. So I'm going to just this will receive self as a parameter. And I'm self dot boxes, section element, dot find element ASR property block. And again, this is just going do now is actually instantiate one more list say here, return to all the expression in self dot deal boxes is equal to pull self dot pull the elements under this name, which is in Making s right after find the elements. So, obviously, because we would like to pull all the elements that we have done this, then again, you might have about the find elements by class name. And box section element. And we are already familiar is going to be a very similar action to what and it is just going to be importing and then basically use this specific from Selenium dot WebDriver dot remote, that And then I'm going to say that these boxes element like that. And then we will start having we have done this, then let's start pulling in boxes. And as a great starter, we'd like to first if you remember, I said that we have a specific s our hotel underscore underscore name. So I'm name. So it will be going back to pi charm and receive self here as a parameter. And then I'm the boxes. So it is going to be for deal box in find element by class name, and we will paste in which is ASR dash ortel, underscore underscore element is basically pulling its inner this element has the alltel name inside its inner is just going to be as easy as saying to that split this to multiple lines. And then I can say like to receive the inner HTML of that element. innerHTML, I also executed some metal that will And if you remember, it was dot strip, like that. really display the hotel's names. So let me first hotel name, or deal name doesn't really matter. hotel name and see if that works. Now, if you So I'm just going to go to working dot p y. And to report the results in this report results titles. And now let's see what is going on we removed the report results section. So in And I'm just going to leave everything here as to display all the hotel's names. So if Python run.pi, then let's see the results. And york and one adult, and we apply the filtrations. have in the terminal. And you can see names, we really have everything that we need. So see if the sorting matches our convention. So City Times Square. And if we go here, you can see for that because sometimes you probably need to And we probably don't want to execute polling each that this was a workaround. That I applied when I now. So what I'm going to do before pulling the that page. So the board will have a second or two going to go to Python. And I'm going to say here, the trick. So I'm just going to say here, a work Now, let me try to execute our board one more time Now, I think that the reason it happens, it is didn't finish each job. So it makes sense to all the titles. So let's just clean the screen and Okay, so now the first hotel is appeal Edison and then you can see that the first hotel is should be Holiday Inn. And the third one should so I think that now the results are displayed a second to breed, and to grab the data in the important before I go ahead with this tutorial. in date and the checkout date. And this is because the last episode in this series. So I just want today's date. So that's why I'm just going to 206 besides 05. All right, so now we are ready Now we said that we'd like to customize the data name and price and also storing the hotel's score, you remember, we ended up by customizing inside and this one is actually going over each of the that is going to be useful for us. So we could the deal boxes. And we could actually try to pull why I'm going to remove the printing line from doing in each iteration step. So I will comment I'm also going to change the pole titles to more something in that kind. And now I'm going to Now to save some time, then I'm just going to show on each deal box. And as well as how I found the straightforward, say here hotel underscore price. find element by class name. And then the value And then I'm going to say V UI dash price dash I have a class with this value, then it means that I can allow myself to do that. Now I'm going to attribute. And the only thing the whitespace is name as well. So I'm going to copy that and paste will be responsible to pull the hotel price. And hotel score, and that will be by deal box, dot use here get attribute and not me dot wait find element has already an HTML attribute that looks means that if we were to pull only the value of going to receive back the author score in scale and so on. And so now that I have done this, then for safety, I'm only going to launch your dot hotels name. Alright, so now that we have a name, then let's test first our problem. Now, I am you. But I will explain just in a minute why I'm going to go up here, and I'm going to use a list And that is going to be equal to an empty list. score, I am basically going to need to add those an organized and structured data. And I'm going will be the list. And that will include multiple is going to include the three elements and one of And the third one is going to be score. So I'm dot append, and then I'm going to add to that one price, and the other one should be hotel then I really want to test out if I have all the I'm going to use here return collection. And And I'm going to search for the method where we here. And then I'm going to launch here to design. And that is going to be pull we use return statements. So when we execute going to see anything. So we're going to need to so that we will be able to see the data. then let's open our terminal and test the results. And I'm going to say Python run dot p y, and correctly. Now let me move the web browser to Alright, so the bot is running. And now we should I'm going to open that up. And let's zoom out a Alright, so you can see that we are sort of having going on here. So you can see that the first and because this is the collection of data that we list of First of all, and then the second I'm not sure why we see here an empty string. And they rentals does not have a score. So that's as I keep going, we are having a lists inside collection of data about hotel name, hotel price, visualize our data with the pretty table library series. And again, this library is going to help into columns and rows. And now let's see what we data nicer. Alright, so let's go ahead and see clean the screen, and I'm going to install a going to be pip install pretty table like that. visual environment here, right now, because I'm you can go ahead and do that. Because it will for this specific project. I just don't feel at least if I don't have a full tutorial on to straightforward install those packages in that on this project. But if you feel comfortable you will to do so because this is a nicer way Alright, so now I will use this line. And so it means that we can work with this library. see how we call work with that. Alright, so now then we are going to write here a few more lines going to scroll up. And I'm going to import the one class from this library. So it is going table like the following. And then we need to here. So I'm going to say right here, is equal to 50 table, and this one is going to important, which is the field names. Now I said So in our case, we probably want to declare here, name and then the price and then the score. So I'm going to look like the following. So I'm going to hotel price. And then I'm going to use hotel score as the columns. So let me use actually a keyword so now that I pass this argument, then we need So it is going to be as easy as using the Add collection of data. And guess what we are going minutes ago. So that's why in here, I use a nested pass in directly this collection list object. So now the only thing that we need to do in this underscore rows. And then we can basically is going to be just copying and pasting this leave it as it is. And actually we need to print print line before. Now we need to print the table and rows. Alright, so now that we are ready, clean the screen and run our word. So it let's see what will be the results. So I'm going in the background just in a few seconds, you can see that we have this nice organized everything that you need about the deals that see that it is very, very organized. And you can because we have applied this filtration throughout easier to read the data in that way. And you can projects as well. I really like this library And I want to display the data that I received it really displays the data nicer, and it's just we have completed this, then it could have been our bot. So we might want to see results for we also like to change our check in date and time that we want to prepare for a location. So in the code itself might not be a great idea. So in the very beginning of the series, how the turn those hard coded strings into obeying inputs. about those kinds of pieces of information. So We could ask here where you want to go. And string that I'm going to pass in here as the inside this board dot select place to go method. have to change the code, every time that we want vacation. So that's why I am going to do this as well as adults count. And I'm going to leave nicer to see the prices in United States dollars, But let's leave it just hard coded in here and ask you besides hard coding in the check in what is the check in date? And now I will also then I will ask, what is the check out date? And I something like that, and then we are ready to go. Python, run dot p y. And let's see what and you can see that nothing will happen only expects for an input from us. So it is going to be to be something like so let's say that we want to and you can see that now it asks for me, what is then we can see that it has already selected it means that it really works. And we should see in and checkout date. Now we should be careful in So it will be year dash Mont and only the day use that. And then I will say check out date we want to go for five days. And then you'll see I can check if this works. And you can see that will provide in four people, for example. And you that is because we did not convert the count this is a great mistake that we had in here. And and explain what is going on here. So you can see can see that here we are operating some actions interview. And you can see that exactly from this how a string could not use subtracting in here. convert this to an integer. So I'm going to use execute this program one more time. So let's clean And let's minimize this up and then providing And then it is going to be again this date and for and you can see that now we don't receive any the results in a nice table. And you can see And we actually have an appeal with 10 scores. told the the states and Okay, so you can and everything functions well. And the fact execute this program. Every time that we want and as well as for different dates. So we could even tomorrow. So we will have this dynamic once we run the program and we don't really so I think this will be it about designing this room for improvement and also adding some features everything that I wanted to accomplish from we display the results in a console in a nice provided in where we want to go and the check enjoyed this series, then be sure to hit the like this video to more people on YouTube. And I hit the thumbs up button and as well as