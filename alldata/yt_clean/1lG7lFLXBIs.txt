In his video on Large Language Models Andrej Karpathy likened LLMs to &gt; I see a lot of equivalence between this I am intrigued by this notion. Operating systems are some of the with a history spanning 80 years. It mirrors the journey of computing in all we look at the evolution of the Operating System. ## Aspects of the OS unsurprisingly thanks to the long One definition I like says that the OS the User efficiently, reliably and unobtrusively. Hardware is hard. There is a lot of it - display, keyboard, mouse, and the network. the idiosyncrasies and pains of that Operating Systems help make this easier by giving pleasant interface for their task - An operating system is defined by its abstractions with on a daily basis. Some have been around for For instance, take the humble File. physical memory - working with cells has its own peculiarities, and dealing You might risk one program overwriting data used by another program - causing both to The File throws a blanket on top of all that You might think that your &quot;file&quot; is entity on computer memory - like a book In reality, the file data scattered in pieces like Cheetos across wherever the When you &quot;open a file&quot;, the file putting it into the right The OS automatically handles putting them in either the primary Abstractions like this are needed for us to with abstractions built on top of more ## Beginnings The first computers of the 1940s by just one user or group of users at a time. So they just gave that user every available of dollars today and so were rented However, those individuals found that wasted setting up the equipment hundreds of thousands of dollars So in 1956, General Motors Research Lab realized mainframe to automatically handle the loading With batch computing, jobs are transferred would then run them all at once sequentially, Special cards between each job told needed to do the jobs. These were There are a few who call these but the debate between historians on the ## Multi-programming The 1960s saw better and pricier hardware - card Users realized that not every resources. So these expensive resources could be run in parallel. Is there There was. Back in 1956, the UNIVAC called the &quot;Interrupt&quot;. It let a peripheral At the same time, we introduced new innovations were giving the processing units Together, this let the computer at the same time. While one program is another can be simultaneously running on the ## Time Sharing If you think about it, running multiple a small step away from having that computer One of the major problems with batch That in turn was the result of a Big batches took hours or even an entire the day's entire output might be just So in 1959, the computer and cognitive scientist John McCarthy proposed a possible &gt; An operating system ... that time required to get a problem solved response can be provided at bearable the computer must attend to other customers What this meant was a large central computer monitor and keyboard. This gives the user the the computer. A very powerful software was needed Two years later in 1961, the MIT team a prototype working on their IBM 709 they used a bunch of tape drives attached In 1962, MIT announced the Compatible called. A year later CTSS got a hard disk drive, and was offered to large scale users - Though hints of the feature were massive SAGE radar coordination system we consider CTSS the first timeshare By 1965, CTSS had hundreds of other colleges across New England, It also implemented the first mail and mail box function between users - a Several other timesharing services emerged One notable system was the Dartmouth Time Sharing An early version of DTSS later powered General Electric. GE was the market leader until Today, we have largely forgotten about the phrase what we now call cloud computing. But it had a their operating systems. Before the rise of the ## Multics and OS/360 So in 1964, the CTSS MIT team joined the market leader in timeshare called &quot;Multiplexed Information Multics' great vision was to enable a time-sharing &quot;computer utility&quot; capable of So kind of like how water utilities Multics would enable computers to But the project ballooned as it wanted to bogged down. Bell Labs finally pulled MIT finally got Multics to work on their own, and it was eventually sold to Honeywell, It gained a cult following and persisted despite Honeywell's determined efforts to kill Multics' troubles were reflected in another same time. In 1964, IBM announced its Ideally, a program written for one on all of them. That was the whole to write software that can work on all Famously, IBM tried to build a single Despite a monumental budget and OS/360 fell way behind on schedule. And in Its project leader, Fred Brooks, later the OS/360 experience - the &quot;Mythical Man-Month&quot;. ## Unix But its groundbreaking ideas - security, and more - were incorporated into I already did a video about Unix's development But I think it is important to emphasize that It had many of the revolutionary ideas For instance, the pipeline, which let you inputs of another. It is like a Human These helpful utilities were written for as those devices came to be popular with users And because it was written in the Unix can be easily ported to other minicomputers. it in a copyright limbo - helped Unix gain Unix's rise was a cultural phenomenon that communities like those for the open source ## The Microcomputer In the mid-1970s, new semiconductor of integrated circuits with These ICs were powerful enough to be general was Intel's 4004, a four-bit chip originally Intel later released the updated 8008 in firms like Zilog and Motorola released powerful chips would be the heart of Intel - then very small - hired professor at the Naval Postgraduate Gary Kildall as a consultant to produce Intel needed an 8080-compatible operating Kildall port one he had written while was called CP/M - which originally Kildall believed that personal computer with existing timesharing systems the great illusion of timesharing is that every on their own computer. What if that were ## CP/M Existing microcomputer memory memory - sucked. Things like paper tape So Kildall got interested in a new secondary by IBM called the floppy drive. It offered Oh and unlike paper tape, it was random point you want rather than spooling Kildall gets a sample drive at the time just a few miles from Intel. Shugart Associates would later dominate the Now what? So there was Kildall, in his room a crude Intel CPU microcomputer. So as you do, microcomputer running the CP/M OS interface It might not sound like much. But early microcomputer operating Just a file system for organizing disk storage plus the ability to Disk Operating Systems or DOS. Kildall founded a company called Digital Research users, who paid him thousands of dollars. CP/M - retroactively renamed to stand for became the dominant operating system for the Though they were not alone in the the OS for the very popular Apple A Unix-cloneish thing called Coherent And this small thing from Microsoft, MS-DOS. ## MS-DOS Fatefully, CP/M lost its early lead. In 1980, a rogue team at IBM began a secret project to make their own microcomputer the team built the machine together with parts The PC team licensed a BASIC interpreter Microsoft. They were connected who was co-chair of the United Way The IBM PC team asked Gates if they knew pointed them to CP/M. But for reasons not personally take the meeting with IBM and So IBM went back to Bill Gates for an OS. Bell Labs for a Unix license. That the Xenix operating system. However that So Gates went out and bought a DOS from a its developer Tim Paterson to make a few Critically, Microsoft did not sell MS-DOS outright to IBM but rather licensed it to The IBM version that ran on the PC at To protect PC-DOS from clones, IBM a hardware chip and copyrighted The IBM PC - with its iconic name and most popular microcomputer on the market. inviting competitors and clones. At the start, MS-DOS was a crude piece of it allowed software vendors like VisiCalc to bring A bevy of computer-makers then managed to copyright - kicking off the PC clone deals with those PC-makers, rapidly Working directly with PC assemblers or OEMs going right to end users. Microsoft's PC OS. By 1983, they had a fifth of the ## Applications Today, we might see Microsoft as one But in the early days, Gates and an applications company. Operating 50% of the company's revenues - but Gates' thinking at the time was that with an OS so like $40 for a $2,000 machine. But with an In 1981, their top selling application looking spreadsheet application for MS-DOS. And for that reason, Microsoft in 1983 them to be today. That year they very good but VisiCorp did $60 This thinking was why we had these interesting systems to its customers. MS-DOS was for of Unix that Microsoft had licensed ## Windows It took time for Microsoft to realize By 1983, semiconductor hardware got good enough that PC operating systems can start One of the most needed was multi-tasking. and complicated, involving the For example, making a company report might and word processor to be open all at once. With MS-DOS and other single-task users had to close down the one program running Also, the way people interacted line. You had to type in the right what you wanted. Deviations in the By 1983, the PC community narrowed on the elegant solution to these problems. It was first incorporated into the operating systems for the Microsoft adopted the windowing system - first released in late 1985 Throughout the late 1980s and 1990s, the other semiconductor hardware advanced Hardware processes once only seen on The PC's modular design encouraged a plethora On the software side, an ecosystem of utilities like the home desktop, the high performance To handle all this, Windows evolved a system function handled by a separate OS new abstractions to help programmers It took years for Microsoft to get this incredibly potential. But they benefitted as Windows system and the company started bundling By 1993, Office had 90% of contributing 50% of Microsoft's revenues. Its from Windows - drove competitors like Lotus and Thanks to its grip on the PC universe defining technology company of the 1990s. But the ## Mobile The first mobile &quot;computers&quot; were These were handheld PCs popular in the mid-1990s for helping people manage their contact Apple had been one of the pioneers in the was an ambitious product, but the hardware fulfill its promises. For instance, These early devices were extremely original Palm Pilot ran on a 16 megahertz made them extremely challenging to build Microsoft initially struggled to bring Windows the Windows CE OS - now Windows Mobile - Released in 1996, CE struggled with bad battery Successful companies like Palm produced with these constraints first in mind. This meant a keyboard and handwriting recognition, ## Phones It did not take a lot of foresight to see that Having seen what Microsoft did to the PC phone makers joined together and bought The Symbian phone OS was produced by once producing PDA software. Symbian became an early leader with 65% market But Symbian failed to build a powerful and None of the handset makers wanted to causing serious fragmentation issues And since it had to serve so many Symbian was notoriously hard to develop for. The company struggled to build good tools and Nokia was the leading Symbian phone-maker, grabbed significant market share in Europe and part because of the dominant position of the ## iPhone &amp; Android The early 2000s saw more improvements In addition to faster and more power-efficient its ecosystem, the decade saw the rise of flash The only thing now missing was a compelling a company capable of cutting through all the red Apple made the first breakthrough with the iPhone, famously building its operating system multi-touch interface and desktop-class And because it was based on Mac OS ecosystem of passionate developers. were hacking the OS to make apps of released. The opening of the App Store in Google saw the writing on the wall and OS in the same direction. By giving Android rapidly stole share from Those old legacy operating systems are Apple one of the biggest companies world's most widely used OS period It is interesting to see how iOS and its Apple's massive Services division like Office made Microsoft king ## Conclusion I have noticed that the story of operating systems across its various form In the beginning, systems were limited by microcomputers, and mobile PDAs - were not most rudimentary programs. Compromises had Over time, the processors did get fast Mainframes needed DRAM and the disk drive had a craving for memory that was eventually OSes could not produce bigger programs Then finally after that, we or the interface. We needed new paradigms computers to get the results we need. For the PC So we cycle back to our original question. Are LLMs the next operating system? I It first took breakthroughs in compute to show Then after that, we leveraged improvements in DRAM memory to really scale up LLM sizes And then most recently, we needed to find new paradigms of interacting It is fun to ponder the possibilities of an LLM us. What new abstractions and environments What might that actually look like? I'm not sure about the answers for these questions.