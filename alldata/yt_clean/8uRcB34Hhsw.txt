Welcome, everyone. I am so excited to welcome you get to introduce This is a very early public about six weeks ago, and I am the first of seven We're each gonna speak and at the end, we will So as we're going feel free to add You can, you should be code either in the And you can direct any question just we as a team can answer So my name is Julia Silge. I'm an engineering manager And I have been working on the So Positron is a new next IDE stands for integrated and it is a piece of software to yourself develop software. So here in this somebody is writing a And there are there are a ton And, what we're gonna do during bit about what's new and or positron so that you can And also, maybe whether it might be The first thing I wanna tell for data science. We at Posit have just extensive to data science tooling, and we know that someone who data is different in some someone who is writing code for like if they're building a So we are huge proponents science as opposed to a no code or a But it is the effect that tools software engineer they're often not a good just write who is writing So all across our org, pretty much every single thing informed by how deeply we know that we can make you more productive by building kinds of tasks that So this is exactly why There isn't anything quite and we hope that it's gonna can do all of your data science. The second thing I wanna tell multilingual or polyglot IDE. Currently, as of today, it Python. A lot of environments that analysis are specifically built scientific computing. So tools that you may have you yourself have used that include RStudio, things like MATLAB, There's a lot of these. And there are real limits to especially for the high and use more than one for your data science. You can use more than one project, maybe R and Rust. You can use you can use more course of a week where you Maybe some projects some you use with R. Almost certainly, this is gonna happen span of years or our career. And so the, by contrast with for one language, Positron user facing features that are So here in this screenshot, you see that interacting seeing the variables But then there are back end the engines for providing these So here, the the engine in this can, it is where you're using, writing Python code executing it interactively and then seeing the results that you So it's a tool for writing work well for you no matter what As of today in its early stages, it ships with support But it is built in such a way Other data science languages whether they exist now or This is really exciting, and I know a lot of you should I switch right now? And you're already probably might push you to a yes answer. Like, you are one of those people who uses I do wanna emphasize that project, and there is no need happy with your code writing, But and the talks and the specifically chose them and are sitting here or who are a good fit for you, today The third thing I wanna that it is both It's familiar to many of you with us right now because it is, the design of it is inspired organization's experience Here, you see a very There's a console, a but it is being used, with For some of you, we This is what you This is what you have But for some of you, this may make you nervous what is happening to RStudio. So RStudio is incredibly It has, over a decade plus And for many of you, it is probably the best and that may be true So we expect people to use use for for many, many years to maintenance for RStudio Positron also is gonna feel are, in this room who have And that's because it is built that make up VS Code. You're gonna hear more but I just wanna highlight one makes Positron very extensible. And building on top of Code Visual Studio Code compatible want that data science specific One of the big investments that build Positron was new modern This already existed for Python incorporate it and But when it comes to R, we Positron has a brand new Ark. Ark which stands And you'll hear more But, it is software that allows front end, such as Positron. It gets you completions, diagnostics, debugging, screenshot shows. Someone is, running their Just a ton of different experience of writing R And with that, I'm our introduction. I wanna thank you so much for walking Hello, everyone. I am Isabel. And I first learned about science in a course called where my professor, had us all download RStudio. And that first day in You know, I got to explore data explorer, I could see my If I was confused, I just put a question mark next And I made my first plot I could explore And this this RStudio IDE experience feel so magical and I went on to do more schooling, and RStudio was a tool I finished my degrees. I took a job doing data And I realized that like, hey, this data science lifecycle tools I use or even if the Something that did change And it felt like there wasn't code first data science, Some tasks sort of felt like corner of a table. And okay, like, stubbing but it doesn't really impact involves you stubbing your toe over I wasn't able to find this minimized my pain, but maximized A few years later, I've now helping out with building Positron IDE. I hope we can convince you that you a bit of pain and maybe So how does Positron As a whole, Positron is segmented Up top, you have where you are running There's a file that shows you a sandbox for development. And over on the right hand side, there's a bunch of different code, that you're writing. It sets you up for success. When you open up Positron, You can see my Python You can see a console and you can see these two green help you understand the variables We'll call this four These panes are not intended science experience, but rather give you this UI bit more productive and we're doing some interior If you've written perhaps the first way you have figure out how to run Specifically, what virtual How are you selecting it? How do you make sure you're And you can see in Positron, there is something called You might recognize here a favorite Python, whether using Virtual Ed, or something else. When you click Positron will activate Python interpreter for If you want to swap between, select a different one, Positron discovers all of your on your computer. You're able to and it will also remember environment you have been using for you each time. And don't fear for the I'm talking about Positron but everything I'm talking you have multiple The drop down only is gonna So if you only have R you're not gonna We're only gonna show And a pretty common workflow you know, creating doing all your exploration, and maybe copying this out into a some sort of artifact Or perhaps you're running again copying and It's all to say that data iterative work, and it's convenient to have the data science Positron does support But if you're someone who we have an interactive You can use command enter You can move back between It kind of gives you You're able to explore your final results back into perhaps part of a pipeline. And the console has all the you're able to use And with the right we're already off to But the first thing you're data science lifecycle And one thing you might be this database what tables do I have on hand? And in this four one of the panes not like stubbing your toe pain, is when you connect there's a connections pane. So when you create this like SQLite, you're able all of the rows, all of the columns and their glance very quickly. It makes databases just a With some data in hand, you're probably going And the first question you're what does this data There's a few different ways explore your data. If you're viewing there's this little 'eye' Or there's a table that shows can even just type view All three of those to the Data Explorer. When you open up your Polars or a Pandas you can see the percentage The name you can see in this Ferris wheels that we're looking If you want to do some really you're able to filter. You can sort by or maybe you just want to look between one hundred and fifty If you know what data you're going to want to And sometimes tidying It involves creating lots and while for a while you can at some point it just is too There's something called As you're creating it shows up and it gives you a You can see kind of on this name of the variable. In the middle it'll give you the actual value of or some sort of other And furthest to the right, you either get an icon that you like opening this up in the the type of variable it is. We also allow you So let's say we have this maybe what all of the names are without having to type out in the search through your information We're also able to see functions And if it's something like perhaps a new there's reasonable defaults what you have in And so countless times as you're I've run into a time where method that I'm not quite little confused like what does method should I use? And normally my workflow finding the documentation, finding the function I want scrolling through documentation, perhaps getting distracted ending up watching cat videos. You know, who knows? And that was something I loved find in the Python world. So Positron allows you to get or modules in Python just by It'll send you directly to the and it gives you kind of hand directly for what you want. It might feel familiar for You guys already had but this isn't something that So when I tell you this this is cool stuff here. Especially when you can scroll So you can click through, You can see what, you Gives you a great And after you know you've it's time to do some plotting plots on their first try. If you do, maybe you've I'm not quite sure. It looks something There's a plots pane as you generate these they show up in the plots pane, and you get this film Between each plot, where you've come what doesn't as you're trying explain your data to others. Or if you're someone who wants object, you can see it Plots pane. You can see here, like, we're we're adding different labels, and you can also resize and pane into a variety of formats. So we can see we can and we can export it as And finally, it's time to So how can we share the artifacts that we're We have something This is also something that coming from RStudio, and this plays nicely with the might have already seen and This is interactive HTML that automatically This is a Quarto extension, but So when you run your You can interact with this You can also see APIs, like great tables tables and So Positron is doing a your IDE space. It's adding in new furniture you keep stubbing your toe on. Hopefully, this allows you to walk fluently and avoid a We make these tools to help you can be messy business. It comes with its own pain. My name is Tom Mock. I'm a product and I'm excited to talk a one little area of Positron and little design So when you first start you might want something Right? In RStudio, You can see your grid, or you might be opening things want to kind of walk through explore individual cells as operations or summarization. So, of course, we built this into Python and R. But we didn't wanna stop So we've actually built what we call Of course, it still has that data for in terms of individual end to see a column and But we also have things like summary statistics that are measures of central tendency values, for strings or There's also, missing data and column And lastly, we also have a persistent create, delete, and see the filters you've applied Now, of course, this is not intended to but be used with your in So let's talk a For the grid intended to be this polyglot in R as it is for Python. You can, expose these data frames view in R or Python, and that will then populate it the workflow that Isabel showed What this means is that the Python also updates the So here, I overwrite a column to 2014, which affects the, variable column as well So this is reactive to the move back and forth between them. Beyond that, though, we've tried to make it something So, again, in this example, twenty four columns. And in real time, I can scroll horizontally or the data frame, and it will kind We do a lot of clever fetching different windows efficient in this way. But we've also sweated a So things like sorting, it's multi sorting. So you can sort multiple which order you've sorted them as needed so you can modify your We've used monospace fonts in like nice decimal alignment, problematic things or differentiating and l of various capitalization. And then lastly for the grid, we've worked really hard on can fit as much data possible as opposed really wide columns when you've got a So the grid's great, but We've intentionally decided to of the data viewer because it you've created no matter You can imagine I might have a columns, and I might forget I So we want you to be able to see But you can always quick at one specific column and have This also gives us the ability So not just, filtering but for something like strings, it contains or starts with or okay, this match. And for numbers, we have operations, less or even between two values. So a lot of power here in And then lastly, more closing which, again, has a We have the type. So as a symbol, we can show you If you double click it'll instantly move you to that We show you missing data. So even without having to do this column is a or it's got a few missing And then there's summary appropriate things for strings different data types. So this has been a Again, trying to sweat some of the data explorer can offer you. We're also working on sparkline the summary panel more direct connections And thank you so Hello. My name is Jonathan. I'm a software And over the last few talks, we have looked into a lot Today, I'm gonna be talking to you works under the covers. So by the end of this talk, you You'll understand why we You'll understand what the And finally, you will understand So let me start out with which is why didn't you just RStudio? So to answer that question, we need to kind of go back which Julia talked about a bit. You know, we wanted to multilingual, a polyglot IDE And I want to focus in a polyglot IDE. So to understand why it's very polyglot IDE on the you need to understand a little So in RStudio, it's basically Everything that is inside the process that runs R, all the It also takes care of saving and doing everything else. This, by the way, is why a lot of RStudio features are slow or don't work The only other piece which runs as the chrome It's what draws the window Here's another view of the same and this can kind of give you difficult to add There's no place to put it. You can run Python in it has to run inside of R. So you can see why this is a on which to build a truly Let's look at the other We want a polyglot IDE that You know, people but we get a lot of comments you know, I love RStudio. RStudio is really great, but it's really great, but could I please please RStudio is really great, but could I please have session Could I please please find Could I please save and Could I please have shortcuts? Could I please have Could I please have a tree view? And, my goodness. It's we love all but there's a lot of them. Right? And these things all which is that these are These are IDE features. Right? And so with every we've had to make tough choices those IDE features or whether we And that's why we made the on the RStudio platform when we So Positron is a fork of OSS, and you can knowing what Code OSS you do know what it is because for a proprietary IDE that which is called We are not the only Many other companies have fork code specific for other purposes. For example, there's a company called Cursor IDE with a So we are doing something We are taking the Code science tools to it. And we've already covered this but what that looks like foundation and adding tools plots and visualization pane, an amazing data So this brings me to the which is why isn't Positron So to answer that question, I've got my good friend So Microsoft learned a lot from, their experience IDEs like, Atom, for they allow you to load of part of the IDE. This can lead to a lot of clutter And so when Microsoft they learned to put and run them separately The other thing Microsoft people the ability to do extensions, they just It is a mess. Right? And so Microsoft, learned their lesson and Visual Studio They can't contribute custom They run on that They're ephemeral. They could They stop running when And finally, probably they don't make sense as a Right? R and Python and these other language And it's very difficult to provides that extensibility when you So finally, let's talk a little bit Positron features. So R and Python are extensions. We call them language and they talk to the code way that most other So VS Code has an API, which is what allows extensions completion and diagnostics. So you've seen a lot of and we have added a extensions to not code completion and diagnostics, but also plug into our and the rest of our tools. It's important to note then sessions live in extensions. And this is important not but also for this reason. How many of you have Yeah. So this is what happens And the reason that it crashes as we just established, Everything is coming from R. So this is what an R crash Here is what an R crash It's nothing. It is. You will lose. You will lose anything you've got in but the rest of the IDE will The final reason that it's these things and extensions is extended to other And this is something Julia which is that we want Positron more data science And all of the R and Python into a public API that So that it's not tightly Everything in the Positron core, can be added to by So we have Positron and we I want to talk for just a things talk to each other. So when we built Positron, we wanted to use standard protocols And what that means is that subsystems talk to Positron, they use protocols that have data science community. When we run and execute code, we are using the When we do completion we're using the language We've only added our we have Positron specific, features that we need to power. So quick recap, it It's focused on data science. It's a Code OSS fork Those extensions live, in We use existing protocols for other people to plug in, and we have a public API that lets Hello. My name is Lionel, and I'm to talk to you about Ark, which So Davis and I, are and we've been working for a number And for the last year, we've been working, on Positron with the mission, to help making, R support the So we've seen with Positron is a multilingual IDE, and we've seen with Isabel, that we've broadened our And so the question that we where does that leave us with R? And the answer is that the R support the most and the result is Ark. So when you use R and Positron, Ark is behind, most So if you type R codes Ark is providing If you need to execute a piece from R, that goes So what does it take development experience for R? There are three main things First, code execution, so sourcing a script or Code assistance, so that ranges to diagnostics to let you know in your code even or, contextual help. And the final piece We want to make the debugging least frustrating it can be. And each of these, areas is, and we'll see in this talk why this And we'll start with execution. So here you have a You have an open R file, You have a console And the user here has got some output in a So where does Ark So you can think of, code that you're executing Positron asks to the to Ark. Ark does a bit of magic back to Positron, which is able to display Same thing, when Ark does habitual magic after Positron and provide the So the question is, What is the language that Ark and Positron And to us on this, we'll take a step back and Jupyter world. So here we have a If you're not familiar with you have a document You can write code in the cells, and you execute these cells, and you get the output So this is very popular But the thing about Jupyter is that It's multilingual and it's even in the name. So if you do not know, Jupyter And so the way they pull implementing support They have independent And so when a Jupyter notebook code it's like a question, the kernel gets the question, provides an answer And Jupyter came up with a standard And in this case, it's an execute request that and the kernel, provides And that's exactly what we Positron and Ark. And so Ark is a Jupyter kernel. And, actually, in this notebook, this is Ark running running the R code, And so in Positron, You run piece of R code. This is an execute request and Ark provides back And the nice thing about this Jupyter notebook. It It can be any project that So a few weeks ago, we were super excited when so Zed is this new that implements many And a few weeks ago, they've implemented support and they made sure that Ark And so here you have R code And we hope that many more able to do the While code execution is certainly it's not the only piece of the puzzle We also think that it's really code assistance Now code assistance just means for you to write R code. That could look where we analyze all the files a little tooltip that says, hey. We think something's wrong here. You might wanna take a look. Code assistance could also or you're working You don't necessarily need to We can pop up a signature Here's what they are. Assistance could also look Looks like this where you and that takes you straight the function inside Now these are features that you might but Positron has a number of are unique to it as well. One of those is help on It looks like this where and you get this really great This is great whenever you're state of writing R code. You don't necessarily You just kinda need to quickly You hover over it, get and you go back to work. Now these features in Positron executing code. Code assistance or, code execution worked It allowed us to ask questions and CodeAssistance With the Jupyter protocol, that really allowed us to standardize With CodeAssistance, we used which standardizes the questions We ask a hover request of Ark, Ark can send back a hover The reason that, again, that that is so cool is because Ark It doesn't care who's It could be Positron, it it could be some other IDE. As long as it implements the server protocol, Over on the right hand Ark, is doing quite a bit of work to Part of the smarts of Ark is called tree-sitter. Now the only thing you need talk is that it takes in all It runs it we run it and it spits out a structured which honestly doesn't even However, we can use that and power we've been talking about today. Now we think tree-sitter because it works As long as you have that teaches tree-sitter how then you're good to go. The problem was we didn't have so we had to build one. Now we've built it to work but as it turns out, there's actually a lot of R grammar for tree-sitter. For example, if you were to Zed or Neovim or other editors it can power things like syntax immediately over there as well. And there's also one other big It's GitHub. If you've been on GitHub in the done a search, say for you may have noticed that gotten really, really good. In this case we found a If you click on that function the definition in the project. This is just like jump to It's a great way to actually having to pull it down quickly. The reason this works is GitHub code search Now up to up until a few weeks because there was no R We've built one. So we were able to work with code search engine and get them into their code search engine. And as of a couple weeks ago, It works for all R I have one more thing about today, and that's the debugger. Now if you've ever if you probably have done That's the idea of sticking statements inside of your Hopefully you get some more figure out where the problem is. A debugger is one You actually get to step time, stop at any point like mutate, and then kind of In this case, you could use the variables exist at this point in It probably won't surprise we've implemented the debugger standard questions and answers. For example, Positron what variables exist Ark sends back a and that populates this Now with code execution, we With code assistance, we use With the debugger we use a third Now I have one demo of the because I think it's super cool. This is the most So I'm a tidyverse developer, so I work on dply quite a bit and So I for better or worse. So I have gone ahead and set a We can trigger that breakpoint That drops us directly We can do a couple, steps You'll see the debug and you get your very important But I actually wanna talk We've stopped on a It's the boundary between the code of dplyr. As Tidyverse developers, we write a lot of c and c++ to feel as fast as We know we're not alone. We know that you write Rcpp, cpp11 because you want That typically comes While you get performance, you end up losing a lot You can't step through the code when you like you can with R, and you kind of end up debugging like we However, in Positron, One more step, and we've code of dplyr into This is absolutely insane. It's something you've never same tools available. The debug variables pane, you you can look at the call stack, everything is just there. The way that this works is implemented the Debug Someone else has implemented the C Because they use the same answers, they just You can step from R and everything just works. It's pretty magic. That is the power of using the Ark. So Ark knows a lot about R, and it does a lot to support And it does this with, standard And we've seen using standards like this, allowed us to contribute to the So we've seen how Ark can be not only in Jupyter Notebooks, but in any front end that implement We've seen how by we were able to useful features for Ark and to other projects like GitHub And finally, we've seen how, as tidyverse developers we were able to benefit, implemented by another group debugger, will benefit, And so that's the great standard is that the So you can be a Jupyter and benefit from all this that Positron users are. And so on a personal Positron would implement I was super excited because for RStudio for a long I've never actually So when I was a student, And when I joined RStudio, this was a tool I so I kept using it to But I was a bit jealous of my, colleagues that were using the R support is And completions, for instance, were much better than So with Ark, I immediately write a bit of glue and finally enjoyed the same level of So that's not what I switched from And and with the ecosystem I don't miss much from, So I have everything that I with other languages But the point is that I Like, it was a free choice. And so while there's to make this a reality, that's the promise that we That no matter what tools and your R work, Ark will be Thanks for attending the So you've heard that Davis and tidyverse team to And if you just just away, you see that I too am on and I have perhaps found it even And there's at excitement, I'll call it, So one is having to write in quite new to me, and So there's been a lot but also working in a new IDE And so you're seeing but so all my work over the either in VS Code and that's required And as we're all saying, no But if you're a long time take Positron out I want you to have So these are gonna close with test drive as So my first tip, which is that I encourage you to work inside It's a really important The good news is that You can make it but you do not have to, analogous to a And there are many areas of the are warmly encouraging And that allows to turn on cool So once you're in a your file explorer In Positron, because you can't even browse your And that'll allow you to see the files and it will also set the interpreter, whether it's Another super exciting feature that you for R users is it's actually versions of R living in harmony between them with quite So you'll be able to access down that we've shown you. And if you have it will be up there as well. But really important for the R versions of R there if you've and the console will always currently active. So I think in, in this the current release of R, and the old release of R. And so I wanna give a quick This is not part of Positron, but it's a separate little tool because it helps our users So it'll help you install switch between which one you want And little little known fact, this is actually easier to which is like a So this is actually especially multiple versions of R that And the new IDE gives us a So Positron will default Meaning, when you fire it up, your workspace is gonna And when you leave, we also aren't You can live differently, but we're gonna try to help it's good for the long term Because if you have you really wanna save And if you have a really, you wanna explicitly instead of having it sort of Another really important command palette. RStudio has a command palette, but at least as it came late enough in the using it, as Tom well knows. And, but you you really need Positron, I would say. So control or command beautiful, wonderful, long menu of It has a very So you just start typing think you wanna do, and here I've brought up a are super relevant to R. And in particular, you'll see lots of R package So a lot of things that you RStudio with a button or some the build pane are palette Positron. But they're there, but they're not sort of smacking So you will go Positron is very customizable, so you're probably gonna want And if you search in your there is an optional RStudio RStudio users will So check this box, and your RStudio will start working and Positron. And another thing you might wanna So that's another thing you from the command palette And you'll be presented with looking layouts, and the top and they're layouts we think you might And the very top is the most reminiscent of seeing in RStudio. So the last thing I wanna talk the left, and I want to demystify So the one with a lot of little into your extensions. So you might go there at anything or you're being extensions you might like, and allows you to install extensions And this is gets at the thing Like, there's lots of capabilities that don't have anything So I love rainbow I have this rainbow, and this is a sampling of the have enabled in Positron. Right below that is So if your current workspace testthat, this will I don't think many people so this is like a It will give you insight. It'll show all of all the individual helps you to navigate. You can execute them one at and you have a little icon you, the current passing So seven of us got the pleasure of but I wanna make sure that you much larger team. So these are all the people contributed to get us to the So I want you to I want you to see their faces, and we would all like to acknowledge And that's the end of both my so we will have a If you want to install Positron, with this sort of beta you you still need to go which is this one up here. I would go straight to the Wiki, which will give And then we really look forward to test drive and give us what's working great, and we Thanks. Testing. There we go. I am so excited for I have a few questions for you some of the questions together. So if you don't get your What is Positron still missing supported in RStudio? Why would someone I'll give one answer. One thing that is not inline output in Quarto files. Oh, and some of the complete, complete sort of affordances So the Positron leans on this kind of work, whether you're writing Quarto So depending on so a lot and we'll really get But if you have really advanced preferences in terms of that might be something There something else we That that'd be a big one. Thank you. Are all VS Code extensions What is Open VSX? And especially, can Perfect. Yeah. So, Positron uses a, extension Open VSX is a vendor neutral, repository of VS Code So Cursor uses that, a bunch of different, forks that There are some notable extensions that I think someone actually So GitHub Copilot is one although there are, I think, ten or eleven other providers And Jenny was actually using Continue is actually So you could use, like, Ollama to run a generative AI your machine, pay nobody, send your data out. So there there's some Thank you. What is the timeline for Cloud? Soon. On Workbench. So I'm also the product We're actively working on Jonathan is actually gonna be a few other devs on the that along with So stay tuned. It will still be in preview on But we'd love to hear your Thank you. Will there be push button Shiny apps documents, And actually I'm going a team that I am on So yes, there will be. You can go to the You can use it in both Try it out. We'd love Yeah. So it's in an extension, which really the why this these some of paying off in some great ways, the Shiny extension, Like, by making some we're really happy with starting to grow up around this. Awesome. Let's get to some lighter Yes. Well okay, yes. But, also, you can like, there's one zillion So you can there are, I think, three built in but you can bling out your IDE. Like, Isabel's is always, And some of our coworkers add pets are running around little animals are animated. Like, because these your ability to customize what For you or coming from RStudio, the extensibility and How does Positron handle For example, does it still try and statistics like the If you're asking about the there are some But, again, it's kind of the idea memory data already. There's some long term stuff predicate push down, basically doing some of the ondisc out of memory data, For R and Python, it would be the same story of DuckDB, databases in can make queries in R, Python that communicate with an If you are debugging does the Ark debugger step Will it step into No. We thought a little but we are also not sure there but that's certainly something that We do have some like, increased So if that's a particular search through, add info about your so that we can prioritize, increased support for versus other stuff Is it correct that RStudio there will not be focus Well, I mean, RStudio has some got Maybe, Tom, you'll be a great Yeah. Luckily, Kevin was the person So Kevin and Gary, Ron, and a few others are still So you can imagine an expansion of our focus working on the new IDE and RStudio. So committed to RStudio. Some of the feature requests are, like, theoretically some of those might come to kind of the end of there's a new project Thank you. How is the Git That's a great question. It's been I'll be I'll be It's been a little divisive. I prefer the Git because it inherits But for some folks who have time, it has taken a little Do you wanna speak Like, the adjustment? Or people just want threaten to burn I do use the Git functionality but I did love the Git So I just find that I usually So no. Okay. See, divisive, man. I am Like, Rtudio's is good, but, Like, it completely changed the Git stuff over there. And to be fair, you do use an like, a Git thing most So I was, like, only RStudio. That was my little bit So to go from that to Positron it opened like floodgates. I think it's really good. I'm with Jenny on this one. I love the simplicity And if I need anything I go to the command line, For R package developers who will they need to learn how does Posit intend to We don't. TBD. Okay. I could talk I could talk about So Positron does implement something called Which is the way that R control it, and automate it, packages like use the RStudio API a lot and today in Positron, So there is some support. The other thing we don't currently So if your package, that doesn't currently you know, other than the API calls that are So, those are both areas that and add support for. But as of today, what we limited subset of Do .Rproj files load It is not used by Positron. Positron's, sense of what is the space in which So there's not an explicit file this is my project. You can open a folder and then you get those benefits workflows, but there We know things like, here were like like, you I have not run into anything something like here. So it in many ways, it's, like, lowered the bar for this is what I'm But I think so think approximately a folder a RStudio project. Like, they're And I'd say it's actually than there was before. What does the It is a P for Positron, And, yeah. Yeah. That's that's that's what Nothing more deep Can we connect to existing As of yesterday, yes. It is a very But if you, if you I can tell you there's a we added, which is a secret after today, but there's a setting called So if you go in your settings it will allow you to connect a back end Linux system. Perfect. Is there support for Like, you can use Python virtual from the dropdown, or is Just the interpreter for now, but there is an open issue environments pane that choosing, like, renv renv does work as of today in it works, like, in RStudio that use that library of packages. If you're particularly I wanna I wanna have more UI renv environments. There's an open issue that details or to thumbs up. Will it be possible to share collaboration, like, So Live Share is another works only with VS So in the future, there might be more That's, you know, a goal of You can kind of both in Posit Cloud there was an idea which had real time directory sharing. I'd love for us to go in that like, the road map Can we run Positron in AWS EC2? Positron is a desktop IDE. You have remote, kind of SSH, the work that Jonathan where you can say but my compute is connected Or you can have it which could run either on on- Google, wherever you want. Will Positron be integrated RStudio is and when? So double parted question. There is a Databricks extension Positron. So that you could use your your desktop and connect or Spark compute. Posit Workbench would add which is an idea of, like, rather than using it knows who you understands the data governance and So you don't have to worry Okay. We've got about So I'm gonna ask a but why not simply Well, I mean, the real the real answer there vision for this is that it is for Like the like, today, you know, many of us are using R that may not be There's really exciting stuff space, and we wanna that allows us have the packs as they become important. So it it truly is those of us who have it's kind of a headache because layers, a lot of, like, oh, but this is the part But it is on purpose so that support you for be an excellent tool for your you know, what what twenty years from now, as you So it is, you know, it's it an RStudio for a It is something that is built I'll give an equal kind one of my good friends at Posit there there's some But my good friend, and he's a QA engineer So that's the real secret Yeah. Let me say one final thing. So us as a team and anybody posit::conf who has Positron is gonna be in the We're gonna have an open So if you wanna come up we invite you before the keynote And that's it for us. Right? Yep. Thank you so much.