Should I call this a AmAs or Q&amp;As? That's my life question because apparently a few people don't know what AmAs is, Q&amp;A number five. Can't believe I made it to five already. We've got some great questions, Is topical in English word? In any case. I'm rambling. Sit down. Relax. Get comfy. I got your questions with me. And let's begin. Beyond coding, big questions to start it off, How do you manage your own high Sometimes have the feeling of being left while looking at engineers, creators Do you also have that I recognize that feeling, and more and more I try to let it go and not necessarily compare myself It's hard, I feel like, because motivation for me But I feel like there's also a downside you unfulfilled or wanting too much in too To give you an example, of the same age or younger or are just in a better spot career wise, Maybe years down the line. But they've already made that right. And because they're younger, I feel like I'm missing out But those people do not have If I want to get to that point, I feel like I should get to that point Right? And they don't have They have their own journey. They got their their own way. They might not have had the same struggles choices. I feel like if I'm going to get there, it's And I feel like accepting that that allows me Because if it's my way, So then I'm not really behind. I'm just on my own path with my own pace That is something I'm very stubborn in. I like goals. Maybe not long term goals, If I have a vision to get somewhere I usually have to fully believe otherwise, and I'll give it my all to get there. And then it doesn't really matter I feel like I'm a really good sprinter and with this podcast So it doesn't really matter I'll get there if I want to. I hope that answers the question. If it doesn't reach out to me Now this is one If you could change one thing what would that be and why now? This is a difficult one because I always So then should I really change something? I think I can change something change the outcome, The reason I started Someone said, I'll facilitate Yes, me, pick me, Yes, then I can do it. It's way easier to have help I've always gained a lot I still do watch a lot of YouTube, having fun, interacting with each other, I thought about getting my own microphone, playing some PlayStation And I. I mean, sometimes I still think then when I was in high school, And I never did that I have to do this and I have to have this And what if this and what if that? And I never started. All those thoughts I feel like I should start things sooner, maybe faster, but it's kind of a dilemma I also like doing things So if I start more things, then I can't So maybe that's why I don't start things, but I feel like some stuff I listen to a lot of podcasts, especially now that I know I wish I would have started earlier and I But yeah, who cares? That's the end of the day. It didn't happen. I could have done it, and maybe I Other than that, there's probably one when it comes to career progression. A lot of my work, a lot of my progress if that makes sense. I feel like if I would have planned more sit down and maybe write down those goals, But I feel like I could have done more especially early on, I would come home I wouldn't really work on self-improvement I would just have my work I think And then when I would get home, It's probably because what I was doing, in operations, Maybe even because nowadays I do a lot of extra stuff. It's because I love doing it probably. And maybe that was missing. So then the goal should have been passionate about, and I could have spent Maybe that's something What is the best piece of advice Best piece of advice I've ever gotten. It's hard to pick one I like don't have any expectations, That's one that really stuck with me. Other one is if you want something done, Nowadays some people don't answer Okay. But especially when I was in operations before joining operations, I don't like talking on the phone. I thought, I don't like I'll just text, I'll text and they do But yeah, in operations I really needed and they would answer Or if I would need a piece of information, into the documentation Or I could do one phone call, 2 minutes I got a lot of stuff done because of getting over my hurdle I don't know if that was a piece of advice I saw someone do that and he would get So yeah, I definitely adopted that Try not to judge people, try Sometimes try and hold your opinion I feel like that's a big one in kind of reaching to a common ground It's a hard one, and have opinions But I do think it's valuable to put that aside more consciously Apparently, and I realize this more or probably the space you're in, You will find people that you've worked People know people that you've worked It's actually pretty tight knit Your connections know each others and a lot of people know each other. So don't burn any bridges. You've talked about transitioning from Why did you make that transition? This is an interesting one. Why did I do that? I thought it would be fun to be more so creating things rather than maintaining I feel like I did partly software It was a lot of Python, always liked programing because for me Maybe sometimes I didn't even know what I was writing, but if I had That was kind of my mindset back then I enjoyed coming to the right outcome Then I went into operations it's super broad. I can go anywhere, I can learn a lot. That was kind of my mantra going in there. And I felt like if someone fires me, I'll probably not mind that much and be happy That was the initial mindset and at some point because I would see exactly and I would see that with that input and then I could even view okay, this is probably where it is. I don't think I ever was like, Here it is. But I always had a hunch and the feeling of not for I was really unfulfilled and I would not know if I was actually in the right area I like to be right, maybe, and I never knew And I felt like I liked operations, on the creative side Why did we build this way Could we have done it differently? What if I knew from Operations a few things and I could implement So looking online, I saw development and I was like, Also, back then in operations, which was a lot used by project It was not anything scrum related at all. It was like a very specific tool. Yes. And the person that managed that tool a program manager like when people needed a bigger budget committee that would grant that budget the e-commerce side of things, They're doing a lot of fun stuff. They're working They have a lot of smart people. You're very smart, You should go there. And I was like, Maybe I should. So she was like, If you want, And you can have a conversation And I did that. And for me okay, what are they doing right? Because if someone so drastically says, and they're working to me, I'm like, Let's see what they're working I was all I'm always skeptical. So I had that conversation. And funny enough, just the week before that conversation, and it was like, okay, these plans are not This is going to go in the garbage. These things are going to get sold. People actually, I mean, had worked at for a few years It was like my first six, seven, And I was like, okay, things are changing. I don't really know how that impacts me. I feel like my experience was a bit too, But in any case, I had the conversation. It was like, Well, I can't make any moves people in operations need to go back to the different companies and I might be able to open up a position And then I was like, I like the director a lot. I got a good click with them. That's probably for me. Choosing a position was like one of the most important aspects was me liking someone I could look up to, So with that in mind, I was like, Then it'll come when it will come. And it came a few months later could apply to some of the organizations It was said to us and it was not two positions No one organization would have another few positions, So if you wanted to kind of same things, you could do different organizations or maybe two different things I didn't like any of that. five positions and then I went on the whole day I always had a separate personal phone So through my work phone, got a bunch of calls, and apparently some people made which I agree on, and they chose two I even applied to some senior positions and they were like, So they picked the more junior positions and even positions that were at different organizations. So no, no, they were at the same organization, but where I liked the people. I wanted to talk to them. They didn't even put my application I found that out later And I told them something in the lines of You can't stop me and if they like me for the position, I know it might be unfair, but yeah, I'm going to do something and that is getting a position and probably also good Otherwise they wouldn't pick me. So yeah, I might have not been as fair, I felt I deserved. So I talked to everyone that same director this is the position, We know you don't have any software You're going to do X, Y, and Z, Yeah, this is what I offer you. He was the only one that actually said to It was like a 30, 40% increase. And I was like, At least that's something unique, right? Someone that already can say, this is what you're going to have. This is all the options full transparency, And I didn't have any of that So then I was like, okay, Funny enough, I joined The person that was going to manage He got a new manager. He was just one week with the company what he had to expect either. The person that was going to mentor me was not there anymore. He was just there his normal development as well as within a few weeks I went to my manager. I was like, This is this is now. No, I'm not learning anything. Like, I don't know what I'm doing. I'm doing This wasn't the deal. I want more. And then he finally put me in touch that was there, And he was like, Patrick's that you guys can do, And that's really where my kind of learning journey It was very much, Reactive again, but still Probably if I didn't like it as much, I feel like because I'm not and then I would have probably moved on to something because I feel like the history I've always leveraged, I could do the same I don't know if I'm going to be software Like how long that's going to last. But I'll always take that experience with me and transition to something What languages are you currently learning Zero. Actually, I'm working a lot with Go. I dabbled a bit in We had kind of like a hackathon day, and Rust has a way too Things are way too complex. I didn't feel productive at all yet, I want to learn Spanish. I've always wanted to learn Japanese, I'm not learning any programing languages Maybe I should start though. I mean, oh my goodness, if you're dehydrated. Yeah. When people say you'll learn this, look, when people say that gets fake. When people say what are the realities How much time is giving to learn right away when you're inside of work That's a big one, and I feel like it's when I say Usually mostly it's about the domain and I feel like that's more certain set of like technical If there's four things you can learn one or two. But ideally and then the domain that you're in, you can leverage your past experience, Like I've worked in more in e-commerce, and right now I'm working I've always been kind of new or sometimes learned on the job. I feel like if it's within a team and you have a safe environment and you can do that, you have that to get up to speed within a few weeks, because you want to be productive then you can learn a lot on the job, but it very much depends Mostly when people tell you from a team perspective, That will mostly be true. But for me, in the context I've been, it's been about the technical but my way. More on the domain side of things. I missed a little bit of it. How much time is given Those I can't answer. I feel like the biggest thing you can do, ask those questions. How much time can I get from you don't want to commit to something and you don't want to commit to something So you have to clear that up in the year. And part of you clearing up the other people, open cards on the table, I mean, I can't really give that as advice but I feel like as long as everyone is You can see if you can do it or not. I would say you can spend personal time on it, if you're really passionate about it. I feel like passion will get you far, will take you to a place where you can spend Otherwise you can do it. But it requires a lot of discipline. The best way is if you really enjoy you'll also enjoy it in your personal time Basically is only writing to win, bootstrap If so, which one should I learn? I don't think it's going to hold you back. I think it's going And then the other I would say frameworks, On top of that. I think vanilla access is always kind of and you can do a lot with it. You can do almost everything with it. And that's also how I learned was CSR So I learned that. Then for me, learning On this project we're using tachyons, which is kind of like kind of like Tailwind. Then I tried to at like an innovation day, and I joined a project JavaScript and we didn't have any access. We used Bulma as a framework, so it was I feel like as long as you understand you can make a lot of the tools work. If your project has those tools, then it might help to do that on the job, But it really depends on the project. A lot of people I call it Tailwind is a thing Let me see if I can apply it right. They take an existing project, with Tailwind They will always say it's a brief first and at least they You don't have to master all the tools. You can form an opinion This was my initial thought. I would love to learn more or with a colleague I think that would be my advice. I get a call. The vanilla stuff is always The frameworks build on top of that. So understanding the fundamentals the framework more aptly and understand I don't know how to answer this. Why? How many projects should should I incorporate in them Yeah, that's the hard part. I don't have a portfolio, I feel like I've always kind Let me just let me just put luck there to land the job So I think being good at communication But if it's hard I get that having a portfolio What I would want to see in that someone has. I don't just want to see a portfolio that anyone that can follow a tutorial What interests you For example, I've seen someone create like a website I thought that was cool which they had never worked with before, Then they can learn something as well. Otherwise, I don't really require someone to work and for me, beforehand is not going to matter I can hire someone without a portfolio on the initial interview And the interview is going to be sure. But more about But I'm also going to ask questions an opinion about how someone thinks want to collaborate with them, if they are someone I would trust because if I trust someone, from the get go. the conversation, That might not say could say something So then it's just not a good match. Technical expertise wise, and a portfolio can help you show that. But usually with conversations or what someone doesn't know Basically, based on what they focus on and based on what they say If you don't have any previous experience, then yeah, but again, find something that aligns Try and build something in a web app A web app or a mobile app, as well as kind of your technical skill I think that's a big one. But I look for someone as someone that is curious, I think that's the biggest factor. If you're a sponge and you're eager then I'm like, okay, and it can grow the right direction And that might be a good ad for the team if people teach, they also get better. So it's a good ad for the team. I hope If it doesn't hit me up, How important is it that a software in its initial stages outsourcing developers to build your MVP? Very interesting one. And I've never had a SaaS company. I've never had a company. So take this with a grain of salt. I'm on a lot of subreddits, I feel like you definitely need being a co-founder of being a founder You're giving away And if someone does not have any skin being a technical co-founder for that matter, it's really hard They don't have any skin in the game. And if you're not saying the right thing, At the end of the day, someone that is a technical can make sure can make sure you focus on the right Also low hanging fruit, not over developing or over focusing on quality, really Because if you're in an MVP I think right product market fit, something that is going to then scale For the initial phase, I would probably I would build myself I build it together with them. If they think it needs a bigger team, Because if you re working on MVP for you can throw that in the trash If you really want to build to also then completely scale then it and help them not have them help you out They can put out to what you've imagined. Again, only when you have kind of product and you want to do and then you can take it from them I feel like that's where a consultancy can kind of go hand in hand and they can challenge But at the end of the day, consultants If you can do it in-house, And I feel like if you are adding value, and allow people to have skin in the game because then they're really going to care. So let's say Then you can form a team around this That is what I believe. Again, I haven't done it myself, and I would always give our stock. I feel like maybe I've listened. I've listened to the show and they also talked about that So that's where it's coming from. That's why I say give out stock. Okay. Yeah. What are the traits that differentiate Senior level or not, those really matter. I feel like that's a hard that are really senior They get a lot of stuff done. They challenge the business They really try and understand the domain. They don't just want a how do you say that when they speak, and if there's a mismatch in the language, what is it? Basically, they really want to understand because then the product the domain that you're in. And maybe it's because I'm an Iot, but when we say device versus unit, What do we mean with that? And let's understand each other, I've seen senior developers, And then it really depends on the type of developer because for me, great developers real quick because their throughput If we have to pick a database solution, which means we only have a few options Past experience plus research out there, research shows this is the best option We pick one We don't do too much research. We don't go analysis paralysis. We pick, we go, we iterate. If it doesn't work, we pivot and they're fast enough to really focus on the decisions And yeah, the throughput is just insane. I think that your pinpoint if they can do that, if they're not afraid because they know they can pivot makes a great developer that is at the early stage of a project once things are a bit they focus on conventions, making sure and making the team more efficient. But once that is established, other people, making sure Because then there's this They can focus on communication, They can basically go in whether it's product owner, scrum, make sure that the whole operation, is more smooth For me, that makes a great engineer, makes a great team player, even I feel like if I can give them they would still make sure It's because they're a great team player, I don't know how to phrase it, but I want them in my team So I can learn from them. Yeah, and they're going to add, There's a little if I'm out of breath. Does that mean this a red that end that confirms it does Yeah, I think so. I just have a few questions and I already touched on hiring, actually. If you were a hiring manager, how would you conduct the interview For example? What questions would you ask and when it comes to junior frontend role? What would I ask? Questions like, Hmm, hmm, what would I do? Let's say, what would I do? I would probably find a problem space I would want to do that Now I know it's confronting disheartening to a lot of people. But for me, that's the quickest insight And I hope this is my hope to have that collaborative session because I feel like if there's any reason why it's going to be Then more direct. Maybe direct is the wrong word, At least I have a better place because I've actually seen the more hands that is going to help them and it's just going the insight that I need to see When it comes to the questions, on tooling or on what they would use, not necessarily but I want to know if they have an opinion if they genuinely care because I want to talk to them I want to have a discussion. I want to see how they interact, I feel like that's very important. And also if they're open if they don't just read a book and say but say this is one of the options and I want to know all the options options aptly. When I'm on the job, I feel like people that are eager, people that can make this their passion But people that are just eager and hungry Those are the best people. And usually that's what junior developers And having that the team is going to be challenged, and things all of a sudden have to be more so explained, have to be defined, because someone is going to challenge And the menu, how do you say that? The genuineness of that question, I feel like is going to contribute because people are going to be like, okay, We have to really form their own opinion before you can teach it to someone else, And then the shared understanding, the team for me is just going to be more And for me that is also what I expect of people Questions hungry, learn, eager stuff like that. Can you share any tips for hiring senior Any tips for hiring senior developers? For me, again, senior So for tips on that hour, about their physical previous work I want to understand how they communicate, I want to talk about them in a case what would have happened. If they allocate I want to see if it's their ego can have this kind of argument. I didn't have to convince me, I guess, towards that. What if I took them What would have happened that they would have the trust to have everything running smoothly basically helped them with that I feel like I would have more faith and also self-reflective in that way I probably would want still to have kind I would expect them If they're not comfortable with pair programing that is a bit of a red flag because what You don't want your stuff to hide How do you create this or how do you learn from each other So for me, that would definitely be a must Then in there I would just challenge more. So the decisions not to challenge whatever they're doing but I want to know I want to see if they can explain it It can be something I know about. It can be something I play dumb about But I want them to have the opportunity to also be able to dumb it down they can break down complex problems And I'm realizing that a lot of it is more communication But yeah, probably the exercise we would it skill wise to something kind of do on a more easier basis. I feel like I would try and talk about give them a few nonfunctional requirements or what they would implement I feel like software architects or, software developers If they don't have that, that's fine. I would still want to have based on what they've used in the past. Based on what they think. Also, because for them, something they want to learn So yeah, I feel like I just said a whole lot but it is a whole lot. I feel like senior software a lot of a At least the senior engineers I've also worked with people But yeah, there's different levels, What interview questions would The funny thing is some or actually almost I have asked and ask, I don't interview would be also what I ask because it's more so about people's So let's move I want to know what people are proud of. For example, two projects, maybe in the last project, Because that I feel like, makes people more at ease, and I want to know why because that tells me something The person that's sitting in front of me, what they truly value, I feel like those questions kind of I've heard when people used it, and they said finally, and those projects never live, it is really important for this person is fulfilling because that's why Right? And I can see Otherwise I talk to people and they said technical problem, that's something And then I have to see, okay, Right? Otherwise when I want them in my team I do the same on the opposite side working with, the type of people either who they are as people, What would do different, how they've moved to position, how they did that, And I feel like also I want people they're going into. So I want them to be aware of what type Is it a consultancy, an agency? Is it more a product company Do you understand the differences and do you understand For example, in what type Have you worked with different size Right? Can you understand the differences? Is this a conscious choice? For me? I need to distinguish all the known facts kind of the biases I have to remove if it's a good fit for the organization, And I feel like those those questions help me give an idea on first of all, how prepared someone is if it's a conscious thing they're doing, one of the options they have different applications in that way. Sometimes I've had people of a lot of things that were just be like, I'll get back to that later. Like I would really ask and really felt on my back and really like And I wasn't really feeling it Then it's a quick where it really flows, where I can find that is eager, then usually, yeah, I trust that person basically. And that is like a base that you need to have for a team So yeah, that's what I focus on. I'm hiring questions that are like If you have any questions and you want me to answer them next time, Otherwise I'll throw up a post again I'll reach out to some people personally, and I'll post on YouTube so you can put It's going to be in two and a half months. So that should be like Actually, man, stuff moves fast. But yeah, this was Q&amp;A number We're getting up there, We'll see on the next one.