Joy is a great teacher who has and written a bunch of helpful He will teach you how a sink await Hey guys, you're here in this video, we're gonna Yes, you heard me right, we're gonna we're going to discuss three topics, callbacks, the video will go like this over here, we're going project. And over here, we're going to look at how the system works. But the first question should you even care? If you want to make bigger What Asynchronous JavaScript does is it allows you And then using any of these three methods over what you can do is you can form a in a way that you can get the final result. So ice cream that we're gonna make today. Here's the we can break it down into smaller steps. If we see that these are the seven steps to make ice we're going to cut the fruit, then we're going the very last, we're going to serve ice cream. To added some time function as well. You can see this two seconds to cut the fruit one second to add very last we're gonna serve ice cream, take the If you want to learn Asynchronous JavaScript synchronous and asynchronous system, let's Let me explain this to you in clear words. Let's hand 10 task one hand, so how will you do the this look, 123. So we are in tax number three, unless you do 456. And then seven. Right. So what But in the asynchronous system for 10 task, independently without depending on anyone. Look system, they are loading one by one, the second And the third image doesn't load unless the following a order like this 123. And on the depends on anyone they are loading on their own article on the topic that we're going to discuss At the same time, you can revise it from Link of this article will be given in the To summarize, let's say that we're setting up three person, if you are doing it in the one single lane, and you have to place those three And the rule is nobody can overtake the other, at this image over here. This is the synchronous and the images, which is the person's One, two lane same lane and nobody can overtake the other, person three or the image three will finish the like this, the single lane, the synchronous If the image three stops over here that everyone an asynchronous way, for three persons, we will then the number of lanes will also increase, finish the race independently on their own pace. to run. Look at this image over here. This is over here and these are the lanes Okay, lane and three. They're gonna finish the race on their between the synchronous and asynchronous system. any code editor you want but for this tutorial, a simple interface. So you can follow along then you click this pen over here, then you're and you're going to name this project, anything Okay, and then you save it Ctrl F, like this Ctrl like this, and double click on the JavaScript And in order to open the console, you're you can see that like this, double click on here, know we need to do one more setting, you come over click on behavior, and you enable everything turn it off, Save and Close. And then we're Why is that? That's because every time we write which means that every time we write a single after error. In order to avoid that I have turned our code, we can manually run it like this. Okay, So we're here we write synchronous si nc HRONOS this. And over here, we're going to write console this following console dot log, okay, brackets, Ctrl C, and then Ctrl, v 510s. Okay, 345. It's like this. Alright, so over here, we're going with a spoon. So again, divided by phrases, okay, Spoon, okay, Ctrl S to save it. And then And then we're going to get the result, are printed one by one serial. That's because how does JavaScript run from the top to the bottom then the entire process get stuck. This is the let's say that I want to change the spoon from it over here, Control V Control F, you clear this let's see what Let's see the result. Now you can the JavaScript doesn't care about anything is This is what the synchronous system. Now Now over here, right, asynchronous, okay, a change the CL Ctrl x. Okay. And we're here Ctrl need to make you understand a small function named of JavaScript. What this does is it allows you time. So you write set timeout set, then capital the first thing that we are going to we're going to use the arrow function, don't and the regular function with the arrow function Now let's look at the difference between function in the regular way, we write a function like we're going to name it like this A, B, C, D, E, then you put that bracket like this, okay? And but in the error function, how we write it is Okay, like this. And then we're gonna put the name B, C, D, D, right? So we're gonna write ABCDE like this, and that equals, and then we're gonna here, the arrow sign, and then curly braces. On a this bracket like a, b, c, d, etc. In the arrow B, sorry, D, C, D, etc. I hope you understood the to use an arrow function. Okay, the latter one, inside the set timeout as an argument, the next so it is actually counted as milliseconds. If which means one second. So if we write, let's say, seconds. Okay? Now come over here. Let's say that timeout function. How will you do it? We'll cut this curly braces, we're going to place it over four seconds. By the way, it said timeout is a here, Ctrl x, and you paste it over here. Ctrl going to press this run function. But before that, from the top to the bottom how from the top to run it like this. And let's see the result. a spoon. And then after how many seconds after Now how does this system work? This is an Look, the cereal is over here. Okay, I eat ice you can see that I eat ice cream with it spoon. I eat and then this ice cream over here it we're going to have another hand over here which is our second lane. Okay, this this is the secondary road, it is taking that seconds is going to release it on our main lane eat ice cream is an asynchronous call, which after four seconds is going to get released, then over here. So this is how the asynchronous Now we're going to start our discussion with the channel, feel free to subscribe because I so that you can level up your coding skills. If and join my gang under the further ado, let's they? In simple terms, very simple terms. calling callback. In even more simple terms, what it does Let's look at one example with callbacks. And Again, back to code pen. you delete you clear the console over here as well. Ctrl callbacks means calling a function inside another the relationship. What relationship Okay, function We're going to use a regular function. Nothing two. Okay, now inside function one, what we're dot log. Over here, we're going to write function of sorry, like this step one. In fact, we're here like this, in order to run this the name of the function at the bottom like this here. Control As you run this button over run it like this. And we're going to see step one step one. Okay? And how do we call the function I mean, we call it over here like this, okay? Ctrl create like this, and then you paste this run step two, that's because we have an order, right? Look which one is first one is first, before I do first and then one like this Ctrl x So what will happen to will run first run it, you can see that we have step two first. Now let's form a relationship between these Let's remove this. Okay. Now we're going inside function one. So how do we do it, we do called to see a double L, hyphen, okay? This Nothing else. And over here, we're going to write this is just gonna get printed on our console. like this. Now, in order to provoke function to called to, and then, as number two function is is we're going to give brackets over here every time. Once our console dot log is to call to anymore, we just call one, one. function number two, which one function number a relationship between these two? If you clear the Look what is happening, step one, complete, please If you remember, JavaScript runs from the top at the first and then call to, but if you Ctrl x, okay. Call it over here, Control V, run it and let's see what happens. Now you can see place called step two. Don't worry about this. at another example right now. For that we're For that we need to know the relationship that this is the flow Okay, first we get the fish the ingredients. Then we're going to start ice cream. Okay, so we're going to create two function, production function, okay? If we don't This is how we're forming a connection between a callback. Come on. Let's go to corporate and you delete everything. Okay, we're going to use right lead, first is order because without the equal to brackets, then arrow now write the production function, but before duction here we're going to make the ice going to start the production of ice cream, okay. braces like this. Okay? Now in order to form that production will start. We do it like this. Okay, We're going to name it call production, And inside these curly braces, we're going to Ctrl C Ctrl, V over here and then brackets We have formed a relationship between these two it. Now we're going to write console dot please call production like we're going to write console dot log console Like this, okay. Now in order to run our write order over here or there, and inside that We're going to pass this function over like this. Okay, so Ctrl F, clear the console, Now, you can see that we have order placed, please start production. I hope you understand how the functions using a callback. Now let's understand front end and the back end. The front end is and the back end is where we'll store ingredients raw materials, chocolate, etc. You know what raw the stocks is a back end kitchen is the front end, variable, okay, so come over to code pen over here And we're going to write let Okay, net stocks. like fruits, liquids, holders, toppings like to we're going to create a object over here we're going to write arrays like this look, we're going to store all our foods Then we're going to write the name of our I'm going to copy it over here. Okay. Ctrl C, and moment to write these foods. Okay. Now how do we we comment everything from here from top to bottom select one stock, we'll do it like this. First is the name of the variable stocks Okay, sto ck s access the object we need to form a dot and then capital letter F r u IDs. And then what is this, it is arranged in the order of 012 and three, square bracket, okay, and then if we want to we write two over here. Okay, and now let's print console, dot log, then bracket at the end bracket, Look, we got the banana. In the same way we have sticks, and the toppings as chocolate sprinkles. I'm going to copy it from here Ctrl C. And Now pause the video, take a moment and So once that's done, you clear this from all of this back, okay, like this. There we go. here remove this and we're going to remove this in this form here, okay? Now Now the first thing the order is changeable, which means how many strawberry, grapes, banana, and Apple which means which means that for this we need a variable. f Are you it? Okay, underscore and me So we have two arguments, the fruit name and the it gets over here. And then we get to And then we're going to start the production. our functions. Okay. And over here, you uncomment you give double quotes over here, then comma, our steps along with a time. So in order to ensure And we're going to print the steps on our console. we're going to place the order by picking a fruit and in order to select the fruit and place the two seconds. So come back to VS code over here here and write console or before granting timeout function because it takes how many And inside over here, we're going to use an arrow like this look, function bracket curly braces We remove this, remove this function from here, this, okay? And at the end, we're going to place seconds. So we're gonna write 2000 milliseconds, we're going to write console dot log, because result on our console. Okay, and use a backtick. we're not using double quotes, we're going to use the backtick, look at my keyboard over here. This backticks. Okay, so you click this just once, and Now, we're going to pause this fruit name inside of all, we're going to write $1 sign, okay, what this. And then we're going to place this inside We need to write the stocks. Okay? There's because then the name of our fruits, okay, square brackets right square brackets over inside there, okay? Ctrl C, Ctrl, C, and now we're going to save it. Let me show you we're going to write zero Ctrl F to the console, We got strawberry, you can see that the first explained this to you right, if you can recall how dot F r u it s then square brackets and then the order of the food 0123 right. So I have placed I have placed this and over here I have placed here, which eventually means that we are going to Nothing complicated. Okay, stocks dot fruits, like this, then Ctrl F, clear the console, run it. you can see that you're gonna notice that we got because we are using a set timeout function it I mean it prints a result after two seconds. function. Okay, so come over here, we're going runs in zero seconds. How do you do it? We do it function over here like this arrow function, okay. seconds? zero seconds. So right 0000. Instead, And write production has started. And that is started Ctrl S to clear the console. Let's run seconds, one, two. There we go, we have the selected. Now we are seeing a or behavior over one first and the production has started at the you can see that look at the order, okay, so it is saying that this is a set timeout two seconds and this one, this is going to take will be stopped, this is over here. And this coal the coal production, which is production has this is over here. That's why we're getting what you have to do is you're going to cut it it where inside that set timeout function. Now what will happen is, it's not going to start Now let's save it, clear the console One, two. So you can see that after two seconds, the result production has started there is because was selected and zero seconds for which one understood so far. Now let's look at our second it will take two seconds. So come inside the function, okay, you can minimize it like this. We again. Otherwise, you're going to get the reverse the production first and the strawberry at the it over here. You're going to write it inside this and we're going to write another set timeout. two seconds, set timeout, okay, brackets, and then curly braces, and then the time function, okay, And inside over here, we're going to write the has been shot Ctrl F, the let's clear the console. two. Again, one, two. So we're getting the the production immediately. And then we have got two seconds. Now our system is running perfectly ice cream production so that we can buy ourselves to add water and it takes one second how many one will we write, we're going to write it inside children, it will be the grandchildren. Enter to give some spacings and you're gonna then pause the arrow function like this equal to we're going. We're going to a callback hell, the point don't wait, don't, don't panic, okay. 1000 seconds over here like this. Okay, and Okay, inside over here, we're not going to write That's because we have to add water and ice and which is the liquid and then water ice zero and to what I write over here. Okay? Don't focus on inside over here. backticks What backticks like curly braces like this, any right end over here, Along with the dollar sign. Okay, you're So, if you translate, it sounds like this dash So we're going to pick the water and ice. So first dot liquid, okay? As because it is the square brackets like this. Over here that's because it will select the water. The in order to pick that ice over here, okay, Okay, then square brackets, we're gonna write one And then we have also set it to one second. clear the console. Save it right, let's count one, after two seconds, we got this immediately, we got later, we got water and ice was added, which Now we're gonna start the machine, it will take dot liquid, I mean, where we have selected we're going to write set timeout. Okay, good. And over here we're going to write what the And inside here, we're going to write console dot was started. Let's write the machine been, let's write the machine was started. steps and then run it together. Okay. The next Now, if we come over to the stocks, we have a lot of options. We have the cone, No, I changed my mind. Let's pick the cone. Okay. the machine was started, okay. And at the bottom So the cup takes two seconds, okay. So you're Give some space. Otherwise, you're going to and then brackets. Then over here, you're the arrow function and then you're going to set it And then you said over here, I'm going to one? The code right, let's see that where is the Okay, let's write it over here. Okay, don't get we're going to give what backticks that's outside the function. Okay, so dollar sign one was that holder? It's your LD. That's Stocks dot holder and then zero. Let's come square brackets like this and then we're going What's the next step? The next step is we're I love chocolates whatever you comment down Okay then um where was I? Oh yes, we're going to stocks dot toppings we have that so don't forget You can also pick peanuts also as well. In order stocks dot toppings dot one okay. Over here okay. Which means that the cup was I mean Or you can also write ice cream was placed on the was placed on what the ice cream was placed on placed on go. Alright, so inside over here, what the topping it takes three seconds because So we're here right? set timeout, okay, exact going to take three or sorry, three seconds. Okay. toppings. So console, log like this backticks like this. dollar sign, curly braces toppings, we have the S at the last toppings and s. And what's the last step? We're going to serve cream come over here, okay, where we have written to write more text okay. So stocks dot toppings, like this, okay. And over here, give some spacing, set timeout. And over here. We're going And then we're going to set the time which takes console dot log. Then double Ctrl S, okay, now clear the console over here. strawberry was selected production has started machine was started, ice cream was placed on cone serve the ice cream. Then we're going to take the now we have completed our process, the callbacks. Let me expand this and let me show you what Look at here Look. Look at this format of how it And then it is indeed like this. This is called a Let me show you the format. The callback hell over here. And look at our code over here. it looks like a Christmas tree. You can also call I know I know. I know that callbacks So what's the solution of callbacks, we have This is the promises It looks very clean. Very hell. And this is our promises. Look how clean it relationships, parent children, grandchildren, grand grand grand grandchildren, it was promises do is it takes instructions like this, then then then then then it works like this. Which clean. So far, so good. Let's start discussing first of all, you need to understand the promise the promise cycle. First of all, a promise is sir, we promise that we're gonna serve you going to serve you ice cream. So there are two or it will get rejected. Okay, so here, first of every customer when they come into our shop, we customer interests, our shop sits on the table anything. He's there sitting over there. This order anything just sitting over there. So this We then take the order, we didn't start the the customer has placed an order he wants mango then we can go to the next stage, which is we can ice cream to our customer. But if we don't have reject him by saying Sir, we don't have mango at we have mango on our stocks, what will happen and then after that, what will happen is we have we have seven steps to make ice cream, and it then this, then this, then this, like this depending on the circumstances, depending on the and see how this thing works. Once that's But let's say that we didn't we have to pass through this reject stage. And sorry, note, we're gonna say, sir, we're We sincerely apologize for the inconvenience. either our promise gets resolved or rejected, this zero customers. At the end of the day, we have to shop. But let's say that at the end of the we still have to close our shop, right? Because This is the finally handler, don't worry, Once you have understood this promise cycle, we this is very short. First of all, we need to time and work, what time and work. Because that first of all, we have the work and then The next thing is the promise chaining. What you can see that we are doing all the steps promise chaining. Okay, so first of all, we get then we return it First of all, resolve, then worry, we're gonna write code and explain, and I'm a promise chaining, the error handling part is handling part when we have a reject. All right, this is the final handler handler is gonna I mean, whether our promise gets resolved or over here, delete everything except your stocks. here. Okay. Now, the first thing is the absolute named is shop open, follow me. Let is underscore So what this is holding is, we're asking it is true, we are serving ice cream. If it is Now we're going to create a function, an arrow order equal to brackets over here, then equal to remember the relationship between time and to write time and work over here, okay, time shift the positions you can write work first and thing is we're going to make a promise. First, we going to serve you a stream like this. Follow okay, new, then capital letter P, what capital then brackets, you a little bit of space so that over here, we're going to give brackets over here look like this, okay? Like this. We've made Now, inside this bracket, we're gonna which means that we have how many stage we're gonna write resolve, reject, we don't like this resolve like this. And over here, you're made a promise. Now it's time to run that promise. Let's write an if else statement. So right. If then we're gonna resolve it like this resolve, that our shop is open. Welcome, sir, we're gonna ice cream, we're going to write this work. You work over here, like this. Look, we pass the work when our customer came, we're gonna say sir, As long as we have all the stocks and the raw Alright, now if our shop is closed, then what will here, okay, curly braces. And over here, we're you close it like this, I mean, the brackets console dot log, like this, okay. And over shop is closed, okay? Like this. So far, so good. between with just work Look, this work is over between time also along with work. So what will so that we can form the relationship between our below this if statement, right, set timeout, arrow function like this look, okay, arrow going to do is you're going to put a comma time function, I mean, the time word over here, the order function, we're going to place gonna write it. And then what you're gonna do is okay? And then you're going to paste it inside is going to form a seal after 1234567 we have got Okay, so what is the name of our function? It's here, right order. Okay, now brackets. Now look the time and then the work. So how you are going thing is time. Okay, so let's look at the chart. First thing is we need to place the order Okay, that first of all, we're going to give the time 123 2000 milliseconds and then a comma, comma like function, look at this. Okay? And then the arrow you don't have to put these curly braces, you can first of all, we're going to select the fruit backticks? What backticks like this, okay, what's the name of our stocks? There's one yes, stocks, dot fruits like this. And then This has square brackets and then zero like the console, save it and run it like this. After two. There we go. We have struggled over here. was selected, okay. Ctrl S, let the We have our strawberry was selected. I hope you and work function. This was pretty simple. Now which is this one over here. That then then then then this, etc. Let's come back to the VS code work with the promise chaining you cannot have and then your then handler do promise chaining you have to do dot, then so on and so forth of me a spelling semicolon over here, okay, so just remove the perfectly fine, you can have 100 lines of spaces But for this tutorial, I'm going to have just two Okay? So, like this, look at that. It looks in order to given instructions said that then, which carries the steps. What is the and it's going to take two seconds. Okay, before cutting the fruit. Let's give a call first of all, write an arrow function like this in a single line, but I'm gonna give curly braces you have to return it otherwise it's not return, return, return, return, return, so on there, then it's not gonna work. Okay, follow Then order. What was that order the name of our going to place what time first, in order to start and then you're going to write a function Console dot log, like this. And then we're production has, sorry, started. Okay, save it, and So we're going to get this one after two seconds. strawberry was selected and production has started zero seconds. Okay, now let's write the next the foot? It takes two seconds, I'm in cut the over here, you're going to write an arrow sign curly braces right over here. What return We're going to write 2000 over here, which this then console dot log. What was it? We're sorry Ctrl S Okay. There we go. Following next is we have to add water and we're going to follow the same process. no let's not copy the code Okay, let's just okay follow along with me arrow function order is going to take how many seconds one the error function given curly braces over here dot log. What was it backticks Okay, then dollar select what our liquid which is water and ice over here right stocks dot liquid like this okay and over here right and again you dot liquid. And then what was it one? Okay. So And remember this this is very crucial. You this semicolon from here I mistakenly wrote it then. brackets, arrow sign like this. curly the machine in one second. Okay. So right read first of all need to write That time, like this. Console dot log. Next step is we need to select the okay? In order to do that, come here, return order. It takes how many seconds? Two then the arrow function over here. curly log. What was it? backticks Okay, then dollar dot which was it? Let's see. Top n a holder holder At the very bottom, holder issue LD Okay, then you're going to write was ice cream was on it translates to ice cream select toppings. We're going to pick chocolate dot return. Return order. Three seconds because arrow function, then console dot log. Then backticks Okay, don't forget. dollar sign, dot toppings, d o p i n g s, don't forget the last we're gonna write zero. Chocolate was selected going to serve the ice cream serve ice cream Return order, right how many seconds is gonna three races. We don't need curly braces Actually, this equal to this sign the arrow function and was served Ctrl S There we go. completed our clear this console. Run it let's go strawberry was chopped water and ice added start the machine there is our chocolate chocolate was selected us buys the Lambo Yay. Now is now it's time which is this one over here the catch handler comment a variable bottom over here, okay, this technical form here. Otherwise, it's not like this, then write an arrow equal to curly braces like this. And over like this Ctrl S and then cleared only work when our promise is rejected. I mean, then this sketch, then this sketch will work. can remember this variable at the very top over It is true, let's convert it to false and let's then we're going to run this code Okay. Let's It will run when the variable is true, closed it look at here else reject our this code will be run first and then then this line of code will run and these things run. Let's do a test run it and let's see the first thing we're going to get is our here inside this reject statement look our shop is catch handler customer left We're very sorry We're not going to make the money we can't I hope you understood this catch I mean the let's now understand this finally handler I told promises resolved or rejected it will run anyways. remove this semicolon otherwise it's not gonna over here we're going to write what Tell me curly braces like this. We're gonna write console write our shop is closed. Now let's write day is closed like this Okay, let's say we remember false. Okay, let's run it in this way. You can closed This message is coming from this rejects this statement over here this catch handler okay from this finally handler let's set it to true finally handle okay Ctrl S run it to okay we got this statement then this then water favorite part is the chocolate Yay. And then ice at this look look at the various day ended handler so what did you understand? It will And with that we finished our discussion with So this is actually proclaim to be a better way to but first you take a break because it really await first of all learn to know the difference at an example. Come back to VS code I mean code Keep the shop and stocks okay now in the promises function Let's name it order okay order like this. bad we wrote it in the airway function I mean the arrow sign curly braces like this and in order to return new my brand new capital letter P r o m brackets we wrote another arrow function like like this Okay. And then he said over here what we over here. What did we rewrite? What did we write? and over the else statement. What did we write? JACK like this. Okay. We wrote it like this. async await? Look at this blog look, right first is sink. Okay, you write the function order. we go. We made ourselves a promise. How simple We need to understand two more things, the try So this is the async keyword, we need to in. Now let's come back to our code pen and And our async await only then we're gonna see this if an else statement, what did we write? like this first of all, we load the function over reject. And then we wrote The if statement, which okay? Then it's going to resolve it. If it is not This is how we make the promise. And then what Let me actually finish with the promise part. Then I'm an async await part. This is the order right? our first start. And then what did you write? my bad. And then what did you write? And then we bad ca tch catch handler and then the dot finally if our promise was resolved, this will work is still going to work even if it was resolved or actually test it with this how this works, okay. We're gonna return over here. Okay, don't worry. first thing is if we want to declare, I mean, if World, then what we have to do is we have to I showed you a little while ago, right? And then three things to write, try, get. And finally, what the if else statement, and over here following the right cry over here. And then you're going to write the catch, okay. curly braces. And over here you write. So what does this finally does it? It runs worry. We're going to test it. Okay. Console dot handler. I mean, let's start with the try. Okay, problem over here we're going to right away, don't in detail about this await keyword. Okay, So this ABC is actually pointing out to a function a fake function. What function fake function going to write is console, the log like this and exist, okay? And this error is actually For now, we don't need this error part, but we're to work with our try catch this console log and understand the main theory of the async await, you earlier, this aways ABC I mean, this ABC field. Nothing exists which is named ABC right? provoke it like by saying order at the My bad sorry, like this Ctrl S and let's run it the message. First of all, ABC doesn't exist it then we have run scope. Anyways, look at this from the promises, this is over here, it will this handlers this then catch finally handlers, async await system as well. Let me show you a after removing that semicolon, but then like this, this and over here you write console dot log then My read I read I don't I cannot think anything of There we go. We have got that then handler it got that error and then the final is going and then that then what will happen after our here. And you can also use those then cat finally I hope you understood this far. Now let's do a let's say that I am the chef of the I am the chef of the restaurant. Okay, I make ice making ice cream okay tu tu tu tu tu my bed sorry. realized that my customer didn't tell me which kitchen ask the customer sir which stuffing There he is going to give me the order. Give me and start working. Look how the process that the kitchen is being stopped completely But realize this that there are other employees at tables, cleaning the dishes, taking orders, etc. This is where we use the await keyword. Let's do in details. Let's start now come back to corporate except the stocks and the East shop open. Okay, Okay, now what we're going to do is a function which run arrow function. Okay, Which will add to the customer. So which topic bracket. This sign is the arrow sign and instead new promise. Okay, so return new promise like resolve, reject, don't worry, I'm coming on the curly braces and over here what we are going to My bad. We check like this. Okay. Now over here, a set timeout. Let's say that the asking how many? Three seconds. Okay, in order to do for three seconds. So write set timeout like this, tell me arrow function. Okay, like time, how many seconds, three seconds. we're going to write console dot log console. dot of my read. Like this. Remove this console. From promise that we have to go outside the kitchen as a topping. Now at the very bottom, what we're sync function. We're going to write what brackets name it kitchen. kitc HTN kitchen over here, and along with me. We're gonna write console dot console dot log. Okay, like this. we'll get right over here. Ah, don't worry. I'm Hey, okay. Now what we're going to do is, let me spots. Okay, the thing is, these are the steps kitchen. Okay, we're making ice cream. We're we just realized which topping would our customer What? Outside the kitchen, ask him. So what we're inside over here, where where we're inside outside and come to this toppings choice, which So what would you love to have. And then once to our kitchen, start working and then serve other works like cleaning the dishes, cleaning keep running. Don't worry, I'm coming to that the very middle over here, you're going to write is this toppings choice Ctrl C, that one Ctrl what we're going to do is in order to provoke very bottom over here, you're going to write And then we're gonna define other task, which is Okay, other words? What cooking? I mean, sorry, quarters? Let's write them. Okay. Console, the the log like this conference. I mean, this one Actually, you right doing the dishes? It cleaning the table. And then at the bottom, like this. Okay. Ctrl S. Now, let me button that what is actually happening. Okay, ice cream. And then I realized that I didn't would my customer love. So I'm physically what would you love to have, which means that this nothing is happening because the chef is outside. will still happen like doing the dishes, cleaning to the kitchen, this to work D and E will work. Okay, look, a B, C, doing the dishes cleaning the love? Oh, we didn't actually get the D and D. I forgot to write the resolve over here. And return our other tasks. Okay, so come over here on you're going to write V zoolz. Like this bracket. console over here. Okay. Ctrl x, my apologies. Okay, now clear this and run the code and let's have an error. I don't know why but let's check Like go like this Ctrl S. Let's see what happens Now you can see that we have fixed our error and we have replaced the console log inside this line over here now it's gonna work perfectly There we go. We have ABC doing the dishes, dropping Do you like and then we have other works. happening look here in the kitchen, I am working So these three tasks are done. Then I remember outside and asking him in the meantime others are If there was 100 tasks, they would have worked. okay. So once these tasks are done in the the customer action to the data returned to the completed on this bottom over here you can see I hope you understood the resolve keyword. Okay, now come back to code and delete everything follow along with me delete goodbye. And first of all a time function because we need to So you write a function, okay, time, and right curly braces like this, we're going to Tom is don't worry about the async await I'm not small letter p, r, O, and my se. And the resolve and reject part resolve. And the function, my bad arrow function over here like if our shop is open, is shop open look at this we're going to create set timeout. Remember we're forming a relationship between our time and the result we are passing this result over here, between the time and work okay. So resolve over m s like this, at on the L statement, e it will notify us when our shop is closed, I mean So we're gonna write reject, like this. Instead, dot log, like this. And we're going to we're going to write an async function named Okay, come at the very bottom of before that you Okay, so now you're going to write a sync, like it CH, E and kitchen like this curly braces, like okay, like this, then catch, like this. And that's completely up to you, but I'm gonna write how to work with the try, catch. And finally, Don't worry about it. Okay. And over here, I like this. All right. And now in order to run we are right the kitchen, which is the trigger actually test a function to check whether if it's and we're going to write console dot log like customer, left like this and over here and what we're going to write is shop is closed. Okay? what are we going to write inside this If you remember this chart, the first thing the fruit name. Okay, so come back we're going to write console, log log, dollar sign curly braces like this. like the stocks dot fruit, f r u, it s, and or you can pick anything you wish from this list Alright, now what we're going to do is, how are we gonna define the two seconds over you remember this function over here, the time look Write a wait. And then what the time over here. And then we're going to to 123 2000 milliseconds means two seconds. Now now it's gonna give us what resolve you can this and see what happens. So after two seconds, we're because we have set it to two seconds, and they because we didn't assign any time over here. So it no problem in our function. Let's complete our steps over here, okay, now what you're going to do keep some space between your code so that it looks dot log. Start the production, okay? Start the we're going to keep it blank for now, what if a wait. Time. 0000 is completely up to you. But we're going to keep it 0000 so that you can know now we're gonna start, we're gonna cut the fruit, is gonna take how many seconds? Two seconds? then we have the add water and ice is going Oh, my bad, I will do the wrong thing. Anyway, Tom And we're gonna write what water and ice backticks braces was added like this and over here we're square bracket zero. Okay, stocks dot liquid. And over here, we're going to start the machine So how do we do this? We can also copy this No what one second to start the machine and then second is over here. And the two second part and let's actually complete altogether the cream which takes two seconds Okay, so let's do it This is our serving over here Okay, stuff start the mission okay. So console And then console dot log. It will be our select braces. Stops got holder? Zero it will pick ice cream placed on cone like this. like this. Do we need backticks? Yes, because backticks dollar sign curly braces, stocks dot chocolate was selected as the very last what we take the money and buy ourselves a Lambo because Okay sir, ice cream. Let's save our code clear our console like this. Maintaining time everything will run strawberry. My bag was selected. Okay, clear this console. time it will run look straightaway to a selected the machine I simulation code then after three service day and shop is closed but what will false which means that is going to reject it look means that this else this reject this thing will then look at this catch over here. Get a better is closed. Let's test it. We're gonna shop is This is coming from where let me show you this is function customer left it is coming from where ended shop is closed. This will run anyways so we successfully made ice cream today. And If you liked the video, give a like share Till then Take care and I'll