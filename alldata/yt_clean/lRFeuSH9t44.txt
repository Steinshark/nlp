You know what I hate? I mean, really hate? to keep up with. I'm losing them all the time. I'm and suggest that you probably don't like them way that we could get rid of these things without us to improve usability of the system while that's hard to do, both of these at the same time. of the technology that lets us do this? Well, it's not that Fido. Although he really hates it's a protocol that allows us to get rid of call passkeys. And it's not something brand new, It's been around since 2013. The FIDO Alliance, standard. And in fact, there are more than 250 and are part of this alliance. And now what's new, which incorporates two new elements that authentication, so now I can use biometrics or something I have. And then using my face to unlock that sort of thing. And we have support now for the possibility of all the different places where work? Well, let's start with a quick review of to be important in understanding how this could be classes of cryptography algorithms. We have algorithm, I have a single key, a symmetric as decrypt. So if I encrypt a message, I use this key. So that means both sides have to have that symmetric, because it's the same key on both cryptography, it's a different situation. We have unique property that whatever I encrypt with one vice versa. If I encrypt with this, then I can but they are not equal. Now we're going to use that we're going to do with these passkeys. For these one of them as a public key and the other of how we would use these. So here is our user they need to register. How does the registration going to send some registration information over in this process of registration, the user on their a private key. So an example of each of these. and never leave it. And we're going to lock it authentication capability. So the private key we share with the web server. The web server and associate it with this user. Now, that's the let's say this user, we do that one time. Now what we need to be able to do is authenticate. this. So the user is going to send information to put it in their username and say, &quot;Hey, this &quot;Oh yeah, I remember you because you registered key because you shared that with me.&quot; And by the key. That's why we call it a public key. Only the public key that's been shared in advance, of some sort. So that is a specially designed probably a timestamp and other things like that with that user's public key. And remember, if only they can decrypt it because they're the only it down on their device. That's this is where we sends the challenge over to the user. The user if they're able to read it, they're able to see respond to the web server encrypting the response message and they will encrypt that again with server. The web server then is going to take that Verification means the web server now is going going to decrypt it with the public key, and we're challenge we sent matches the message we got back, they claim to be and we will allow them to log case. There were no passwords. At no time did you we stored the private key on the device. Always we The web server associates that with the user, for this user, all they have to do in order when indicate maybe on the device that this is the the rest of it happens automagically. Okay, let's So with FIDO, we keep the private key on the authentication. So that way nobody else can see user can decrypt and encrypt with that key. The call it public. We share that with the service And that's okay. Because of the mathematical doesn't allow you to figure out what the other is, nice about this, not only do I get to get rid of that occur from that. For instance, it resists occurs because someone is able to coax you out of into a bogus website and you give the attacker no password, in other words, only passkeys mechanisms, then there really is no password for resist a lot of those phishing attacks. That's replay attacks. So a replay attack is one where see the information that you're sending when you it's in an encrypted form in the form of a hash, to know what it says. They just need a copy of web server as if they were you. In this case, know what to send because they'd have to see what attacks. And finally it gets rid of passwords that are hard to keep up with, the things that can the things that people are not very creative at of a situation, there's no passwords involved. The public and private keys, which are automatically user doesn't have to keep up with it. And you know IBM has been supporting FIDO 2 since 2018, and on board as well as I told you to begin with. to be the future of logins and authentication. of passwords. Thanks for watching. If you found more about cybersecurity, please remember