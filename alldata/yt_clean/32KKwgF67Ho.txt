Have you seen graphics like this? This what exactly is a (secure) tunnel? And what The term "tunnel" is something that really about computer science. Like... I know what a tunnel In this video series I try to make the and I hope at the end of this video you somewhat To understand this video however, you a "server" is and what a "protocol" is, and I made those exact three videos already. So maybe and when you start to get confused, In the video about network layers I explained that you can think you want to transmit some text to a specific IP it magically appears on the target computer. you can listen here on port 1234, and port. Entering some text and sending it, it If you understand this, then understanding Let me show you a small example program that I It does what the name says. and a destination IP and port. listen on this IP and port, so basically it is And when a client connects to this, it will host and port. This is just an endless loop, this data and send it to the remote target. it will be sent to the client. As you can see, Let's do a quick local experiment. I execute this forward all data to localhost 1234. on port 1234 and we are ready. listening on 1234, but we have a forwarded that now execute netcat to connect to 1337, we can see and connected to the target netcat. And Also if we respond with some And now wait for it. Of course we can put internet. Here I listen on all interfaces data to the host ipinfo.io port 80. your IP address. So with curl ipinfo.io And now comes the magic trick. Let's do curl but Curl http://&lt;ip&gt; port 1337. -v to see the correct host header. But unimportant details. forwarded received the request from the client And what a surprise. Our IP has now changed And I hope you know now what we just did. I would maybe also call this already a tunnel. here to here, but I think there is a small that is worth exploring more. But first Of course this is not a very secure proxy. We just network attacker who can observe the traffic. can just see what we sent. So while we obscured somebody could still sniff this traffic. Let's add some crypto to Here is the forwarded again with a very small And it's basically the same as the old the data to either the target, or back to Obviously this is not secure either, but works. Crypto is hard and it would be a bit So now we can do this. run the XOR forwarded targeting the port 1337. However when the connected the data before forwarding it to ipinfo. So it To do this we can now also run the listen on local port 1337 and we forward the If we now execute curl targeting our localhost data and runs xor over it before forwarding it to runs XOR over it again. Basically decrypts it. And We basically just built an encrypted these two computers. So when now an attacker they don't know what data was actually sent and it. But. you know.. I think the idea is clear. this already kinda looks like a basic VPN setup. machine, and it connects to the VPN However there is a big difference. And that In our simple proxy setup we just If you watched the video about the network layers, you can imagine this just to be double. and this is the target ipinfo.io. it gets unpacked. Maybe XOR decrypted. And Real VPN protocols use a bit more magic. When you fall for those VPN ads and get a proxy. But the purpose of a VPN is very intended to provide you access to a VIRTUAL what corporate or company VPNs are for. not just forward requests like a basic proxy, Let's look at this with blackboxes. First through a VPN, for you it is transparent. The term or see, what is really happening. It just you get a response with an IP that is not your So let's break away one layer of the blackbox and look deeper. Exactly like shown in the network layer video. We So where is the VPN server? It's basically this black box down here. So before this was like the physical layer. The through a wire to the other computer. But this wires you actually have a VPN network here, So let's look at a made-up VPN protocol, real-life reference, but of course OpenVPN Anyway. So whatever data is given to the VPN complete packet with IP and TCP header, but ignore an OpenVPN packet header. Maybe we also encrypt the IP layer. They add their things. Send VPN server. It unpacks the IP layer. Then the does it's openVPN stuff like decrypt full IP and TCP packet. And just puts this And this is what a tunnel is. On our to send some data to a target server. Maybe client and server, then takes this or encapsulates it within an openVPN the actual computer network to transmit placed within this corporate internal network This is the beauty of network layers can plug them together in weird Now there is one last thing that I want to and you might wonder how can you write your own to wrap it, send it to another server? There is a reason why people use existing tinc or wireguard. But essentially they use virtual or emulated or faked network card. network card. And this shows up to the as a network card here. This network card is then if you want to send a TCP/IP packet, the operating subnet mas and gateway address, which interface to IP address to the actual physical hardware network into radio signals or voltage on an ethernet wire. interfaces. But they are non existent network route almost all traffic over this virtual network the system gives this program the complete TCP/IP so you can now send it over to your VPN And if you look up a basic TUN/TAP programming you somehow have to create such an interface. need to install additional drivers or so. But you can write a program that opens this send a ping targeted to that ip network, the ping packet to your program, and So if you want to go a bit deeper on a to you this excellent blog post. It's a bit might have changed a bit, but overall expands on this basic read example and has here I hope this helped you to kinda understand a VPN, and so forth. It is complex, If you like these videos explaining let me know in the comments what other