Tim Ferriss: All right, John, nice to see John Romero: Well, thanks for having me. I'm excited. Tim Ferriss: I thought I would give a few Number one, I'm going to operate on the assumption on your life story, so I will be asking a And I extend my apologies to you and the hardcore for folks. And some very, very long-term listeners may conversation with Alexis Ohanian, who is a credits your story with helping inspire the And of course your story and the products inspired many, many others. The creation of Oculus VR and the cultural over decades is really remarkable. So in the process of doing my homework and nature of the impact is pretty mind-boggling. But I want to start in the beginning, and like to provide some connective tissue that Could you please just describe where you grew John Romero: I grew up in Tucson, Arizona. I was born in '67, so I did a lot of my early I grew up right next to the Yaqui Reservation, and Yaqui heritage, but we call ourselves we all ate. We lived in a pretty poor place. I only lived in that area until about fourth to me because I really learned a lot of my And then we moved. My dad went to the grocery store and never then met a guy that was a military guy and And then we moved to Northern California, in Tucson, Arizona. Tim Ferriss: I would love to hear you expand experience with your biological father because I was reading a piece in The Washington Post that chapter of your life. John Romero: I don't know how many generations a long time ago and people definitely acted And I guess in the family and in just socially, alcohol was like drinking water. I never saw him actually drink water, it was And it wasn't just him, it was basically just And people that drink usually will surround they like doing similar things together. So everybody that I saw always drank. And that always led to all kinds of crazy drinking, you're going to be doing all kinds INTERLUDE I think it might be helpful to provide a little John endured and overcame in his childhood. Because I think it informs who he is and speaks underscoring. So what I'm going to read is an excerpt titled "Why revered developers John and And here is that excerpt. "John grew up in Tucson, Arizona. His biological father was an alcoholic. 'At that point in time, John would've had mother getting beat up," Brenda said. [Brenda is John's wife.] Money and food were tight. John's father robbed stores at gunpoint One day, when John and his younger brother stressed, told John's father to 'get rid It wasn't meant to be literal. 'He just put us in the truck and drove us to get out and then took off,' John said. He was six. Ralph was four. John recognized where they were and decided in the desert until his mother made his father So this is one of quite a number of examples, because it is part of the context that makes And with that, back to the interview. END INTERLUDE when your mom met this military man, that shift of environment, shift of experience. And I'm not sure how far ahead we'd be skipping, was and how you became involved with that? John Romero: The Aggressor Squadron was one he was stationed at in 1983. That was a place where the pilots -- this The pilots are learning Russian flight maneuvers, is where they all learned all of the flight they got in contact with Russians. And the point was not to ever get in contact, space where they were flying U-2s and TR-1s find out what they're doing. But in case something happened, they would So they flew a lot of other planes out of I think F-5s, a lot of F-5s. And anyway, that was the place where he did When I started school halfway through -- at the school year of my sophomore year in school, which is pretty great in the '80s. Because it was halfway through the year, the me to join because I was halfway through learning But I already knew BASIC, I was finished with And when I talked to the teacher and showed coding and I know everything about this machine the first day that I got into school. And the second day when I came to school, on and then she told me to follow her, and Aggressor Squadron on base and introduced And he was Top Gun dude. He was a total rocket jockey guy. He ejected out over the Mediterranean, this Anyway, he went to a phone, and he said a And then this giant bank vault-looking door inside of this vault vault, a bank vault-looking It was in the middle of the Aggressor Squadron And they had already put away the stuff because that didn't have clearance. And he took me to the back and I saw this &quot;Here's our mini computer. I'm just wondering if you knew how to program And so I got on it and I noticed that it was could program it in BASIC. So I said, &quot;Yeah, yeah, I know CPM and I know He is like, &quot;You've got yourself a job.&quot; So basically I got a job the second day I My teacher saw that I knew how to code and and told him about me and he is like, &quot;Bring So it was just really, really random. Tim Ferriss: How did you get your very first When did you get bitten by the bug? Given the humble beginnings where one would be very hard perhaps to come across or get John Romero: Getting access to computers in in someone's house. Computers weren't even in the home yet. The personal computer revolution was just in the United States may have had a computer So computers were very early, they weren't But in 1979, my friend -- I was addicted I played arcade games all the time, or pinball so different. But it cost money and it's hard for a kid to spend on arcades. But my friend came to my house and said, &quot;I doesn't cost any money.&quot; And I'm like, &quot;Oh, my God.&quot; I jumped on my bike and I followed him, and the Sierra College computer lab. It's summertime in 1979, so I'm 11 years old. And I just follow him and we go into this And basically he shows me this computer and There's a room that's just got a giant computer and white TV screens with keyboards connected And I mean, there's like one unit. And so he starts showing me these really early the Wumpus and Star Trek and Poison Cookie And I was just really impressed because I take my time with every move, I could just That was very, very different. So I played for a little while and I noticed in the room, and I said, &quot;Well, what are they look like they're playing?&quot; He goes, &quot;Oh, no, they're programming.&quot; And I'm like, &quot;What is that?&quot; He said, &quot;Well, that's actually what you do You have to learn how to tell the computer do, how to think.&quot; And I'm like, &quot;I want to do that.&quot; So I just went over and asked one of the students, And it's like print statement and some other And he tells me what it is and I started asking &quot;What does 'if' do, what does that mean?&quot; And so he is explaining it. And eventually, because I'm asking too many that's there and I just take it over to the learning how to code. And with nobody kicking me off the computer, to teach myself how to program a really basic with a text description. So basically, on a high level, it's kind of 11-year-old goes to computer lab at the college Tim Ferriss: Yeah, it's incredible. John Romero: And so yeah, that's what I did. And I didn't have a computer for three years In the meantime I would go to any computer they had a computer there, like Radio Shack and I would find one of the books that has code into the computer and play around with why it doesn't work, and try to fix it and And that's really slow learning. But that was how I learned how to code in the college because I never saw them anywhere Tim Ferriss: Pedaling over. And was the main interest, at that point, And I guess the follow on to that is, was your brain in a particular way? Was there something else intrinsic to programming would be the games? John Romero: Gaming was the only reason why I -- thinking about arcade games, it was that.&quot; But looking at the games that I had played do that,&quot; because that's just really simple So when I could get things up on the screen what I was playing, I was like, &quot;I am totally This is going to work.&quot; So the interest was only to make games. But one of the really interesting things about that the programming experience was extremely On computers back then you could turn the then. There was no programs to run to code a computer, So the iteration speed of learning was as It's like, I could type something in and run And it either was going to bomb and tell me and I'm like, &quot;I just learned something new.&quot; So that iterative, that fast feedback, iterative conducive to keep my interest in learning And yeah, it was just building on stuff very, Learning all the keywords, figuring out how And not just solving problems, but I'm starting And so there's these phases of learning where you can think of, you can make it happen. If you only you have the right words and the on the screen?&quot; Well, that's with print. &quot;How do I put it over there on the screen?&quot; And then it's like, there's some commands on the screen. When you start breaking down all of these one of these little problems, you start to you're hoping to do. And that just makes you want to keep on going. So solving problems really, if you're a person absolutely for you because your job and your a beginning programmer. You're climbing these walls constantly to the new thing. Tim Ferriss: I'm going to leap forward a bit some of the gaps. And I'm getting very much in the deep end you to lead me through what I'm about to read. But I was talking to my brother last night he pointed me ultimately to a rabbit hole somewhere, on gamerant.com, and I was hoping So, &quot;John Romero ended up making the biggest of the video game itself. He was the first person to make a navigable dimension of movement.&quot; We were just talking about problem solving, part, but could you walk us through the significance John Romero: Computer games have been around And 3D games have also been around since the games. But first-person, if we're talking about first-person, into 3D, there was really, really early games really start on mainframe computers, where character on the screen in front of you. And when you move, you don't move smoothly, So it's a really primitive movement, but it's And not until we get to, say, Battlezone in And Battlezone is line-drawn pyramids and tank. You're in a tank and there's another tank, you and you're having to use tank controls for you. But it was a smooth-moving 3D, but it was So the advancements in 3D eventually get to so it looks like a color, walls look a certain an invisible wall. And then they start getting textures in the So if you play, say, Might &amp; Magic, you'll I think some Wizardry games also had it. And even Ultima, when you go into the dungeons, on it, like someone drew a wall, like an actual But it doesn't move smoothly, it's moving Still, on computers, it was a lot slower to So when we started doing 3D in 1991, we did that maze perfectly smooth and turn any direction high-speed 3D, which nobody had seen at that Our focus was on trying to make that happen, moving quickly became -- at least at that important for us. It wasn't to do something really amazing with drawing at high speed so you can turn around And that took a lot of computer knowledge And also how to draw a scene not using all use to compute a 3D scene, but restricting amount of computation that you needed to do complex in 3D, do that very quickly, by not you would see, or turn your head or roll forward So it restricted you to only one plane of around. You can't look up and you can't look down So by reducing your motion that way, it reduced do. Tim Ferriss: So if I'm hearing you correctly, as a Luddite, or maybe not a Luddite, but seems like you applied positive constraints, use, let's call it elegant code, to dramatically And I'd love for you to explain two things Number one, when you're saying &quot;us,&quot; who is And why do you think you guys were able to other teams? Or were other people simply not looking at for speed and using that as the primary driver John Romero: So &quot;us&quot; is id Software, which We started 1990, but we officially started And that's me and John Carmack, Tom Hall, Adrian and John are not related. And it was just us four that founded this And in 1991, which is the first year that to make games full-time, all day long, at for us because like everybody, we have jobs, in our off time and it did really well and formally. We were doing side-scrolling games at that used before on a PC. It hadn't been discovered for nine years since figured out how to get pixel smooth scrolling Nintendo. Tim Ferriss: Sorry to interrupt, could you who may not know the terminology? I know it seems self-explanatory, but a side-scrolling game so people can visualize? John Romero: Yeah, Super Mario Bros. -- John Romero: -- is a side-scrolling game, the '80s, but on a computer, on a PC, and PC, no side-scrolling game could move a dot It always moved by eight pixels. It just chunked across the screen. So it was very chunky and blocky when it moved. And that's because even moving the whole screen by a pixel was kind of unimaginable because speed. So when John made the breakthrough of 1990 like a Nintendo, like Super Mario Bros. on That was basically the moment that id Software this in our own company. Oh, my God, no one has ever seen this before. I'm just blown away. And when we finally started the company, I when we started it, in 1991, we made 13 games A game took us two months, but we would make So we were so busy. The first 3D game that we made was called feet wet in 3D because we knew that 3D is Because at that point there were very few None of them made a wall look like there were It was always some kind of solid color or colored dots to make it look like another It's called dithering when you do that. But it wasn't really advanced. So our focus was to make the screen appear move through the level smoothly, not in chunks, do that at a very high frame rate because And that was the focus of Hovertank One and And that was John's big breakthrough, was and getting the rendering for 3D going at Tim Ferriss: 13 games in one year. I know nothing about game development, but sounds like a lot of games. What do you think enabled you guys to do that working on games who had much lower output? What were the ingredients or the approaches Maybe just tolerance for sleep deprivation. I don't know. What were the ingredients that allowed you John Romero: So the way that we could achieve then was that when we got together as id Software, who just learned how to put pixels on a computer already for his whole life, each one of us like all the time. And so we'd already made dozens of games each. Tom Hall, who was our creative director, he He made tons of adventure games. He did action arcade games in assembly language. So he was already a very fluent programmer. John Carmack, of course, coded since he was I coded since I was 11. So we'd been making games for 10 years and each. And when you make that many games that quickly, defining exactly what that game should be most likely if you're going to try and get So scoping is like, this is the amount of of game that we can make and how big we can Let's do that. And as you get closer and closer to that deadline, need to hit that deadline. So when we did it before meeting each other, our own goals for finishing our own games, So when we got together and we saw what we how big those games should be, and we had So we had to know how good every one of us a game to that limitation. And because we had 10 years of game dev experience, up with ideas, bam, start from doing the graphics, making the levels, making the level editors that are in the background that no one sees, in packages that the game can access. There's so much technology that goes on before used to doing that already for 10 years. So it was not just the experience that we We were just so happy to be able to make games like the luckiest position ever. So we could focus on doing that. We could scope our games down really, really We knew what to cut when it was time to start deadline. And because there was no internet back then and total focus because our phone never rang. There was a phone on the wall and that thing So there's no interruptions. Nobody's coming to the house and knocking So we could just focus for 12 hours a day it, constantly. Tim Ferriss: So to build on the emphasis you applicable to so many different projects, to book projects and so on that I've been where you'll go and where you will not go. I was doing some research, and I read a discussion Software, and a comment came up, which was and talks about you guys being your own best Can't believe everything you read on the internet, elaborate on what you mean by that. John Romero: So to get that many games done making prototypes. Prototypes are like, let's test this and see -- there's no testing. It's like, here's the game that we're going go in the game, here's how many levels we that need to be drawn, here's all the animations need to be programmed, all that stuff. There's no way to do any prototyping if you're people. So we had no prototypes. We knew how to code already. So because we can just see it in our minds, with each other just going, okay, it's going We're going to see mountains in the background. On the foreground, we're going to have another and up in the trees we're going to have these to blah, blah, blah, blah. And so we just kind of describe what the game say an hour. At the very beginning of the new game, in for what we're going to create in the next There wasn't like, well, then we have to figure It was like, there's no figuring it out. We're just making it. So there weren't prototypes. It was just, we're making the game. Later on with bigger games that we could spend knew what we were making. We just needed to figure out how to make that But it wasn't like we built a piece of the It was like we would build this functionality if we found out that that functionality actually of the game, then we would remove it. But it wasn't like we were prototyping it. We were making that piece of technology in It was going to be part of the game, but we really. And then we pull it out. But we didn't prototype. Tim Ferriss: So let me ask, I'm sure, a naive for instance, you can take an element like to it or reinforcing the soul of the game, in advance so you don't end up with a piece with other elements in the game? In other words, does the architecture, how so that you have the capability of removing John Romero: When we're coming up with the it's Wolfenstein 3D -- and the inspiration Castle Wolfenstein. And it had a lot of really great gameplay 3D, such as when you shoot a guard, you could You could search their bodies, you could go and maybe shoot them open. But that makes noise and might call the guards. All these little pieces of design that we because Castle Wolfenstein was just a top-down It wasn't 3D, the screen didn't move around, on the screen and that's it. They might leave the screen and disappear, back in the '80s. When we were making Wolfenstein 3D, we start the searching, and we started doing that. That was the design. So we already designed that we're doing it. We already got the code in to do it, and we're We're playing the game and we're shooting And as we're playing the game, it feels like like, because the original game, it was perfect. It matched perfectly with the way that you game was more of a stealth game. So Castle Wolfenstein was really the first It was an action arcade game, but it was really getting out of this castle and escaping it. And we were doing that in our game as well. It was a recreation. But when we got to the point where we were not just run and gun, we knew that that is The strength of this game is doing this never speed movement through this maze. And no one had seen that before. And slowing you down and making the players of the game. So the focus became this is the soul of the The soul of this game is high speed, run and Anything that stops you needs to come out. So even though we programmed in that stuff, the new spirit of the game, the one that we It was like the original game's idea was transferred two games are different. The way that you shoot enemies in the original do it in our game. Our game is much more fluid and simple and And so when we started focusing our design that took away from that speed. But there were some things that we had to the door to open, that's actually suspense And if we didn't have any doorways, you're away constantly nonstop, but you have no suspense One of the original games' focuses was the and alerted the guards to come after you, in the next room and you can see them in the chest and if you shoot it, then they're coming you. So we had a new focus of our design and that's Tim Ferriss: So let me build on Wolfenstein mine because I mentioned to him that we were he's the co-founder, co-creator of Exploding company that produces many, many tabletop And he said, &quot;Holy crap, amazing. Ask him how the pressure of promising the cajoled the cells of his body to do the impossible And we went back and forth a little bit and to early Romero development stories. That guy literally did the impossible.&quot; So could you expand on what he means by promising and how that cajoled the cells in your body? That may not be the right way to put it, but don't have any of that background. John Romero: We made Wolfenstein 3D. For me personally, that was my 87th game that Right after Wolfenstein 3D, we made Spear That took us two months. That was number 88. There was a game called ShadowCaster that So all the tools that I wrote, all any gameplay our technology and give it to another company That's game number 89 called ShadowCaster. And then game number 90, not that I even was game, we're going to make the next game. At the time, at very end of 1992, after making came out, everything changed because now we No one had ever seen this before. Ultima Underworld was out, and it was a really 3D let you turn your head and look up and the game down. So it wasn't the high-speed game. You would step slowly through a dungeon, but 3D is now happening at this point. If it's not ours, it's probably slow, but become 3D, but it's hard to get to that point. Our focus was speed. That was where we wanted to live. So with the next game, we had had such massive that we jumped basically to the front of the Immediately, bam, we are now in the lead because thing. High speed 3D is the future, we're there first The planning for our next game after that, of 1992, was the creation of the engine that of Destiny. It led to ShadowCaster, but that engine's had in mind for our next game. So that's why we licensed that technology architecture anymore. And so at that point, we'd made four 3D games, For our fifth game we needed a new architecture that this new game would do, and we were thinking, And this was the only time we ever did this, could imagine playing, that there can't be What would that game have? So we made a list, a bullet point list of Obviously it needs to have light and dark, spooky, it needs to have bright areas, which It was just full bright. The lights were always on. So we need lighting control. We need height control. We need to be able to go up and down stairs, rooms. We need walls to be drawn at any angle, which where you can have a wall that's at an angle Every game before this next game was basically And when you look at a maze from above, it's It's like those classic mazes, labyrinths, maze. That's what every single game from the '70s Wolfenstein 3D was a high speed maze game. It was the same thing. 90 degree corners all over the place. So this next game would break that barrier. So we're going to have what we call non-orthogonal had seen before. We were going to make this game multiplayer each other for the first time because right barely starting to sell network cards and retail stores. So we would make a game that would take advantage take advantage of the modem to play against And then we would also make the game open they wanted and make it their own, basically. They could make levels, they could make new They could change the whole game basically It's called mods, modification. So we would open it up to modders who wanted that we created, and we would also give away the world, and you don't have to pay for it. You just get it, and if you like it, you had us. That's called shareware. So we did all of these. We had this whole list of everything we're we could do it because John was already planning was very confident in how he was going to And at that point, we were just on top of We had just conquered everything with Wolfenstein And so we're just invincible feeling. So what we did was we took our two-week vacation of '93 at the beginning of the year, and we're we called DOOM. And we decided for some reason that we were everybody what's going to be in this game, has seen. And we did. We put a press release out before we even We put a press release out saying, this will a PC, and this is what's going to be in it, and all this crazy stuff. We put a press release out saying that. So we needed to fulfill that. And so we started working on it. Tim Ferriss: Okay. John Romero: Crazy. Crazy. Tim Ferriss: Yeah, it's nuts. So there are, for instance, as thought exercises, in advance of developing a technology product but that is for internal use only. You guys actually put out the press release. What was the conversation around the press Because it's a smart team, there was some What was the logic, if there was one behind John Romero: I don't know why we would've It doesn't make any sense. But I think that what happened is Wolfenstein were so used to making games extremely fast. With Wolfenstein, that was the very first that we wanted. There was no deadline on Wolfenstein. We made the shareware version of Wolfenstein So there was four of us -- well, mostly, of us making Wolfenstein. We had Kevin Cloud in there for the very last cool stuff. But we were very fast and we didn't have a And it released in May, the shareware. So we had the rest of 1992 just building up There was an internet top 100 list of games for the entire year after it came out. It was huge. So we were just on top of the world, but after I believe in September of 1992, and no one which back then with these accelerated schedules we're finally now doing interviews with places. We're doing radio interviews. We have the local TV station in our office We have them interviewing our publishers. People wanted all kinds of information about So I think at that time it was like, let's we're going to start working on, because everyone So let's just do a press release. And it's equal information for everyone. It's not like there's an exclusive with this or something. There was no exclusive. It was, &quot;Here, everybody, this is what we're in the ocean and start making it. Don't bug us.&quot; So I think the press release was probably next. Tim Ferriss: That's incredible. All right. So I want to take a pause here just for a pronouncing this correctly. Hyperthymesia? Am I getting that right? John Romero: Yeah, that's right. Tim Ferriss: Okay. So could you just define this for folks? And my question is also to what extent this has had maybe a shadow side or been detrimental So if you could just explain what it is and John Romero: Yeah, hyperthymesia is a memory has a superior autobiographical recall. And it ranges from really good recall of significant that most people would forget over time. With hyperthymesia, you never forget those They just don't go away. You wouldn't know it if you're young, but of memories because you don't use them and you don't lose them. They're always there. And the extreme end of hyperthymesia is where you got hyperthymesia, and it could be born disorder. So people have been hit in the head with a and they record every second of their life, that you've ever done is always present in And having all of these thoughts, all of these I guess, in just normal operation like just My hyperthymesia is really -- I remember me, mostly all the significant stuff and things So like music and movies and programming and basically all of that stuff through all the And things that I cared about, I would remember I would remember the names of people who wrote year that they were published, all of that So I would remember everything. So it makes it a lot easier to just say, &quot;Hey, blah, blah, blah?&quot; And I was like, &quot;Well, I was actually programming so I had to do it on paper in the kitchen I could tell people what I did whenever. Tim Ferriss: Have you had that, to the best induced at some point? John Romero: I think I've had it mostly since to learn how to code at really high speed I was learning so much, so fast. I actually had to take breaks from learning and it needed to settle, and I had to stop I could jump back in and fill my head full And due to the nature of what I was learning byte of memory in an entire computer, because as important as the knowledge of hardware So I needed to learn all of the hardware of the languages on top of that, and then start So that was also forcing function to induce Tim Ferriss: I have one family member who term before, but hyperthymesia. He can recall just about every fact, every past. So he's much older than I am but can recall he was ever in, every word of every foreign And what I've seen is that, that is a superpower has been challenging for him because negative moral injuries, all of these things are also And I'm wondering if you have seen any, I related to having such an enhanced memory John Romero: I'd say that's totally true for For me, a lot of it is that the, say, negative/hindrance similar in importance even if they aren't. So I would think that this possibly insignificant would think. And the reason why I think it is because the It's like if that didn't happen then these you know? Tim Ferriss: Yeah. John Romero: Yeah. So it's like not knowing, well, say, for this But it was really important, then I went to Tim Ferriss: So I could see that being -- has team environments where you're trying to weigh your mind, some of these elements that might sort of importance-adjacent, so you weigh Has that been challenging in team environments John Romero: Not really, because I think the what has been made before, what games and approaches to certain control issues, like Having that and luckily just having played been really helpful to be able to recall solutions we don't need to research or figure it out It's like this game in 1984 did this on an on the PC or something like that. So it was more helpful to solving issues or failed designs of the past and that we were which was really helpful. Tim Ferriss: How important, or how much of success of the team was having two games, on at any given point in time? John Romero: I would say that having two games anything because we knew what each of the games. One of those games came out a month before But what we did was we divided our time into days. So we would go from 10:00 to 6:00 on one game So we would just all shift because it was When we needed to ask questions or whatever, &quot;Oh, you're just making a level for the other Well, I guess I can't ask you.&quot; It was like we were always in sync. So we would shift to the next game and start And then the next day we start back on the And the reason why we're doing eight hours we love making games. We wanted to get these games done. We're learning a ton. It was super fun being together and making We'd be laughing. It would be new things that we're inventing. It was like being in a lab where things are So it was super fun and we could do those And we did it for a whole year. All of 1991 was spent with all the hours that at a time at least. Because we were in sync at the same time when block with something. It's like, &quot;Ah, I can't even figure out what I'm going to just make a level for the other We would help each other if anyone got stuck. It's like, &quot;You know what? I don't know what I'm going to do for this And I'm like, &quot;Well, put a meat grinder in And it's like, &quot;Oh, yeah, good idea.&quot; So we would help each other. But most of the time we already knew what We kind of freethought everything out before could do it at really high speed. So we just executed because that was the really We had got the ideas, and we have lots of of our ideas and in sync. And luckily, because we had such a small team The bigger the team gets, the harder and longer way, but with four people to have very distinct Tim Ferriss: DOOM, we paused at the press You go on to create DOOM. When did you, after its release, or maybe shit, this is a monster or it's going to be This is going to be bigger than even our grandest Was there a moment or an event, a day, anything, John Romero: Well, several things happened in that respect. We knew at the very beginning of making the game that we've ever played because that was So we already knew it was going to be awesome That was already a given. But while we're making the game, we got to of 1993, and we brought in Sandy Petersen And then I basically took over as the game And that's how we started stripping a lot and getting rid of items that didn't matter, Sandy was making levels, and at this point, was figured out because I needed to solve going to look like that maximizes the use creates spaces no one has ever experienced not a little bit better than Wolfenstein 3D?&quot; It needed to be drastically better than Wolfenstein So that took some work to come up with this And when that happened and we started to make This is looking really great,&quot; Sandy Petersen because I would sit and talk to him at the is important about using this technology that And so he started putting those elements in And when I got to run Sandy's levels, not I know everything that's in it. So I'm just testing to make sure it looks what I want to do, the pacing is correct. When combat happens is when I want it to happen. When exploration happens, I have the area these things. But when I play Sandy's levels for the first And I remember the first time when I started going to feel like. Finally, right? Tim Ferriss: Right. John Romero: And it was like, &quot;Wow, this is I'm going through this level, and I'm hearing I don't know where they're at, but I don't And it was great because I finally got to way what people would feel when they're playing Now, at that point, I'm so used to the technology Even though it was like it changed everything, way, for us, it was just like another day So I was just focused on the experience part So that to me was really fun to play a level what people were going to feel like. And then we got to a point where it's early press release again and look at the bullet type person, I need to make sure we're putting We didn't promise stuff that we didn't deliver point list done. And I saw that we were missing multiplayer. We didn't even think about it. We thought about it in January, but we get mostly done now, and it's early October. And I'm like, &quot;Whoa. Yeah. Whoo. There's no multiplayer.&quot; I go and I tell John, I'm like, &quot;You will Yeah, there's no multiplayer. Remember, we're going to do that?&quot; And he is like, &quot;Oh, yeah.&quot; John's a genius. And so John figured out. He kind of immediately in his brain was just networking model.&quot; So he figured out how he's going to bolt multiplayer there the whole time. And so it just took him a few hours. He just needed to learn how to get network and then how to get the game. What data does he send between computers? He's trying to minimize the amount of data And he learned within just hours the techniques And it took a couple days to hammer out some before. I'd seen him shoot a character. He had two computers going and he's moving you see the guy running around inside the We've never seen this before in any game.&quot; And then you shoot him and the guy dies, and the most fun thing in the world.&quot; And I go back into my office, and I get that shooting each other, and it's like, &quot;This Oh, my God.&quot; And then I'm imagining the level I'm currently in another room from my viewpoint. And I'm just like, &quot;There's nothing like this Oh, my God, this is changing everything.&quot; So I got so excited at that point. So that was another like, &quot;Holy shit, this away and change everything.&quot; So multiplayer was -- when I saw that, and And then the lead up to when we're about to to anybody, but somehow people knew we were We were starting to get random phone calls There's these weird subcultures going on in based on DOOM being the best game that could And then creating a really crude version of Small Piles Of Putrid Debris. And because that was such a funny thing, we Just there was a lot of internet activity the game, and we never said anything. So it was really weird that the world was game. And that was the third like, &quot;Okay.&quot; But up until that point, every game that we is to just wipe that game out with the next Like the next game, we're going to destroy So it's like boom, game's out, next. So we never thought that DOOM was going to this year, it'll be 30 years old. Stuff is being made for the game on a daily In one of the greatest mods that has been year. Incredible. It's called MyHouse.WAD. People are still making insane stuff for the But we never thought that was going to happen. We just thought we were going to make a really it out. That was it. That was the goal. Tim Ferriss: Let's hop back to something that 1996. Could you tell the story of how that came John Romero: We started making the last game Quake, and we started working on Quake in John had already kind of started planning finishing DOOM II. He was exploring the technology for the next jump in technology. And so when we started as a team in 1995 to like, here's this giant mountain we got to There's a lot of tools, there's a lot of foundational So we just started working on it, and the we started making Quake and we couldn't because now was going to be the tech that we could Quake. So it's like, we're going to do that game. That game was a medieval 3D adventure with It wasn't a first-person shooter because that It was going to be a 3D action, medieval. We were going to recreate our D&amp;D adventures full-3D game. So that was the design. And as I am making the level editor and kind other stuff going on at the company because was even better than the original DOOM. It was crazy because we only had at the time of us and on top of that, we had three other all of the managerial type stuff and all of Tim Ferriss: That's incredible. It's just so wild. John Romero: It was a very small company. And working on Quake, we had gotten our team with the other three people I think on top The company was 13 people when Quake launched. So we had a very small team and we had the to deal with DOOM's impact and the articles, other projects that we had going that it took at that time there was a lot of technology And I was creating the level editor for the and it was really just two other people on the first time. And that was Sandy Petersen and American McGee. So it was still pretty small. We still had more people eventually to hire Quake was shipped. But at this time there was probably seven It was pretty small. During that time the design that of that medieval It was getting reinforced with more things of that medieval world and do new things that of different ways. So it was becoming a really strong design, And the problem was that we were spending doing 3D levels, little pieces of levels and that could actually do anything in the game We're waiting for that engine to actually Tim Ferriss: John, can I pause you for one Just for people who hear this word but may development, could you just define engine? In simple terms, what is an engine? John Romero: So at this point in our game engine. And the engine is what drives the game, and on the screen. It's the thing that loads files and saves It's the thing that takes input in and makes It's what makes sound come out and music come And so the core functionality that is needed and any of the actual sound effects themselves, Because you can put the data in and it will You put sound effects in, and then you use will play and they come out. And so it's an entire set of code that any So it's called an engine. And we pioneered the idea of an engine in We started calling it an engine even before So we start that idea in 1990. Now we're talking about 1995, which we'd made So with Quake, we're creating a new engine, different look to it, has more advanced gameplay Everything about it was different. When we got to November of that year, the burnt out because of the massive effort that that they'd been making a lot of data that so much that what they made was too primitive. The engine could do more than what they had Because every time we were making stuff for point of speed and we're modifying our levels But that means it's a little too primitive faster. And by the time we reached November, we could world, but we didn't build those worlds yet. We were slowly inching towards them. So it was a lot of like, wow, all the stuff So people were burned out from that, and the task of doing research on a new style of game, It was not going to be a first-person shooter. They basically suggested that we should just We can nail it. This is brand new tech that's awesome already. If we just do a shooter, we can all just ship And I was just like, &quot;No, we need to do this. The whole world knows what this game is. It's in magazines. Everybody knows what Quake is, and this is to the limit. Let's push design to the limit too. Let's go beyond what we've done before and I wanted to make this 3D game experience something first-person shooter. You know, our forte, our expertise was in and do something that incorporates elements And so they just really didn't want to do When is it going to be defined? We don't have a scope that has an end on it We didn't either with the engine and we didn't which is what really harmed the team. So I basically just gave in and said, &quot;I will all of this stuff and what we've done to date it as fast as we possibly can.&quot; So we started doing that from the middle of We basically went into crunch mode at that They were mostly burned out because they weren't it was going to be used for. And because we wanted to get it done as fast mode, which at that time was seven days a at least 10 a day. And we did that for seven months, seven days Tim Ferriss: Oh, my God. John Romero: And it was really hard. And after the game was released, it was like was still some work for me to get the game be shipped to customers, that kind of thing. I took a vacation, I came back, I mastered for half a year to leave because if we're design, it's just going to become a technology a design company. And so I've already planned after that big already planned to leave and start another And he agreed that he would love to do that. So I said, after shipping Quake, then we'll So that's what happened. After shipping, I started getting in touch mainly--didn't want to work with me anymore, I was like, &quot;Well, I'm going anyway, so let's But it was a very tough game to get through. Tim Ferriss: What was that experience of separating Was it challenging? Was it strange to be on your own and to leave with that team? What was that experience just emotionally, John Romero: Leaving and starting another I was excited because I was going to be doing amazing creative force, someone super fun And we both had tons and tons of experience. So I was really excited about that. But I really liked working with the other So it was really, it sucked, but it was also It was like that was a lot of really great I can possibly do with without limitations So it was negatives and positives, but I think starting to do something new. And that was really, really fun to do with And we spent about half a year building relationships And finally after six months, figure out who Eidos. Tim Ferriss: What led you to want to write What were the reasons for wanting to write John Romero: So several years ago, I went they basically had heard the story of DOOM's I talked about. So they said, &quot;Can you do something different? Can you tell us about your early life and Instead talking about DOOM talk about how So it was like, oh, kind of my life in games, So it's like, all right, I'll write that talk. So I basically wrote a talk that had a lot with all of the exciting things that had to income stuff, which kind of shocked people. They had never heard any of that before. And hearing the audience and the questions put in a book. Nobody knows about that information.&quot; I was like, &quot;Yeah, I didn't really ever talk And that would be a good idea in fact, because documents software's ludography, really like game ship, what's the authoritative book on Stuff I could actually put that in this history So it was kind of a twofold reason for writing from when I was born until today, and to also that happened during those years, and when cool stories that people hadn't heard before, there as well. There was a game that I was working on called people asking, &quot;So what's up with Blackroom?&quot; And I always tell them, &quot;I can't talk about Well, Blackroom's in this book. So people are going to get to hear everything Tim Ferriss: Is it true that DOOM, the name, a different origin story for the name? John Romero: Yeah, the name for DOOM came He was watching Tom Cruise's The Color of he saw that the guy walk up to Tom Cruise, on his lap. And the guy's like, &quot;What's in there?&quot; And Tom Cruise looks down at it and looks He was like, &quot;Wow, that's a really great name.&quot; We hadn't heard of a game called DOOM before. So he said, &quot;How about DOOM?&quot; And I was like, &quot;That is awesome. Yeah.&quot; Tim Ferriss: And that was it. The rest is history. So John, people can find you on Twitter @romero, Thank you for taking the time. And is there anything else that you'd like Any other asks or requests of the audience, before we bring this to a close? John Romero: Well, I mean, I'm really grateful It's been a blast from the early days of learning using really advanced technology to make shooters I've seen everything that's happened during a really, really, really great time overall. So I'm just really just happy to have had And all of that is basically in this book. Tim Ferriss: Excellent. So John, thank you so much for taking the copy of DOOM Guy. People will be able to find it where books And we'll link to everything in the show notes And until next time, be just a little bit And as always, thanks for tuning in.