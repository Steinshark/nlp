Let's You run npm-expo-start and it opens Expo. But actually you have heard that development builds are recommended So when you should make the switch What does these concepts mean exactly? Keep watching to find out. Okay, so let's first understand are both tools But they differ in how to get started So let's first start So I'll just go ahead and run this command npx-create-Expo-app, add latest. So if I press enter it's going to ask me Expo app package. So I'll just go ahead and say yes going to be just "My App" because we used using npm. So we need to wait a little bit Okay. And the project is ready. So let's open this in VS code. Okay so this is my brand new application. Let's just start the development server expo start and press enter. Now this is going to start by default Expo And let's So I just press Okay. So the simulator is open Now we are inside the app. But if I go ahead and go to the home you're going to see that And this is where Expo Go is. It's an app built with Expo, by the way, It functions as a sandbox environment, specifically for testing and running So let's go ahead and press And now we can see the Hello world! Okay, so far so good. But you might be wondering, That's a great question. And the answer is that React React native is like the low level API stuff that we can use such as native modules, JavaScript engine integration, These are low level APIs, we need more capabilities that don't come So like navigation, routing, OTA updates, haptics, etc. and installing these common APIs default can take quite some time to rebuild your application Finally, to test on a real device, to the computer and run the app You might need to have your developer account already set up, just to get the environment ready to start Expo Go already comes with pre-installed, so you can quickly prototype And you just saw that it took me like And now we are ready to start editing. For example, go down here to the title We have library loading. We have already navigation and we are ready to start of fighting the framework, instead of Now this is great very quickly on a simulator, on a real device using Expo. So to do that, in your real device and then scan this QR code Once you scan this QR code, the app, is going to be loaded in the expo and you're going to have the same benefits Loading. You can quickly prototype and see what That is huge. And notice that we don't need We don't even need to have Xcode Furthermore, you can be using Windows an iOS application by scanning the QR code So this is great. We can start prototyping now and I can see We're using Expo Go and on the simulator This is a great way to start prototyping but it has some limitations. One of the limitations of Expo Go bundled in Expo Go, and to quickly learn is supported in Expo Go, This is a pretty cool website if the library is compatible with Expo Go, Native directory, I can quickly and we can see that this is compatible With Android, iOS, Expo Go, and even web. Now the only thing you have to do that you want to use. Let's say that I want to use the React and I can quickly realize Most Expo SDK packages have partial Let's say that we want to use Expo Camera. So I can just search for Expo Camera here, And of course, most of these packages are going to be compatible with Expo. So you can quickly start that use native functionality And it's also important to keep in mind that Expo Go is going to be compatible Now, the limitation that I was mentioning to need at third party library libraries And in this case, let's you can see that the first one is vision whereas the Expo camera, you can see that and even with another disadvantage of the end of the day and it does not accurately simulate like notifications or OAuth authentication Additionally, because Expo Go doesn't use your app specific package you might experience different behavior So keep that in mind. And by the way, it's totally fine or from the start of your application, that you cannot still use Expo You have reached the point and at this point, Expo And now it's time to smoothly greet to it Okay, so let's create But what exactly is a development? Before we do that? Well a React Native app app bundle, and the JavaScript bundle So in the case of Expo go, the Expo Go app itself serves as a native app bundle. However, with our development build, bundle yourself instead of relying Think of the relevant builds as your own with just the native code required to run This gives you a full control allowing you to install native configurations, With development builds, you enjoy while still retaining the excellent developer experience Which means we will have And also, without having to deal with Xcode There's two ways One is locally, which is going to require to have Xcode and Android Studio But if you don't want to deal with Xcode we can use iOS, which stands for Expo To build our application in the cloud We're going to see both in this case. First, if I want to create a development I can simply run the command This is going to generate the native code and iOS using a technique Now, because so far our application didn't have any package Now the CLI is asking us which package do you want to use So in this case But sometimes you have to change this for something more custom And then come So I just go ahead and press enter. And now it's asking me for the Now I need to specify I'll go ahead and select And on the left, as you can see and an iOS folder as well. And these two folders contain Now to run these native code, we need to have Xcode for iOS And for more information and how to install this, I'll leave a link So I already have Xcode as you can see here on the right. So I can simply say export run. And in this case, I'm saying basically run these native code So if I hit enter this is going to work we are using, the entire native code And you can open and check it out, this iOS folder every time that we run npx prebuild. So if you modify something, the next time to generate this folder, the changes Okay. And as you can see, the development Now in this case, the terminal is letting us know And now on the right the simulator is Now we are not using Expo. We have these native app called My App, And if I press on open, And now we see the same result. But in this case we're using a development That is the final result Once you publish this application, that use native code Now, some of the key differences you can see that This is the okay. So these are the differences. Now if I go back to my app And we would get this same result. So if I go to the index quickly let's say that We still have library loading and Unless we install a new native dependency Now, this is one way. And when we can create a development build But sometimes you want to test To do that we can use CLI. So I'll clear my terminal. And as I was mentioning before, EAS (Expo application services) And one of them is going to be iOS build in the cloud and then install them on So let's use the CLI. So as you can see here on the right, that I'm using here. And I want to test this that I can be sure Once I publish this application. So let's use EA's The first thing that you need to do is So you can check that by saying Passing the flag globally is CLI. So if you hit enter, just to make sure and you already have is CLI. Okay. Just to make sure that we have the CLI, And I'm using the version Okay. Now the next thing that we need to do so we can say iOS login and hit enter. Now it's telling me which is the account that I want to use. But if you are not logged in yet, And if you don't have an account, just go So I'll cancel this process now. Now we can also check if you are ready. If you are already sign in by saying yes, And hit enter. Now this is going to tell me with eyes and some other information Now the next thing that I'll do is This will initialize a new iOS project in my, application or in this project Now, you need to run this on the project Of course. So I'll use my account, And would you like to create a project? Of course I want to create a project. This is going to create a new project Okay. Now the next thing that I want to do is run the command EAS build: So this is going to create a file different flows or settings So I want to configure these So I just hit all and hit enter. And if I scroll here on the left Now this is a Json file. And if I make this smaller you're going So we have profiles like for example This is great for testing, And then once you are sure then switch to a preview And finally create you know that your application Okay, so we can trigger a build by saying that using the profile development Is this one right here, install the application This is going to allow us to see And then Now something very important guys because I created the iOS and Android folder in my, that I have made some changes, and is not going to reveal the iOS if we contain these So if you want to prevent this to build this application, we can simply add those two files So we can say iOS and Android. Now we are not tracking these two to ignore these files so that we actually So keep that in mind. So let's go ahead and close this. You can also use a .eas ignore file but by default EAS So once we have ignored these two files ahead and trigger Now this is going to ask me if I want to This is this is good. I do want to install this package because this package is going to allow us So let's say yes. And this is going And then it's going to start building Now it's asking me for my Apple because we want to install these I have to sign into my Apple And then we need to generate so that they gave us permissions And we also need to register our, our devices. So in this case I'm using And then I'm selecting these two devices If you don't have a device you can add it. The CLI is going to ask you. So let's go ahead and hit enter. And this is going to start It's going to push my code And it's going to start the build We can double check this And in the dashboard you can see that I have my app So I'll just go ahead and select it. And if I, reload here, you should be able to see Now we can click here and we can see the We can see everything about So you can come here and monitor Or you can just go back to the project Okay. The, you can go to the Expo dev dashboard to see the details about this build. You can see that we were waiting six minutes. And also the logs, like everything, When we are rebuilding you can check the Xcode log And finally, once this is done, you can also come to the, terminal. And because we trigger from these terminal or we can just copy this link. So I just copy this. And then what I like to do is just go to And this is going to take me basically right here and from here in my device So let's confirm here. And this is going to ask me if I want to install this application Now if I go to my home screen, So I can just press on it. And by the way, I need to have So to start this we can say expo start okay. And because we this is going to be using development So yeah we're not using Expo Go anymore. Now on my device what I'll do is just first of all sign in to my account. So let's say login continue And then I can close this. And from here I can just, just close And now it's detecting the server And the bundle How huge is that?! Same thing as before, which is huge right now is that So if I just come here and make a change, this is going to be reflected using a development build, Now if I switch, for example, to like Now having our development push notifications, Using this build is the fastest way and it does not require using Xcode as you install the new machine. We still have live reloading building the application each time or we do something that requires need So there we have it guys. Now you may be wondering, so when do I have to use Expo And the answer is if you are building you should use a development build. Even if you are not using And the development build provides will experience That said, Expo Go is an excellent for both beginners and more experienced mobile development. You can start your project with Expo Go development build as needed. That's it! I hope you like this video. If you have any questions, Don't forget to subscribe! Give it a like Thanks for watching.