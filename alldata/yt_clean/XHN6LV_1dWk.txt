this is a source code that took Usually, when you think about the moon The three brave astronauts You probably also think about Saturn 5. Which was the rocket that was but the actual source code that took us to the moon, known as the Apollo guidance get that much media hype, which is sad engineer or you haven't coded before, source code is pretty interesting and the Apollo 11 mission was the first it happened on July 29th, 1969. And naturally the mission We have the Saturn V, The Saturn V the Apollo 11 mission from Earth. Standing at over 360 feet tall, lift heavy loads into space. And its job was to carry the entire command module and the lunar module Essentially setting up the mission So before I go on to review the Apollo it's important to know about the mission. The Apollo 11 spacecraft was you have the command module The command module was used to the moon and back again. Essentially, the command module crew and any vital equipment. It was also the vessel that the astronauts inside Well, you probably know of them. They were Neil Armstrong, Buzz Michael Collins was a He stayed in orbit around the moon and was always ready and functioning. The lunar module was a module two astronauts to the moon while Michael Collins actually two astronauts landing on the moon And of course, Buzz Aldrin. I keep saying Buzz Lightyear. Now, if you think about each of to actually navigate through space. Sometimes with the help of astronauts, to actually navigate themselves. And this is why they needed a computer And excuse my language, but it was So we know that the command needed to be guided through space. It needed a guidance computer. Well, enter the Apollo guidance The Apollo Guidance Computer missions guidance system. Each mission had two AGCs, and one in the lunar module. and although the guidance computers they ran different software that specific tasks of the module. The tasks of the lunar module tasks of the command module. Lunar module was for landing on the moon. Command module was for the astronauts there and back. by today's standards, the AGC was but don't get that confused the AGC is a complicated computer. You may have heard media often describing like a calculator than a modern computer. This has been disagreed by It's not a simple piece of It really just undersells and you'll see as we go on how The actual computer was sophisticated which allowed it to run multiple And you know, this is in 1969. This was obviously quite a with really many, many demands. The myth about it being a calculator looks a lot like a calculator. It looks like this. And this is all you would see. So this is actually known as Often it's abbreviated to DSKY. I'm going to call it DISKY And the DSKY provided the interface with the Apollo guidance computer. Now the DSKY operated by using the verb is the action that the astronauts as, you know, display information, was the specific data or parameter that altitude, speed, velocity, whatever. so, for example, if the astronaut wanted enter a verb and then a number like 16 like 65, once they press enter, the AGC into the display area or the display. Now, at the time, having a display common in the programming world. In 1969, your average software punch cards to code, which is Punch card programming was actually still But because the AGC at NASA's headquarters to communicate and run multiple tasks something that we take for granted today, so DSKY wasn't really common for all it because of the specific mission. The actual guidance computer or electronic definitely lacking so the DSKY allowed the astronauts and again, for today's standards, the It's just amazing how much they With so little. The AGC had a RAM of 3, 840 bytes. It had a read only memory So comparing it to a modern 00000045 percent of the Again, a really groundbreaking That being said, you can't really complimenting its source code. And the source code, that's pretty epic. This is Margaret Hamilton. She was the director of MIT instrumentation lab. the lab was contracted to build missions, not only Apollo 11, there You probably would have seen this the Apollo missions and Margaret side of the Apollo missions. This is Margaret and she's standing code that took us to the moon. And another interesting fact about coined the term software engineer. And Margaret and her team developed the And this is it. We were lucky enough because in Gary, uploaded the source code for I'll link it in the video description. The software was written mostly is actually what you see here. Assembly language is indeed one in programming to work with. It's an older language. I haven't worked on assembly before, assembly are quite experienced developers. Assembly itself is a low level provides your direct control. over a computer's hardware. Essentially, it sits above machine code. Machine code is actual binary instructions In other words assembly is a programmer give instructions that Almost like speaking directly But assembly is much more easier to which is what a computer thinks in. And raw machine code is It's a bunch of ones and zeros. So the actual software for the Apollo If you get the luminary, and this program guiding it during the lunar descent, GitHub repo, which you can see here. All the luminary code is in So whenever you think of luminary or The other part of the So this code ran on the AGC Remember the command module was handling navigation, docking, And in the GitHub repo, all the folder called comanche055. I'm not sure if I am So we're just going to focus the two are quite similar. Originally, the code for the instructions, just one big script. But when they decided to actually for easier management, the Decided to split it into smaller sub programs or different features. These smaller pieces are then all agc. So you'll see that there agc in each of the folders. The script is just responsible But originally the script was just In modern programming, if you haven't program, it's not just one big file. How the repo is set out generally developed nowadays. You create multiple files So that's the actual structure of the actual code, which surprisingly if you go through the actual code, a lot of comments, which is good. And two, there are a lot of jokes. For instance, the ignition routine That's the name of that part of the code. This section of the code manages So this includes igniting the controlling the burn duration, So sometimes they were quite specific sets of instructions. For example, another part of the code is Code has nothing to do Its name just reflects the fact that Between the astronauts and the AGC now, why did they call it Well, because the actual DSKY allowed And receive some sort of visual AGC, just like a pinball game. Now in the same part of the that's very interesting. Comments in programming is almost an explanation about the code. It doesn't affect how the anything with the actual code. it's just like a little post So in the pinball file there was a comment you can see here and it reads, it will about thee that usually talk of a noun and now this is a coder who is just And this code used a lot of nouns the assembly programming language. This quote from Shakespeare references terms like noun and verb, which be boring or maybe offensive. to others. so whoever wrote this code just work and the assembly language. They're just probably tired of Pretty normal feeling to have a complicated script like this. Still pretty funny that they are And there's a ton of The coders just really liked In line 666 for the lunar landing my sterioso, and this translates to Obviously 666 is not a good number in the lunar landing script, handling There's this comment, which reads, So this actually seems to be related rotating or moving something. And the programmer just chose to Then further down, there's this comment in and it says off to see the wizard. this is a well known phrase Oz, which was released in 1939. this is an important part of the So off to see the wizard is What's interesting about this is that the programmer's headspaces at the time. Instead of writing mundane and over and over technical notes, they really This doesn't really happen File names, Comments are always even if you are coding something So it is quite cool to see them an important project and mission. So that in a nutshell is interesting However, no matter how well always some issue that pops up. And often when the media or people source code, they speak about the happened when the crew was on board during the Apollo 11 lunar descent. The AGC in the lunar module These alarms actually indicated that so seeing this may have been a bit of a Here's what happened. during the lunar descent, the AGC was At the time it was handling The issue arose because a radar command module was left on standby. and this radar system was unintentionally computer, adding even more work. so astronaut Buzz Aldrin entered a data about the lunar module's altitude, limit and caused these alarms to happen. But despite these alarms, the with a really clever solution. The A GC automatically restarted and altitude display to ensure that essential Houston's flight controllers at the Steve Bales, assessed the situation, safely proceed and they could go ahead. So they repeatedly gave the astronauts a You can see this on the actual command center didn't even give a They just said everything Now, the interesting part here is this was an issue with the programming This is not true at all. in fact, I believe it's still the situation is brought up. The problem was not a mistake Or even a pilot error. It was an actual known problem so the engineers had previously it was safer to fly with the replacing it with untested equipment. so it wasn't a big deal at all, but up about this, this error does pop related error, which is not true. The AGC was a brilliant computer. The source code was extraordinary. And looking back on the code and the to think how they were able to achieve And what's really just impressive and the programming behind it. They didn't have the luxury tools or Yet they pushed the boundaries combined brilliant software with And that resulted in one of It's a really such an interesting read. There's a ton of resources that I recommend going through. You can check out some Thank you so much for watching. If you like my content, please I will see you on the next one.