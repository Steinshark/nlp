Welcome to Introduction to programming. My name minutes, we'll be taking you through this series cover the basics of computer programming, which might want to learn. We'll be starting with the there, we will be working our way up as we talk as loops and arrays, we'll discuss how to read some strategies to help you plan out your code that are going to be covered in this lecture style there will be timestamps in the description, proficient in some areas of computer science, or be covering. Hopefully, by the end of the series, science is, along with an armory of useful skills language you decide to learn. First, we'll only all programming languages. So we'll be shying and command line navigation, as those are things will be no software required for you to download as we won't be writing any code in an ID to is meant for those who are interested in computer start and have little to no background information then strap in, as Shawn and I work our way starting with the biggest question probably on Well, the dictionary defines it as the process of But that's a really confusing definition. So Essentially, it is attempting to get a computer to Imagine this for example, you want your less except he has lost the instructions and can only your friend is far from competent. And so if they build the set, there are many mistakes that they there's even one piece that you have not told him the entire Lego set will be ruined, and you will causing the whole goal of the project to be is very similar to how programmers code. Instead less than intelligent computer. And instead we are feeding information on how to complete a important thing to note is that computers are super sophisticated piece of technology, when in from how we manipulate it to serve our needs. friend instructions. Since in a programmers case, you. The computer only understands machine binary that is designed so that the computer can instruction fed to the computer is converted into the computer to carry out a task. Going back to if he was not only less than intelligent. But English and only speaks in Mandarin Chinese. the instructions that you understand in English This process is essentially what you must do for instructions that you give. The big difference very difficult for people to understand machine want the computer to do into machine code is and will take a very long time to do it if you millions of those ones and zeros. So how exactly into machine code. This is where programming are fundamentally a middleman for translating a much easier for humans to learn than machine code, back to our Lego example, a programming language to take the instructions you give them in English English speaking friend can understand. This makes backbone of any good program. Think of programming somewhere in the middle. There are many different their own unique uses. languages such as Python can perform a variety of computational tasks, or more specific purposes, such as moving a robot vary and how powerful they are. For instance, designed for smaller tasks, or Java or Python processes. We can measure a programming languages code, the series of zeros and ones we talked such as assembly, or C, are closer to binary than Python. The basic idea is that the lower the level will resemble what the machine can interpret as that each language fulfills, choosing a language as are usually many languages that can accomplish and decide which ones rules interface and So now that we know what programming is, how do we type words into a text document and automatically machine code, read it and carry out a task we can't just write down rubbish in certain segment, and expect the computer to understand. the answer is with an ID. And ID, which stands facilitation of code by a computer. It is provide programmer can easily write, run and debug code complication or interpretation of the program. computer, such as a game browser, or even the file IDs are able to turn your code into machine results. In addition to providing a place for some extremely useful tools for programmers in error checking, because as we'll talk about filling for frequently used words or phrases, and and manipulate the files within your project. be written on punch cards and then fed into a lot of pain. IDs nowadays act as sort of a fast easier for programmers. An example of a specific you can see the program that is currently being which can print out useful information for the Java code. IDs are extremely powerful and will be So through these IDs, we are finally able to write the computer not being able to understand it. do we write this code in the ID. Because it's not programming language and expect the computer to syntax comes into play. Now, just as if you were language can be very similar. Some have different weird or abstract concepts which may be confusing. a set of rules that you must follow when writing those rules is grammar. Programming grammar is real world grammar. Each programming language has a tee if you want your program to run correctly, can be things such as how you type out certain code, and how you set up certain functions. Each may share similar rules, all will have some quirk something that catches a lot of people off guard follow the same set of rules. But as we spoke is specialized for a specific task, each needs disregarding these rules will result in an error. life will result in an unintended message. As an such as initialize a variable, which is something still relevant. In Java, you'll notice how we have in this case an integer and also add a we don't even need to define that we are trying we want to create. And in JavaScript, we but we don't include what type of variable we want you can see how much a syntax matters when goal of our program remained the same, which all the programming languages shown took different follow this syntax because remember, computers or misplace a character, the entire program which is something we'll talk about later. Think the entire context of what you're trying to say let's eat grandma. If you were to forget that it changes the entire context of the sentence, grandma. The same rules follow for programming. your program can be corrupted and misinterpreted useful is that they will let you know if and errors, of course, being parts of your code, which previously, the ID will tell you where in your program until the error has been fixed. Because learning a new language. It's recommended that before beginning to write complex programs in to learn but easy to master. And as soon as you syntax errors and take care of them easily and gist of syntax and programming rules. So now that we next need to cover what happens after we Because writing a piece of code for a game or for interprets the program, how will we know what's programmers do this by looking at the console. The that us programmers can use for a variety a short while ago, we heard a picture of a basic the console. The main use of the console is to by using a print statement. A print statement is a prints text to the console. The print statement about in this series. And it's about as simple is one of the most important functions in about every programming language. The most basic to just simply make it Say something. This and then include wherever you want to be printed the segment of code print hello world will cause console. Pretty neat. The print statement is also output from program. For instance, if you could example, to determine what four plus three is, an answer. However, what is the purpose of having able to tell what the result is, instead of simply instruct the computer to print the and upon the program's completion, seven the console allows us to easily print information important to note that the print statement varies For example, in Java, there are multiple versions would like a line break after the printed text which make your code run more efficiently. Also, certain nuances of its function contains between to carry out the same overall function as it general. All of its functionality makes a print developer tool. However, it is important to tool. The console is not really meant to be viewed hidden away behind the scenes and other methods of graphics, or images are used to convey information you're using your phone, you see the console can use the console to give yourself information to implement it in the final product because it remember to use the console to its fullest extent as it is a great tool to use to tell how So now that we know a bunch of information about them, along with the print statement under our the computer can do all by itself without you we'll be covering some basic number mathematics mathematics, the computer already knows how to subtraction, multiplication, and division, all of screen now, in any ID that you may install, you'll problems using the print statement. Which may seem computer to do math when you have a perfectly good that computers are dumb. And anything we want a basic arithmetic, while simple helps out in almost wanted to build a basic calculator app, we need to display the answer to an arithmetic problem when divide two numbers. Now in addition to the four include an additional operator known as modulus. don't worry, since it's not usually taught in math a divisional operation. For example, when we take computer to take 10 divided by three, ignore the the operation. In this case, one, since when we one. The one in this case is what gets printed say in the case that we take 50 modulus two, since zero if we were to print it out to the console. the most obvious being if we want to determine If we take a certain number, modulus two, and it any number divided by two will always result in a returns one, then we know that the integer is operators a lot more than you think. So it's good Now, not only can our computer work with numbers, by the way, are just another way to say text. For a string, and anything enclosed by quotation marks We'll cover more about strings in a bit when we We already talked about printing strings to the wanted to print out the statement, game over just make a string that says that exact phrase it would be more useful to print out the actual where the score can change each time you play. for. Well, we're also able to print out multiple together in the print statement. This is known as if we wanted to print out the statement gameover rather than a string. We could do this by and an integer like so. Print game over plus begin with a print statement, which again will be we're using Python. Inside the print statement, here comes the important part. From there, we use Just like if you were adding two numbers, then sign for the final string was your final score. statement easily. Doing this we can easily integers together in one print statement. We could far and do something such as game over plus four let's say where you have a game which gives you task that you complete it. This demonstration also which is that oftentimes to get your program aspects of code. Now it's important to note in the parentheses and print it out character for to add a space onto the end of their strings. This from the previous example would be printed out which isn't that appealing when displayed on the always put a space after and before your strings doesn't end up like that. Another important quotation marks, and four without quotation marks. rather than a four without quotation marks, which big deal, but again, computers are dumb. And if marks, it will return an error. Because the to perform the operation on a number and thinks which is a big no no in programming when you're make sure to make a mental note of whether or not because that type of stuff makes a big difference. power of computers. Now Next up, we're going to of computer science. So make sure you pay discussing variables, what they are and how a variable? A variable is simply something that manipulated. Think of variables like a cardboard in them, which can be changed that replaced and store information for the programmer to reference a name, and a piece of information stored inside covered next, and the name is simply a name for on the cardboard box in Sharpie. Now there a programmer can use, or right now, we will just which include integers, Boolean, floats, and off by talking about an integer. An integer a variable that can store an integer value. 2,147,483,648 to 2,147,483,648. Notice how I will not hold any decimal values. So keep that in A Boolean is very primitive variable which can variables can only hold these two values, and which we will cover soon. The next few types of variable types are floating point data types, can store numbers with decimal places. Whereas floats and doubles can. The main difference store numbers of our precision up to 32 bit. All 64 bit. Essentially, a double can store more down to how precise you want the variable to be. the strings we've talked about beforehand, except store strings of letters, which are just words and and storing input information. Strings can also of string variables and pre written strings. This readable format for the user. For example, imagine input and storage that string of text and name. than simply displaying their name, you can add the concatenating. Your name is plus a name plus a while also adding variability to your code, which end user. Finally, we have char variables. char they can each hold one character. This is useful or one character in a string without using a a game that is controlled by the keyboard, the pressed and translate that into carrying out some but chars can hold more than one character. So why are variables so useful? Well, being can be easily referenced later is essential you're going to want to keep track of things such a variable called name or score, you store this add to it or modify it. Also, many times to which cannot be pre programmed into the code, information. A program may also rely on factors in which case a variable is once again required. is quite necessary for carrying out many out. For instance, multiplying in variables or are the backbone of any program, and you'll find efficient code. So it's best that you learn what now that we know all about the different variable we're going to delve further into what happens how we reference them, and how we can let's go over what happens when we actually define which initializes a variable, and that code is little space in memory that stores your variable later. Going back to our cardboard box example you had your own storage facility, and you make a you put a piece of paper with the word no want to know the contents of your name box, you the contents no pointer exception. This is what is the memory in your computer. The box is a the variable is set to be equal to. Anytime you you can simply call it and the computer will pull and use it how the user see fits. Another thing make a variable without putting information inside new cardboard box, gave it a label with a sharpie, You're simply saving that space in your storage you want to store information in it later down information given to you by the user, in which know what the user will input. Just to note that which does not have any information in it, you'll which despite being an amazing name for a YouTube when programming. Now programming languages allow that we've created. For example, let's say we And instead of setting it equal to no pointer created named variable. This doesn't create a it simply points to the same location of memory we back to our storage facility example, this would channel name and storing sheet of paper with the added another label below the name box, and which point to the same contents, that being this to save space in our code for things that we can also be updated throughout your code. For and inside of it was the integer 17. Then you age, all you would have to do is reference the you want the variable to hold. In this case, 18. with a sheet of paper eating 17 inside of it, and replacing it with 18 and then placing it back in the contents of our variables throughout the code if you were making an RPG, your character would etc. As the game progressed, you could player could get more powerful, the further along to create new variables, you would simply need facility, erasing and replacing the numbers on your code. Just keep in mind that these variables certain value is stored. So we can easily update After the code has run its course the place in and the program dedicated space for the variable new boxes in your storage facility. And at the end the new boxes next time. Another cool thing you is add them subtract them, divide them, multiply making a calculator app and you store the first second as number two. You could then multiply them or store them in a new variable entitled the user could input new numbers into the number simply be set to those new integers that the user Through those specific numbers, this allows you and what's going on in your program, which is multiply, divide or take the modulus of strings, let's say you had a string str one with the contents there, you could add str one and str Hello there, either storing it in a third The last topic we'll be covering on the topic of which will be it may seem odd, but it's extremely be covering it now. Now variables have to be one variable that store the player score, you'd have score. Since you can't have the phrase player have their own personal preference when it comes in this lecture is called camelcase, which is but capitalizing every word that follows using the camel case method, the variable us to easily see and identify each word and like the player score before the final boss. it would be really confusing and hard to read. bugs in our code and need to quickly scan through to the overall readability of the program. conventions like using underscores to separate the we'll be sticking with camel case. Next, which at their core, are statements that change conditions. For the sake of keeping things simple our code will not be following the specific path. path. The main type of conditional statement and this will show up countless amount of times sounds, if some condition is true, and usually carry out the instructions located within the if brackets are used in most programming languages works like this. If the condition in parentheses brackets will run. And if the condition within over all the statements within the brackets. A most programming languages, some, like Python, piece of code starts and ends. But for the sake of condition within the parentheses can take on 1000s string variable name is equal to Steven, or if the than five. The list goes on and on. Each of these will remember from when we talked about variables we run the code inside the curly braces. If it's never existed, and move on with our code. The statements that go with it elsif and eltons. after an if statement, and carries out mainly the elsif statement will only be evaluated if the bypassed due to its condition being false. So we we will run the code inside of that statements But another statement inside of the parentheses if neither of them are true, we would skip both can be a hard concept to wrap your head around that evaluated the if statement, if age is equal stated outs if age is equal to 12. Now, if the age that it is, then the code immediately following run. The Ultra statement we made will not even false. And thus the print statement inside of that and the code will move on to the rest of the age variable to be 12 instead of 10. Now instead it actually evaluates as false since age is no skip over the print statement, which prints out the elsif statement, we check if age is equal to code inside of that conditional statement before as a review, we check the initial if statement. if statements curly brackets and move on with our we then move on to any elsif statements and true. We can have as many elsif statements as we your code. So we'll talk about some alternatives the FL statement. So now we'll move on to the it comes after an IF or an elsif statement, what. As long as the proceeding statement slash back to our previous program, we could add an his brackets run at the age variable wasn't 10, that didn't fit into our parameters. It's good end of your conditional statements to catch any Now remember back to the fact that we could have get pretty cluttered. And so another very useful problem is a switch statement. A switch statement statements together, you write a switch statement that you write out how many cases the variable and then under read write out five cases that the listed under each case would be carried out case. Now switch statements are different sets. signify the start of a set of instructions and a because you are able to essentially use many if nearly as much. In switch statements, you just at the bottom of the expression to denote any and There simply catches all the inputs that don't fit to just case the end of an if else chain. Now, times programmers want their programs to function For instance, a program could function differently such as allowing user to use a program or not user respectively. Or in say, a video game. If the user want to give them harder opponents to battle. the color scheme depending on the time of day. Or is meant to move on to another screen in an app, screens if the user clicks that button. A program thing every time, and would be very primitive its conditions. So now that we know how to make we can do with those comparisons, let's move on to And that is arrays. Now we've already talked about singular bits of information for making our code that comes with variables is their inability to For example, let's say you're making an app which there's no real easy way to create lists using variable store the names of six or seven different paper in our cardboard box no more. And besides, string variable, you would still have a lot of a list such as searching through it, splitting it done with them. This is the problem that using guessed by now, a list, you can have an array array of other arrays, which is something we'll they want to store a lot of variables containing such as a grocery list or a high score list in or Google Sheets. Here the title at the top and which all relate back to the title. Arrays are of information that can be easily searched methods of breaking down and using arrays to find different variables. As an example to show just company that owns an app that has 100,000 users. they input the username they want and then your account name hasn't already been taken. Doing this all 100,000 of your users to see if that username be able to get Pain all of this information out if the account name has already been taken important thing to note about arrays is how you Let's create a basic array called numbers and when we want to refer to each cell in his array, fancy way of saying that numbers placed within the in this array would be the first index, the that's simply not the case. In computer science, zero with element in the array. This means that we just made, the number four would actually be and so on. So instead of starting our count from confusing, but it's one of those programming commit to memory. If you were to not follow this this array as the 10th, you get what is referred trying to reference the 10th element, but there to do is reference the ninth element. Another has to do with their size. When you initialize ways. You can either populate it with the elements there, creating and filling the array at the same the array to hold, essentially the array size, is because when we initialize an array, it creates you give it. no more and no less. This is great because we can do so instantaneously because the is stored. But the one downside is that we can't sizes are final. Think of this like setting up with a certain number of books. And then moving on we have no way to go back and add books to that we decide how much space to dedicate for an array, Once again, because this is extremely important to defined, there is no way to change the size of it. eight, and you try to add another name to the when messing around with array sizes. Of course, when you initially make the array and allocate find out that you need more space to hold items, through conventional methods. Another small thing you initialize an array, you must determine for example, you have to specifically say it defining it. And also you're not allowed to mix full of integers with a few strings and some be the same type. Now the last thing we're going the practice of putting arrays inside of arrays. a 2d or two dimensional array. Think of these as Now, if you haven't Think back to our Google we would add rows as well. So now each element in or an integer variable. But an entirely new array we index these is mostly the same, except we would with the row and then the column. So a number three columns down, in this case, the name be two rows down and to columns across, in this can also make three dimensional arrays by putting but that's a little above what we're going to Next up, we're going to be talking about loops. to be talking about loops. So what exactly are loops. So what exactly are loops? Next up, we're are loops? Next up, we're going to be talking as you can probably tell by that statement right used to run certain instructions repeatedly. Just repeated five times. loops are very useful for a to print something 15 Sure, you could just copy is really annoying to have to do, it becomes even 100 or so. Now what if instead of rewriting you would simply place the print statement inside would like. Now that's the power of loops. With times. Now, there are three different types And first is the for a for loop is very useful where you would like to carry out a certain set of loop varies depending on the language, however, it a condition which the integer value must meet in the integer value at the instructions inside the the operation you set will be performed on the condition your set, usually being greater than continue to run. Eventually, when the integer has it to the point where it no longer meets the code will continue to run. For example, let's say zero, then we set the conditional statement we're saying that as long as I the variable we the instructions contained within the loop. meaning each time the loop runs, we increase it a simple print statement. Now let's run through than three, so we enter the loop and print out we add one two, I'm making it one moving on. One the loop and print out hello world. Again, we had than three, so enter the loop again and print out and it becomes three. Three is not less than three the loop and it terminates. Moving on to the next can extrapolate it across programming to fit your sure to set up a condition that given the initial not be met to avoid creating an infinite loop occurs when you give a for loop a condition which program. And so software crashes. For example, a less than zero, and then adding one to either the suggest increase infinitely. After the for loop is or a for in a list loop in Python is used for the loop will go through each element in the for each value. If you would like to read all of value, or perform some operation on them, a for we could have a for each loop which iterated value of each array location. Next up we have the out instructions while a conditional statement certain variable is true. As long as the numbers equal to another value. For example, while loops not contained within one statement but stretched condition is true. Like a for loop, you could make false and exit the loop. However, while loops infinite loop. In fact, it is very common for wild you would like the program to continually all the way through until you exit out of the a while loop would be used to iterate through your game runs. From there you can perform operations infinite while loop could be done by simply using always be evaluated as true. Finally, I'd quickly the do while loop. Do while loops are very similar instructions at least once even if the condition while loop. Essentially, the conditions inside the condition is still met, they will run again can see loops in there many varieties has some able to perform an operation many times in a overall decrease the clutter of your code. Next about common programming statements and dive into More specifically, we'll be covering the different programming and what causes them. Now when you're aren't always going to go the way you expected work as you had intended. too. We programmers call going to come up in computer science, and so with them. Often referred to as bugs, errors and of three types, syntax errors, runtime errors, and in today's video. To kick things off, let's talk of the three to solve, since they are oftentimes you remember back to earlier in the video, when we that if you were to break the programming rules or what syntax errors are parts in your program where computer doesn't know how to interpret your code. at the end of a statement in Java, accidentally or even just misspelling the word string when Lucky for you guys, these errors are extremely where the error occurred, and what the syntax we mentioned that IDs are so useful because they errors and usually provide helpful hints as to misspellings or grammatical errors in an essay infuriating things. Another useful thing about program will actually restrict you from running making them even easier to identify and fix. The runtime error. These errors don't show until you error. runtime errors are usually caused by a but the computer physically has no way of The most common of these errors is one which as a refresher or an example. Think of an infinite front of the TV, put on the office, and told him what she said joke. Seems pretty simple, right? you put in friends on blu ray. Now, Michael, would be sitting there for the rest of his life. you give it some condition that it has to complete you give it no feasible way to finish that task. likely it will crash your program. As the computer gave it. As a computer example, if we try to have greater than 99. But eyes initially 100 and only and the program will crash. To avoid these, you code before running it, especially with loops completed by the computer. Carefully planning out useful practice, and something we'll be covering type of error that we'll be covering is a logic A logic error occurs when the code runs smoothly result that you get just isn't what you want it. and you want it to instruct a program to add two the multiplication symbol on accident. This leads wrong with the code syntax or runtime wise, the had intended it to. These are often the hardest you'll have no idea why the code isn't working, This is why it's a good idea to test your been programming for an hour before testing your errors. Logic errors can be extremely fury ating, huge pain. But if you know how to effectively of debugging your code that brings us straight program. Now let's say you've written a program, You've been working hard on this and you're just and wait for it to run smoothly and efficiently. the three errors we've just mentioned. You really debugging comes into play. If the code is giving read the error. Oftentimes for syntax and runtime the console. See what line or lines it points to see if you can understand and fix what the problem heard of it, then try googling it as there are which service forums to ask an answer problems someone else has had the same issue and there's or runtime error pops up, you should be able as I said before, the issue may arise from some planned for beforehand. Maybe you did something adding them. These are logic errors we talked have red text show up to explain what went wrong, are a few different strategies that you can use in you could use print statements and the console wrong. Imagine you have a conditional statement x is greater than five, and it will run another supposed to be greater than five when the program the program is still printing out x is small, this problem. Specifically, you could place conditional that would print the value of x. Now the computer is thinking, printing out the value the variable has the value you wanted to have. And conditional is something went wrong, and x was set x is equal to two, which is why x is small is problem is, we can track down where and when in print statements to determine where your program of these issues and solve them. If you use this statements afterwards to avoid clutter in the also be solved using a breakpoint. a breakpoint breakpoint at is reached. If say you would like to set a variable based on that conditional. But you you can place a breakpoint inside the conditional being reached, the program will pause and wait This signals that this button occurred where the conditional path has been reached by your program. this was or wasn't where the error in your code with print statements. In order to do both pause variables at the moment in time to give yourself also have multiple breakpoints to help slowly work an error has occurred. A combination of these two in your code you have incurred a logic error. have tracked down the section of code that causes but it's likely you put it there for a reason. don't have to. Firstly, try commenting it out. surrounding sections. They can also be used to the not be read by the program as code and will be that is only there for you, the programmer to but it usually involves placing some symbols commented, examples of how to comment in different when you comment something, the ID will grayscale to determine what's commented and what's not eyes without actually deleting it. If a problem is it's gone afterwards, then that section of code is and there are still issues and move on to another you can tweak it until it works as intended functioning program once again. Now that we've error, and a strategy on how to find and fix it, to avoid errors in the first place. Firstly, the code completely bugging out and you being revert to a previous version where the code was you will probably not lose too much work. Version this as they backup code to an online cloud versions of the program from at any point. Also on ensure that the current version works as intended. it prevents you from saving a backup that it will be easier to find if you have only time you ran it, and it worked. And thus, you problems. If you've spent five hours coding it's going to be likely that at some point, and it's going to be even harder to figure out extremely frustrating, are a fundamental part now that we've covered errors for a bit, let's and talk about one of the most important concepts may not know it, but we've actually been talking statements for loops. And even the basic math of functions, which of course, begs the question a function is a segment of code that can be easily the type of function will do something in return. numerous places in your code. Essentially, they're present, and giving it a name, which, when called, that you had wrapped up. For example, the print us to print something to the console anytime we the print function and enter in what we want to be the computer does it for us. Behind the scenes, in charge of taking your text and translating it almost all programming languages realize that you to print something to the console through the use the print statement to reduce the stress and to the single line of code that is print. All of console is wrapped up like a present and given the main theme of all functions and the backbone there are going to be sections of code which are which you want to allow different inputs of. And these down into singular lines of code to save you will see soon functions are extremely you utilize all the time in your computer science of functions in everyday code. There are 1000s the IDs. However, because we won't always use a single program, you have to import these which is something that we'll be covering later in most programming languages. And they are not they take in arguments and whether or not them by whether or not they take arguments. But are. arguments are essentially variables that we and then either returned back to us printed to functions with arguments like this. If you walked you wanted to get food without supplying a type of order to get the food that you want, you need to they can give it to you. In this case, getting of food is being passed in as the argument based pass into the get food function, they will that the argument can be many different things. It the menu, and such as the case with arguments in arrays, pretty much anything. As an example of a the max function, which takes in two integers as the two. Now for this function, if you don't it's going to throw you an error. Just like the want to eat Since you didn't provide him with any numbers you want it to compare and return Since are a way for programmers to have one function on whichever variables can be passed through help diversify your code. Think of it like this, be made regardless of what you order isn't going pass in arguments and tell them what food we want, can become available to us, which is exactly what function. Now that we've talked about functions which do not, because functions can also be and still be incredibly useful to the programmer. RPG game, and one of the options you give your various points throughout the game. Now every the view stats button, you don't have to type out they may have, your code would get cluttered and is you could package the six different print stats, you don't need to pass in any arguments same thing no matter what the statistics on the their stats, you could simply call the print stats for them to view. This allows you to save a lot of is extremely important when your programs begin and you want to easily search through it to maybe into those that take arguments and those that that return values and those that do not. Another making your own functions, which is something choose what your function will return, if anything to the user, whether they be in the form of string the thing to note about returning variables is you have to return the value into something or talked about previously would return an integer with it, we would have to either set a new integer Or we can print out the result of the function, value between the two integers. Using functions you have to pair it with something in order to Let's say you had created a function which took in using that fancy string that we talked about string. This combined string function could then it returns is basically a string, the variable this combined string function. The last type of these are known as void functions. Oftentimes, we created earlier. Simply use to condense large your code. These cannot be set to variables since that's within them run through. So there you have arguments and return something, ones that take in don't take in arguments, but still return values, anything. Each of these four types of functions will probably find yourself using each of them the different types of functions and know how to powerful. Finally, I'd like to talk about one of it makes it super useful to make large changes entire program. Each function call is essentially so it's very easy to make changes to that initial code. Let's go back to our print stats function new statistic that the player could level up and you'd have to go back into your code and find stats and create another print statement if you had created a print stats function like do is find out where you define that function and statistic and you're done. Now every place which will now also print the new statistic as well. if used properly, and we haven't even scratched cover how we can import other people's functions Before we get technical, close your eyes and you could grow your own trees, chop down your own scratch. But why do that when you can simply go to others have already made ready for you. That's your code. Importing functions allows you to gain have already made for you. This is just as useful are super useful for any given program, that it Luckily, other people have already done most you were able to use an import statement to import can use as you write it. A library is simply a theme, and maybe a math library, a data analysis or anything you can think of really, there's such most functions you require that are not hyper at some library. In fact, a good portion of any which can make his or her job easier, instead of Wow, that's sick. How do I do it? Well, it's quite an import statement consists of three parts. The you would like to import from that library, and like to use. For example, we can load up the Java short for utilities. And then from that utilities allows us to read information from the user. A methods to help differentiate between the 1000s even more specialized than that. Now, if you don't pull methods from, you can use a start import all it can be beneficial to be more specific, as it helps with the efficiency of the program in to import a library is import followed by the is more computationally taxing than importing would only be using the factorial function from computing power to import the entire library, and For smaller programs, this isn't a big deal. larger projects. Therefore, you would instead use import java dot math dot factorial, and now have the functions that you can use. However, it saves another function that you hadn't planned for, Many times. If you try to use a function from a ID, he will prompt you to do so if you're trying think of the functions you're going to need in you will probably run into a package or library And if you can't, there are ways to download and what if, after all that you still can't find a for? Well, that's a perfect segue into what we're structure for writing your own functions. So at are and how we can get some very useful functions definitely going to be moments in your programming own functions because you want one to be made making your own functions is extremely simple. cover. Now we've previously used making functions Stats function from a little bit ago, they were into what is needed for an actual function to a skeletal system of everything that needs to work. Now think back to the four different types functions that do and don't return values in arguments. For creating your own functions. talk about how to approach creating each one of one which takes in no arguments and returns no small things I want to note about function naming talked about previously. also translate over functions, and you can't use special characters to want to follow the same camel case style, which is not capitalizing the first word, but so in general, for making functions, each language that it's actually a function. In Java, you have you don't really need to know unless you're going tells the computer which parts of the code can use all of our functions that we make are going to type of function it is. So in this case, since put void to signify this type of function will function name after those two identifiers, along parentheses are where your arguments would go, if But since for our first type of function, we're let's just leave those blank. All of that all you have to do is put the word def, short for parentheses. So as you can see, each language is functions. But the main thing we want to remember have what we want our void function to do within and we're done. In Java, the confines of the loop braces. And in Python, it would be until you are primitive type of function, we've made. Something quite similar to the print stats function from creating a void function that takes in arguments. to the previous except for one small adjustment. Well, we put any variables, we want the user to And then when we call that specific function, passed into it. For example, in Java, let's make a the product of those numbers. We start with the since we won't be returning any values, and you define which type of variables you would like and then a name for that variable. This name is user passes in. For example, let's just call it we simply add a comma in between the two and hold the second number. We can do this for however But for now, let's close off the parentheses number two, as you can see, we refer to the two has num one and m two, whatever numbers that the into num one and m two. Now, whenever we want to to make sure that we are putting two numbers becomes num one and the number eight becomes num number 40 is printed to the console. It's pretty variables when making arguments. So you can have and two strings all within one function. The last when you call a function, you have to follow the for our multiply numbers function, you couldn't two integers, because that's what the computer is that we've gone over how to make functions that that do. And we'll start with ones that don't defining functions that return variables and you have to specify that you want this function to Java, where you would replace void with int to to give you something back to you in the form of to return a string care or even in an array. whatever variable you want to be returned by that about making functions that return variables is return a variable no matter What? What does this in a game. And inside of it, there was an if you returned a congratulatory message. This works and the player score is above 10. But if the enter the if statement, and then you don't have And so the function is going to throw you an which may seem simple. But if you're making a high amounts of cases, then this can get out of sure this doesn't happen is put a return statement integer so unique that I'm able to tell that the usually, an ID will let you know if there's a path a variable when it should. The main point I'm exits and make sure you have a return statement Another small thing to note is that you can't defined the function to return another type. For function or vice versa. The return statement must the final type of function is one that returns for these, all you need to do is combine what you assign your arguments in between the what type of variable you want to return, and then that you're always returning that variable type. can probably tell, functions are an extremely vast to fully understand, which is why later on in this to practice those more difficult topics. Now, I'd discussion from earlier on arrays. arrays, while information. In fact, there are a multitude of including linked lists, stacks, queues, maps, I'd like to talk about two cool, wacky and zany covered, array lists and dictionaries. But before reinforcement of arrays. As you may remember, stored together. When you initialize an array, you be able to increase the size of the array. So when the values in an array, you reference them using that the first item of an array is not at position commonly referred to as its index location. So to it as index location n minus one. However, as the to not reference a position that's beyond the items to it. As this will return an error. We also which is an array containing an array and each of arrays containing arrays containing arrays to do. multi dimensional arrays can be useful volume of related values. If that's confusing discussion on arrays, the timestamps will be in let's go over array lists. Array lists are just array. Earlier, we mentioned how you have to be and to make sure that you only referenced in the However, with array lists, this isn't a problem. has a size of 10. What if you append values, such elements, an array list will grow itself, meaning the array to increase its total size so that the when you don't know the exact number of values the ability to store more values to your heart's with an unknown amount of users that will sign up. lists. But for this surface level series, that move on to dictionaries. Now when we're talking thick book you probably have lying around your science. dictionaries are like arrays in that they are stored very differently. Rather than being dictionary, each value is tied to another value of this, we need to throw away all conceptions data. Since in actuality, it is much more fluid position in a dictionary holds a key value pair. will use its unique key, and the dictionary will like this. Each time when item to your dictionary, the data. And also a custom makes a jewel key one there's only one key that goes to the box Because each key must be unique, we're using error being thrown. Because having two keys computer as to what box or piece of information same value in multiple key value pairs since the dictionaries are more fluid, making them easier up in a more logical manner. That is to say, for when you're using keys, rather than simply I mean. Imagine you have a dictionary of prices at and the value is the price of the item. Maybe You can see the in the dictionary, each key is the the price of each product. So to find the price dictionary using the key bread. This makes it Since you're working with tangible values rather can also manipulate dictionaries and money the lists. You can iterate through a dictionary and values. If you want to find the product with through the dictionary to find the value that is array lists and dictionaries are useful in their to store data, and each boasts certain advantages these three. But since there are so many, we every one of them. And so in order to help you now going to talk about one of the most important searching algorithms. Now just as there are many there are even more ways of searching through ways in which we can look through a list of values high score list and find a particular piece of to give the algorithm a string or object you the array that contains that string or object as lots of software runs on the backbone of being making searching algorithms and in particular, topic to cover. Additionally, this is the main the backbone of many of the methods used within So knowing them will take you a very long way. the index of a particular data points so that on. For example, if you're about to check into the staff must search through your name in the your name is, they now have a quantifiable number prescriptions schedule you for checkups, update search through the list for your name every single between searching algorithms since computers per second. But when you're a huge multi billion point in a list containing 1000s, or even millions are going to make or break the user experience. differences in the amount of time that a user is different types of searching algorithms, we must can be in either sorted or unsorted. A sorted sort of rankl value, whether that be a patient ID, like usernames or legal names. An unsorted list is not sorted by any particular order or reason. Some usually the more efficient ones, and some work are usually less efficient if you end up pursuing both sorted and unsorted lists. So it's good to thing to note is that we determine the efficiency case scenario and the average number of items call this big O notation in which each searching of the array as an integer and, and will output a use to compare with other searching algorithms. takes to find an element in a list. Using these efficient two algorithms are. Alright, now that let's hop right into it. The first type of search And Eve honestly probably uses multiple times search for your name on a list of people, you the top check to see if the first name on the list the next name on the list until either you find A linear search works in the same way, you start value that you're trying to find. And if they're index of that element. And if not, you move on find the thing you're searching for, or you run is because linear searches are pretty bad when case scenario. If the item you're searching for in to check the entire list of items before you find you're going to get it about halfway through the scenario since in the worst possible case, it will the correct value. But linear search on average two. We're halfway through the list. Now while the sorted and unsorted lists, because of the fact the list. The other search we're going to cover like a drawback, but having a sorted list allows than the linear search. So overall, the linear if you have an unsorted list. But if your list is there for you, such as the binary search, which a recursive process to break the data in your list advantage of the fact that it's sorted in order to is much harder to wrap your head around. So let's of 10 names sorted alphabetically, like shown on within that list. in binary search, you would look the fourth index. Just a quick aside, since there the computer automatically uses the next one middle value, you first check to see if the name the name that you're looking for. If it is you it's not going to be including right now. So let's equal to the one you're searching for, you check before or after the middle index. For example, the value at the middle index was Carl, Brandon since we know that the list is sorted, what we list and just focus on the top. Since we know that in that top half. Now we simply treat the top half the process over again. Again, we would find the again compared to the name you're trying to find. that index, but if not, we compare it to see if it to our example. Let's say the middle index of this after AJ alphabetically. So what we can now do that if Brennan is in the list, it's not going repeat this process again and again until we find the middle index is time is Brenden. And that's return the index to in binary search. Eventually, will be the same. And once it is we can return the happens after we have eliminated the entirety the algorithm will simply return a null value to cannot be found in the list. The binary search search. Since we are drastically cutting down the program run faster. In almost 99.9% of cases, in going to return a result faster than the linear option is to go for binary. As for efficiency, scenario, which could be confusing if you don't know is that it is way more efficient than the also o log n as well, which again, is infinitely there are other types of searching algorithms you unsorted and sorted lists. So we will stop there of the most confusing and important topics in the most important question, what exactly does to functions that repeatedly call themselves a function, one of the instructions will be a call extremely primitive example, on your screen. in the confines of itself, calls itself, a some integer as an argument. And we'll use this to that was entered before calling itself again understand these functions, let's discuss the A really good and easy example of a recursive one to n. So let's make a recursive function is the actual function. And we're going to make and as its argument, the reason we do this will be base case. A base case is simply a definite value, are being repeatedly called as we go through the the function, we test the value that was passed if it is satisfied. Usually, these base cases are which has a certain value or is equal to a the base case is set to some requirement that and is important to avoid an infinite loop. We do not if our base case, what's the stop calling the And if it is not, we will call the same function ns, say 99, we would never reach the base case over and over again, subtracting one from n and than 100 until your computer crashes. Not fun. let's make our base case when n is less than some positive integer and and subtract from in which case we can exit the recursive statement. what we want to do is return the sum of both n method minus one. Why do we add and the function as if we were at the computer and see why we start we know that three is not less than or equal to of n, which is three and the returning value of the returning value of recursive sum with an N again, only this time and is two again, and is not will go through the lF statement and return to the returning value of recursive sum with an the recursive sum function to get that value that to three And then returned, hang in there, we're equal to one, and so we return n, which is and that is what gets added to to the previous return three. Now, this three is what gets added so it becomes three plus three, which is six. And from the function, which if you've been following six. Now this may seem like a waste of time, since But those of you saying that I asked you to please Godspeed. Now recursion is a very difficult not 100% comfortable with it at the moment, feel to better familiarize yourself with it. Alright, recursion, let's talk about why it works so well. we must first understand what a stack is. A stack you instruct your program to complete. Based on a the tasks you give it is called a stack. Because one completes, the process is stacked on top screen is showing now, programs we write will with accounting LIFO means lastin. First out, or one removed from it. Essentially, every time you added to the stack, and will be the first one to you can keep adding stones on top of your pile. you must first remove all the rocks on top of itself without end, without a base case, like in never be resolved, as items will be continually completed. In this case, the memory allocated a Stack Overflow error occurs resulting in your chores. And before you complete one chore, you you can complete that one, you get called to do shores on top of one another, the stack of tasks die before ever finishing all of your chores. crash your program. recursion works on these same which is added to the stack. And now that one another function is called which gets added to case and what you slowly start going back down is extremely useful, because by calling the same into smaller sections, and results in the program easier to solve and less taxing to compute than combine these small solutions into the whole introduction to programming series, we want to needed to be successful computer scientists. many professional computer scientists will tell thinking about code rather than actually writing down to problem solving. How do we optimize the What type of movement Do we want for our game? that no good program has ever been written simply sitting down, hopping on an ID and starting to through beforehand in order to plan out our code. it's a clean and easy process and not riddled with into play. Think of pseudocode like this, if you would you simply hop in your car and drive off and ridiculous. Instead, you would spend some time you want to visit? What hotel reservations are you you going to do when you get there? What routes of these things must be determined before you can So how does this translate to pseudocode? Canyon as a program, programmers use pseudocode as a means to plan out their programs before they before going. They throw away syntax and naming they want the program to accomplish, and how they constructing an outline for a paper that you're essay, and plan out your major talking points. details of it all, such as word choice, grammar, we allow ourselves to think freely and not worry yet. Alright, now that we know what pseudocode is, the best part about pseudocode is that it can different people. Each computer scientist their code. And there are probably hundreds of are out there today. Today, however, I'd like to find to be extremely useful. The first of these used to think through the process of a particular representation of a function and how it might conditional statements and loops that they want by arrows and charting out every path of their create test cases and follow them through the flow arrows. For example, we could have a flow chart a number, and if the number is eight, I want the not eight, then I want it to return false. It's a purpose is, and also look for any errors that you such as a missing path. It also abstracts the making it easier to modify or change completely. testing cases, you can simply convert the blocks written function without any debugging. Another is to simply write out what you want your code about what programming statements and functions finish what it is the program you're writing let's say you're making an app that takes in two would look a little something like this. First, then I want to wait for the user to enter in that to again prompt the user to input a second number. the two numbers entered and returning the result common sense. But remember that oftentimes, we're or division functions. We may be working with full many different options. This method allows you syntax and conventions that you have to follow, ultimate goal should be, as if you were explaining you plan out everything that needs to happen in It also ensures you don't forget about a piece of to write in afterwards. And the final pseudocode is writing out the main features you want the functions or smaller programs, you're going to example. Say you're making a banking interface. have two options, they can set up a new account, if they log into their account, then you want deposit money, take out a loan or pay back a you want them to be able to create an account, access all of the features that are returning to the flow chart method. The only difference over an entire program, rather than just a single create a flowchart that would go through the above. Setting up a hierarchy like seeing on your function interface you're going to have to make. a function or feature into an already finished fun experience in the slightest. So There you have out your code before you even start writing any through the flow of a certain function. The write idea down for a program, or the functionality functions of a certain programs, you can use or even disregard these and find and create your to drastically minimize the amount of errors that stress on your head. The importance of pseudocode believe me, I urge you to try to complete a large series up until this point, you've gotten a pretty and also how to plan out your programs. Now it's actual code. But what kind of program I can hear you want, really, as I'm sure you know, by now, your mind. Anything from simple games to complex basics that are going to need to be used in pretty doesn't mean that every programming language is its own strengths and weaknesses. and choosing the and sometimes just even possible for you to going to be talking about now, choosing the best we talked earlier about low level versus high let's do a quick refresher. higher level of abstraction from machine language, that while lower level programming languages have a For example, block program where you can drag 2d Legos would be a high level language, as it the inner workings of a computer to programming. language would be if I could just write down what and it would just work. But sadly, that doesn't the lowest level programming language would be supersonic speed, which would be almost impossible what type of language is best for your needs? as sometimes you need very specialized languages science is vast and contains many fields. So be impossible. This has led to the creation of designed for a specific task. Right now though, and their uses. Now, if you are trying to design a bet. HTML is a markup language that is designed great for designing the style of the website. you it right now. If you right click and hit Inspect and CSS can be. Maybe it would be best for you to a language that has many commands for you to use. compiled. Scripts can be faster to write in most operating systems allowing for cross platform oftentimes adding to the overall user experience this might also be a path for you to go down. Ajax, and JavaScript. For most programs, you General Purpose languages, as they sound these should be your go to languages. Examples and Python. They each have their own different for developing games and interactive web pages. programming, as well as writing applications writing applications and system programs. They all use to achieve the functionality you need from language for your big projects is very important. work. It really comes down to preference. Get to rules you like best and find most comfortable. really well and enjoy programming with it, you you plan on writing. Personally, I tend to use not due to any functional difference between though there are a few, but it is mainly because to write programs with. Overall, either you research and see which language boasts the most become comfortable with a language and use it for be looking at our final topic of this introduction knowledge of programming, which will take you you know, some good pre programming pseudocode the ground up. And you might already have a good might want to start with. So what's the next applications can it be used for? Well, that's just jump right into it. Starting with the biggest now that you might know which type of language and find out whether or not you truly want to like Python or c++ will have either an official or Wikipedia page, which will provide you with you want to pursue that path. From there, the which can be done right here on YouTube. While language, each specific language is going to tutorial videos on a certain language is going introduction series, like the one you're currently work your way through that series, picking up on become comfortable with it. Once you do that, you a certain language, but you may be completely Programmers blog can leave you uninspired and to give you a few websites to help out. First has hundreds of coding challenges in both Java and and even learn some new programming shortcuts and improving your efficiency and need something to bite, which offers over 200 plus challenges that something that is sure to help you improve. The rank, which not only provides programming but also provides support for you using your These and many more websites exists solely to your skills to become better. Now if you're a I also encourage you to take programming science principles and AP Computer Science a are in the future, and are also incredibly informative offer other classes in the field of computer game design, and data science. Any and all classes programming and help you find your niche is going of code has now been opened up to you. These are But there are many more we didn't talk about. You projects. You could work on your own projects are endless. The next step is up to you. This series. We hope you enjoyed watching it as the series as a whole consider subscribing to be linked in the description for more content like