hello everyone welcome back to the next lecture in the computer network series and today we will solve a problem in subnetting let's start the session with the outcomes upon the completion of this session the learner will be able to subnet the given network based on host requirements so we can submit based on host requirements as well as based on network requirements in today's lecture we will be submitting the given network based on host requirement let's see what are the five steps for doing the subnetting step number one identify the class of the ip address and note the default subnet mask step number two we will convert the default subnet mask into binary and after converting this into binary in step number three we will note the number of hosts required per subnet from the question and we will find the subnet generator and the octet position so we need to do this with the help of this binary conversion what we have done in step number two and after completing step number three we will go to step number four for generating the new subnet mask after generating the new subnet mask in step number five using the subnet generator what we have found in step number three we will be using the subnet generator and generating the network ranges these network ranges are the subnets and these network ranges are created in the appropriate octet position i know it will be difficult for you to understand this at this point but once we see an example it will be more clear for you let's dive into the question now the question is subnet the ip address 216.21.5.0 into 30 hosts in each subnet say we are given with a classy ip address and we are required to subnet it into 30 hosts in every subnet what if we directly go to class c subnet mask we know in a classy there are possibilities of 256 ip addresses the first address and the last address are not used because the first address is the network address and the last address is the broadcast address so we have total of 254 usable ip addresses but our requirement is just 30. so if we go for traditional class full world we are ending up with wastage of ip addresses and that's why we are going for classless addressing and this classless addressing is possible with the help of subnetting so before going into the steps just observe what is this ip address it is 216.21.5.0 and how many hosts or ip addresses required per subnet it's 30. let's revisit all the five steps and we are going to focus on step number one what is step number one it is identify the class of the ip address and note the default subnet mask we know in the question it is given as the classy ip address so we will solve it now and step number one is it is a class cip address and the default subnet mask for class c is 255.255.255.0 so we have completed step number one let's now move to step number two in step number two what we are going to do we are going to convert the default subnet mask into its binary equivalent we know the default subnet mask is 255.255.255.0 in this case so when we convert this into binary we will get four octets because the subnet mask is of four octet so we will be getting all once in the first octet all once in the second and third octets as well and finally all zeroes in the fourth octet because 255 means it's all once i hope you know how to convert the binary to decimal if not i have already placed a video in the playlist you can go and watch that so this is the outcome of step number two so we are done with step number two let's now move on to step number three note the number of hosts required per subnet which is given in the question find the subnet generator and the octet position we will solve step number three now so we know the number of hosts per subnet which is given in the question is 30. now we are required to focus on the subnet generator and the octet position in order to find the subnet generator we need to convert this 30 into binary so when we convert this into binary we will be getting 1 1 1 1 0 so please note we can't get this number 30 without 5 bits how many bits are required in order to get this number 30 definitely 5 bits are required just observe this is 16 plus 8 plus 4 plus 2 16 plus 8 plus 4 plus 2 is 30 we need at least 5 bits in order to get the number 30 so don't prefix any zeros we can prefix any number of zeros before a binary number but don't prefix zeros start always with one so if you convert that number 30 into binary five bits are compulsorily required in order to represent this number 30. so how many bits are required in order to get this number 30 definitely five bits are required this is a very very important term so how many bits we are going to reserve in this default subnet mask five bits we are going to reserve so i am gonna reserve five zeros in the default subnet mask and where i am gonna reserve is from the right hand side to the left hand side we need to progress please remember this step from right hand side so i am gonna reserve one two three four five zeros here okay and the remaining bits will be 1 because we know a valid subnet mask will be continuous once followed by continuous zeros let's see it now so how many bits i'm gonna reserve five bits i am gonna reserve and we know we need to always start from the right so i am reserving five bits here and what about the remaining places all the remaining places till this bit it should be one okay so i am filling up with all once here and that's it how did i get this i repeat i am reserving five zeros here and the remaining places are all ones a valid subnet mask will be continuous once and if a zero is started it will be zeros throughout so that's it we got the new subnet mask and what is the subnet generator from right to left where is the first one we are encountering this is the first one we are encountering the position of the first one we encounter from the right is the subnet generator in decimal what is the position of this one this is 2 power 0 1 2 4 8 16 32 so we have the first one at the position 32 so the subnet generator is 32 and where is the subnet generator is it an octet 1 no is it an octet 2 no it is not in octet 3 as well so this subnet generator is in the octet position 4 so i am writing the octet position to be 4. so one thing we need to be very clear in that we need to reserve zeros from right to left and then we need to fill all once and in which octet the first one is occurring when we move from right to left it is in the fourth octet so the octet position is 4 and the decimal place of this first one it is 1 2 4 8 16 and 32 so the subnet generator is 32 and that's it we have completed step number three as well now let's move on to step number four what is step number four it is generating the new subnet mask we have already generated the new subnet mask the new subnet mask is 255.255 or slash 27 why slash 27 we have 27 ones in the subnet mask can you see this is the new subnet mask we have eight ones here eight ones here eight ones here so total 24 ones 25 26 and 27 ones in this new subnet mask and that's why we are representing it as slash 27 in decimal it is 255.255.255. this position is 128 plus 64 plus 32 128 plus 64 plus 32 is 224 so this is the new subnet mask so we have generated the new subnet mask as well now let's move on to step number five that is subnet generation so use this subnet generator which we have found in the step number three and using the subnet generator we are going to generate the network ranges which is the subnet and please note this subnet will be reflecting in the appropriate octet position we have already found the octet position is what 4 in this example so we are going to generate the network ranges that is the subnet and what is the starting ap address which is given in the question 216.21.5.0 so this is the starting of the subnet if you observe the last octet is zero and what is the octet position it is four so we are going to make changes only in the fourth octet and that's why we are finding out what is the octet position and what is the subnet generator it is 32 so the first subnet will start with 216.21.5.0 just add 32 to the fourth octet y32 because 32 is the subnet generator the next subnet will be 32 just add 32 to the fourth octa the next sub network will start with 64 and add 32 to the fourth octet will be getting 96 128 and so on so we have generated the starting address of each subnet so the first subnet will start with 216 or 21.5.0 and the second subnet will start with 216.21.5.32 what about the last ip address in the first subnet since the second subnet starts with 32 the previous subnet will end with 31. i hope you are clear with this so the first subnet range will be from 216.21.5.0 to 216.21.5.31 so we have a total of 32 ip addresses in the first subnet because the subnet generator is 32 though our requirement is 30 hosts per subnet we are ending up with 32 so we have 32 ip addresses in every subnet what about the last address of the second subnet since the third subnet is starting with 64 the previous network will end with 63 so the second subnet's first address is 216.21.5.32 and the last address of the second subnet is 216.21.5.63 and what about the third subnet's last address it is 216.21.5.95 the fourth subnet will end with 216.21.5.127 and it continues so if you observe here this is the first sub network this is the second sub network third sub network fourth fifth and it goes on and what is the network address of the first subnet the first ip address of the subnet is the network address so 216 or 21.5.0 is the network address of the first subnet it cannot be used for the host likewise the last ip address of the subnet cannot be used for the host why because this is the broadcast address of this subnet the broadcast address of the first subnet is 216.21.5.31 similarly 216.21.5.63 is the broadcast address of the second sub network so if you observe the first ip address of every subnet is the network address and the last ip address of every subnet is the broadcast address which is usually not assigned to the host i hope you are clear with this for example we are having a host which is assigned with the ip address 216.21.5.25 so this 25 is belonging to the first subnet the device with the ip address 216.21.5.25 can communicate with its own network using switch but it cannot communicate with other networks because they are not belonging to its own observe if we use this default subnet mask all ip addresses will be falling in its own network right but if we use this subnet mask so it says 216.21.5.0 to 31 will be in one network and 32 to 63 is an other network a router is needed in order to establish communication among different networks but talking about this single network a switch is enough to establish a communication among this internal network i hope now you know how to submit the given network based on the host requirement i hope you guys enjoyed this lecture and thank you for watching [Music] [Applause] [Music] you