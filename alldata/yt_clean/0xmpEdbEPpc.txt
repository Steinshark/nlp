Hi everyone! I'm Furkan. And welcome to my new video I'll be covering the basics of what makes up a working with C++ code, and creating our first game engines or interested in graphics programming, Let's see what we can build! We have computers, want to simulate a virtual universe. In this hear what's happening inside. For example the term used for visually observing these virtual that enables us to simulate observe and interact one, our first job is setting up the development with the environment in order to become productive. be patient, because it takes time to get used to I'm going to choose straightforward options. C++ and Conan for package management. Choosing the so mostly, it's not that important at all. Because with any tool we're using at any time. To execute a access to a compiler. I'm not going to mention since it varies between different operating in the video description. You can use GCC with also GCC on Linux. Then we need to install CMake You can follow the installation guides from the use VSCode for the code editor and clangd for You can install the clangd extension directly can be really frustrating, and it's totally normal. The folder structure of our first program consists of print statement, CMakeLists file that defines the to executable, .gitignore file that defines version control system. And finally a bash script run our project. On Windows we can convert the installation we should be able to compile and script from the terminal. This is our first and now we have access to the whole processing power to get more exciting! Our goal is to simulate Simulation is governing the whole data that rock rotating around its own axis in the middle of source to see the rock. In this scenario, we can the rock, we have properties like its shape, surface rotation axis and rotation speed. For the light For the visual observer, we have its position updating each physical property over time which into a living dynamic system. Now we know how to us to develop a visual observer. Creating these I'm always looking for new ways to improve my today's sponsor, Skillshare. Skillshare is creatives with thousands of classes led by sequential class collections-- you can dive deep or hobbies to the next level. Skillshare offers art and illustration to graphic design, animation, Mastering Productivity class teaches you how to build a personalized productivity system to boost your efficiency and achieve your in the description will receive a one-month free let's get back to work and start creating our a camera, this means we need a canvas that is the camera sees. To implement the canvas, we us. We're going to use GLFW to create a window. with our GPU. OpenGL is a good starting point. send commands to our GPU taking advantage of accelerate our speed while painting the canvas. At external libraries to our project. You can find for Conan version 2.0. Then we're adding a new file will be used in our project. Also we're going to for installing Conan dependencies. Lastly we're which libraries are going to be linked with our compile_commands.json file in the build directory. project to tell clangd where the headers of build file that describes the style of our code. Now using GLFW. Here's what we'll do first; include define an error callback function and set it up Next we'll set the window hints and create our and title. We'll get a pointer to this window and setup, we'll initialize GLEW which provides access program loop will run until the window is closed, Within the loop, we'll clear the window using program launch. Finally we'll swap buffers and poll this program, we should get a window changing painted our canvas, marking our second milestone observe our virtual universe, we'll continue by onto our canvas. I hope this video can be a helpful game engine development. I published the code in if you have any question or something doesn't work. be improved in this video? Are there specific I'd love to hear any kind of feedback. Thanks