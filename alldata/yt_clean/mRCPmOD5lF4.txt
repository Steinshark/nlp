Hi there, welcome back to the channel. Are safe framework? Are you tired of the Agile scrum masters, product owners, and being for you. I've been a software developer for good agile, and bad agile, and I'm here to try Let's begin by talking about what scrum anybody tells you this is scrum, they're lying. down charts and it's not about getting 100% What scrum is actually about is the team, okay? release cadence, which means you ship something the team. It's about communication and trust around that team. It's about allowing the But there are good and bad types of scrum and Trust Scrum, you are the trusted partners for the are the untrusted labor, hired hands who are Now, I know what you're thinking. How do I if any of these things are true, it's it's the project manager guy. He's back from &quot;I need an hourly estimate for that task, will you complete this sprint? I need to tell the to get and when.&quot; Low trust. &quot;This other guy in so why do you say it's going to take is not a fun environment to work in. You But why do people put up with low trust the team, the dev team, is working to the they're just not incentivized correctly. Their success. And if this is the case, then But, if you're stuck in a low trust scrum and these are some things you should do. follow through with those commitments. You by the time you say you're going to do it. And don't make commitments that you can't meet to meet. And don't let other people make this is a trap. When a project manager this point and you haven't actually said And the way you do this is through a system makes a good sprint goal? All right, what makes a our full-stack dev from one of the previous implement the import functionality this sprint.&quot; he's going to take 32 user stories to get there. packages this sprint.&quot; And that could be a bit And he's going to say something like, &quot;Allow a whole user story there. And obviously, he gremlins happy along the way, but Of course, what do bad sprint goals look like? bugs. The goal is to fix all the bugs. The the last sprint. This, my friends, is a trap. things like this. &quot;You said you'd do 23 tickets you are a failure. Never mind getting all 22 Your team's a failure. Let's talk about it in session and find out just what it takes to let you And you think, &quot;Story points, well, I want some a measure of anything. They're actually there They're there to fine-tune their inputs so of factory robot machine. There's no such thing made up by people that bastardized scrum. can go wrong during a sprint. And ultimately, You say, &quot;Well, when our project manager with the stakeholders, he comes in and he says, 'We're on track for delivery. for. There's no benefit to do this. If the they're going to ship on a certain date Because he can do this, he can also do the other his burn down chart is upside down. &quot;Oh God, the developers are underperforming. We I've got some mates in the third world who can Now, I know I rag on this guy quite a bit does a good project manager look like? your team. He acts as a go-between between the several months of their short time on planet and the people that are paying for it, the don't call themselves a scrum master. If anybody 2026, run for the hills. It's a week-long course. Obviously, then a bad project manager, like is a machine. This isn't people doing the And he appears to be working in the interests of you get a whiff of this bad project manager, and to essentially be able to assign blame if So, what are sprint goals, I hear you ask? Well, get to your final shippable product, whatever that yet, you know what it needs to look like so you Just give each sprint a theme. You got 10 sprints, you can plan even with Agile. You should plan with You can readjust as you get more information, of the world if we're running a sprint behind something might come up where you suddenly save a the longer you make them in advance, But I know what you're saying. &quot;You can't fit sprints.&quot; Okay, but you can do some of it in a something that's not quite finished and hide it better that it's actually integrated into the for three sprints and comes back in and it down and get it into sections. Maybe do the whatever. However you want to slice it, it have a shippable piece of software. especially if the software is not finished software something that's half-finished. The next complaint about scrum, now scrum isn't are too long. I have to talk to people for 30 good. You can afford to sync up with your team friends, you know, especially if you're remote and a half hours of the day. It's worth talking &quot;What have you done? What are you going to do? too tiring. Don't let senior management into these high stakes, &quot;I must demonstrate my worth every habit. Ideally, it would only be the dev team that if he insists. And fine, but the project out of band or watch the tickets move update. But the standup should be just But you also say, &quot;I need my scaled how do I coordinate multiple teams?&quot; That's point. A team should be able to ship their piece alone should have some value in it. Do not do a teams together because all good software is built Great, you say, &quot;Fine, what about the deadlines? deadlines are real. So let's play a game. Let's he's going to come up with a deadline reason and &quot;I promised the boss you'd get this done by this fake. This is not a real deadline. His promises your personal commitments to meet a commitment Next up, he says, &quot;The budget for this assuming he's telling the truth, this is a so we need to get everything done by this date. Sometimes, you might say, &quot;Our competitor has same thing or we won't be competitive believe it or not, yes. This is be incentivized to beat your He might also say something like this. guys. It'd be great if we could the cadence of your software should not be tied to Now, this might come as a bit of a but sprints are okay. They're okay, guys. Because they focus the team on a deliverable. It's to get something finished. It's not the end of saying that developers should just be lazy. They the organization, within your team, and with the And for a software project that isn't Amazon or cycle, this allows you to have a period of time Let me talk about that. So this is the chart of out for project managers quite often. So this is of the sprint. In the middle of the sprint, expect merged some code, and the QA found some bugs. the software in the middle of the sprint. For software that don't work. But the idea of a sprint final few days, tidy up all the loose ends, promote to the next testing environment Yeah, I know, I know. I don't want to use scrum use Kanban instead. If you have a full confident that your entire piece of software is out. You are mature enough to do continuous do you? You can just ship all the time like Amazon most people are not in that scenario. And you only a day. You're running some big thing, then fine, this video. That's okay. But this also requires the tech organization will probably be So, ultimately, this is about High Trust into an environment of Low Trust Scrum, you're held up on them, you're going to find if you're starting a new project with a new it towards High Trust Scrum, at least to start. he's going to start turning the screws and he's start with High Trust Scrum. Let's everybody That was a bit of advice from the scrum don't forget to leave a like. If you didn't like three times which is a YouTube super dislike. and put up there somewhere with more general what full-stack devs are, and so on. So, click my face to subscribe and I'll be