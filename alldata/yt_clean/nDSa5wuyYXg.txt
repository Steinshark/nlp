Does this class model appeal to you? types for what it communicates? It is surely fewer types this time. is better before providing the information? design a good model for a given project. resources at the sponsor of this video, Brilliant. Numbers do not lie. code metric of all time - counting lines of code. management and planning, they You do write code, don't you? It would invariably start fast. much of which is generated code anyway. You will naturally slow down after the initial That is where the proper distinction A well-designed model would converge to developing endlessly, often longer than a decade. What is the difference between these A well-developed project would exhibit and other traits of good organization. would be of a very consciously controlled kind. not too many, not too little. I would hope to find simple code. practices will mature the way working animals do. any code or designs yet. develop a project, something like ten people, So far, I have only measured It is the sheer amount of work I am thinking of. I feel it is important to mention I mostly speak about business applications If you are, by any chance, a game developer, then calculations will end by the next video frame. allocations or battery life. It goes along the same lines in embedded systems. comes to mind. rarely of any concern in business software. legislation, reports - those are the worries of Still, the most apparent distinction and any others is in their size. Forget about a bird flapping on a smartphone. Or in an oil company. In this video, I search for simple Where can I find it? Coding and modeling styles can play a role. the dominant style today. it would invariably inflate both A functional approach would easily However, the development time There is still a lot of planning and testing This shows why just counting lines is futile. Not even development time does. There is another angle of view when Take a relational database and Ten people working for a year sounds I am telling that from my past experience. there would be hundreds of node types, Load those nodes or tables into code, and to support them, be it procedural structs, Now comes the critical question. types for their project's complexity. be happy to see fewer types. Instead of 1,000 classes, As a consequence, the classes The most important ones would Simple code does not live in projects If you need simplicity, you will increase Their numbers will grow at the expense Let me show you how that works It comes from the demo bookstore application, videos on my channel. are all we care to work with. Don't jump to conclusions. The customer will be adding new There will be hundreds of individual Each feature requires - code. the limited number of classes, they Fast forward a couple of weeks. for an editable list of authors. I literally had to introduce an intermediary Even then, I had to move a larger half of It was the separation of The book used to manage the core concepts. The list of authors, however, Still, the list part and the The customer kept going with I extracted a Release class and Pulling out the specifics of the book's There are quite a few new methods The publishing date popped Books vary in precision when And it only got worse when the customer That request broke the entire model. Would you revert it to a two-class model? a bit and see what happens. That is what many programmers just forget. without also removing their associated features. features, quickly growing beyond any I can make the book's edition but only at the expense of enlarging it. How about retracting the entire The list of authors follows. There it is, the Book class with a hundred And we are only a few sprints into the project! If you were looking for The first step towards simple code is Apply good naming schemes. control onto have a good, explanatory name. You will feel better as you start Where will the simplicity be, then? to understand if you insist A method well done would avoid mixing domain with the added complexity of the As a programmer, you aught to do this part well. an excellent naming scheme. succeed in everything else. This line of code is, but the overall code is not. only make this one line possible effectively execute when this one line runs. not try to see all those hundreds and Focus on a tiny portion of the problem instead. of code at any given moment. You can control anything at once. no matter how large the project is. That just won't fit your head. of the urge to control everything all at once. into its own little boxes, each dealing with From all I know that is your only chance It requires a lot of knowledge Speaking of which, there is a lot you can learn I suggest you take their course on how through the interactive learning process. data science content, all of which You will find thousands of interactive lessons Brilliant provides deep learning in specific Whatever area you choose, Brilliant through problem-solving. free-of-charge offer for you. Follow the link or just click the link in the description. an annual subscription after the to use this link to unlock the benefits. that show how you can bake these abstract