Hey everyone, Kevin here. Today I want to show you the In this video, I'm going to assume that We're going to start from the very basics and and we'll get a little bit more you'll be able to write your very Now, how exciting is that? We're going to start with, well, why should you There are so many different Why should we choose Python? Then we're going Where do you write your code? Then we'll go through things we'll create a function, we'll even jump creating loops, so your code will run or We'll even leverage others' code By the end of this, you'll have a very solid programming. Think of this as a 100-level course If you want to jump around this video, so you can jump to the section To get started, you might be wondering, How is this going to benefit me? Well, anytime you go on your phone you're experiencing the output of So, you're realizing the benefit. Think of it this way. To program allows you you can turn it into a series of steps that How cool is that? So, for example, maybe you have Maybe you want to create an application at work By programming, you can do all of those things. It's an incredibly powerful OK, so you want to learn how There are so many different programming C++, Java, JavaScript, PHP, Well, recently on my YouTube channel, I asked most want to learn about? And overwhelmingly, It was something like 65% of you wanted look at the lists of the most popular programming It's been around for a while. It's also pretty easy to use and also understand. When you code using Python, it tends to It's also a good general and what I mean by that, is you can Maybe you want to write a web a game, or maybe you just want to You can do all of that with Python. And all the things that you you can take these same concepts and you can And really, fundamentally, you just you want to turn it into a series of And in a sense, it's kind of like a So, in English I say hello, and in French, I'll try my best, I'll say bonjour. And all of those communicate the same idea. different way of saying it or speaking it, and They have different syntaxes. but at the end of the day, you're simply trying because you want the computer to do something might have its strengths or weaknesses, but All right, so why don't we jump on the Here I am now on my PC and first off I want To do that on Windows 10, simply go down to your taskbar and within the search Once you type in command This opens up your command simply type in Python and then type in --version. If you have Python installed, it'll tell you the I just typed this in and it says Python was If you already have it, you can skip the stick around and I'll show To get Python, head to the website python.org Right near the top, you'll see a If you click on this, it'll identify and it'll recommend the best option. However, if you're on a different OS, you Windows today, so I'll download Python 3.9.2. you're watching this video maybe a few months from Go ahead and download whichever I'll click on download and here it's Once you finish downloading, click on the EXE. This opens up the install prompt However, before we do that, there's an option right here at the Let's check that box and This now runs through the installation was successful, so I'm going to click on close. Let's now go down below and just like we and then launch the command prompt. -version, hit enter, and you should now see that OK, now that we've verified that Python is prompt and once again, let's go down to the And here you should see the best match for Python. This opens up the Python terminal, and I'll bit easier to see, and we can type in code So, what's an example of that? So, what if we type in what is 1 + 2 and I'll And this doesn't work. I see something that says Now the syntax is the rules of a programming This doesn't align with what Python is expecting. I need to type in a valid expression that So, instead of typing in what is and I'll type in + 2, and then I'll so this was a valid expression in Now, what's neat is when I type something line of code that I enter. So the 1 + 2, So, it gave me 3. There are other programming languages and then you can execute it, but with Python Now, now that we've typed in just a very why don't we try a built-in function I'm going to open the parentheses, insert double and I'll close my quotes and close my parentheses. Now this is one of the go to examples anytime It's just hello world. Just testing it out. I'll hit enter and here it says Hello World, so function. Now as we go throughout this, our complex, but this is just showing you the basics To exit out of the Python terminal, or we can type in another function called exit. Open your parentheses, close your parentheses, then hit enter and that'll Now we executed some of our first code directly a text editor to write code. On Windows, Once again, go down to your taskbar and I'll click on this right here. This opens up Notepad, and I'll zoom in never knew that you can It's actually a pretty powerful app. So right I'll type in print and then I'll open I'll type in Hello World once again, and then So, here's my source code written in Notepad. Now of course I want to be able to run this, so I'll go up to the file menu, go down to save Now maybe I'll just call this file, let's call it'll save it as a .txt or basically Now I want this to be a Python file and it just like the extension for text files .txt, Depending on the programming different programming languages For example, JavaScript is .js and every Now that I've typed this in, I'll save And here now I see the file on You'll also notice that it has the Python it correctly identifies that this is a .py Now let's test this out to see if we Down below on the taskbar, just like we did earlier, and I've adjusted the command prompt and now I want to run this file To do that, let me type in Python. So, this will let the computer know that I'll put in a space, and I'll take my Python file, and then I'll simply drag and Now this is a really cool trick where you can get the location of the file So here basically I'm saying I Next, I'll click on enter and here we see that This is exactly what I wanted it and it interpreted the code in this file You now know some of the basics of Congratulations, you just wrote your first You're making some good progress. Now, so far, we've just been writing and then we've been running it, but it's not the most efficient way to write Let's say that maybe you're You could write your document in Notepad. You don't have a spell check. You don't have a grammar So, although you can do it, it's And that same concept also applies to programming. Sure, you could write your code in Notepad, and that stands for integrated It'll just make writing code a and in a few moments, we'll see why that is. You have all sorts of IDEs On Apple, you have Xcode. On Android, you have and there's also another one called Visual It's a product made by Microsoft, so of but the great thing too is Visual so let's go to Visual Studio To get Visual Studio Code, head to and once you land on the homepage, you can Here when I click on the drop Windows, or Linux, so it supports all of I'm running Windows today, so I'll click on download for Windows Once the download completes, down in the This opens up the setup process. I'll agree, I'll Click to accept the I'll go with the default location. I'll click on next. You'll then get a screen that I'd recommend checking all Next, let's go down and click on next. On This will now go through and install Once you're all done installing, let's click This now drops us into Visual Studio Code, and If you ever want to get back to this screen again, you can click on the help menu and then click There are a few things we want to do before we Over on the left-hand side, there's Let's click on that. This opens up extensions and up Python. We want to install the Python extension. When you type it in, you should and when you click on this, you'll It should have something and right here, if you don't yet have We're going to need this, so click on you finish installing the extension, we installed as the interpreter for Visual On your keyboard, press control, shift, and P at and that'll open up this screen right here and This will allow us to select the Now if you remember in Notepad, when we So, we basically want to tell Visual Studio So, I'll select this option right here and now I can choose my interpreter, So, this is what we installed just a moment ago. So here I'll select this as my interpreter, and now we're all set to start To get started, why don't we open up the Here I'll go up to the file This opens up my file picker and here Here you'll also see that this type of file This is the Visual Studio Code logo. I'll select this file and then click on open. Now that I've opened the file, This is exactly what we wrote into Notepad, except this time we have it open in Visual some of the benefits of using an IDE or First off, I have line numbers now, so here I get all the line numbers In Notepad, we didn't get that. Also when I write in this function called so I could identify what is the context or the So here I get different colors. Also, when I hover over print, it on the type of content that I So, this will make it a lot easier Now I can run this code I'll simply go up here and I can now right click. Right down here, there's an option When I select that, it'll open up a and here I can see that it executed or interpreted So, it gives me the output Along with right clicking on the screen and I can also go to the top right-hand This will also run the Python file in here too, it ran this file and So, this is just another way, probably a little Now that we know some of the basics of how to I want to show you how we can start working And here I'm going to type directly into the the terminal and just like we did earlier So here I'll type in 1 + 2 and I'll hit enter and here it interprets So just like we saw earlier. One of the I didn't include any spaces and spaces or so I could also type in 1, space, and I'll type and then hit enter and there too it also evaluates your code more readable, so you could type it It won't affect what the outcome is. With operators. Right up above, I showed you how I can also do subtraction, and here I could do a multiplication, so let's say 4 * 4. Now with multiplication, I enter in an asterisk. That's the multiplication symbol. Here I'll hit enter and it evaluates that to 16. I here for division, division is the forward slash, Now with Python, let's say that so maybe you're adding and Python follows the default order of operations, so let's say I enter in 2 + 2 What do you think this will evaluate to? Is it 2 + 2 which is 4 and Or is it 2 * 5 which is 10, and Well here if I hit enter, it evaluates to 12, because it's following the default order of If you've ever heard PEMDAS or Please Excuse know what the order of operations is. First Then it'll look at any exponents followed by to right, and then it'll look at addition and Up above, I could also enter so here I'll get rid of hello world and Here I'll click on run and here code Thanks for the suggestion! I've added this evaluates to 4. If I want to use an exponent, and here I'll enter 2 asterisks, so And here if I click on the play button, But let's say I want to do a 2 to the 3rd. Here I'll evaluate and it comes out to 8. so let's take an example here. Let's say I and right down here I see that's But let's say I don't want to I just want to know how many times This is also known as the floor. I could insert another forward slash and then I But let's say I just want to I can use the modulus operator for that. I'll get rid of the forward slashes, and then I'll hit go and here it As I'm entering in numbers up above let's say that I enter a very large number. Now I could go through here and I could and if I hit go here, you'll notice that That's because we don't want to use Instead, when you enter a number, just enter it in as is and then hit go, So, you don't want to use commas Now that we've entered in some numbers, and how you can work with numbers and operators, let's start working with some text Let's say that I want to print what's up. and it's the same concept here. I'll insert in So, here's what's up and I'll click on this play icon and down below you'll see Now I surrounded what's up with double I can also use single quotes up here. So, if I enter in single quotes and then hit play, so I can choose whether I want to So why would I want to use here, what's up should actually have a single Now one of the problems is when I enter is the end of the string, and so now if I try So instead, I can use double quotes here and I could use a single quote in the middle Now let's say you wanted to use Well, you could surround it with single quotes Now here too, just like we saw before, so if I want to insert a space here and maybe and I run this code, here you'll see So once again, by using white space, that can help make your code more We now know some of the basics of but what if you want to make sure you How do we do that? Well, we can use something called a comment, want to explain to someone what this does. Here I can insert a comment by entering in the hash so I'll enter that and here I I've now typed in my comment and here you'll see that this doesn't I simply get what's up. So just like we got before. Now I could also take So here I'll put it after my code, I'll hit run, and here too you see Now one of the neat things is, let's say I start writing a lot of code I can comment out a line of code. I'll put the hash symbol in front of my so this is the IDE's way of And here now, if I hit run, you'll see that I this line of code, so here I could bring it once again it shows me what's up. So comments Not only to let other people know what's happening but you can also use it when cancel out certain areas of your code Next, we're going to look at and the easiest way to explain a variable is to So, let's pretend that this red bucket here Why don't we just call it red Now I can assign a value to this Let's say I want the red So here I have my name. I can take this value and I So now if you say well, what right here the red bucket is currently Kevin. So once again, I've assigned that value to it. And this is a string or basically It's just a set of characters. Now I could assign other types of data to actually I want the red bucket now to equal So, I'm going to say red bucket, you're now We're going to pull that out, and here I'll take So now if you ask me, well what is the red bucket? Well, it's currently the number 8. That's a general concept of a variable. The variable can hold different values. Let's jump in now and see how we can there are some rules that we need to follow, A variable should only contain And also, we just need to make sure We can't use any spaces in a variable name. We also can't use any known keywords And ideally, we want to make sure that a Those work best. So, for example, with the red bucket, so it's pretty short and also descriptive. Also, variable names are case sensitive, so if one with a lowercase r, Python would view those as OK, so let's create our first variable let's say I want the variable to be called and now I need to assign a value to this variable, red_bucket and I'll type in the equal sign and I'm And here I'm using just a single equals sign. So, what this does is it will assign So now here I could hit enter and let me because I've assigned this value to this variable. The next thing we could do So here let me say print and What's nice is because I'm using created a variable called red bucket Now if I click on the play icon, so it's printing out the value Now let's take another example here, let me copy this first line and And here I want to assign 10 to the red bucket. So here I start out by assigning What do you think will print out? Let's click on the play icon And the reason why is, well, first and so that's the current value. But then to the red bucket. So, the 10 overwrites Kevin, it's taking the last value that was assigned the bucket example is I put Kevin in the bucket out and then I put 10 in, so at the very end well, the number 10 is the in the red bucket One thing that's really neat about Python you don't have to assign your variable a type. So here for example, for the red and that's also known as a string. And next I assigned a number, which is an well, the red bucket is a string it'll automatically know what data type So down here in print, I can type in type and then I'll open and close the And so now let's run this and here So basically here 10 is assigned to red bucket, and so it's telling me that Let's get rid of this line right here. So now Kevin will be assigned to Red Bucket. And when I run this, here you'll see that a Now let's say that I want so maybe I don't have a need Down here I can type in del, basically and here I can type in red bucket Let me get rid of the type in the print, so I just now, I'll get an error because it says red bucket created the variable, I assigned the value, here I variable, but there is no variable anymore called Next, I want to show you an input and then you can take that So right here I simply typed in Kevin but I want to allow input. So right up here, you entered in and here we'll type in the input me type in double quotes and maybe I'll ask the I'll enter a question mark Now right down here, I don't want to delete So right now, I'm going to ask for input and So here let's click on the Right down here it says what do And so maybe I want to put a shovel in, so I'll click down in the terminal, And here now it prints out shovel, because Next, I want to show you how we can start Basically, any expression that you enter so let's just take an example. I'll go down a few lines and let me enter in One of the things you'll notice is when I entered in two equal Up above, I just entered in one equal sign. So why do I enter one here Well up above, I'm taking this value or this Here I want to run a test for equality. I basically want to check are these two equal, and when you test or check for so here let me remove the code up on top and Here when I run it, here 5 does not equal 4. Now you might be saying, well It's not equal to, so over here I can also So here instead of the equal sign, So here I have an exclamation So, this is my way of asking the And I think we all know that's true. So, when I run it, here I get true back. Along with equal to and not equal to, there I have less than, greater than, greater And here you can see the symbol that you and over on the right-hand side, you'll see a few insert any one of these into that print statement We can now take these different variables that we just learned about So, I have a young son at home. His name so let me create a variable and I'll call it so I'm taking this value of three and Now let's say I want to check, well, So maybe I type in age at and And maybe age at kindergarten so I now have two different variables and I've Now down here I can check the equality of these, so maybe I'll say print and let's check is Thomas and so then I'll hit run and here we'll see coming back as three, age at kindergarten So, we can do this same type of check Now with this expression here, I'm simply checking is Thomas' age equal to the age at But what if I want to do something What if I want to check, well if Thomas is he should probably be in preschool or daycare. But if he's older than five, he And right now, this is just doing one is he at the age for kindergarten? The easiest way to think of this is like age and depending on his age, any one of Now I won't be able to do that with That's just checking one thing. If I want to check multiple different criteria, So, let's jump back into Visual Studio Back in Visual Studio, I'm going to delete this The one with Thomas' age and the and I'll enter down a few lines. Once so don't worry, you could enter enter in an if statement. An if statement is And here now I can do my check. So first I want to know is Thomas' So here I can type in my variable. Once again it gives me this helpful suggestion he's younger than the age at kindergarten, So, this is going to be my first check. Once I finish entering in this And when I hit enter, this One thing you'll notice is it What will happen is it will check this and if it at kindergarten. In this case, Thomas is 3, the It's going to evaluate this code, it'll go through and it'll execute that. So, let's test this out and let me type and maybe we say something like Once I finish typing that in, I'll go to Here you see that it continues to indent it. So basically, I can type in additional code it'll go through and it'll Now I don't have anything else I want to run. I simply want to print out this message. Let's now test this out to see how it works. I'll go up here and click on run and here we get Now let's say that maybe Thomas is 10 now. So here Thomas' age is 10 and that is So, when I run, here I get nothing back because so it doesn't execute this code. Now there's nothing else here, Now let's say I want some fall back, so let's say Down here I can use else, so it'll check but if it turns out being false, So here I'll enter an else, a colon, So here I could say, well if this isn't So here maybe I'll insert another print function. So let me type in print. I'll open up the parentheses and let me type in So, I've now typed in my else statement, so So, it'll check the first if statement, that'll evaluates a false, and Let's test this out. So when I hit in kindergarten or another class, so this Right now, I have two conditions here. I basically checked the first condition and if But let's say I want to check Here I'll enter down and let me get out of this and right here, I can enter something so, you can go through and It'll start at the top and it'll display that message and then exit. But if this is false, it'll go to the and I can add any number of else ifs in here. So I'll type in elif and maybe for this well he should be in kindergarten. So here I'll say Thomas age and here once again, I want to check if it's equal And remember, we don't enter in one equal sign, we enter in two and here I'll enter in So, this is going to be my check. And if this is true, we now want to evaluate I entered the colon, let's make sure That's part of Python syntax. I'll hit enter and this automatically indents me. Here I'll type in print, and I'll type in Now I've added this else if statement that So, this last statement no longer makes sense another class, so maybe I simply remove this so this will just be my catch all at the end. So, let's test this out to see how it works. So, let's say Thomas is 3 and I run it. In this case, the first condition here is true. So, Thomas should be in preschool Thomas should be in preschool. Now let's say Thomas is equal to five, When we run it, here the first condition It looks at the second condition, this elif, and here Thomas is 5 So here I get the text saying enjoy kindergarten. And let's say now that maybe Thomas is 10. So here when I run it, it evaluates he's older than the age of His age is not equal to the age of and then it falls back to the else statement, So here we've just tested that this Next, I want to show you how we can use used any other programming language before, you but it's all the same thing, so And you've actually already been using a function. We used the print function. Right here you see This is a function. You call this and then it prints it out on the screen. So that's just a basic example of a Now the cool thing is we So, what is a function? Well, it's basically a block of code that you can package together So, in this case anytime you call print on what that function is. The neat thing is it So here for example, every time we we simply call this function We don't have to enter in all the different code We simply rely on this function. So, it makes your code a lot more reuseable. So let's go through and create our own function. Right now, I'll go through and delete all of this value of functions, let me just enter in print I'm going to enter this in three times. I figure the more I say it then the more you read it, So here I've typed it in three different Here I'll expand the terminal just so we Oh, but actually, look at that. It looks like I spelled Stratvert and here I just say Stravord. Now because I'm using the print function, but I haven't so I'd have to go through, and I'd have to to correct this and imagine that many, many times in your code, and maybe you It could be a pain to have to go So instead, you can create a function, and to print this out multiple times, and OK, so let's create a function. I'll simply go down a few lines. To create a function, we have to type in def. This basically stands for define, so I'll for our function, and I'm going to call So, I've typed in my function name and then all I'll open the parentheses, close the parentheses, with the if statement, I'll insert a colon. So, here too, just like with the if statement, So once again, it indents and any of the code Next, I want to enter in some code in a variable and I'll call this text and and maybe I'll say Kevin Stratvert has a And here maybe I'll just make the Now right beneath that, here I could use and I want to print this three times. So, I'll insert it in three times right here. I'm going to delete this earlier example So, I have my function now, can I run it? Let's try clicking on run. So I And the reason why is right up but we haven't actually called this function. So, I've defined what should happen when so here I'll go down and I'll backspace, associated with this function, and So just like we called the print and let's type in underscore Kevin and So right now, this will call the function. it'll look up to this definition for So, let's click on run to see what happens. Now look at that. Kevin Stravert has a great Oh, and look, there's that error in here. So right up here, I could go to my function. I could add the T and then like that's now successfully updated in all cases. Now I could go through, and I could This will really boost my ego. So now when I hit run, look how many times every single time I reference this it'll look at the function definition, and Wth a function, to be able to call the function, Here I'll remove these two and so let's take the call of the So here I call the function and then I define it. So, if I hit run now here you get an error Well, it doesn't know about that function So once again, I need to make sure I call So typically in code, you'll see all different definitions of the functions at the top. One of the neat things too about when I click over in the function and I So let's say I'm writing code and I want to have a I can collapse it and then that way it I could expand it if I need to jump into this With this one function that I defined on the function and I also don't get If you remember the print I'm passing in certain text that I want to print. So basically, I'm sending in and I can do the same when I create a function. So, let's say instead of entering the text here this line right here, and right up here as part So, as I define my function, it's So, let's now go down here and look at the It says print Kevin and here I can now pass So, I'll type in Kevin So here you'll see as I call this function, When I pass this in, here in the definition, it and down below the print is taking that So now when I hit run, here Kevin Stratvert has a great channel and this is just an example of how you Next, I want to show you how we can So here again I'll type in def. This will define my function and I'm So, I want to basically where should they be in school, and I want to get the child's age, parameters or arguments I want to get, Now, just like we did before, let's put in Here once again, you'll see that so that shows that whatever code I Now I want to insert my if statement, so I'm going Once again, I'll insert the colon, and when I Now I'm within this if statement, so if this evaluates to true, If it's true, I want to display some text, Here I'll open it up and maybe enjoy the time. You're still a young So I've typed in some text. Now earlier but I can also print out So here I could enter a comma Here I'll type in another comma and let is only, here I'll enter another comma, So here you can see what it'll do, let's It'll say enjoy the time, Thomas is only three, Let me hit enter and here now I so I'll hit back space so I go back, and and I want to say if age let's then I'll enter the colon and here maybe I'll say So here I'll type in print and and I'll type in the quotes and and here I'll type in a comma and let me type in So here it'll say enjoy kindergarten, Thomas. And lastly, I want to add one more condition, say else, colon, and here, maybe I'll say print say they grow up so fast exclamation mark. have all of the different conditions within and I'll press backspace twice, so I exit out So now here I can call my function. So, I'll call school age calculator and here I'll pass in the age, I'll enter a comma, So now if I run this, here you'll see that it all of these different conditions, and so here, so it says enjoy the time, Thomas is here I'll change it to five, and if I run and let's say Thomas is now 10, and I'll run So here now you see how we can call a function and it uses those values to run an if Next I want to show you how you can also So so far, we've looked at how you could just run into the function, and now we're going to look at I'm going to go through, let's remove this code For this one, it's just going I want to know what is your age going to be in So here once again, let's define and here the function name will be add ten to age. Once I've typed in the function name, here I want to get one bit of input Here I'll type in the age, so and then the function will add 10 to that age. At the end of the definition of the Here this automatically indents me and now right So here I'll create a variable called New Age and I want to set that equal to So, I'll type in age and I'm going to add once the function runs through and it does so here I'll type in return, and I want to This will send the value back or return the Here now, I want to call my function, I can assign that return value to a variable. So here maybe I create a new I be and I can set that equal to my function. So here I'll call the function add ten to age and here I want to pass in let's say my So once again, if I run this right It's assigning the output, which is 13 to how So right down here let me type in print and And now if I hit run, here we'll Now once again, just to see how this This is a variable and I'm assigning this value ten to age, and I'm passing in three, so here it assigns its new age and once it's done running So, the new age is 13 and it assigns 13 to how So that's how it works, and that's how you can Next, we're going to look What is a loop? Basically, it allows you to execute a block of Every single week my wife can you take out the trash, and So, in a sense, that's kind of like a loop. All right, let's jump on the PC and let's So, let's now create a loop and there One of them is called a while loop and We're going to start with a while loop, I'm going to create a variable, just call And so here now I can type in a while loop. So, I'll say, let's say while and So, while this value is less than five, I want it We do this with our if Here when I hit enter now, it automatically And here I could just say let's say print X, so I want to make sure I increment X, So here I'll type in X = X + 1, We start out at zero and here it in which case it starts at zero. It is, so now X is 1 and X is still less than five, So, let's run this to see how it works. So well, it's no longer less than five, so Note, that's the basics of how you There's also another loop called a for loop, so And this is also pretty simple. Here I can type through 10, and then here enter a colon, and here too, Let me delete the code up above, and here so when I hit run here, you see that it starts but it doesn't include 10, so this is You can do some pretty neat things with loops. I have an array assigned to it and Here I can use a for loop to write out all the here I'm creating a variable, and I'll say in Here I'll insert a colon and maybe I just want to each day of the week, and here I can enter run and here it prints out every single Now, one of the neat things too is you can start in your loops, so let's say that I want Thursday, and once we hit Here I can insert an if statement, so I'll say Thursday, so I'll type in Thursday, and at this So here if we click on run, here you'll Wednesday and then it looks like it hits So, at that point we break, and we no longer print any of the other days. So, let's say that once we get to Thursday, I but I still want it to continue and Sunday. Instead of using break, So now when I run the code, here and then it found Thursday, and we So, we added continue. So here you see it skips over and then So once again you can use logic in your loops. You could also have it break and we've been looking at some of the fundamentals, however, one thing you can do is you can using libraries and also modules, and there are Let's say for instance that we It turns out there's an We could simply type in import and type in math, and right beneath that, let's use our standard And why don't we say something like pi is, and then I'll insert a comma and here now I can So, I want to get the pi value back and here as I'm typing that out, you'll see So here when I click on run now, So once again, when you're programming, you don't Instead, you can build on top of what others you might have occasionally run into different and they can really be a pain to resolve. I want to go through three of the key errors that So, let's take one example. Here I'm going to type in print, Now if you've been following along, you probably and I type in text, I need to include my When I hit run right now, here I get an error, and this is referred to as a syntax error the rules of the print function, or I The best way to troubleshoot these to find out where the error might be. So here I get name error So here it thinks hello world is a variable. So, this is one way where you can look at the troubleshoot up above what the problem is. Now you take 10 / 0 and then I try to run this, and we all get a zero-division error division by zero. This Now you could look down here at the error help you troubleshoot where the problem is in your you could go to something like stackoverflow.com if other people have encountered similar errors And lastly, there's another type Let's say I type in name equals. Let's say Kevin, just like we did earlier and here now, let's So, let's say I want to print the Here let me insert the So down here, it just says hello name, and it's these are referred to as semantic errors and the reason why is because everything is working But you're not getting the expected result. So, for these you typically have to sit is everything working how it should, All right, well that now brings Hopefully by now you understand the If you enjoyed this video, please give it maybe you'd like to see more content like this Also, if you have any feedback or if you want to please leave a comment down below. All right, well that's all I had for you today, I hope you enjoyed and as always,