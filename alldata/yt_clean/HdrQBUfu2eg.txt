Hi, my name is Matt. I work in developer relations can take Claude artifacts and deploy them in only through using the Replit editor, we're going to support querying Claude directly from the Replit deployments and how you can take the code that If you're not familiar, Claude artifacts are entirely on its own. They're really great immediate value, creating your ideas seamlessly taking what you've created, even if Claude gives putting it on the internet so you can share it you how you can do that in Replit, and by the working artifact that's live on the internet. but I'm going to make sure I cover all the that we're using, as well as my thought process So let's jump right into it. Let's get started. in the description to this video, but it's template Repl with you. And it gives you a pretty repository if you've ever worked with Git. So we can see the files that are in these, and for this which is basically a way of scaffolding React Now, if you don't know much about those things, and I'll tell you what you need to know to get if it interests you. But the amazing thing about about the fundamentals of these languages. You fit together, and if you pay attention during this So there are a few files in here. App.css is a Sheets. It's how HTML styles itself. It's kind you don't know what that is, don't worry about it. something running. The main application is located file. And this is the file we'll be editing Now the reason we're using the Vite framework is for running React type applications, it's need to modify really this file for the main made. You could scaffold your project using other you want to learn more about some of them. this because it was the fastest way to get show people how these technologies fit together. the CSS in index.css. Really, we're only going is sort of a wrapper for displaying the touch it here. We really won't need to worry config file when we're setting up something. page and I'll name this Matt's to-do app. Big click &quot;Use Template&quot;. So what this is going to do Repl like its own development environment. Repls, with everything you need to get things working. sure you fully understand what's going on. and our AI can use one of three models currently, thing that's important is that our AI pane has back end, our engineers implemented retrieval you ask AI a question, it can have the context give you an up-to-date, accurate answer. It won't information based on the environment. So that's I've already noticed makes a huge difference in So aside from that, it's important to note that container running in the cloud. And because of that'll list all of the files in this configuration of this Repl, you can go to these for you. You can unhide them by clicking the and that'll make everything available. us exactly how Replit is configuring this already installed. We have a run command. and so that'll be changed by the time this is happens when you click this run button. and it's going to execute npm run dev. And you console. So the console is kind of like what's different than the shell. But you can see Now I haven't seen anything exposed, and when we to the web by clicking that button, you can see And we can see the default output for Vite React us how this is working. And it even tells us, and we'll see updates in real-time.&quot; So if I you can see that there's like hot reloading. which is really nice. that's a bit about Replit, and hopefully you're going to do is use Claude to create an artifact, the context of this Repl. And there are some to walk through installing because they're when you ask it to create certain applications. create a to-do application. We're also going being the Shadcn UI framework, which creates some And I'm going to show you how to configure which is a CSS framework for creating So I'm going to prompt Claude here. for this one, and I'm going to say, &quot;Create UI and Tailwind CSS. Assume a Vite React app.&quot; get something very similar to what we would get Sounds like there... seems like there's a lot of it's going to help us start and create the app. to update the Tailwind config. We're actually going to show you exactly how to do that building the app for us. So this is cool. in App.jsx because that is our main app file. project to use the Shadcn UI Library. So if I go and I'm going to run actually the because that was pretty accurate, which is that going to install Tailwind, PostCSS, Autoprefixer, which is going to add a Tailwind config and we don't actually need to add any of this to So now there are actually some changes we'll need library available to that main file. And the first rather, we're going to have to... it goes going to be in a file called jsconfig.json. So and this is going to tell our project some this from the documentation, which I'll also add these compiler options. And again, you also make this Repl available for you to fork going to help the component library direct And then there's really only one and that is to the Vite config. Again, I got looks like we're getting some errors there. But paths for the components that we'll install. pretty straightforward command. And that is npx a package and initialize our application. that we can walk through here, and it should be TypeScript. We're using JavaScript for this one. then our global CSS file is in src/index.css. need to worry about that. Just hit enter. We That is the correct import alias, and that's the and then no, we're not using React server and the library is going to initialize components.json file here. And this tells that Now there's one final step here, and we'll see what components we're using. So we're using And so to install these components, basically, which are like little building blocks. They're like a button that looks better than we just have to run add. So npx shadcn-ui@latest button, checkbox. And because we configured all to install things to components/ui. You can see So now if we go to our network or our web view and we can add a new to-do. So if I click add, through how we can improve this. But this is the we have things installed and configured. And now I quickly, making only changes to that project. I noticed was when I press enter on this going to list off some changes. Make it possible I noticed was that I can't edit to-dos. So things. What if my to-dos change? What if my of course. That would be crazy. But what So we'll ask Claude to make these improvements. looks like it's just editing the main file. editing. Actually, yep, looks like that's paste and save. What's up? Enter. It works. And and save. Beautiful. Okay, so this is better. additional components. So check out Shadcn docs as well as the commands that I use great component that is used in frontend more of a card interface to make this a bit more So what we'll tell Claude here, we'll scroll down a card-based UI. Adjust spacing for maximal visual like, I want this to be in a card centered on the drop shadow, and also to be styled nicely. I think to add... You can see now we're importing card like there's a flex-grow class name that suggests Let's copy this and see what Claude did add new components, we just have to also add So that's done. And now you can see we have a card. Debatable whether that's nice or not. of like this UI. I think personally I would this looks quite good as the page is expanding. application, get things settled with Claude, and to talk about the framework a little bit because we did was set up our development environment, and iterate quickly, right? We set things up in such and start iterating, asking things quickly. going back to Replit, going back to Claude, etc. this is possible too, right? What really sets app, and I'm going to deploy it to the internet do that. We also have a deployments pane. is that deployments in Replit are a snapshot of really no additional configuration required. Once it's very straightforward to deploy it. I'm going to create a new pane, and I'm going to be a static deployment. So Vite apps and basically of HTML files that then are we're actually going to build our So let's click &quot;Set up deployment.&quot; Let's set up see that's going to be deployed to replit.app. Now a tool for other people to use, you could buy like friend.com, which might be expensive, not and then access that wherever you wanted to. But And Vite apps build to the dist directory. So this, and then those files will be available in you want to dig around, right? In package.json, Vite is going to build the application and So I'm going to click deploy, and this takes have to build it. But I think it's worth here. So this application was running in its And when we click deploy, a separate server is fast. The deployment's already done, right? commands we just asked get basically executed. as like a virtual machine. On the backend, of that stuff to you. But I just want to make it that won't influence our deployment until we So I'm going to click this link, and it's So we can add &quot;Get groceries,&quot; and this is right? I just built and deployed an artifact in of that was explaining exactly what I'm doing. highly repeatable, right? You can even just fork to the app, right, you could theoretically just template I shared with you at the beginning of But I really wanted to show you a scaffolding, apps with Claude artifacts on Replit for building creating a prototype, and then deploying them on about the command line, without needing to know and really only needing to know And I think that's kind of the power of power of AI development. You don't need to You just have to understand the frameworks and bringing quite a bit more content of this nature and get things out the door. You can imagine can help your team, to build a personal website, So again, I'm Matt in developer relations can deploy Claude artifacts on