# React vs Angular in 2024? Let's talk about React vs Angular. I've worked with both for over five years. They are both solid choices. But are they still relevant? After all, it feels like new JavaScript frameworks The pace of innovation has prompted big changes That means it's time to revisit the rivalry. React or Angular: Which is worth investing Which is worth learning? Which is the best fit for you: your project, Have the recent changes altered the landscape It's time to think like a CTO. Let's examine the different aspects of React We'll look at : - how they are structured, - what kind of person and what kind of project We'll also explore the changes brewing in But first, who are our contenders? What do they bring to the table? What is their mindset and philosophy? ## The philosophies of React and Angular In the blue corner, we have React. React was created at Facebook in 2011. Facebook's unofficial motto is "Move fast That same disruptive, chaotic side is also mind an atomic reaction--an explosion. React is not opinionated. It doesn't enforce any rules; it lets you React gives you freedom and flexibility. If we were to give React a role-playing alignment, If you value your creativity and prefer working might be a good fit for you. In the red corner, we have Angular. Angular was released by Google in 2016. Google's motto used to be "Do no evil". Angular's logo is safe. Its previous logo used to look like a shield. Or you could see a cube. Angular is square - in all the senses of the Il plays by the rules. Angular itself provides **structure**. It is opinionated. If you were to give it a role-playing alignment, If you need structure and like best practices for you. ## Commonalities and differences in structure Before we explore how things have changed, Both React and Angular use components, for They both manage data flows between components. They both manage an application's state. However, these commonalities hold their own Components, state, and data flow don't work For example, Angular has a M-V-VM structure, * Models, which hold data structures, * And ViewModel bridge the gap between models React only does _one_ part of that. It only concerns itself with the _View layer_. React has a narrower scope. React components are functions that translate The data flow is simple: information flows props). This means there is a simple mental model. React doesn't concern itself with routing, It gives you the freedom to choose how you That freedom comes with a price: choosing Angular has a wider scope. It aims to be "batteries included." It provides a normalised framework of tools It provides structure. It is opinionated. It provides routing and translations out of Angular contains more than React. It does more for you, including making choices. But that structure comes with a cost: it can The internal structure of components is also A React component is one function. It starts with the hooks, transforms the data, An Angular component, on the other hand, is It is separated into the directives, the business The template itself contains rendering logic. In my experience, React components tend to React's mental model encourages you to create ## Differences in code quality between React But what about the quality of the code produced? The opposition between the two reminds me franchise (like, say, McDonald's) and eating In a fast-food franchise, you know the quality will pay. The choices are limited. Angular is like that: it might not be the You can't write _exceptional_ applications with it, either. The quality is in a narrower band. You know what you are getting. This makes it a perfect fit for risk-averse public institutions that plan for the long Conversely, when you eat at a restaurant, In fact, it can even depend on the chef's The other day, I went to a small Korean restaurant Paris, and one dish was much less spicy than When I asked why, the owner told me the chef React is similar. The quality of the code has a greater amplitude. You can write better-performing code, but The quality of the code depends a lot more mood. But that means that exceptional coders can Because React has a simpler mental model, Compared to Angular, this makes React a perfect to ship their product as fast as possible If a company is fighting for survival, React That's the theory, but what about in practice? What do the real-world statistics say about ## What do the statistics say about React Let's take a look at the latest StackOverflow React shows higher desirability and positive In fact, React is the most desired technology In the "Worked with vs Want to Work With" React mainly has incoming flows, that is, to try out Svelte and VueJS. The largest outgoing flow is towards NextJS, ship: Next is a React meta-framework. Angular has a much smaller market share and The State of JavaScript survey shows a similar React is in the "high market share, high Angular is in the "average usage, low opinion" The Positive/Negative split and Usage over All this shows us the current state of play _changing_? ## What does the future hold? Angular is targeted at the enterprise world, overhead. However, internally, Google also uses another As the name implies, it is focused on performance. Ask Google, "What is 3 x 92?" You'll be presented with a calculator that That, my friends, is Wiz. In the latest Angular Conference, the team closer together. In particular, Angular is adopting signals, It's impossible to say for now _how_ this In a sense, it is a step towards React's more Will it help make Angular more popular and We shall see. React, on the other hand, has been working Vercel, the creators of NextJS. React used to be a client-side library. With the release of version 18, it is no longer With version 19, React stops being "just optimisations. All this means that React can power a complete In a sense React is drawing closer to Angular's But that raises the question: When should ## Angular and React use case React is more suited to situations where agility when stability and security are required. What does this mean in practice? Imagine you need (for example) to build an different types of entities stored in a database. A tool that requires a lot of developers. Angular's structure, MVVC model and "batteries On the other hand, if you have a small team logic where the user experience is key, React This use case fits many SaaS companies. I use React on my blog, coupled with NextJS. ## So where now? Now, obviously, those use cases are stereotypes. You can build a simple app in Angular, and Facebook would be a prime example of that. But if we boil the opposition down to its work with large teams, you're better off And if you prefer agility and freedom, you're