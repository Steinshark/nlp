And what is Svelte? I love it. Honestly, this framework has blown my mind. It's the only JavaScript framework that's Svelte. Svelte. Svelte. Svelte. My name's Rich Harris. I am the creator of Svelte and one of its We're in my flat in Carroll Gardens in Brooklyn. I mean an Englishman living in New York is So I'm definitely not particularly exotic. How should I sit by the way? Yeah, like this. This is all right? Why did you call Svelte, Svelte? Why do we call Svelte, Svelte? It's always really difficult to find a name on NPM. We had a brainstorming at work and I was working and the team that I was working on became And we tried to think of a word that kind and zippy, and fast and elegant, and all of these things. And Svelte is a word that means all of those It means sort of live and athletic, and it just felt like a really good fit. And so it stuck. A lot of people don't believe that it's a People have said that it sounds like a dishwasher But it's a real word, and it's a word with some really great connotations And so essentially Svelte is a language. It is a language for creating user interfaces When Svelte came out, the term that we used And it was, I guess, a little bit of a marketing but it also reflected the mindset it was created which was rather than thinking of a framework a framework is really a way of thinking about It tries to do as much of the work in the What that means is that whereas, for example, React will do some work to compute the difference should be on the page, Svelte will take that logic and it will try application even runs in the browser. And the way that we do that is we have a compiler. A compiler takes your declarative component and it turns it into an approximation of what very hand-optimized vanilla JavaScript. I had left journalism school and I was looking and at the time everyone was telling journalists, "You got to learn to code, you got to learn You got to have all this other stuff." And so I tried to teach myself PHP, and all didn't really get into JavaScript at the time. But I took a job working at a financial publication And this was about the time of the 2008 financial And I distinctly remember just a few months A bunch of people got laid off because the And I thought it was going to be a last in, and that I was on the chopping block. But they weren't paying me enough for it to So I survived. But the lesson that I took from that was, if I'm going to make it in this industry, And so I started drifting towards more technical And a couple of years after that, after spending they needed someone to do some basic HTML And I was kind of in the right place at the So I started playing with code again. And at that point, I was seeing the kind of BBC and The Guardian and The New York Times, where they were using code, generally Flash, but also increasingly JavaScript, to produce these interactive journalistic They were doing stuff with data that I thought doing at this financial publisher. And so I got very inspired by the work that Like I want to do that, and so I started trying to teach myself JavaScript, with the help of the development team at the When I started doing visual journalism, the good as it is today. There just wasn't as much stuff and it was it was really hard, to write these rich interactive applications. And so with, you know, all of the naivety I thought I can solve this. And so I started working on a framework of which was kind of inspired by a mash up of and some of the other things that were around And it had some success, you know, it was used by a few different companies and it introduced a lot of the ideas that like single file components and stuff like But ultimately it just wasn't good enough And so after a few years, I became of the like many of the frameworks from that era, weren't really well suited to the era of the And the reality was that we were shipping and we were doing too much work, and we needed to kind of reset our expectations So in a way, Svelte began as an act of atonement for my and you can kind of trace its origin back which was a monthly meetup that used to happen just around the corner from here. And one of those evenings, I was talking to one of the people who ran BrooklynJS, and he was talking about an idea that he had into something else, he was talking about compilers. And I didn't really understand what all that but the idea kind of lodged itself in my brain. And so these two things came together, my own sense of responsibility for having and did too much work. And this idea that you could use compilers good user experience. And that came together around Thanksgiving the idea for Svelte happened, and I spent a few furious days coding and at the end of that we had version 1 of and it kind of took off from there. One of the earliest contributors was Conduitry, who came on board back when it was still Svelte and has kept the project afloat at a number Like it wouldn't be here today without him. In 2019, Li Hau joined... And in 2020, Ben joined. And again, like, I don't know where we'd be And so those three are all members of a core But the contributor base is actually pretty If you count everyone who's committed code we're talking about upwards of 450 people. You know, after seeing all of that love about I tried to build a site with Svelte and I And it was night and day. You know, I submitted it to the Google page And it takes a while to calculate... And then boom! I saw I had a score in the nineties right Svelte introduced new ergonomics to building than it's been in a long time. And the way that it's done that is by introducing compile time. One of the first places I worked out of college and one of the first projects I worked on Spreadsheets formula bar and formula highlighting And I got to see how hundreds of millions concept of reactivity to build really complex With Svelte, we're seeing the same thing. We've given people this tool of reactivity, applications with it. Svelte version 1 was basically Ractive, but It inherited a lot of the same design, and also Ractive had an existing community, and I was hoping that some of the people who use Svelte. By the time Svelte 2 came out, we'd realized that some of the design decisions ones, and that people's expectations had changed And so Svelte 2 was really just a slight refinement. For example, instead of having double curly single curly braces, so that it was more like JSX. And we made a few other cosmetic changes like but other than that, it was pretty much the same as Svelte 1. Svelte 3 was when we kind of tore up the rulebook. And we started thinking, you know, we have we can essentially create our own language. What would it look like if we were to create user interfaces? And whether we achieved that or not, I don't but I think we got pretty close. Svelte 3 was when everything changed. I first heard about Svelte, probably on Twitter. A lot of developers at the time were talking which was coming out at the time, it was Svelte and I'd honestly probably heard of Svelte but it wasn't until Svelte 3 came out that as it being a really interesting technology. And I tried it and then I wanted to teach I wanted to share it immediately. I wanted to build more things in it. So Svelte's different, it's its own thing, because it takes this idea that for so long, we've been shipping a JavaScript library, So the framework or whatever we're using is and that whole big chunk has to go along to They go to your site to check out a recipe They're getting that big bundle. What Svelte does differently is it takes your and compiles it to just JavaScript. As in, we're not shipping a library full of project. However, we're transforming the code that that you can ship to the client, and not have to worry about if this project to include such a giant bundle of JavaScript I think there's a lot of hype around Svelte specifically because people don't believe or they don't believe that the code they can because we have a long history of writing specifically to do interactive elements on And so what Svelte allows us to do is to write but plain and readable, in a way that I think instantly attracts people People might hear about Svelte and the fact and that might get them excited, but nothing is going to get them as excited and seeing just how much you can accomplish If you use something like React or Vue, it's And if you're very familiar with JavaScript then that sort of system is really great and But if you're maybe a little bit newer, or it's not even in your best interests to frameworks, if you use something like Svelte, you're mostly just looking at basic HTML, So I think for JavaScript frameworks, and probably technology in general, there's a bit of an adoption curve. How do I wanna do this? So if there's a chart of satisfaction and it usually starts low, but there's a lot of satisfaction. And as it grows in usage, because people are so satisfied, usually there's like this curve where, once everybody starts to use it, they feel and then they all start using it, and then they're like, oh no, I was forced And so they're a little bit less satisfied and then it kinda dies out. With Svelte, it's hard to tell I think, if they're just following the same curve, where usage is a little bit lower and so, satisfaction is really high, but it really does feel a little bit different there's quite a bit of usage these days. And satisfaction is still, I think, the highest or one of the highest, for any of the larger or more used JavaScript There are a lot of people doing interactive It's such a good fit for like these smaller and really custom and really complicated in You'll see a lot of these newer data viz pieces especially from The New York Times, they're built in Svelte. I definitely do think that visual journalism We live in a visual world that we can experience. So we have a lot more opportunities to tell understand what's going on, that's not just using words and that's not I probably heard about Svelte the first day Rich and I worked together at the Guardian, and I think it was after Thanksgiving break, he said, &quot;Oh, I invented a new framework!&quot; And so because we worked together and we were we used it immediately. And I think that the first project I used It was an investigation into gun violence And shortly after that, our Guardian team I went to Spotify where I used Svelte for but I didn't really get back into using it Times, where I was working with Rich again, and I use it for pretty much all of the articles One piece is this story about Chinese propaganda. It probably, at least up until this point, that I've worked on, because it involved somewhere over 100 videos slow down people's browsers. So Svelte was very helpful for that because easily. Like, the whole article is a Svelte component, as opposed to sometimes when you will have Svelte component. And I used Svelte to control the whole experience, and I don't know how I would have done that vanilla JavaScript or some other framework. Another story that Svelte was really useful So I was able to use Svelte to create this where you're exploring and, like, diving deep and then diving out, to almost sort of simulate the feel of the and tell this unconventional story about Y2K. The thing I like most about using Svelte is I think in the world of journalism, we're often working on pretty fast deadlines. And so if you're working with a tool that it's just things that are slowing you down, and not allowing you to get to the point where So one highlight this year was building the So a lot of people just check vaccination be mobile first. And we wanted it to be really lean and fast, because we knew it would be a high traffic if it would go down all the time or it would So all this made Svelte a really natural choice The Language of Science Project for Scientific Scientific American is a science magazine And they wanted to celebrate that anniversary language has evolved, and how basically the word trends in their So because the project like content wasn't we were really in an open exploration of visual different angles we can take on the whole And being able to play through all these layout data, in this interactive way, really helped us finding an effective visual D3 is a great library for data visualization For map projections or cool layouts of data, or scatter plots or whatnot. But it doesn't really help you that much in or applications with lots of different tabs And so when I discovered React, I was really But then things grew and grew and it became and also more and more plug-ins and more and more competing state management and things just became a bit too big for me. And when I discovered Svelte, it came back &quot;Oh, here's a really simple way to do things.&quot; Svelte has definitely found a home in the And I think that is partly because, you know, it was designed from the beginning to enable which very largely involves data visualization. But Svelte is in no way sort of restricted It's as flexible and generic a framework as it stands amongst. Svelte really makes no assumptions about the And it, you know, it wants to integrate very using. For a long time, TypeScript support was one People like being able to write JavaScript We have this single file component format, TypeScript was becoming incredibly popular to the extent that a lot of people just won't And so it was preventing people from using I happen to know Orta. He's a good friend. He actually used to live down the road from And he's on the TypeScript team. And Orta was able to lead a project with several into Svelte. Not directly into the compiler, you still have to add a little bit of a pre-processor, but it means that now if you're building a you can use TypeScript, and you will get all of the same auto completions app as you would if you're writing straight TypeScript. I interacted with Rich a few times through We are both Englishmen living in New York, and I invited him to a house party, and we were chatting about where Svelte is and at the time I was working on TypeScript and I thought it would be a very interesting what it looks like to make the sort of tooling in the Svelte ecosystem. Like we didn't want to add TypeScript inside but we wanted the TypeScript-like experience for Svelte. I think that that is like an important part Like the ability to have your editor tell they all intermingle. You need rich developer tools to be able to We actually built support for Svelte in an which means that it works in Vim, it works in Atom, it works in Sublime Text, and it works in VS code, as well as trying to figure out, well, we may have all these tools in your but how do you verify that your Svelte files between each other correctly, and that really helps you to scale code bases. We just really wanted to try and find a way run alongside Svelte in a way that understood but could provide you with all of the experience My involvement, I think, really helps Svelte to be able to hit mainstream It's like some really gratifying work. I wish I could do more of it. And it's been huge. People absolutely adore TypeScript, and the fact that he was able to do that just I still don't understand how any of it actually but I use it every day and it's great. It's now like part of the default developer I got on the Svelte bandwagon a few years The popularity just got too great to ignore, in love. I want a place for women, non-binary, anyone who doesn't feel safe out in the world, that's struggling right now, to have a place to come and build in the Svelte and feel like they are included. They feel like your friends already when you It's still relatively a small community, so it has that like small town community feel you see... You get lost in the crowd. Being here today is really cool because I've but haven't been able to sort of see it. And he talks about his friends on the Internet, which to me is such a foreign concept. And it's really cool to see the energy and and just in New York, and imagine, it sort of gives me the opportunity what this could look like across the world, which is just really cool to see that he's Ok, let's go. I first heard about Svelte, I think, on the about discussing JavaScript frameworks. And at the time I was a very deep into React So Svelte seemed like one of those up-and-coming it didn't have the backing of a major corporation. So Rich came to a New York City React meetup And he said you people are kind of drinking and you don't actually need all of this machinery And I looked at my React experience so far, and I was considered a React expert, and I could not be anywhere as productive and that's when I started really taking it So the famous story of how Svelte Society he wanted to have the world's first Svelte And that's great for Svelte, that's great but I have this competitive streak, and I was sitting across from Rich Harris and I'm friends with Rach Harris and I'm like, &quot;Why is the city that has the creator not So I decided to just tweet out like, we're And I picked the name and I wanted something And 50 people showed up and we had talks about Society. When I understood Rich's vision, and I looked at the documentation, I saw that it was a mature technology that that did not have, apart from Rich, Rich is a very effective but apart from him, it didn't really have extending its virtues. And that's something I really understand in So I honestly just took it up as a project And I think there's only so much that you Then you have to tell people about it. You have to spell it out. I saw that the technology was ready, but the community had not caught up, and the messaging or maybe the infrastructure So people needed to build that. We want to help people to come together and What you'll see about Svelte is it doesn't It's a bunch of people who are passionate marketeers. They're not sort of gaining anything from know, making something they love to build. And so almost Svelte Society fits a few different It's becoming the unofficial official place a sort of encouragement or advertising that The Svelte maintainers kinda like doing core They want to do their coding, and they want to do their features, and they want to improve on Svelte and Svelte I don't think they're particularly interested It's not something they're very fond of. They're usually more about the web in general, more philosophical ideas about the web. And I think Svelte Society being separate or whatever you want to call it, makes sense in a way that the Svelte core is not a corporate entity. They're not being forced into doing marketing So the core team doesn't have to get embroiled that can come up with community stuff. They can really just focus on doing the code. A couple of months ago, I got a DM, more or less out of the blue, from Guillermo, who is the CEO of Vercel, asking if I wanted to work on Svelte full And it was a great opportunity that I would If you'd asked me a couple of years ago if I would have definitely said no. I enjoyed my job at The New York Times way And I worried that if I was working on the the framework, that I would kind of lose touch with, you what the needs were on the ground, so to speak. But, you know, Svelte has reached a point enough people are using it and there are enough that not having someone working on it full I think is at this point totally unsustainable. Vercel and Svelte are both ultimately about stuff on the web, and for that stuff to be fast by default. And so it makes a lot of sense to me. You would need to ask Guillermo what Vercel but without wanting to put words in anyone's I've always been a fan of Rich's approach I was a user of Rollup. I was always following the ways that he was And a lot of people don't know this, but the was also trying to invent a new templating because my inspiration for Next.js, in a big way was PHP, which made it so easy and ergonomic for people And I think we were thinking the same things. People love Svelte and Vercel is a company cutting edge today and how can we make developers more productive. I'm extremely excited about this idea of an What that means, and this is what the marriage about, is that when you write your application, you're making it fast by construction. It's almost impossible to create a slow app. And I think Svelte has an incredible advantage because Svelte has done a lot to... The default app of Svelte will be fast. But can't we make the default app that you For every user of the Internet? That's what I think Vercel and Svelte can So that's what we're going to be working on. And Rich is excited to drive this mission The thing that makes me happiest about working who don't think of themselves as programmers, or that are new to programming, and they're building stuff that they're proud And they're crediting Svelte with enabling I don't know what the future of Svelte looks We have a very long roadmap, a long wishlist of things that we want to but for us the, like our kind of North Star, is getting rid of the barriers to entry. We want as many people as possible to be able We've never been primarily focused on adoption. Like adoption is a good metric. If the numbers are going up, it means that people are listening. But, you know, we would rather have a thing that a small large number of people tolerate. I don't aspire to be a BDFL, you know I don't aspire to be a benevolent because Svelte has always been this very sort And, you know, even if a dictator is benevolent, that still entails probably overriding the And we've always tried to develop consensus even though you can never get everyone to we want as many people to agree as possible. And I'm also not so keen on the &quot;for life&quot; I really love working on Svelte, I'm excited that I can work on it full time Will I still want to work on it ten years I'm hoping that if Svelte is still around, and I hope it is still around, that we will have found a way to make it a that isn't reliant on any one individual but you know, a thing unto itself.