In this video, I'm going to teach you about What they are, how they work, and how to use Then I'm going to show you a practical example Finally, I'm going to the laser turret using a free, open source, programming language called XOD. What is a servo? In this context, the term servo is short for The term servo means there is a regulates the position of the servo's output Now let me In my previous video about H bridges I showed and direction of a motor. But that's all it can do. The motor just moves faster or slower depending duty cycle. And if you put a load on the motor it slows And there's no way to accurately control how This is what is called an open loop control the output, you're just changing the power A servo motor is a motor with a closed loop This means that you do have a way to control load. Here's how they work. You've got a DC motor being powered by an Then you have a series of Most cheaper servos will have a plastic gearing torque will (alert noise) Metal Gear?! Yes. They're very solid. Next, a servo will have some sort of feedback the output. It an encoder, but for hobby servos it's usually potentiometer. Inside the servo motor there's some circuitry angle with what If the output has rotated even a tiny bit adjusts the power to the H bridge, and makes to be. When you put all these things together, you From simple toys every robot will have servo motors in some There are many types of servos out there, all have different The main specifications to look out for are and the speed. You should also be aware of the servo's travel. This refers to how much the output shaft can It or more. And you can even get servos that Servos come in standardized sizes. These are &quot;standard&quot; servos, and these are These for projects at home, but I want you to be bigger robotics projects you can get servos If all these options seem overwhelming to A good general purpose servo you can use is It's been around for years. It's functional and it's reliable. In bulk you can get sub micro I'll put links in the video description section. Ok, so now you know what servos are and where Let's talk about how to use them. Every servo These things are called servo horns. The output shaft of a servo has Screw the horn onto the output shaft, and wiggle the horn around. (Juvenile laughing) The point of the horn is that you can screw Here's an example where I have when I rotate the servo shaft the gripper And you can use servos to control pretty much Next let's talk about how In addition to horns, servos also have pigtails. I swear I'm not making this stuff up. The colors will be either Red and brown is where you connect power to usually needs to be between 4.5 and 6 volts. So most people use either a 3 or 4 cell alkaline battery pack, or sometimes people will use For this project I'm just 5V. This third wire is where you connect the input Technically the signal is a We're going to start by sending out a pulse And the pulse is 0 to 5 volts. This You can repeat the pulses slightly faster work. The most important thing here is the pulse If we change the pulse width And if we change the pulse width from 1.5ms servo rotates counterclockwise. You can move a little further than those extremes, is expected to be 1 to 2 ms wide. I've been using a fancy waveform generator purposes. But you It is possible to generate servo pulses with but I would not recommend it. Really the best way to do it is with a microcontroller because it will give you very precise control Make sure you've watched my previous and then soon I'm going to show you how to create the servo signals. Okay, let's talk about assembling the laser If you want, you could simply glue a second servo horn, and tape on a laser, but I wanted video. So I ended up You can get them pre-assembled or buy the You the laser, or you can get them in bulk for on Amazon. The laser modules have integrated resistors, and Since they are cheap, I glued two of them To control the turret in the X and Y direction, The output of these will Arduino on pins A0 and A1. If you're really creative you could hack I already mentioned I'm going to power the over here you can 9 to feed the servo pulse signals into the Here's a Notice how I have a jumper wire connecting 5 volt supply to the ground of the Arduino. They both need to have a common ground connection for things to work reliably! Okay, that takes care of the hardware side the Arduino so we We're going to be using a free, open source Go to XOD.io, top. Register if you want, but I'm going to proceed registration. Now you can download XOD for any of the major After you run the installer and start XOD, a set of tutorials. I do recommend you check these out at some project. We give it a name... and now we have a blank So the first thing we're going to do is go You can see a lot of to look for pot, short for potentiometer. And we're going to These little boxes are called &quot;nodes&quot;, and you create a bunch of these little nodes that and you Now let's go back to our hardware list and to control. And we're going to connect the output of the couple of wires. At this point I recommend you go to view, This will give you a guide to what all the input and output parts of each node are. For example, a servo node has two inputs: number on the Arduino, and the value to send In this case the servo node accepts a value to 1 to represent the servo's rotation. And for the potentiometer, you can see how on how much This is perfect, it's exactly what the servo on the input, so we can connect the two nodes Next, for the sake of clarity, we should start names. And typing names into the properties section on We're and servos. Now that we have some meaningful names, we is connected I want my X potentiometer input to be Arduino I want my Y potentiometer number to 1. I want my X servo output signal to come from make the Y servo signal appear on pin 9. And that's it! We're done! Let's go to Deploy, Upload code to Arduino. Double check your board type and It'll take a few seconds to compile the visual, programming into native microcontroller code. And there you go! Now we can use the potentiometers to rotate But there is a small problem... I don't like how in the Y direction, the head the floor, or point straight up at the ceiling. I'm not enemies with Spiderman. I'd rather have it so a full up and down in roughly a 40 degree arc. To do this, let's go back to XOD, and let's These are all the different math We're looking for one called map range. Let's drag that onto the workspace, and on it and hitting backspace. Then we connect the input, and connect its output to the servo. If we click on the map range node the help to make it so will end up being mapped to a value between 0.75 going to the servo. This should limit the movement of the Y axis After compiling and uploading the code to the Y servo is a lot It's a very simple project, but the principles serious robots... or Thank you for watching! And be sure to check out other videos on my electronics.