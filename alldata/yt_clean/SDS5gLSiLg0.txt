my name is Casey Muratori, I'm a game developer. As I could sort of tell from the last talk not the common person who's at this conference, on the talk when they asked me to speak here, do you want me to talk about? And they were like, well, we just want to research, how do you use it, give us some it's inspired you to do something cool, I phrased and so I was like, OK, I can do that. So what I've done is I've picked three papers back in my history, for game development that for a lot of things. And which I had sort of a personal relationship Like I read the papers and really loved them that was related to them and I'm going to Now, my assumption is since it's not a gamer-centric I apologize for a game developer you're going so what can I say in this is actually how This is kind of like you're coming in and is actually what my slides are going to look. You don't have to read the slides hardly at They're usually just there for diagrams. So from here on out I'm going to be very, on the little YouTube drop-down, because I'm these papers. NORMA: Thank you very much. I love that! &gt;&gt; If you do, that's even better, come up &gt;&gt; Which I'm old, so that's actually, you the time, so it's actually not that long ago seems long for some of you who weren't even So in 1996 this is my first first job. And the reason that I kind of wanted to start it actually happened to be a job based entirely Now, this is not one of the papers I'm actually Um aim not saying I don't love it it's just If you've ever been to one of the fancy restaurants but then you order that and but then this an amuse bouche, it's cream celery with a This is a paper called evolving virtual creatures So what they did in this, you know, in this I guess it was just he. He actually made a system that sort of like It's a make the creature actually move its joints run these virtual creatures through tests, &gt;&gt; They could kind of give them things to Now the whole point of this thing was to simulate randomly generate some of this DNA and they stumble around, but they would then grade did, so for example, let's say that the creature there was an obstacle in the middle right, They'd take the trees for morphologies and thing. And shockingly as I'm saying this, I think if you're interested in this stuff because I highly recommend looking at it if this piques You would expect this to fail completely but The things that come out of it actually really following a light source or getting over an So it was actually pretty cool. But what wasn't necessarily pretty cool somebody a game based on that concept. Now, in the abstract that's a good idea but this paper was really implemented it was a It was a supercomputer at that time, 32CPUs Well, it depends on what kind of gamer you hours to run one of these things so if you thaterra terms of turning this into a game or something, probably. How long is a user going to wait? No one's going to want to play that game, So this was doomed to failure, but fortunately My job in this particular context was to create do whatever their thing is that they were of that these environments would be organically, viruses or something inside the human body the human body or something that would felt references House, let's say, and they would It should look kind of like that, all right? So that's what they told me to do and remember, I wasn't actually, this is an age and experience short when I was 18, that would be weird, much about research in any particular way. I had not been to college, I don't really said, well, you know constructive solid geometry using now, it's kind of a new thing. There are games like Quake and Unreal and constructed solid geometry, but point being at that because that's generally how levers Figure that out: I didn't know how to find is this kind of like this blossoming flower that well, you know, we have a 14-4 baud modem the noise when you connect. That's how you got into onto the internet like that that had a serious connection so And at that point, sightseer, I think had So the idea of going on the internet to find and interesting. And what happened was just kind of a fortuitous I found a paper that talked about something how to search any more. I tried halfheartedly to see if I could dig Basically they were talking about the concept kind of merge them together, couldn't I do go together instead of rigidly going together? If you look at this drawing. The one on the top is the kind of the blobby mind the difference between that if you took you get kind of a cusp where they intersect Unless you're talking about a tusk or something and certainly the things we were looking that smoothness necessary and I'm like, oh, man, and for those of you who don't remember what back? OK, a couple of people. So there's this weird cyborg metallic guy And occasionally he freezes and he shatters. And things turn into the blobs and they get each other like mercury if you've ever seen So that is what this paper led to me to. Alpha-shapes are guess not that interesting on doing those actual kinds of things with That's what it's called. Implicit surfaces will give you an idea of with grames or graphics you've probably never But instead of modeling with things concretely with most software packages would experience, or something like that, I'm making solid shapes that I want and then I'm done, right? But implicit shapes are modeling with more the actual thing I'm modeling with and what together you get constructive interference. So as their energy fields overlap something to define a surface, like an actual thing I can simply say, let's find where the energy of a band as it goes, right? And you can see, you know, where that constructive follows the shapes exactly, but where the you get that curvature and the reason is because creating like an additive constructive interference That in my mind I was like, that's where we There's something I want to say that's relevant have a definition like this, you end up with magically happen. One of the things that is actually very difficult One of the things that might be a little bit definition of a shape or a surface or something and what is outside of the surface and one not be complete. Even if you know that the surface is completely am I inside it, or am I outside it, then you do start doing intersection testing and there's And all these other sorts of things, right, actually extremely easy to know whether you're of surface is based on some kind of a field outside, if I'm inside, or if I'm on the surface, that information, so it kind of flips the It turns out that it's exactly inverse, with I know whether I'm inside or outside at any But what is difficult is to define the entire Because all I know. I know exactly what the shell is, but I have inside of it or outside of T for those of These are not difficult math. The math for implicit surfaces is basically All they are is field ex functions. They sake some point in space and they produce end and that scaler is kind of the energy space, and it doesn't matter if it's 2D, 3D, where you're inputting at the space that you're Now, oftentimes I should point out the value. We can pick what energy level we use to figure and, well, you know, actually if you care how it works, when you pick that energy level, where you subtract that energy level away. Because it's always more convenient to talk So you kind of want to talk about 0 as being where when I input something into that function, greater than 0 inside the surface and less Did I say that right? Hopefully I did, if not, the slide is right. Don't listen to me. Once again those of you who love math. It's so simple. One of the most common ones is metaballs. Which is a point feeling, right? And the way that those are implemented is That's it. Like if I want to know a point in space how this meta ball contribute it's just one over Nobody ever uses that so usually you use something it's basically that. Really, really really simple math for the so simple until this paper, right, is that to this thing if. If then I have a problem. In Step 1, I can trivially just take as many all together. And they don't have to be meta balls, they that goes FXYZ because all I need at the end And step 3, if we leave out magic Step 2 is I have something that I could feed into a OBJ. I -- something you can output into a PLY file, OK, so that's where the first paper I've loved got a really long subtitle. But this is the paper. It's by Lorensen and Kline. But it's a way of filling in that missing OK? Now, here is how the paper works, OK? I need to figure out some way, something to I have an entire world filled of values that surface actually is, and furthermore, if you is just a surface, a 2D surface, right, embedded space. That's kind of how 2D -- volume squared is the value that you picked unless you're less So anyway, you kind of have this problem of is none. So usually you're going to get some other So we kind of need to figure out just to get know where a 0 is? Just give me something to work with here, And so what I can do is pick two random points And I could evaluate the surface at those That's trivial to do. I said it's easy math. Put in XYZ, out comes the scaler and we're So there's only three cases that can happen both return positive values, which means they're is they could be both outside the surface return less than 0, in both of those cases happens in between these two points and the because I don't know if the field kind of points there, so I could have been both in the middle, right but the third case is the If one of them is less than 0 and the other about what happens in between and more importantly know. I know that the surface is in between, right? Because in order to go from a positive value them at some point I had to have crossed 0, Even if the function is discontinous, the it's going to happen. And that's all I need to know. Once I know that any of you who are familiar for you it's basically root finding. What's the result? That will tell me which way to go, right? If the result is the same result as A, then If the result is the same as B, I want to I want to push away from the one that I got So I'm going to just keep hopping until I And get to where the surface is kind of an So really what I mean is go down to from things but assuming you're computing to work with anyway, so 24 steps of bisection could get to anyway. So last step to the algorithm. Now we know that if I have two points and and one is negative in terms of value in the right? So now the question is how do I go from that that I could use. And this is where the marching cubes thing You. In the you either take a rectangle or a cube or eight of them depending on which one we're And what you will get is a series of negatives What you then can do is take any edge that and do that root-finding step that I just You now know where the surface crosses the Right? And all that's left to do is connect them. And now you've got either an outline of your as long as you just do this to basically the And you can see that this is a pretty easy think about the way positives and negatives have a rectangle there's 4 points, there can and negatives in this thing so you only have 16 cases really aren't 16 cases because they're If only one point is positive and the other Well, it's the same case just rotated, right, So you really only have to implement a few at. Same is true for the cube. Worst case is if you typed in 256 things, And then like I said, you just apply this figure out what the surface looks like there And I didn't draw the volume because oh, my You will just get a mesh that occupies that am I going too fast? Because I know I'm going fast, but are we We're totally good. Awesome, that's what we need to know. Brief moment of silence, little tiny tiny brain teaser in here, it got it cut for time. OK, 1999, we are going three years forward And this I was working on a character animation This was not a crazy project. This was actually a good project. This was reasonable. This was not something a sort of conjured possible. And one of the things that's true about animation is that rotations are really, really big deal with. And the reason that I say that is because space is much much harder in rotation space, and that sort of thing you'll be like I don't neither did I until I started working on these The problem with rotations is they don't obey normally would like things to obey when we So for example, if you think about positions, obey, they're really, really nice from a mathematical Like you don't have to sit down and like, going to happen with positions while you're No, they're just vectors, they're fine, you Everything that you think intuitively will that way. And the I don't pretend to know remotely even why this is true, I can simply tell you practically. If I do two rotations A and B, I will not the order. Right right? With movement and positions, that sort of You can rearrange the order.Ites all the math not that way. So at the time in 1999, my first incarnation talking, you want it is. You've got some numbers, they've got some Rotation indices are inefficient for representation of freedommed, if you will. A 3 by 3 matrix can do all sorts of things it, it can do all sorts of stuff except move So it's really not a good representation for orientation there than you need. In the game industry we care a lot about efficiency So typically when you are using more data of efficiency and not just in terms of storage in order for my program to work, that means So if the thing that I'm trying to represent that means I'm 3 times worse than I should End of story. The next paper that I wanted to talk about because it is the kind of paper because it As far as I know this has nothing in it that anyone even had a personal computer. So it's all old news, but it was the first I will tell you in a second as a rotation want to spend a ton of time sifting through And believe me this is a real practical concern. It doesn't have anything to do with whether could be good at math. The bottom line is it takes a lot of time Nits very different if you have a paper that That clicks really quickly and for people right? That makes a big difference. So I wanted to pick this one because of sort tell you why I think that's important kind How we doing on time, by the way? Good? Thumbs up? All right, so quaternions are very odd things. I'm not going to try to explain them in this to do that, but what a quaternion is basically I'm not ha math person. Who knows. Well, a quaternion, you can think of it a in that you have the sort of additional bases number, right? It's a comfort thing, right? It's like I'm really comfortable with the as hard that part of the math so I'm a little of those bad numbers that you didn't study Quaternions are a doubly complex number or want. When you write you just write the actual coefficients a complex number you don't bother writing You end up vectorizing so typicaIly quaternions You kind of just know at some point that's So at some level they're 4 dimensional vectors. So what do they do, what they do at a high encode orientation by their direction. Now, this is not how it is normally introduced. Not even in that paper. I can just say that that's sort of how it What happens is the length of quaternion in quaternion that you had, you'd have the same computer graphics, right? Now, that's not making a statement about quaternions of times when you do care about that but as we do, that's all that matters. So on the right 2D, in 4D, I can't draw that I usually have to use analogies when I'm working So the A and the B are the same rotation, than the other one but they're both pointing The C on the other hand is a different orientation, even though it's roughly the same length as. A, right so length is irrelevant, but direction So imagine that in 4TD. There's probably people who can see in 4D. I'm not one of them. If you can, that's awesome, now the reason have that weird structure is because a guy games and graphics went and took some math games or anything like this, this is actually to study mechanics problems and they wanted Hamilton. This is not Alexander Hamilton, the guy that So yeah, like I mentioned before, rotations was trying to capture when he came up with so he wanted to have it so if you wanted A the real world, and they wanted the math to Right? And he did it, right? That's why he's famous, well, math famous, maybe someday he will, when math is more important So 3D rotations if you were to say the words well, I'm not enough much a math philosopher this property. So if you encode rotations as matrices, you So you can do it in matrices, like I said, Quaternions have the exact same thing. So the multiplication both obey that ... ... of that. I know that's an ironic thing to say. You always want it both ways. The best possible thing you can have in representation of the things that you want and one of the dealing with these things is nonorder dependence, trying to capture the order dependence of the fact that in those parts of the code where I have to care, right? And I'll motivate that a little bit more in So if I wanted to make an order for quaternions how to do it and the math didn't know, either. Nobody knew. It was just not known. OK, so why do we care. I'll tell you the reason in a second. But typically when we're working with animation, we have human input, and I'm on two ends of So I should say we have a lots of human input We have artists who need to make assets and pad in their hand or a mouse and a keyboard to control the characters on the screen. So two things need to synch up but we don't Who knows what they're going to do, right like the film industry it's efficient to have a must. We need ways of ordering content where we So typically what has to happen is we produce need to get to a specific, like, nobody ever and to give that a little more concrete flooring art for the guy with his hand kind of waving kind of sad and I don't know what the player is. I want a whole range of happinesses but I But that's what we want. Right? So in that context, we start to get into cases in which we're doing things. Because this starts to multiply out. Let's say that I have more sort of axes on I want percent happy, I also want percent does he not know what he's doing? So I might have some sort of multidirectional it looks like in some specific area inside So at that point, I can't start really talking There's just samples and I'm weighting them might think about there, they don't have order They're not doing this, then this then that. I'm combining a set of things. And combining doesn't work that way. I get all these fields, I add them together So we had something it's called spherical Really, really simple it's just saying I have them using some percentage, right? So I want to get the things in the middle Well, spherical linear interpolation is the linear motion through space I'm actually talking in spherical interpolation is, it's talking If you think about what I said before, it's direction, not their length so when we talk What we're trying to do is talk about their So in order to move smoopghtly between two there, we need to take into account the fact I know it's a little complicated to think It's 4 dimensions, what do you want? It's crazy. [laughter] Thing, but it starts to get really inefficient switch the order somewhere, the code has to result and all. A sudden your thing would change. There's all kinds of problems with it, right? So could we do something where we just fed So fast forward to 2001, the spoiler warning the problem. So the problem is still unknown. And to the extent to which -- yeah, I thought The extent to which we did did not understand I'm not talking about us sitting around going, let's go to lunch. I'm talking about people wrote dozens of papers These papers were awful. They had to write optimization things, crazy a game, right? So it was really, really mysterious. So here's the how we solved the problem. So the way we ended up solving the problem that way. We're using the SLERP thing, we're using this actually work in practice? Right? And so what we did is we wrote a program that working in practice. And the way that it worked was you could put frames for them. So again if you're not familiar with graphs to. But if you could imagine XYZ axes that you You could set two of those wand you could do between them. So when the X axis would rotate to the other and on the arc it would mark notches to show 20%, 30%, 40%, right. This was the first step that was going to It mapped I'm just going to say in that program Matrices, the exponential map which I'm skipping. It was another way of doing interpolation, is linear interpolation. So we don't even care, we throw opt the fact run them through the same old code that we what we found when we looked at the actual almost identical for all of the angle distances So I've drawn two sets of notches here. The top one is LERP, the bottom one SLERP. In between there, LERP on the sides is going a little bit of a speed variance as it gets But they're really, really close together we had always been thinking, oh, LERP, you No one ever tried it, no one ever even thought the same for everything we cared about, right? So that four hours which was supposed to be end of it. That was the answer. Then it was trivial for us to do all the rest right? We could use n-way blending now. We can do faster 2-way blending, because there do implementation-wise that makes it slow. You can do sblines, and it was awesome beings And if you worked backwards from that which it's actually obvious why this might be true. But the reason that it's true is that if you forget 4 dimensions, just think about 2 dimensions, Well, if all I care about is the resulting those -- of that line onto the arc and we onto an arc, you get a little bit of bowing the two sides, right? It's exactly what we should have expected ever really done, right and by the way as people and who care about this a little bit why quaternions LERP and matrices don't LERP If you care about that talk to me after and It's really neat, but it would take another In this case, dumb was really good. It turned out the simplest solution was the One of the reasons I want to kind of plug about what it took to get to this answer, There wasn't really any insight or mathematical What it took was someone sitting down and often, many, many times, the people who sit mathematicians, trade programmers do code can do something like that really, really or whatever the math knowledge is necessary or even know that they exist, right? There's so much mathematics out there, how the reasons papers like this are so valuable just making stuff access to the domain and that but I bet there's lots of other examples, industry and probably lots of our industries, if there wasn't that paper and possibly since whether any of that would have happened for How am I doing on time? Thumbs up. Now we go to 2003, and this is the last paper. I've talked about two types of papers I've The other one is I didn't come up with anything came up with a good way to explain it and explanation is almost the invention itself. Because there's sometimes people who do all understand it not at the deep enough level It's the coming up with how you explain something And now I'm going to talk about a third type contribution in terms of new ideas, new insights, But written by someone who has no idea how It might as well be encrypted with because in this paper, OK. All right, so this is the paper it's called complex objects in three dimensional space. It's by three guys, they're from robotics way they explain it, because it's nuts. The paper is full banana cakes. I'm boring that phrase. It's a great phrase. You read through it, it's got tons of notation of things if you look back at section 4.321. And you're like I don't even remember that section you're talking about. Theaps the kind of paper it is, all right? But trust me, this is what the paper actually Let's say I've got two shapes. They're conveniently here square and triangle. It's just a given, I won't try to justify Let's say that these two shapes are intersecting a way that they are colliding in some way. They are taking up the same space. This paper is about figuring out whether that Here I want to get the answer, no, they aren't and maybe other things, too, how far are they I say it's brilliant. It's one of those papers that I looked at to be to make these leaps. The first thing that's really cool is it starts principle which is rarely what you start with as collision of shapes defined by their boundaries, I can't have two things that collide that It doesn't make any sense. They have to share some of their interior, and it turns out we can write this in a mathematical We can say what that is. And what that means is if they have. A and they have B and they intersect then on A and one point on B that are the same Because otherwise, if I couldn't find any these things don't intersect. And with trivial subtraction, I can say equivalently when I subtract one from the other I am get There is no separation between these points. I have to be able to find just one pair and Maybe only at one point, but they intersect Now, second crazy leap. Because that's kind of smart to begin with. Maybe it doesn't sound smart to you. So they were thinking about it from these like molecules in the world occupying the Next thing is OK, what good does that do me? What am I going to do iterate through all Not only is it an n squared problem, but all There's But they borrowed something called the Minkowski you to add Okay, and what this is if you imagine I take rectangle, right it's like I'm adding these Now, how do you form this? You imagine taking one of the shapes and you it can go. If I my circle and my square you can see the If I put it inside the square and I move it I take the resulting shape everywhere I ever right? So it's very rigorously mathematically defined. So on the other side I did like a weird quadrilateral You can do it with everything. You can do it in any dimensions, you want OK? Now this is math, not art, right, although I don't want to bias you in a way of thinking But the point being, it's rigorous. Because art could be rigorous if it wanted They are actually a set of points for reals, What that means is if my shape is offset from when I do that sweep. Remember I said you put the origin everywhere itself. The origin goes everywhere and then I get So if theres a net displacement in one of in the result. That's really important. I'm not just saying that because I think it's It's really important to the result. And what you can kind of see here is I wanted you go back to what I said in the first sort I said I should be able to point 1 Point A, to get 0. If you think about what happens when I start sum space, right? I want to be able to find whether there were them I would have gotten 0 and 0 in that equation, sum, right because if I took one shape and any points in common, the origin would lie Because at some two points subtracted would Little to hard to understand. I'm sorry if that's a little rough. Everything else easy. If you take a look at what happens here, I I said I wanted to take some point on A and But the only thing is that I wanted to do But it's trivial to turn a plus B but so on circle, on the bottom all I've done is negate So even though Minkowski doesn't technically just a sum without a negative, OK? Let's say I have those two shapes now I want they collide, or don't they? I do the subtraction, I see where the origin The origin is outside the shape and hey, that's These two shapes aren't intersecting or the OK. How bad is that? Anyone really feeling no, I don't get it. I don't get it. it's OK, I'm sure I didn't get it the first spirit if you didn't. OK, so here as the next insight. The next insight is OK, for concave shapes would get a concave shape. The reason it will probably be concave is of both shapes come through. So if one of the shapes is concave and I add going to get a concave shape on the outside. That's certainly not a guarantee and you can't However, if they are convection, then when shape, and why? Because there is no place for the concavity I'm only adding solids together, so all they create sort of a crenulation, because I never definition of all this is all the points plus OK, so reason I call that an insight and not out that you even cared about that, but you care about that is the next insight in this For every point on the convection shape there is the furthest. I can never, ever, ever pick a point where along any direction I might pick, right so the points have some direction I could pick There is no other point that supersedes them. But on the right you can see that that is There is a concave shape and that point in I can pick any direction I want, there is that direction. Right? Always some other point. I challenge you to do T you if can do it, But this turns out to be incredibly important. Why? Right. This is why I calls these insights, because true I have to keep explaining to you why The reason is because let's suppose, five Is that what that is? OK, we're almost done. That's actually not that bad, I'll speed back [laughter] Minkowski sums, right? It's abstract mathematics, right but if you I wanted to start commuting with them I'm Even just the thing that I said was an easy the and tessellate the geometry and starts So I need some way of doing computations with So I need some shortcut. And here it is. But I can pick random direction, right, and And if I do that in several directions I will area in 2D, right? And that area is guaranteed to be part of It's completely contained inside it. There is nothing in there that isn't also That's really important. Because now we can work with it. If this was a concave shape, you can imagine be true anymore. Not everything inside my triangle would be I can find points on the Minkowski sum on OK, Casey, maybe I sort of see what you're to find the points that are furthest away, didn't want to do that you're contradicting There's got to be another insight, right? And that insight is that when I build the do that operation on the individual shapes so what that means is I can just take the furthest point on those, and add the result We can also easily figure out for any shape, to input or any shape you want to do, we can projection. We've never constructed the Minkowski sum the surface, without even making it, right? It's So let's go ahead and give credit to So I was talking about how this had to be cool, well, the sel cool here was to figure and I'm going to explain it the way that we the actual paper itself was so obtuse that was actually going on in the algorithm. They kind of used a bunch of math to get to of steps that they used and it turns out that you can do it in a much more efficient way that. I'll skip what he actually said because we're Just to recap we have a function and I didn't it's called the support direction. The thing that tells you the point. You tell me the point on the Minkowski sum right? We have that, we want to do our actual intersection OK, so here's how it goes. What he say what's the point. It's the point down the lower left corner. We know what the origin is. Then we say OK, in the direction of the origin, give me the point that's as far in that direction those two steps, which hopefully are very two shapes intersect or not. We have our first clue, if the point is not from the perspective of that direction we're Because if that's the furthest point in that The resulting shape could never enclose the There's nothing beyond that line. There's no way to ever enclose that origin. It's on the other side of it. So if I couldn't get past the origin, the have enclosed it. But let's say I got back the opposite result. I did get a point on the Minkowski sum boundary Now all I do is I continue. I say take that edge, go in a perpendicular of it. Now I have a triangle. If the origin is inside the triangle, remember, sum, it's inside that shape, right, if that because 0 is in there so you must be able surround it. If let's say the origin was inside the triangle all I do is pick the edge that's closest to that new edge. All you do is iterate that until you get one case where you can't enclose the origin or The answer the entire algorithm. It's trivial to implement. It takes no time at all. All you have to do is implement that little there you've got something that can do almost It's crazy what this thing can do. Because the Minkowski sums are actually generalized, any number of operators, which means that to t I could do sum objects that are surrounded. So I could actually do the Minkowski sum of I could collide shapes that I can't really Which is even awesomer. So now we're at the end of the talk which I told them I was going to be over time so Is that true? How bad am I? OK. I said at the beginning of the talk that OK, If you remember the marching cubes thing, Well, it turns out that this is one of those is dead and he's burned and he's lying in of the movie his hand comes up and's not dead. It turns out years after I first read the marching cubes that had some really interesting constraints, and things like that and it turned out that largely built off that original marching cubes So yeah, there's my contact info and sorry lot of stuff in there I wanted to not miss So thank you very much. [applause] &gt;&gt; Do we have time for questions? &gt;&gt; SLERP. It seems that you can get like with LERP you the exact midpoint, you can get the exact &gt;&gt; yes, you you can. But remember what we're trying to do is do keep going those computations it's way too Because if you want to implement SLERP it's But it doesn't actually help in that particular For LERP and SLERP -- when you were doing pass and therefore length of the WXYZ vector I assume length does matter because you're distance so do you normalize the vector for &gt;&gt; Got it so the answer to that question is because it was just kind of give the basics. In actuality there's a lot of things you care but which you do need to know. Some of them are, yes, once you switch from in SLERP, I really don't remember, you do Actually it doesn't encode only the rotations actually an additional set of rotations, it's where you can actually represent a 360-degree aren't the same and I know this sounds really physics or whatever, go up and look up double-cover And you also have this other thing called You have to understand it all and when you that it all works properly but you do have about and a couple that I didn't mention. So I don't want people to get the wrong idea There is actually a lot more to it, but in ZEESHAN: Maybe one more question if anyone ZEESHAN: O'right, Thank you Casey!