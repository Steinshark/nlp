Hi, everyone. My name is Patrick Akil, and for today's episode, He's a senior Android developer a lot of stuff, how Android development how his love for content creation and how he finds new ideas Beast is going to do his famous tweet giveaways, Enjoy. Beyond coding, what what do you do at Disney? Exactly. I am an Android engineer. Android? Yeah. And I looked up on LinkedIn, and it's always been kind of mobile Well my background is from as a backends. So like yeah so I started with VB six. Yeah, And then BHP and Java. Then I bought my first Android phone and then I switched to the mobile site Yeah, everything was app development. No, you were like, Yeah, yeah, yeah. Like people wanted to put their websites Basically, in the beginning So there was no market in Brazil in 2009 and I was learning to So there wasn't that. No, there, Right. So I had to create my company for other companies. But most of people, they wanted to put their website inside So in the beginning was like that. There was no like, app. Yeah, it's like, let's build Yeah, yeah. Was that the most of the client requests Yeah. Yeah, right. Because you said I think very early So you were even, let's say, on top of the game Why did you stop when it came to kind I failed a lot, I think. Yeah. So it was not not one company. I think, I started like three companies and all of them failed. Yeah. Yeah. So this first one. Yeah, we we didn't because that's the thing, right? You need to get good clients. So, yeah, we got, So it was very hard to, you know, to, So we grew like to 5 to 6 engineers And, yeah, but then things got like a one kind So you have a cashflow problem. You need to go back to the market, So that's what happened. That's rough. Yeah. So in 2000, I think we Yeah. And then 2013 does a thing, I think. Yeah. I had to go back to the market Was that the period from 2011 to 2013? Did you start multiple companies Multiple apps, Yeah. But below this umbrella company. Yeah. And then you continue From that point why, why didn't you go back to back Because I feel like app development was It was like, this is the future. Basically, everything was going to mobile and I feel like nowadays is on their mobile phone. So it's still very prevalent yet back in engineering I feel like they're kind of yeah. Either combining or it gets easier Yeah. I don't know why it didn't go back, I like the feeling And then you see someone using the maybe like the, the, the front end side, the client, Yeah. They can see that they can do it. But, on my personal projects, for instance, when I'm starting a project, a lot of times I go back and. Yeah, yeah, yeah. Because your main Are you still doing Java? I do Kotlin, yeah. Right. Yeah. As an Android engineer to Kourtney. Yeah. And the desert. I mean do you do Kotlin for iOS as well Yeah. You can, you have Kotlin. Multiplatform can be. Yeah. Yeah. They rename I think it was k k Okay. I've heard of. I didn't know about the name change. Do you, do you still focus on Android. Right. Yeah. Do you think platforms are moving everyone's just going to use Native or, or Scotland in that way Yeah, that's a good question. I think as long we, we, we, we, we are going to Okay. Three No Android using Kotlin. I was using Swift. Yeah. Because, Yeah, So yeah, they, they push back Not that much. Right. I mean, until now, every browser in the, at the browser in iOS was the same was yeah, behind Yeah. So if you download Chromium, Chrome it is basically web kit from, from, Really? Yeah, I didn't know that. So the engine is the same as Safari. Okay. So that's why like if you do web web progress, that you can cannot have all the features For instance. Okay. Yeah. But now in Europe, They can't do that anymore now. Yeah, now. Like Google will be able to okay. Yeah. So this is changing. I never knew about that. Actually, I've. I've never heard. I shouldn't say never. Like, I've dabbled a bit with mobile Native side and I built kind of the back which was an I.T. project where we had a lot of data in that way. So I did stuff with notifications already thought of, okay, notification to someone But what would you say when it comes to mobile development development I think the biggest difference is that when you release something, Like it is there in a user's cell phone. Yeah. And you don't have any guarantee or it will update your app, you know, you need to think like, okay, Yeah, because the user might not want Right. So you can still be in a version So from, from the beginning. When you are creating an app, you need to think like, okay, So your app needs local logic to do that. Yeah. And you need to also have, and config config files, features on the fly that you don't want no longer export Yeah, they do those. So those are dynamic conflicts. Then you don't ship them with the, you ship the configs with app code. Yeah. You can do like you can push code Yeah. But. Yeah. On native we used to native. I mean like calling Java for Android. We used to, we shipped the app with config like if, if if else in the code. Yeah. So it will enable or disable Yeah. Yeah. We call the feature flag or. Yeah. I thought those would be kind of dynamic you have the same challenge, right? If someone, let's say if you enable Yeah. Someone would still need to update or wouldn't they? What? What do you mean? So let's say I have a new version, and Okay, I thought if you have a dynamic Let's say the feature on people Yeah, that's what happens in that way. Yeah, that makes sense. Yeah. So you can do like even Yeah. For 1% of users. 5%. 10%. Yeah. You can do experiments. Yeah. That's nice. Do you do a lot of experiments because I have experience when it comes Is that easy to do on mobile as well? Yeah. Yeah. So both the rollouts as well as AB Yeah. Yeah. And do you use does does Disney I don't know how much you could talk about but today is there a lot. I think I cannot talk that much. But yeah, they do. Yeah, you do that a lot of accents A lot of decision making nowadays We try and make a lot of assumptions and then we do features. And now you have this trend of, okay, all of that sometimes a little bit more, And then we actually see with AB testing because I feel like especially with mobile and also on web, you build, first of all, you've got and second of all, your velocity goes down And if the features don't get used, And they might be either in the way, especially from a code perspective, So it would be best if we removed them. But I feel like sometimes, we're just adding stuff. Yeah, adding and adding and adding too slow or it's rubbish Yeah, that's like the cycle. It's crazy sometimes. Like I feel like we, we are always to, to use, to have to be faster, Yeah. And then you want to buy a flight ticket that skips like restarting Like, you wanna you go to the floor something fails and they Also, the most basic feature on app buy Yeah. So like so I feel like that. Yeah. I don't know. I have the feeling that the websites or apps, Yeah. I don't know or do they need to. I mean, I mean take a step back this is on the up side, or we or if we select certain solutions, Yeah. Yes. Better is faster to the kind of user experience But at some point I'm like, okay, how much Because when I'm talking about a web page, and that was like statically rendered and that was like super fast. And I don't think we, we, we could get it faster, but I didn't know if that was going Is that for the outside to speed like even those tiny, tiny differences? That's a good question the one of the most interesting thing Mobile apps. Yeah. Because you you have millions of different devices Yeah, you're like a big company as Disney. We need to support all kinds of TVs, Android or fire stick from Amazon. It's a lot a lot of different partners. Yeah so it's not about always like your but your app need to run certain devices So you need to care more about resource. Yeah Yeah. How much of a hassle is that Yeah. You need to the first thing mobile engineer, okay, no app inspection why your apps consuming that much memory Yeah yeah which is scheduler and so on. I didn't know about that actually. That is it Like there's just but people still have old hardware, TVs nowadays are cheap. Yeah, but people don't buy cheap TVs especially if they bought it And they have older hardware Yeah, that would say like great mobile engineers also like Yeah, they have to know. I think so. Yeah. So it doesn't matter if you called in Yeah. You need to care about the research Yeah, I come from operations and in that way I had to test it and back then a physical test setup when it comes which I would patch the software on if I could scan everything When it comes to mobile, about the suite and the range of, Android phones, different versions how do you test all of that when it comes So it's very hard to get all the device. Yeah. So if you are like a freelancer, Like if you work at Disney, for you to test. But nowadays you can use also a device So there are companies in all kinds of device in the cloud. So that's nice. Yeah, yeah, yeah. It makes sense that they would kind of Yeah. Even Google like in the play store with Firebase, it can also run tests Yeah, very nice. And you can do like roll out out your app to 1% of the user base Yeah. Yeah. And do like like a bubble roller and that. Yeah, yeah, yeah. It makes sense. The I do like the trend that I mean because I have an iPhone that my iPhone basically updates or really says So then from a software side, said when it comes to okay, at some point So it's in the software as well. But at least from the App Store most of the time. Is that on Android as well? Yes. Good. Right? Yeah, I think that's a really nice. Yeah. Yeah. But that is a funny thing. Like that. I am a iOS user as well, but I'm an Android engineer for more than Yeah. Yeah. Why is that? You don't want the I don't know, Really? Yeah. Just like a funny joke. Is the first Apple computer That's funny. That's cool. I was wondering because you laid out that you made when it comes I'm sure you made a lot of apps and you do But are you still thinking about and doing that again, or what are you Well, So in 2010 I launch my first app like was the It's basically Yeah. And that went great like so because back then people they wanted to download apps you know selecting two years I was able to and have like yeah different like rule yeah in life like you need and I always did that insight project but nowadays like people don't download Like if you are not having dinner with Hey man, look this new app by download, Not anymore. It used to be like that. It used to be like, Yeah, now people say how funny is this 10 seconds Yeah. Or this new stuff. So yeah that's the new app. Yeah I and content. Yeah. And I know you're playing around with Yeah. Yeah. So I think, now my site projects are around content and I'm playing with A.I., but not that much. Not that much. Not yet. I want to see what happens, like when opening I, they, So they create like that. It is a store you can explore new diabetes so launch like to diabetes But no people are not downloading that Yeah it's not like the early days No. Yeah, it's not. Yeah, I like how you put it I was younger as a teenager. I used to download apps many games, but also to see like, No, I don't download stuff anymore. Somehow, sometimes there's one app that Then I'm like, How did they slip in? Like one is for example, Yeah, where we went as a, as a group you, put it in the app and then at the end But I don't know how that got established. Let's say it's really hard. I feel like as an app nowadays it's hard to get traffic to the app. It's not that much organic anymore. Like as a YouTuber, I can launch an app to that to download the app. But if you don't have an all the instant, and get to like a million downloads and are sharing it to their friends, it's Yeah. Yeah, I like that. You said that it it does go hand in hand Yeah, I do see a lot of, let's say content their revenue stream, but also just their platform Because if you have a community that's and you create more content in a different way, For example, he's creating like this learning platform where it's similar to Lego, And he's really working And because he has an audience, for them to keep learning. Next to kind of the video content Yeah, that's cool. So similarly, But nowadays, yeah, I've always thought or maybe even like plugins browser I feel like I read these stories where people say plug ins and apps and I'm like, But I'm happy you That yeah, it's kind of not the main thing You have to have stuff around it. Yeah, definitely. Yeah. What, Content creation. Why is creating, mostly about stuff that I'm thinking, You know, so okay, I think differently and I What I do is like a hit record Audience Yeah, that's basically it. They have an example of like, that was like, interesting Yeah, Most recently I saw the Mr. Beast tweets, you know, Mr. Beast that Mr. Beast uploaded his first video. I think Dude X Yeah, And then I think it was one week ago I will share my revenue from this video Okay. You can retweet if you repost my tweet, I will randomly choose ten of you. And I look at that tweet and I think like, okay, I think I'm going to repost. Then I know my friends will see that I want money from reposting a tweet, But then I started looking like, I will repost. Then I saw like, okay, there are like Yeah. And I start to think like, okay, how Mr. Beast will will select people So, so so that was that hooked me like How we can technically build a script that will do this, you know, So I start a project to implement, like how we, how we can use a Twitter API to fetch this 4 million retweets. Yeah. And then select ten of them. Well, yeah. So then, yeah, that was one of the one of the most recently thing That's a really cool use case. Yeah. Because that Twitter So the first thing is like API. Like as a developer you can buy like but you don't have access or you can pay $100 monthly. Okay to use this API, limits of five request per 15 minutes. no way. Yeah. That's never going to work. No, it will take me 7 to 7. Yeah. I was like 80 days to run the script No internet issues. And then you have the pro tier 5000 per month to Twitter to X, Yeah. Well to have 5075 request for 50 minutes stuff even that much. No. And that means that Yeah. To do this it would take him five days. Yeah. But he promised to select So I was like wondering how, Yeah. Does Elon Musk send, the open the gates, open that like database so that was like what got me interested. Yeah. To create this content. So I upload the video, So there is also that you can do enterprise tier, and you need to be already spending 42,000 monthly with with Twitter. And I didn't know That is insane. Yeah, that probably has something Maybe. Yeah. Or maybe a different way of doing like, using this search API I don't know him. Yeah. Interesting. I like that your your use case. Some of the content creators let's use this programing language or we make something simple of projects like a widget or a smaller app but you're actually like, Man, When you laid it out like that, because I have no clue And then you get those, Your API sucks, basically, or you have to How do you do that? Yeah, that's the fun stuff. And the trick part is that the API, it, So you cannot like from okay they return, a hundred Yeah. So you could basically or 40,000 page for 4 million retweets. So you could basically random Right. And then you just do So Okay, but the pages are tokenized the second page. Give me the page number three. Yeah. Because you need the next token. So you need to actually fetch and you cannot. Yeah. No, no, no. I was thinking I was, also so I was thinking but I'm assuming if there's a rate Exactly. And I don't know if you can do that's like a you can't do much, Yeah. Okay. So you end up yeah, I solve it, I solve the fetching the, Okay. The script is still running. Yeah. Yeah. Well, so in fact, I'm gonna say days, but what I did to just demonstrate that I create a mock server and I set up a proxy box So basically my script is fetching, is trying to fetch the data from tweet, to my mock server, and my mock server So just demonstrate Yeah. Yeah. That makes sense. Otherwise it's it's within days And then if it's wrong that investment Like, that's funny, man. Do you like to come up with ideas It takes a certain way of thinking I don't think everyone could do that. I wouldn't have thought of that. I didn't see the tweet, but I never wondered like, okay, how you But you do do do ideas Or do you keep a log of ideas Yeah, I keep a log of ideas, but usually they, they come. Yeah, like that. Yeah. Nice. I'll because your log of ideas, like that are in there you say, well so I think one year ago about random subject to react to content. So my main content's like me Okay. All right. So that's my So we, we post videos on Monday. Mondays, Wednesdays and Fridays, Yeah. So we have a format. Okay. So I will be reacting to articles Yeah, but sometimes there are like this. Do it for Mr. B's then. Okay, this is interesting. Let's, let's put it in the pipeline to, Yeah. And that makes sense. So, so I have a roadmap of articles but I have this and the when it comes to, let's say, the, the excitement, This is my favorite part. These are the conversations I don't like doing the planning, But I do that I even like the editing part. But at some point And the weirdest part is like more so the fun part, then that's What about the video content Do you like the most? You actually like the research Do you like the shooting with the camera? I like when I need to develop a project. Yeah, figure out early in in my use of channel first of all, it needs to entertain, but it needs, it needs to be entertainment The audience. Okay? It can be that kind of theater like that. You watch the video, it's why am watching this? Just for entertainment, Yeah, yeah. Like they the audience needs finish the video with the feeling And I think that when I found some Beers do it like this is the best for the Yeah. You know, because it's entertainment, Yeah. Yeah. So that's what you like Yeah. Yeah, that makes sense. That also makes sense with kind because one of the things you said why you like Android development development is making that difference Yeah. I think so. I think it's genius Beast, that example. I love it. I'm going to check out the video, Yeah. Do you when it comes do you experiment Do you like the technical stuff as well? Because it feels like You like solving problems rather than figuring out or playing around Yeah. So I think I was like, I need to learn rest. I think it's quite interesting. Programing language, you know, so I hate garbage collector. Yeah, yeah. But I also did some C++, you know, I like memory myself Yeah. Yeah. So Rust is just in the middle, like, so. Okay, I need to learn rust, Learn rust. I don't like to go, like, let's go to the rust documentation Well, let's see an article about A couple. I don't like to learn like that. Yeah, I like to learn in a project. So for disaster based project, I, I, I thought, okay, let's learn rust So so yeah. Nice is that. That's how I learn new things. Yeah but it's not because of the, the, rust itself, but it needs to be, Yeah. You find an opportunity, and then use it as a learning opportunity Yeah. I think that's, I see more and more like that's listening. He also does that. Her nanny's He does that a lot as well, where they, or they want to learn something through kind of that learning or they create videos when it comes to solving a problem I think that's really smart you do a lot of things at the same time, and I think it amplifies I mean, if you're starting out with rust, especially Rust has like If you create content on that a few years of experience sees that, It's like you're not learning by yourself in that way if you're open to that Yeah, yeah. Have you, have you gotten any feedback when it come to your code or the solutions Interactive as well. For this challenge, I chose to do life, so it was like five private lives Yeah, from YouTube membership program. So I did with with the Yeah. Also using chat activity how how I like what I to resolve the problem before going life. Okay. Now when I'm doing life to just make mistakes because I want I want them to see how it is actually So I just go like open chest, like, okay, yeah, I actually don't know how to do that Yeah, that's stitched together. And I go to Google how to also figured out, yeah, that you don't know how to outsource Exactly. Yeah. That's really nice. And it doesn't because I can see from my side you need to have an ego which is very low You don't have to have an ego to do that. If your ego is high, You're going to be that person I know how to do that, and then I'm going Yeah, I think I learn a I learn how to solve problems because I start coding with 12. So for me it was, I don't know, writing code was always a thing that I did. Yeah. And you taught yourself at a young age? Yeah. Just playing around, you would say. Just playing around. I started using access and for Microsoft. Yeah. Then inside access, This is all basic. The basics. Yeah. So that's where it started. Nice. Yeah, but the thing is that so basically what I like is like I learned that I, I will always find the answer what is the problem, No. Yeah. So yeah, doing that. Yeah. Yeah. Would you say nowadays let's say for people listening that haven't done anything with programing you can still teach yourself and let's productive and solve problems that you see Yeah, Yeah, definitely. Yeah. I think that's the best way of learning. Yeah, Yeah. And nowadays you have A.I. to help you. You'll have people online Yeah. And ask questions Yeah. There's this. Multiple communities nowadays. I fully agree with you there. Yeah. How much have you played around I'm using more but I don't like co-pilot's. Okay. Yeah. I don't like the feeling of suggestions. Good suggestions me asking you know I like I'm and then GitHub copilot is out of Altadena So I don't know I feel like I'm Okay, so the copilot aspect Yeah I think it breaks my flow. Okay. Because when I'm coding, So when I'm coding, like the world can be falling apart, Yeah, And I think, copilot, stay. They make me lose focus. Yeah, I can see that. I haven't played around with copilot. Let's say integrated in the idea. I do the what you said the conscious going out of it asking a question Yeah. And it's, it's mostly because But also from an interest perspective, I haven't really played around with it solves kind of my needs And it might be making me less productive. But I still see this as kind of a mental challenge It's also from a fulfillment perspective. It's nice to do it, except I I've started using that Yeah, same here. Yeah. Yeah. I don't use Google anymore. Or StackOverflow. Yeah, yeah, yeah. I sometimes do. But then I'm like, maybe if I, and I still can't figure it Yeah, I like that. But that's easier I think when you are starting the problem, maybe it's to delegate to the i your, the roadmap to spurt or you know yeah they I can be not lying Yeah. The hallucinations. So if you don't have experience Yeah, yeah yeah. I agree with that. One of the final thoughts I had was and we were talking about your schedule Are you doing this by yourself What does it look like? The team, It's me and my wife, Sara. Yeah, Yeah. So, yeah. How, how's it working with your wife? I know you can say too many bad things. No, I've. It's been good. Yeah. Awesome. It's amazing, actually. Yeah. Because, for instance, it just. It just just feels good and also to get it's you. You get like quick feedback, you know? So because Sara she does the editing. Yeah. But she does more, she's the CEO of modern corporate because she, she handles the partners Nice. Yeah. But also, she gives me feedback So it's like social media, you know, training or later. Yeah. Yeah. So that's good because then, for instance, or tweet something and then she can see Yeah. So that's really good. And we are always in sync, okay. Because we are daily Yeah, yeah, that's fun. Yeah, I've, I started the YouTube and her sister, and it was more so in the fitness space and the editing and stuff like that, great fitness videos, and it was fun. And when we were in sync, because in our personal time and this was really something But when it was not like or have, let's say, conflicting opinions it would bleed into our regular life, the non-work life or the non YouTube life. And that was that was pretty challenging. At some point. Yeah, it is challenging. Yeah. But we are doing that I think for two Yeah. let's stop talking about the YouTube Yeah. So I think now we can switch back to you know, us Yeah, I like that a lot. Have you ever thought Because I. I'm going to show you. Actually, the episode I talked to Arlen and he does a lot of Python content creation, also released a lot of Rust videos And when he talked about his YouTube team, every time he wanted to do something new, when it comes to editing And he would bring something on, to help him with that aspect, And his team is now from a YouTube perspective, that's on camera that does the content but he has people that help him with courses that he creates, people automation, where he has scripts on his comment sections And then that goes into like a whole notion thing where he just and people think about those types Like it was very cool to hear about that. Yeah, we actually have a new member now, Okay, we call that Tony. Yeah. So Tony is like I actually it started as a joke in a video Like Tony was one of the characters that And then when, when opening, they also brought like action actions. So now you can basically create your API. Yeah. So I created a Google cloud function and you can use swagger swagger API scheme to to tell you how to communicate Okay. So for the for this suggestions, now you can go to the Tony on Jeopardy and you can say like, And then he was a reply. Okay, what is our suggestion? And you can just send a download Yeah. And he will get this and create a payload And he will send to my Google Perfect. Yeah. And that then processes And then I have a private jeopardy Okay, what are the suggestions Yeah. Then he will use the same swipe scheme for eBay's real time database Yeah. And it will just tell me okay. Do to log suggestions so far bringing more people I think first we can work Yeah that's cool. Like if you have 18 members. Yeah. And the YouTube channel So for instance, I working together with a company called Olympus to create a memo flashcard app like topics like Agile or JavaScript Nice. Yeah. So we did that project with this company. We did Open Source and we brought partners So I create content. The company developed the app. Yeah, I really we released app together. I brought audience to the app Yeah, right, exactly. And the audience learns exactly. Yeah. And also now Sara, me and Nathan Martin, We, we found a new company in Brazil So yeah, like we, but then it's not on the YouTube channel, and then we start this project. Really nice. Yeah, Yeah, that's cool. I like the part of automating whatever, teamwork you would need, And I think it's really smart to kind of because if you have two people and I get it, if you have, to expand with more people. It might disrupt the dynamic, to make one of your lives easier, Yeah. For all the solutions are those open source available to the public as well, or most of them, let's say, that memo app is open source. Yeah, Yeah. But I think that's the, Yeah, but I was, I was wondering for the, Best example where you were playing around Why didn't you open source I will. Yeah. Yeah. But it's just like I think it's like 40, It's barely anything. Yeah. Okay. I can, I can, I can create Yeah. But the entire content, five lines, five lives and 7 hours of content me coding. But this is private only for members Yeah. Okay. So then open source. And that would kind of be counter. Yeah, kind of. Yeah, I get that. Kuhlman Do you do members here? No, I don't I, from YouTube and they said you can free memberships when they first subscribe And I've thought about what I would do but I, I don't have any aspiration yet. Yeah. For me doing this already takes a lot of I'm having a blast with it, something nice for audiences In that way. I like it. Yeah. And sometimes people want to contribute Well, now maybe, maybe I'll pick Yeah, but we'll do that after. This has been a lot of fun, man. I, I've had a blast chatting with you. This is kind of what you expected Yeah, yeah, yeah. Because I. I bit more nervous that I was imagined, Good. Happy! Then I'm going to round it off here. Thank you so much for watching, everyone. I'm going to put all Lucas's socials Check him out. And with that being said, We'll see on the next level and beyond coding.