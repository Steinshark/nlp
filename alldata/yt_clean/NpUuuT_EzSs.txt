In this video, I'm gonna show you how I learned to you the exact path, learning resources, tools, and to go from a complete beginner to a self-taught and workflows that are now used by thousands of to, or maybe even get a job as a programmer if about two secret weapons that I use both to learn quickly as well, and one of those has even become me, and I think represents a pretty interesting not expert level coders, but I'll talk about that everything we're gonna cover here. I'm gonna try a jumping off point that you can use if you want how I picked my language, how I got started, the are completely free, by the way. We're gonna talk learning hacks I used to learn even faster, and to skip around this video all you like. I have gonna start off with a bit of a discussion on language because one of the most common questions what language should I start with? So personally, specifically on what's called backend programming, that happens sort of under the hood or behind the with the actual interfaces and controls that you think of backend coding kind of like designing or would be like designing the car body itself, but ejector seat button. So for example, my favorite complex project I built so far, is called Notion that essentially take an audio file like a lecture it to text, summarizes that text with AI into and then creates a brand new page in my Notion I can basically take notes with my voice. And is upload an audio file to Google Drive, and background. That's what I mean by backend coding. taking notes with my voice, is actually one of the the first place. I have wanted to be able to take long walks, and I've always wished I could just transcription later on that I could read through, then literally in the airport on the way to I came across a blog post in line for coffee by free tools to transcribe podcast episodes to text. I couldn't understand any of the code in it at come to learn enough JavaScript to understand that able to build my voice note-taking workflow. So JavaScript. There was another reason as well. I API is primarily use the JavaScript. That made the if you're confused about what language you you should start with JavaScript, but I am of inspiration. You should pick a language that to you personally, because at the end of the day, just saying, I want to learn how to code, it's a hammer and yeah, I can get a loose piece of two can teach you how to swing a hammer, but you're with something that you actually want to build. a computer, because once you have the project actually need for it. So once you understand the should pick, but you're also going to learn a lot having a goal in mind, having something that your attention because programming languages are and classes, and you kind of have to know which you're going to be very, very scatterbrained. when you have an end goal in mind, your brain is even if it's kind of boring in the moment or about. So it's going to be stickier. You're there are some other factors that go into language how competitive it is in the job market if the difficulty of learning language in general. website that goes through these considerations description below. But the really nice thing help you build something interesting in the short to learn a second language in the future, it's for that is that we can break programming down have language-specific sub-skills, so things maybe the frameworks or tools that you use to bigger category of universal programming working with functions, just the logical practice of hone your skills in this category with your second language and all you have to do is kind of language. So learning a new language, if you have way, way faster than learning your first language. learning resources that I use to learn JavaScript. for anybody who does want to learn JavaScript, interested in building web apps or doing backend is this JavaScript algorithms and data structures everything in this learning resources section camp implies, this is a completely free course. resource for anybody trying to learn JavaScript. of mini lessons in this course. There's a whole a bunch of different mini lessons. Each one of challenge. So you're immediately having to write we have understanding uninitialized variables on what it's trying to teach you. And then it a button where you can run tests and see if your So this immediately gets you writing code instead book. And I think that is the best way to learn If you can get your hands dirty and start coding and you're going to be a lot more motivated to learning resource that I want to recommend here, I course that I think are worth mentioning. First little test folder in my own programming editor. I run across a particularly interesting lesson, challenge myself to go do something different teaching me how to write a really basic for loop, et cetera, I would go into my editor and challenge of going one, two, three, four, five. What if I the even numbers in doing that is a great way to something that someone else has laid out for more ownership over and something that you care the Ikea effect where people have more affinity. Ikea because they had to actually go through the applied really successfully in video games like big reason people love notion is they get to build programming, you can use this concept to your concepts they're trying to teach you, remix them The second thing, and this is going to be kind of if I go back to the free code camp course, I lessons. Then I went through the ES6 module, which didn't go through this regular expressions module, because ES6 and basic JavaScript taught me enough at the time. I had two kind of main inspirations. to build a voice notes workflow. The other one my second channel, Thomas Frank explains. I wanted to build. I wanted to make an automated an API and bring them in automagically. And I felt that I had enough knowledge and I had building that. I also had enough knowledge look through kind of like reference resources having to go through a structured course. So one something that I do all the time is no matter what don't feel that you have to complete it 100% stuff. Instead, think of the educational resource first few modules to sort of just get your of the skill you're learning. But then if you get don't feel that you have to complete the entire inspiration carry you. Okay, so I went through the That is the main resource I would recommend here. which you can find over at JavaScript.info. So code camp course because where that one is a exercises and actual coding, this is the exact here. I think they'll probably have an article on a really well-written online free book that course isn't teaching you. So if you're going to kind of understand the concept that's teaching number one resource recommendation for going guide, which I'm going to cover next, but I think to read. It's a bit more fun to read. So consider especially JavaScript-focused tool belt. And I think makes up the trifecta of the ultimate is the MDN Web Docs. So these are basically like and for a lot of web technologies actually, but you can go through. I think you could actually but the real strength here is any sort of of language you're trying to understand, there website. So for example, there is a function array prototype map, they have a whole article they have parameters, and most importantly, to understand how to use a function like this, you I would recommend keeping this in particular as others that are worth mentioning. First, there is which I think is really, really fun. It's kind all of these videos are super entertaining to just subscribing to Fireship in general. He has And then the last learning resource I want to it's more of a general recommendation to kind of you feel the interest, just sort of like start I definitely did as I was watching through videos that my recommendations had more and more stuff like eating dinner or lunch or something, instead watch programming content on YouTube instead and was going through this Fireship course, my YouTube lots and lots of JavaScript related content on right here on what the heck is the event loop that while eating dinner one night. And now I have code works in JavaScript. I probably wouldn't have but it was just recommended to me and I watched now time to go into secret weapon number one in but probably not in the way that you think, people that I follow on Twitter or that end up in We have GitHub copilot, which uses chat GPT you're already a professional programmer, that But if you're trying to learn how to code, letting because you are not going to come to understand write it yourself. So what I did instead was I discover that it has two major strengths that the primarily kind of lack. The first one is that chat generating for you on the fly to your specific guide can't do that because it's written for you can say, Hey, I didn't quite understand that. bring this down to say like a 10th grade level, piece of history here where I was asking, what running the has function in it is more efficient context was, but here it basically generates a I could ask for more examples or more guidance The other thing that I've learned with chat GPT a second order incompetence, which are basically literally the stuff in a skill that you just if you prompt it right, chat GPT is really good So just to give you an example here, here's one of wrote myself and I said, here's a function I wrote array of objects with their data. You don't have This isn't a technical level video, but this this code? And then I said, for each suggested it as if I'm a student unaware of it. So I pasted then it gives me a whole list of suggestions here. error handling, separation of concerns. And a lot a prompt like this, I had no idea existed. For I didn't know what that was. And it turned out to as a programmer. And I'll just take a little of what I do with my programming is I write code So for example, if I want to get a Pokemon from I have to get the response. So if I wanted to which is one of the first things you learn about as as needed, reach out, get the response, then response, and do that a hundred times. When I basically write code that will reach out and it before it will send the next request. And just to on a platform called Pipe Dream, which spoilers is here. I wrote some code to show just how much serial programming, where we're just waiting iteration of our loop here. So I wrote some code and using concurrent code. And we can see here it took seven seconds or 7,000 milliseconds here. thing only took 530 milliseconds, just over half a by implementing concurrency. And again, I didn't as a concept until I asked that magic question. this code? And then please explain the suggested video in the future on Chat GBT. I've used it for up this section is still realize that Chat GBT can lean entirely on Chat GBT as a teaching tool. I get very familiar with the official documentation support tool that supports those official number two, which I've already showed you a little Dream. And it's kind of like Zapier or make.com. you to sort of hook up different tools together. something like Zapier is Pipe Dream makes it super support your workflows. And you can even bring in And the reason that I'm listing this as a secret build and ship really useful workflows incredibly and do it. One of the biggest blockers that kept was all the infrastructure and all the extra write. Traditionally, if you want to ship an but you also have to get servers. You have to about OAuth for APIs and all kinds of stuff like it's a platform that basically takes care of all very focused on backend programming, where that automate work between different tools, Pipe show you an example in this video, just to show here I have a very simple workflow set up, which exact same thing I talked about in the intro where and then we're transcribing it and sending the only no code components. So we have a trigger what's called temp storage. We're going to connect and then we're going to create a brand new page transcript. So here I've got that note-taking I go ahead and test this workflow right here, we And if I go back over to Notion, we see voice we have a full transcript of an audio file that I no code automation builder like Zapier or this transcript. It's a wall of text. There's just was broken up into paragraphs, but unfortunately option to do that. So that is where adding code the way we can do that in Pipedream is just by here. So node JS, if you don't know about it, is basically lets you run JavaScript outside of almost like a true backend language like PHP. that acts as glue to do extra stuff within our grab a hello world component right here. And I've paste directly into the step. Again, this is not to worry about what this code is doing or how it powerful library called natural, which can split some simple code here that is going to basically if I test this out, you can see what it does. we now have our transcript, but we have some So if I copy this path here and I come down into and I basically replace this page content call And once again, we get a success message. We can this brand new page. And would you look at that? an individual block inside of Notion. So that you kind of come up against the limits of no code says, &quot;Hey, write your own code, work around that does pretty much exactly what you want.&quot; So building no code workflows and then adding little, that I wanted. And over time, I got more and more my Notion voice notes automation actually works is entirely based on code. Nothing is using a no 2,500 lines of code over several months to make reason that I am listing Pipe Dream in this video, because it represents a concept that I think is is the removal of friction. Like I said before, I you have to do around coding, like authentication, Dream basically gave me a tool where I could just to write, and get something that actually worked enough momentum. It gave me a result that pushed I was coding entirely code-based scripts that to the point where I actually do understand things go ahead and turn this into a non-Pipe Dream based it, I'm now much better equipped to do that. And quite as quickly without an interim tool like that one of those secret weapons has become a pretty interesting side hustle opportunity. That you exactly why. So first and foremost, Pipe Dream not have that I think is super useful. And that Essentially I can create this, I can choose some when anyone clicks it, it's going to automatically account. So it's almost like a Notion template. program and a pretty darn good one at that because a paid account, the affiliate gets 33% of their also incredibly powerful on its free tier. So I've past few months. And I think only 1% of the people converted to a paid account. But just that 1% has generated $4,000 in commissions over the past single month. So it's this really cool thing build free software, share it with my audience, Thomas Frank Explains, and a small portion of the to paid accounts, maybe their teams, or just have some income that way without having to actually you might be getting an idea here because these in a way. They're just links that kind of help you been following me on Twitter, you might know selling paid Notion templates over on my website. with Pipe Dream. You could either build bespoke for Nebula. Or you could build workflow templates or Notion voice tasks template that I made. software. I don't have the capacity to do that for it. It's just one of my values. But I think of programming skill could really deliver value by selling them. So keep that in mind as a potential we are now going to move on to the next section, learning programming even faster. The first one is as you can. And I'm saying this explicitly because get caught up in tutorials and they get caught up but it's much more important that you actually go you can do to make the process of writing code remove friction from that process, you should feature Pipe Dream so prominently in this video spin up useful workflows really quickly where a hassle right now. I'm too busy. I'm not going on a Discord with some people and one person was Gathering card art into my Notion database.&quot; And I called the Scryfall API. I think I could whip up pull the cards this person wants from Scryfall just about 20 minutes using Pipe Dream, gave them I learned a whole bunch of cool code tricks along If I didn't have a tool like Pipe Dream, I might hour of time worth in that evening to do it. And I for this purpose and that's called Replit. So Pipe APIs. Replit is actually almost like a full coding of different languages. You can actually run that even embedded some Replit embeds in some of my run code in them. So definitely check that out allow you to spin up something very quickly. And of trying something out or starting a quick start building projects that get pretty sizable, project where you can write specific functions in kind of an example here. So once again, to jog called Notion Voice Notes and it is absolutely code files this long in normal modern projects one gigantic file here because I started on Pipe Pipe Dream app where you kind of have to have but still this is a gigantic project and it test something in the middle of the project, then and lengthy because it's sort of like handing you get a project around this size, maybe even a testing folder here. And this will essentially them out directly to make sure they work before I have a very small function that is going to take a specific criteria. So down here, just to point type. And if I run this code, I get an error and of quick iteration. Here I can immediately get in my giant project, I would have to go through a lot longer to get this exact error message. I accidentally forgot to put my quotation marks save the file. Let's run the code again. And do we we do see that we have our Pokemon objects sorted and fire. So again, give yourself a little test and you're going to tighten those feedback loops progress, learning hack number three is to build code snippets database. So I want to show you mine in my note taking system in Notion. I've got a I find myself using a snippet of code all the time this note. So I've got one here. This one's kind but I'm gonna come down here to show you this basically if I want to work with the Notion API, some specific code for creating an instance of API. I often forget how to actually type this out. syntax specifically for like libraries here is can have as a programmer, especially as AI starts much more important to understand the logic and I need to import the Notion SDK into pipe dream, paste it in, and then I'm gonna start coding from much more quickly and spend a lot less time trying I've done a million times before? It's all about now talk about some of my favorite programming make work a lot easier as well. The first one This is an editor, and there are a lot of editors Notepad++ if you're really old school, but VS code the most powerful out there. It's the one that I that you're working in, you can probably use VS different extensions that you can actually add to tool. So here in VS code, which is free, it's on my little extensions area and you can see that I extension that I would recommend installing. which is pretty easy. You can just go to the on your computer. And the reason I love Code really quickly. I've already shown it in this if I clear the output here in the output tab, if code and I can see the results and I can see any is the fastest way to just run a snippet of code, There's another extension that does a very similar instead of basically outputting the results actually creates like a mini browser window inside actually writing HTML around your JavaScript. So file, but we have this Pokemon sorting function little preview button right here, I can actually of a mini browser window. And the cool thing about I change the code. So let's say I come down here let's say name. Now we can see it is sorting by call here, now it's sorting in alphabetical order, quick way to iterate on your code, make changes extension that I highly recommend that is a great here. This will basically execute code directly So to show you an example of that, I've got this very simple. It's just doing a 99 loop here. Then the wall, 98, 97, et cetera. And you can see here, console log statement in the editor itself. This very simple example, just to drive it home, do console.log two times two, and you can see exactly what's happening. Maybe if we use a just teaches you in the moment what your code is move on to some other tools. I really like ESLint, adds what's called linting to your JavaScript. It errors, things like that. And then we also have just format your code with indentations and line tools beyond a VS code that I want to recommend macOS app that basically just has a huge toolbox you're programming. So for example, there's a text difference checker. There is like a regex really useful utilities that before I was using if you are in a Mac, check that out. If there is description. I'm not aware of one right now. This is just a website that allows you to send APIs. I use this all the time when I'm building send those requests without needing like a special then I also recommend, of course, GitHub. GitHub familiar with, or at least some kind of what's I can write code on my computer. I can commit it on GitHub, this is an example of a repo. I have my file. Just put an M in front of it for, I believe file. And for any given commit, I can literally of these lines here were added in this commit. with these lines here. So if there's like a screw need to understand what has changed about a piece really good for. And I would highly recommend how to use it if you are getting into programming. this video. And it's actually a tool that you earlier I showed you my code snippets page inside page is inside a greater system that I built for productivity system inside of Notion. A few years productivity apps. I had a note taking app. I had app for my team. And I eventually got to the one place. And when I found Notion, I started to would accomplish that goal inside of Notion. learning how to use the tool. And eventually I my notes, my goal tracking, my project management, is now inside of Notion inside of a system I favorite part of the system is the project manager I can see both the tasks for that project and find that super helpful because I'm often creating those notes. And in addition to just using this And since then, over 25,000 people have bought it. of testimonials from people who find it just as been watching this channel for quite a while that and sponsorships as our main source of income. able to build something that is both useful for since we're not just selling a Notion template. We where you can not only get answers to every single other people on how to improve your template, add overall productivity system and your workflow. And Ultimate Brain, now is actually the best time Black Friday sale. For the rest of this month, 50% off by going over to thomasjfrank.com/brain you might be asking yourself, why is Tom running It's a valid question. But in this instance, we that reason is we're actually building another even better, but also Notion better for anybody and it is going to be the ultimate web clipper tool that's going to help you capture screenshots, Basically, it is the idea and knowledge capture we want to build this sustainably. We and we don't want to take VC money. I actually but I think that if we took VC money, we would making decisions that weren't aligned with what to do is be able to use the products we already new tool and allow us to have a great free tier planning. So that is what Ultimate Brain allows us here because Ultimate Brain is already the best and Flylighter is going to basically make the you want to help us build this tool, you want the best organizational system for Notion, the to thomasjfrank.com/brain. And again, use that of any edition of the template. You can pick up you can also get the Ultimate Brain plus Creators system that my team and I use to manage all the on Twitter, on basically all the places where a serious content creator and you want to put out love Creators Companion as well. So once again, that code BlackFriday23 at checkout to get 50% off ad read over, because it's kind of an ad read, but I want to say thank you because not only do I but now it's so cool. I get to make a literal a way forward where we don't have to take VC money And that's all thanks to you. I've been putting watching it, then we wouldn't be able to do any products, if you've supported us on Nebula, if you this content and helped boost it in the algorithm, you. Seriously, I appreciate you so much. To wrap video, I have a couple of different resources if you want a project that kind of just like shoves it into something you can actually do, my want to go through. It's a two hour video, and literally all the resources I talked about in this then learning how to learn more efficiently video right there will help you with that as well.