Today I'm going to share with you a new function in Excel that allows you to create functions. A function to create functions. It's called the Lambda function. This is currently only This is a function that's both for Excel Because even if you don't end you need to know what they are because you'll probably end up I'm really curious to get your so comment below as you're watching this and let me know what you think. Personally, at first I and then I saw Recursive Lambdas. It changed everything. Now I'm no going to talk so much because you need to see this. (upbeat music) Now this is going to blow your mind. In this example, we have a list of names and the skills of each person. Now, unfortunately, we have mistakes here because some people put in office 365 where they should have put or Power Point with a space So here we have a list of before and after and we want to get this corrected. So notice that some of them are going to require multiple corrections because they have made mistakes What we want to do is go to each cell and loop it through the before, whenever it comes across a match, it should take the after version of it make the replacement and put So it's similar to a &quot;For we're going to do this with a formula, check this out. I've already written the Lambda for this. My function is called &quot;Mega Replace&quot;. So the moment I start to it needs the texts that I want to replace then it also needs the and the start of the after one. Now I going to fix this and the moment I press enter right here beside a table it's going to add this Now, when I do this press enter take a look at what's going to happen. Wow. Everything is replaced. Look at this, Officer 365 PowerPoint, Microsoft 365 PowerPoint The one where we had a lot of mistakes that was this month for example, it's all corrected. This is an example of a Recursive Lambda. Now we're going to get to the but let me show you a that's not recursive. So let's see in your workbook, you generally need to do a certain task which is to sort certain fields by the sum of another So for example, you by the sum of salary. Kind of like doing a sum ifs on your salaries by department and then sorting them just by department. Because notice that the sales so are the other departments. Now you can create a all you have to do is type I called mine &quot;Sort by Sum&quot;. This one just needs two arguments, the column that you want to sort, so let's say this and then the column that has your numbers that you want to do a sum ifs on and then you close bracket press enter. I have departments sorted And if you don't trust me, I'll do a sum ifs quickly. My sum range is this, my criteria range one is this and my criteria one is this and hash to make it spill and press enter, notice I have the correct sorting. And because this is the Lambda I can apply it to anything I want as long as it has a similar structure. So sort by position, I go to sort by sum and then I take the position column and then the salary column, close bracket press enter and I have my positions sorted by the sum of salary in descending order. So this is already been programmed that it always gives it And the reason I did that I might use often in my workbook. Now, how are this' set up? Well, let's cover the basics What are Lambdas to begin with? These are just functions that you create. These functions act like machines. Once you've created that machine you can put through it other ingredients and reuse it as often as you want. This means that you don't have to recreate So let's do an example here. Let's say you have this list of prices and I want to calculate So what would be the price To do that with a formula I just go B4 multiply it with one minus 30% close If this is a formula that I'm using a lot I could turn it into a machine this way I can reuse it with other similar ingredients. So how would this look as a Lambda? Well, the great thing with Lambdas is that you can create it directly It's a function. So I'd start with typing in Lambda and then you need So basically each argument is either a parameter or a calculation. Well, any where you see cell references, these are going to become your parameters. So here I'm just referencing B4, B4 is going to be a parameter and you can call this Now I'm not really creative with names and I don't like to waste so I usually just go So I'm going to call the parameter B4 which is my cell reference, A. This is my calculation. And I have to mention the So it's A comma so then I go to the next argument and it's always that the is your calculation. Anything before are your parameters. Now I've created my machine. I need to close the bracket So what happens when you press enter? Well, before you do that, just take a look to see if you're If you aren't yet, consider subscribing. Let's take a look, when I present her, I get an error. Why? Because I've just created the machine but I'm not putting anything through it. I need to put an ingredient in there. To test your machine on the grid here, you can do it by putting To do that at the end of your Lambda function open the bracket and do a cell reference, that's going to act like your parameter. So since I only have one parameter this B4 is going to become A and it's going to get Now, when I press enter, I get what I got back before. Now, obviously this formula right now is not so useful. It's better just to The advantage of machines like this, like the Lambda function is that you can give this a name and then you can reference And we're going to see this in a second but I want to show you a Lambda that has two parameters. So let's say instead of 30% you want this to be dynamic as well. So you can turn it into a parameter. I'm going to call this one B. Now because this machine I have to have them as So it's A comma B comma and last is my calculation. Okay, now, what's going to happen when I press enter? Let's check it out. It's no going to work. Why doesn't it work? Well, the machine needs A and B to work. I've only given it one thing, I've only given it A. So what is B? Well, it's 30%. So you can either do a cell reference or directly type it in. Now, when I pull this I get the same results. Okay, so how can I turn this into a name that I can reuse? Well, once you test that your you can copy it, it's actually this, copy Do just copy the machine part of it and then you go to name Name manager, you create a new name. You can call this anything you want, I'll do CalcDiscount and then paste in my Now, whenever you use I recommend you add in the comment what each parameter is used for. So something like A equals your value and B equals your discount, and okay. Here so now we have this as a Lambda. This means that whenever all we have to do is type in the name of our function which was CalcDiscount. And it needed two things which was this and our discount rate. I'm just going to put let's fix it. Close bracket press enter, I have nothing so it's 30. If I put 20%, now I have a 20% discount. This is something I can Now let's take a look I showed you before. How can we create that? Well, the first step to creating Lambdas is to try it out on the grid. This works for Lambdas All you have to do is figure then turn it into a and then give it a name in Name manager so you can reuse that In this case, we want to sort any column that we want by the sum of another column. So here, for example, I want or sort the position in descending order based on the sum of salary. So I'm going to pick I'll try to write up and then I'm going to So I'll start from the and work outwards. I need this sum ifs function. The sum range is this one, my criteria range, that's position here and the criteria itself well, it's the unique values Now, when I close and close my results are going to spill because it's giving me the Now because I don't want I actually want to get the position back. I can put this inside this sort by function. Sort by needs an array, the array is what you I only want to see position in the end. But not all positions, I want to see the unique positions by array is my sum ifs and I want to sort this So I need a minus one here, And I get my position Now we can quickly test that just to make sure it works. I'll do a quick sum ifs. This is my sum range, my criteria range and my criteria itself. I want it to spill so I'm going to use the hash, close bracket press enter, it works. Now that I've created my machine, I'm going to turn this into a Lambda. So let's go and start off with Lambda. First thing is to figure Well, that depends on how many I have two different references. It's either this one or this one. The C4 to C19 reference, that's where I have my labels and D4 to D19 that's So I'll be better this time, I'll go with A as my labels and for my numbers, so I need two parameters here. Now, the last argument and I have to replace every time I see a cell reference here, I have to replace it with my parameters. So this is going to become my A because C4 to C19 are my labels. So that's going to be A. I'm going to replace this also with A and this A as well. D4 to D19 that's going to I'm going to change it to &quot;num&quot;. My Lambda is done. Let's close the bracket press enter. Well, it's no going to work because I can test it to see once I pass the ingredients to it Is it going to work? I'll pass department this time and then comma and my numbers. I guess you have to respect the order of the parameters, when I close bracket and press enter I get Sales, Finance and Procurement. Okay, so this works. Now I can turn it into a name that I can reuse anywhere I want. So I'm going to press control C go to formulas, Name manager add a new name, call this &quot;sort by some&quot; and paste in our values. Now I can quickly add A equals labels and &quot;num&quot; equals numbers, and okay. Okay, so sort by some, is my new machine. So now I can use it anywhere. I want to sort division by Revenue. I'm going to go with sort by sum the machine needs two things, first is the column I want returned and then my numbers. Close bracket press I can use this anywhere Now the last one and the is the Recursive Lambdas. Now, because this video I'm no going to do this So I'm going to keep this as Okay, so tune in next week and let's talk about Recursive Lambdas. Okay, so that's an introduction to the new Excel Lambda function. Next week, I'm going to and we're going to do that Let me know what you think. Do you have the Beta channel? Are you able to test Lambdas? Let me know below. Now, I assume since you enjoy the content of the channel, so if you do, consider subscribing and I'm going to see (upbeat music)