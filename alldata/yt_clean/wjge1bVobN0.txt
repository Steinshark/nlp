Super Mario 64 is one of the most iconic video With Princess Peach trapped inside her own power stars to take down Bowser's barriers Over the years, clever players discovered other than collecting all those stars. Here's how a team of dedicated tool-assisted Super Mario 64 in 4 minutes and 20 seconds. This is the Super Mario 64 Tool-assisted speedrun Before we go on, if you don't know what the suggested video in the upper right corner. It will cover all of the basic things you Okay, so first, why does Mario go over to The answer is the result of two decades of The castle is divided into three levels: the To progress to a new section of the castle, the previous section. The basement key is found behind a star door To go upstairs, you need to get a second key to open the door, plus one extra to unlock You then need to collect 50 stars to open Bowser fight, you need to collect 70 stars. Otherwise, the door will still let you in, stage will be infinite. At first, the fastest known way to beat the but it was discovered that you could skip a trick we'll get to in a minute. This meant that the fastest way now involved skipping the upstairs section entirely. It was then found that you could bypass the appears after you've collected 15 stars, Next, it was found that you could skip the but it didn't help that much since you still Until, a new trick was found that let you lowered the star requirement to 1. Later, a variation of this trick let you skip star, and the star requirement was brought However, you still need to collect a key to the basement, and to get in the basement, Since these three castle levels are in separate major improvement on the speedrun route. But, it turns out that there is another way This underwater door leads directly into the to enter this door from the outside, he will any stars. The caveat is that Mario can't open doors To make this door accessible, the water needs means the underground can't be accessed However, there is a way to open a door underwater, Let's look at this step by step. Mario does a long jump, but immediately reverses This sets up a trick called backwards long-jumping, When Mario long jumps backwards, the game start of his jump. How much extra speed? Well, only half of his current negative speed, he was on the ground. As you can see, Mario quickly loses that speed By the way, here's a sense of scale. One unit of speed means that Mario will travel This is one unit of distance, which is roughly that Mario is human-sized. In this case, Mario moving at -15 speed means on each frame. However, if Mario is able to immediately land get another small bit of speed. This time, half of -23 speed, so he gets to If he does it again, he gets half of -33 this This quickly spirals out of control, as each speed by 1.5, minus a negligible speed loss. After a while, his speed is so large that entrance in a single frame. You might have noticed the four pauses here. This is called pause buffering, and it can Since Super Mario 64 runs at 30 frames per is 15 times per second. When pausing the game, Mario's universe the game still registers buttons being pressed Here's what happens. Mario jumps and the game is paused at the There is one frame needed to release Start, On the next frame, the game is still paused, On the frame after, the game is unpaused, This is what it looks like with the pausing As you can see, Mario is able to jump 30 times without actually pressing the A button that This helps generate all the speed required performed in, at the cost of a little bit You might also have noticed how Mario seems This is because at this point, the bridge However, by the time he gains enough speed than enough to overshoot the bridge in a single So, why doesn't he break out of it sooner? The reason is pretty simple. When processing Mario's movement, the game we'll call quartersteps. As Mario is moving, the game checks if there movement. As long as nothing is in the way, Mario will However, if he's about to move into a ceiling, stay in place. In other words, if Mario is about to move last valid quarterstep of his movement. Here's an example. On the first quarterstep, the game is trying up the underside of the bridge. Because Mario can't be inside of a ceiling, The same process happens again on the second, At the end of the frame, although Mario has But this interaction doesn't change his On the next frame, even though he has -2700 Each quarterstep, the game attempts to move Mario stays in place. This means that to break out of this spot speed so that his first quarterstep is past speed to cover 4 times that distance in a Another way to break out of this spot is to into a ceiling, or, in this case, to jump Finally, you may wonder how Mario got from in a single frame using a jump. First, because Mario has -6150 speed by now, frame horizontally. But what about vertically? How can a jump make Mario move down by nearly Well, to answer that, let's look at how When you press A, the game will make Mario That jump gives Mario an initial vertical subsequent frame until Mario lands, or until downwards. This initial speed varies depending on the For a single jump like the one used here, plus one quarter of his horizontal speed. For a double jump, that constant is 52 instead. This means that the faster Mario is moving, However, this formula also applies if Mario's If Mario has negative speed, then his initial If Mario has enough negative speed, his jumps This is called a negative jump. In this case, Mario's initial jump speed This negative vertical speed means that his instead of inside of it, so Mario moves unobstructed This puts him right on the loading zone that is normally accessible only when the water At this point, since Mario is underwater, At the start of each frame, before Mario starts with anything, like walls, water, or enemies. Once the game detects that he has entered surface, in a swimming state. However, the game handles the interaction with water, so the loading zone is triggered Here, Mario should have taken damage from wall, he resets the falling distance and avoids You may think that the movement that led us you would be correct. But because this next BLJ requires the elevator matters is that we get there on time. The reason why Mario is able to start a BLJ consider the momentum of a platform Mario Long-jumping from a platform moving upwards Mario will start moving up, but so will the After a frame, Mario moved up less than the the platform's floor and he lands from his These are the perfect conditions for a BLJ Behind this wall is out of bounds, so with Mario into a place that is out of bounds. This works mostly the same way as moving into he keeps building up speed. Here, the game is paused to change camera You can press R to switch between two camera Changing the camera setting enables you to hold the camera in place while it stays focused The reason for this change will make more The reason why this couldn't be done during course and camera options to be available, in a level, and while he's doing one of one of them. Now, what happens here? Well, this BLJ was much longer than the first If you thought -6154 speed was a lot, hold for this. Here, Mario keeps building up speed until With that amount of speed, he's actually I won't explain where exactly just yet, For now, let's just say Mario is very, very In fact, he's 3 million units away, or about What matters here is that the elevator Mario rotating. Because of an oversight in the game's code, can affect Mario for one extra frame after Now, a platform rotating by 2.8 degrees usually 3 million units of distance, and suddenly, In fact, they matter so much that in one frame, barrier, which, in this stage, doesn't kill the castle grounds, specifically here. The reason why this is useful is that Mario's and a sliding speed. The horizontal speed is used for most movement, Both speeds are set at the same value most Mario's horizontal speed without updating Being underwater is one of those scenarios. Therefore, While Mario is swimming around, the water, which, in this case, is 2,965,712. And this is where the magic happens. Okay. How does this part work? To answer that, we need to talk about... overflow Oh, and parallel universes. In Super Mario 64, Mario's position can However, when the game checks to see if Mario into an integer that can range from -32768 If Mario's position is beyond this range, around, which means that Mario's real position If Mario's floor detection position happens stand on, then he can stand on the ground. So, for all intents and purposes, there is units that Mario can sort of interact with. I say sort of, because only the floor detection objects or textures out there. These incomplete copies of the map are called This is a to scale diagram of parallel universes. As you can see, most of the space is out of This means that navigating PUs requires a But remember! When attempting to move Mario, the game divides For Mario to actually move into a PU, he needs first quarterstep is in a PU, which means of 4 PUs over. The speed required to perform a PU movement Small deviations to the syncing speed and will also move him relatively to the main Now, remember what happens if Mario's position invalid after the next one: he is moved up of his movement. This means that if the first quartersteps at some point, they stop lining up, Mario multiple of 4. So, with this in mind, where did Mario end Vanish Cap course? Well, it turns out that he was in a parallel Mario ends up here, 32 PUs away in each direction. But his floor detection position, which we'll moved. Since the game still detects him as being for one frame before the game detects that Thankfully, Mario only needs to be on the At this point, the elevator starts rotating a distance of 32 PUs, warping Mario down under and kicks him out of the stage. So now, with 2.9 million speed up his sleeve, into parallel universes. Let's go through it step by step to understand Unfortunately, like I said earlier, the camera That is because the N64 console crashes if Fixing the camera onto the main map gets around played back on a real console with no issues. So, to help visualizing everything, we'll which won't be very useful because the camera Mario while making PUs visible using a camera Mario's relative position is, or in other the PU relates to on a map, and finally, the on a map that spans PU distances. The PU map is intentionally not to scale to So, the first movement we see is Mario going movement of 2 PUs down and 11 to the right. At this point, his relative position is on actually about one million units away from From there, Mario pivots in place to adjust Here, Mario jumps. This has two major effects. The first one is actually quite simple. When moving at high speeds, Mario's single This means that if he has a horizontal speed of that speed and continue with 80 speed. Here, he goes from 2.9 million to 2.3 million, The second effect is a bit trickier. Remember the negative jump from earlier? Well, the same principle applies here: with to move down instead of up. However, we're not talking about -6000 speed What happens is that Mario inherits one quarter down. This is more than enough to reach a parallel So, what happens when Mario enters a vertical Well, it turns out things behave a bit differently When Mario's next quarterstep position is position, which we'll call his Y position, thousand, and it overflows, just like for Then, it tries to find the closest floor below One thing to note is that Mario's exact his feet, so his Y position is at the bottom To make it so Mario could climb stairs and 78 units above Mario's Y position. Once the game found the highest floor that height with Mario's Y position. But this time, Mario's real Y position is Obviously, Mario's real Y position is below above it. When the game runs into this scenario, it's position and the point 78 units above it, a flight of stairs. So, the game simply snaps Mario's Y position Since the floor's position is within the the VPU back onto the horizontal PU grid. This is called an overflow jump. It all happens inside of a single frame, so a VPU. In fact, it always happens inside of a single into a VPU, the speed needs to be large enough colliding with the ground, Mario's movement This is exactly what happens here. On this frame, Mario has -2648000 speed in Z direction, or 40-PU speed in the negative After losing 20% of his speed, he goes down down. This allows him to perform an overflow jump to the left, and 4 PUs down. The final part of this entire trick is moving Now, Mario is able to open the moat door if Unfortunately, the water in the moat extends at it from behind. However, if Mario manages to walk outside the door underwater, the interaction with check. The only way this can be done is by coming This would be simple if it wasn't for a First, Mario needs to be actually walking When going at PU speeds, this can be a bit When Mario moves between PUs, he will start to be where a floor is close enough to him. If the floor is below him, Mario will start Fortunately, the moat floor is large and flat, The second hurdle is a bit more complex. In short, while Mario is walking with PU speed, of his movement without encountering any collision, Here, unfortunately, Mario's speed and position In fact, because Mario is at position 390000 his speed is -1.5 million on the X axis and a single quarterstep to line up with the original Thankfully, there is a clever workaround. If, instead, the stick is left completely the conditions that cause the crash are reversed: complete all four quartersteps without encountering This means that Mario can move for a single This walk is also valid to trigger the door a neutral position, it's impossible to change This poses an interesting problem. Usually, navigating between PUs is done by to the exact value you want, at which point next intended position to be valid. However, in this case, you can't pivot Mario neutral. The only thing that can be changed between When the stick is neutral, Mario loses about small. So, for this strategy to work, this incredibly to have an angle so that his back is facing PU. His first quarterstep position needs to be move into it. On the next frame, because his speed changed position now needs to be in a valid spot, Therefore, on the first frame, Mario's first that is out of bounds, but that is within only in bounds, but also within this radius Such a scenario cannot possibly happen, right? Well, it turns out, it can happen. It doesn't look like it, but there is a of the moat door where there is no ground of bounds. The walls have hitboxes that fill most of wall here, the black space is out of bounds. By very carefully manipulating Mario's speed, a point out of bounds on one frame, and in But just how precise is that trick? This trick is so incredibly precise that simple to fine tune the values. To get around this limitation, the camera By pressing and releasing R at the waterfall, that alters ever so slightly the angle at away. This specific angle is perfect for the entire Do you see it? Okay, let me get closer. This is Mario's next intended position on he stays in his parallel universe. And that is Mario's new next intended position wall. So, Mario is able to move, and he is in the After being pushed by the wall, he ends up open it. And this is how the first Bowser fight is basement without It was that simple! Here, since Mario entered the door from the in the castle. This dark room is used during the door opening However, there are no walls, so once Mario You can also see the entering water interaction As soon as Mario enters water, he is instantly state. This is called dive grinding. The way it works is quite simple. Mario is on the very edge of the platform, a tiny amount. On the next frame, he is off the platform, he can dive. At the same time, the joystick is held towards The frame after he dives, he moves back on However, on the next frame, he slides off So, the cycle repeats and he can dive once Since diving gives Mario a flat 15 bonus speed, much faster than usual, saving a bit of time. Here, Mario performs a weird-looking wall This is called a glitchy wall kick, and here's When Mario collides with a wall hitbox, the perpendicular to the wall. If he walks into a corner, then he will be In that case, the game simply pushes Mario from the other. But in what order? You might think that doesn't matter, since Mario is never actually found inside one of Well, it actually does matter. The game has a variable in memory that references with, but it only has one. As a result, the second wall's reference wall will be unreferenced. This is why, in every corner between two walls, it was processed first and the reference was The other wall behaves as normal, and Mario Now, the way a glitchy wall kick happens requires Because this wall is unreferenced, if Mario he won't be able to wall kick at all, because this wall instead, and for a wall kick to degrees of the wall he wants to wall kick What needs to happen is that Mario needs to of his movement, and then hit the corner on This can happen if Mario comes at the wall though he can wall kick off of the wall, his wall. So, in this case, Mario hits the wall on his The game pushes him back, but he was also At this point, this is the referenced wall, he will bonk on it on the next frame, or be On the next quarterstep, the same thing happens, Eventually, on the last quarterstep, Mario and the collision is handled with this wall Now, at this point, Mario is already set to since then, the referenced wall changed. So, he is able to wall kick, but off the other When wall kicking, the wall acts like a mirror, you hit it with. This is why Mario is able to wall kick, yet Here, Mario performs a different type of BLJ The way it happens is similar to dive grinding. Since Mario's angle is every so slightly direction is slightly towards the higher step, lands on the higher step, but on the next to the lower step where he jumps again. This cycle repeats itself every two frames, so that none of his quartersteps collide with He also lands on the fence for one frame, This allows Mario to change his angle by a over where he's headed. The bounce on the ground also allows him to Sea entrance while sliding backwards, which a bit of time. He also completely bypassed the Dire Dire This is simply because the loading trigger frame, so with Mario's speed being -386 positioning, he's able to skip over the Here, Mario suddenly warps up the pole. How is this possible? Well, contrary to popular belief, the pole trick. It actually happens because Mario can hang The game tracks when Mario is under a hangable If Mario hits an adjacent lower ceiling, the because he is under a hangable ceiling, it on to that ceiling, because it expects the to be the same. So, Mario is placed at the hangable ceiling, saving precious time. Here, Mario uses another elevator to BLJ and In this case, about 657 thousand. He uses that amount of speed to perform an over, on this platform. This platform is conveniently at the same to the Bowser fight. So, after adjusting his angle to head back on the loading zone, entering the Bowser fight This BLJ looks pretty cool, but it's not It helps position Mario closer to the bomb, The camera is set back to Mario cam to save make it lag. This is actually slower on emulator, but the category's TASes on console and optimize With this key in hand, Mario can enter the Unfortunately, it looks like there is no way there is no other way to enter the upstairs Unless a new major glitch is found, this key from saving Peach empty-handed. Interestingly, the basement door can be opened the 30-star door can't, so Mario is stuck But he can enter Dire Dire Docks and then Okay, let's go through this sequence step We're past all the really complicated stuff This spiral staircase has a weird property. The floor up here is very close to the ceiling When Mario is close enough to a ledge, he This interaction takes priority over the collision ceiling entirely. This is also possible to do in the stairs this corner lets Mario grab the edge of the When pulling himself up, Mario hits the wall. This cancels the animation of Mario pulling Now, Mario sets up yet another BLJ in the This time, he only reaches about 700 speed, with careful movement. After hitting this wall, he uses C-up, which In first person mode while against a wall, the wall. Since he still has backwards speed, he shoots The first person mode is then cancelled on Mario also kicks up the stairs. Kicking allows Mario to be airborne without Because he needs to keep as much speed as is much more efficient. Next, Mario actually stops at the star door. The textbox that tells him he doesn't have speed coming into it is preserved and his gaining control. He does still turn around to face the door When gaining control, Mario crouches, which In this state, sliding speed is used. Now, there is a property of sliding speed earlier. Sliding speed is actually a vector with a movement. Since he is now facing the door, immediately is pointing this way because that's the speed is pointing that way, because he has This means that entering a sliding state turns momentum. Using first person mode cancels that sliding It puts Mario in a different state, called However, he can punch. Punching brings its own set of problems, though. Midway through his punch, Mario hits a wall. Normally, if Mario punches a wall, he'll The reason why it doesn't happen here is talked about already, all coming together When Mario is punching, the game takes a point is a wall within 5 units of it. If Mario is facing anywhere within about 25 wall and Mario will punch it. However, everything involved with collisions Here's how the process goes, and why Mario's of him. First, the game checks if Mario is colliding He isn't, so nothing happens. Then, the game checks if Mario's punch is Since Mario is still a bit away from the wall, Next, the first quarterstep of movement happens, up here. But this situation is a bit more complex. You see, Mario isn't actually against a walls forming an obtuse angle. On top of that, the two walls happen to be So, first, wall 1 is processed, but Mario Then, wall 2 is processed, and Mario gets But because his angle is off by a small amount, its hitbox. But remember! Wall 1 was already processed for this quarterstep, On the next quarterstep, the same process He gets pushed back by wall 2, and inches Repeat this over all 4 quartersteps, and by of wall 1. Now, at the beginning of the next frame, the check. This time, the game detects that Mario is, him out before anything else happens. And only then, Mario's punch check is made, was pushed away from wall 2, and his new position The exact same process is repeated for every he's right in front of it, he never hits speed. Now, Mario needs to climb up the room to reach To do that, he does a series of special wall When Mario bonks on a wall, he has 5 frames His speed is also set to -16 on the next frame If Mario times his wall kick perfectly on wall, he will be able to wall kick off of When that happens, he gets to keep whatever This is called a first frame wall kick, or However, when Mario jumps at the wall, he A was pressed to jump from the ground, it can be pressed again for the wall kick. This causes Mario to lose all of his precious This is why the initial wall kick is pause By using the pause, Mario is able to jump problem. After that, every subsequent wall kick is and jump up the room. That speed is enough to clip past the 70 star Now, you may remember that Mario's vertical when he does a single or a double jump. This is why he can jump up so high here: because + one quarter of 315, or 130 vertical speed, However, he does lose 20% of his forward speed So, how can he go up the supposedly infinite Well, the way the infinite stairs work in In fact, the stairs are never infinite. What happens is that if you have fewer than warps Mario back by 410 units. Because of the way the stairs and the walls Mario didn't move, an illusion that is easily or a camera hack. This invisible barrier is right here. As you can see, it's not very big. It's only 154 units thick. So with a speed of 253 now, Mario is able and beyond it on the next. And this is how he can reach the entrance And that's it! Everything else beyond this point, you should I'll let the rest of this TAS play without There's gonna be a few annotations to clarify everything you need to understand the rest. And there you have it: Super Mario 64 beaten sorts of crazy tricks. I hope that with this knowledge, you can now this tool-assisted speedrun, and I hope that game works. Thanks for watching!