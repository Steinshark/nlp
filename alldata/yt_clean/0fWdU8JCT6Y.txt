Unity, as a game engine, is going downhill. paywalls, just brings more bugs and division into developer, I knew I had to switch to a Discord. Okay, so I don't actually dislike Unity, and but that doesn't mean you can't make has an API that allows you to create like messages and reactions, as input, and thinking about what I could create with it hit me. Just about any game that could into a Discord bot. And, a few months ago Science class, I actually made a game console. It's a clone of a really fun have to push boxes around to get them to in a few days, so it's pretty simple, but infinite levels with somewhat of a you just type commands, so I decided I bot using Discord's API. And, to make only 24 hours to do it, since... you know, arbitrary deadline. The code is written with Discord's Bot API in Java. I found this called JDA, which literally just that it was time to get started. Before I had to... you know, learn how to use the API pretty helpful: an article by Oliy setting up and running a bot, as well as video series by techtoolbox. I'll leave description. And, after a little while, I commands and return messages. Basically, with JDA you can create methods that run when certain events happen, such as the method you can access the content of the message contains a certain keyword or And this was pretty much all I needed to started off by copying all the classes project. None of the game logic needed to change the way the game handled user the updated grid. The original game was certain points to wait for the user to bot, since I'll probably have multiple having each one constantly running and the best approach. So, basically, I turned would run only when a command is prefix, which for me is just an used is pass into the method in a string existing code responds to it accordingly. grid and game information to the console, channel that the bot received the to play the game. Just type the play Okay, so the problem is that my code returns unicode characters that my compiler isn't encoding properly. I tried changing my IDE's encoding work, so I decided to just ignore the instead of unicode characters. This is probably ended up being the best design player character a flushed emoji. Anyways, the commands work properly and you can there are obviously improvements that commands with prefixes to do something and tedious to play. Since I was already the game, I figured implementing that reaction commands work is that, as soon reactions to it. And, at the same time, the adds a reaction, and will perform a user's perspective, all they're doing is happen, typing a command. So, in my code, whenever itself, up, and down arrows, and this reset button. from the user, it creates a new empty the text command associated with the the newly created string. Everything is first try, but let's test it just to make sure. Oh fri*k... I forgot to check who was adding the reaction before starting the command, so the bot was responding to its own reactions, which creates an also doing some unrelated unicode the game with reaction commands. I also But there are two problems with be fixed. The bot adds reactions to every be on the message that has the updated reactions are being slowly added to the a way to speed up the process. To fix the message in a string called gameText message is received contents of the message are equal to gameText. Now the reactions are only added to the correct messages, but sadly there issue. I don't think there's a way of message with JDA, so you kind of just kept reaction commands as an option, but natural way of controlling the game. make playing feel more natural was the commands, but, in the Discord bot, this each command starts with a prefix. So, I like !play and !stop, but get rid of that the user will be frequently checks user input and is updated when with its prefix. I could just make the the bot receives any message but that's unnecessary, and probably the worst idea an ArrayList of strings of all valid if the first word of a user's message is control the game by just typing WASD or way to play... well, if you're a gamer, at how UGLY this is! Like, no offense or background and basic text formatting is Ew! So, the first thing I did to improve embeds, instead of normal disgusting is, it's just a nicely formatted message can have a title, text fields, and lots of takes a title. description. and footer as it as a message. And then, in my game a big string with the current level, call my sendEmbed() method with the description, and the controls as the looking a lot better. I also created an But, this background is still ugly, so I the walls random, with a new color being so myself, the game is looking pretty rid of the default skin. I mean, I mean-- icon for the bot in GIMP. I think it turned out pretty well. Now, we're pretty much done, but there's one Right now, if multiple users try to use since the bot applies the commands to a game is a class though, I can just create HashMaps to link them to users. So, I dictionary in something like C# or got rid of my singular game object, and, I create a new game and map it to the instead of calling methods on the old, game mapped to the user who sent the multiple users can use the bot at once HashMaps are so OP. But, since the current color is stored in the bot object, rather than each game object, the color of the game is the same for all users, but this wasn't a big problem. To color was stored and assigned. walls turned into flushed emojis. I think it's definitely an intended feature. It's at a little before 2 AM, Sokobot was didn't really matter. I did add a few the 24 hours had passed, like this !info some other details about the bot, as well external text file so I can distribute edgy hackers. But, those things are it's okay. If you want to test out the bot GitHub repository will be in the latest .jar file, create a bot on bot token and paste it into a file named the .jar. Then, just run the .jar file and, should turn online. If enough people are with a service like Heroku in the future, click, without having to host it yourself. enjoyed watching me try to use Discord any feedback or suggestions for future we hit 1,000 subs a few days ago, say thanks to everyone who's subscribed much for watching, and I'll see you in