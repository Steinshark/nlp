Hi guys, welcome to this interesting So we're going to start What is Javascript and the different data types Once you understand in JavaScript will go to The Operators and Loops in JavaScript. Once you understand in JavaScript will look and finally end this session and objects. In the section into the browser object model So today we have who's going to take So over to you Gauri. Hi all, I welcome each what is Javascript. We just need to know what A web app is something that is available So whenever we say what comes to our mind is we open a browser and hit what gets on the screen that is hosted on a browser that is shown by the browser This webpage shows us the data that we want to see from This is your browser. It will show you the web page from where the data from something called less most of the time it comes So both of them keep talking whatever coding that we do It is called as server-side that we do on this browser side. It is called as client-side a client-side scripting language I'd scripting language. So what we are learning is on We know that where we how we will write a JavaScript What do we require is what is an HTML file? Ultimately we have to see and a browser understands only markup languages HTML is which stands for So this browser of yours has inside, which reads an HTML file. Now, how do we write this HTML We just have to open the file as per the rules that are defined OK with an extension as So why are we learning because HTML file is the host If we want to place We need to have an HTML file because without HTML file we or other we cannot see what is happening It's like a host So our JavaScript code which we will be learning So we have in short understood that we are now on the client side programming. Secondly we want to type in the code that is We need to have an HTML5. So let's start creating for that simplest thing is and keep typing the HTML code. How do you write an HTML code in HTML code is always Sticks Carlos HTML tag every tag and an end tag and whatever you write So basically an HTML tag and body head is that child which concentrates on the title or how the header like on the browser whereas body is that child with concentrates that we will see on the browser. We will have to save this file Let's create one folder. In this folder, let's save this file as static dot HTML make sure because we have So we'll just concentrate that. I have changed the extension If you notice the icon to the default browser it is that this is an HTML file. So if I double click this file if you want to open it you can say right click open with Google Chrome that you want or that you want to choose If you keep writing that will be shown on the browser what all elements Are you can see a button like input box. You can have a paragraph. Etc so there are that we can write So when I save this file and try I will see a lot of things. I have seen an input. I can see a button This is editable and this that I can see. So these are all the elements which can be rendered Now whenever I create of the time a static file. What do you mean by studying? Whatever I add on to this HTML file will be shown There is nothing extra that will work that cannot happen if I have a plain HTML file of JavaScript comes whenever We add that Dynamic - Animal file so as you can see This is what I have written. I want to write something like my name is ABC so here I to this HTML file then only So that is why I call Whatever I add that will be rendered and that's why we want to add That is the use of JavaScript. Let's see. What is Javascript without JavaScript is also called So as I told you then and first three modules complete vanilla JavaScript which is case It is a programming language It is called as in making interactive web pages to the web page. How is it interpreted? So it is interpreted Machine that is on the browser. It is used as for HTML Pages this particular language as some operations are done Let me give you an example. Now. If you have a web page and gives you the summation If you have this data you need not go to the server that please add and give me the result back because JavaScript is which can take up these two and show the result So that's how you The burden since JavaScript and Loops things which are possible to be worked You can do all those tasks Thereby reducing the load on the It was first developed in 1995. But the Virgin as 1.0 then in 1997 1.2 1998 one point We started calling it as This JavaScript was supported but nowadays it is supported by the browsers initially. It was supported by if you can see Netscape like Microsoft Internet Explorer as you can see that till 1999. It was like only two browsers But now all the browser's and to use the best browser or what is called as JavaScript coding as it helps us with Okay, we will see that the browser has now as you can see that there is Word in this JavaScript and many a times we okay, they are But no, that's not the way they both are Java is an object oriented It is a language which is developed to build It has some part like say jsps which will run Okay, but doesn't mean that it is a purely You can use it on both the sides whereas JavaScript and only on the browser for Java program to run it and then it is executed. Whereas for JavaScript do the compilation happens, but We will see what exactly or how the compiler but it is always said that it is just is basically interpreted. There is no lag like Three become by literally and then it will be executed. No, it is like just-in-time and the execution There is something called and for JavaScript it so we will see this static when we will look into something or less data types Where can we Well, we know that it can be used on the client-side scripting in case you really don't need and you can handle all the logic at client side then which are completely For example, some gaming applications So nowadays JavaScript and it can be used So let's get started up How do we write the script or how do Embed a script We have created we One is internal embedding Let's see both the ways Okay, we have these tags that is one more tag, which is available which helps us to invade and the tag name is script. And we can write Within These two tags. So whenever we write any code it is called as that happens before riding Let us understand basics as we write something Basically what we need to do. Why do we have this user interface user so that the user so you will get that is what is the main aim So we will be so that the user will be able to add the data with ease to add some radio Then we can add then we can have So all this elements we can just that we have in our HTML page. When we add all what we get is nothing but a big bucket this bucket buttons some our input type some So these are called as and this big bucket as document to be technical that is available in JavaScript I can access all the elements that are there That is the object has which help us to reach The methods are like get element by ID can use get elements. Bye guys, ning are there is by class name. So there are many many methods which will give us an access Now if we want to make use of the methods like then we should make sure that we give some identification So when we write that they have some ID We will also have to make sure that if we want by using then the ID should be unique. I cannot use the same ID If we want to use something need to add the class name here. So as many attributes I I can access these elements and after accessing on this element. I can work around on its look and feel I can work around I can work around on anything like I could conquer So to conquer or to get this element which are available I as a developer, I don't create It is Javascript, which prepares this document We just have to straight is I've already made So let's try to see how do we use one the object document say If you just see the naming is using camel casing that is the first And the next letter So I want to access this particular paragraph So if I want to use I would give it that I want to get once I got this element. I want to change that is written so This is a static paragraph. I want to change it So I'm going to change and the name of the So that's what I'm doing. What am I doing? Is that I am taking and I'm changing it value. So previously it Now. I want to change it Now, where have I placed If you can see the script tag that I have added that is where body ends up. Why have I placed I will explain you the reason So let me save this file file and a script part script path This is how we add within the script part. I have written only what am I doing? Is that using the document I get the element and changing its inner HTML. Let me see how it works. Can you see that the value of that paragraph is if I want to use what do I have to do? I will have to copy whatever is in this script tag copy And save this file and how do I do that? Dot J's. I put an extension dot Chase If I open it I'll be able to see that the icon of this which makes me sure that okay. This is a JavaScript type of a file and now these two files link this file. I will have to keep as is and just write from where I am using it. Now. I have returned with a complete extension. That is dynamic Chase. I want to be double sure then and paste it here. This is the file and in HTML file in which Both of them are residing I can directly write But if this file is residing I will have to keep I Give its absolute path So let me see after giving will make code work as expected. Yes, it does. So this is how we can add the JavaScript path. Now the question remains like why did I write at the bottom of the file? If you just want what you can do is right click when you choose inspect. Okay, you'll get So I'm using currently Google Chrome if anybody they will see all these values. So elements will show that are present on this deck. So there is something like one which is there give within Okay, then two paragraphs that is what is there So, let me see have Yes, I've kept So if I just refresh it, I have an input box. I have a paragraph. I have another paragraph and that is what I have Okay. So if I just want to see any in the elements tag. What is sources all about externally you will be able that are attached here. Currently. I have a Javascript file which is attached that in the sources tab. What is this console tag all We need to actually know how to test our bugs in it that we have done. Any other language has standard For example, if we use Java we like a command prompt for any other language. Most of the times for browser to see our console every browser has and using this inspect element Okay our console tab, which is there that will help So this is a console tab Now if I move the script tag maybe somewhere in the head you will see that whatever I have written not get executed why You can see that I Just go to the console. You will see the error. The error is clear that is Javascript called as innerhtml of null so there is nothing and I have to sit why this is happen as you write your HTML page on the browser browsers So the control comes here. Okay, it reaches head. It comes to script so it starts executing the script in the meanwhile it and rendering all the elements is getting executed. It may happen that your element since your element is Code will definitely because there won't be That is why make sure that you write a script so that whenever the complete only a script will work and you can see that your script So that's what we have done. We just got started So that's where you can see that how we have added a script within the body tag Even when the HTML gets over you can write how to add it internally to internally add you just and within that all if you want to then you write an attribute that is Sr C stands for Souls you can write the name that is the Javascript file that of the HTML file. If it doesn't then Let's just see a beautiful example the name and in a paragraph what are the steps you have to in HTML code make sure that you save your file or HTM create a one a Javascript file save it and Link it in your HTML code in the script tag. Okay check that your HTML and JavaScript files are located as you have just of the Javascript file Now open and check the output that you have created. So that's where we Like we're what is Javascript. Where is it placed? And how do I write a JavaScript? Let's move on to the next part which is data types There is something that is ready made which is colors console. This console object helps on the console and console is what if you just inspect you will be able to see So if you want to see but on Console just to check whether your logic You can use make use as console Now using you can make use which are available Like there's notepad There is Sublime Text which I'm using currently so And what is the advantage that you can get some type so you may not type For example, if I want to now write my HTML so I create Okay, the name of the folder and within the said Iraq, I try to create that I'd say this file So I just create say our first Dot HTML file can you see the magic? It has already returned which is like a basic thing PSI me waste my time so it is help me. It has done They the code forwarding is So that is why I and every one of you Okay that will help So let's try to see let's create Okay with its sauce Okay and data. Data types in JavaScript, so let's create one data in the same folder. See this file As I said Eureka right? Click on the folder to save Learning data types that is Javascript language as I told you if you want to see anything on You should see some output kind of inspiration So that is why I have introduced Okay, which is a ready-made and using this object. We can type in anything If you want to type using a JavaScript you that is document and to write something that is used is Okay. So let's use both these so when I say console dot So within this log that hello everyone So I've written a JavaScript do the HTML file has Yes, it has a script Let's try to run this file. Let's just open this folder. So you can see that there is This is there is in the body tag. I will not be able to see if I right click and inspect I can see that whatever I have I can see it here. Okay, if I want to write something on this browser it would be something like this. Belson every statement with a semicolon. Let me run this. Can you see that? I have written it on to the browser now moving ahead There are around which are present in JavaScript. They are number Boolean string. Then there is object. Okay, and there are So this type 4 type 5 they are different types, but they are considered as us object undefined and not a number are which are present in JavaScript. How do we write can be considered as containers or name for a Caleb block of memory now as which has a strict type. For example, if you take up Java or C++ that should contain only that I declare that variable in t a so now variable a but it is not the You will always Mark any variable as of the type So it's like a general thing a bucket whatever value you add that type of bucket will become if you assign to this variable of the type number. If you add it a string it if you add it something of the type of object It will be of the type array You should follow some rules. What are the rules that you cannot use specific keyword. That is something like so all these keywords have There is some logic there is if you use such keyboard. So you cannot name your variable that are existing You cannot start with a digit neither. Can you use special characters like while naming your variable with an alphabet and then you can follow or an underscore you or lowercase alphabets. So here are some it is something like some or you can have first underscore Just one invalid is you You cannot use a keyword a special character Okay. So these are some of the rules So let's see all these types Let me remove this code or you can just create Let's see what that I have created. This is called as a declaration. I haven't initialized I haven't given it any value. Let us see what value If I do not initialize it to see that you can just long within which in this value copy paste and can you see that by default? It gets the value That is why it is said that there is undefined is to the same variable. Okay, which is not of Let me add this General like what type of variable that what type of variable or general variable is is called as type of so this operator. Okay will tell you whatever is What is its type? Okay, so can you see if I gave this General? Okay a string value Can we see that the type if I gave it a string value Let me see. What is the type So we have covered up Let's try giving Something likes it true. Let us see what value now becomes Boolean types. It is like the paint Okay, it'll be if I want to give it like say null or an early So for all these three types, the type will be always what type it becomes it becomes so let's start that is arrays Okay. We have a syntax which is shown here when you write so space is equal to and you initialize it That means it is of the type array in JavaScript is treated as There are two ways either you can initialize or you can Make use of something after the word new you have and then it is followed by brackets in which you will be or whatever elements What is an array if you just see this For example, this is your memory and if I try to write which is equal to 9 then or a small place which will hold the value 9 few a will be pointing Now, for example, if you want to add how would you go about it? You will create a variable marks of student to marks so they'll be so many variables So in such a scenario We that will hold marks But using array this problem is solved using Okay, sequentially having Like if you want to store and they'll be ten elements. If you want to store then five elements Let's just create an array Now, how do we declare We can make use of something to square brackets. We can add all This is one way of declaring of declaring an array is that you can make use of the keyword new with a capital A followed and within the bracket you can keep all the values so This is the use of it is that memory is allocated can access all the marks and individually also you how do you do that? Every element in and index of the array So if you have added then the last index that is 4 it always if you want to individually how do you do that? Is that you write a of 0 if you want to access you will write a of 1 if you want to access It is a of to if you want to access It will be a of three. This is how you can individually So let's try to create Let's make this cendol variable Alexei what type You can notice it again gives if you initialize any variable it will be of the type We can also check what is the length So whenever we have we can get its length by using Let's see. What is the length of this? You can check if you cross check 1 2 3 4 will have from 0 1 2 &amp; 3. So these were some that are present in JavaScript which we need to Okay. Now type conversions we have called as plus now. This operator is really magical or what you can call it as to this operator if you give on both the sides. Numbers, so if you it will add both the numbers Let's just check it. So if you want to say two what is the output that I It is console. You can see that it if you give on both the side of this plus operator See High plus say they're It will give you So definitely this type what it gives back is This is a string type and when both the operands on then it concatenates the string. So what if I give one number In this case. Let me see how it works it again acts So that is what is this magical Operator as which is also our topic or less type where an entity of one data type There are two ways in which in JavaScript there something We're in integers and back automatically and that is what we do Now, for example, if we have which is initialized to Phi so it's type of will always to this number. If I add one more number of the type integer or a number if I add 5 as the value, but with coated value that means I'm adding a string Become a string type It will change its type. So based on what value are you that type will automatically Okay, if you make use what is a prompt which prompts you to write in the data so like that there which is a global function Okay, if you ride that prompt, okay, your browser will actually Let's try doing this. See if I just see prompt. Enter some value. Can you see that it is asking me So it is prompting me So whatever value I three or I may add a string or I Whatever value I add Okay is of the type I add a number it is So if I take whatever value and then I want to see So I type in type of num1. Let us see what happens. It asks me. So I write for Let me rewrite it the number four so you can see So whatever I write by default taken as string. So if it is a string, okay, and then using my value console DOT log. I think this number one. Okay, and I want to add So whatever value you add But will this work because now one is and we know that has one string type it converts and it will just concatenate instead of adding So for that matter, I will have to convert or float for that matter. So there are some methods us parse in to pass if you pass a string it So let us see what is I have to and I will get But if I had not done then I would have got to nine. I still value. So this is what problem which is available. Call us alert, which also gives Hi. This is n alert. So you don't see the difference from will probably ask Whereas alert will just So these are which are available we have completed data types in JavaScript and let's part of the JavaScript. So there are available in JavaScript are pathetic operator spring operator comparison and Boolean operators up string operator that is We have also seen like plus so similarly your - multiplication division modulus increment decrement It's just see it's practical. Let's create one And name it We want to link this particular so I can add as Okay, so that is just So So both the scripts The script file will run then the script file We have already tested So let us commend this file So once we comment, what do you mean by commenting in the browser will ignore It is angular bracket and it with - - an angular bracket to comment can use two slashes. So this is a comment. So let's learn this art Simple operators are there for example 2 plus 3 will add We'll subtract. Okay, so it's simple so we can have something or we can have you know, variable difference Okay, and then we That's different. So whatever is the value in If you want to see you just can say Okay, and log that product. I want to see division then you if you want and just see if I divide by and just write it on the log to see You can just say that mod is equal for so modulus is something So what does has is difference? So let's just try Here we are writing the product. So let us know Here we are riding. What is the output And here we will be checking Let's see the output of this. So the difference is one product and modulus has one what is incrementing Like + + says we have seen okay, if you just want So what you can do plus plus it is as good like this difference is equal of difference plus 1 if I do it different - - then it is as good as to whatever is the current value So these are your increment So now you're difference value has already If you want to test it. You can just run this that previously it was one It has got incremented by 1. So those were your art Matic operators plus okay and incrementing operators. This was a string operator, Let's move on that is assignment operator checked equal to so whenever we and we just say equal to that that is this a will hold What is this plus n equal to it says add a sign and then assign that newer value And assign so you and then assign the value Let us see the examples of that. Let's just commend these lines because this execution can comment multiple line Okay. So all these lines are now I want to comment Let us now see the next type of operators which are So for example, if I have a variable say of variable I can do plus equal to eight variable S So it is as good as your writing s is equal to whatever is So, let's see. What is the output Let me run this. Can you see that the output to 17 similarly? If you do s minus So the value should be of multiplication and division So these were some of the assignment operator and and some Advanced assignment to the next operator. That is comparison operators. Now what I mean or why do we require many a times we need to compare for example, if these two variables are equal if these two things are not equal then I So that's College logic building And whenever you build a logic, you need to compare up a logic the main statement that we usually use is which will be covered So let me introduce that if-else Loop what our comparison operators and move on to the next Call us comparison operators. What does an if Loop? Okay, how do we if Loop is see If you want to write a logic say when will you drive if you have if the road is for Lane, then I will drive I will not drive. So if this is your logic, okay, and that's what you want If you want to do that. Okay, that's the simplest way of doing it by using if else statement has syntax, like if and in the bracket, If this condition is true, then whatever statements in this brace bracket if the condition is false in this brace bracket So this condition has to now be or false and how will you if you make use of something and the comparison operators, which are available to not equal to then if it is greater All these operators which is of the type Boolean. For example, I can have something that is variable S 2 so I want to say and S 2 are equal then if they're not equal If I want to write that is Javascript code. I will say s equal to equal if both of them are equal Okay that yes S1 is equal to S2. This is what you if it is not equal. Then you will be printing that. Yes, both of them are whether they are not equal. The comparison operator and an equal to sign. So I get the output as s Why are they not equal because once value is 9 so that is why So it comes to this else part if I write here the condition as not equal to and I if part this is else part. And run this I would get because what I'm testing here is if they are not equal If they're equal to then within this equal to equal or less triple equal What triple equal to okay. It also checks its type. Now, for example, if S 2 is also 9, and you right here Let's see what gets executed. It is still in the If that s 1 s is equal to S 2 but the type is different and if you want to even then you can write and make it something like s It will go to the else part because the value is same that is why this Can check something like, you know if it is greater that s can be either greater than it is to or it can be equal This will get executed. So, let's see. What is the output here? Yes if part so it is equal if the value is 10 here this So this is how we write this comparison operators than you know lesser than less than equal to Triple to not equal to so all these comparisons the comparison operators. Let's move on to the next part. That is Boolean operators. Now Boolean operators where to be used These Boolean operators if you want to use so what was your first condition if the road is four-lane you Be driving the car if you want to add like if the road is fallen and the traffic is very less So you have just and one more condition. So if you're working and if you want all of them, you know to be true you so it should be like if s 1 is greater than equal to 2 and + S1 is like Okay. So that means it's And even this is condition is true then This is how you by using and operator. But what if you want and it is like any one then you should execute You will be using Odd it is two pipelines. So it depends on what logic Okay, whether you want to write that both the condition It is Trick, then you if both the conditions then it is or condition. What is negation condition. Now, whatever the output of this condition If the output but you want it to be false then that is you add one operator which means that when you or a not okay that time of this inner bracket that will be negative. If it is true. This will be false. So the output of this whole of this inner bracket. Okay, you don't want If this is your logic you know how to write what should happen. So you can just write of that logic or in front And last in the final operator What is this ternary operator has two syntaxes or two operators It's How do you do that? Let us first commend these that is ternary operator Okay, you have these two parts. Okay, the pot is divided so question mark has and right hand side You will write a logic that will always give you So definitely you will be using Okay and writing that 1 is greater than 2 so this is using This will give me true or false. So if this gives me true what should be executed on the left hand side of this: I will type in true and if the output then this will get executed on the right hand side of this: so, let's see It may be false because 1 is not greater of this condition is false. So it will go on the right so ternary operator is always a question Mass and the result whereas: separates your true So there we end up on with the loops. So out of this we have already covered up if What is this So of this conditional statements we have already what is this eat else? Fifth statement as I said that if has two parts it will execute It will execute the else block what if within the else block one more condition you will write a statement which will have syntax like if and again else, let's see an example This is a normal you can ask the user and check that H whether it is greater than 60 that as your more You have to control your salt So your condition is with a comparison operator which will give you So if it is true then only this statement if it is false, then nothing will happen because there is no else block if you just move a heat. You will see that if your age is So in this condition then your if block will execute Then the else block Okay, so we just if/else block gets executed now if what if in the else to write some condition, for example, you ask or her age the user adds his or her age you take it and in this age variable that age is greater than 60, then you have to control then you understand That means he's that means his age is either if you want to categorize it like whether if age is so if it is greater than 30, then definitely has what he's eating May. Control totally but yeah so that you can put if block after else so such a statement if else statement so we have seen such beautiful Let's move on to the next as a switch statement. What is this switch statement takes one value now, it is not taking a comparison operator not always on which the switch statement is return should not always It may also give you an integer. It may also give you a So when your condition is going that is not Boolean value, then you may go Now, how is this switch that you asked for a user You can switch this particular of the type float and we're perfect of using for this weight value. Now after the switch statement should have cases what are this case is you know a broad spectrum that you provide the value like 10.5 20.5 What is to be done that you will right for example, if the weight is 10.5 then that your weight is so and so you will write that it is 20.5. What is this default doing here? It may so happen that weight will have So you will keep on and sometimes you so it's better to Write something So this case will get executed. If none of them fits in if 10.5 doesn't fit if I write it as 11.5 then I don't have a case So that is why I will go and get executed. So for example, let's just try the same example Switch will have Let's just take variable weight is equal to we but prompt Enter your weight. So we take this wait here. So it has been converted into float from string and now So we write here Okay, the case or the case can have you know, wait can have value say three now whenever then I will you know document dot write. your weight is 1 if it is 2 then I will write that I want to do. Whatever logic that I want what I'm going but if weight is for the nothing is going haven't written any default case if the case is 1 if I want to do a lot many and definitely make sure that I write a break statement. Why am I writing Is that if I do not break it. Okay, it will execute this case one also the next cases It will not check That is why it is a must that we make sure we write So let's just try It asks us for the weight for there is nothing because there is no case for it. So let's try to add one default 1 comma 2 comma 3 that's that I will be writing. So right here is 6 and it says that weight is So this is how we make and that is why we write If I do not write and you can just cross Okay, and I add one Can you say that it has checked written weight is one so that means even the case That is why I should Let's move on to the next Loops are basically that are to be executed If you want to do It is better to go for Loops in JavaScript which is also there in C and C++ Which is also it has three parts in its index for initialization the second and third part for the updation. Now, how does it work when you write a for So when the control it will first initialize you have mentioned if you can see it we have created a variable I and initialized it for the condition. The condition has to evaluate So if the condition is value is 0 it is compared What is this subjects here? It is an array of this subjects. So if you can see of course 0 is less than 3 that So without any problem Executes whatever is written coming back after executing It goes to the third that is updation. So it updates eyes value now, So it checks again. Now the condition Yes, of course. So it goes and executes that it again now after executing the complete for the updation now eyes value Yes, of course, Now the eyes value become 3 That means the condition It is a evaluating So now it will come This is how your for Loop Let's try to So what they have done an array of subjects and there is one more array So you will iterate through this array of subjects and you will ask user for every subject And once you give that marks to the newer array Carlos Mark. Sorry. Let's try to go ahead So we have an array. Okay, call us subjects this directly having So now we have but it is a blank array. We want to Traverse We create initialization first variable any variable J is my variable which to 0 now G. It will go So I will write this subjects So till it is blessed and length then only it It shouldn't and this So whenever J is value is 0 I want it to ask for So what I do here is And I initialize I asked for prompt which is that subject in the subjects array. So I see here subjects dot g so that means For the First Time so it will ask It will ask for physics value. So once I get these values I So for Mark's tree value, So that's what I will be doing. Now. Let me run this code we see I haven't done it Okay. Let me run this again So I say 34. I've got and physics I say 35. I have got so my marks array So instead of using this older of something called as a new What is this for in Loop in this for in Loop you use and in the bracket you use has two sides LHS, and rhs. To slept in side and right hand side of this Innkeeper word that you want to Traverse So, for example, that has got added. So I want to Loop So what I will do I will ride on the right hand side of the array marks now through this marks, I will reach its element to then the third element and on so I want to add to a variable and then use So that variable will be So every time it goes to the 0 the variable it It will devalue So let's just see if I want to see Let us see how this will see. It's 34 in look. What you do is that you just take on that you want to Traverse and on the left hand side that variable will be every for every iteration It will point to that current from 0 to n minus 1. That's what I if this works for me. It's 45 God then See if you'll be marks that is the name of the array So that index So 67 and 34 so we'll get Okay, so that is for an in on the right and here is your index. So for every index in this okay, Okay, I'll talk to that element So this was your let us move on while loop and a do-while loop. What is this while loop all as the name suggests while this condition holds Okay, that is This is slight difference in it. Let's see it here practically. So when you write here your condition here. So as long as this this piece of code So whatever you write in this place bracket unless this condition is false. Okay, this will get executed what happens in a do that your task to be executed or it is returned before only whereas the condition That's exactly what happens So for the first time it just checking the condition and for if the condition is true only if the condition is true for the second time, but by default it will execute that is the difference and do-while loop. So, for example, I create a variable here that till I Is less than 10 Okay. I want to execute this thing okay and eyes value now I forever lesser than 10. So this Loop will keep in finite times. This is called as If you want to make it finite that will implement it slowly and make it greater than 11 So let's write I plus plus here so slowly that I will become 9 then So this will I will become 10 K. Then 10 is not less than 10 so So now currently Let us write the condition the than Then 10 and let's write Let's try to execute Okay. So now can you see Nine is less than 10 but 10 is not less than 10 still so because when ice value was but it got executed in this to while loop now the 10 it just So for the second time I this So that is the difference and dowhile loop make sure that whatever condition that you put shouldn't be If it is an infinite condition, So this was about the while we have returned in while loop so what we have done is why lies We will ask for the marks Button will make sure that I plus plus is happening And we want to see marks And again, I lesser and then you just write you give this variable message as subject is so-and-so and marks you So so do-while Loop We write do keyword then and then the while loop so to be executed and after okay, so in do-while Loop without even checking once the block So as I said that what do you together the statements that you want you how do we write this function a function will have If you follow that syntax then only it will be called as Uh script so let's learn something called as How do we write a function? So we need to use Okay, then the name Okay, since it is a function. It should be followed by in round brackets, you will send are something also call as arguments and what this function will do upon calling is your body which is written always So this is basically of how do we write function Now the key word may change or the some key words in other languages yeah, we use some keywords of the function followed by this round parenthesis very Which is nothing but input given this function will work and what work it has in the curly brackets. So this curly bracket, Okay, it's called as body of the function by knowing How do we write functions in JavaScript now functions or nothing but that perform a task and It is defined somewhere So we will learn about by a function call. There are two parts you that function definition is like you just wrap it up pack it and keep it whenever You will call it defining and calling are How do we call a function? So whatever. Explained here is if I want to call that function. Definitely what will I do is that I will use the name without any case problem. It should be de to the same name Okay, and we'll use So this becomes calling and within this function, you will pass so if you have defined your I will have to send Okay, if I don't by default undefined value So this is called as and the above part is called of the function what a function parameters which is accepted by that is passed to the function. Parameters in a function call our arguments which are passed So whatever value that we during the function into the functions variables. Whatever variables we to that with a proper Let's complete our What is a return statement every function should have which returns a specific value. It's kind of a must If a function does not have a default value is returned that is returned is Okay. So this is how you write your function while writing a function that you write if you don't then by default it will give you I Okay, how do we write Well, there are four ways So on the way how it is returned or Define functions So there are various ways various ways of calling So there are altogether for named functions invoking function Okay. So let us understand if you want to write how do we write that function How do we write an anonymous function? How do we write a self invoking function Okay. Now as you can see that the terms they are functions are like, you know functions having Some or the other name they do not have any name Now. What is this? As I told you definition and calling of the function is but invoking a function. So the function which calls itself is called and final are you Constructor? So if your Veil worse oriented languages like Java, you would understand Okay, so we will see each one First are your name function a function should have So if there are they all should Okay, you can once Define you can call this named function Okay, you can call them n times. Ten times any number of times? Okay, there is Okay. So let's see how they Let's say the example the name if you can just notice function followed by add numb. So it is the name of the function followed in which there is of some characters of some variable names something So what does this mean? These are your parameters? Okay. Now you don't write something like wear a where be no of the variable so implicitly one variable is already as a another variable as be remember that you never declare your You just write the name of The variable the Declaration or the JavaScript part. Now follows. Once the parameter Then you go ahead and you write the function body what you write is so which means that whatever inputs you're just adding both of them and sending if this return statement if I had called this function at numb I would have got Okay. So let us see how do we create So we have our module ones and data types with JavaScript. Let's create one Moon JavaScript Difference that we whatever model ones which were added. Okay, they will like this and after adding all the code okay in our HTML, So whenever the control the script has been added and start executing but now we won't be It is not the execution that should start they'll be and then the execution So what we will be doing this is also a Javascript file. We will not directly write in the code that needs We will write all that code that needs to be executed and we will call So let's try to create which is a named how it reacts. So the keyword that we Then the name of the function Okay in bracket. How many numbers So A and B, for example write So in the body part as mentioned one return so that's what we have done. So we have called this ad numb. Okay, we have declared has been done. So only declaration I try to use this function So name of our So I've added the script file will get loaded even And yes, I have So let me try to hit if I just see in the sources. Yes, my functions But yeah, nothing is happening. Okay, let's try to add that console DOT Let's see if I get And I see that there is no output when the last module that whenever I used will just start executing But currently what I've done is which I want to get executed. I have clap them together. Okay in a function unless and until I will not get executed. Okay. So once my function I will try to So here I would send 2 comma 3 and this is a call So I'll just send this name of the function followed So here what happens and B is equal to 3. So if I just hit this now, my console statement So now you'll be like waiting but that is but I have not logged Neither. I have caught it in a variable. Okay, so let me log whatever is Then I get it as 5 what if I do something I don't even say I and I don't try and I try to hit it. Can I see that I get because by default by this function. So this is how we write and that is why we require I may also write take the value Okay in the some variable And now I can log So, can you see that as many times I am calling this function gets executed if I call it one more time. Okay without any reference. Again, the console statement So this is how we write This is how we write to the next part That is how do we declare as the name suggests? It is anonymous. It doesn't have a name now, you'll be surprised like how we call it. So sometimes we don't require because we don't want And again at that point, we will not create any name or other JavaScript provides without a name. So let's try to learn how do we create So since they do not have only at one place. Okay, when it after it is defined or actual argument Our function define It can be stored in a variable past as or can be return as This all points may Let's see the examples. No, can you see that a function So the keyword function exists But the rest of the syntax that is the parameters and the body of the function. So it's perfect it is written. So that means one function Well, there is no name. So what we can do is we to a variable so we have stowed this Now, if we want you can use this variable name instead and using if you want to pass Move add this paranthesis This is one way of doing it. So you want to use it again? And again, so the solution for that is you may assign So this is stored in a variable. Sometimes it so happens that any of your functions that one of its argument or parameter is if that is the case, you may give one name or you may create For example, there is which is a global method But JavaScript has and the name of the method What does this method do two parameters first parameter and second parameter is nothing but a number That is time So what this function does is that this function will execute which is nothing after some time is gone and that time is So this is how the settimeout So in such methods vary your functions you can Define So these are the two your Anonymous function. Let's try to see it's practical Named function add Okay, so here we saying that anonymous. Okay now tell me something. Can I call this function this function here It is simply not possible. So what do I do is I add a variable here I want to call this function. So how do I go about it? I just say Anonymous Okay with the variables as Can you see that the anonymous function I have created I have a sign its value This is how we can use or make it useful as we have seen one example So settimeout is a function It takes up two parameters. If you just see here the two and second is the Ali that should take okay like after so many milliseconds then only So either in this you can write and the timeout say This function will get executed or you can Define As a part of this parameter sin know a console DOT log. Saying that it is in set timeout. Okay. So what does settimeout will do It will check that. Okay. It has to pause and after that it should call Let's see if this works for us. So after 3,000 millisecond so this is how we have return to another function. So this is a second use So we have learned now two ways of declaring a function Another is anonymous functions that is Constructors what our Constructors basically in object-oriented special functions, and we have already used when we had declared an array while using your Constructor or calling a Constructor that is called as new this new of object do you want to create? Now if you want to create then you would say new that array word has if you want to use or create an object then you would use and the object that you Right? So F will be Capital now how do we write its preceding like ride Where do we write its body? So everything is a part and that parent is is that we write if you we have created So new function f is capital, then you start writing every parameter you but the string value so as can write those many. Names separated by comma and at last you can write what is returned okay and a semicolon so you can write as you want as or its last parameter is nothing but the body of the function like variable add function is equal to function and your body has so this is how you That means you're So this is the Let us see it working So you will have And this is what you Now within this function. We will have Now. If you have parameter list has as the body of this function, you will not include anything within double quotes. You will write the body So if you want to you know consoled not log. in Constructor function are getting ended up here. Let's try with the single Okay, and then you so this is the body and this function that you It is an anonymous function So you have to write if you want to use it to nothing but Constructor that you will create now, if you want to you will just say Constructor along with that you will pass as you do You can log whatever is all you can take it Okay, so I am Okay, and this is the output 3 + 5 is equal to 8. So this is the way to create but using new Constructor. So let us see the last way of creating a function call as the name that gets invoked You call yourself. Okay, that is what is called Now, what is this self These functions are which are invoked right after the function You can execute the code ones without declaring No reference is maintained to this function not even Now, how do we Is that you? The function It is an anonymous function. So like the baby right are Anonymous function but after the function has got over you will just What do we do You just write the name and then to round brackets if any parameters are required if no parameters are required. Then you don't pass means writing that function name and then adding or appending So that's exactly You will just call this function by just appending that's exactly is called Okay. So there's a function within which you write but you want to so you will just write nothing but 2 round brackets Let's see. example here self invoking nothing but a function. Function keyword you right You just say that it is returning Your function definition is So you just append nothing but these two parentheses you may write some value. So this will be invoked to check whether it is Let's just try And self invoking function. This is how we write Let's see if it works. I'm in the self and it has just called What is important is Okay, you may write it here or you may just like the way we have seen so you can end it or just before the call. Okay. So this as a complete entity, okay takes up and has been returned. You can just write Okay. So all the four paths like how do we create a named a new Constructor function and finally a self So let's just go like to calculate How do we calculate it as you can see create that is to calculate that we can write a function. Okay saying that it is which will return to itself product of itself. So that will give us the output. So let's try to use in this calculating the square of a number this was Let's create one Let's save this dot JavaScript So we but all four types of functions. So let's go with the first one So the first It is named. So let's write n and calculate square and returns back. Product of itself. Okay, so we have already it's time to call this function. So let's just try and just write a statement just call this function. Well along with this function. We will send a value. This is they've created We need to add it So let's just comment. This one as will be confused Let's just add See the naming convention right try to load this file. Okay, and once you the function gets called now to call or to create so let's just create Just take a number say p and just return back B that you assign it So this is how we write Try to call this You will be calling and call this variable instead and to this variable you if this gets called is also getting called. So let's try to calculate Okay, so to calculate what are we use is the function f Capital now to be returned in the function Everything should be pushed. Okay as a parameter. So first, let's write how many parameters just a single one. So add a parameter then nothing but the body of the function so you'll be riding return a of the function. Okay, and this is your parameter since it is Let's just Market or add it Let's try to see in the log So you write a message And let's just pass Let's see if it So we get calling So this is how we call a Constructor function and that is self invoking invoking function first with F small as always only in the new Constructor the value whose square Okay, right. Its body. See a function is now ready. So you want to invoke it so will be calling itself Okay. So let's try to write Okay, man console statement. calling self invoking how it looks this and this is the body with its first statement, then it's second statement And this is where you So let me run and I get And since it just and it doesn't even Okay, what we can do is we or we can write this complete Okay, so simple program but you can use of writing functions as and when you require need you can use that you can go for it You can go for You can go for it and self invoking function Okay, so that's where we complete So we will be now moving in JavaScript as we can see that the function how it is returned here is that JavaScript is and to execute this function we console DOT log which we have seen. You can also use something Okay, and then you calculate Okay and just display Eddie what are closures are between the function as I told you we what exactly is a scope chain, but there is something that exist which means that to which outerscope it refers to a function definition what is scope is okay. It holds the scope chain. It is used and copied as an outer environment The function is run. We saw an example of closure where local memory of f even when there is Let us just see that will help us Okay. So I've created a function an anonymous function So this is variable which is declared Plus it has one more function, which is return We had function G, which was returned F similarly. We have one more function here, which is returned back and it that is counter. So same example as that we have seen Now this whole function is added to a variable add like the way So that is what I have added. I've sailed invoke this function and whatever will be to this variable add. So let's add this closure dot JS Let us re load this file. Let's in the sources So we have a variable which has self Now, the function has a variable of its own and it returns and that function that is defined the outer scope. So let's try to call Okay in this add that initially the I call it. Once again. The counter is still increasing. Why this has happened And show you this closure. The something Carlos scope which has a closure within it So now we open up. This is my outer function if you just imagine it Say this is my outer function. Out of functions will have Okay, and this outer function back one more function. Which is an inner function now, this inner function that are declared outside. Okay, and this is I make sure that this outer function is A global variable which points to this outer What happens is that and whenever I call I will call this function So see if this value is 0 now. I call this function What happens is that the control directly jumps which takes up the value Okay. Once it becomes one it It will not again remake from the outer function. Why because the scope Instead of outer function now. Okay, so that's If you can see So every time I call this will increase Why because whatever is okay that gets added You can imagine this variable and it gets copied here. Okay, and every latest value that has got changed Okay. This is how closures work. So when you have a global which in turn returns that excesses the outer then those outer function of that inner function and they don't get initialized every time you call This is a closure you like variable name and But now one more variable So some age will be put Summer dress will be put in. Basically all this data about this data, it belongs to a single or a person we will call it but we have three Now, if you go to use array, then it is nothing of homogeneous data type. So if you have many names and create an array out of it. Okay, but in case you have and logically it then JavaScript helps you as Json object stands for JavaScript object notation can be created using JavaScript so I can put all this data under one name and that's Okay, and we will be learning what is an event. There are many events When we load a page. We have a button upon clicking when I type into an input box So there are many events So being a smart developer why and taken advantage of certain events. I can do some task. So that's exactly what we How do we create an object Nothing, but it is that belongs to one entity and there are around can declare an object or we can create an object as we speak about object object maybe JavaScript, maybe Java or may it that we work with objects real life entities and we that are declared. So let me just explain you that Basics once an object has What up properties now? If I say that human So human has many properties like he has eyes tongue So whatever the entity possesses or whatever the entity in a second part. It usually have something called Which means that what that entity what it possesses and so human being can talk can run can do programming. So all this becomes So this is what all it can do. So basically you have and other is methods. That's how you should So the ways of creating in a short while now that properties whatever Usually you can access all or that object. How do you access that property For example, you know name as one property so for this object whose name this name property using human which is a must and then So using a DOT property you that is what is Okay. So without taking How do we create our object? Okay to create our object like while creating function we can use this new operator So as I told you for anything you have to declare as we are so that rule also So if you just can see we have created a variable and using this new operator using this first line of code. We have created Now, it's time to add So what we can do is we can Define person dot name Okay and age is so and so so we've added Okay, let's try So let's create a new file. Let's save that as Okay, and in object dot chairs, let's try to create So whenever you use if you use it for function that f&amp;o Capital that is So let's try adding is C designation is a trainer. Okay person dots a phone number should be something like this I'm my object is totally ready. I have created an object here. Okay. Now if we want to push so that is also a great you know function create person. If this is my function I can just put all this data Make sure I indent So my function is ready here. I can call this function now. I'm using this function. I can create a person. Okay. So in this what has happened me back flippers definitely but It's like a factory So whenever I want to create the disease as the properties, I will call this So that's what I have done. Let me use it in my HTML page. The name of the file Let's first see whether it gets. Called. Yeah In the sources, Perfect. So I have not printed anything so I can just say that whatever is the value Let me print that and yes, I get the object completely and phone number and it's type is So this is how I have created So instead of this new object we can just write and it will work the same because instead of If you ride just that means you have created Okay the type if you just type in type always an object because you have initialize and similarly you can give So maybe you can just copy this. And say person to wear any voted Okay, and here you will just Okay, the same variable person to function. So that's what we'll be doing. And if you just type and now it is pointing that has been done is nothing but we've created a person So the Third Way so you can use the same way that is using curly braces but giving a property Okay, not only use but we can use something like the baby use for arrays please write your property. So this is the second way So now let us try of creating a person. The name would be 3 and here instead of You would be typing It's like name you would be Okay, same thing phone number. Okay. So this is one more way of writing it you can also You can create an alert let variable gory point Okay, and let it have and I want to now Okay saying that it is the name attached the value then Let me write its designation the object name. Then the phone number. So this is what all the data instead let me see that if I get the alert and I get the alert saying that name is Corey and phone number is so that the alert gives so we can see all the details Okay. Well we can write in the J's file of ours Okay. So here we can even And type in Gori it So you need not write because actually I logging So just type in and it will give you the result. So these were the some ways of logging and this of creating your object while we just saw that two ways of creating properties One and another was using the square bracket now instead at the start we can fill and the value of it So every property doesn't have whereas the value has coats if it is of the type string if it is the number so let's just see of creating an object. So here instead of this, I'll be creating So name is the first property. You can just type in 4 comma another property Trainer, this is also a comma I've created an object while declaring this object. So initialization and declaration has happened I'm returning that person here. Let me just say if this works for me. So online whenever you're ending or any semicolon. That's a must Now, let's see what it has 40 ages So basically here it just you know alphabetical and then P No Object creation which we have already done but a bit different you like a function which creates an object but how the function definitely a named function and what will be the body but the properties of that object now will be always preceded and what is this means this that you are creating like the way we have in called as a Constructor, so If anybody's they would directly feel that. Okay, this is something so you can create a Constructor and that Constructor is nothing where in you create the name of the function will have all So all these properties this which means that the current object that you so current object which you are creating to it the current object. You're creating just So once your Constructor isn't get created unless this Constructor or and to call this special operator Carlos new so new and then the name if you just call this function, it will not create to Use the keyword new for it. So let's use this create The Constructor function is with the name as this dot name. 5 semicolon then Trainer this dot h So you have this function ready. Now. I understand that You have to call it only So your variable Corey will have What if you just see it gives whatever you have declared you know class and you can create an object out because you're using So this will assign if you just see if this is working for you We'll see that yes Okay, that is person Okay. So let's just see the next way that is sixth way So using nothing, but the type object So you'll be just creating and the object would be You have just made one object. So here if you see the object variable name property typ type has a value that is displayed. So that's the way we to how do we add method to an object same as You just have to write the name. Okay, that is the method it nothing but a function so Okay, which is assigned what that function does is that it gives you an alert that the type is so-and-so so it accesses all its property and gives you the Valium Now I can just say variable animal and display it it will What if I want to create using this variable So using object Okay this Regular and to this create method It will create one more copy If I want to create this create method one more time as you want. Let's try to use this object dot create method So what it says is it but a variable say animal which is equal So in which it is said that type SQL how we have returned we want to write something So let the method be like this initialize what that function does nothing type is What is the type of this particular object? It will be typed in so current object is always So this is a function which you have added So simple as the way we have created here Okay all property separated We just added but to that we initialized it Now if we want to create this this particular prototype, how do we go about so I can create say horse. Is equal to I want Animal, okay. So I use something as object dot create method using this animal type. Let us see if this works what horse has. So it has object of the type type value is this whereas display type is a value Okay. It also has a Constructor and it's type. So this is what gets created if I just type in so Okay, that is type Okay display type is a method whereas type is is the extra information that we have. So as many now after I want to change its type. Definitely. I can go here and change I can type in like this Value has already changed. Okay, so that is that I can definitely go ahead and change its type whenever I can call its method also. Okay, I can call its method by using this object since it is a method. Let's call it. So I will say and type Okay. So this is how using object dot create method Oh can create as many objects as you want and later College methods Etc. Like the way we do for other If you want to create an object if you want to delete then it simple there is Delete OK and will delete that objects property a person that object Now, if you want to iterate of this person, you can use our for in loop as I If you're using of the in operator that you want to iterate through will be its index. So it's index here In age weight Etc. So that's what comes and delete one of its property after deleting the property still there or not? So let us try to execute that we have. So we have here gory Okay that got created. Even we have here person. Let's create one more object. variable trainer equals to this So variable trainer of the trainer CABC comma nothing but the array is Okay, then say physics than chemistry something teaches is the one property okay. So maybe you know second years only two years it takes up age is and so this is a variable that got created. Okay, if I want to iterate and I want you to write the properties that it has. Okay. What I can do is, you know to get the value I can just say or subject in a DOT teaches But if I just want the properties it has four we like a foreign Loop in okay this trainer as property see and to this property but this value P. So while adding the speeches have added the space just Okay, so that every property or you can have so that will make it neater and let's try that we have. Let's see if this works for us. I run this. So firstly it has named then H so previously the value Right? So then only after undefined so you can even make it like, Let's see that undefined It gets null as the value like a blank a blank string Okay. So let's try now delete trainer dot h Okay, so that's what we have done and then using the name Okay. Now let us see after deletion. What is the value Does it change So this is before deletion? And this is post deletion. The name is Trina. You can just copy this here so that there Now after deletion We haven't gone through the loop So whatever was there as is after deletion. If I go through the so let me now see what comes as the output before that let Let me again initialize Can you see that after deletion? The age has gone so in the properties it how you can delete So that is where we How do we create an object? How do we access its property? How do we access its? It's that are given to us so we can change using the methods. We can Define some methods within the object Like we had type we had We can have one more and in change type we can just So we can alter all the property So this is how we This is how we create And then the methods of the object now after learning there are some objects which are ready-made given to us seen an object College document which is really Okay, we haven't created that and that document object which we'll be covering at the end of this session We have one more object. That is also given And the name of the object which is also called as Let's see it hierarchy if you want to do something to the window, you see? Okay currently when you open right now that window if you want to alter something You need to have that will help you I am and some methods or some means to do So here it is. We have a window Okay at our doorstep using of changes to the window. We can see on a screen. Let's understand its hierarchy Okay has many other objects which are us Ciated with it like there is a location object Okay location object basically locating your window allocating There is one more object which is also there Object is document object. There is Navigator object if you can think about it, okay, you just have to visualize it like this as window which is there with us. We have many properties which are associated you know location. So this is one property is one property with it then History is one more property which is again an object. Okay, Navigator. Okay is one more property Okay and screen is one property Okay. So to access these object, what you can do is either you can use your window or simply the property name because that itself is that has got created. So this window object has if you just go to see of these properties It has a form subject it has, you know links object you know, something like this which is again an object When you have something okay, then image Okay. So this is how your windows object how its hierarchy so of each of this object how it works like and what we how it can help us in the look So basically browser objects are by global objects. We meant we They are ready to use or the JavaScript you can think of they are available It won't be anywhere. They are not available know they so the scope is then browser object model allows with browser properties and images shown below. Which is nothing, but the hierarchy main object is window object. Its properties are location history document again is more properties Let's see the first object So the first object that is window object that we have it is again, a global variable that it has we can call how a window looks How can we resize it? Okay, so we can do all this Like if you use window dot open method it if you use window will close the current window. If you use something we'll just move But if it is a full screen, you won't even It has moved if you just adjust Okay and make it a small window You will be able to notice you and you can do a lot more Let's try a few things on what exactly Let's create a new file saying Okay receive this, um object here with DOT JavaScript extension. So having this be you can just say, you know window this object is readily available that we have. You know, there is that we usually use right Basically. This is a function with window. Okay using this window object. You can call this function. This is a method defined but we can basically use it. Why can we use it that helps us to call We need not always You can directly You can directly use its methods without using this window with window dot as the syntax OK if I just say window Rod open. Okay. So this is my JavaScript. Okay. Let me add this JavaScript and kill add a sauce So or small objects not script. Click me run it once again. Can you see that it has opened So that is what has happened if I write it in a neater way that is if I tell I need a blank window nothing but the URL I It's a blank URL then I would that a new window. And model features. I need to add here like hide should be which should be equal to 200 C. And that's what I want up a window of this style. So let me now. So this will definitely give Let me just add a variable Okay, so this is the new window that got created Dot if I use something like move to I try to move it Okay some location I gave Let us try to see We have a pop-up that always allowed You can see a window that got created and it has come like you know there if you can see the window so it will not create once again if I close this then only it Okay the size also it if I had given up a URL here likes a blue double HTTP colon Let me try this. So it would have opened up Okay. So this is how your window object looks to move that window to open up a new window to close want to use the window whatever right if you want so you can use this close method So let me see. It has even opened it Okay, if you want to close which is going on so you can just save So it is close the current to the older window. So this is how you and you can do some window So let's put all so you can just save Okay, and within this you will write all this functions or that you want to write. And whenever you want to use then only you can call So every time now it So if I open up this new DOT in Google Chrome seat because I haven't called Okay. This was about the window object Let's move in ahead. What screen object now as I told your screen is Yes, definitely you but directly the screen when you use directly implicitly a window object because the current object that but window there is no need of It is the current object So it's properties so you can use You can just you know, we will get what is the width Okay current screens height it's available with okay, that is nothing but the width that you can see you know, taskbar and all What is the color that it has or whatever pixel you can get using the screen dot that this object screen has now you can even get the values you Okay. So if you want to set this color depth and set it you want to set the height you can use this High Okay. So if you want to see what is the detail Okay, you can write like I want to see all This particular screen. Can you help me? So using the screen object? I can just see all the values that I have I can either do or I can even directly write here something like screen dot And it gives me Okay now here if I just assign something color it now in the elements I just change its color Maybe say equi. So change its color. Let me see if that gives me something but screen dot just the color. Is there anything there that we have. So the depth is one number by which it is giving you when we look after Dom elements Okay. Now this is basically So available height is let's see that we have height? So we have Total height of 768 but out of which some height since it is taken We have available height So around 40 it has been taken So this is how our screen object will look will have certain width as well. This will be it's weird and if you want to see So total with we all have complete weight Okay, only the height is covered Whereas the width So this is how you can use You can use your screen object Okay, what'll data it has if you just concentrate you will be able to know like you will have on the screen object, you know to set something or they'll be a lot of things Okay, so that you and you know get in details Okay, let's move on that we have that is basically this Navigator object that I have it is supposed about the browser. It so happens that this information is as I'll show you what But yes JavaScript which is available with us. We have to do a bit you know together right answer like screen object. It also has many properties you know app name at codename the platform whether the cookie What is the product of So all these properties are let us create and sea water properties your screen property so as to just tell you that okay, even on Console you can use this functions Okay, so there are two three Is of using any property let's create this function Use Navigator object so I can use something Okay is a method in document dot write wherein so I can write something like, you know with a break Okay. Let me see if this function So to call this function I will Okay, so it gives me that is app code name. So after knowing let us save on what platform does my browser work that let us type in platform and using the Navigator object as platform run this that it is Windows 32. So it is working whether the cookie is enabled and also its product name whether cookie is if you are feeling that okay, whatever is the property or not to test. The best place is Use your Navigator object. Okay using this you will get all the values So you will also get something if you want to again rather write it properly just say navigator dot say So using this you that you have typed in and you can type it So that will make you sure that you have used because always browser So in case you are using notepad this is a great trick whether cookies enabled or not. And what is the name So the product that I find here usually Save it and let Okay. Sorry, it is just that I get here. So cookies enabled. Yes, the product that it is using is of the browser's So if I hit this particular URL of the applications so we'll be able to see Okay, so all the values on but internally, they must be using So that is why There's something called as So Navigator dot user agent is Okay, and you can see that it is giving you a series If I type in the same if I want to type in okay in the console so you can type Okay, so it just gives me like it is using Okay, and Firefox is the company but for Chrome it gives that is why this Navigator not so reliable. So if you want to find on which it is working, okay, may you have given And that user is opening and you need to know on which Okay, then you can use this But smartly you will have whatever array that you get from this user agent That means it is If it doesn't have Chrome, then you go for the else whether it has Mozilla, you can try such a piece of code in many other browsers and see and accordingly you just type browser you're user So that's what is when it comes to navigator So let's move on that we have in line. That is location. Object know what is about Like any other also has some properties that's like H ref that I'm using then if you want you have this method in which you can just and open up another you are all Basically whenever I say but this location it is to work So whenever I talk it is nothing but the address So let us see what this about Save this location object. Let's always make it a habit Now, let's always put Okay location properties. So this location property to log all the properties. So currently what that you want whatever is the what you want. Let me just say Okay it schref of location. That's what I want to see so and print its H ref property. I'm going to call either I can call it here or I can call it So I have this method then I call it here. Okay, so it gives me that okay, so and so is the H ref so I can Define my methods here. Okay, and I can call them or for that matter. Okay. I can even type in you know, this complete function Okay, and just say property 1 that I have created that I've got created so add the runtime. Also. I can write some JavaScript to as much as possible. You should try to use that helps us. Okay. So location dot h ref what is the current address It can also give you something who's the host? Okay. Currently, there is no host. It is nothing like, you know localhost or I have written What does Protocol it So it will just see what is Okay, because currently Okay, if I open one google.com and type in something like, you know location dot host that I'm using it will give Okay, the protocol HTTP okay, so this is that what is the address Okay more things like path name that you get if you want to assign so you can just say location. In this location you can just Okay, and in the method I want to type in. And www.google.com. Let me see without the protocol No, it doesn't. So, let me put the complete URL with the protocol HTTP Yeah, it has opened. So whatever operations you want You can use your location Okay. Now come to history object. History object is which will keep all the history what all back or the forward or whatever I had typed Okay. So all that history in this object called It has many methods like bag forward Etc into what exactly was type So for example, if I want to use so I can just type in history Okay, so back was which is not shown. Let me again hit back. So back will be if I just say forward. So we'll give me If I hit forward So this is how you can use to Traverse through what what all pages were displayed before or after I with your history of surfing So that can be covered up So these were all We have covered up so far and then there was Then there was a screen object Etc along with that I how do we use console DOT log which we can cover up. How do we Define some Properties and call them if you are not unaware directly tied that object in Name with the right spelling in your JavaScript. Your JavaScript will These were some of the tricks of this browser object model. And now let's get into the best that we have already that is document object model. I had already drawn a picture that document imagine it to be that you have add it or rather everything Everything is there So there is one more object Which also we have used Okay. So that is your document object. It has absolutely everything. Okay that we write So, let's see. The HTML Dom is a standard object model and It defines the HTML elements of all HTML elements the methods So it has some properties that will help you to get Also, you have methods to get and every element will have some events attached of the page is created and when a page is loaded it is created. The HTML Dom object of object like this. So the HTML Dom object tree looks like first object is say that the main element within root element. There are two sub elements head and body within head like title within body. You may have many elements or you know can have H1 tag, or you can have something You can have a button but now I understand that you have in the body tag. For example, you have a button tag Now button So LM and consider because that element associated with it. So button can have a text or it can have many things It has something called what is very very important. So let's understand So this is our document object. In the document object. Okay, you will have and every element say Okay in this is your body part. Okay, within body part like you can have a button. Understand this button carefully it will have many properties It's look it's field So look and feel comes under styling of this It will have some text The text will be also considered that is attached to it are So these are which are associated in your document object if I get an input box also, there is something that is associated whatever text you add in it which are associated with it. What our events Now button is clickable Okay, which will get fired when I click this button if I just move my mouse that will be there if I take My mouse they'll be one event So understand that Okay behind your browser. There are these events which are occurring on that browser window and all And now we have two smartly make That is what is our task. Okay. So let us understand browser where iniki or rather Dom object of this Dom object model. Okay, so document object model plus the JavaScript we called as Dynamic HTML We can change all and attributes in the page. Whenever we want we of all the element we can add which are In the HTML to all existing HTML So it has access to all It can create its own So now to work with all elements here understand that they are nothing but all this input box buttons Okay our drop-down that is there in the body. Now, how will you We have already seen by ID method this method a particular or specific while defining in the HTML and having some value you can get any HTML element. Okay, if you have defined what does this About know when you see with its default properties. Nothing with a gray color you want your button So what do you create So always you submit and a cancel button should be this is your styling so you can create to style classes one is and one is for cancel button okay whenever you're So if you have added then you can access on that class name. You can also access What do you mean by tag name? A button has a tag button you can get using like there's only and you want to get that input and you don't know You don't know what is So what you can do is If you want to get you can just say get and within this method So this will help us And once we reach we will be able to do on that element. So let us see, how do we reach to the element So here is the body So let us create a button here. Okay, then let me create Let me create something Type is equal to sit text. Okay, so I have around a paragraph a button So I am happy I have to use this three elements. Okay, no script. I'm adding let me use location This isn't have any back methods Sorry, it is history right Okay, again, use and I first dot HTML and I get access if I just go to this element. Okay. I understand that in the body. There is button paragraph if I just move my cursor in element get highlighted. I can change its styling here What I want to write so I would say something Get element by ID and add some ID sing ABC it because none of the elements So let me say tried, you know using something Elements by class name a random class name say error. Okay, it will give me an array but a blank array so that means there is classes the attribute. Get element by tag knee so I will say input. So I get in return the input We just see if I click on that input So it is talking about the input So if I don't have all for this now in case if I had returned something like ID here ABC and render this page again, then it would have helped me It would have given me back how I achieve my object and I can work over the object I can change its styling or I can work around Okay. So let's move ahead. This is how I get my objects Okay. This document dot get So I've got this value now. I want to change its text. So the property that I need to change here that will change its text. So let me try to do or execute it here have already that it is the right paragraph I have so I will change as say that hi there. I am inner HTML Can you see that the property has Okay. So if you want to change that it has so you can go Let's try to use it Let's see the button. First of all, that by typing first you if you're getting an element. Okay, it is not giving So basically you have to use you should write that tag. Okay. So this thing has given Okay. Let me see inner HTML. Let's see if this is okay like cancer. Okay, so it is not the property value So let us see that button has? So to see the properties, okay. I'm just show you how to do it at runtime to see Click on that button on your right hand side that will be present. Okay, and all this tiles how it should look like? So that's how we have changed That is we Let's try changing the style. It has to change the style. Basically what we can do So using that element. Okay, you can set its attribute that you're going to set What attribute do you so you can change it that you want to change if you have this paragraph here, so first of all, let's get the element Get element by CID. ID here is ABC. Okay. Now you want to change something like it's style You can just call the method that we have here in the example in the set attribute. You can set the style and you can change its color. Okay. So let me try this set what I want to change is and within the style what I want to change this color here. Let me change it here first. The color has changed, You can see that the color Okay, it had changed to Green So all this color that you want to change. You can definitely change to test you can just Okay, so maybe like text alignment would be if you want to move it. All right, so it is gone extremely right you want Okay, it has overridden. Chimere like left she just left. So whatever styling that you want to change here because you get here Okay, and you will make sure that you will never make Okay, that is important. So whatever styling that you want to change you You can change it, you know height and you can do anything and in the JavaScript when you have to do make use as set attribute and women that you that is nothing and now within the style that is name/value and the value of the style. So if you just click on this button the style like color is this if you want to do you can do it like she wouldn't understand that so and so it You can just change the width of it and make it like or you can also it's a 200 me see These changes will because the text that I have written So using that value or that text over it but styling, you can definitely Okay using this block you can go to this console and using You can set it Styles. Okay. So that covers up the second another was the style part. Now, let's move that is nothing but the event spot now what but whatever things that happen like when the web page is loaded when an image has been loaded when the mouse moves when the input field has changed when I User presses a stroke saki all these that happen behind the scene which are given up like click Okay, so that means you over it then Mouse and there is something like you have touched an element Okay, you cancel the touch if you have pressed it key when the key bows down all behind the scene. If the form is focused when the form has become blurred it got changed. So all these methods or other events are or registered event You can choose Okay and write on so-and-so event. I want to I'm so-and-so tasks. So you are smartly for your work to be done. So how do we add So whatever code we that on particular event. This court should execute We're writing our own listeners what this listeners would do they will keep and when your particular will perform the task. These are called So let us understand. How do we add So you can add this event listeners either How do I add them? If you just see here dynamically by using the event once you get an event We know that there are many methods either by Or by tag name or there Once you get one element you call it's add So in this add event listener method you that you want. Maybe on click you want to add You want to add one listener? Okay on keep down you So you can add as you can go ahead and add So, for example, I want to add when that particular So I add that and after adding the Reznor some tasks so that task I Okay in that function. What do I do? I change its styling. So that's what I So I call that functions only when this particular This function will be Dead, let's try to add one event that we have. So we have here a paragraph. Let's add here So create a new Javascript file So just see event dot j We won't make any mistakes. Okay, the event listener that para clicked. What is this para click doing it will get the paragraph And it's ID is ABC once it gets this element That is nothing but the style I'm going to change because blue is visible now. When should I I should call this paragraph when my paragraph What do I do in the JavaScript? Okay. I write document dot That is my abc ID. Okay. I add an event listener. Okay, which will be working only when I click it and that time I Severa turn a task that whenever I get this ABC on the click event So I go to my HTML page The name of the script is event Okay. And refresh this file. By default. It has got a color blue. If you change it to Yellow so that it just adds a listener. So when you write See the syntax that is followed. I have written a function that OK execute this function while you're adding that you just write and do not call it do not follow mention which method to be Okay upon clicking Your JavaScript will get of this ABC will change that is called as Dynamically. Let us create Say something like Mouse over. And here let us put Mouse-over and this when it is mouse over and at that time So save this file you have added for click one is for Mouse over. Let me see if this works for us. So initially it is black. I move it move my mouse pointer it becomes blue it becomes yellow. So this is how I or other to listeners Okay, all the listeners or the events are always if there are two words or Mouse out a key down on load. Whatever events are there. They're always in small case. Make sure that you write and when you add a live make sure you write without a calling round bracket. Okay, let's try to see How do we add statically it is when we write our HTML only we can write the event like now I have So I have this button statically in my HTML if I want to call any function, so I'll be writing here the name I will be creating button cyclic Okay What will I do is I of it attribute. Let's put one ID for our button let the idb Okay, let's just set These are all click. I want this particular So what I do here is Okay, and it's parantheses. This is how I add statically so while writing the element that on click event so-and-so Let me see if this works for me. Guess I've refreshed It's text becomes blue. Okay, I can add one more event if I want but all the events Okay, maybe like The I can call one more method like button Mouse I will call one more function on mouse-over I can just say Let me dries and check it Okay, whether I have saved I need to see the HTML as well. And when I Mouse when I click it becomes Bloom. So this is how I and dynamically all this methods or other the event So this is Now one of the famous event that we add is So if I add anything, you know, like I've created a form last name age phone number. So in that in the name part, I don't want somebody So that's my validation part. I cannot tell that I have JavaScript of that JavaScript I can do all so I can have a method called I can get whichever value Use that value and even right if it is kept blank okay. It is a must Okay, something like that. So validation one something if it is not typeof it can be taken care of. So all these things when we have validating a form. So let's see one beautiful actually validate the form? So the first step Okay your form so you know button. Okay a paragraph and everything that is added you think whether it is a number or whatever is the output and we can tell the user that please do feel its values that you add only numbers in it. Make sure you add only data whatever validations So let us create Okay, what you have to make use of is a form tag You may write something Okay, then you can and you may end the input tag. Okay. So this is your name. Okay, and when you are adding that you add one more input. Okay type. So let's also make Okay, it's ID is phone number? Okay, after adding will submit your data. Okay. So now after adding what we can do is we so somebody clicks this particular method we can Maybe a method will be called can write a code function name In this method, what do I do? I want to check. Okay, whether name So what do I do? I get that name element By ID. And what is the ID here name? So let me take that Similarly. I'll create one more and I will get that element So in this validate form form, I have both the elements whether the name If it is blank then I please don't add Okay before submitted So what I do is I check Okay is null. So what I do I right here and if Case okay is equal Okay, if that is the case then Please enter some value in name. Okay, so let us say Okay, how do I check or not null is simple by using if it is blank. Okay, or it is null So let's try out first null. Okay, if that doesn't work with the blank string and without a submitting. Okay, I send it is not null. It has some value. Let's try to check She tells me please enter So only when I add it will get submitted. It will not give me an error. It will give me an error if I do not add So I come here. I feel okay. I have done one Let me just comment. All these things add Okay and place it nicely here. So I have this name which I can use I feel They may leave it Now. I try to check. Okay, the second test if name is dot value. If it is a number so there is a method call. It is not a number. If this value is not a number if it is a number than this Okay, so it is very This is not a number carefully. So now name dot value so he's not a number. Okay should be true here. So if it is false, Say I refresh this page. And I add nothing Okay, it also tells me So it tells me that yes, we've added a number and I want So when I add something text an error similarly. I can check it So let me take and this time I If it is not a number then I want to add please So adhere proper values and here I add instead So it tells me that please add a number value So this is how I Okay in my own way so I Okay, I can beautifully or and you know, if L see fails then then I something like and I can take a switch value. Okay, and if it is a number if it is something so I all the operators that I have. Oh can create a beautiful Okay. Let's see what presentation So here we have created a ch2 that please add and I created one input. Okay. I put its ID as Numb and I have a button my function will get Okay has something like it has taken a variable of that element is taken whether it is not a number then you put so and so if it you have added a number and that's what you write below that number instead Also, you can add after every element you Okay, and that paragraphs so this is Javascript to event handling and objects. Your feedback is very to us to give your suggestion than what we are. Okay for the I hope all of you So if you have any further please comment in the comment that's all from our side today. Thank you and happy learning. I hope you have enjoyed Please be kind enough to like it and you can comment any and we will reply them at the earliest do look out And subscribe to Edureka channel to learn more. Happy learning.