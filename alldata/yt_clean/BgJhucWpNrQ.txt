Hey, everyone. Welcome back to my Dev Web App channel. Today I'm going to build a mortgage calculator app in React with Tailwind CSS and a hook use form from React hook form package. Let's take a look at the design. As you can see, I'll have header and four inputs and a also calculate button. And when I press calculate button as you can see we have form validation and we need to provide values and I'll provide value for home price, down payment and interest rate would be 5 and loan term 10. And now I'm going to press calculate button and as you can see we have values for monthly payment. Total loan payment and total interest payment. And also, I'll use Tailwind CSS document, install Tailwind CSS with Vite, and let's go to Visual Studio Code and start building our application. I launched my Visual Studio code and have folder where I store my React projects and now I'm going to run new terminal and use doc and copy command and paste it here and I can remove this command and provide project name and it will be mortgage-calc and Tailwind. Okay and now I can select React, JavaScript and navigate to project folder with CD command and now I'll install dependencies and let's check what I have next. And the second command is install tailwind css. I'm going to copy these packages and install and probably init tailwind css. And the third point is configure your template path. I'm going to copy this content and add it inside tailwind config. .js file. Okay and the next one is adding tailing directives and also copy and open my source files and index.css and just add this and now I can clean up this index.ss file I'll leave only styles for body to remove all other styles. also for h1. Let's check what next. And now I can run npm run dev but I need one more package for react hook form and I'll copy this package and add it to my project. And now we can run dev server with command npm run dev. And I'm going to do it and open it in the browser and Tailwind doc suggests how to change the code, and I'm going to add this code into my app.jsx. I have some code here, but I'll remove all this code and add code, and I can remove all these imports. And let's check what we have. And we have our Hello World. And now I'm going to remove this app CSS styles as well. Okay, and let's change styles in index.css. I would like to change place items to justify content and change background-color with apply and provide background gradient and make it to bottom and I will use from blue blue 500 and to blue 300. Okay, let's check. Let me refresh the page and I need to change just apply. Let's check again. Okay and we have our background gradient And I'd like to change and provide here 300 and here 5. Okay, now we have our new background and also I'd like to remove this min width and provide the height here, like min height and make it screen. OK, and nothing was changed Now I'm going to hide this panel and also we don't need this config and CSS files and I'm going to create a new component inside my source files. I'll create folder components and provide mortgage calculator. JSX. Okay, and now I'm going to go to React hook form document and I'll just copy-paste this JavaScript code uh that they provided. Okay, save it and I'll rename App to my mortgage Calculator. And let's add it inside app.jsx. And close the tag. And as you can see, import was added. I can save it here. Let's check what we have. Okay, and we have some form. ohh And we are using useForm hook from react-hook-form package. And let's change this form as we want. And I'm going to add div. And we will use it as container. And let's add some styles. I'll provide class name and I use background white and let's add some padding or and also make shadow large and make it rounded middle and make text Extra large. And we have two inputs with the register and I'd like to leave one for now and add the div for container. And we'll add it here and I will provide class name and make it black. And make black color. And add some margin, button. And now I can add some label. And I will use... Let me add class name. And make it font bold. OK, and let me provide name. It will be home price. And let's check what I have so far. OK, we have our body, our label, and also we have input. And we need to add styles for input. And so we have button, submit button. And we can remove this comment. and for input so I'm going to add type and make it number. I'll use only number and now I can add Tailwind styles and I will make width it full white width and add some padding and let's add border border and make border blue 200. Let's do it rounded and make large. And let's check. And we have our border. We can provide some value. And now I would like to change the name from this example to amount. And also I will change errors. I will remove this comment. And instead of required I will provide some message. I will provide Home Price is required. And instead of this message, I'll provide my message that I've just added. And I'll use errors amount And we'll have message inside it. And let's add some classes for span, class name, and make text red 500, and make text small. And let's check what we have so far. Let me refresh the page, submit, and as you can see, We have our message. I can provide some value and now I can submit. If I don't have value, then validation is here and I need to provide some value. Now let's change submit to calculate button and we have input time submit, but I would like to change it to button and type will left submit, but let me provide text, calculate and close the button. Okay, I can remove this and close it here. And let's provide styles. Make class name and make full width. And also we can add some paddings and y and we can make background blue and let's do it 700 and let me text white and make it rounded large and let's make cursor pointer and also During hovering, I'll change background-color to blue 900. Okay, let's check what I have so far. I can remove this. And we have our calculate button. And let me refresh the page. When I press calculate button, I see validation message and I can provide some values. Now let's add more fields, like down payment, interest rate, loan term, and for that I can copy paste this input with errors, but I'd like to create object of array of objects and we'll use function method map and we'll provide inputs from this array. Let's do it. I'll create const fields and each element will be object and for first I'll provide name amount and for the second And also we need a label. I will provide the same values as we did for our first input. And also I'll use validation and provide a task here. OK. And I need more fields. Let me add commas. And the second field will be downpayment. And also label will be downpayment. And the next filter will be interest. All right. And label will be also interest. All right. Let me change this. And also here. And the last filter will be long term. And we'll provide it as label. And also change in validation. Okay, and now we can use our fields array and inside it, I'll add it in the code and we'll use map. And for each element, I'm going to provide JSX. And for each field, I need to return jsx. Okay, and now I can use, actually, let's use object destructing and destruct our name, label, and also we have validation in each element. And now instead of this amount, I'll provide name. And instead of required, I'll provide validation. And instead of label, instead of home price, I'll provide label. And let's check what I have so far. I need to refresh. Let me open Developer Tools. Okay, let's check the code and actually I need to provide this name, not object. Let's check again. Okay, and we have our input and we have warning each child in a list should have a unique key prop. Okay, I will fix it. And now I'm going to try to calculate and I need to provide values. Calculate again. And I don't see this warning. And we need to fix it. And to fix warning about key, let's provide our key. We'll use name. We have unique name for each field. As for errors, we have here amount and we need to change it to use a name instead of amount. Let's use name and also here. Errors will be name and message. Let's check again. Okay, we have our validation. I'm going to refresh the page and press calculate button and we have all warnings that we need to add some values, provide values and now I can press calculate and we have our form Now let's add functionality to calculate our amounts, and for that I'm going to use my existing mortgage calculator that I built in React and with CSS styles and with use state hooks and I'll just reuse my code. And you can watch the video from the card or from the description. And I'll copy-paste the code. And I need some state variables. And I'll add import useState and we have import useState from React. And also I need function to calculate monthly payment. And I can actually remove this console log. And we have this onSubmit. function and inside OnSubmit function I'll just provide calculate monthly payment and provide umm form data. We'll add form data here and provide data and also we can add this conditional rendering, if we have payment, then we'll show the data. Okay, and let's check what I have. I'm going to provide some values. And press calculate and I need to provide more values. Okay, and we have our payments. Now, let's add some styles like margins, paddings, probably width. Let's check what I have and I can add class name and add margin button and also here we can add some and we have margin button 4, but I wrote my class incorrectly, and let's check. And OK, we have some bottoms, margins, and let me add some, probably, I don't know, H2 tag. Let's add H2 tag. And provide Mortgage calculator. And provide class name. class name and add margin and also make font bold. Okay, let's check. And we don't have font bold. Okay, now we have font bold and our functionality works. And we have calculate and we have results. And now I would like to add some margin here and increase the width, and let me do it. And for that I'm going to provide class name to my form and add margin-bottom 4. And I would like to increase width of my div for my container and provide min-width. and apply 20 rem. And let's also set max-width and apply 80 rem. And let's check what I have. And we have margin. Let me provide values. And calculate and we have margin here, Let's increase the width for middle screen and for large I'll provide 30 REM for middle and we'll add main width and provide 30 REM. And we have a bigger width. And also, I would like to add to my label and align it by left and provide text left. OK, and it's looking good so far. And I would like to change this Vite and React. And let me provide Mortgage Mortgage Calculator Okay, and let's check again. And let's check for smaller screens, etc. Our media queries work, and we have smaller width. Now I can refresh the page and provide some values. Let provide some actual values. Press calculate and I need to provide interest rate and loan term. Let it be 10 years and press calculate. Ok and now we have our monthly monthly payment, total loan payment, and total interest payment. And you can add some currencies here, or we need probably add percent here and here years. That's all that I had for today. If you liked the video, subscribe to my Dev Web App channel. Like the video. I'll provide the links in the video description. Thank you for watching. Goodbye.