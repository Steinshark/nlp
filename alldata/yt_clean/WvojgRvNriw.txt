Super Mario and some of it is still hidden in the game's ROM. A lot of the old code just gets skipped right over However, some of it can still be circumstances, or glitches. In this video, we'll take a look at a couple of concepts an empty shell of their remains in the game's code. [intro jingle] Retro Game Mechanics Explained is members, Patreon supporters, Thank you! Let's start with the fun mechanic of bringing a carriable item across the end level goal tape. When you do this, for Mario to collect--a The exact item it turns into depends on Mario's If you're small or big Mario, the item will turn If you're Caped Mario, the item will be a cape feather. And if you're Fire Mario, But there's also two special cases. The first is that that you would get in you'll get a 1up instead. So big Mario with a mushroom, cape Mario with a feather, fire Mario with a flower. The second special case you're carrying These two no matter what. We can make a chart that shows you'd get, depending on Mario's and the item A key or baby Yoshi gives a 1up no matter what, would give a mushroom, mushroom, feather, flower. Just keep in mind that if the item received matches then the item upgrades into a 1up. To any casual player, this is the extent of the chart. However, in the game's code, three times as big, with three extra and two additional checks Let's go through these one by one. The carried item check is really simple. First, the key and baby Yoshi In the final game, but since they're checked separately, technically they Secondly, the springboard and P-switch are also checked Again, in the final game, the same as the remaining shells, throw blocks, Bob-ombs etc. so they still give the mushroom, mushroom, feather flower. Now for the additional Mario The fifth status is has star power Technically, this check is It's just that before the check the moment Mario hits the goal tape, his invincibility is removed, so he never actually has star power the moment it's checked for here. If this were to succeed though, Mario would get a super star item. This gives Mario invincibility for the remaining of the end level cutscene, which doesn't seem too useful. I'll come back to this. Unless the item where a key or baby of course, in which you would get but this 1up mushroom instead of one. The sixth status is if Mario is currently riding Yoshi. This will always give you a standard no matter what. This check is also still in the game, It's just that normally while riding Yoshi. This doesn't check in his mouth, However, you can actually grab an item which will allow Mario while on Yoshi's back. And sure enough, while doing this, The seventh status is entirely unused and isn't referenced anywhere The entries in this table these would have all also given 1ups. However, they would give a different number of lives. A standard carriable item would have been a normal 1up a springboard or P-switch A key would give three lives. And a baby Yoshi would... well, we'll come back to that later. Okay, back to the super star. In addition to giving Mario invincibility for the 10 seconds or so during the cutscene, transforming the carriable item into a star triggers a sort of star power counter. There's a single 8-bit byte that holds this counter, and by doing Every time a level or sublevel is loaded, This makes that one bit that got set from the star moved to the left one position in the byte. Once this bit makes its way bit on the left, after entering seven levels or rooms, Mario will instantly start that room with invincibility. Then the entire counter is cleared so you can't queue up I think the idea behind this mechanic the star power from the star item for the duration of the cutscene, but it may have stuck around Sort of like in Super Mario Bros. 3. Then you would enter the next level I'm not of seven level entries though. By the way, you can totally still get this to happen By utilizing a glitch called powerup incrementation (I'll leave a link to a really old you can get Mario's powerup status values that are not small, big, cape, or fire. Looking at the chart we made, if small Mario is 0, big Mario is 1, cape Mario is 2, and fire Mario is 3, if somehow Mario were to have powerup 4--whatever glitch status would use the star power even when Mario Now, due to other side effects the super star but it still triggers So if you enter seven more levels, he'll start with invincibility. Let's look at this chart again. This chart exists in the game's code, and each entry is a single byte. Normally, the byte corresponds that will be spawned from Mushrooms have ID $74. Feathers are $77, flowers are $75, and stars are $76. 1up mushrooms have ID $78, spots in the table, In fact, $E0 and $F0. Now in the final game, end up doing the exact same thing. It's a case of "if the value is $E0, if the value They are both explicitly checked for individually, but they perform identically, that being a 1up being spawned. However, the values aren't exactly just $E0, and $F0. The top half of the byte is what is checked for--the $E and $F. The bottom half of the byte defines how many lives This is how the star power with key and baby These two entries in the table are both $F1. The being on Yoshi column is full of the value $E0. So zero means give one life, one means give two lives. The key row is full of the value $F0, while the baby This is why the key and baby for individually. Had the $E and $F values done these two items would have Now what are the values in this final unused column? These are $F0, $F1, $F2 and $E4 The first three values giving one, two, and three lives. Does the baby a 1up mushroom that gives five lives? Nope! It gives you five coins instead! As a segue into the second unused mechanic, let's look at a fun glitch Everyone knows that consecutively, you get more and eventually after 8000 points, you get 1ups. However, there's a particular enemy that doesn't abide That being the wiggler. When stomping on a wiggler, points, 1up, 2up, 3up and more. After this, since the game only intended the 3up to give it After the 3up is the 5up, you'll start getting coins Lots of points. What in the world is going on here? The little icons that appear are handled They're commonly known but they handle points, lives, which went unused in the final game. There are 21 different score sprites in the game, with IDs #1 through #21. ID #0 isn't used here, since it corresponds to the absence of a sprite. IDs #1 through #12 are the score sprites They start at 10 and go to 20, 40, 80, 100, 200, 400, 800, 1000, 2000, 4000, and finally 8000. Only the score sprites at 100 onward are commonly used, though 10 is used for collecting coins out of blocks. The score sprites with IDs #13 through #16 correspond to lives. They go 1up, 2up, 3up, then skip straight to 5up. The 1up sprite is red, 2up is yellow, and 3up is blue, Because of this, which I'll touch on later. Finally, through #21 correspond to coins. These would have given 5, 10, 15, 20, and 25 coins each. These also have glitched sprites, graphics ended up getting overwritten during development. There is a counter in the game how many enemies This counter has no limit if you manage to hit 256 enemies in a row. Almost all enemies use a common subroutine This routine increments the proper bounce sound effect, and spawns in the proper score sprite depending on how big the value of this counter is. For example, on the first hit, the counter is increased from 0 to 1 sprite #6 is displayed, When the counter reaches 8, score This routine knows to stop here even if the counter goes above 8. It won't try to display any score sprite with ID higher than #13. However, there are two enemies that don't use this common routine. The first of which is Rex, which just uses instead of calling the routine The only flaw of this implementation from bouncing off of a Rex, only the 1up sound plays instead of being accompanied sound. The second of which is wiggler, to cap the score sprite at ID #13. This means that you can go past the 1up, continue and eventually And even further after the five coin score the ID is still uncapped, to try to display score which results in glitched coin and score amounts being given. Let's look at these score sprites in more detail. There are seven tables in the game's ROM that correspond to the score The first two of which define the two 8x8 tiles that appear on screen There are 22 entries in the tables, one for each score for #0 which goes unused. For example, sprite #1 are tiles $83 and $44. That would be this blank tile and this ten tile, These go in order for all of the score and eventually the coin sprites since their graphics However, if we go back in time, in a previous iteration the coin sprites did indeed exist at exactly these locations. When the score sprite ID is #17 or higher, a coin sprite, an additional 8x8 tile is shown, which was supposed to be The next two tables define exactly how many points each score There are 17 entries in these tables--12 for the 12 actual score sprites, four for the 1up sprites, for #0 again. The coin sprites just don't since they supposedly don't award I'm sure this The 1up sprites also don't award points, in these tables The score sprites all define their amount of points So for example, the 10 point icon only gives 1 point. This is just how the score is stored The trailing zero in the status bar is purely graphical. The last three tables and are only used by subsets of the score sprites. One of them just lists how many lives each of the four 1up 1, 2, 3, 5. The next table just lists each of the five coin sprites give: 5, 10, 15, 20, 25. I'm sure these two tables with the scoring table somehow, since the 1up and coin sprites don't use the score at all, but that's The last table is interesting by two sprites: the 2up and the 3up. By default, all of the score sprites use a graphical attribute This makes the object tiles use the red palette by default. This small table has two bytes, $04 and $06. If the ID of the score sprite is #14 or greater, the value in this table overrides This is what makes the 2up yellow and the 3up blue. So now for the fun part where I explain Now I call it broken, but really it's just half implemented to be fully seen in the end. The only way to see score sprites is with this wiggler managing to get a ton of enemies to the goal tape when you hit it or using glitched powerup states to spawn in that 1up with a glitched The first thing that's wrong is the missing graphics These eventually got overwritten, so this is what they look like Secondly, applies Since the game only checks This means even score and higher will get the default $08 attribute value overwritten as well. This table only defines so all the other score this table out of bounds and start reading garbage data. In addition to palette data, the graphical attribute byte is also responsible horizontal and vertical flipping, which graphical This really mangles the graphics, up correctly because of this. Thirdly, the coin sprites are specifically coded in to also give points. This is due to a branch instruction that never got updated sprites were officially deprecated. However, this means do end up getting and that activating a coin a glitched number of points as well. For example, give 7680 points. The ten coin The 15 and 20 coin sprites give no points, sprite gives a whopping 450,560 And finally, there is no cap on Any score sprite with an ID greater than #21 is treated like a coin sprite, number of coins All of the tables we've looked at, aside from the lives sprites, get indexed out of bounds so the sprites will look glitched while giving wildly and points with each wiggler hit. It is not difficult at all to keep this up just one visit to Forest of Illusion 1 using this glitch. In fact, in a row to max out the score counter in the status bar. Thanks again for watching! As usual, the channel, you can become a channel As a supporter, you can get extra perks in addition to having your name show up here, such as early access to videos and behind the scenes content. I've recently started and some media resources, of my voiceovers. Even if you don't support monetarily, I still appreciate every view So thank you for your contributions!