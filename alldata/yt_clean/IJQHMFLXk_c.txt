Today I want to show you how you can in Microsoft Excel using something called applications. With macros you can and by learning macros, you'll We're going to start with how to record just a run it, how you can test it, how you could Then we'll also touch on some and setting up loops, and we'll look If you'd like to follow along today, I've and down below in the description. If you look at the definition of macro, a set of instructions to But what does that actually mean? The best way to understand is to use an example. Here I am in Microsoft Excel and I have an order is unfulfilled, basically I want to format it differently so it stands And once we fulfill the order, I'll change the here I'll highlight this row and then I'll go bold. I'll set it to italics. and let me apply an orange fill. If you were counting as I ran five separate clicks. Every time in order comes Now of course I can select this cell. and then I could paste the formatting So either way I'm still doing In this example, I would much or click on a button and then have Excel automate all of those different steps and that Now this is just an arbitrary example, but again and again in Excel and you well that's an excellent We're going to use something called a or all of these clicks into computer code Once we record our macro, you can launch You can press a shortcut key. You could also access it through a menu. running repetitive tasks again and again, and this was just a very simple example, but you Let's start with how to record a basic macro that First off, let's go up to the top tabs Over on the far right hand side, If we click on this drop down right here, Let's click on that. This opens up the record macro prompt and right Now of course that's not descriptive. Here I'll type in HighlightNewOrders. One thing to note with the name, you cannot I've capitalized the 1st letter of each word. different words. For the macro name you want to so when you go back later on and you look Down below you can also specify a shortcut so you could simply press keys on your keyboard You don't have to select a Here I see control + and then You could also press the shift key together with a letter and that way you can make your One note on shortcut keys, whatever combination in Excel, so you want to make sure you don't might already be using. If you're curious what all I've included a link in the description Next we can specify where we want to store only be connected to this workbook. macro workbook, which allows you spreadsheet you happen to have open. Lastly, Here I'll type in a quick description Once again, this is helpful if let's say you what each macro does, or it's especially useful someone else is going to run your macros. so I'll click on OK. My macro is now all of the difference steps. Here I'll go down I'll highlight the row. Once I'll go up to the ribbon. I'll apply my formatting. italics, underline, and I'll also apply the fill. steps, once again, I'll go I'll go over to macros and here I can click on five steps into just one click, let's take a are a few different ways that you can run macros. Here I'll make sure that this row is highlighted. I'll select the option that says clear Now that we've cleared the formatting, let's there are multiple ways to run a macro. the view tab up on top and all the way over on on the drop down and then select view macros. this highlighted, I can click on run or I'll click on run and there you see it just ran Once again I'll remove the formatting and this remember from earlier we set the shortcut key to automatically applies all of that formatting. this sheet and yet another way I can run this Here I have the Kevin Cookie Company logo on right here there's the option to assign a macro. the macro prompt and here I see I'll click on OK and when I click on this logo now Let's once again remove the formatting and run your macro and this time we're going to use have it enabled. Here on the ribbon, I'll right I have my quick access toolbar down I'll right click on the quick access toolbar Click on that. right here it's currently set to popular commands. for macros and here I see the macro that Here I'll add it to my quick access toolbar. choose a different icon for this macro and I think it would be appropriate I'll click on OK and I see it here in this list. Here now I see the button on my quick that also applies the formatting, so there You can choose whichever one you prefer. to save your workbook and this is a little bit Let's go up to the file menu in the top Here, within the file type drop down, but since we have a macro associated with this enabled workbook or .xlsm. type and then click on save. and ask the warning message up on top and it I created this macro so I'm not really concerned When I click on enable. make this a trusted document. when I open it in the future, I won't see that When you open a workbook like this, you'll want If it's from an untrusted source, When I recorded this macro, I used What this means is every it always highlighted this one specific row. whatever row I happen to be on? reference. To use a relative reference, first Once again, I'll go up to clear formats. Here I'll select this one right here. Go over to macros and let's Here I'll delete the macro that we've Here I'll click on yes, let's now go back up to for use relative reference. Let's now go back up here again, I'll type in HighlightNewOrders. to Control + Shift + N, and for now I'll save it blank. Now I'll click on OK. relative to where my active cell is. I'll highlight this row, I'll go up to home so I'll set it to bold, italics, I'm now all done applying my formatting. again I'll stop recording. I'll go up to home and let me remove the press my shortcut key Control + Shift + N. I'll go down a row, press Control + Shift + N, So once again it's no longer using an absolute It applies the formatting relative Congratulations, you just created your very Next, I want to show you how you can look at the you just created, let's go up to the top tabs Once again, all the way on the right-hand macros and click on view macros. and we can click on edit. Basic for Applications editor. We can also open that exact same window F-11 key. That opens up the same exact window. forth between Excel and your Visual Basic Editor. Next, I want to orient you to what Over on the right-hand side, this generated when we recorded our macro. you can go up to the view menu and you Over on the left-hand side If you don't see this by default, you can go to Here we see all of our different Excel objects, Down below, I see modules and every macro I can use the plus and minus sign to expand Down in the bottom left-hand corner, associated with any of these objects. I can go up to view and right here Let's focus back over on the and before we dig into this, let's adjust the To adjust the font size, let's go up to tools on Right over here you could select the I'll go with size 18 and then click on OK Let's now dig into the code. Up in the top So what is sub? subroutine and your macro is a subroutine, So here you see the top sub and And here's all of our code in between. single quotes and green text. These are comments that explain what the code macro and we see that it's referred to as a macro and these comments don't at all affect the code. say I can type my own comment and once It's a good practice, especially if you have explain what the different sections here I can see ActiveCell.Range("A1:E1").Select might think I'm selecting these specific cells, so here's looking at the active cell that I have cells A1 through E1, and then it selects it. Here I set them to bold. and then I also underline them and in this big So those simple formatting actions that we took Now we have complete control over this and that'll in turn modify the macro. it to bold anymore. Instead of saying I'll press Alt + F11 to go back to my workbook. And here, on the very last row, and here you'll see that it's no longer bolded. over the actions from this code. simply by recording, so you don't really but I still recommend that every time That way you become more familiar with it and Up to this point, we've been creating and viewing on macros over on the right-hand side. called developer that makes this even easier To turn this on, hover over your ribbon and right Over on the right-hand side, Check the one that says You should now see a new tab up on top that says all of the different developer tools and on the So this makes it even quicker to get to these far is attached to this one specific workbook. macro from anywhere, so whatever We can create our macro in something To do this, let's go up to the top tabs and click the left-hand side, let's click on record macro. HighlightNewOrdersEverywhere. and for store macro in, I'll select this drop down I'll place it in the personal macro workbook. Now that we are recording, I'll run I'll click on the home tab. I'll set it to bold, italics, underline I'll go back up to developer I've now opened up an entirely new workbook Here I'll click on the developer tab. HighlightNewOrdersEverywhere macro. in any workbook that I have. Here I can double Now let's say I want to edit Here I'm in the developer tab and I HighlightNewOrdersEverywhere macro. I get this error message that says I When I create a macro in the personal macro the scenes and so I can't edit it this way. Well, just like we did before, we Visual Basic here from the ribbon. left-hand side, I now see a new category in the all of my personal macros. Here when I click As a quick aside, let's say that you have a you would like to make this available everywhere. it over into this personal macro workbook and I everywhere. Back on the main sheet, next, I want recording your macro, and to do that, I'll open up I now have Excel open side by side with my takes up a lot of space, and so Luckily I can hide both of those. and I'll select collapse the ribbon. toolbar and here I'll select to hide it. to see my spreadsheet and the code. removes the formatting. Just like we've been Here I'll set it to use a relative reference and where I have the formatting that I want to remove. for the name, I'll type in ClearFormatting. just save it in this workbook. Next, I'll click on OK. notice that it now added a second module and It's now recording and let me run through Here I'll highlight this row and you Then I'll click on the Home tab and over Right up here you can see that these two commands will clear the formatting That's all I want this macro to do, and here I'll click on stop recording. one that highlights and another Instead, I want to set up a toggle, it'll remove the highlighting, and if there And to do this I can use an if statement. Here I am back in the Visual Basic editor and HighlightNewOrders macro. Down below in next I want to check have I already And we can use an if statement to check that. I'll only check whether it's been bolded, then I want to make it bold. So here so that's simply reusing this line down well then we take all of these actions down underline, and I'll set the fill color. Down at if it's already highlighted and it's already Here I'll enter a colon and now I have to say, Here if I click into Module2, we This will remove the highlighting. and here I'll paste it in. I'll select all this code This makes it a little bit At the very end, to close out my if statement And this now creates a toggle, so if it's not already highlighted, it'll clear the highlighting. the moment of truth. We're going to I'm going to press Control + Shift and there it applies the formatting. What if I press it again? will run the macro again, and because those cells Pretty cool. With this example, we took independently and then we brought them together for building together code. and then you could pull them all together. but what if I want to highlight multiple rows? open side-by-side with Excel and Once again I'll click on developer and here I'll turned on. I'll click on record macro and this I won't set a shortcut key. I'll leave it stored blank and then click on OK. Right up above, and I'm going to go through and apply these Here I'll click on the home tab. I'll apply the bold, italics, underline, see all of the code right up above. I'll highlight all these cells exact same formatting that I applied before. you probably notice some repetition. and here I'll highlight all of the cells and once done recording my macro. I'll click back onto You'll notice in the code there's a lot of the same step again and again and again, we I've now expanded the code so it uses a quick look at what's happening here. all of the formatting and as soon as I and then I do the same exact thing. and then once again I apply the formatting. what we've already done up above, and Instead, I can use a for loop to tell Excel to Right down below, let's delete all this point downwards, let's delete all of this. I'm ready to tell Excel how many times I we're going to use a for loop to do this. for and I'll type in a variable name. I'll set it equal to 1 and So with this I'm telling Excel that I want At the very bottom I have to close out the So it'll go through one time and then it hits It'll go through again. It'll go through again, it'll increment So I could tell it exactly how many times Let's now go back into our Excel sheet, out to see if it works as expected. cells and I'll remove the formatting. Let's click on macros and here I see my Let's click on run. And look at that, and it highlights all of those rows. how many times we want the for loop to run, but choose. For that we can use an input box. here once again I can see my for loop, how many times this code should run, and Here I'm going to create a I'll enter an equals sign and This will force an input box to appear where the Here I'll open up the parentheses and and I'll simply type in enter number of rows. and now I could enter a title for my prompt. that you can customize for this input box. Then I'll close my quotes and Whatever value the user enters in, that will be I want it to run to match whatever the user input UserInput. So let's say someone enters 6 in. Now that we've made these tweaks, let's jump back let's now test this out. let's click on macros and here I see my Here I'll click on run and I now see how many rows I want to highlight. And here we see that it went through 6 With the for loop, you have to But maybe we don't know how Instead we can use something These loops will continue running until a Here back in the code, I've created a new and at least right now this is the exact except this time I want to convert this to a do until a certain condition is met. and also the next counter, and to create a while and here I want it to continue running ActiveCell. We've used ActiveCell before. and I'll say until it's not equal to blank. to close out this loop, I can simply Let's go back into Excel. Within Excel, and over here, let's click on macros. HighlightNeOrdersDoWhile Here you'll see it goes through and it highlights at which point it finds an empty I want to show you yet one more type of loop a slight variation on the do while loop. macro titled HighlightNewOrdersDoUntil. we'll change this to do until. and we're going to do this until we Here I'll type in IsEmpty. available within Visual Basic and here I'll check Down below we close the loop with loop You can choose whichever loop you Within Excel, o nce again, let's test this out. I'll click on macros and let's Here I'll click on run and it works It's just a different way of structuring it. You know how to create if statements Next, let's bring everything together in a more you have all the skills and tools Here I am back in Excel and I have a whole bunch on the bring it all together sheet and if you look Here I continue repeating the header I would much rather format it so it matches the and let's imagine that maybe I get a new set week I end up manually reformatting this data. know all about macros and we're going to use this data into the proper format. we're going to break this up into chunks, and I want to get the headers so they appear properly. let's go up to the developer tab, Also make sure that use relative reference reference. Here I'll click on record macro. For I won't select a shortcut key and I'll leave OK. Over on the left hand side, here I'll so these five different rows. I'll copy I'll click on the home tab up on top, I'll go down to paste special and right here I'll vertical orientation to a horizontal orientation. so I'll click on the developer tab up on top. Then the macro works properly, let's test this out. I'll right click and let me I'll go up and click on macros and let's I'll click on run and there it This is exactly what I expected. next I want to transpose the customer At the end, we'll bring all of Once again, let's go up and click on record macro and for this macro I'm going to I also want to make sure that I won't set a shortcut key and Then I'll click on OK, and here I'll select cell and one thing I'm going to change now is I and here I'll select all of the customer Then I'll click over to D2. I'll click on paste and once again let's go to So this space in the customer order and there's We're going to use a loop to go but for now I simply want to copy and paste over a we can see the repeating code. Here I'll I'll press Control + C and then I'll come over to and then I'll click on transpose. Once again, click over into D12, go to paste, paste Once we jump into the code, we'll see some of going to insert the loop. Why am I leaving all of this space in Shouldn't I just paste right Well, once again we want the code to be repetitive up here, well, each time that I paste it, and that's not repeatable with code. the right of the top line of the customer order that'll remove these spaces. I'll go up to the developer tab Before we jump into the code, let's test our again, I'll select columns D through H, I'll I'll go up to macros and first we I'll run that and now we have the headers. let me click on TransposeCustomerOrders. We're now ready to add a loop, so we add all of and to do that, we're going to Just like we've been doing all along, let's Here we are back in the Visual Basic editor and Here I see the macro for transposing the headers associated code for transposing the customer I want to set up a loop so it goes through Let's look through the code to see Right up here I select cell B2 and this made this an absolute reference is we always From there we switch to a copy the next five rows of customer information. it under the headers and right down here we then We set Cut Copy mode to false So right here I see Selection.Copy Here if I look at this code all the way down, we so this is our repeating section of code so we So here I'll delete the repetitive portions all this was the repeating portion of code To create the loop once again, we could use You could create a for loop, a do while, or a do simply run this loop until we hit an empty cell. customer information. Here, I'll type in, do while and here To close out the loop down at the bottom here, loop in place and we're ready to test this code. let's test this out to ensure everything technique where you can test it line by line. Visual Basic editor, so as the code runs Before we run the code, let's delete Here I'll highlight the data and I'll go through Now we're ready to test it. Visual Basic editor and make sure your cursor Right up here there's a menu called debug You can also use the shortcut key F8. and as it runs through line by line, we'll I'll press the F8 key and here we see I'll press F8 again and we'll see each line and as I press it we can see that it's can see the associated changes. So here we see that it's currently in the loop that empty active cell. Now if you get tired entire block of code. Right up above, you can key. Here I'll click on that and it'll run Here when I scroll up, I can see that the information under the headers. but we do have to record one more macro. remove them. To remove these blank rows, once let's use an absolute reference because I reference these specific columns. I'll turn on record macro and for this macro I'm I won't set a shortcut key, I'll store it Here I'll select columns D through H. Let's click on the home tab and on the right and right here we can select all blanks. With all of the blanks selected, I'll It asks me how I want to delete it. then I'll click on OK and here you see all of Next, let's go up to developer We're almost done. to combine these three macros into one. it'll run through all of these steps. Alt + F11 to jump into the Visual Basic editor. that you see right here. Here I'll take the name of the first macro and This will be the macro that Down here instead of ending the macro, I'll also delete the start of the next macro, and Down below I'll do the same Here I'll get rid of the end and I'll and this has now effectively combined the three let's test out this combined macro. I'll right click and I'll delete all Let's go up to macros and here I see my Let's click on run and there it goes through and all of the headers, the customer information, This is exactly the format that I want my data have noticed that the screen showed all of the and that slows things down a little bit. can turn off screen updating. To turn off screen I'll type in application screenupdating = false see it running on the screen. That'll Let's test it out. Once again, in Excel Let's go back up to macros and here all run So it goes a lot quicker and we don't have to One thing I want to call out before I leave you. You can't undo the macro. to be destructive to your data, use extra caution All right, well, that's how easy it is to And you probably feel a little bit To see more videos like this one, Also, please consider subscribing