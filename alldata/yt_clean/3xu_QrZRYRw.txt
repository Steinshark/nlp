It's now been almost exactly two years since ChatGPT was released and changed a lot. I guess that's fair to say. It really started another AI hype and revolution, you could say. Now, based on all that progress, we also got many tools like GitHub Copilot or the Cursor AI IDE that leverage AI to make us, you and me, developers more productive. Now, of course, it's important to say that GitHub Copilot actually already existed before ChatGPT was released, but it became better since then and new capabilities were added like the chat, which you can use in your editor so that you don't have to leave it and go to ChatGPT or one of the many other popular AI chatbots and services. And of course, we also saw the rise of services and tools like Repl.it or Bolt.new or V0, which can help you with generating entire applications or bigger chunks of applications, which can help you with styling and generating UI components, which is also a very interesting use case, especially since services like Repl.it also try to use AI agents to solve more complex tasks and break them up into smaller problems on their own automatically. So that's all interesting. Now, of course, as maybe many developers, I've been playing around with all these AI tools heavily over the last two years, and especially GitHub Copilot and Cursor really became an integral part of my day-to-day work as a developer. I'm not using AI tools to generate entire applications because whenever I tried to do something like this, the results were not great. Yeah, you can generate to-do apps, you can generate nice landing pages, all that works, but that's not really an entire application, sorry. But with GitHub Copilot and Cursor, I really got some tools that made me more productive, I'd say, because with those tools, I'm still in the driver's seat. I still decide which features I want to add, where I add them, which coding style I want to enforce. I still write most of the code, definitely the difficult parts of the code, but these tools then simply speed me up and make sure that I don't have to write as much boilerplate code. With Cursor's amazing auto-completion, where you can just hit tab, tab, tab, tab all the time, I also got a tool that really helps me with refactoring, for example, because I make a change in one place and it understands what I'm changing and suggests appropriate changes in other places in the same file, so that's really amazing. I also love Cursor Composer, which is a great way of implementing features that affect multiple files and previewing those changes, it's really great. And therefore, I can only recommend trying out tools like this if you're not doing it already. It's probably too early, and in my opinion, we will not get there for a long time, to really generate entire applications with just these AI tools. I would say if you don't know how to write code, these AI tools will still not allow you to build anything that's not super trivial, at least if you're building something that's not super trivial and you don't know how to write code, chances are high that you'll have lots of bugs, security issues, and other problems, performance problems, for example, so knowing how to write code helps a lot, but if you are a developer, you can really become super efficient if you leverage those AI tools as extra tools in your tool belt, because that's in the end what they are. And that's also why I created a brand new course, which I launched, where I teach you and everyone who's interested to use GitHub Copilot and Cursor and a bit of ChatGPT as a developer to boost your productivity. Now, you of course don't need that course if you've been using these tools heavily for the last months yourself, but if you only barely scratched the surface, if you're not sure what exactly Cursor has to offer, and if you want to learn about some tips and tricks and simply about how I use these tools and how they make me more efficient, then this could be a great course to learn all these things. It's a concise five-hour course, so nothing that will take you ages to complete. We built a complete demo project, a Node.js REST API in this course, though you don't need to know Node.js because it's not so much about the code but instead about writing code with help of AI tools and therefore I think it's an amazing course for developers, so for people who know how to write code who want to do that more efficiently with help of AI. Because of course AI is here to stay, if you hope that it will go away that will not happen. Now personally I'm not convinced that the AI revolution will continue at the pace it did in the past or it started. I know that there are lots of people who tell you that AI will only become more capable in the future and that is of course true but the question is how much more capable and it would still need to become way way way more capable to really run or build entire applications fully on its own. It's possible, I know exponential growth and so on but I personally am not convinced that we really will see that exponential growth. It might also be a plateau. Either way those AI tools we can use as a developer, GitHub Copilot and Cursor mostly are really helpful. You still have to be critical. They do generate code that's wrong or simply not great. They do give you wrong suggestions so don't trust them blindly but that's exactly my point. If you do know how to write code, if you are a programmer, you can get the best of both worlds. Your knowledge, your expertise, your experience combined with those tools that can simply help you write code quicker and that's really amazing. So definitely give those tools a try. Do take a look at my course to learn how to use them efficiently and most importantly make sure you're back for the next episode here as well. So have a great day. Bye!