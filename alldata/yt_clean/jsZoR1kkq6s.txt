Hello, my friends today we are gonna talk about how to use the most important vs code shortcuts to increase our productivity. If you are a beginner, using a mouse and regular shortcuts are okay but if want to be more professional you must learn how to use your keyboard effectively but don't worry, after this video, you are gonna be much faster. If you are ready, let's get started. Firstly, when you open your projects, most probably, you are clicking here and searching for your folder. not this one it's gonna be hotelApp But, If you have a lot of folders here, it can be a waste of time. So what I'm gonna do is opening my terminal -By the way, you can do this using ctrl+` buttons- and writing here &quot;code&quot; and my app name which is hotelApp I'll enter And that's all. It's here. If it's in another folder, I'm gonna go to the desktop, and my project name. it's that easy. By the way guys, during this video, You ll probably think that using a mouse is easier and faster. Well, for a couple of weeks after starting using shortcuts, you are right. It's gonna be hard for you. But once you get used to it, you'll see how fast you are and you will regret that you didn't use them before. Okay, let's go on. After opening the project, you will probably use different files at the same time. index, style, and js file. Let's say I'm writing some code here. I'll say &quot;div&quot; and class name will be &quot;myDiv&quot; And I want to give a style for this div. Instead of clicking here, writing my style and coming back, creating another one. and going back again. Basically, instead of doing this with the mouse, I can use my keyboard and I can use tab numbers. Number 1, 2 and 3 I can use &quot;alt&quot; button And if I press on 1, As you can see it's in the index file. It's gonna work like that. If I create here another div I can quickly go to style.css, and write other divs. But what if we have many files here. We are working with multiple pages, multiple css files or js files I cannot count them like that. So what I'm gonna do is, using ctrl+p and writing here some letters of my target file As you can see I can go to &quot;contact.html&quot; quickly ctrl+p I want to go to the app.js or style.css It's that easy. You might say selecting here is easier. But imagine, you have many pages, folders, files Instead of searching for them in the sidebar, Just use ctrl+p and search for it. And after working for a while, You'll probably have many tabs here. To prevent this, after finishing your task, You can close them using ctrl+w like that. In this case it's gonna close them one by one. And if you want to close all tabs here, You can use ctrl+k+w Like that. It's gonna close everything. By the way, if you are creating a folder, Let's say &quot;folder&quot;. And inside another folder. And inside this, maybe &quot;myFile&quot; Instead of doing this. Let's delete here. I can come here, and say: folder/folder2/myApp.js In this case, it's gonna create those folders, and inside, this file. So, you don't have to waste your time. If you want to see more coding areas, you can close your sidebar using ctrl+b And you open it again. Like that. And you can zoom in or zoom out using ctrl - or ctrl = And let's say you have a lot of HTML elements here. And, it's not possible to remember every class name here. Instead of going style.css again and again, You can basically split your editor using ctrl+\ In this case, to switch between different slices, you can use ctrl and slice number. It's gonna be slice number 1 Slice number 2. So, if I say ctrl+1 we are here. ctrl+2. We are here. If I come here and close this tab using ctrl+w Right now I can see my class names here and I can give styles for them. By the way, guys we are gonna talk about a lot of shortcuts. As I said at the beginning. It's gonna be hard to memorize all those things but I promise you after coding let's say for one month with these shortcuts. You will not even recognize that you are using them. You are gonna be a robot. Okey. Let's say, you want to install a library or basically you want to push your project to Github. So, what you can do is opening terminal. (ctrl + `) When writing any command here, if you have any mistake, Let's say &quot;giit init&quot;. As you can see, there is a typo here. It's gonna give me this error. Instead of writing this again, You can just use your arrow keys, and it's gonna repeat the previous command. And you can come here and fix it. If you want to clear your terminal. You can write here: &quot;clear&quot;. And enter. Okey. Let's see how we can be faster while coding. I'm gonna delete here.