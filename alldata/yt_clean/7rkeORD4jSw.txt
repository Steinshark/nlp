What is RabbitMQ, and what makes it one My name is Whitney Lee. I'm a Cloud Developer here at IBM. Before I dig in, please, don't So, let's travel back in time to Back then, application components That means they were directly connected. So, in a simple retail application, if we had with an inventory service, that usually through a TCP connection. So, this had some limitations. As soon as the checkout sent the message, it would need to hear a reply before Or worse, if the inventory service went until it was able to make that connection. Or, if a lot of checkouts happened at once the and the whole system would get bogged down. So, that's why message queues were and those will sit, a message queue sits to communication with one another. So, with a message queue, a checkout and then immediately move on to the next task. And then similarly, the inventory, when process the message and then So, this is going to decouple A message broker is also going So, the inventory...if a lot of checkouts you can have more than one consuming service to read from the queue to handle the amount and that's going to make Another big benefit of message queues is that So, in that case, it can offload some of and make the whole system more performant. So, let's talk about RabbitMQ. RabbitMQ is an implementation that's Advanced Message Queueing So, with this type of message model, the service that produces the messages, instead it's going to produce to an exchange. So, you can think of an exchange It's going to receive all the messages and then distribute them An exchange could be connected to many And then, the queues are connected to So, we'll have one called inventory and then we'll do one called shipping So, the checkout will send The exchange is connected to queues and these bindings can be And then our consuming applications -- or, consumers, consuming services So, AMQP, RabbitMQ this is the message One thing that's great about this with which the messages can move through the to the different types of exchanges available. So, the first type of exchange that With a fanout exchange, checkout the exchange will duplicate the message and send Or, we have a direct exchange. With the direct exchange, the checkout that message will get a routing key. So, with a direct exchange the routing and if it's an exact match, then the message Next, we have a topic exchange. With a topic exchange, we can do a partial match So, if we had a routing key on and the binding key was called ship.any that message would get routed There's also a header exchange. With a header exchange, the routing key is through the system according to the header. And then finally, we have a default exchange. This exchange is unique only to RabbitMQ. It's not part of the AMQP message model. So, the default exchange is And with the default exchange, the routing key, let's say the routing key The routing key is getting tied So, if this queue is named inv, then the So, there are a couple of main benefits of and one is a tremendous amount of flexibility In fact, they say you can design your system and then later configure it RabbitMQ to to know RabbitMQ's limitations and Also, with other message brokers the up the message model, that's when all through the system, that's But with RabbitMQ, the way the message moves through the system is largely So, in this case, it's the application and with the way messages move through the Another great benefit to RabbitMQ It is easy to get started. You can deploy an instance of it on It also can run as a cluster, so highly available and has high throughput. RabbitMQ can do cross language communication. So, if a message is produced by a checkout in JavaScript and consumed And really the possibilities are endless. It has a very extensive library. It has good security. It supports FASL, LDAP and TLS for It does message acknowledgements. So, message acknowledgements, when a message the message stays in the queue until that it has received the message. And only then is the message and that prevents the system It has great management. So, right out of the box you have a as well as incentive CLI tools. Not only that, but the open source that really enrich the management And speaking of that open source that can enrich most aspects of RabbitMQ. There are many tools created, it's so evolved that RabbitMQ now So, not just AMQP 091 but you can do So, this has been an overview of RabbitMQ. The big takeaways for you are the through the system; the fact that the through the system as opposed and then, it's also super cloud friendly. Thank you. If you have questions, please If you want to see more videos like this And don't forget, you can grow your skills and browser based, interactive Kubernetes labs.