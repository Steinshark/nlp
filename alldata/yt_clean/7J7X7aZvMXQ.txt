Have you ever wondered what's happening inside game? Well, millions of operations are happening, data from a solid-state drive or SSD into dynamic the programs and data for long-term storage, it has to first move the appropriate hence the loading bar. Because your CPU works it's also called working memory or main memory. DRAM is because Solid-State Drives permanently trillion or so memory cells, yielding terabytes of 2D arrays composed of billions of tiny capacitor Accessing any section of cells in the massive about 50 microseconds whereas reading or cell takes about 17 nanoseconds, which is 3000 going at Mach 3 is around 3000 times faster 17 nanosecond DRAM versus 50 microsecond SSD is However, speed is just one factor. DRAM is one bit per memory cell. For example, this stick whereas a solid-state drive of a smaller than 100 times that of DRAM. Additionally, and refresh the data held in its capacitors. by spending a few seconds of loading time and then prefetching, which is the process of store terabytes of data on the SSD and then access copied into the DRAM in a few nanoseconds. time to start up the game itself, and then a During the process of loading a save file, all your game state are moved from the SSD into DRAM which is why video games have DRAM capacity playing a game would be 3,000 times slower. so in this video, we're going to take a deep we'll see exactly how the CPU communicates we'll open up a DRAM microchip and see how banks and how data is written to and read from dive into the nanoscopic structures inside capacitor physically stores 1 bit of data. optimizations such as the burst buffer and folded at incredible speeds. A few quick notes. GPUs, Smartphones, and many other devices, but GPU DRAM or VRAM, located all around the read and write simultaneously, but operates at is stacked on top of the CPU and is optimized for Second, this video is sponsored by stick of DRAM to model and use in the researched and not influenced by them. in your CPU called cache memory and even faster memory hierarchy, with the main trade-off prices affordable to consumers and optimizing Fourth, you can see how much of each program by opening your computer's Fifth, there are different generations of DRAM, that we explain apply to prior generations, Sixth, 17 nanoseconds is incredibly fast! nanosecond, and 17 nanoseconds is about the Finally, this video is rather long as it covers recommend watching it first at one point two one and a half speed to fully comprehend this is going to be an incredibly detailed video. Inline Memory Module or DIMM and there are 8 motherboard, there are 4 DRAM slots, and when the CPU via 2 memory channels that run through slots share these memory channels, and the right look inside the CPU at the processor. Along we find the memory controller which manages a separate section for communicating with SSDs hard drives plugged into SATA connectors. Using the CPU manages the flow of data from to cache memory for processing by the cores. For DDR5 each memory channel is divided into two channels A and B independently transfer 32 bits at wires each memory channel carries an address 7 control signal wires, commands are relayed. by all 4 chips on the memory channel which lines are divided among the chips and thus each Additionally, power for DRAM is managed by these chips on the stick itself. DRAM microchips. Inside the exterior packaging, the ball grid array at the bottom with the die gigabyte DRAM die is organized into 8 bank groups Within each bank is a massive array, 65,536 memory and columns in a grid, with tens of thousands of each bank. Instead of looking at this die, we're and then reorganize the banks and bank groups. we need a 31-bit address. 3 bits are used to to select the bank. Next 16 bits of the address thousand. Because this chip reads or writes 8 8 memory cells, all read or written at a time, the column address. One optimization is that and sent using only 21 wires. First, the bank after that the column address. Next, we'll look let's briefly talk about how these structures are This incredibly complicated die, is manufactured on 300-millimeter silicon wafers, of nanoscopic memory cells that are fabricated a semiconductor fabrication plant or fab. This a quarter of the world's DRAM, including both has its own product line of DRAM and SSDs under is the sponsor of this video. In addition suppliers of solid-state drives such as this operating system and video games on a Crucial incredibly fast loading times and smooth gameplay, files are on a fast SSD like this one as well. loading is predominantly limited by the speed of For example, this hard drive can only transfer this Crucial NVMe SSD can transfer data at a for comparison is the speed of a moving tortoise SSD, loading a video game that requires gigabytes a couple seconds. Check out the Crucial NVMe Let's get back to the details of how DRAM works situated in a massive array. This memory cell is in size. It has two parts, a capacitor to store or electrons and a transistor to access and read deep trench dug into silicon and is composed of insulator or barrier just a few atoms thick, which fields to pass through. If this capacitor it's a binary 1, and if no charges are present this cell only holds one bit of data. Designs this trench capacitor, the depth of the silicon is while taking up as little area as possible. add in two wires. The wordline wire connects to connects to the other side of the transistor's turns on the transistor, and, while it's on, connecting the capacitor to the bitline. This to write a 1 or discharge the capacitor to write in the capacitor by measuring the amount of the transistor is turned off, and the capacitor data or charge that was previously written. Note only a few dozen nanometers wide, electrons slowly capacitor needs to be refreshed to recharge refreshing memory cells works a little later. one of 17 billion inside this single die and is let's build a small array for illustrative is connected in rows, and then the bitlines are are on different vertical layers so one can Let's simplify the visual and use symbols for the the wordlines connect to each transistor's control connect to the channel opposite each capacitor. all the capacitors in only that row are thereby activating all the memory cells in that active because, if more than one wordline were would be connected to the bitline and the data interfere with one another, making them useless. are 65,536 rows and 8,192 columns and the 31-bit memory cells. The first 5 bits select the bank, to activate a single row. For example, this thus turning on all transistors in that row and while at the same time the other 65 Here's the logic diagram for a simple decoder. to the column multiplexer. This multiplexer depending on the 10-bit address, connects a and output IO wires at the bottom. For example, bitlines 4,784 through 4,791 would be connected bitlines would be connected to nothing. Here's We now have the means of accessing any to understand the three basic operations, two elements to our layout: A sense amplifier write driver outside of the column multiplexer. cells. First the read command and 31-bit address bits select a specific bank. The next step is thereby isolating all the capacitors, and then the 16-bit row address turns on a row, and all bitlines. If an individual capacitor holds a 1 from the capacitor onto the .5-volt bitline, and amplifier then detects this slight change amplifies the change, and pushes the voltage on if a 0 is stored in the capacitor, charge and the .5-volt bitline decreases in voltage. amplifies it and drives the bitline voltage down necessary because the capacitor is so small, capacitor needs to have an additional component Now, all 8000ish bitlines are driven to 1 charge in the capacitors of the activated Next, the column select multiplexer uses corresponding 8 bitlines to the read and voltages over the 8 data wires to the CPU. to reading, however with a few key differences. be written are sent to the DRAM chip. Next, just are isolated, and the bitlines are precharged a single row is activated, the capacitors perturb and drive the bitlines to a 1 or 0 thus opening multiplexer, but, this time, because a write specific 8 bitlines to the write driver which the data wires and requested to write. These amplifier and thus they override whatever voltage the 8 bitlines to 1 volt for a 1 to be written, overrides the previously stored charges or values thereby writing 8 bits of data to the memory Three quick notes. First, as a reminder, writing chips in the shared memory channel, using but with different data wires for each chip. is actually 1.1 volts, for DDR4 it's 1.2 volts, with the bitline precharge voltages being when writing or refreshing a higher voltage, capacitor for a binary 1 because charge leaks going to stick with 1 and 0. Third, the number varies widely between different generations Let's move on and discuss the third operation As mentioned earlier, the transistors used to and thus charges leak across the channel. The sequence of closing all the rows, precharging To refresh, just as before, the capacitors perturb the bitlines and capacitors of the open row fully stored value of the capacitor, thereby refilling precharging, opening, and sense amplifying happens until all 65 thousandish rows are refreshed complete. The refresh operation occurs because that's statistically below the cell to leak too much charge to make a stored 1 Let's take a step back and consider the through DRAM memory cells. These banks of memory requests to read and write data every second bank row by row around 16 times a second. and illustrates the true strength of computers. arithmetic, and moving data around, but Now, you might wonder why computers take this video game for example. You have obvious and the horse. But then there are individual positions and geometries are stored in DRAM. and shadows change the colors and textures of the Next, we're going to explore breakthroughs and fast. But, before we get into all those if you could take a second to hit that like and type up a quick comment below, as it helps get and would appreciate any support. This is our planning more videos that get into the inner without your help, so thank you for watching and The first complex topic which we'll explore parameters on the packaging of DRAM are. sub-arrays, and folded DRAM architecture Let's take a look at the banks. As row within a bank requires all these However, if a row were already open, we 8 memory cells using only the 10-bit multiplexer. When the CPU sends a read or it's called a row hit or page hit, and this we skip all the steps required to open a row, and different set of 8 columns or bitlines, connecting a considerable amount of time. A row miss is which requires the DRAM to close and isolate the On a package of DRAM there are typically 4 numbers precharging, and row misses. The first number address with a row open, thus a row hit, to The next number is the time it takes to open bitlines are precharged. Then the next number before opening a row, and the last number is the following precharge. Note that these Row hits are also the reason why the address is row address called RAS and then the column address and row address, matches a currently open row, column address and the new command, and then the Because of the time saving in accessing an and compilers are optimized for increasing the called thrashing, is when a program jumps around and is obviously incredibly inefficient Additionally, DDR5 DRAM has 32 banks for sense amplifiers and row decoders operate rows from different banks can be open all at the and reducing the average time it takes for the CPU bank groups, the CPU can refresh one bank in each thus reducing the impact of refreshing. are banks significantly taller than they are one next to the other you can think of this chip thousand columns wide. And, by adding 31 equally creating banks, we allow for much more flexibility Also, note that on the DRAM packaging are millions of data transfers per second, which data transfer rate in Megabytes per second. is the burst buffer and burst length. Let's add a called a burst buffer to our functional diagram. we're going to have 128 wires that connect the 10-bit column address is broken into two and 4 bits are for the burst buffer. our burst buffer in place, 128 memory cells and the 6 column bits, thereby temporarily loading, Using the 4 bits for the buffer, 8 quickly are connected to the read drivers and the data is all 16 sets of 8 bits are read out, and thus the bitlines and values are connected and loaded burst buffer which operates in a similar way. 8 bits per microchip, totaling 1024 bits, can be as long as the data is all next to one have the granularity and ability to access any The next design optimization is that this bank and results in extremely long wordlines and each trench capacitor memory cell. Therefore, blocks 1,024 by 1,024, with intermediate and subdividing wordlines and using a hierarchical the distance and amount of wire that each tiny bitline to the sense amplifier is reduced, and subdividing the wordlines the capacitive load from decreased, and thus the time it takes to turn on The final topic we're going to talk about is a sense amplifier connected to the bottom of bitlines per column going to each sense amplifier the left and right bitlines, thus doubling the half of the bitlines are active while the other is active. Moving down to see inside the sense does this work? Well, when the active bitline is cross-coupled inverter to the opposite value becomes a 1. Note that the inverted passive and thus it doesn't mess up any stored data. The two bitlines are always going to be opposite pair. There are three benefits to this design. all the bitlines to .5 volts and, by having a the easiest solution is to disconnect the cross two using a transistor. The charge easily both average out and settle at .5 volts. and a reduction in parasitic capacitance of the that by creating two oppositely charged electric the other we reduce the amount of electric fields the ability of the sense amplifier to amplify One final note is that when discussing DRAM, command signals and data, and the related or Synchronous DRAM. These topics were omitted additional 15 minutes to properly explore. pretty much it for the DRAM, and we are grateful the future will require a strong emphasis on our Patreon and YouTube Membership Sponsors support us on YouTube Memberships, or Patreon, A huge thanks goes to the Nathan, Peter, and Institute for Cybersecurity Research for helping do foundational research on finding the weak is compromised. If you want to learn more about the website using the link in the description. animations that dive deep into the technology that video by clicking one of these cards or click here