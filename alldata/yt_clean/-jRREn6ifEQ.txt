Translator: Cynthia Betubiza Code is the next universal language. In the seventies, it was punk music In the eighties, it was probably money. But for my generation of people, software is the interface And that means that we need a radically, radically to build those products, to not see computers as mechanical to see them as things and turn around and twist, My personal journey into the world started at the tender age of 14. I had this mad teenage crush and the older man in question the then Vice President And I did what every single I wanted to somehow so I built him a website, it's over here. And in 2001, there was no Tumblr, there was no Facebook, So I needed to learn to code in order to express And that is how programming It started as a means of self-expression. Just like when I was smaller, And when I was older, I would use But then, there were other boys, like poetry and knitting socks and conjugating French irregular verbs and coming up with make-believe worlds and Bertrand Russell and his philosophy. And I started to be one of those people who felt that computers Here's what I think today. Little girls don't know that they Little girls are amazing. They are really, really good and being exact and they ask &quot;What?&quot; and &quot;Why?&quot; And they don't know that they It's the parents who do. It's us parents who feel like computer science that only belongs to the mystery makers. That it's almost as far removed as, say, nuclear physics. And they are partly right about that. There's a lot of syntax and algorithms and practices, protocols and paradigms in programming. And we as a community, We've built layers and layers between the man and the machine to the point that we no longer or how to talk to them. And we do teach our kids we teach them how and we even tell them you can become one. But when the kid comes to us and asks, &quot;So, what is a bubble sort algorithm?&quot; Or, &quot;How does the computer know how does it know which video to show?&quot; Or, &quot;Linda, is Internet a place?&quot; We adults, we grow oddly silent. &quot;It's magic,&quot; some of us say. 'It's too complicated,&quot; the others say. Well, it's neither. It's not magic and it's not complicated. It all just happened Computer scientists built but they made them and also the language we speak so that we don't know without our fancy user interfaces. And that's why no one recognized that when I was conjugating I was actually practicing And when I was excited about knitting, I actually was following that included loops inside of them. And that Bertrand Russell's lifelong quest to find an exact language found its home inside of a computer. I was a programmer, but no one knew it. The kids of today, they tap, swipe But unless we give them tools we are raising only consumers And I believe that, instead of grammar lessons, This whole quest Her name is Ruby, she is six years old. She is completely fearless, And every time in trying to teach &quot;What is object-oriented design I would try to imagine how a six-year-old And I wrote a book about her and the things Ruby taught me that you're of the bugs under your bed. And even the biggest of the problems are a group of tiny problems And Ruby also introduced the colorful side of the Internet culture. She has friends like the Snow Leopard, who is beautiful but doesn't want And she has friends like the green robots And she has friends like Linux the penguin who's really ruthlessly efficient, And idealistic foxes, and so on. In Ruby's world, you learn And, for instance, computers so the way Ruby would teach This is Ruby's favorite dance move, clap, clap and jump.&quot; And you learn counter loops And you learn while loops while I'm standing on one leg. And you learn until loops until mom gets really mad. (Laughter) You learn decomposition skills and seeing what went wrong You learn that algorithms And most of all, you learn When coming up with the curriculum I needed to really ask the kids and what kind of questions they have and I would organize I have three little stories for you I would start by showing the kids I would show them a picture of a car, a grocery store, a dog and a toilet. And I would ask, &quot;Which one of these And the kids would be &quot;None of these is a computer. I know what a computer is: it's that glowing box in front of which mom or dad But then we would talk and we would discover it has a navigation system inside of it. And a dog - a dog but it has a collar and the collar might have And grocery stores, they have like the cashier system And kids, you know what? In Japan, toilets are computers and there's even hackers who hack them. (Laughter) And we go further and I give them these little stickers And I tell the kids, to make anything in this room And again, the kids go, &quot;Sounds really hard, But I tell them, &quot;Don't worry, your parents don't know They've just started called The Internet of Things. But you kids, who are really going to live up in a world Your washing machine, toothbrush, And that you're the last generation as a glowing box. And then I had this little girl and took a bicycle lamp and she said, &quot;This bicycle lamp, it would change colors.&quot; And I said, &quot;That's a really good idea, And she thinks and she thinks, and she goes, &quot;If this bicycle lamp we could go on a biking trip and we would sleep in a tent and this biking lamp And that's the moment I'm looking for, not the moment when the kid writes the moment when the kid realizes that the world that a really awesome way is by building technology and that each one of us Final story, we also built a computer, the glowing box, And we got to know the bossy CPU that help it remember things. And after we've assembled we also design an application for it. And my favorite story is this little boy, he's six years old and his favorite thing in the world And the boy, he has and he's completely immersed because you see, he's built his own intergalactic planetary And his father, the lone astronaut is on the other side of the room and the boy's important mission is to bring the father And these kids are going to have and the way we build it with technology. Finally, the more approachable, and the more diverse the more colorful and better Because disruption Disruption starts And computer science, and programming the very DNA of all of these things Computers, after all, who were really, really good And still today, programmers only for the machine to execute. They write the code for other So, imagine with me, for a moment, a world where the stories we tell about how things get made the twentysomething-year-old but also Kenyan schoolgirls Imagine a world where who live in a permanent they grow up to be very optimistic They embrace the powers and the limitations of the world. A world of technology and a tiny bit weird. When I was a girl, I wanted to be a storyteller. I loved make-believe worlds and my favorite thing to do was to wake up in the mornings In the afternoons, And in the evenings, And programming turned out I still create worlds. Instead of stories, I do them with code. Programming gives me this amazing power to build my whole little universe with its own rules Create something out of nothing And that probably makes me a poet. Thank you. (Applause)