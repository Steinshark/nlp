Sometimes when building out your home lab, you can get tunnel vision to where you are so focused on the tasks or next set of challenges that you forget to take a step back and look at the bigger picture. That's how it's been for me ever since I started using Proxmox for my hypervisor and operating system for all of my servers. And I never really considered any other options after doing that initial evaluation. But then I kept hearing about Unraid from, like, Linus in the home lab community. Now I had an idea of what it was, but I never really considered it. I didn't think it would be able to fit all of my use cases. Or will it? Today I decided to give Unraid a shot. That's right, I wiped one of my servers and I installed Unraid to see what it's all about. This was my first time experiencing it and to keep it as authentic as possible, you're going to see both my successes (this is nice, this is a nice touch) and my struggles, but I feel like I should have been able to figure it out within, I don't know, 2-3 minutes as I use Unraid for the first time. Now this is probably a good time to let you know that this video is not sponsored. Unraid has no idea that I'm doing this video and probably has no idea who I am. Also, I bought this license with my own money. Money that you helped me with by becoming a channel member on YouTube, supporting me on Patreon and GitHub, and even purchasing merch from my newly launched merch shop. So, thank you. So if you're not familiar with Unraid, at its core, it's a Linux-based operating system that you can run on your own hardware. It provides roles like an As, which makes storing files over the network easy, to an application server by running Docker and providing an app store with hundreds of preconfigured apps, and even a virtual machine host to let you virtualize and run Linux or Windows inside of this machine. That being said, it's not free and you will have to purchase a license or start a 30-day free trial. To install Unraid, you'll need to install it on a bootable USB drive. They have a USB creator for both Windows and Mac and that prepares your USB drive and installs Unraid. I kept most of the defaults and then imaged it, which downloaded the image and then wrote it to the USB drive. One thing to note about this USB drive is that your license is tied to the USB drive and not your machine. This means you want to make sure you back up this drive often, which is simple to do in the UI later. Before installing, they also suggest to change some BIOS settings for getting the most out of your install, like turning on IOMMU, now you're speaking my language, and other details that might help. My server had all of this configured already since it's ready to run Proxmox, but even if you have all of these settings enabled, you'll want to be sure to set your USB drive to boot first. To test out Unraid, I'm going to use my server build that I've been working on, where I'm trying to decide which operating system to put on it for my application server. Subscribe if you want to see that, but it's a Storinator case with an Intel Xeon, 128GB of RAM, dual 10GB NICs, and slightly modified to fit an Nvidia 3090 and 15 SSDs. I figure this will be a good starting point. So after plugging in the USB drive to my server, I booted for the first time and smashed the virtual F11 key on my server's IPMI. Once booted, I could see that I didn't have an IP address and it looked like I might need to fix something. This ended up being configuration on my end that I needed to change for Unraid. I have two 10GB network ports lagged or bonded, and Unraid doesn't know that it needs to bond these two NICs. I was surprised that there was a GUI that you could boot from, which honestly was pretty nice, although I'm sure I would have been just fine in a terminal. So I found my network settings and saw my interfaces were in a weird order, so I fixed that, and then I created a bond and a lag. I tried to do this for both my 10GB pair and my 1GB pair, but for some reason it would only work with my 10GB pair. I gave them descriptions and then just decided to move on. I do wish they had some more advanced networking options when setting it up for the first time. So after booting up, I went to the IP address and I was able to see the sign-in screen. First time using Unraid. Let's do this. Before signing in, I wanted to set a few goals for this installation. I wanted to set up an array and easily add disks, after all, that's one of the best features I hear from most of the users. I want to set up a network share that I can access remotely. I want to set up some containers and get them running, and I want to see what the app experience is like as well. I want to pass through my GPU to said containers, hopefully multiple, and I want to check out some of the backup features, if any. I'm going to explore some of the options and configure the ones that I see fit. Oh yeah, and turn on dark mode ASAP. So first things first, let's find dark mode and turn that on. I would love it if it just had a sun or a moon that I can click on. Dynamix, color theme. I don't know what Dynamix is, but this says white and I wanted black. Awesome. Why is this bar still white? This is okay. This is dark enough. Dark enough to take off my glasses. So after finding dark mode, it was time to take a look around. It was hard to ignore the dashboard that you land on, so I decided to check it out and click a few buttons. Okay, so first things first, let's look at the dashboard. This is actually pretty nice looking for a dashboard. Model custom edit. This is nice. This is a nice touch. I can select my case that I'm running. Hey, 4U Storinator actually in here. Pretty awesome. That's what it's running on. But let's check out a couple more. Looks like my old disk shelf. Omen X. Obsidian. A lot of machines that I recognize. There's silhouette, virtual machine. I like it. This is a really nice touch. Custom image. Cool. I can upload my own. I'm not going to do that. I'm lucky enough to have mine in here. So mine's the Storinator. Cool. Yeah, that was pretty nice. Okay, so motherboard. Yeah, this looks good. All of my processors, all of my cores. Pretty nice. My system. So this is the USB flash drive. It's only using 442 MB it looks like. So that 2GB one was more than enough. My interfaces. This looks pretty good now. Here's my two 10GB and then here's my two 1GB, which weren't working in Bond. But maybe we can fix that. Unraid has some nice components on the dashboard, but it was time to figure out how to build my array. Parity. Choose two parity disks. Oh, interesting. I totally forgot that these HD store disks were in here. They're smaller. I don't think I could use them for parity. I could try. Although that doesn't make a whole lot of sense. But let's go with it just to see because they're smaller. I don't know. A little bit confusing on kind of what I'm supposed to do. So, array option stopped. Disk in parity slot is not biggest. Okay, so I'm just kind of right. Let's unassign these. Interesting. So let's start it right here. So let's start it. Parity disks will be over and I assume they all will be. Okay, let's proceed. So I think we might be good. Okay, not sure, but I do want to make sure I have a file system on these drives. It's kind of hard to understand what I'm supposed to do from here. I'm sure experienced people are like, &quot;Hey, click on that, you big dummy.&quot; Snowflake. I don't know why this is a snowflake. Array operation. Okay. Let me go back to the dashboard. Maybe that will give more clues. Maybe I can see my array and it will let me do something with it. Okay, so we saw it down here. Parity sync in progress. It's going to finish in 29 minutes. Only two have passed. I think I understand what's going on. It's building the array. It's syncing all of the drives. It's basically rebuilding the parity drives and getting the whole array in sync. And then I should be able to use it. So I'm going to ignore this for now. And hopefully, after these are rebuilt, then I'll have the four terabytes I was talking about. But it's only at 1.3%. So. After figuring out how to build the array and how to use both the parity drives and the cache drives, I did read later on that it's pretty important to make sure that your cache drives also have parity. That's because this is a separate array that's not protected by your normal array. Files are written there and then moved to the normal array as a scheduled task at night. Now this is really different than what I'm used to with ZFS where everything is cached in RAM and an algorithm decides which items to pop from cache and a SLOG handles your writes. Which is a lot more complex than this, that's for sure. Next up was creating network shares. Something that most people will be doing when using Unrate or any other NAS. Because, after all, that's why they call it a NAS. Network attached storage. Let's add a share really quick. What's this share name going to be? I'm going to call it movies. Where's it going to be stored that's kind of nice on that array? Allocation method, high water. So I'm assuming this has to do with distribution of data across these drives. These all kind of sound like it. Like a lot of this seems like it has pretty good defaults or sensible defaults. So I'm just going to click add share and I'm going to leave the super advanced stuff for later. Maybe. Okay, so I created the share. Minimum free space is 96 gigs. Okay, the share has been completed. Security is public. I totally get why they do that. Just to make it easy. Case sensitive names, auto. I kind of understand why they do auto too because Windows is case insensitive. Linux is not. So did I like just create a share? I mean that easy? Was it that easy to create a share? Let me try to connect to it real quick. All right, so connect to server and my server name is what? unraid.local. Can I connect? Okay, that's weird. What if I just do unraid and then I say that my path is movies? Maybe it's not time yet. I don't know what exporting the share means. It was no by default. I don't know. I'm going to hit yes. Let me just expand unraid. So I'll just like browse there maybe. Hey, that worked. Okay. And then movies. I guess I had to export the share. Setting up the share was a little confusing at first. It was easy to create, but it was also odd to me that I had to export the share too. Now I learned later on that exporting it makes it available as an external network share. Whereas when you don't export it, it's only available internally on unraid for applications to use. Okay, so let me copy a file into there. So this is Big Buck Bunny. It's a Blender demo video. It's about 600 megabytes. That should be copied in there. Okay, let's save that for a little bit later for when we configure one of our applications. After getting the share set up, I stumbled into my favorite section in any application and that's settings. Seriously, I like settings. Settings. Okay, lots of settings. I should have went here first. I really like settings in applications. CPU pinning. Oh, pretty cool. I think you can pin processes to cores. Pretty cool. Not going to mess with that. It's pretty advanced. Date and time should be good. It's not good. I'm actually on Chicago time. Apply. Sure. Time.google.com. I don't know about. I'd rather do time.cloud. I don't know which one. I'd rather let them know that I exist. Or I can just do time.nist.gov because why not? Got to let one of them know I exist. Google probably knows the most though. Network settings. Hey, I wonder if I can configure my bond from here. I know that I had a problem with the bond when it was configuring in the GUI from boot. And look, it has an IP address. So something was weird on boot to where I couldn't configure this bond, but after reboot, it looks like it's good. Cool. So yeah, two bonds. My 10 gig and my 1 gig. UPS settings. Cool. So I could attach a UPS to here. I assume this uses Nut Server or something like that to monitor UPS and let you know if something's going wrong and hopefully to safely shut down. Okay, here's NFS. I don't know why NFS was there. Oh, because you have to enable it. Yes. Enable NFS. Not going to do anything in NFS. I just turned it on. But good to know that NFS is there. I would be surprised if it weren't. After poking around in the settings section, I found the Docker section where I can add any container I like. Okay, so here I can probably add a container. Yeah, so I can add a container in ad hoc. I see some typical Docker settings, name, repository we're pulling from, network type, console, which is shell or bash, and whether or not it's privileged and some other things. So this must be for ad hoc containers that they don't have templates for. But what I was really looking for was the App Store, somewhere I could search for and discover new applications and services for my server. Wow. Okay. Pretty cool. Like in a filter on first party. I'm not seeing it, but let me do a search for like Plex. I assume that there would be a Plex that's first party and then maybe some third parties, but there are actually lots of Plexes here. So hosters, Linux server IO. Okay. From Plex. The official. Okay. So this is the official Plex, not necessarily the unraid version of Plex. So it's, yeah, it's, it's, it's, this is definitely first party because it's coming from the maker themselves. For some reason, I had this idea that unraid maintained a lot of these templates, but it seems like most of them are managed by the community. Then I decided to install Jellyfin to see if I could get it working along with the GPU I have installed. Let's just look for say like Jellyfin. Assume there's lots of Jellyfin stuff in here. And there are like, how do you know which one's the best to use? Like can, can I sort by popularity by downloads? There we go. I don't know why, but burgles is more popular than Linux servers. No offense to but burgle. But I'm going to do this one by Linux server IO only because I know who they are. Right. Whoa. Stable? Latest. We go with latest. All right. Pretty cool. Okay. So now we're getting properties for that Docker container to configure them. Most of these are going to be hopefully pretty default. Web UI is 8096. Port. Where's my data movies going to? Ah, this, okay. This is cool now. See how it just suggested all of my folders so it knows my file system and it's suggesting it. That's pretty handy. That's pretty cool. TV shows that don't have any, but if I had them, it's suggesting all of the shares or all of those folders. Okay. So Jellyfin publish server URL. So this is my IP address. Is my IP address really .05? It's kind of weird if DHCP handed that out. But we'll, we'll figure that out in a little bit. Let me just apply this and then we'll figure it out. Apply. Oh, please fill out this form. Data TV shows. I don't have any TV shows. Okay. I'm going to create a TV shows really quick so it doesn't freak out on me. Add share. Oh, I got to do the whole, I think export and make it public. Okay. So TV shows is created. I'm going to go back here, click this TV shows. Can I pick it? Yeah. Okay. So are you happy now? Yes, you are. Please wait. I will wait. So I didn't see anything about GPU or hardware or anything like that for this image. I should also look to see in our settings to see if it does detect by NVIDIA 3090. So the thing I'm not certain about yet is my GPU. I want to pass my GPU through to this Jellyfin container so that I can test out some transcoding, but I have no idea where that is. It took me a little while to figure out how and where to install the NVIDIA drivers. I assume they were just bundled along with the operating system. I don't know. Maybe I'll search for NVIDIA. Hey, hey, hey NVIDIA driver. Okay. This plugin will install all necessary modules and dependencies for your NVIDIA graphics card so you can make use of it in your Docker containers. Cool. Yeah. Monthly CA spotlight. I don't know what that is. I mean, I get what a spotlight is, but I don't know what CA is. What is CA? Canada? Canadian? Anyways, so let's get this installed. Cool. Well, it's nice that they spotlight this and they think it's good. This application has additional requirements compatible. Yeah, I have one. Oh, yeah. So there's the NVIDIA drivers. Okay. So 550.78. That's cool. So they make drivers modular so that you can install them separately and then they don't have to maintain them in the operating system. Totally makes sense that they do that. It's just not how some other products handle it. But I think this is definitely the right way. Instead of baking it into your image, you install it later and not even install it if people don't need it. So pretty cool. I like it. I like it because then you're not bloating your base image. So let's start Jellyfin. Okay, let's go to our libraries. Okay. So movies. Here's a big buck bunny. Before we go, before we playback, let's allow encoding from HVEC hardware acceleration. Yes, we want NVIDIA NVENC and let's save. Okay, now let's stream this. Maybe do a play. Then let's change this. So this is direct, but let's change it to transcoding. Okay. Okay. It did not like me choosing transcoding for some reason. I then looked at all of the Docker variables for this container and I found that it was missing one that sets the visible devices, but even that didn't fix it. I did spend a few more hours outside of that video and I found that I was missing the runtime flag to incent NVIDIA on the container when starting it. But even after that, it still wouldn't work. I watch videos by both SpaceInvader1 and Ebracorp, who are legends in the Unranked community, and I tried everything that they suggested, but I still couldn't get it to work. So I decided to give it a rest and possibly revisit it later. After that, I decided to create a virtual machine to see what the experience was like. Now, creating a VM was easy. If you've ever used KVM before on Proxmox or anywhere else, you'll be familiar with all of the options. I do like how the templates had sensible defaults for your machines, and this takes some of the guessing out of choosing the right options. After getting the VM up and running, I thought this would be a good time to test my GPU with this machine. I thought that I could just add an additional GPU to the device, along with a device for VNC, but it turns out you can't. If you choose to pass through your GPU, you have to physically connect it to a monitor, or the other option is to configure it using the virtual GPU and VNC, and then later disabling the VNC virtual adapter, enabling the physical GPU, and then using remote desktop to get into it. A few things did surprise me about the virtual machine experience. I was surprised that there weren't any stats per VM. That means no CPU stats, no memory stats, no disk activity stats, and no networking stats. I get it. Its primary use case isn't as, but it would still be nice to see some sort of visualization for this. Another thing I noticed is that there was no way to snapshot or backup your VMs. Now, I'm not sure if this is yet another app or plugin, I didn't check, but I feel like this should be part of the OS and not something that would require installing a community plugin for. And this is what I experienced quite a bit when using Unrate for the first time. It seems like there's so much to like about it, but missing some of the polish that I had conjured up in my mind about what the experience was like. On one side you have pages and pages of game servers, media servers, and even ways to install IPMI sensors, but it's missing some of the basics like metrics that you would hope to see for the containers you are running. Then you have something as interesting and as advanced as CPU pinning virtual machine cores to the host cores, but no insights to how your VMs are actually performing. Then you have the easiest install for Nvidia drivers and the container toolkit I've ever seen on Linux, but no hints or checkboxes to just turn it on for containers. Now I get it, well at least now, there's a flag I need to add, but it feels like these are the types of things that people expect out of an operating system. Now I know this sounds like critical feedback, but there's also a lot to like about Unrate. From the huge community that builds and maintains the app, to the community and how they support each other in the forums, to how simple Unrate has made some very complicated things. What Unrate is trying to accomplish is not easy, trying to combine a NAS with an App Engine in a friendly package, but I think it's one of the best examples of how to build a NAS that's focused on its end users, which are home labbers just like me and you. You can also see that this product is starting to mature, from the new UX, the new branding, all the way down to the nice dashboards that give you most of what you need. I'm sure they'll continue to develop this. So I bet you're wondering what I really think of Unrate and if I'll continue to use it. The easy answer is, of course, I bought it and I'll continue to use it and see what updates are brought in the future. Honestly, I have such a complex environment in my home lab that this might not be the best fit for everything that I do. So I think the better question would be, would I recommend this to a friend, or even better, if a friend was considering buying Unrate and asked me if it was worth it, what would I say? I think the answer is wholeheartedly yes. For anyone who wants to build a NAS with an app engine with their own parts, who wants an easy way to install any Docker container they want, who doesn't want to spend hours and hours trying to figure out how to use an enterprise-like system at home, who wants to join a community full of enthusiasts, who wants to get the most out of their hardware while still getting the most storage efficiency possible, yes, then Unrate is for you. Unrate is a great option to have for your home lab operating system and while I may not use it on all of my servers, I'm glad they're here and I want them to stick around for years to come. I'm Tim, thanks for watching.