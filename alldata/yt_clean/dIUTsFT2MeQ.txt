In this course you will learn all about natural world problems using the spacey library. Dr. and he's an excellent teacher. Hi, and welcome and I specialize in multilingual natural humanities perspective, I have my PhD in medieval do all of my NLP needs. So what you're going to is a basic understanding of what natural language to domain specific problems, or problems that to use this all the time to analyze historical personal investments. Over the next few hours, a whole and most importantly, the spacey library. use, and easy to also implement really kind of off the shelf models that are already available of this video series how to get the most out In part two, we're going to start tackling some models. And I'm going to show you how to use rules sole domain specific problems and your own area injecting robust complex regular expression or that doesn't actually exist at the moment. I'm so that in part three, we can take the lessons actually apply them to solve a very kind of common extraction from financial documents. So finding markets, indexes and stock exchanges. If you join lesson with a good understanding of the standing of the off the shelf components that are there and apply them to your own domain. If you also me know in the comments down below because I am that will explore not only the rules based aspects of spacey. So teaching you how to train your training a dependency parser, training a named covered in this video. Nevertheless, if you join part two, much easier to understand. So sit back, of things you can do with NLP such as information this course will be laid out. If you like this Python tutorials for digital humanities, Even if you're not a digital humanists like because they take Python and make it accessible are beginners, I walk you through not only the step by step some of the more common libraries texts or text based problems. But other content image classification and OCR, all in Python. So spend a little bit of time talking about what Natural Language Processing is the process to understand and parse and extract human language different areas of natural language processing. tagging, syntactic parsing, text categorization, resolution machine translation. Adjacent to NLP called natural language understanding NLU do things like relation extraction, semantic bots really kind of come into play, summarization, are used by a wide array of industries, from and academia with researchers trying to do there's a couple different applications. The first extraction. This is the process by which we try to we find relevant to our own research or needs. So this video, when we need to apply spacey to the might need an LP to go through and extract things are referenced within maybe news articles, from This is an example of using NLP to extract is application in this area, is it takes in some extracts structured data from it or metadata. So extracts them for you. Now while there's ways to an NLP framework, like spacey, which I'll talk the main one being that you can use and leverage semantically. So things like the part of speech of its co reference, these are things that the spacey and also train into machine learning models, and one aspect of NLP. And one way it's used. Another This is known as text categorization. And we text categorization or text classification. And we part as well, is a way we take information into raw text, and we classify it in some way. you've with spam detection, spam detection is nearly But for the most part, it is a solved problem. The to your spam folder, is because there's a machine your on the back end of your email server. And it sees if it fat fits the pattern for what it's label. This is known as classification. This is industry, lawyers oftentimes receive hundreds of they don't necessarily have the human time to verbatim. It is important to kind of get a quick having to go through and read them page by is use NLP to do classification and information relevant to their case, or they will find relevant fields of their case. And that way, they to maybe only a handful, maybe 1000 that they have of NLP or natural language processing. And the spacey framework. spacey is a framework available I believe in Python, I think there is a but I don't know that for certain. But spacey available. If you're interested in looking at all natural language toolkit stanza, which I believe There's many out there, but I find spacey to be reasons. Reason one is that they provide for you meaning they perform very quickly. And they also recall, and F score. And I'm not going to talk accuracy right now, but know that they are quite current natural language processing methods, usually kind of collectively as Bert models, even for you to use an off the shelf transformer doing custom training relatively easily compared Finally, the fourth reason why I picked spacey well. spacey was designed by explosion AI, and the at scale, we mean working with large quantities of spacey scales well because it can process hundreds a relatively short period of time, especially if going to talk about in part two of this video. So about NLP, and spacey in general, we're going to through this video. And and the free textbook located at spacey dot python humanities.com. And this video and the textbook I meant to work in might not necessarily be in the textbook text representation. And the same goes for the to cover verbatim In this video, I cover And in the book, I think that you should try is doing one pass through this whole video, watch everything that space you can do. And everything and try to replicate each stage of this process on to kind of follow along and code and then I would first part Why talk about what we're going to be at the textbook or the video. If you can do that to start using spacey to solve your own domain applying NLP is really complex. But fortunately, process a lot easier. I encourage you to spend a think you're going to find that you can do things short order. So sit back, relax and enjoy this you're first going to have to install spacey. Now on your environment and your operating system, and kind of enter in the correct framework that versus windows versus Linux, you can go through can go through and select the different features I'm going to be using PIP in this case, and And I'm going to be working with English. So I've And it goes through and it tells me exactly in the terminal. So I encourage you to go ahead and install Windows however you want to. within the Jupyter Notebook that we're going to work with the GPU at all. Working with spacey on what the GPU is used for specifically, in training CUDA installed correctly. It requires a have the time to get into in this video, but we'll video. So for right now, I recommend selecting and then selecting CPU. And since you're going to I encourage you to select English right now the N core web SM model. This is the small So the first thing we're going to do in our the exclamation mark to delineate in the cell that install spacey, your output when you execute than mine. I already have spacey installed in this looks like this yours will actually go through and it'll be actually passing out the the different spacey and all of its dependencies. The next thing you follow the instructions, and you're space download, and then the model that you want now. So let's go ahead and say Python m spacing. And we're going to download the N core web SM So on my end, spacey is going to look a look on your end as it prints off on the Jupyter everything will go through, and it says that are all very happy now. And so now that we've got small model downloaded correctly, we can go ahead everything's correct. The first thing we're going as you would with any other Python library. If a set of classes and functions that you can import write a whole bunch of extra code. Libraries that you can call. So when we import spacey, and now that we've seen something like this, as long as you're not getting an error message, thing that we need to do is we want to make sure model was downloaded correctly. So the next thing object. I'm going to be talking a lot more about troubleshooting to make sure that we've installed correctly. So we're going to use the spacey dot it's going to be a string that is going to And this case n cor web s n. And if you you have successfully installed spacey correctly model correctly. So go ahead take time, and get to, and then pop back and we're going to start I'm now going to move into kind of an why it's useful and kind of some of the basic And I'm going to be working from the Jupyter to this video. If we scroll down to the bottom of past the install section, you get to this section containers within spacey are objects that There are several different containers that the doc Ben example, language, we're going to be dealing with the lexeme a going to be dealing with the language container the three big things that we're going to be the span and the token. And I think when you a learning curve about what these things are, what And for that reason I've created this, image of what different containers are. So if so a hierarchical system, we've got all really the dock object, your Docker container, metadata about the text that you pass to the in practice, and just a few minutes. The doc It contains attributes. And these attributes iterate over doc dot cents, you can actually that doc object. If you iterate over each you can get individual tokens. tokens are going something within your sentence or text either syntactically or semantically. So this a semi colon, a quotation mark, things like this, going to see how tokens are a little different string methods and Python. The next thing that So spans are important because they kind of exist the token, which is an index of the doc object, be a sequence of multiple tokens, we're gonna see category, maybe group one are our places. So a but span group two, this could be something like this could be like, as we're going to see Martin sequence of three different items in the sentence So Martin Luther King, would be a person who's If that doesn't make sense, right now, this and learn more about spacey in practice. For that the doc object is the thing around which object that you create. This is going to be the need to access. And this is going to be the with different custom components, factories, and things with spacey, we're going to now see in of similar to the text itself. But how it's We're now going to be moving on to chapter two kind of getting used to the in depth features keep this notebook or this book open up to along. As we go through and explore it in live different things as we explore chapter two, we're going to be not only importing spacey, but creating a dog object around that model. So that And then we're going to see how that container attributes about the text. And while they're actually quite different. So let's Notebook where we've imported spacey and we have that I want to do is I want to open up a text to a data folder. Within this data sub folder, I've got one on MLK that we're going to be using on the United States, this is wiki underscore us. So let's use our width operator and open up We're gonna just read that in as F. And then we're be equal to F dot read. And now that we've got what this looks like. So let's print text. And kind of follows that same introductory format and lot of the features left in such as the brackets going to worry too much about cleaning this up cleaning our data so much as just starting So the first thing that you want to do is