Last year I set out to make an ultra using momentum to skillfully parkour brutally slash your way through enemies. There was only one problem. The core mechanic of the entire game, It was actually so bad that it removed from the game entirely. So yeah, this wasn't good. I had high hopes for this mechanic. In fact, my plan was for it to be like The hat in Super Mario Odyssey. Or the portals in Portal Why is this mechanic so unfun? Well, I've spent the last year or And in this process I learned something. Great mechanics aren't made by coming More likely than not, they're evolved So, that's what I'm talking The evolution of this game mechanic. From something that didn't really feel that now is the centerpiece of everything. Alright, let's go. Thomas Edison once said, and 99 percent perspiration. So now I'm left wondering how into something actually good. And in case you haven't never shipped a game before. And when push comes to shove, So like any good gamer, I stole tons of ideas from this book, mentions seven important concepts for And after reading this book, I basically an F in four of these categories. I want to start off by talking because I think this is what most when we think about game feel. So I think it's a good place to start. Appealing response is just an GameDevToolkit has a great video juice in some of my other videos. I like to think of it as what gives that makes it satisfying to use. It's what makes people go, I like the dash. Ooh, that was neat. I want to do it again. So how can we add Well, we can see my first attempt at that pop up when you start It's not bad. But there's so much more that we can do. In the first iteration of this from you when you kill them. Which, is definitely fine. A little zany, I guess. But, it's the exact same thing that In order to make this attack Something unique should happen. I made it so the enemies get full I already talked about this in a a bazillion times better since then Now. This effect is actually five different is a blood decal spawner which spawns death position These decals took me like just spray paint, tool, and a sprite. And I made a few different I made it smart enough to understand So the blood will get splattered on the Second effect is just this thing enemy's position when it explodes. Again, this jib piece is very simple. It's just the blender default The third effect is just this blood bunch of little red quad billboards. It has this nice pixel art look, this effect with all sorts of And the fourth effect is this that I made specifically for When you do something that would exploding an enemy at point blank, your And last but not least is this heavily inspired by ultra kills And just with those blood effects. We have turned the attack from this to have gone too far with all this blood. I mean, like, this is insanely gory now. So, uh, yeah, let me know in I definitely think I'm gonna settings or something eventually. But, problem for another day. Anyway, at this point we But it's missing potentially Sound. I see so many devlogs completely ignore Making great sounds is freaking hard. It's actually the only thing in invested real money into and I actually Roman Perry, who I'll link in the Bloodthief, 100 percent worth every penny. Let's look at the before and after. Now for the finishing touch, which Slap on a little screen shake. Man, I don't know what it is about screen mechanic feel so much more impactful. Take it away, and it's like Now stand aside. All right, so that's juice. And that brings me to my next part. There's this weird phenomenon You get used to all the bugs and Your subconscious learns every little avoid them without even realizing it. So when you play your game. It feels great, but then you show that you are in fact blind. Players hit every pitfall imaginable. They break your mechanic in ways you the things you thought were so obvious actually get missed by almost everyone. In other words, you realize your If we look back at Game Feel's breakdown make a mechanic feel great, I think the to violations of these two concepts. Predictable results and And you guessed it, this mechanic does Let's start with predictable results. So earlier I showed off You aim at a guy, and you attack. At this point the implementation We give all our enemies a big easy to target from a distance. And we cast a ray out from the center of enemies big sphere colliders, we can But this solution immediately soon as we add a second enemy. Take a look at this scenario. In this case, I'm wanting to airdash to colliding with the guy in front. Since, remember, I've given these airdash colliders that are super big. And as a result, I'm expecting I actually dash at this guy. Yielding us An unpredicted result. This issue came up time and know, really needed to be solved. So, how did I solve this? Basically, instead of only caring collides with, I get a list of all the What I really care about at this point We can figure this out This vector, and this vector, If I normalize these vectors, we our aim direction by taking their The highest dot product wins. So, in this case, even though we're closer to this guy now because we are able to Okay, so we've partially fixed fully prevent unpredicted results. There's still one important issue here. With the current version of the airdash, is gonna take them before they do it. Which is kind of a big deal, because halfway across the map in one click. But from another perspective, what would airdash at this closer guy? I mean, there's definitely some borderline these guys are super close together. In this case, where are we dashing to? How do we know? I improved this by making it so the knight that you're about to dash to. This way, no matter the scenario, you And with those changes, I think the always yielding predictable results. And now for this second point, AirDash violates all over the place. For one, AirDash has a maximum range If you try to dash a guy that is too There's no indicator in the player, you're basically just left Randomly isn't working. I improved this by making it. So if you're out of range the air dash It'll just be dimmed as you get closer you're in range and the charge animation blood And before if you didn't have again Nothing would really happen. I made it. So if you're aiming at an enemy while in this dim little shield will pop up. And if you try to air dash to them, flashes and your player coughs a So now if the player intent is to is in, whatever state the player world, something is going to happen. Maybe it won't be the air dash per se, going to happen in a predictable way. Take this problematic example in the game. What if there are like five Look what happens now. From a computer perspective, what's Our algorithm that I described a second in what enemy I'm most aiming at. And it's resetting the charge time one enemy more than another enemy. But as a player, it's impossible to And because as a player we don't know it just kinda looks super glitchy, and on and audibly, this can actually be really Like, as a player, I'm However, because the game is the charge timer resets and I'm enough for it to charge all the way. I don't know if there's like an leads me to something that, in Basically, if you stop aiming at an maybe you aimed off them for an instant, give you 150 milliseconds of grace being able to airdash and makes you This allows you to aim off for cursor back over the enemy before Everything will proceed as normal. I apply a similar If a whole bunch of enemy colliders are from one enemy collider to another with have to recharge for the new target. This means that if you charge up last second, your target changes, You'll just dash to the new target. Not only do these grace mechanics scenario that I showed before. But it just makes the game feel much more These kinds of race mechanics are the game feel like it's always By the way, you can find this place in basically every game. For example, I've also went ahead jumping, where the player is allowed technically already run off the Or things like input buffering, where you and the game has a grace period built in, the input technically becomes eligible. So now I'm a bit closer to a The player gets predictable results, and response when they take some action. But I'm missing potentially How do I make the airdash fun and term as the player's skills increase? And this brings me to the part that I feel, making the mechanic easy but deep. Take a look at this chart. If you don't know by now think about this chart a lot. Essentially, it just really concisely Steadily increasing the challenge Don't increase the challenge enough and Increase it too much and your game I generally think of this chart difficulty of my game, but I also think for teasing out the complexity of When a player first starts a game, the first time, and it's generally So the mechanic should be Force the player to learn a super the mechanic is just gonna feel Imagine if the first time you opened those crazy freestyle obstacle courses. You being a new player, lacking any thinking, oh, a ring obstacle course. I've done a million of these before. This should be easy, but then you ever played Rocket League before, impossible task for a first time player. In that case, Rocket League's They would just feel jank. The game feel would feel terrible. This game design challenge also applies super hard for me to cope with this fact. Seeing what skilled play testers ability has some insane depth. Especially when combined with other good at using the airdash in all sorts of that force me to do intense Challenges to so badly for the player to experience wielding maniac flying across the map pill to swallow is that the player Before the player can do air dash to they need to learn how to just do And what I have to constantly boring to me, a highly skilled and still can be quite fun Because, hey, they're like right at Things can be quite simple and I'm also constantly having to it is to learn a new thing. Like, in real life, we don't immediately know it forever. No, we need to see it over and over pushed down into long term memory. I do a really dumb thing in the for Bloodthief, where I show the you only get to perform it once. It's then like a five minute gap before I've seen so many players not What it should do instead is show seconds later you perform it like it into your brain how it works. Needless to say, I'm reworking the repetition approach to teaching things out gradually, and ensuring practice before introducing new ideas. This inevitably means that these have to trust in the process. One thing I'm doing to help myself the level that highly skilled players Like this high up tunnel It's been so awesome seeing are employing to get up here. I also created a medals system so level and progress to the game. But. More skilled players that understand still have challenges to pursue. This kind of stuff widens that it more likely for the mechanics So, is this mechanic done? Absolutely not. In fact, I'd say there's still quite a to figure out what the gameplay looks when the player gets more skilled. And oh baby, am I excited for this part. I've only just started working on this environmental stuff planned to keep the the player really starts to master it. But that's content for later have to wait and see for that. Regardless, I'm so happy with the I'm stoked for the journey that learn all the quirks and nuances. I truly believe that a great mechanic sparked as a stroke of genius. I think a great mechanic Starting out as nothing more than a simple gets sculpted down into something unique For those of you that are public playtest for Bloodthief. You can join the playtest by going You'll be let in instantly and library just like any other game. I'm working on some new levels they'll be releasing very soon. Definitely join the Discord if you want That's where I post announcements out and chat with folks. Oh, and if you're looking don't forget to wishlist. Alright, that's all for this devlog. Thanks for watching.