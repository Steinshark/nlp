Welcome to Jeremy's IT Lab. This is a complete course for the CCNP ENCOR, This course will cover all topics you need The previous topic we looked at was MTU, the In this video we will look at a different Size. In the MTU video we dealt with Layers 2 and concept, because TCP is Layer 4. However because MSS deals with the maximum message, it's also very important to understand Here's what we'll cover in this video. First we'll do a quick review of some TCP header and reviewing the 3-way handshake used We will cover TCP in more depth in another relevant parts for this video. Then I will introduce MSS itself, explain at a concept called MSS Adjustment and how And watch until the end of the video for a ExSim, my recommended practice exams for ENCOR. Let's get started with a review of the TCP In the CCNA course we spent a lot of time which are very important both for identifying and for session multiplexing. The sequence and acknowledgment number fields communications and sequencing. There are a series of flags in the header, the SYN, ACK, and FIN flags. Window size is used for flow control, it allows it can receive before it will send an acknowledgment. Don't confuse this with the MSS which we The MSS determines the maximum amount of data The window size, on the other hand, determines the span of multiple segments, before the The fixed TCP header size is 20 bytes, from the last bit of the urgent pointer field. However, at the end of the TCP header there The maximum size of the options field is 40 header has a minimum size of 20 bytes and The options field is relevant to this video Segment Size. As you know, TCP is connection-oriented and handshake, to establish connections. The host who wants to establish the connection In this case perhaps PC1 wants to access a tries to establish a TCP connection. The other host replies with a TCP message Finally the first host sends another TCP message handshake. A TCP connection has been established and The three-way handshake is relevant to the that a host can specify its MSS by using the Now let's look at MSS. I showed you this diagram in the previous MTU and MSS. MTU is the max size of the Ethernet payload, The TCP Payload is part of the Ethernet payload, So, the maximum segment size is the maximum TCP segment. However, the name is actually inaccurate because not the size of the entire TCP segment. The TCP header itself is not included in the Perhaps a more accurate name would be Maximum The MSS is specified in the Options field the fixed 20-byte header. So, when the MSS is specified the length of 20 bytes. Hosts CAN specify their MSS in the SYN messages don't have to. By SYN messages I mean the first SYN message the SYN,ACK reply. And if a host doesn't specify its MSS when will assume the following defaults: 536 bytes I'll explain the reasoning for these values Now, similar to larger and smaller MTU values, Large MSS values can lead to fragmentation. If the total length of the segment plus the device in the path to the destination, fragmentation Fragmentation can greatly reduce a network's On the other hand, small MSS values can reduce but the overhead is higher, meaning the data small MTU values. In the previous slide I mentioned the default a host doesn't specify its MSS in the TCP Those values are calculated based on the 'minimum must be able to handle. The minimum IPv4 datagram size is 576 bytes, Here's a quote from RFC 791 which defines datagrams of up to 576 octets, whether they So, if you subtract 20 bytes for the IPv4 get 536 bytes, the default MSS value when The minimum datagram size IPv6 hosts need including the IP and TCP headers. So, subtract 40 for the IPv6 header and 20 the default MSS value when using IPv6. Here's a quote from RFC 9293 which defines If an MSS Option is not received at connection send MSS of 536 (576 minus 40) for IPv4 or Note that IPv4 and IPv6 datagrams, meaning above values, but hosts must be able to support And likewise, a host can specify its MSS as of 536 or 1220. Now, routers don't look at Layer 4 information Layer 4 is a communication between the two hosting a website. Routers look at Layer 3 information and use 4. However, don't forget that routers can also can participate in TCP connections with other For example, when connecting to a router with with the router. So, let's look at how Cisco routers behave For example, Cisco IOS devices specify an in the same network, the same subnet, and subnet. Let's see a few examples. I made the simple network below, three Cisco they behave regarding MSS. To make the routers establish TCP connections port 22. First I used SSH to connect from R1 to R2. At the top of the Wireshark screen here you and below I've opened up the TCP header As you can see, the first message is from from R2 to R1, 192.168.12.2 to .1. Here you can see the SYN flag in R1's first Notice that both use an MSS of 1460 bytes. That's because these routers are in the And here in the contents of the TCP header Option, Maximum segment size. Now, what if I used SSH to connect from R1 What MSS value would it specify? Let's check. This time I used SSH to connect from R1 to As you can see, Both R1 and R3 used an MSS back. Remembers, Cisco IOS devices will specify in the same network, and an MSS of 536 when Now, I want to be clear about exactly what In this first message, R1 is telling R3: TCP of 536 bytes. This is not necessarily the maximum payload R1 is telling R3 to use when sending messages And then in this second message, R3 is telling a maximum of 536 bytes. In this case both specify the same MSS, but values, as we'll see in other examples. So, Cisco IOS devices specify an MSS of 1460 networks. However, you can change that behavior. From global config mode, the command is IP this case I configured an MSS of 250. This command configures the MSS for TCP connections I want to emphasize that point, this is for host such as a server or another router. This does not apply to traffic that is simply In that case the router doesn't care about Also, the value you specify in this command is to a device in the same network or a remote So, R1 should now specify an MSS of 250 whether Let's test that. So I once again SSH'd from R1 to R2. As configured, R1 specified its MSS as 250. Next is something interesting, even though it should be 1460 bytes for connections in meaning the MSS value specified by the host Cisco IOS device will match its MSS to that So, R2 also specified an MSS of 250 for this I then SSH'd from R1 to R3 again. Once again, R1 uses an MSS of 250 as configured. And like I just explained, because the MSS default of 536, R3 matched its MSS value to connection. In both of these connections, all devices 250 bytes. Now what if it's the other way around? I used SSH on R2 to connect to R1. Because we haven't configured the MSS value of 1460. The MSS R2 specified is higher than R1's MSS to the same value R2 specified. Now, both routers have specified a different R2 tells R1 "you can use an MSS of 1460" What happens? These debug message excerpts on R2 show us In blue I've highlighted that R2 is advertising 250. Then in green it says, MSS is 250. This means that R2 accepted that the MSS will Both sides will use the same MSS, they won't I will explain this more in the next slide. I then SSH'd from R3 to R1. R3 still has the default settings so it specifies Again, the MSS specified by R3 is higher than not match its MSS to R3's. Instead R1 specifies the value of 250 that Here are excerpts of debug messages on R3 Again, highlighted in green, you can see that Let's explore this concept more in the next Many resources, including old RFCs, state So using an example from the previous slide, R1 specifies an MSS of 250. In this case payloads R1 sends to R2 will to R1 will be up to 250 bytes. However, a debug shows a different story, On R2 I used the command DEBUG IP TCP TRANSACTIONS, events in TCP connections. I then SSH'd from R2 to R1, and here are I showed these in the previous slide. R2 advertises an MSS of 1460, R1 advertises MSS of 250. There is another command we can use to verify On R2 I then used the command SHOW TCP, which from the router. I've highlighted the important part in green, I used the same command SHOW TCP on R1, and bytes'. So, this confirms that a Cisco IOS device This is consistent with the MSS section of 9293 published in August 2022. Keep in mind that other systems may behave on Cisco IOS. To be honest, I first made this video with a different MSS, but after further reading Now let's briefly look at the relationship Because the MSS, the size of the TCP payload, MSS must take MTU into account. If the MSS is too large, the resulting packets For that reason, a common MSS value is 1460 The reason for that is that 1500 is the default for the IP header and 20 bytes for the TCP So, many modern systems will by default specify However, keep in mind that IP headers and IP and/or TCP options are included, which So, how can networks deal with that possibility? For any packets using IP and/or TCP options, the amount of data in the TCP payload by the are 8 bytes of options added, the payload This avoids the need for fragmentation. The standard MSS of 1460 bytes can still be host can adjust the TCP payload size as needed. Another case where the standard MSS of 1460 GRE tunnels, which add additional headers If the standard MSS of 1460 is used, when added the total size will be 1524 bytes, which End hosts don't know if traffic they send can't expect the end host to always adjust Now, as I mentioned in the MTU video, Path maximum packet size that can be used along However, this doesn't always work. For example, for security reasons firewalls Remember, for PMTUD to work routers need to messages back to the sender. However, fortunately there is a way to help on Path MTU Discovery. Routers can be configured to automatically passing through the router. That will be the final topic for this lesson, To demonstrate MSS Adjustment I'll use the R1 and R2 have built a GRE tunnel between SRV1 and SRV2 are both Linux servers. We will use SSH to create TCP connections Adjustment. So, what is MSS Adjustment? It allows a router to adjust the MSS of TCP This can be useful when configured on tunnel Because tunnel interfaces require a lower use a lower MSS value when sending traffic Note that MSS adjustment is configured on can adjust the MSS for connections going through regular non-tunneled traffic. If a TCP SYN message passing through an interface value HIGHER than the value configured with will adjust the MSS down. We will look at an example later. Note that 'passing through' an interface And note that the term 'TCP SYN message' it includes both the initiating SYN message handshake. Note that if the MSS value in the TCP SYN with MSS ADJUSTMENT, the router will not adjust It will leave the lower MSS value untouched. So, first without MSS Adjustment, I used SSH As you can see here, these Linux servers use As I demonstrated earlier, for remote destinations bytes, but don't expect the same behavior SRV1 and SRV2 are Alpine Linux servers, and But this could cause problems if either host value of 1460. Why is that? It's because traffic between them passes Look at this message R1 sent to SRV1. It's an ICMP Fragmentation Needed message. So, in this case Path MTU Discovery worked SRV1 sent a message that was too large, and So, SRV1 would be able to automatically adjust However, as I said in the previous slide you So, let's look at how to configure MSS Adjustment. On the tunnel interface, use the command IP in bytes. In this case I configured a value of 1436. Why do you think I selected that value? An MSS of 1436 bytes is suitable for GRE tunnels GRE header and 20 bytes for the additional Remember, 1460 is the standard MSS when using MTU. Then I used the command DEBUG IP TCP ADJUST-MSS. This will display debug messages whenever Then I used SSH again to connect from SRV1 First I get these debug messages on R1. Note the part I highlighted in green. R1 adjusted the MSS SRV1 specified in its And after it there was another debug message, in its SYN-ACK message from 1460 to 1436. So, that's how MSS adjustment works. In this example we configured an MSS of 1436 Keep in mind that, depending on the tunnel For example, if it's a GRE over IPsec tunnel, the MSS value will have to be even lower. Here are the new commands we looked at in Although it might take some time to properly their actual configurations are quite simple this video. In the next video we will try these commands with them in your own labs too. Here's what we covered in this video. MSS dictates the maximum TCP payload size. Because they both deal with the maximum size It's important to note that MSS is a function such as UDP traffic. UDP traffic needs to rely on other methods MTU values to avoid fragmentation. Okay, now let's move on to the quiz. And after the quiz we will look at a bonus practice exams for ENCOR. Okay, here's question 1. Which of the following statements are true? the best answers. Okay, the answers are B, MSS determines how C, Window Size determines how much data a Be careful not to mix these two concepts up. They are both functions of TCP, but MSS determines whereas Window Size determines how much data segments, before it replies with an ACK message. Okay, let's go to question 2. Examine the below network and TCP 3-way handshake. Which of the following statements are true? about the answers. Okay, the answers are C and D. Each router handshake, 1460 for R2 and 250 for R1. So the question is, how will the routers behave As I showed earlier, Cisco IOS devices will and R2 will send segments with a max payload Okay, let's go to question 3. You issue the following commands on R1, R2, R1 then initiates a TCP connection to R2. Which of the following statements are true? Select two. Pause the video now to think about the correct Okay, the answers are C and D. When R1 sends MSS of 100. R2's configured MSS is 200, however because R2 will match its MSS to R1's. So, both will specify an MSS of 100 bytes. Okay, let's go to question 4. You issue the following command on R1's That command is IP TCP MSS-ADJUST 1436. SRV1 and SRV2 are both configured to use an How will R1 behave when SRV1 ini tiates a Pause the video now to think about the answer. Okay, the answer is A, it will leave the MSS When a router interface is configured with adjust the MSS if the value in the SYN messages interface. In this case, the MSS value of 1400 is lower not adjust the MSS values. Okay, let's go to question 5. You issue the following command on R1's That command is IP MTU 1450. Which of the following commands should be Pause the video now to think about the answer. Okay, the answer is D, IP TCP ADJUST-MSS 1386. Let me explain why it is the best answer. So, here's an example frame traveling over And here are the sizes of each header and We want to find this value, the data. Although MSS means 'Maximum Segment Size', TCP payload size, not segment size. So, we specified an MTU of 1450 bytes, that's If we subtract 20 bytes for the outer IP header, inner IP header, and 20 bytes for the TCP That is the maximum TCP payload size that in fragmented packets, so it is the best answer. Okay, that's all for the quiz. I hope this video was helpful. Before wrapping up let's take a look at question in Boson Software's ExSim for ENCOR.