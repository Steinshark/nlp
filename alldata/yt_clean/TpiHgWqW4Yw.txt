Elasticsearch is the search engine of choice and many other multi-million-dollar companies. Ever heard of it? Well, I guarantee you have used elasticsearch What makes elasticsearch so great? Well, it can search multiple datasets in an When a client runs a search, the last thing unrelated and useless results. Search engines like elasticsearch or Solr, data, very quickly, and get relevant results. Hi, I'm caleb from sematext, and today we docker containers.Now, This video assumes docker...if you don't, that's fine. Check out some of our resources on docker along... If you're a pro looking for the best Consulting literally wrote the books on this subject. First things first... what is elasticsearch? Elasticsearch is a powerful search and analytics With elasticsearch, you can search millions numerical, geospatial... Even structured or unstructured data sets. Elasticsearch is owned by a company called Elasticsearch used to be an open-source software, longer under the Apache 2.0 license. Lots of drama there, not worth going deep In this demonstration, I'll be using version That version is the most recent version that its open source and works just fine. If you really want an open source solution It's one elasticsearche's open-source competitors. So, why do this? Well because Elasticseearch is great. but Why put Elasticsearch in containers? And that is a legitimate question. Full disclosure here, ElasticSearch will perform containers. How much better? An IBM research report shows that containers KVMs. The average difference in performance between than 1%. ...more like 0.8%. This is mainly due to docker and other containerizing resources better than a virtual machine. The main "drawback" in performance comes Docker creates addresses for each container (NAT for short) to look up container addresses. Just like a DNS, but for dockers network. There is a workaround. In Docker, you can now use the host network the container. You will then get near identical performance The moral of the story is this, DO not use difference is very negligible. So, for some, this extra setup and configuration consider this. You get so many other benefits from using agnostically. You have a Consistent environment: from development, Keeps your apps consistent, limit configuration about over-provisioning an app. And even better, once containerized, you can Kubernetes and automate the maintenance process. If the less than 1% drop in performance isn't getting started with ES on Docker. Obviously, you're gonna need docker. So get that if you don't already. Also, for your containers, you will need at First. Create a file and call it docker-compose.yml in Command-line interface, but thats kind But I highly recommend you just make a compose You can find the completed YML file down below, Next, within our compose file, we want to The version tells docker which version of differences in syntax between versions. Not everything from different versions is I'll use the latest version,v.3.0, but be and function if yours is a newer one. Next, let's list out the ElasticSearch Docker "Why 7.10?" you might be asking. Because we like open-source solutions. In fact, that's the reason we don't just pull Post version 7.10, Elasticsearch switched This version is under the Apache 2.0 license, Now, let's Copy and paste that a few times We will also want these guys to talk to each Like I said earlier, Docker uses its own networks Which are different from the docker host ports. If you want to expose a port on your system, Now, data storage. In case you didn't know, docker containers is gone, so is all the data that was in it. This is bob, bob decided to keep data inside crashed... bob lost millions of dollars worth of data. Bob suddenly had lots of free time to rethink Don't be like bob and don't store your data If you want your data and indexes to be stateful, Like so. We will also want kibana so we can interact Same deal, version 7.10. Then we will Link them all up. And that's it. Docker compose up. And there it is. Your very own containerized version of Elasticsearch All the networking should be good. Containers should be talking to each other. The final step is monitoring all of that. You need to monitor your host machines, all nodes, instances, networks, host machine resources....everything. Monitor it all with one easy installation There is a freemium version, the Link for If typing is not your style, the completed below. If you liked this video, be sure to like and this topic in our next videos. Stay safe, keep monitoring, and I will see