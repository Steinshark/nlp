&lt;i&gt;&lt;/i&gt; Welcome to &quot;Winding Down with Product Managers!&quot; Today we're going to discuss Scrum and Kanban. workplace, the pros and cons of each, and what we use here at Crema. So stay tuned and thanks for watching! Ok. Tuck. Talk to me about Kanban. All right. So Kanban actually started as a manufacturing So an engineer at Toyota... They were trying to figure out how they make their came up with this methodology or framework. Then, it kind of transitioned. As software looking at that process and said, &quot;Hey I think And so it got picked up by software development capacity really easily without any time boxes or It's really just an &quot;always - on&quot; board for people move them right along the process. Every Kanban board looks a little bit different are on the left. And the things that are done or are blocked from What's in-between really depends on the product, process might look like. So usually the most simple form is to do, in for things that are blocked. And then, as each team member has capacity, they it's done, and it's pretty simple. It's meant to be a pretty lean process. It's Some software development products but it But generally that's kind of how I would describe So awesome. What about Scrum? Talk to us about that. So what Scrum is, is a little bit more process Kanban. Where Kanban isn't really time box, just kind of Scrum is time boxed. What from what we call sprints. So sprints are month. It just depends on what you're trying to The team dedicates all of their work within that that time. And then at the end of the Sprint have something kind of depends on your setup. But the idea is that you're going to walk away And so that just really helps kind of plan work So when you use Scrum you use things like story are is it's an arbitrary number that the team puts And that scale is very specific to the team. Some sequence but it is very specific to that team. So you can't look at points from one team to the on a team basis. And what happens is at the end of that sprint, velocity is. And let's just use, for example, that Well then, you know you can pull in 40 points about that, is you can then project out what your when you might be able to release something or a And so Scrum is often more helpful in product more projections of team productivity. Ok very good. So maybe that TL;DR version is that Kanban is kind track.. Maybe... Different piece points of where you are. Or And Scrum is a bit more structured allows, maybe, really time box and understand specific segments Yeah you've got it. Very good. Cool. So Alison, when somebody is trying to figure out obviously as PMs we like to know our pros and cons And so can you maybe list out some pros and cons want to use it and maybe why they wouldn't want to Yeah sure, absolutely! For a positive aspect of it really Kanban allows will allow. Basically what that means is that if you've got two of those members are finished with their work, additional up. They can move on to the next task discussions with anyone. Pretty much a simple and Another positive aspect of it is that it's really So you'll notice that's really the major process. Let's process, Kanban. More process, Scrum. Another pro is it's really great for teams with So what we mean by that is many requests from many have internal requests from your own organization that you have. And at times it can be really that you have coming in. So Kanban allows you to easily keep a backlog or a capacity allows. Like any other system or or idea, there's always So let's go ahead and kind of dive into those. It can be harder to plan out some of these larger What I mean by that is it doesn't really give you Scrum allows you to point like Tuck mentioned to it by default. It also can cause poor productivity. So if you aren't necessarily time boxed in, if you done during a certain piece of time, it might mean dive in and knock out tasks. I know that there are times when, if I don't have do it you know like seize the day right. So you always have to have that consideration in it as well. Last but not least is it can be difficult to So we talked about how a positive aspect of this it gives you an easy way to kind of nest those in it doesn't necessarily give you the tools that you another. You have to have a very dedicated team or educated requests or different requests that they have. in So again it's going to kind of fall back on the component that you have to experience with Kanban So Tuck. Talk to us about the pros and cons of Scrum now Of course! Obviously, there's pros and cons with each of Alison mentioned earlier with Scrum. Of course that's no exception. So some of the pros with Scrum is that it creates entire team is agreeing on to a sprint goal. They're saying by the end of the sprint this is aligned with that goal. That means that everybody on the team is going to that goal. If we don't, it's kind of everybody's failure The next one is that there's a clear definition of So Crema, being results based culture, that's very isn't clear then it's hard to know when you can be can be you're taking off early any given day or But it's clear that OK this is my sprint goal. These are what my results are that I need to meet. It's much easier to do that. The next one is that it allows for a lot more So especially in our business priorities change product when those plans do change. You need to be able to quickly pivot and go to And so what Scrum allows is that. You don't want to really have to break a sprint after that sprints over then you can pull in a different Sprint goal than your last one. And their team gets realigned around that really So Scrum does allow for planning of larger planning. And so, since you are able to track what the forecasting out. You know that if your team always is able to you're able to say OK if our backlog is X amount time to get through all those points. And so just allows for that a little better. And then another pro for Scrum honestly is that it better use of time and money since you are able to You make sure that after each put you're You're not kind of spinning your wheels on these really truly vetted in any way shape or form and something. Some cons, though, when it comes to Scrum is that end date that the team is aligned on since That does mean all of a sudden some stakeholders a month and then along the way other priorities have crept Now it's up to the PMs, the product managers, to there is no surprise to stakeholders. But it still happens. It can happen if you don't keep a close eye on it. So if you are using Scrum you to make sure that Also another con of Scrum is that it can be harder So Kanban works really well if you don't have your because, you know, anybody from that team can be When it comes to Scrum, you want to keep your team team goal if it's spread out among 20 people It leaves room for people to kind of be dropping full amount of attention to the sprint. Another con of Scrum is that any changes in your So if you have a new developer come on board, really change up the velocity that developer or even if it's an additional developer it's And so that can mess with your predictions. You velocity will look like, but it changes based on Any changes in that team can really mess up the One of the other cons is that it requires team buy full team is not aligned with that approach. So if for whatever reason there's a team member completely disagree with the work that you're if they don't have that by meeting those team really hard and cause a lot of frustration amongst And then another thing is that when it comes to other product variables that are out of your So that could be that maybe you're dependent on an keep getting blocked by that can largely change kind of your planning forward. And so that's just something to keep an eye on and processes we'll talk about that a little bit. So one of the great things about Scrum and Kanban inherently flexible. They are really meant to kind of mould to what what your product needs are, and what's really of the different frameworks we just talked about. And so Alison, what are some methods maybe that been really helpful to your team? Sure! This is probably my favorite topic of this really the realistic implementation that a lot of I feel like it's fairly rare for people to be to kind of mesh and mold and a lot of times it's So an example might be, that let's say that we're engagement and we want to run it with Kanban interests of the team and the product. But also, inherently, is a Scrum meeting. I don't think that, you know, for the sake of just worth excluding that really valuable meeting point So that could be a way that you're merging these you're running Kanban. So you're pulling in aspects of Scrum to to make And then inevitably build a better product with Yeah I agree. I think the big important thing to remember is what, what really matters at the end of the day is do their best work. And so you shouldn't let any kind of process ever There are some organizations that, you know, argue to say that. Those teams could probably be even more productive I know at Crema, you know, every engagement that analyzes and says &quot;OK what do we think is the best And oftentimes it is a combined solution. I think for the most part, from a product because of the framework and because of the But at the end of the day, you know, a lot of run out of work in a sprint. We will maybe underestimate or overestimate some And when that happens the team knows that they can are at the top of the backlog right. And that's kind of like a Kanban style anyway. I'm not I'm not going to be the gatekeeper of that three days.&quot; That doesn't make any sense, right? We still need to meet the goals. Maybe then don't at least we're utilizing the team to the fullest. I agree. Another. Really good call out of like implementing or kind chance of teaching. So in the use case that you just described and most PMs that I've met, you know, we ran across a board. And at that point if, you know, we need to But we should also have that opportunity to is what in theory we would typically do, I think, do this.&quot; And I think it's a really important aspect of our where exceptions or merging can be made. I find it as a really like inspiring and wonderful methods of implementation because not only does it to what the team needs, but it gives you a chance client too. Yeah, I think that's an important aspect of this relationships because they realize like &quot;Oh you way you're kind of doing it however we need to do Because it's not just how our team works. We So it kind of needs to also accommodate any of If their business requires us to tackle high for the business, then that's going to change the It means that a portion of our sprint every sprint bugs and then that's going to prioritize the other That wouldn't be what a normal recommendation I business needs we're going to accommodate that. I mean it really just helps us that they meet the product. Absolutely. Let us know what you think about all this. You know, Kanban, Scrum. The the middle ground option. Like this, comment, because this is really just scraping the top of