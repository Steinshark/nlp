All right thank you. Sounds okay. Do I look that the cloud was so important, around 2013, The environment of Silicon Valley in 2013, you're We're moving from just pure virtualization into infrastructure as a service automation tools are all the rave. People Cloud was starting to become important at Google. We realized this was a space Cloud was becoming real in a very material way. We're starting to see the ascendance of Amazon mainstream enterprise technology. AWS was this behemoth that By far you know AWS is the dominant, you know, cloud provider. They were early into the game nailed it, you know. It's a great kind The main issue is they were so dominant that have potentially a cloud-based business,' or other companies out there. The problem if you want to change the game, you We knew that we had really good computer technology because everything that Everybody was kind of feeling They got a, they got a head start, right? Incrementalism wasn't gonna actually make change things up? How do we shake the snow all about Google, but at least gives Google a of these customers and to start being that balance Google was looking for ways to apply its If we could leverage that then that would accelerate our So around 2013, I think the world was kind kind of set the stage for things like Docker, Docker is pretty special because almost People got really excited about it. I personally you know, probably the most important project I've the excitement, I get a lot of questions. People is Docker in the first place? I heard about it. It is a big deal. I'll start by saying that containers and the implementation behind I think it will affect the way we the way we distribute it in big ways in the really exciting. So that all has to do with the The vision for Docker, the vision of Solomon Hykes for mass innovation. Back then there was already a to build stuff on their own in their own basement but the next step was really getting those You know, to the Google scale or Uber to anyone. Really, this was really the unfair expertise to run this kind of services at I also get this other question which is basically, Before Docker many companies but that was kind of the secret the 90% of engineers would never know about, It was it was running under the hood at Google for example have been using 15 years and they had this system called Borg What I think was really unique at that time is technology of containers so accessible, The whole idea was, 'how can we build the OS in a way that abstracts away basically puts all the power in their hands, What Docker did that was innovative was needed and kind of bundled that you could run locally, or you could For me, coming from the configuration management the right abstractions, and you see Docker for as a universal solution to the building Docker succeeded in bridging It's a tool that had attracted both people with an and that was, I think, something Docker containers totally changed perspective on container some bunch of the nerds had to create 'oh it's so easy to use and we As Docker was catching up success, commercial at this. Why? Because we were starting to gain Docker gathered a lot of momentum. It presented and really clean and really read Hacker News on any given week As we started looking at technologies like Docker we were like impressed by the strength of specific problem which was packaging But just having a recognition or a realization as we thought about this future more progressive ways of organizing, there was more there. We didn't know at the time what it really meant, but What an incredible year. It is really hard year. I feel really privileged to be at a company So Solomon, I think we're on to How do you explain containers? Yeah, so if you take some real Let's say, the holidays are coming up and you want So let's invent the post office. And the post office says: 'we can ship things, to us. We don't want loose books and jewellery So if we extend this analogy, Now there's going to be a cost for me and depending on how far it is and how and you can think about that like your stamp. Now, whatever you put inside of it is up to you. So the container can support Python, Java, Golang, it doesn't matter. To make Kubernetes efficient as the post Now, the key is you now have to describe where Where does it run, who's it destined to take, or are willing to And so, if you think about it, the post You show up with your envelope and they'll tell you, 'well, this Planes can break down. Cars can break down, but no one at the post office calls They make a promise to you, right? They in two days. How they do it is not a concern. So Kubernetes is built on this thing you have lots of machines in your Kubernetes but Kubernetes' job is to make sure that post office's job is to make sure that letter Kubernetes does that for infrastructure. We abstract away all the details and allow give us an address and, if they can I don't think Kubernetes was If Solomon hadn't done that demo in 2013, if core OS hadn't believed that, you know, if Red Hat hadn't needed to think There's a lot of what-ifs. It looks inevitable in retrospect. It did not feel So Google getting into cloud was an and the story of cloud has really 'Now what? Now that I have a machine, With all of the containerized platforms, with we knew that there was a better If we built the orchestration technology distributed systems, as Docker was we could create something quite perfectly. I'm always more the business guy. I but a recognition that we needed to make inroads against Amazon's leadership and that sort of strength of ecosystem, I really step that would allow us to bring something but that we could really make shine on Google's Our idea was you know, can we create a And the question there was one question around, or do we adapt an open source project that's We're playing with these ideas around what playing with the idea of Docker. One of the key moments, the most distinct moments put together a little demo, because he was such you could ask him to do something and the next day I'm Brendon Burns. I'm one of the co-founders I think Brendon is a creative genius. Like throw off 10 ideas any of which could actually Brendon stitched together something 'holy smokes you've created a personal Borg cell'. it at that point. And for me that was that moment We started working together on these ideas and you know I don't know which of the two well what would it look like if we What if we actually built the as an open source project? What if we made and use? What if it wasn't only available Building a community via open source was going to be our best way to essentially I just wanted an opportunity to put generate a lot of attention and then I wanted to be able to I wanted to build out you know GKE as being an knew that the preconditions for media having some model accepted by the industry, really garner The idea behind open source is the fact anybody to go ahead and use and, Let's say you buy a piece right? You go in and you buy, Then you're like, well I kind of love the game, I want to, I'm going to write my Jigglypuff. Okay great, that's a trademark. I want to go and add another bird into the because you basically buy the software, With the open source, right, that's where right? That is what makes the software go. And so with the open source the and, you know, download or get the source Many times, especially in the there's a lot of contributors who so it's not just like, 'okay, well There might be bugs. There might be so these contributors then come together and they open source basically means that you have - you know the source code, right, and then be able to go ahead An interesting thing to understand of vision and goals to what we were trying So there was an initial prototype. It was just Yeah, so those three of us hacking on it. you know, three developers can do so we're kind of like getting some feedback on it. Like, 'what The Mountain View team was where Borg was was centered, and so we started communicating on of the cloud folks, who know how to build that the unique experience of the Borg people, who knew We did need to have a credible plan for a cloud product, thus we needed and we needed to assure management that The Seattle folks had written this - and it was it was a very much a prototype - going to someone like Urs and saying, 'we want He said, 'why? What do we get out of this? What and so his initial response was, We, you know, we went through a series where we pitched and they were, Getting a big company like Google to do something sort of, like, well, we'll have a meeting next It was stressful because you're, you know, it's obvious. It was obvious to the There were new projects, new ideas, coming that if we didn't get on this, if we didn't get it we're gonna be trying to adapt to something Leadership of course had funding our competitors through open source. We knew what we could accomplish if unlocked to in time I think that were really important One was a bus ride. We were doing an offsite summit with Google's technical infrastructure teams, and had a chance to address the team around Ironically on the way back, I and you know I was basically just Craig and I were discussing this at least the beginning Kubernetes felt too so I would say the starting position was no. I was, like, you know this is the vision, and he got it. Like, he got it quite deeply. One of the big reasons to open source it is which is to shift the agenda of cloud - huge agenda - Google is not big enough to To pull off that agenda, you have right? And open source is the way to do that, We hadn't yet got to a point where there individuals that got it enough to dissuade and at that point it really looked like Google you know, there was too much uncertainty about and how were we gonna monetize it by we put together the sort of last final attempt Mountain View, and I was at a point where I was, Like I know how this is going to go, providing moral support.' I think actually Brendan and I flew down there to have a if I remember correctly, there the decision maker at the time who was pretty, pretty senior. And that VP was I was actually on the video conferencing session his phone for most of the talk, and I was like There was a turning point in the meeting where If he disagreed with us, he'd be like educating us And so I did not see that one coming. We were surprised and we were able to you know, we don't get that it was nice to be able to go and relax in the now what do we do and start that whole planning Finally. It's such a right thing more of a relief where I was like, 'okay, good.' We got the go-ahead to open source it and then we had to scramble to actually get Once our plans were relatively concrete, or to be able to launch at Dockercon. It took us about six months to three months between approval and By the time we actually had it fingerprints on it. Actually took us less time to get approval to release it. We may have been but I think we formally had about but it was sufficiently exciting that We needed more people to join on so we some some people who were loose, grabbed We just got excited and everyone Now it was time to actually start we did a rewrite of the of the thing in Go. was creating a declarative layer on top and that was part of the scramble of As you all know, the hardest problem So here we are, again, we have this project that So Seven M9 is basically a spin-off of Borg, right, because again we were looking It was impossible to release with that name. Honestly we were desperately looking for a name and with the steering wheel, and was like other language for you know &quot;pilot&quot; or somebody &quot;steering&quot;. And we ended Kubernetes. Kubernetes. Kubernetes was the name that came out because it punching Kubernetes into Google at the time, Early on Tim Hockin actually We asked our marketing department, they're just do whatever you want.' I think they And so Tim, who actually has a degree in So we were off to the races.