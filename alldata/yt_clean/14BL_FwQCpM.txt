This is how I learned to code in Python, Javascript of them. But, learning a new language was not always When I learnt my first programming language tutorials and following along. But when I joined Amazon, I delivered a project I had never written a single line of code Later when I joined Google, I used the same to my team. And I have done this over and over again to and Dart. But, how am I able to do all this? Did I take some magic pill that made me a Truth be told, it's actually very simple. For thousands of years, great civilizations the secrets of learning a new programming To find the answer, we have to go all the World War 2 has just ended and after winning throughout the world. As you might already know, English is not non-native speaker. So, they created this simplified version of Basic English had only 850 words. For comparison, there are around 170,000 total In addition to fewer words, Basic English focus on basic sentence structures. To popularize the language, the British used Corporation or BBC to create a show named English vocabulary and pronunciation to non-native But how could just 850 words and a few basic And can we use the same principles to learn To answer that, we need to know a few things Imagine a circle that contains the top 10% words in English. This circle would contain words like I, me, Then we have another circle around it that This would contain words like overpaid and And we can keep making these circles until In case you are curious, the outermost circle For simplicity, let's combine the innermost together. Now imagine that you start reading one of Shades of Grey" which has a total of 150,000 What you'll find is that roughly 80% of inner circle and the rest of the 20% words For those who don't know, this is also known Pareto principle states that 20% of your effort And this powerful principle is the main idea to learning a new programming language really I applied the same principle to learn French mon accent est marrant". "Learning a new spoken language is one thing is totally different", you might say. Well, let's try to test this hypothesis. Let's build the same circles for the vocabulary What would be the top 10% most popular concepts I believe it would include different data Maybe "if else" blocks and for loops would Maybe writing functions and classes would If you move outside to the next circle, you inheritance etc. And you can keep drawing these circles until have I don't know, maybe iterators or generators. Now if you pick all the Github repos in the 80% of the code would be coming from the inner And following what we learnt from the BASIC circle first. But as we do this, we need to be careful about Number one, this 20% circle though fairly languages. For example, in Java, you might have an Arraylist Or in Javascript, you might have async/await The point is, this top 20% circle might change So, you would want to do your own research choice. Number two, when you are trying to learn these learning. If you were trying to learn a new spoken language, No matter how many movies or TV series you French unless you actually try to talk in In the same way, no matter how many lectures you will not be able to code in Javascript In a video tutorial, you will usually get it, sure enough, it will work for you as well. But, programming is the art of breaking and That's why I recommend interactive learning For example, if you want to learn Python, break things and fix them as you learn new Similarly, for Javascript, you can use W3 I am sure you can find this kind of platform Now that you know what to learn and how to to solve. How to remember what we are learning and How To solve the first problem, we need to first Herman Ebbinghaus was a German psychologist learning. He conducted experiments where he would give then test himself at various intervals to What he found became the backbone of how we What you are seeing is the famous Ebbinghaus This graph is a classical exponential decay What this means is that right after we learn quickly. But this rate of forgetting slows down over fraction of what we learnt. But what if I tell you that there is a way Ebbinghaus also studied the impact of revision What he found was that if you review the concepts you remember in the end. And if you repeat this multiple times, your And this is called Spaced Repetition, which This is the reason why if you try to learn they keep repeating the same words again and But how do we apply the spaced repetition The answer to this question is also the answer solve. So, let's quickly cover the second problem The other pending problem we have is that the remaining 80% of concepts. For this, we need to take a breadth first What this means is that instead of taking circle to the outside boundary, we just keep In other words, we slowly keep increasing The biggest advantage of doing this is that to what we already know and this makes learning But how exactly do we do this? To remember more of what we have learnt so all we need to do is build projects. But not just any projects, we need projects I will tell you which exact projects to build But, building projects helps you in 2 ways. Number one, as you build projects, you will And this will help you achieve spaced repetition. Number two, as you build projects, you will If you choose your projects carefully and expand your inner circle to become the same One thing that you should be aware of though of what there is to learn. But look at you. You don't know everything about the language So, don't obsess over learning everything. As I mentioned, choosing the right projects Doing this will not only help you learn faster, that you can write on your resume to impress If you want to know about the 5 projects that this video. My name is Sahil and I will see you in the