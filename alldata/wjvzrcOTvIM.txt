your merchants and welcome everyone to 75 sd letters in under 10 minutes so i would say you make yourself comfortable lean back faster seatbelts because we are about to get started algorithms this header contains computer science algorithms which mostly operate on the sequence of elements and since c plus plus 20 this sequence of elements does no longer only have to be provided as a pair of iterators but can also be provided as a range or as a pair of an iterator in the central you've got the any type which is a typewriter wrapper for any copy constructed will type we've got array which is a wrapper around the c style array and um provides a container api as well as better type safety than the system you've got atomic which is a class template that you can instantiate with any structure layout type and then it provides very defined concurrent access from multiple threads we've got the barrier available in cbs20 which is a reusable fat barrier that blocks up to n threads and when the lag thread arrives the completion function gets executed and the barrier opens again we've got a bit which contains an enum endian to query the endianness of your hardware and as well as several functions to access manipulate and process bits and bit sequences we've got sci bit set which is a fixed size sequence of n-bits that you can manipulate in access we've got charcoal which provides conversion functions between a character sequence and either a floating point or an integer we've got corner which is the date and time library of c plus plus it mainly consists of clocks time considerations and since c plus plus 20 we also got calendar time calendar types and time zones the compareheader provides library support for the three-way comparison operator also known as spaceship operation in complex we've got complex number support uh concepts define some com concepts that are used throughout the stl condition variable is a synchronization primitive that can block a thread until it gets notified and some certain condition is verified our coaching provides library support for coachings as well as the class template ncd coaching handle which is a non-owning handle to the actual underlying protein that the compiler generates bars our deck is a double ended queue exception provides the base class std exception as well as the terminal handler the exception pointer which is some type of shared pointer type to store any exception object and we've got library support for an asset exception execution enables us or provides us with policies to concurrently execute algorithms the file system gives us the possibility to access and manipulate files directories and paths format is a text formatting library which is type save and also extendable by specializing the class template sd formatter for your own types forward this is a singly linked list have screen provides the basic stream buff as well as i o streams to do file i o function provides functional objects to do arithmetic in comparison like plus minus less it provides a standard hash function the type erasure wrapper for any callable object called std function and other from future provides types and functions related to other kinds tasks for example you can query or wait for a future or check feature to get some result that the promise can set in another thread initializer list is a view of a constant area that's get press initialized io mana io mana provides new manipulators that are not working with arguments and as well as functionality quoted ios provides swimmers related stream manipulators that are unboxed without arguments and it contains the two base classes for screens and working with screen brushes we've got an ios forward declaration header iostream provides a few global objects the lcrc locancy in i stream provides the high level streams for reading and both reading and writing hr writer provides tactility concepts for six kind of iterators provides iterator traits and as well as adapters like a back insert and utility functions to work with iterators a latch is like sd barrier but it's a single usage threat barrier so it can only be reached once uh limits provides a class template acidity numeric limits that can be instantiated with fundamental numeric types and provides options to query properties like the minimum value maximum value and so on scdlist is a single a doubly linked list sorry local provides access to um cultural differences like character classification number 14 formatting and can be also overwritten by the user we've got two kinds of sorted maps of key value pairs a cd map where each key can appear at most once and multi-meter can appear multiple times you've got the memory management um you've got to have a memory memory with the memory management support sorry smart pointer three different kinds of those and also atomic support for sharepoint and weak pointer we've got the allocator traits to access an allocator pointer trades to access pointer light types and some utility functions work with your raw sludge we've got memory research which contains the scd-pmr polymorphic allocator which is an allocator that grabs a polymorphic ssd pmr memory resource and there are also three concrete predefined memory resources synchronized and unsynchronized resources as well as monotonic buffer resource we've got the mutex header which provides synchronization support by mutually exclusive access we have several different mutexes and we have some ai locking classes as well as variatic functions to do the locking and avoid deadlocks bars we've got some low level memory management in the header new for example the new handler as well as overloads of operators and ui delete including some attacking node for a line while and destroying the need we've got mathematical constants in the header numbers like pi and e we've got the numeric header which provides numeric algorithms that also work on a range or sequence of elements but we also got gcd lcm and midpoint we've got option which is a wrapper around some type t which either holds the value of the type t or is empty we've got o stream which is a high level facility to write your basic screen map as well as some output manipulators we've got the scdq which is a container adapter which represents the first australian queue as well as priority queue which also takes the comparator such that the underlying container is sorted with respect to the comparator and represents the heat we've got random to generate random numbers the randomness comes from some uniform and a bit engine which first uh reproduces a randomness and based on this we can have a distribution like a normal distribution binaural resolution which then generates a random number we've got the vendor's levels in c plus 20 it heavily relies on concepts for example range board range of you then we can have some range factories like you single or yota and most importantly probably are the range adapters where you can take a range and type it into for example a filter view or reverse view we've got the acid ratio which takes the numerator and the denominator has compiled arguments and then provides some compelling arithmetic and comparison and we've got pre-refined type that's like microcenter which are also used in the chroma library uh we've got a regular expression library scope allocator provides the scope allocator adapter such that you can have a multi-level allocator which you can plug into a multi-level container like vector list of set of string or something like that similar provides accounting symbol form which is a synchronization primitive that controls access to a shared resource like a mutex but other than the mutex you have some counter n which gives the maximum amount of threads that can enter excess that we saw simultaneously we've got two kinds of sorted sets um the sad set ensures that each value or key appears at most once and all these sets can appear multiple times we've got a shared mutex header which provides both mutual exclusive access but also shared access depending on whether you call log or log shared the source location describes a source in your code containing also a file name and a function name and the magic lies in the aesthetic member function current which gets evaluated at the call side and gives you a meaningful object of type source location uh we've got a span this is a non-only view over some contiguous sequence we've got stream which contains a stream buff as well as i old streams to work on strings we've got stack which is a container adapter that represents the last in first out arm stick we've got sdx set which defines some common exception types that are used throughout the stl we've got stoptop which provides threat cancellation with threat cancellation mechanism so you have a stop source where at some point you can request the stop and then you can have several stop tokens which continuously pull whether a stock has been requested and then do some certain action based on that uh screenbars is the base stream buffer class that we have which controls input and output to some character sequence um where we've got our lcd string the stream user read only view over some contiguous sequence of characters swing stream is a synchronization mechanism to synchronize the output to some old stream for example c out system error provides some low level error codes as well as the exception type sc system error which then wraps an error code we've got sc thread to start a new set of execution and since c plus 20 we also have the joining thread um where which joins automatically and can also be cancelled and we have the mesh with at the end to access the current thread uh we've got sc tuple as well as some helper function for it we've got as the type index which is which is a wrapper around sd type info and provides a hash as well as being copied which makes it easier to use in containers sd type info is the rtti of some type and the result after calling type id type traits provides some meta programming facilities uh to inspect and to transform types and compile time uh we've got two kinds of hash maps of key value pairs as the anode map where each key can appear at most once and once and see another multi-map that can appear multiple times we've got the same for hash sets basically uh utility provides a pair as well as integer sequence and some utility functions we've got a numeric vector called trillary we've got a variant which is a sum type that stores a value of one of the types you specify in the template argument list we've got our vector or dynamics contiguous area and last but not least we've got versions in simple responsibility which provides some feature test markers where you can check whether certain features are available or not thank you very much ah 75 indeed that's interesting thank you which yeah thank you kirian that was really interesting um