last time you did a really good animation about top-down parsing we had these sentences in this totally artificial grammar which has only got about 30 words in it all in all but we started here with sentence is subject verb object and in the top-down approach you basically say okay i'll push those on the stack in a reverse order subject verb object and starting at the top of the stack at the left you say well what can a subject be so you do these things on your stack top down one at a time and you start off at the root of the tree and you develop the component parts left to right one at a time it is a lot easier totally by hand to write a top down parser on the bottom up one but what i should be getting to later on and in fact i'm starting right now is to say well what happens if instead of starting up at the root and developing the leaves of the tree as it were you start right down at the bottom with the texturing that you know is correct and try and work upwards you know can you work back upwards from the leaves to the root so in fact let's write that test sentence below here the robot stroked to furry and actually since layout doesn't matter too much at the moment i'll squeeze the word dice in at the right there now be clear we're talking about bottom up parsing now in bottom up parsing you start with the string that you think is correct and you say start with a string can i look into the rules and see how to work up the tree not down the tree and yes so therefore you're looking at possible matches on the right hand side for components of this string reading from left to right okay the how many ways are there you can match the string the against one of these classifications here well the text the string the is the right hand side possibility of an article that's one way to do it oh and then look up here right at the top of the grammar if you have an article followed by a noun like the followed by something else that could be a subject and that's looking good because right up at the top of the grammar we want to end up with subject verb object looking just at the robot and looking at the grammar right hand sides i could do it by saying well it's the subject of the sentence it's at the left hand side and if i go article noun i get the and i get robot but what i've done just to act as a talking point and it illustrates a lot of things here i've given you a shortcut if you want to you can just do the robot with no further interior analysis at all it's an allowed phrase it's the subject now i have to say that as we develop this story we will get into bottom-up parsing because one of the tools we're going to use called yak basically produces bottom-up parses for you not top-down ones and it's a yak behavior symptom that it loves when you're trying to match text strings it likes to match the longest one that it can manage so it is going to seize on the robot all as one phrase as being a wonderful long solution why doesn't it just do there and then wait patiently for now that's not the bottom-up way if you can see a longer oh and this thing by the way that you're looking at is built up on a stack of course it's called the handle i get a longer handle by going for this option here and getting the robot all in one go okay the robot then and you've got to get used to reading from right to left now in bottom up parsing the robot all as one phrase is an example of a subject so we can now say okay the robot is my subject now that act of picking up a sub string from your sentence and going upwards and making it more abstract if you like is called reducing in bottom-up parsing so looking for a longer and longer and longer string to get your handle that's called shifting because you're shifting characters one after another and making the string longer and longer and saying can i go any further start shifting but when you say oh that's a nice long string and it matches and then you go up and say oh that's my subject that is called reduction because you're going to something simpler further up the tree so you can take that off as being done bottom up next thing is you see this string of characters called stroke and once again it's right hand side driven what is there on the right hand side and which rule is it that could possibly match stroked you see in here against verb bit kicked or stroked those three strings are your possibilities so that's fine going right to left you say stroked is an example of a verb so we've got our verb there now again cheated but it's wonderful fun i have not analyzed two furry dice into adjectives and nouns anything like that i've just put it in as a interesting shortcut to have there and it is an example of what i would call an object phrase some of you who are really good english linguists may want to go on about my lack of understanding about what a direct and indirect object are not to mention predicates and so on but please forgive me i regard it as being a phrase in an object position so i'm saying there's a quick match here and bottom is gonna love this two fairy dice a great long handle oh and if i match it there what's the left-hand side it corresponds to obj okay then we've won we have worked bottom up to having subject verb objects on our stack starting with the string and once more we've exhausted the string now it's the end of it there's a sort of full stop after that there we are then we've got top down which tends to be more how should we say eager you know a top-down pars would very probably leap on the word the and not bother to go any further because it's found a quick match for it whereas bottom up is the other way around it's basically saying i want the longest possible handle even at this stage in the late 50s and early 60s there was a sneaky suspicion coming around that actually bottom up parsing was a little bit more powerful than top down i'm going to put out a set of notes for this so that you can look up for yourself just examples of why it is more powerful but roughly speaking i think you can sense that because you've not only got something you're looking for but you've got a handle that you've already accumulated it's like gathering more contextual information going bottom up but on the other hand handling the stack and working out what's happening is a dot sight more complicated if you do it by hand coming bottom up around the doodle by hand why not me and you lot it's a good way to learn lex and yak in other words don't write the c directly yourself get a software tool of these like these two to do it for you so that's exactly what we're going to do i've got the program putty that does ssh connected here i'm talking to my other linux machine in the other room where i have got set up a parser complete parser front-end electrical analyzer syntax analysis for this furry grammar and all legal sentences in it and i know first of all you will want me to call up the program that implements this and the test sentence first of all is the robot's throat here we go so furry it's hanging there it's waiting for us to give a correct furry sentence dice return look at that it's happy with it i've given it to in subject verb object order and i have numbered those rules in the grammar as i showed you earlier and i now have as it were a map of how it has passed it rule three now that is the one that effectively says i can do the robot all as one phrase it has chosen not to go for the and robot as article and noun as separate entities it might well have done that had i gone top down but because this yak confected parser system goes bottom up it's gone for the longest possible handle at that stage and it's matched it rule four the middle piece is matched stroked as the verb and finally it just spotted right at the very end that i put in another sneaky shortcut two furry dices rule six and that is my parse so should we try one more just to make sure go on sean tell me which one to try um the woman bit the dog yeah the woman bit the dog hey well look rule two the woman now rule two not rule three if it's followed rule two it's gone down the article noun route which means it knows that's the only way to match the war the woman there is no shortcut way okay rule four verb rule again you chose b rule five now this time again there is no shortcut to two furry dice at rule six you've got to go the long way around and following rule five you break it down into article now and again the dog so there we are we you could say well you've written a compiler for the furry language with the help of lex and yak we can go into details of that later if need be but not now it's fair enough but it's not doing anything really is it what more should we do with this now we've written it this far then sure can you tell me well i think next time we need to come up with an action it needs to do something right it needs to transform that grammar in some way those of us those of you who in the previous video actually bother to look at the extra bits may have had a sneak preview as to what we're going to do as our much more interesting actions now we have recognized the innate structure so remember always watch the extra bits computer scientists began to say well you know this is great because if we're writing a computer language like algol 60 we can have the whole of the algol 60 grammar display to us and as we're writing it in assembler or whatever we could have half an eye on what to do next because