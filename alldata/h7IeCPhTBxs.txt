before we start i'm going to put a real big disclaimer right up front do not do anything i talk about in this video all of the machines i'm dealing with here either i own them or have full permission from the person who owns them so absolutely do not copy anything i'm doing here unless you own the machines or have permission absolutely don't try this at home do not do not try this at home only try this at home oh yeah that's a very good try this at home but not anywhere else at all what we're going to look at today is i guess we could call it how to hack out of a computer you've got a few videos about things like sql injection and how to get into computers but now let's imagine um you're on a train in an airport or on some network where the administrator is not giving you full access so you go to watch your favorite computer file video on youtube and the network's not letting you into youtube what could you do about that let's introduce the concepts that we need to think about so let's get the ohp okay so let's start and think about some kind of basic setup so here is a crude drawing of a laptop and you're connected into a network here you want to access the internet over here but here is our animator today the fire wall all right so there your only way out of the network is via this firewall and the system administrator can put various restrictions on there so let's imagine if you're on a train in the uk the bandwidth is horrible because it's got to go via cell phone mass and it's changing about what it's connected to so they typically on a train in the uk they're not going to allow you to watch youtube because that will take up the entire bandwidth for the entire train right so that firewall will be set to block that site and so this will have a bunch of blocking rules and that can be a variety of things we might say we'll block a particular site we might say we'll block a particular port remember this abstraction of a port it's what transmission control protocol uses uh to determine where connection between two computers which application we connect to so http web is on one port secure web https is on another port ssh which you use to connect into a computer once to another port and those rules might block um a particular site or they might block a particular service so they might say you can't connect to your email server or they might say you can't connect to ssh something like that port 80's default web browsing and port 443 is default secure web browsing nowadays almost everything is over https and if you see something running http that's pretty old-fashioned so for the purposes of this demo i've set up a machine belonging to a friend of mine so this is going to be living somewhere on the internet and this is our kind of target machine here so it's a machine called twisted i've set up a little test web page on it not even a web page now the curl command is just a text way of browsing the web it's just a text way of grabbing a web page and this is just saying grab from this machine twisted the page saying test and we get back this hello computer file viewers this is a test to show that we can access this file right all pretty simple now let's imagine we are the uh system administrator and we're going to start messing about with the firewall so i'm using linux this'll work more or less the same on macintosh the firewalls are pretty much the same the world over uh it's only the syntax were different so this one is ufw i think it's ultimate firewall very uh exciting name um let's have a look at what it's doing so far so whoops mistaking the password because this is my home machine and there's actually there's no way into this machine anyway it's just it's denying three different things all related to mail service allowing anything else so what if we say let's block off that website we wanted to go to so i can very simply add in a rule to block some ports off i'm going to deny outgoing traffic that's the ip address of the server i'm trying to contact and i block off https and i block off http and if you look at our firewall status it's denying to that ip address it's denying outgoing traffic to http port 80 and https port 443 so now in theory we can't get any web traffic through to that website so let's try again our command to get that web page we're trying to get it we're trying to get it and it's timed out i hope i've convinced you that me the nasty system administrator has blocked myself from accessing that website the question is how can we get around that there's quite a few ways one of them is to use ssh now ssh is the command we use not the normal use of ssh is just to log into a machine so if i do ssh richard richardplague.org that'll simply connect me to my remote server yeah that's the normal use of it it sets up a cryptographically secure connection from one machine to another so i've connected from my home machine barcentine to my server richardclub.org that's how you send your files to me as well isn't it yeah that is actually yes ssh and scp that's how i transfer the video over to sean for it to do the magic and try and make me look good and edit out all the bits where i've gone erm but there's lots and lots of things you can do with this ssh it's a generic way once you've got that ssh connection open we can do a few things with that so here i'm going to add in a few little things to that command so i'm going to tell it minus f do that in the background n we don't want it to execute any particular command and this one this minus d1080 this is going to take a little bit of explanation but what that says is for the ssh command it says listen on the local computer on port 108 and any traffic you now get to port 1080 i want you to push that traffic down the tunnel yeah down the ssh and have it come out the other end so now what we've achieved is anything that i send to port 1080 on my local machine we'll go down this tunnel and come out at the other end on my remote server on richardglad.org yeah what we've kind of done here is we've built let's have a richard clegg.org on there i'll just put richard for short and what we've done is we've built a little ssh tunnel and that's listening on port 108 oh so anything i push to port 1080 on my local machine that's going to spit out on this machine here okay so what's the point of that we can use that as a proxy we can pretend that that is our web service so for example if i do this that says to the curl command so i've got this socks5 it's what we call a socks proxy it's saying there's a raw socket there's a raw port that we can push data down and it will act as if it's a connection it will act as if it's a tunnel uh into this machine so now i'm saying instead of going directly to this machine i want you to go via that socks proxy and we can actually we can set our whole machine to use this we can go into settings except for proxy and we can say 27.0.0.1 report 1080 is going to be a proxy host so now if i do this my web browser is also using that proxy host and my web browser is going via this ssh tunnel to access the site that's the very simplest way we could get around this problem if you're on a macintosh you can do something similar if you're on windows you can use a program called putty to do something very similar there's actually a really cute little problem with this and if you do this you find your connection becomes incredibly quirky your connection becomes really unreliable and there's a nice little reason why that is because what we're doing is this ssh tunnel uses tcp yeah so tcp is a lossless protocol tcp ensures that packets that are lost are re-transmitted okay and that's fine that's tcp's job but we're doing a really strange thing here with the socks proxy because what we're doing is we're now inserting a second tcp session but it's going over this tunnel the tcp over tcp tcp over tcp so the tcp is being carried by the extra section which is also tcp things in this tunnel now can't be lost yeah because the tunnel itself is providing reliability now you might think well that sounds great richard we don't want things to be lost double reliability yeah we've got double it must be twice as good super reliable right the problem is that tcp actually relies on loss tcp doesn't work well without loss because tcp uses loss to tell when it's too congested the only way that tcp knows that a network is congested is when packets are lost so there's another thing we can do so i'll just kill off my tcp tunnel now instead there's a really nice program uh called s shuttle which wraps up all of this tunneling nonsense into one uh quite convenient program so it's brilliant it takes care of the tcp properly so we're not doing that horrible tcp over tcp thing which should offend anyone who's studied congestion control you should be really horrified by tcp over tcp so s shut up really simple command here this is saying s shuttle to the remote server richieque.org any traffic on this machine destined for any of this particular address block uh is going to go through that tunnel and this will just take care on a limited view that will take care of any traffic destined for anything beginning 178 2576 as an ip address and it will take care of ensuring it goes through that tunnel so we've got to wait a bit for that to set up and then just do an ssh in and i can connect in even though port 22 is blocked and the only access i have is a proxy server we can get in like that if you wanted the one line of how to do it if you were on a place where it allowed um where you had access to ssh and you had your own server that's that s shuttle is a brilliant way of doing it if you're the system administrator you might think well i've still got a few things i can play with here because you're a system administrator you've got a lot of power in this system one thing we could do is block off ssh yeah you could say well hold on if you're going to use ssh for shenanigans let's make sure you can't do that again there's a real simple response to that so if you're if you're running your own server you can say fine you've blocked off ssh what i'm going to do is i'm gonna make my ssh work on another server so here we're just telling this server this is the richard clegg server and we're just saying to it make port 444 act as my ssh server we added that rule and now we can ssh to port actually probably can't because i probably haven't opened port 444 um [Music] okay so we feed it fed in the gap in the firewall for us so that's a server i control and now we can run that ssh we can run it across port 444 and even if the system administrator blocks off port 22 we can still get it now if you if you are actually wanting to make a site if you actually wanted to make a network really secure you don't have default open ports you close down everything yeah and if you want to make a site really secure you don't allow people to directly access port 80 you don't allow open access to port 80 anyway you use a web proxy let me draw out that more secure system for you in our hypothetical scenario this richard clegg machine this is our web proxy our system administrator is really locking things down and they're going to block everything there's one or two things you have to allow and if you want people to be able to browse the web you need to allow some access so what you need to allow is access to the web proxy the only thing that we're going to allow the person to get to is the web proxy and that web proxy then you can say yeah and that web proxy is only going to carry certain sites and they're going to carry on a loud list of sites okay so can we now get to our target machine up here the twisted machine this is a little bit more challenging i mean to be honest actually when i was messing about trying to do this it took me quite a while to get this one working the basic thing we can do here is use the web proxy to bounce our ssh yeah so i'm not going to explain too much about this but i will on the way i just want to explain one command this this command is so useful in networking it's not as well known as it should be and this netcat command is gorgeous to work with it's so useful for testing and making sure that machines are working and it's just a way of generically allowing you to listen on a port and wait for a connection and send traffic to this port so it works in pairs so i'll open up another gap in my firewall i am going to shut these after the video so that's added a port 222 to listen on and this says listen on 2 2 2 2 and then from my home machine so i type hello there and it comes up that may not seem like much but that is so useful for testing your network for making sure that those particular ports are open but also this is now it's become a generic way so i could for example i could look at my web server and see what happens if i say hello to a web server and it said that hello is a bad request because that's not a language that web servers speak yeah um we need to get working on that i think yeah yeah i'm not sure i think probably sticking with uh http is is good for the old web server there that's a bit of an aside but i think people who don't know the netcat command they're really missing out because it's really really a very very useful command so what i've done is i've made this richard clegg.org machine act as a web proxy i have to do a little cheat here because i don't have root access on that twisted machine so what i'm going to do is tell my proxy server whenever something exits on port 443 i'm going to map it back to port 22. so that is how this command looks here and this is saying anything going to this twisted machine is going to be routed to port 22. this proxy command will use so we use ssh and we tell it we'll tell it to use a proxy via the nc command via the richardclag.org proxy so this richard.org 3128 is a proxy server listening on 3128 and if we do that we can now get our traffic through the proxy and into toy box or trying to make an ssh connection but on port 4 4 three it's coming over here and there's a little bit of a cheat here where i'm going to map that port 443 back to a port 22 which is the correct port for ssh and it's going to arrive here at the ssh daemon and we can respond and we've got our ssh tunnel set up again so even though the system administrator only allowed access to the authorized web tunnel we were still able to get an ssh connection through and do all that tunneling there's actually there's some really weird and wonderful varieties of this tunneling you can do so we've talked before about a ping command and the ping command was the command that let us send out a test to see if a server is working and we can actually add traffic into that ping command and use that to send our tunneling so i can add a little bit of informational messages onto the ping and use that to transmit information but my very favorite one of this this is lovely is tunneling over dns domain name service so this is a a really interesting way of tunneling data so domain name services job is to say if i tell you there is a machine called computerfile.org the main name service is the part of the system that converts that to an internet protocol address yeah if you're the system administrator of computerfile.org and you want you want a little extra way to get around networks you can subvert that domain name service system so it's your system that's ultimately responsible for returning the correct ip address for computerfile.org now what you can do is you can also you could also have shawn.computerfile.org or mynewserver.com.org or data i want to transmit computer file.org and what's going to happen is the dns system will eventually pass that request data i want to transmit dot computerfile.org that will eventually get to the dns router you are using and now you've got that data from the system so you've established a path where you can transmit data even if the only thing the system administrator is allowing is domain name service you need domain name service so um there's a system called iodine that will allow you to tunnel these things over dns um i've not tried it myself because it takes quite a bit of setup but it's a really cute idea i was uh intrigued by the um i was intrigued by the level of ingenuity that went into that one so we now know how to tunnel our way out we now know how to lower in a variety of circumstances we now know how to tunnel out the network but let me convince you why this is a terrible idea so okay if you're on a train at an airport you might get away with it you're violating their terms of service but if you're doing this on a on a in a place where the system administrator has locked things down well enough that the only way to get out of the system is through a web proxy and they are only allowing you to access some sites there are probably an awful lot of alarms and tripwires they're probably monitoring that system very closely so i spoke to a few friends who do web security stuff in the real world which i certainly don't do i'm an academic and they said yeah it should but we would catch those people really quickly because if you think about a web proxy what you typically do to a web proxy you send a command all right please give me this website let's send you the website back what i'm doing in abusing that web proxy i'm setting up a long-lived connection that will be there for many many minutes or even hours that's instantly suspicious all right so instead of this this connection being there and gone that connection is lasting hours if a company is really serious about security they've got proper endpoint monitors on those computers and in any case they're probably not going to let you install arbitrary software like this shuffle on your computer anyway well the other thing my friend said to me it's quite compelling reason is he said if you're on my system trying to hack your white out maybe you'll be lucky some days uh maybe you'll be looking once or twice but if you're not going to be caught you have to be lucky every single time and i only have to be lucky once to catch you to me that that's a very compelling argument for not doing any of this values are kind of the same i mean they're not they're pretty close that's a little bit darker perhaps because the blue's a bit stronger considering you've done that without actually measuring anything yeah i mean obviously that starts to happen the traffic's just going to carry on going around in that loop you've got big problem