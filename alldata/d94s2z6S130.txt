uh so let's do this and now announcing wazex was sex was sex was sounds exciting today we are very excited to launch a new initiative that will start shaping the future of webassembly on both browser and server Wazi was announced about four years ago and was a let's say it was a great push to uh let's see to move the wasm community forward it got everyone so excited that even Solomon the founder of Docker tweeted about it wasm plus was I existed in 2008 we wouldn't have needed to create docker that's how important it is webassembly on the server is the future of computing a standardized system interface was The Missing Link let's hope waza is up to the test so some things for those that don't know there's some difficulties with Waze such as there's no async there's no like async runtime so when you don't have that you it's kind of it it becomes hard right you have to write you have to go write your own little future Walker and Rustin all that kind of stuff it's missing a lot of things you can't just you know there's there's problem with sockets there's problem with all these different things that exist in just like up here was eye environment and you got to be careful of right because you can't you know what I mean just write your own round robin or something yeah exactly um why was I'm on the server well the reason why is that wasm's fairly fast and once you have the the ability to run like a Wazi a Wazi time like a wasm time kind of environment you can just run your compiled program anywhere anywhere that has Blossom time right and so that's why it's it's like Docker oh dang it I keep clicking I'm trying to unhighlight it but it's like significantly less Docker you know what I mean it's like JavaScript effectively yeah that's probably the best way to put it it's like JavaScript except for you don't need to uh you don't need the parse and you don't need to optimize that's already done for you so that that makes like a huge difference right and it works also in the browser via V8 right it sounds like the jvm it's like the jvm yeah that's like the effective idea of the jvm uh all right drumroll the wasmer team and the key community members have been working relentlessly to enhance the existing Wazi ABI stabilizing and making it more compatible with posix posix programs I just offended so many people just then it was so good it was so good uh today we are incredibly excited to launch Oasis is ready to uh today for the community to build awesome apps and complete their runtimes supporting threads Berkeley sockets foreign let's go like this is this is awesome this is awesome this is awesome right like these are really big things that you needed yeah uh forking and many more things that have been available for uh for almost the whole life of posix ah let's see let's see we believe this step will pave the way by making it easier to compile any app into wasm to run it anywhere and here's the proof by the way before we look at it if this article contains leptos it's because I said use leptos he's already sent me a leptos example being like look at this we have it with leptos too and I was like yes because leptos is the best Greg if you're listing leptos is fantastic the the admiration and all I have for what you've built way up there Gregory just let's just so you know uh we believe uh okay yeah here we go so wasmer Run net curl curl this one right here head title blah blah you'll note that you'll need wasimer a 4.0 Alpha One to run it but not only curl we can also bash a python Tokyo Hyper axum Static web server and many more uh apps and libraries running on the wassix uh even your very own websites run on wassix did you go let's see uh do you get as excited reading this as we are working on it continue to read to learn more okay don't don't do transitions just so you know it just is always weird right so what exactly is was sex was uh is the long-term stabilization and support of the existing wasi ABI plus additional non-invasive system calls uh extensions that complete the missing Gap sufficient sufficiently enough to enable real practical and useful applications to be compiled and used now it aims to speed up the ecosystem around Wazi so that the wazamification of code bases around the world can really start today and it does so without breaking changes to Wazi preview 1. it's pretty cool right like I think this is super this is super cool look at this look at this I will say that you know for everyone that that just thinks I'm a dum-dum you know me being loud and saying I like a lot of languages and then doing a bunch of fun stuff and it does help it does help put eyes on stuff you know and so I I would I would like to say that I I'm happy about all this you know what I mean uh it's a tool chain rust C upcoming support for Zig assembly script expected uh up uh Upstream support soon uh it's a specification runtime support starting with wasmer but we expect more runtimes joining the initiative soon it's fully runnable in browsers see like that's super cool right like this so this is why the wasm future has a high potential you know what I mean uh what extension features will you get with wasix uh full support of efficient multi-threading support of the socket socket bind connect ipv46 udps TCP multicast anycast raw sockets oh you can raw dog a socket well one of my jobs I raw dog the socket and see uh I needed to communicate between nodes and they gave me the ability to send out stuff some sort of Wi-Fi on it but the memory on the device was so small I couldn't load up the TCP IP stack so I just wrote my own video encoding and sending algorithm over uh uh ethernet I used Wireshark and Java to display the video in a separate application it was so sweet that was my first job that was my first job and here's the best part the person who gave that to me just said hey we have this we have this robot and we need to get video I need you to be able to turn the motors and we need to get video off this and also try to save it onto the device so what did I do I made it all up I I literally just made up everything it was so much fun uh changing the current directory changed her set jump long jump um all right P threads process forking sub process spawning oh my goodness TTY support asynchronous pulling of sockets and files pipes and even support pipe event DNS resolution I don't even believe in DNS okay do you realize that in the last two weeks I could not release my library it kept hanging and I now realize what it is which is I have to restart my computer after so many times going back and forth on the VPN because my DNS resolution sucks and it's DNS it's somehow DNS every single effing time how's it always DNS why why five DNS a month why is it DNS 0 days since it was DNS dude it is right DNS and uh no I don't want to write DNS I have a book a networking go that does DNS I don't want to write it though uh running seamlessly in the browser or server was six programs can run anywhere in the browser or the server and example is to create wasmer web which basically showcases that any wasix program uh published to wasmer including uh those with threads and forking works also osmer running in the browser too good to be true try it yourself so I do want to uh so on the stream I will be trying it myself by the way we'll be doing this after we get done with The Interpreter I'm going back to the prime stack and I was actually part of the reason why I took a break and started doing this interpreter is I was actually waiting for wasmer to do this because I already knew they were doing it and it's just like the current environment kind of sucked I needed something that had I needed something that had like the ability to be really useful to people because you can't like having a half ass Solution that's kind of hard to deal with just sucks I needed something more and so very excited about this um go check it out uh again there's no sponsorship here no one's paying me to say this I I just genuinely think that this is a pretty exciting project pretty damn exciting project uh I'm very happy that I got the chance to hear about this early uh I actually don't get this uh is this to be implemented by your browser no the browser already does it the browser V8 already has effectively all of this for you now there's some things that you probably can't do I wonder like about the UDP socket I don't know if you can raw dog a raw dog a socket with V8 my guess is you can't but maybe you can maybe it depends on the you know the environment and all that I have no idea so my guess is that a lot of it is supported already in browser you know because you can do threads and you can do async wasm in uh in a browser right you can just do that and boom I always thought wasm was just a way to execute binaries on uh browser why do we need uh an extension uh it's because you need to be able to have the whole thing like didn't you just I mean did you not listen to the article this is why people should be very excited about this I am personally very excited about this we will Deep dive on this here and a month whatever however long it takes me to finish this interpreter I really do want to finish The Interpreter did you tell her about the blue hair I did uh so this was not uh possible previously yeah so was it was a Wazi time like things like that you couldn't do this you had the you had to write your own async resolution within your code so that's why if you're on fermion if you were on fermion you couldn't have async code you know when you write your program to be async and all sudden you can't use async code on a specific area you have to then create an async like it just becomes more complicated to think about right uh audio gaming thank you very much I appreciate that uh anyways there we go anyways awesome great uh let's go like this and there we go hey the name is the wasemogen was Imogen The wasem the name's the primogen