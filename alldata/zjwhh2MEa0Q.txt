Yes, Python has a ternary operator. The ternary operator in many languages since 1960 
has looked something like this, using the question mark.   But Python is way too cool for that. 
So in Python, it's written using "if" And to top it all off, it's not even referred to 
as a ternary operator, even though it totally is!   Instead, an expression like this in Python "a if some condition else b" is technically 
referred to as a conditional expression. But anyone will know what you mean if you 
say ternary operator or if expression. Side note: Why is it called ternary 
and not trinary? I don't know, maybe if 
you're an English expert, you can comment down 
below, and I'll pin the answer. The way it works is it 
first evaluates the condition, and then if it's true, gives you the 
first thing; otherwise, the second thing. This is kind of out of 
order of the way that it's written. But it's more in line with how 
you might say it out loud in English. The value is "x" if "x" is bigger 
than 0, otherwise, negative "x." A lot of different alternatives were
 considered, but they literally held a vote. And this "if" syntax won 
out over using a question mark. But importantly, the condition 
is the first thing that's evaluated. And the expression that's 
not returned doesn't get evaluated at all which is important in a case like this 
where we don't want to divide by 0. It's a similar idea as 
short-circuiting for "and" and "or."   It's basically just syntactic sugar for a 
full "if" statement, but it also returns a value.   And keep in mind that 
this is Python. And in Python, it usually doesn't check
 whether a value is literally "equals equals true." Instead, Python uses its 
notion of truthiness where something like a non-empty 
list would be considered true, but an empty list would 
be considered false. In general, it's good for short definitions, like 
setting the default value of a mutable argument. But do your best not 
to go overboard. It quickly becomes unreadable if you try 
to stuff too much stuff into one expression.   Just like with any other operators,
 beware of operator precedence. Where you put or don't put 
parentheses can change the answer. The ternary operator has the lowest
 precedence of any operator in the language. So the parentheses, if you were
 to put them in, look like this: Now for the surprising part, the Stack 
Overflow answers for this question.   Luckily, the first answer 
is the one that I would recommend. But number two with 
over 900 upvotes. And number three with over 400 upvotes 
tell you to do something completely bonkers. These answers are 
from 2008 and 2009. Back when these answers were written,
 they served a completely legitimate purpose. But today they should not 
appear anywhere in your code. I wish Stack Overflow 
had a way to flag an answer as severely out of date without 
hurting the reputation of the original poster. After all, if you tried to ask this 
question again today to get a modern answer, it would surely be 
closed as a duplicate.