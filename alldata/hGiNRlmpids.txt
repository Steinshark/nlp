[Music] hi everyone this is a little game called Spirit River which I made over three days for the xkcd Game Jam the idea is simply to input commands to the slow console on the left so for example accelerate for five seconds and then turn right for eight seconds you then upload those instructions to the Maas River and watch as it carries them out obviously you have to keep refining the instructions until the rover is able to make it all the way to the end of the level in this video I just want to share a bit of the development process and talk a bit basically about what went right wrong and what I learnt but first of all I needed an xkcd comic to base the game on since there was the premise of the game jam and I eventually chose this one which tells the sad story of a Mars rover called spirit who believes that if he just does his job well enough then someone will come to take him back home to earth but no one ever does to control the rover I thought since it takes quite a while for information to travel between Earth and Mars it would make some sense if the player had to program the Rovers commands ahead of time rather than controlling the rover directly I began by creating a simple console interface and pausing the text into a set of commands which the rover could then use to determine what forces to apply to its rigid body the wheels turn independently of the body which can only rotate while the rover is actually moving the steering does to look a little bit fishy though so I definitely like to figure out an improved approach for future projects anyway one of the first obstacles I ran into was getting the rover to climb over objects whenever it hit something it would just veer off to the side it helped a bit to allow the wheels to lift up when they detected an object but even when that work correctly I was still getting some annoying drifting quite often pretending that everything was fine though I gathered some reference images and began creating a simple model of spirit in blender [Music] when it was done I brought the model into unity and set the rover up with my janky wheel system I'll sit it away with the force base movement because I was sick of fighting with that and just rotate and translate the rigid body directly which was a lot easier to deal with one thing I was worrying about at this point was how I was going to let the player know whether they're supposed to go I thought I could have flashing arrows or some sort of map display but I wanted to keep the aesthetic as simple as possible what I decided in the end was to just make it quite obvious by keeping the intended path a very flat I could also then write a shader that used the surface normals of the mesh to tint the flat regions a certain color in this way I could make sure that there was a strong sort of visual distinction between the path the slopes and the other areas of the terrain with the help of a rocky texture I could start tweaking the tint colors to get the kind of look I wanted ignoring the physics problems trying to infiltrate my project I soon had the Maas River happily surfing along the Martian landscape very nice with the graphical elements not starting to fall into place I whipped out the post-processing stack and after the traditional fooling around with the hella grader I settled for increasing the exposure a little bit adding a vignette some bloom to help highlight the path little bit more and a wee bit of ambient occlusion to help tie the year over and the terrain together visually I wanted to leave some tracks behind in the dust every point one also units that a wheel travels if it was touching the ground during that time it spawns a new segment of line renderer with a simple tracked x4 attached clearly though I should have aligned it based on the surface normal instead of just using the rotation of the wheel you can see it juts out into the air in some cases which is question I saw war but on flutterin at least I think it worked fairly well we're ready to design the final level I use blenders touring tool to generate a starting mesh and then sketched out the basic path shape that I wanted selecting the faces inside that path I could then scale this down vertically until they were roughly flat and after some tweaking I had my final level layout I imported that to unity and added some dusty particles and also modified the terrain shader to use for the rocks allowing me to blend them into the soil a bit I also thought it would be nice to show the player how far they had left to go in the level so I created a straight line path from several waypoints and used that to approximate how far the rover would still have to travel from any point on the map the last big task was making the thought bubbles I thought this was a very important aspect both to link the game a bit more to the sauce comic and also to provide some distraction for the player while they were waiting for the rover to follow the commands I started by drawing some bubbles in Photoshop and then set up a thought system that was context aware in the sense that it knows if the rover is currently performing a specific action or if it's stock or toppling over etc with the system in place I could start writing different categories of thoughts for example the largest category is these random thoughts which just occur when nothing important is happening and these can have a continuation so lines that continue on from the main thought so that it's like the rover is having a little conversation with itself rather than each thought being completely disconnected then there also categories which are triggered by a session event so for example the topple thoughts are things like uno and jar and then there are categories which only occur in a certain state say for example the toppled please replace the random thoughts when the river is toppled over so thinks about stuff relevant to its situation why didn't they design me with flippers or surely they wouldn't leave me like this for example after writing out loads of these little thoughts and making a title screen and also hastily adding some sound effects and a music track which I generated with an online tool the game was complete at least by the game jam definition of complete time's up so looking at the final thing I'd say visually it's fairly good and the overall experience is polished but the gameplay while quite interesting in concept really needs to have a lot less down time spent simply watching the rover for not to get boring very quickly if I'd focused more getting the game to a playable stage early on rather than fiddling with visual niceties I could definitely have realized that with a lot more time left to spare and maybe implemented some sort of time rewind mechanic to make things more engaging another huge problem is the lack of determinism in the physics it's very consistent if the rover follows a smooth path but as soon as it bumps into something or has to mount a rock things quite quickly diverge anyway as is usually the case with these things I had an occasionally frustrating extremely exhausting but a very enjoyable time at making this game if you'd like to play it or poke around in the horrendous source code links for that are in the description thanks for watching Cheers you [Music]