get in for there we go good boy sit ladies and gentlemen good morning I am stressed out I am stressed why am I stressed I pre-read the problem with chat 2 seconds ago challenge today is not easy if we don't get python today it's going to be a bad time see what happens all right it's it's Lua so uh let's see let's let's get after it all right literally look at me I literally have zero L experience I have written zero lines of Lua you take the boat and find the gardener right where you told him he would be what anyway managing a giant Garden that looks to you more like a farm a water source island island is the Water Source you point out that snow Island isn't receiving any water Almanac your puzzle input lists all of the seeds that need to be planted it also lists what type of soil to use with each kind of seed what type of fertilizer to use with each kind of soil what type of water to use with each kind of fertilizer and so on the almanac starts by listing which seeds need to be planted SE ceeds 7914 5513 the rest of the almanac contains a list of maps which describe how to convert numbers from a source category into the numbers in a destination category that is the section that starts with the seed to soil map describes how to convert a seed number the source to a soil number the destination the maps describe entire ranges of numbers that can be converted each line within a map contains three numbers the destination range start the source range start and the range length okay so 50 98 and 2 the first line has destination range start of 50 a source range start of 98 and a range length of two this line means that the source range starts at 98 contains two values 98 99 destination is the same starts at 50 50 and 51 okay and then so we have to okay and then so it just replaces those two numbers like that okay so by this map we can see that seed number 79 corresponds to 81 which wait why oh seed okay so we do this for all of the things in that table they'd like to know the closest location needs a seed using these maps to find the lowest location number the corresponds to any thatal seeds why do indexes start from one and Lua wait is that is that real dude that's going to [ __ ] me up so bad oh no this whole thing is an array problem look in the range 98 + 2 right 50 + 48 is 79 in here yes what do we do to 79 we add the the difference between the base in this solve with Vim macros are you insane no no Lua like I'm just going to mess around right now I'm not going to actually run the script all right so we'll do like um IO good io. openen sample.txt oh okay cool so it reads line by line interesting content equals read all of sample.txt and we'll do print content great okay so we have the whole file full disclosure when I'm doing languages that I've never written before Lu being one of them I'm not going to sit here and bang out a string parser function I'm going to steal it so with that being said we now have properly parsed the file into the various uh call them chunks or like rounds we have to do right so now we have to do is parse the first line in those chunks and split that off of spaces and then convert those into our numbers okay here's what I'm going to do that's going to probably piss off a lot of people but every array index that I do I'm going to do 0 + 1 like I I know syntactically that's disgusting and I know that you could oh just use one no I I need to be able to read this [ __ ] and if I do Lua style like get the first element no so we're going to do 0 + one you're going to be okay you're going to be fine all right my seeds equals that for IV in I pairs of my seeds do split lit on Space if I greater than one what does the proper syntax do is it just do is this whole language dos and ends oh not do it's then but fours are do get out of here all right cool we have all our numbers so I need to make a a list two process equals this two process of the size of two process + one equals number B great yeah okay good so we got them all they're all numbers now okay iterate over all the chunks for all the chunks iterate over all the lines then split this okay this is going to be this going to be a lot but for I seed we're going we're going to ignore this right now for I seed in pairs to process do for blank Chunk in I pairs of chunks do lines equal chunk dots or chunk split on the new line and we're going to do four blank line in I pairs of lines do this is so gross and wonderful and then we're just going to print line here I know this will be a lot of overprinting but I want to just prove that it's the right the right thing all right let's pump this into less real quick processing seeds um ooh oh right I have to remove the first line if c = 1 do 0 + 1 do and then we'll end here just end right I can do that right I can I can end a function yeah how do I how do I like uh is it break yeah Lua continue in for Loop perfect I have to use goto statements dude this language is cursed now this Cur C++ dude I don't know if I agree with that all right here we go there we go okay seed 79 boom we're in all the chunks print every line now for blank in line for we'll do L right same thing if L equal 0 + 1 then go to continue end wonderful so we're going to print all the lines that don't contain nope okay um oh oh oh we have to do two we have to do outer continue inter continue okay so this becomes outer continue this becomes inter continue wonderful so we have our number we have to get the source destination creat a range no not even create a range like are we are we in this keep I continue with the bottom first of all so again I'm I'm going to split the split the line Des equal nums of 0 + 1 two number Source equal to number 1 plus one 2 + 1 of this boom and we can say if the current seed is greater or equal to D or seed is less than or equal to no not Des not t to Source or seed less than or equal source plus range then and Seed plus equals what is it it's going to be and if this happens we'll do fix seed here yeah okay syntax a in your plus Lua doesn't have plus equals guys this should not have worked hold on 70 yeah no oh it has to be and and and and duh not or sorry cuz if it's if it's or it'll hit it all the time very good very good very good new seed 77 that's wrong oh plus equals Death minus Source that's what it is new seed 74 so in theory 74 78 82 perfect we actually 53 so we're walking the table correctly it's actually really really good should we just let him leave the off by one error and hopes we add something hold on hold on hold on where you where is there off by one error explain that to me Source plus oh you're right yep um hold on so I think we're getting to a point here where we get a empty line and it's mad about it okay so then we have to do what is the lowest uh location so we can do lowest equals this boom haha good lowest equals that and then we get to the very end of this and we can say if seed is lower than lowest then lowest equals seed end nah that's wrong that's wrong that's wrong that's wrong and then after all the seeds have been processed we print lowest got it okay we're good we're getting there we're clicking with grease or something oh yeah yeah yeah yeah okay so the issue is here if it gets to the end of the file it freaks out if range equals nil not null nil and go to oh continue ending chunk low is to 35 is that the answer we got 35 okay we kind of just got a YOLO okay okay okay okay all right guys I feel good about it oh Jesus Christ please oh God I can't handle it I can't handle it I'm [Music] weak you won for now what hey just so you know the the first try rule doesn't apply to round two it's only a round one rule okay this happened yesterday too how was L Lu is not bad Lu is a very simple language it's kind of like go it's like there's not a lot of syntax it's kind of like bash where you have like four thing do or if thing then other than that it's like it's a very simple language everyone will starve everyone will starve if you only plant uh such a small number of seeds rading the almanac it looks like the seeds line actually Des describes the range of seed numbers the values on the initial seeds line come in pairs within each pair the first value is the start of the range and the second value is the length of the range oh okay so it's 79 to 103 55 to 68 yeah okay we can do it the way that I think everyone's brain initially goes to where it's like oh generate the range of those numbers and try all of them but the problem with that is if you look at my input it's not yeah that's not feasible I mean here's here's the thing guys I have to go at two hours I'm at an hour and a half in I might just let it run for 30 minutes I might I might just let it run in Lua to be TBH we are we are doing this in an interpreted language in Lua in a VM on top of windows I'm waiting for like the first round to to finish okay well let let's see computationally which round will be the longest so this is uh let's see 160 million 82 million that's going to take twice the time about the same time 500 million 80 million 500 million again 36 million uh I've been at this for 2 hours I'm going to admit defeat today on part two I got part one I got part one I understand that the The Brute Force solution is incorrect um I need to figure out how to do this without brute forcing it anyway guys GG's thanks for watching uh we'll see you next time in the next video day six go check it out it's over there it's up it's up there good we'll see you there