Captain Buzz flies a Plane by using the audio jack in the audio jack alone this means that you can put your phone into a plane throw it away and with almost no other electronics on board the phone alone can control the plane so by using the audio jack what we can do is put a cable directly from the Jack into uh the plane servos and we generate a special type of music called pulsewidth modulation pulsewidth modulation is basically generating a horrible buzzing sound which is where the name Captain Buzz comes from these Square wave pulses are then interpreted by the servos as traditional commands so one of the initial problems that we had with Captain Buzz was that while she flew she flew badly and would struggle even to fly straight and level so I was tasked with trying to reduce the lag in order to make Captain buzz fly much better so that she would turn from a pregnant duck into a fighter pilot now one of the things that we found was that a lot of the lag uh in the phone is not so much caused by receiving sensors but by the fact that Android has not been made to fly planes around so funny enough when Android was built and they decided to add audio music to Android one of the key concerns was that when people listen to Taylor Swift they don't want be beats being Dro dropped so Android actually has a policy whereby every app when you send it audio data it uses a technique called buffering to make sure that uh all of the data is collected and stored by the operating system for a bit before it's actually played out loud this is great for music but when you're trying to fly a plane you don't want this lag and you don't necessarily mind if some of your Square signals get lost you just want to make sure that the time between them being generated and being played out of the audio jack is as small as possible so the delay is largely controlled by the manufacturer of the handset we found that some handsets were having a delay of around 750 milliseconds others were having a delay of around 250 milliseconds ideally to fly a plane well you want to be around 120 milliseconds as a minimum now one of the techniques that we employed to reduce the delay was by rewriting a bunch of the audio code so it no longer acts as a traditional app but it's written using the C programming language this means that we can avoid all of the buffering policies which are put in by the manufacturers and directly generate sounds which are sent out to to the servos so one of the things that we found is uh when writing all of the audio generation software in C we have a tradeoff because we want to make sure that when we generate all these square waves they align well to the Natural buffers inside the audio controllers built into the hardware so we've actually made some changes to pulse with modulations the buffers inside the phone are aligned in a multiple of 18 so one change that we've made is rather than generating pulse width modulation signals which repeat every 20 milliseconds RS repeat every 18 milliseconds so we can fill a hardware buffer which means that we can reduce the lag even further I have the Android Wear watch because we've used the Android operating system in order to write our app uh we can then write a very small amount of code in order to get the app also work on the watch which gives some some really cool features which you just don't see on other ways of making drones as well as the time we also have the current flight plan so you can see at the moment that's straight and level because the flight plan's empty however what we can do is swipe to the side and choose between various commands so Loop left hand turns and right hand turns at the moment the communication is all performed over Bluetooth the problem with this is that the range of Bluetooth is quite low now the current watches that are on the market most of them only have a Bluetooth Link but more of the ones which are coming out such as the Apple watch uh and some of the newer Android were watches have Wi-Fi as well now the range of Wi-Fi is larger than Bluetooth so around 100 m so we can connect to buzz as she's flying around much more easily as Wi-Fi becomes more prevalent so I'm sure you'll develop this further but show me how it works uh for the time being then so initially she's trying to fly straight and level which is the default command when we haven't entered anything for instance we can perform a leftand turn and you just tap the button and she executes a leftand turn similarly we can do a right hand turn and then the flight safties will move now if we scroll back you can see now that she's banking right for for 5 seconds then left for 5 seconds and she just keeps repeating this flight plan so in the air would be banking left and banking right a cool feature which I've added is actually the ability to send commands to Captain Buzz so if we go to say command buzz fly heading 1 0 0 for 10 seconds and then it understands the command I've sent sends it to the plane and then if we go back to the flight plan you can see she's off line heading 100Â° for 10 seconds and then after that we'll go back to doing the left hand turns and then right hand turns now one of the other nice things that we can do is get Buzz to perform aerobatics in particular Buzz is now able to fly Loop the loops really well you just Loop the loops all on so we can even command these from a watch Buzz fly in a loop and as it processes the command then when it's finished its current thing you can see the servos have just pulled back so Buzz is trying to pull back like this fly over and then she comes out of the loop and tries to fly onto a heading what's next for Buzz then is that a two man job well as two days ago was doing the smartphone watch integration all's already done it so to plan the next thing so we need to fly the Smartwatch integration system which we've not tested yet but I'd really like to try some novel new gps3 navigation technology so we can do some cool stuff with Wi-Fi we can plug a software defined radio into the bottom of the smartphone and use radio signals that are GPS based to navigate which would be quite cool um lots of work on that has been done in the past but not on a smartphone on a drone a fully autonomous drone that costs less than1 to make and also Vision there's some cool stuff we could do with open CV the graphical processors on the smartphone and processing the optical flow of the the scene underneath so gps3 navigation for the Drone is my next aim lots of government agencies are coming to us and they say we want our system to be assessed by your experts how secur is it should we spend more on security and um well okay so how many experts should we ask only two channels coming out of the smartphone but with an even more complicated Square wave going on and this board of up amps we can unpick four channels so that would