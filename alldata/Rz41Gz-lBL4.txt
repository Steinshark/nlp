which brings me to mod C++ for absolute beginners and quickly let me unmute Stan Stan this is uh the second edition of your book um which is in a friendly introduction to the C++ programming language so um let's hear a bit about your books and what you know the thoughts on those books are and what the audience for them is thank you very much Jan for inviting me uh this time also hello everybody my name isan I'm a let's say a professional C++ trainer I was a software C++ software developer for almost two decades now my time is fully dedicated to C++ training I am the author of uh modern C++ for absolute beginners book I basically like to refer to my book by its second title which is a friendly introduction to C++ we all know that C++ is a complex language but ultimately it's not rocket science so but navigating this complexity is something I I I uh try to explain to both to my customers and people reading my book and uh yeah it's not the easiest thing in the world deciding on what to learn and what not to learn in C++ so with that in mind I'd like to share a couple of tips that might get you interested uh in the cubilo platform uh so that that uh you get the idea so the book is basically an introduction to C++ language the standard library and the modern C++ standards now one needs to decide how much of for example templates the topic of templates how much of a template introduction is too much of introduction for a beginner in C++ so deciding on the order of these topics and the amount of topics presented was something that I I was uh really I put much focus on this while not sacrificing the very important things in in C++ with that in mind uh I also can give you a couple of tips when if you're starting to learn the C++ on your own so there are a couple of things you should learn there such as the C++ language itself the C++ standard library and mod than C++ standards now there are many uh there are a couple of C++ standards my advice would be to start with C++ 11 and move on to C++ 14 17 and 20 23 Etc but uh C++ 11 should be the bottom line often people ask me uh which compilers should be used well basically on Windows we can opt for visual studio on Linux we can opt for GCC or rather g++ and on the Mac OS we can opt for command line tools which is basically a Clank compiler couple either with X code or let's say Visual Studio code a couple of quick tips on that matter also uh when you're starting with C++ there is a plethora of topics to be learned and to be covered so deciding on what it is that makes a b uh knowledge basic knowledge uh Backbone in C++ is a is a lot of work shall we say so you should start slow and growing complexity so what are the basic things you should learn in C SP for example types declarations functions statements built-in statements Expressions etc etc and once uh we learn learn about those things we can move to classes and templates and very little about templates I should emphasize because template generic programming is a topic of its own but nevertheless one should know uh should know a thing or two about template when just starting with C++ also uh not to forget the references etc etc there are there are many topics so here are some of the topics let's go back to our tip three that make the uh basic knowledge backbone before we jump to classes and templates I'll quickly there are seven slides in total so please bear with me when start with classes for example these are some of the topics you should uh be familiar with you should learn about and there are many many things to say about classes especially when it comes to software designs and uh using designing classes designing interfaces etc etc so before we proceed to that point we need to establish a solid knowledge B uh knowledge base backbone so that we uh can progress further