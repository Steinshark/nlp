the saint rust ramadog this is an update on some things that are going wrong I assume I assume there's some some warnings here if this happens to be about the drama I'll be sad but I don't know what it's about I honestly haven't read it I don't know I just assume that it has there's some malware issues going on so let's find out August 24th 2000 and 223 five minute read research babies all right uh phylum routinely identifies malware and other supply chain attacks targeting high value critical uh assets and organize let's see an organization software developers most recently we've reported a flurry of sophisticated attacks targeting JavaScript developers respawning malware on Pi Pi uh or pipel uh and we're first to identify the North Korean State actress or actors publishing and malicious packages to npm uh with our fairly recent edition of crates IO support today we're dealing with a thwarted supply chain attack against rust developers okay okay yikes yikes the staging the campaign okay ooh it's kind of exciting it's kind of exciting I you know I like to read these things uh in other ecosystems we routinely see a common pattern prior to the publication of large-scale typo squat campaigns interesting an attack type of squats several popular packages in a given ecosystem this makes perfect sense uh you see this all the time it's like my biggest scare is installing like I always check dashes versus underscores every time it freaks me out this is an ad is this an ad oh I hope it's I I don't think this is an ad uh but this is typo Squad okay let's just say you have a crate called um you know called like uh a foo bar so you squat Foo bar right it's just enough for you to think it's something without it being a thing uh just like if you go to like uh what's it called what is it openai.com is this actual open AI I can never tell because their website looks like it was written with htmx but somehow even worse than what htmx would do uh for a while I think open AI didn't actually go to open AI it went to some other ah place right it went to somewhere else and it was totally annoying and then you'd have to go read like Google that's the real version oh yeah I forgot it it just always sucks whitehouse.comwhitehouse.gov yeah exactly so that would be typo squatting uh the attack publishes benign versions of these packages that contain little to no code it'd probably be even better if you publish the actual code and you mirror the project that would be like 5000 IQ right I am scared by the Light sometimes uh later typically days or weeks later the attacker publishes an update with some callback mechanisms for communicating with the attacker the attacker publishes additional versions containing more overtly malicious payloads the package publication to creates IO were no different though they didn't get as far on August 14 2023 our automated system notified us of a potential typo Squad package uh by the user and MMA perf ask me anything perf post Grease version 1.0 this one this package was not malicious and contained virtually no code at all here's the main RS file joke hmm this is it this is okay okay the initial state of the package poses no threat to any user that installs it the next day on August 15 2023 the actor published two additional packages in addition to updating the original postgres package the package uh removed the main dot RSO please tell me in favor of a lib.rs okay okay postgres and if config and RV vrv I don't know what that one is I don't know or X RV RV xrvrv I can't even read it if config I don't know that one either it must be if underscore config right um following the pattern we outlined above uh several more packages were released on August 16 2023. okay uh in these versions a build RS was added now that is where it gets scary this is where yeah if config would have would have treat I still don't know what the problem I honestly don't even know what the problem is right this looks at but when build RS when you see build RS you got to know that that's where it really goes down was added which includes functionality for communicating host information back to an attacker on top of build RS we see a telegram token for a channel ID damn bot token doesn't even hide it does it even hide it the package checks out the presence of a file mutex located at envar outdoor if it exists we exit early if it doesn't we recreate it and continue execution next information about the host is retrieved request blocking get this thing Json oh my goodness look at all this stuff look at all this stuff look at look would you look at it um this common pattern we see uh with credential Steelers in other ecosystems finally the message containing this information is dispatched to the previously defined telegram Channel call back platform message format query right here bot token Channel ID message request blocking get this damn Telegram and Discord are popular channels used by attackers uh what happened to good old IRC you know honestly great call why aren't we using IRC for these sophisticated attacks or more succinct succinctly uh in these versions The attacker added functionality to send information about the target back to the telegram Channel they are monitoring querying the telegram Channel using a provided token doesn't yield much information and we are unable to determine if any successful callbacks had occurred so what you might be tempted to ask does this seem so bad or what as previously mentioned this has the Hallmarks of early preparations for broader campaign typically we will see one or two paths taken by the attacker from here upon receiving a successful callback from one of their packages the attacker will publish subsequent versions with additional malicious capabilities pulling secret or sensitive files having proven out there sometimes crude callback infrastructure the attacker will publish many more packages very quickly in an attempt to cast a wider net before package registry uh takes down their malware I mean this would be very hard to detect like I mean the thing is is crates.io how would you ever detect this right you I mean the sophistication of that would be so hard in both cases the attackers ramping up for their attack in hopes of successfully compromising developers the best case scenario is to prevent the attack from continuing in the first place which is exactly what we did reporting to crates io on August 16 2023 uh phylum uh phylum phylum made a contact with the rust Foundation trademarked stamped it copyrighted uh to inform them of what appeared to be a staging behavior for can uh for a malware campaign they responded promptly and informed us that they agreed these packages looked like clear malware and forwarded a message to the crates IO team well let's say a short while later they confirmed the removal of these packages and informed us that the user's account had been locked out as a result as one might expect from the rust Community this exchange was pleasant and the remediation resulted in a quick removal of the offending packages uh what's a rust Dev to do well actually Izzy just don't execute build RS by default yeah but you know what's gonna happen right like the problem is is that isn't necessarily like a good answer to the solution because okay let's just say you have that right it's what are you gonna do well you're going to end up doing what everybody else will do you'll make a flag that says just do all build our asses because I don't want to have to specify each one I'm willing to build and then it will go and do that right you're gonna have some Dash R for build all build rs's and then that's what you're going to use and everyone's gonna use it and it's going to become the default behavior and so it becomes this really awful lack of security security and so I've never believed that was ever an answer um phylum has a vested interest in the rust ecosystem as where were stations at heart our infrastructure our API our open source CLI and our open source sandbox are all written in Rust while we enjoy identifying and blocking these software supply chain attacks preventing and mitigating their impact on the rust ecosystem as a direct benefits to the community and so we're far that we're very fond of okay that's reasonable uh the as most attacks typically occur during package installation or build it only makes sense to attempt to determine whether or not a package contains Behavior congruent with malware before the package is allowed to execute Thus We've developed a cargo extension that transparently queries the phylum API for information about package before it is allowed to build this extension ships as part of the open source phylum CLI and is as simple as this phylum cargo build nice okay I actually think that's a pretty good way to do it I'm on board with that I'm on board with something where you can opt into having a third-party service do that uh obviously could be a little bit Trixie you know what I mean um but yeah I like it I mean I like it overall uh in addition to this long as like long as this thing is open source I assume it is because they said open source yeah open source CLI this is good long as it's open source and you can see everything about uh a part of it to me that's uh that's pretty reasonable in addition to this we have developed an open source the sandbox that limits access to the disk and environment variables I think they call that Docker and we've rolled this into our CLI which is available for the npm PIP and yarn extensions uh this adds another layer of protection to the package installation by a building slash installing packages in a locked down environment after they have been verified against our phylum API classic Docker right there uh we are looking uh to adding the sandbox to other extensions that would be greatly appreciated Community feedback nice okay is there someone said there was this was an advertisement this looks great it's hard to say uh with any degree of certainty whether or not this campaign would have evolved into something more nefarious we can say this is what we've seen play out many times before in many other ecosystems and the outcome was always the same I always felt like this is like exactly the way it's going to happen uh you know no matter how hard you try no matter how safe your language is they're still you know there's still ways to get around things and so no matter what security auditing all that kind of stuff it's like the impossible feat that every developer should do but nobody actually does and so you know I don't my I I really do actually like this idea of having a third party service because you know what I fat finger some installations and it installs something and then I end up like trying to use it and realize I have to use something else and I don't remember if I ever take it out of my cargo uh you know my cargo build or my cargo Tamil I don't know if I ever take out all those things what happened if I just keep weapon if I'm a victim right now I'm a victim um anyways something to think about uh with access to SSH Keys production infrastructure and Company IP developers are now extremely valuable Target it is prudent that we have a community and remains skeptical of most packages and libraries we use in the software we write I mean maybe prudent is correct but prudent is impractical to make this task easier phylum will continue to scan every package published to open source looking for software Supply and chain attacks targeting developers and organizations for their work blocking attacks before they had a chance to get off ground yeah like uh you know like during uh gosh not so many months ago remember there was that uh OSS package that was used by a lot of people that would check to see if you if your IP is uh in Russia and if it was it would attempt to delete your operating system I don't know if you saw that but it's like even packages that are quote unquote good put in some pretty they can put in stuff that would be considered a malicious item right that would just delete that would just rmrf you and so you know it's things to think about which is like can you really ever stay up to date always can you really actually perfectly protect yourself we're probably much more vulnerable it's  up yeah it's super up uh but we're probably much more vulnerable than you realize if it's not an ad it's sure self-promoting yeah sure self-promoting it's about a it's about a company I mean but think about it just take a second here and think about the good they're actually doing though you know never doubt a company never doubt a company that will talk about itself when it does good okay it's gonna always happen but really the fact that they're doing this think about how many shitty packages make it onto npm think about how many millions upon Millions upon millions of packages are on npm right now right you know that's crazy it's crazy and so they built a surface that scans and does stuff to it and keeps track of it and tries to come up with a way to be able to identify it I don't care if they self-promote they're also providing what I would argue a net good I'm again I'm only looking at what they're saying right here okay I'm not looking at anything else I just assume that this very obviously self potentially aggrandizing article is purely about all the net wins that they've had this is still a huge daunting task and I'm happy someone's doing it can we all agree that this if config business how many people would have got hit by ifconfig how many people right it would have been Wild it would have been wild right so I can appreciate that I can appreciate that clappy clap clap clap clap clap not me don't do Rust not my problem uh message I know so uh no one rust uh in production doesn't exist and got him remember guys eighty percent of security issues can be solved by simply allocating five minutes of your work to do trivial tasks um I'm not gonna lie to you that statistic sounds made up and that's probably fake but it's probably not a bad idea to do trivial things uh okay this is great this was actually a really good article and I'm actually shocked that like postgres with two s's easily typo if if config this one seems like the biggest one I would have definitely been had right there you know what I mean easily been had by that one maybe not so much this one two s's is kind of hard you know I think if you're gonna do a a a mistype you you don't want to go with double characters especially at the end you definitely want to go with something that's like uh uh post grease right you want to definitely you wanna be a little bit more sophisticated right you want it to be a swap of lettering not necessarily oh or you know uh post grease Queen ql right you you wanna yeah or yeah postgres yeah post aggress ql would be a good one because that seems like something people could easily mess up right you want a little bit you know you'll want a little bit you want you want to feel good about it post geese uh they're running uh a long con I introduced fake malware into various packages managers to get people to install them uh they're rappers for security three introduce malware into their security rappers for profit ooh the long con I never even thought about that the ultimate con is the p i mean it it makes sense historically speaking anyone that promises you peace or safety or security from any position of authority has almost used that promise of Peace Safety and Security to oppress people it's almost classically the number one number one way people come into power is that kind of promise and so this I didn't even see it it's right there in front of me this whole time the longest con of all time gosh it's the ones you trust the most the name is the primogen