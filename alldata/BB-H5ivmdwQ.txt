rust the programming language absolutely positively sucks okay okay okay got zero upvotes it's on Rust uh pretty funny um I'm quite confident that I'll get torn to shreds for writing this post and called stupid but I really don't care love it you do you this get on Twitter okay that you got a home already I have to call a spade a spade yes the emperor has no clothes the rust programming language is atrocious it is horrible and I wish it a painful and Swift death is he trying to say like Swift as in like Swift the programming language like is that what is is the secret is that what we're trying to see here I've been programming for well over 30 years I'm quite good at it usually okay I have been told by many co-workers and managers that I'm super fast well not in Rust that is okay uh no one's fast to begin with and rest I've used quite a lot of languages over the years though I am by far most proficient in Java I started working before Java even existed so I programmed in C professionally for 10 years too then I switched the job I recall when I learned Java I thought it was the greatest thing since sliced bread okay same here now here I am forced to use rust for a project at work and is beyond painful okay okay okay I I like where this is going in some sense I really you know I'm just gonna assume that this is not a troll post and that it's a real legitimate post and this is not someone who's used rust for like three days and is upset about it I'm just super I'm curious here we go if it's just simply borrow Checker issues that will be sad right because you kind of get over those once you kind of get them but then you kind of comes back later on and then you get over those ones then it comes back again then it's hard to get over those ones uh here we go all the advice out there is to go slow take your time etc etc it is usually unrealistic in the real world work environment when you have to actually accomplish a task for work I need to write something that is highly multi-threaded and performant what I what let's see I need what I need it's not like I have the luxury to spend months building up to what I need from rust this is a good critique right it's perfectly fine critique right especially if you're not proficient in Rust and you're being thrown on a project and you're time constrained rust would be horrible experience like I am fully on that team that would be a horrible experience to be like you need to get this done right now with rusted threads you'd be like what the I do it right it'd be terrible all right right off the bat as a total rust newbie I'm hitting all kinds of rough edges and rust for example I'm trying to use a rust squee light uh it would be let's see it would be natural to stash DB prepared statements in a thread local for reuse in my multi-threaded cone I can't pass the connections around because I need them in a c callback too much detail here I know so I have to be able to look them up alas after banging my head against the wall for a full day I'm just giving up on the thread local approach because I simply can't get it to work part of the problem is that I can't stash a prepared statement in the same thread local struct as the connection from which they are created due to Lifetime limitations it also seems you can't really use two thread locals one for a connection and one for prepared statements either if there's a way to do it I can't figure it out everyone knows you don't actually write rust for a real project it's purely to tell people you use rust it's not like actual rust yeah you use Tokyo and you don't think about thread locals and all that you just try to program it like it's JavaScript I love it everyone knows this okay right off the bat uh oh gosh also right off the bat I'm having trouble with using async and trade functions [Laughter] poor guy this poor guy assuming he really is a good programmer does exactly what I did just recently try to throw away sync and trade functions and you end up just getting all sorts of just just the world's most annoying problems with it I tried to get it working with async trade crate but I'm failing there too yeah especially if you have impulse in there all in all rust is a nightmare it is overly verbose convoluted hard to read slow to compile and lifetimes are a real cruel joke Googling for what I'd need rarely results in good answers I'm truly convinced that all people who claim rust is great are either lying to themselves or others or it is just a hobby for them it shouldn't be this hard to learn a language rust feels like a major step back from java I had to rant because there are so many purple Kool-Aid drinkers out there on the rust front I call BS okay okay okay your average Reddit rant I guess okay this is this is exciting now it's time now it's time okay we're about to get into the good stuff now yum purple uh Kool-Aid scale issue yeah the infinite skill issue yeah if you just write Russ for two years you're gonna be able to easily do this okay this is such a simple task he's trying to do you just need multiple years of experience in a few months to get it done okay I don't see what the big deal is obviously skill issue all right anyways right off the bat as a total rust newbie I'm hitting all kinds of rough edges in Rust okay we've already read that I'm the maintainer of Rusk squealite it's true there are patterns you might be used to and see uh squeal light uh use that don't translate well to rust uh this is for safety reasons statements borrowed from the connection which will definitely prevent the things you're trying to do instead you should use dot prepare each time or prepare cash uh if it's a large complex query it's fine okay thanks for confirming that I can't do what I was trying to do okay very nice very nice uh nice okay so there's I like that the the the rust the rust squeal light guy came in here and been like well you know it's a little bit harder than that all right let's let's what's another one uh you're trying to write code in a way that is fundamentally different from the rust way or wants you to that's the Crux of it oh oh I missed it okay here okay hold on you started by learning let's see you started okay hold on so you started learning rust by trying to make something multi-threaded that also interrupts with C instead of starting with something simpler so you can learn and understand how the borrow Checker that's a recipe for disaster so I mean to be completely fair and on this guy's side you could just do that with go you could probably do a zig probably deal with oh camel you could probably deal with most languages I mean I understand what it's like when you this is a professional project you just gotta do what you gotta do you know uh you're trying to write code in a way that is fundamentally different from the way rust wants you to that's the Crux of it start smaller learn what it wants from you then let's see then writing what you need here will be significantly easier it sounds like you're trying to write things in an object-oriented manner don't do that rust isn't object oriented I I do love I do love this as a statement this is kind of like it reminds me of react devs as well um right react devs or like the the amount of times I've heard you're not doing it the react way and yet like you can't in the real world is just very hilarious it's a lot of you're doing it wrong just trust us you're doing it the wrong way uh rethink best practices wow can you divine from that from what I posted you must be Clairvoyant oh dang this guy's getting angry uh it's amazing how the rust Community gaslights everyone that doesn't fall for the hype toxic maybe if the rust Community wanted to discuss uh discourage any attempt from being remotely object oriented then chapter 17 in the Rust book titled object oriented programming features of rust should be removed I did not attempt anything not referenced in the official docs they have a chapter on trades and how to use them in the object-oriented way and they have tons of written let's see and they have tons written on async and await yeah only an idiot would assume you could put both features together silly me [Laughter] uh he's uh confirming his skill issue there's a there's some skill issue there but I do I do really like that it's actually at zero which I bet if you saw the stats how many downvotes do you think are happening and how many of votes are happening oh this is this is just outrageous um yeah I'd say that this is not very good communication as for the thread local what is object oriented about that squeal light explicitly states that you can't share connection among threats trying to stash prepared connections and thread locals is perfectly reasonable to assume should be doable negative three yeah if you're getting borrow Checker complaints that is the definition of doing something it doesn't want you to do no Clairvoyance to it got em well you did say lifetime issues so who is clairvoyance yeah all right let's see if there's any other good top ones okay just take a step back imagine you're brand new to see and for your first project you encounter async squeal light 3 which is very easy to make pointer mistakes with concurrency proper thread synchronization Etc of course that's going to be a daunting and extremely error-prone yeah now getting uh now getting rust to compile the first time is painful extremely but I guarantee that the first time it does it will do exactly what you expect no sake faults no thread races no async management no my struck string should print hello world but it says give it 0.5 percent of your 30 years experience with the other languages you'll find it uh you'll kind of find a oh my goodness you'll kind of hit Enlightenment I have to think about the same lifetime things when I write C the compiler just doesn't know about them of course we're always ready to help when you get stuck also for what it's worth on performance rust scales extremely well getting the single threaded proof of concept is hard and takes time turning it into something that handles 10 000 requests per second on 16 threads is almost trivial significantly easier than C so maybe just a single thread a single threaded us a better place to start single threaded is a better place to start okay I actually like I think this is actually really reasonable advice right here this is this guy who this guy right here Trev I think we should um I think we should congratulate this guy because this is exactly right if you really were to do threading and everything and see uh talking with the database doing async stuff like the first time you do it like you're gonna just make a lot of really bad decisions then you're gonna make a lot of really bad decisions again and then after doing it maybe 10 times you'll start making good decisions and I think he's 100 right which is that the compiler the good thing about Russ is that when the compiler does build it's pretty much doing the thing you want it to do which is not true of C it will build and not do the right thing versus this doesn't build until it does the right thing which I think is actually a really good it's a good one sounds like the company you're doing this for has poor engineering management practices this isn't rust's fault okay not not bad uh the smell is like bait I'm almost certain of it I can't believe a program with 30 years experience can't handle his manager when a task is bigger than your skills you let your management know early so they can assign someone better suited when that is not an option you let them know you can deliver with your preferred language no need to suffer from this interesting interesting take here what do you think about that do you think it's uh do you think this is bait high fives all around yeah we're still no I don't think it's paid either uh I think op is being genuine I think it's frustration that something is turning out to be much much comp much more complicated than it feels like it should be I can understand that I remember going through similar pains when I originally learning rust although I didn't have stress of having to deliver an actual product yeah I think this is I think this is good I assure you it's not bait funny you say about doing it in another language because I also have it in Java which I wrote on my own time weekends the problem is I've been told that there's little chance that the company would go with Java despite the team being all Java developers because someone some emerging religion that thou shalt write a system code in Rust okay why are people downvoting that one that feels mean I'm gonna help the guy get it up okay that feels fine wrote it on his own time weekends feels bad all right I don't want to go too deep into these comments any other good advice in here all right all right so let's let's read one more sure let's up focus at least you know uh see I personally can relate to that one yeah we could all relate to that one right we've all done things on the side to make the project work and then the guy is probably uh not sincere you don't think so uh I'm really sorry to hear you're having problems inflammatory language aside I found this subreddit to be genuinely helpful with getting a handle on some of Russ harder Concepts it certainly sounds like you've been thrown into the deep end as far as using Russ is concerned and I think that's terribly irresponsible of your employers I'd probably uh see I'm probably a few decades your Junior so I won't pretend to know the answers to your problems I will say that in general Russ highly encourages clear ownership of data throughout the program and discourages mutability as much as possible I'd also suggest writing your programs in the dumbest way you can first and performance optimized later so I love this advice whenever I write anything in Rust to begin with oh man go with strings clone them do whatever you got to do at first just to get like what is the because the thing is is rust I'd say that one thing that rust does which is worse than every other language is that it encourages um like trying to set in the abstraction you need early and that can be such a huge disaster and so that's one thing I really love about just writing it dumb and just clone as fast as possible is that you will write and you will abstract and you will do the wrong thing every single time in the rust version and you'll do it way earlier than you'd normally do in any other language and you'll do it way worse than you should have done it and your performance will still be dog water because you just don't understand rust like rust is actually a genuinely again it's a genuinely hard language to do well because it's easy just to clone everything it's hard to do it well you know it is really hard to do it well and so I think this is this is just fantastic advice just get the thing running don't worry about anything else fast enough can be good we can make it better later on uh because everyone's compile time guarantees and really elegant testing using cargo test and benchmarking with Criterion it's really easy to modify the rust programming multi-threaded don't bother write a single threaded version First and using Tokyo or rayon to add multi-threaded afterwards yep caching too hard you can use prepare cash yep uh bit packing booleans for minimal memory usage just waste uh RAM now and make more efficient later love it lifetime's not working just clone the data don't bother with references uh deriving the Clone trade is a one-line code usually and surprisingly fast compile time slow yeah not much you can really do about that I'd suggest using cargo check to minimize your issues but sadly the rust compiler does a lot of work on each compilation yep this is such good advice so for anyone out there that's struggling with rust this is your advice honestly this is the most straightforward way to write good rust programs um rust is for big brains yeah Grog is probably you know grug generally uses Zig over rust I get that uh just because they no need big brain small brain good uh but I do really want to go back to that one more time which is rust it's kind of something I've been observing I didn't know how to put it into terms until honestly I read the grug thing but I constantly abstract and rust faster than any other language and the reason why I do that again is because of lifetimes references all these things I find that I go way too fast what I should do just clone just clone enjoy it whatever right make it fast when you need to make it fast for now make it work right and I think that if I could just enjoy that advice more often in my rust career I would actually be a lot better at it already uh anyways uh Russ that makes you want to make it fast dude that is the fact that's that's one of the alert that so I really wish that rust was never sold as a fast language I really wish it was sold as a great type system and safety language first right like never say the word fast you know that can just be observed right every time someone uses it it just feels really creamy smooth and you go wow that's so good that's so nice why we should do that better right because the moment you want to make it fast you do things that are hard it's the type system it's the enums uh right I love tagged unions I think tagged unions are a great way uh to do stuff I think I I do I I'm very I really wish the whole Shepherd Oasis thing with rust and rust conf and all that didn't happen because I would love to see compile time rust dude comp time rust would be amazing right because the macro system I'm honestly too stupid for it the amount of time you have to spend to become great at macros is just like an enormous an enormous amount of time the amount of time you have to spend uh understanding something that's not that complex such as but not limited to comp time it's like tiny small brain right uh and I mean the traits traits are just interfaces the trade system the thing in which allows you to associate a type with another thing that's used elsewhere like however they set it up whatever that thing is to me that's amazing and the fact that you have to bring in the trait to make the function appear I think is both great but also horrible right uh how good do I feel I have rust I'm pretty good at rust I can program it I can program your standard CLI application probably faster than most people in Rust and I could make it with lifetimes and all that second time around pretty quick I'm I'm okay at rust uh when it when I really where I really start failing is like impulse with async and um traits right when I combine all the impulse and everything together and then try to do it I always find that I just like I start running into really difficult things um you know what I mean anyway so you can do some good performance tuning in Rust yeah we can we can make it work we can make it work anyways hey guess what the name the prime machine async is really not that hard honestly like you just have to think of it like a pull model think of it like an iterator and it will make things a little bit easier the moment you think of it like like JavaScript which is kind of like a hot async it's hard but if you think of it like cold async or an uh an iterator it becomes a lot easier and long as you can kind of keep that in your mind async is very very simple in Rust it's all the crap around async that gets really really more annoying the name again is the asyncogen