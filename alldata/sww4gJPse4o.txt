i was just recently at uh the electromagnetic field festival right um which is an amazing uh hacker maker festival uh camping festival though so it's in a field electromagnetic field it's a great name it's a quality name something that they always do at emf is uh they hand out badges and because it's a maker festival the badges are actually little electronic devices it's a fairly sophisticated machine it's got a lot of features obviously it has the screen but it also has wi-fi it in fact has an app library and these are all downloaded over the wi-fi and installed like let's install a let's install a game should we do pong ah oh okay yeah yeah so i gotta move my back by tilting oh dear i'm losing most of these apps were developed actually at the festival or shortly afterwards and the reason that it was so easy to make all of these apps is because the board uses micropython which is something which i hadn't used before and i thought and there's no computer file video about it so i thought i would just talk a little bit about it as a way of programming microcontrollers so um the most common like hobby small computing type things are obviously the arduino and the raspberry pi the arduino is designed to be extremely easy to use and it is relative to the microcontrollers that came before it but um you still have to write c code which is not the easiest language for beginners to pick up it's got a few complexities and some gotchas there which any language has but yeah see c is a c is a tricky language in many ways whereas this is a microcontroller that you can program in python and so previously if you wanted to have a small computer running python probably the way you do it is to use a raspberry pi but a raspberry pi obviously is a much bigger deal it's a fully fledged computer you could put a real operating system on there or even something like windows if you wanted to um i don't i don't judge you know if you wanted to do that your own raspberry pi in your own time um behind closed doors you know it's fine um but the point is having a whole operating system is just a whole bunch of extra complexity which is unnecessary for a lot of small microcontroller type tasks so it's nice to have a system that you can literally just put a python file on and it runs directly with no uh appreciable operating system underneath which is just python on a microcontroller it was a kickstarter a couple of years ago they developed this interpreter to allow python to run on microcontrollers and then also a board specifically designed for this which you can buy but um it's open source so there are a few different boards that can run it and including this the tilde but obviously you can't buy these i don't think you only get them by going to emf um so so it's kind of a bit like the arduino model is it or right quite similar to an arduino yeah anyone could buy everyone could make their own but sometimes it might be easier just to buy one that they're making or something like that um yeah yeah and it's just it's like a a standard i suppose right okay that once you once that's defined then anybody can make their own chip or they can port a micropython to a different chip and there's there's a bunch of different uh boards that it can run on let's just write hello world type application you just plug it in with usb this is actually the one i used to charge my phone this is the thing i like about this actually is the simplicity of it you plug it in it just registers itself just like a memory stick or anything else that you've plugged in as usb storage um and then you get you know a directory just dump a python file in there i think call it main.py and it will run it and that's uh that's all there is to it with uh the tilde with this badge tilde is that the name of the badge yes previous ones were actually shaped like a tilde character and yeah because it has this app system it's a little bit more complicated but not much you just have to make your python file in a particular directory and give it a little header the standard thing for an arduino is blink right where you have the led and you turn it on and off every half second that's the tutorial thing so let's do that fill in some details here i am robert miles this program will be called hello world there's a sort of uh i don't know if you'd call it an operating system there's a little interface that the badge comes with that lets you navigate through and select which app you want to launch and that kind of thing so it needs to know what the app is called and that kind of thing if you get a regular like a pie board the one from the kickstarter or any of those um they i believe you just put the file on and it runs it and that's the end of it yeah here's the header stuff and then we're importing a library pi b is this library which contains stuff for interacting with the board's hardware so we're just initializing this led variable to be led one this little one the one next to the one that's currently flashing led a and then we'll just have a while loop toggle the led wait 500 milliseconds which is half a second and that is it all we need to do is put this file in a directory called you know hello world or whatever in the app directory and that's it save that unmount it very important to safely remove hardware you know don't just yank out your usb devices willy-nilly um usually i'd say life is too short for that kind of thing but and there we are so now we're running it the light is blinking success but obviously this board is capable of a lot more it's got this nice screen let's um let's put something on the screen again there's this nice graphics library you have to initialize it and then i think you can just do this is this is from from memory i think you just do that and then you give it the coordinates you want to write at the text and the color which are just in there as constants and i think that should do it so we restart the board and then we can just i'm editing this on the board itself like this file i have it open on the external drive which is the board so you can do all of your development right there on the board unmount it again restart yeah and now it says hello world and the blinking lights still so it's really that simple and you know arduino is pretty simple but this is easier and then of course you have the python language which is a wonderful you know powerful uh and easy to use language which i highly recommend to anyone the board itself has a bunch of features firstly output pins for all kinds of different things so the idea is you can use this board much like you would an arduino to drive some other electronics these connectors around the edge here are designed for conductive thread so if you wanted to make some kind of clothing that does something fancy with your badge built into it you can do that somewhat bizarrely these contacts here are for four servo motors so you could drive servos with it there's four of them if you wanted to make a drone possibilities are endless it's the zombo calm of uh of boards you know the only limit is yourself um and there's a competition for people who went to emf to who can do the coolest thing with the badge before next time um i'm not sure if i'm going to enter that but i did try making an app i've made uh i wrote a solitaire game um because i was having fun with the graphics libraries and i wanted to see if i could draw the different cards and stuff i don't like solitaire so i only did the best bit this this is the good bit of solitaire the bouncing cards so we've got uh windows 3.1 references mixed in with uh war games mixed in with yeah it's your sense of humor yeah exactly i just wanted to see if i could do it but so have you drawn those cards and everything are they in the libraries um no yeah this is all in fact these are all drawn with the basic drawing functions so fill rectangle or fill polygon that kind of thing simple i can show you the program actually this is my solitaire program so the same delay function we were using before and define the cards i don't have face cards yet the i don't have like jack queen and king that requires more artistic skill than i'm able to bring to bear right now and also the thing i like about it right now is it's one file i don't have any external images to copy in or anything basic stuff you know it's not none of it's complicated and you expose the plastic at the surface in particular regions according to the pattern and the important thing is when the this particular polymer is exposed to light it becomes soluble the regions that aren't exposed aren't soluble so then you