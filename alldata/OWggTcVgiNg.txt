all right how an empty S3 bucket can make your AWS Bill explode okay let's find out imagine you create an empty private AWS S3 bucket in a region of your preference what will your AWS be the next morning I would assume zero can can we just assume zero a few weeks ago I began working on a proof of concept of a document indexing system for my client I created a single S3 bucket in a EU West one well there's your first problem Comm isn't mentioned I mean it's not going to work out uh region and uploaded some files there for testing two days later I checked my AWS billing page primary to make or primarily to make sure that I was doing uh what I was doing was well within the free tier limits apparently it wasn't my bill was over $1,300 with the billing console showing nearly that many puts that's a lot of puts a 100 million puts uh request executed within just one day dude Virginia is all about it man Virginia and Ireland Virginia and Ireland just all about that where were these requests coming from by default AWS doesn't log request executed against your S3 buckets however such logs can be enabled using AWS cloud trail or S3 server access logging after enable after enabling cloud trail logs I immediately observed thousands of write requests originating from multiple accounts or entirely outside of AWS but why would some third parties bombard my S3 bucket with unauthorized requests okay okay this is this is super strange by the way do people like okay before even reading is this like a whole is this like a whole thing where people will will attempt to just like find free storage on the internet and store stuff I don't understand the purpose of it it gets better okay it gets better okay okay I'm just I'm just I I didn't want to I don't want to spoil it by just reading botn Nets yeah know like botn Nets um I'm just trying to understand I don't get it okay anyways but why would some third parties bombard my S3 bucket with unauthorized requests was it some kind of Dos like attack against my account again against AWS what if before even reading what if AWS is the one secretly responsible for these bot to make more money I haven't even read completely ignorant to the situation but think about it for a second think about the the 9,000 IQ conspiracy free money generator this is the first free money generator ever to be discovered okay best business model don't expose buckets to the world or else a I mean Bots will try to use them not even aw I mean Bots for sure Bots was it some kind of dosik attack against my account against a WS as it turns out one of the popular open source tools had a default configuration to store their backups in S3 and as a placeholder for a bucket name they used the same name that I used for my bucket this is so incredibly disappointing I was hoping for AWS racketeering but instead I got Stu would you do it like admin password uh this meant that every deployment of this tool with default configuration values attempted to store its backups in my S3 Bucket Man you how I can't disclose the name of the tool I'm referring to as it would put the impacted companies at risk of data leak uh as explained further as a hord of misconfigured systems is attempting to store their data in my private S3 bucket but but why should I be the one paying for this mistake here's why so this is super curious S3 charges you for unauthorized incoming requests this was confirmed in my exchange with AWS support as they wrote yes S3 charges for unauthorized requests 400 responses as well that's expected behavior that seems a little bit crazy searching the web for bucket names like they are domain names that seems kind of wild so if I were to open my terminal now and type in AWS S3 CP some file to your bucket uh I would receive an access to night error but you would be the one to pay for the request I don't even need an AWS account to do so that can't be real okay I don't I you know I'm I'm not one to jump on like the old uh the old capitalism is bad slash it's just greedy corporations as the answer but this kind of sounds like greedy Corporation okay that seems wild that they would charge for like for someone trying to access your bucket that doesn't have permissions the the could is a beautiful thing isn't it I would rece let's see okay another question was bugging me why was over half my bill coming from us East one region Virginia specifically I didn't even have a single bucket there the answer to that is that the S3 requests without a specific region to fall to us East one and are redirected as needed and the buckets owner pays for the extra for that redirected request so you're telling me that if you knew of a company that you did not like and you happen to know and you're able to fish out an S3 bucket name you could do a default region hitting a Us East one pay for the redirect and pay for the unauthorized access and you don't even have to have an account wow okay I mean the thing is is you didn't actually put anything I mean I understand that you made a put request an unauthorized request but it didn't put anything so how's that even a put that's actually huge yeah there's like a denial of wallet that actually that I mean that that is a full not just denial of service that's a denial of wallet like you could actually destroy and ruin somebody like imagine just a botnet you could hire a botnet and botnet the out of just like if you disgruntled employee and you hated your work and your manager said something mean to you you know just imagine the 10,000 thousand different situations that exist all you have to do is just be like you know what these guys I'm going to go on the internet I'm going to go pay $50 to a bot net to make 1 billion requests and boom you just got done charging them $113,000 I'll put my bots all up in your net what the security aspect now we understand why my S3 bucket was bombarded with millions of requests and why I ended up with a huge S3 bill at that point I had one more idea I wanted to explore if all those misconfigured systems were attempting to back up their data into my S3 bucket why not just let them do so I opened my bucket for public rights and collected over 10 GB within or 10 GB of data within less than 30 seconds of course I can't disclose whose data it was but it left me amazed at how an innocent configuration oversight could lead to a dangerous data leak yeah this is just like funny got my data now baby give me your data damn they just grab they I mean they literally grabbed that open source tool by the data and now they got the datas this is so wild to me this just seem seem so wild to me that you pay for unauthorized access well everybody don't forget to put a uu ID in your name or put some sort of cloudfront or do some sort of protective measure against your stuff getting leaked now I mean this is this is crazy does this uh does the data get uh gets to AWS even if it's rejected like who pays for the bandwidth man uh other than deleting the bucket there's nothing you can do to prevent it you can't protect your bucket with services like cloudfront or wff when it's being accessed directly through the S3 API standard S3 put requests are priced at just uh Point what is that a half of a cent per thousand requests but a single machine can easily execute thousands of requests per second that's how is this how is this a thing how is this a thing this practice reduces vulner let's see uh adding a random suffix to your bucket names can enhance security this practice reduces vulnerability to misconfigured systems or intentional attacks at least avoiding using short or common names for your S3 buckets when executing a lot of requests to S3 make sure you explicitly specify the uh AWS region this way you avoid paying the additional cost cost of S3 API redirects I know I need a dude I know you hey you know if if any Amazon I mean I wonder if Amazon acally has a couple S3 buckets available the request is processed for 400 or not it doesn't matter I know but I would assume one would assume that they have something like some sort of layer in front of the actual request right that the incoming request comes in and says are you authorized right and when this thing's not authorized it's like yo get the hell out of here that's like a 400 right 400 bad access or whatever it is like I one would assume before the actual storage process and everything some sort of API Gateway exactly uh like this is not your bucket service so it's not like they're actually putting anything name a Bucket Man all security is on you yeah I think that's uh that's pretty that's pretty unfortunate honestly I guess I mean you U ID out your names uh I reported my findings to the maintainers of the vulnerable open source tool they quickly fixed the default configuration although they can't fix the existing deployments I notified the AWS security team I suggested that they restrict the unfortunate S3 bucket name to protect their customers from unexpected charges and to protect the impacted companies from data leaks but they were unwilling to address misconfigurations of thirdparty products I reported the issue to two companies whose data I found in my bucket they did not respond to my emails possibly considering them as spam AWS was kind enough to cancel my S3 Bill however they emphasized that this was uh was done as an exception yeah I mean I have a hard time knowing I dude I I I I mean I I get the idea that hey it's your fault AWS gives you the Primitives you use The Primitives if you misuse The Primitives you get charged like I do understand that man I have a hard time with that I do have a hard time let's test it I don't want to test it I don't want to accidentally break any rules around here but man this this feels wrong I guess this is a difference of could and should and I get it's it's it's within their rights to do this but I feel like this is like should you allow this it just feels like you you've allowed effectively the same thing with the unity deal remember when Unity used to have downloads and if you downloaded the thing you'd get a direct charge it was like I forget what it was it was $2 or so it was there was some percentage of charging that would occur per download of the runtime meaning that someone could effectively do a denial of wallet by grabbing a bunch of downloads and just downloading over and over again in install fee and effectively bankrupt your company and so you could you could see the exact same thing is that if you no a bucket address you just hit it a million times and if it's if it's if it's a half cent per thousand that'd be I mean that'd be what what is that that's a uh that's 100,000 half cents right I mean it can get pricey really quick you know that buckets uh can be made private right you know that this was a private AWS 3 bucket right yeah I know yeah that the thing is is that this this doesn't care that this is private okay you just simply need you just simply need the address if you you have the address you can just use the AWS tool and you have an infinite charge glitch uh what is a bucket it's like a place to store stuff right yeah negative infinite money glitch yeah denial denial of wallets wow this is actually really surprising I'm actually really surprised that this is I I totally understand it and I'm not trying to like I'm trying to come at it from like a smarter perspective meaning that if you create if if everybody the hard part is that if every if Amazon just simply forgives every stupid thing somebody does with their service they would have so many stupid things right can we just all agree that they can't forgive every stupid thing fa Fair take I would say because I bet you the amount of misconfiguration the amount of dumb things that people use Amazon with is just astronomical like the amount of dumb things I would do would be astronomical but it it does feel like if you're getting a ton of unauthorized requests it does feel like there'd be some sort of like hey let's let's chat about this cuz this seems a little wild right this seems a little wild and maybe we should maybe you should do something hey we're going to disable your bucket cuz you have no authorized request and you only have unauthorized requests I don't know some something right like maybe there's something I don't know even if that sounds good because that could be really really bad but still like there has to be something out there how would you how would you prevent yourself from being charged if you can't use AWS or uh cloudfront or any of these extra tools well I mean the reason why you can't is because you can just literally use AWS S3 copy over and you just need the bucket address so you have to do security through secur uh obscurity like that's the only potential option here which is extremely insecure if you have a disgruntled employee the flip is the guy that watches most my content like it really is the the the least I mean it's it's it's at least a it's it's a great first measure of security but anyone that doesn't like you man man you know what I mean man uh was the request authorized no it's all unauthorized it's all unauthorized so for those that did for some reason are missing it it's a private S3 bucket that just had an unfortunate naming and it intersected with some open source tool and the open source tool is also not specifying a region it would go through Us East and do a double charge some sort of Transit charge plus the actual access two buckets one name exactly all right well hey lesson learned you probably need to be really smart about these things and a staple principle uh insecurity is avoiding security by obscurity yes yes I would I would I would completely agree with this cuz it seems like this is just an easy way to get screwed cuz you only need someone to figure it out thank you arm you're just amazing with your additions to this stream all right the name is the primen the the bucket aen the private bucket aen he hey you know what why don't you put your data in my private bucket denied but still charged