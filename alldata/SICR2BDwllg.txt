today we're going to be looking at another very important optimization that we can achieve in Python and this is something that's just good to know about in general in case you're creating a lot of these and what we're going to be discussing is essentially the fastest way to create a list a tuple a string and so on so for example a lot of the times when you create a list you'll go ahead and say l is equal to empty angle brackets and you'll have a list there but some people might prefer to go ahead and say let's create a list by using the list method and this will also achieve the exact same thing it's going to create an empty list and we can demonstrate this of course by printing L and L2 and when we run the program we're going to get the same empty brackets in both of these variables but one of these is actually incredibly slow compared to the alternative and to demonstrate that I went ahead and created two functions and they both return empty lists except one of them uses the bare method where we just defined some square brackets and the other one actually creates it via the list method so that's all that these two functions do and up here I went ahead and created a time it function so all it does is take a function and it's going to execute that function one million times and it's going to perform this test 10 times then it's going to return to us a huge array and it's going to return to us the fastest speed of all of these executions and print it in a very nice format and here we'll get the function name followed by the speed of the execution and in case we need the speed we're going to return the speed but that's all I decided to do to compare these and there's no magic happening here so now all we have to do is go ahead and time these two functions so we're going to get the time for the no method and no method means that we're not using the list method so I called it no method and this has to be without the function call and with method so we're creating a list with the method and if we go ahead ahead and run this we're going to get two outputs in the console one is without the method which gets a whopping .0281 seconds and the other one gets the 0.0461 seconds so as you can see it's nearly twice as fast as using the list method and there's a very good reason behind that and that is every time you call this function over here python has to resolve this method and has to find it and then it can call it unlike the literal syntax which just uses the byte code directly so it ends up being a lot faster and if you create one or two lists in your program of course it doesn't matter this optimization won't give you any Improvement but if you create millions of lists or you'd create millions of tuples or millions of strings it's really important that you know that if you use a method it's going to be slower than just creating the actual literal and of course this goes for Strings as well we can go ahead and say this is a string and here we're just going to say string to create an empty string instead so now that we decided to create strings instead of lists we can go ahead and run this and you'll notice immediately that we get a very similar result it's nearly twice as fast to use no method or the literal syntax over actually calling a method and again this works for two pulls dictionaries strings whatever you need to create it's a lot faster to directly create it rather than to call the function but anyways guys that's actually all I wanted to cover in today's lesson I hope you found it interesting and with that being said I'll see you in the next lesson