anxiety in Tech so you're scrolling on LinkedIn and one of your previous interns just got into Google or a colleague of yours just got into Jane Street and is on 500k before bonuses maybe you've spent the past few years learning to code and this guy got a job in four months he could even be a junior developer who's struggling software engineering can be such an anxiety-inducing field because you know I must have got really lucky due to how oblivious I am of how the world works I just was in college and I just like worked and I tried my best and I built my own projects and I just did that for five and a half years I'm not a doctor it turns out I just I failed a couple times due to LSD and other activities that are not on my radar anymore and I just never really thought about anything you know I just kept doing stuff that I really enjoyed and then we had a career fair and I went to the career fair and then I just got a job I know that's kind of boring but I never really you know I don't know what happened this does sound tough though I think that in today's world with how you get like the continuous positive only updates on LinkedIn Twitter Instagram whatever uh it's really really hard you know what I mean it's it's really really hard because you only see the positive things of these people right you have this six month intern who's now making more than you uh it just feels unfair you know what I mean I could totally get that and someone said hey it's just luck uh it's more than just luck I also worked 80 hours a week every single week producing making my making my abilities better and better and better and when opportunity was available I crushed out everybody okay it's not just luck I hate that phrase luck is not 80 hours a week for four years that's not the same it's just not the same work hard when you're trying to get somewhere you just gotta get to the point where someone wants to hire you you know it's it's it's it's opportunity meets preparation that's what luck is two pivotal reasons one are social reasons and that's developers do a lot and they post a lot on the internet so you see a lot of developers posting their open source projects their career achievements and it just makes you feel bad because you're not doing anything outside of work but then there's this other side of anxiety I think that's true I think that uh that can that can be hard especially if you're if you're only on the internet just to lurk like I could see this being really really hard right the one where you're only on the internet to lurk and you're not actually doing anything with your skills especially if you're only doing a nine to five I could see that this is like a that that would be really hard you're just seeing everybody else doing something and you're wondering what's happening or maybe you don't even have a nine to five but you're just waiting for someone to hire you I could see that being really really hard you know thank you zika where you feel like the code you're producing isn't good enough you'll get judged at work for being too dumb or inefficient or if you don't feel like you're good enough to interview yet and you're just holding yourself back so I'm gonna deal with um you know that mentality I'm just gonna I'm just gonna be real with you uh just go against it no matter how bad it feels just go against it always seek discomfort if you seek discomfort life will get easier you know there's this old quote by uh C.S Lewis that goes something along the lines of like if you TR if if all you seek in life is Comfort wait hold on if what you seek in life is truth you may find comfort in the end but if you find if all you seek is Comfort all you'll find is soft soap and wishy-washiness and ultimately despair in the end right like there's this thing that you have to really you know you can't you can't just want life to be comfortable and it's hard it's super hard with each of these because I've been through both of them and I'll start with social anxiety and fundamentally there's just two ways to approach social anxiety and software engineering and they divigate on very different paths the first approach is you're anxious but you want to be better don't wait to be good enough to start I like that doing something this could be content creation applying to jobs making your first project the point is to make the most Atomic start possible so for example if you want to do content creation don't start off with YouTube that's going to be a bit too overwhelming maybe start off with blogging on medium and then start making a few YouTube shorts or a smaller form of YouTube video we we may disagree with the the exact steps there it's really good advice uh start with something small do it nothing has to be perfect just get after it I will always say never you know you should find what your strength is some people are really good at writing and if you're a writer blog but if you hate writing don't blog you'll never do it you'll just never do it I hate writing I will just never do it even with chat Jeopardy which makes writing infinity times easier I will literally never do it you know what I mean so you know know your strengths know your weaknesses and if you don't know them discover them these tiny movements eventually compound into something much bigger and it's the same with programming you don't start off by building the next Twitter you start off by printing a pyramid in Java and you slow slowly build on top of that every time you get better content creation programming open source Solutions these things take time another tip I'd like to give you is if you're a bit socially introverted and you want to start going to conventions or meetups in your area don't start with the meetups maybe that's a bit too overwhelming you could go and start with online communities maybe just responding to YouTube comments slowly I I just this is another one of those points where I kind of disagree uh I think I think you gotta you gotta face your fears that's a me that's a me approach uh I used to have I used to I used to get pretty I got pretty bullied in high school so I had this like really hard time talking and and and doing things right I was really nervous person uh I I would have like uncontrollable sweat and stuff like that and I really felt like I just had such intense social like anxiety and the only thing really to get me out of that was to do the thing I didn't want to do you know what I mean and so the hard part about something like Discord is there's no body language there's no interaction and that's really really difficult I think if anything sometimes the online communities they fuel social anxiety they they make it worse because you get all the you get all the experiences of being social without all the difficulties of being social you know what I mean and so I do think it can be a little bit tricky and honestly if if you're not very good at being social and all that some just quick Pro tips take a shower put on some deodorant wear a hoodie with a shirt underneath I know that sounds kind of stupid but real talk that's how I started the reason why I did that is because I used to sweat a whole bunch and you know what there's no sweat marks anymore but I would literally just like sweat through my stuff and it's it and you feel and the worst part is is once you know that you're like you're sweating and you're seeing it you feel worse it's like your anxiety doubles and then you're just like freaking out and it just it just makes life a thousand times harder you know what I mean so you know prepare yourself right the downward spiral absolutely dude it's the worst positive feedback ever migrate over to Discord maybe slowly migrate over to another Community the point is you want to find the smallest start you can make you want to find the equivalent of just opening up vs code for any activity that you're doing but then there's a different side to this and let's say you don't care about any of this you don't want to get better I oh my goodness what you're doing I'm laughing of course that vs code I don't know if you saw that again you believe this loser using vs code what a loser for any activity that you're doing but then there's a different side to this and let's say you don't care about any of this you don't want to get better to you software development is just a meaning by the way great quote here who said this comparison is the thief of Joy was it Teddy Roosevelt that said that I can't remember who was the the initiator of this phrase but I remember it was someone I did not expect to an end and you want to spend your free time doing something else let me be the first to tell you that that's fine software development is just a job I'm not sure where I missed the memo that being a developer is like being a samurai warrior where you have to have lifelong commitment at getting better and being the best possible and getting into Fang I don't know I may have so here's the hard part about that like what I always worry with this advice because in some sense I completely agree I completely agree with this with this statement like you don't have to make it your life absolutely 100 the hard part about this statement is that there are thousands upon thousands upon tens of thousands upon tens of thousands of people who are willing to do that and when a company goes to hire when a company goes and puts you against all these people it is really really hard to compete and so there is something to that I'm not trying to be a mean guy here but I I you know like I just simply I just be kind of careful about some of those things you know like I I think that you got to figure out what you know where do you want to try to get to what is important to you if it's just having a job well then you gotta just I mean you got to do what it takes to get to that point and then once you get to that point maybe it's time for you to do whatever else you wanted you know that's up to you totally up to you if you don't find any joy in the The Art of programming then don't finally enjoying it you don't have to right I just think it's it's hard to keep on being successful as time moves forward because like since I started programming which is not that long ago there was no such thing as docker right there was no such thing as Edge serverless there was no such thing as as classes in JavaScript there was just prototypical that you had to deal with right like it is a lot like life changes so fast it makes it so hard to keep up and all of a sudden the next thing you know jQuery ain't cool anymore it's a whole learning curve you know what I mean okay Boomer it is I'm a boomer okay when I was young TCP was cool and people liked jQuery now look at me udp's awesome and nobody likes jQuery okay it's hard life is hard and it changes on you TCP is still cool no it ain't okay no it ain't everyone knows quick is way cooler okay quick it's not even it doesn't even have a a K in it it's so quick it's that memo but if for you software development is just a job you just want to get paid clock in nine to five do your thing clock out spend your time however you want to with your family on your hobbies you shouldn't let any of this make you feel guilty really beautiful picture I don't know who was this this funny but this is really really funny uh okay one more thing about this kind of whole statement uh this whole section there is also the unfortunate side of this kind of mentality which is that there's a lot of really cool jobs out there in programming and there's also a lot of like soul-sucking jobs out there in programming foreign that not all things are that enjoyable my very first job I hated so much like I I hated it hated it you know and it was tough it's tough and I couldn't imagine like just even the idea of only clocking in clocking out it was in.net it wasn't.net it wasn't.net to be fair you know I'm just saying I'm doing this because I like programming this is what I would do in my spare time over anything else similarly for you you can do other things in your spare time don't feel anxious about it don't let content creators on LinkedIn YouTube make you feel guilty for not wanting to improve yourself you are this does feel like a slight direct attack against me but I know it's not I'm sure he's a great guy okay big box sweet I appreciate you we just have different uh you know different different approaches I think in general to life uh and second off content creators on LinkedIn should be considered some sort of ironic nature just throwing it out there okay just throwing it out there are content with the way things are don't let other people make you feel anxious it's completely fine to just treat this like a job now the second kind of anxiety I want to talk about is more Technical and it's development related anxiety so you're a junior developer and you're assigned a task but the code base is huge you don't want to ask a bunch of questions and seem dumb we've all been anxious about the code you're going to write itself what if your solution isn't the best what if you look dumb to other devs you watch tutorials you look for answers on stack Overflow but it eventually in this chain you end up producing nothing let me tell you there's literally no way around it you gotta look dumb sorry you gotta look dumb everyone looks dumb everyone's been dumb I still look dumb I look dumb from time to time you know what sometimes I look at the code I wrote just a couple weeks ago and I think man how dumb was I look at how bad that code is right it's okay to be dumb we're all dumb we all produce dumb code from time to time if you use co-pilot you just produce dumb code faster with unrequited bug delicious coming out of you okay uh just real talk it's okay to look dumb it's okay look dumb it's okay if anyone makes you feel bad for looking dumb it's because they look dumb so much that they hate that that they just hate the mirror that's all it is that's all it is anyone that doesn't like it they just hate the mirror that's all you're not alone I was exactly like that when I was a junior dad and what I found is the pivotal philosophy of programming iteration programming is iterative when you ask your first dumb question that it's dumb okay anything programming related it's not about how much you know but it's about how many times you've done the thing so for example the first time you wanted to print hello world say Theo reference you become better programmer by being bad Pro by being a bad programmer absolutely this is actually one of Theo's best takes I think even when I saw this I tweeted this and said this is Theo's best take I really think this is Theo's best take uh which is you apply this to anything in life you start off really bad at anything you do 10 times you probably copy pasted console log over time you learned that you can just use a for Loop similarly these bigger problems like handling tasks at work or building your first project or starting to contribute on open source you should look dumb because if you're not feeling dumb ninety percent of the time you're not growing the point here is I heard 69 of Statistics are made up on the spot don't think about how anything makes you look a dumb question bad code focus on solving the problem and how you're going to solve the next one even better and that's all programming is it's a bunch of small concentrated iterations on improving your code and the way you think thank you for your time on big box hey subscribe to big box that was a nice video by him great video hit that button okay boom I just did it then hit the thumbs up right afterwards because it makes them feel good uh this is a great video this was a very good video it addressed some good things uh I think that I think a lot in our culture were very very oh did I get a raid hold on sorry I must have missed the raid it looks like it's from Kristoff hey thank you Kristoff uh but real talk I think one thing that you should worry a tiny bit about dumb questions and what I mean by that is take a moment to research that's all I'm saying what you should do this is kind of like my general thing that I do is before I ask a question I find something that blocks me so then what I do is I go through and I walk back uh and I kind of go through and I and I look at what happened and then I try to come up with two points or three points or one point that I tried to get over this problem but I didn't understand it and then when that didn't happen I go and I present the problem hey like I don't really get this I tried this it didn't do that I tried looking at that it also didn't make any sense and then this last part I really didn't understand any either can you walk me through this like that's what I do it's not a dumb question I simply am admitting defeat uncle say uncle say uncle I admit defeat I can't do it uh and there we go like I just think it's that easy um you don't look bad when you do that you only look bad when you ask a question that would have taken three seconds to look at the code right if you just go what's this function for right and you provide nothing else you look lazy you don't look stupid you look lazy and there's a huge difference there's a world the difference between looking lazy and looking stupid no one cares if you look stupid everybody cares when you look super lazy okay there's a big difference and you should just know those two and it takes a little bit of time to kind of fine tune what that looks like some things are inherently complex and you should just go to ask questions sooner it's okay right like when you find a preprocessor macro and see that references another pre-processor macro in C you know just time to ask a question it's just time to get in there and be like yo dog um there's a lot of macros here you want to kind of explain this a little bit you know you do that it's just it just it's a little easier and you can be both you can be both but again I don't care if a question's dumb I don't care I care if a question's lazy right like it just makes a big difference you know if someone like when someone asks you a question that's you know clearly like use your LSP where is this function used you're like dog did you find references like what do you mean right like what do you mean how you know you know like how how does this bitmap thing work did you try Googling the link right above the the function that says this is how it works right like did you just go there and click the link right sometimes LSP fails definitely you should know when your LSP fails so that way you don't ask a question of my LSP fails right you ask a question of I know what I'm doing here lsdate no not LSD completely different that's my only thing honestly long as you do that I don't I personally don't care long as you gave it a try you couldn't figure it out walk me through it that's it that's good that that's good we should all want that right we should all want that and I think it's really really good and I think it's a lot of fun you know just ask Tom always ask Tom you know uh and here here you go here's actually a question that actually feels like it's it's in the same vein as this video which is I find myself having difficulty getting noticed by Recruiters in HRS with thousands of applicants for every job it feels like I'm wasting time learning and trying to improve instead of just trying to stand out uh and I'm not sure how to do that well the problem is standing out is by learning and improving you have to do something with that uh Danny I don't know if you know him Danny Thompson I believe uh I don't know his exact Twitter handle d Thompson I think either way he had a Twitter space this weekend and he was talking about the projects and all that and how to get hired the thing is the reason why you do projects it's not because someone's gonna look at that project and go oh yeah hire that person for that project probably not but what it's really good is that when you get the chance to talk to somebody you control the conversation you jump in there and you steer it they go hey tell me something that you worked on that you found hard now you have like a whole thing you can talk about and you can go harder you can go you can talk about all this you can talk about where you fail you show them passion you show them excitement you show them that you're actually doing something and then you're gonna make it to the next one right it's just it's very very it's very important uh and that's like that's a huge thing is that getting in front of an interviewer getting in front of an HR that's a completely different story huge percentage of that is by referral uh real talk I've referred a few people from this community and how I referred them is by their interaction with me someone just had a Netflix interview like two three days ago or sorry it's the weekend today's Monday it would have been like five days ago because while I was doing a project they started bouncing some things off me started talking about it and I go oh you really know what you're doing hey we have a position open you wanna you wanna interview for that boom right and that just makes perfect sense that's like that's how things happen they uh a huge amount as referrals and so there is you know there is a part to that anyways there you go didn't you quit Netflix no oh yes then no yes then no please make your resume fit on one page also that that's just like easy simple advice right don't don't hand somebody like a roll a roll like a biography this is my autobiography when I was 14 I worked at Starbucks 2.4 years and then after working at Starbucks I also spent some time at Subway I was a sandwich engineer okay that's my first engineering job I like to say personally that's where I like to say it engineer experience right there that's where I really learned the fundamentals of ux user experience okay I like to call it SX for not sex because that's not what was happening uh it's actually sandwich experience like just stop it stop it the name is the primogen