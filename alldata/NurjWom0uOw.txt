all right so this is that time of the year again when I give you the exact step-by-step road map on how I would learn to code if I was starting over today in 2024 just like every year things are changing again in 2024 I did a lot of research for this video so this road map right here it won't just teach you any coding skills it will teach you the coding skills that will actually get you hired the one warning that I want to give you is that in 2024 and pretty much already in 2023 the tech job market isn't doing that well a lot more people learning to code AI is coming in but at the same time it looks like the worst could be over which means we might be entering another age of opportunity and you want to make sure you do not miss it in this particular Market every job posting you see seems to want you to have experience so if you don't have experience it's very very critical that you watch this very video all the way to the end because at the end I will specifically tell you how you can get around these difficulties and get hired even if you have no degree or previous Tech experience under your belt so there are four steps that I'm going to talk about which are all actually insanely simple to apply as long as you avoid the one massive mistake that can really trip beginners up especially this year in 2024 but we'll get to that a bit later first let's start with the first step which is naturally where should we start so if you don't have any Tech background and you might not even know much about programming just getting started can seem very overwhelming believe me I understand like this is exactly how I felt in the beginning but luckily you're here because I'm going to tell you exactly what you need to do the first thing you need to understand is the most crucial thing is that you just pick something you stick to it and you don't just keep changing direction every two months like many people do so I found this guy already who had scraped data from 7 million programming job postings to figure out which are the most in demand programming languages and here's what I found so basically this is the data at the top is Javascript SL typescript which are basically like very close relatives of the same language then we've got python then we've got Java we've got C we've got pH HP etc etc so this pretty much confirms what I've always been saying on this channel is that the top two languages to start with the beginners are still JavaScript and Python and then once you've picked the language web development is still today by far the most in demand area of programming very closely followed by data science Ai and machine learning related applications which I think are especially going to be something to look out for in the future as we enter a more AI dominated world so you cannot go wrong by picking either a web development bab or course with either python or JavaScript or alternatively a more like AI or data science focused one in again either of these languages so then how do you know which course you should pick if you completely broke I would just start with some Basics on YouTube in fact I made my own python beginner tutorial where in just 30 minutes I get you started with the Python programming language I will leave that video down below in the description but if you have some money honestly I would recommend you invest into some premium paid materials as well the fact of the matter is that with paid materials you get the best quality and honestly out of all my most successful friends the number one quality they all have in common is that they are willing to invest in their skills they understand that their skills is the most valuable resource they have and these days this doesn't have to be some massive investment in fact if you're willing to invest just the price of a cup of coffee every single day and there's a resource that I recommend called zero to Mastery where just for this price you get access to a full catalog of coding courses in one place you get everything from a full web development boot camp to a full Cod cing interview boot camp in fact this was the first paid resource that I myself invested in my own coding Journey if you don't know where to start you can start with a career path quiz we just answer a couple of questions about your goals what your situation is and it will give you a curated road map that you can then just go do and follow step by step they also have a Discord community of over 400,000 fellow students who you can learn alongside and who can keep you accountable some of the courses that I personally done as you can see here is their coding interview course their react course which I think the best react course out there online you guys know I always talk about learning by doing and these courses like they understand that they literally crafted so many of these courses where literally you build as you go and that's something I really loved especially about this one you also have this zero2 master reposs B that they introduced this year where essentially it's like a streak system that allows you to like keep yourself going and like sort of gamify the whole system of learning coding which is super exciting and last but not least they also have this new section called zero to Mastery project we essentially have just like full project ideas that you can go pick and build with full instructions so literally just drink one less cup of coffee per day and you can afford this and you can go change your career which is why I've been a partner of them for such a long time so if you're looking to get started make sure you go and check them out from my affiliate link Down Below in the description now after you pick where to start you have only one job left and that is to keep going this might sound like simple advice but you'd be surprised how few people actually manage to do this and to prove this to you I found on Twitter the statistic of this I think is like 100 days of code challenge and this is a graph of the amount of people who start the challenge by the DAT when they end up actually quitting so out of this many people only this many actually end up getting all the way to the end so pretty much no one so this shows to you how little willpower and discipline the average person has this is great news for you because this is your competition like all of these people they literally cannot even do the basics of just sticking to the process I thought a lot about this because it is such a common thing like you start something new and you're super super excited about this like all of you watching this video are PR super excited about starting to learn the code but then so many people just never end up finishing and this is all related to the concept called the dip and there's an idea that I got from this book called the dip that talks about this idea where basically any new Endeavor that you get into follows this same graph where at first your motivation is up here it's really really high but then at some point very quickly you realize that the process that you have to go through is actually so much harder than you thought so you enter What's called the dip where basically your motivation completely drops because you enter this period of conscious incompetence where you realize just how little you actually know about tech and coding but if you manage to get past this dip the motivation actually starts to gradually go up again because now you actually start to get better at the coding so while you still realize that yeah there's a lot of things I need to learn but things that you've already learned give you so much confidence that yeah I can do this because I was able to get this far so far already but is it doing this dip where 99% of people fail because 99% of people cannot push themselves to keep going when they don't feel like doing it there's a quote by Casey nead you can do whatever you want but you can't want whatever you want even before step one before you even decide where to start you should really really consider why is it that you actually want to learn the code if it's just because it seems like the trendy new cool thing to do and you like saw some stupid YouTuber talking about it or something that's probably not a good reason to do it if you have an actual underlying like a strong why behind why you're doing it like you want to use it to make money and improve the life for you and your family that's a very good reason maybe you realized that software is the best kind of business that you can build in this day and age and that is the reason why you learn the skill all of these are excellent reasons but make sure you think about what that reason is for you and keep that in mind when you enter this dip because it will happen to you it happened to me too and it's only because I had a very strong why that I was able to get through that so let's say you decide to keep going how do we now get really really good at coding as fast as possible well there's one thing that you definitely don't want to do you don't want to just keep on doing more and more and more courses this is what most people do and most people fail so we know for a fact that this doesn't work so some of you watching this will be at the stage where You' already started learning perhaps you've gone through some materials but you still don't feel like you know any coding and you can't actually code anything real and you're really frustrated that you've done all this learning but you haven't still learned that much and it makes you like really overwhelmed because you're like well how long am I going to have to do this before I can actually do something but luckily I have a solution for you and to understand that we need to understand a few things about the way our brain actually works so our brains are made up of these neurons and these neurons are basically like the things inside of your brain that actually give you different skills so let's say if you have the neuron of riding a bike that means you now have the skill of riding a bike your brain understands how to ride a bike so the thing with these neuros is that just like anywhere else in the universe we have limited resources we have limited energy to expend on these neurons so basically through Evolution our brains have evolved in such a way that these neurons are really good at figuring out which skills your brain actually needs and which skills it doesn't need the way they do that is by figuring out which skills you are trying to use the most which skills you're trying to use the hardest and most often so the key for us is to make your brain think that the coding neurons are super super important for your brain and the way you do that is not by like learning information about the coding even though that's necessary in the beginning it's more about using the skill of coding because using the skill and trying really hard to use that skill as much as possible is what tricks your brain into thinking that that skill is super super important and it maintains and then strengthens and gives more resources to these coding neurons inside of your brain instead of thinking about learning code as like learn learn learn and then do do do is more like learn do learn do learn do etc etc etc so of course we always need to learn something in order to then use that learning but if you just keep learning and learning and learning the earlier things you learned before are eventually going to be lost because your brain is going to think like okay those things weren't that important because the guy didn't really try to use them at all but it's actually equally bad to just build build build and never learn because if you just keep building with the skills that you've already gathered sure those skills are going to become very strong but there might be other skills that you actually should be learning to move yourself forward as a developer and this is the big mistake that I mentioned in the beginning that's really easy to do really wrong because it's really easy to get into one of these two mode where the most successful people in any domain they understand that you should inter purse learning and doing you should never stop learning and you should also never stop doing and that is how you actually grow not only as a developer but as a person in general and I promise to you that if you adopt this kind of thinking when you're learning the code you're going to get so much better so much faster this is actually where your biggest problem as a self-taught developer comes in as nice as the idea of just learning to code online and building some nice projects and then getting a job sound is not actually as easy as that anymore in 2024 and this is absolutely normal by the way any opportunity that is worth doing once people realize and they sort of clock on to like oh yeah being a software developer is actually a pretty good deal more and more people start doing it and when you combine that with AI on these new trends and they being slightly less jobs available to compet comption is much higher so just building beginner projects is not unfortunately going to cut it anymore this year okay so then how do you stand out if you're just a beginner the answer is that you cannot stay a beginner let me explain these days what I see everywhere is that companies no longer want to hire Junior developers which sort of leads to this like chicken and egg problem of you need experience to get experience but you don't have experience or you can't get experience so how do we deal with this so what you need to do as sort of counterintuitive as this sounds is give yourself experience which you can do by going out there and building real functioning software on your own I mean a real app that you could see real people using that solves a real problem even if it's just for you that has some like real thinking behind it that's not just a copy of what someone else has done because once you do that when you think about it you're not just a beginner programmer anymore you're now a software developer because you have developed real software that even if you don't like release it to the public or anything like that you don't need to do that but it's a functioning piece of software that where you put in all of the pieces of software development like front end development you build a back end you add a database to it you have some sort of an API if you have those components in your app like you can call that a real piece of software as long as again it solves some real problem and it has some like thinking behind it the last step is that you need to show your experience you need to show the companies that you have experience as a developer and you do that by putting this project that you built this real functioning complex project into your resume that is going to get the attention of recruiters so much more than someone with just another to-do app or like whatever in the resume and the other thing you must do is do not call yourself an aspiring developer do not even call yourself a junior developer because as we saw before companies don't want to hire aspiring or even Junior developers anymore they want to hire real developers which you now are because you have developed real software but basically this is the process the first step is always always the most difficult but if you just follow this process and you do all of these steps I promise you you will be able to do it because I did it so many other people did it so why not you but right now you're probably quite overwhelmed at the thought of like building real software when maybe you haven't even started coding yet and I quite understand that which is exactly why you should not start with this complex project you should start with simpler more beginner friendly project to like learn the basics and sort of ease yourself to the process of building projects and in fact I made this video right here where I show you three very very simple beginner friendly python automation projects that you can go build right away as long as you've learned even the basics of python go add that video to you watch later and I will be rooting for your success with coding in 2024 I'll see you later