get up co-pilot X the AI power developer experience we've all wanted all right GitHub a co-pilot is evolving to bring chat and voice interfaces support pull requests answer questions on docs and adopt uh open ai's gpt4 for a more personalized developer experience I do think voice would be pretty interesting because I know like I I did have a friend at uh Netflix well I can't call him a friend he actually became quite mean to me but uh I I will put it this way I think that uh it was very interesting watching him because he actually got one of those uh they have like these little call booths and he started developing in the Call Booth and in the Call Booth he did that because he had he hurt his shoulder and he had to voice dictate his code and so I really did appreciate like I I could see this as being a really cool thing for people that have uh some level of difficulty some sort of physical problem being able to do voice dictation would be pretty awesome uh the the get thing I'm I'm pretty potentially excited about like depending on the type of integration it does that could be pretty cool can we agree that that could be pretty cool I've seen those like message generators that take all your changes and make them into something which would be pretty cool okay go golf uh honestly uh as the finally years of scrivia your IDE becomes real all right here we go at GitHub our mission has always been to innovate ahead of the curve and give developers everything they need to be happier and more productive in the world powered by software this is what I refer to as marketing speech what does that sentence mean nothing that Miss sentence means nothing I don't know a single company that's like yeah I I wanna try to revert us to monkey okay we're gonna go for a world of Monkey uh we're out here hurting software actually you know what I take that back so JavaScript uh JavaScript is trying to do that it seems like anyways when we begin experimenting with large language models several years ago became it quickly became clear that generative AI representations the or represents the future of software development so I actually have a separate take on this one and I'll say it at the end of this but I I I I you know what I mean we partnered with open API AI to create uh GitHub co-pilot the world's first at scale generative AI development tool made with open ai's codex model uh descendant of the GPT 3. man is gpt3 kind of like that one guy on idiocracy that just keeps making babies is that what this guy is uh get up co-pilot started a new age of software development as an AI pair programmer that keeps developers in the Flow by Auto completing comments and code dude it is like the opposite this again is marketing speech co-pilot when you're reviewing code I think it defeats flow flow comes from when you and your brain are uninterrupted now there are ways to use copilot that I think is really useful and that actually you can like you can really hit the flow well but I find that github's GitHub co-pilots autocomplete on anything larger than a line it's just like it's just pure doo-doo it looks like code that's completely fictional or Works 90 of the time and hides like the most dangerous problem all right anyways let's say two years since launch GitHub co-pilot is already writing forty percent is 46 of code 46 of code what this has to be made up there's no way that that's possible there's no way there's no way you know what I I swear okay so so real talk on this 55 faster business this is because y'all can't type you know how many times I do in-person interviews I do a lot of interviews I have not seen a single person that knows how to type it is shocking it is shocking that I have interviewed as many people as I have and they all look at their keyboard do this for a living just learn to type it can't be that hard it can't be that hard take four hours and play on monkey type you'll be just flowing you'll be incredibly fast four hours this will not be nothing uh but AI powered Auto completion is just to the starting point I agree our R D team at GitHub next has been working to move past the editor and involve GitHub co-pilot into a readily accessible AI assistant through the entire development life cycle this is GitHub copilot X X X [Applause] did I just say sex I think it came out of sex our vision of the future for AI powered software development we are not only adopting open ai's new gpt4 model but are introducing chat and voice for co-pilot and bringing copilot to pull request the command line and docs to answer all your questions uh when AI available when AI available at every step we can fundamentally redefine developer productivity we are reducing boilerplate and manual task and making complex work easier across the developer life cycle by doing so we are enabling every developer to focus on all all their creativity on the big picture building the innovation of tomorrow and accelerating human progress today dude this nice nice highlight what did an AI write this how much do you want to bet co-pilot wrote this hey nice highlight co-pilot hey copilot you did a good job um anyways let's see uh want to see what's new discover this right here okay okay new AI power developer experience a chat GPT like experience in your editor with GitHub copilot chat we are bringing a chat interface to the editor that focus on developer scenarios and natively integrates with vs code and visual Studios well you already lost me I guess I'm a Luddite forever yeah you will have to reinvite it dude right now what I see is that there's been no greater Danger ever to programming than this uh the amount of bugs and problems that exist co-pilot is literally generating so much code that it's going to be training itself on its own bad code bugs are going to be a permanent Mainstay as my guess uh this does not let's see this does far more than suggest code copilot chat is not just a chat window it recognizes what a code a developer has typed the error messages are shown and deeply embedded into the IDE a developer can get in-depth analysis and explanations of what the code blocks are intended to do generate unit tests and even get proposed fixes to bugs I mean I want to try it it sounds exciting right like all these things sound great I I do have a problem with too many tests though I feel like there's gonna be a lot of low quality tests I like the idea of being able to generate tests I think that that's really good I you know what I'd love to see is the ability to uh to actually have like AI test just run right like you could do some sort of it's almost like some sort of fuzzing on input and all that it knows your code it believes it knows how to test and so it just does the AI pass and just like it's just rages and randomizes a bunch of stuff and says hey here's a bunch of potential failures why don't you look through them and tell me like are any of these actual failures you know and maybe then it could be pretty cool right maybe there's something pretty uh neat about that maybe you could find some bugs you didn't think about or it could be completely noisy and completely useless right like I don't know Cai CD yeah I don't know I don't know if it's good or bad but there's you know I I think ai's neat I like this idea get up co-pilot chat uh builds upon the work of openai and Microsoft uh have done with chat CPT oh my goodness this is just like the most oh it's the new Bing do you think it's gonna try to get me to leave my wife for Bing is vs code gonna become my new vs lover ah it's like fuzzing yeah effectively it's fuzzing but it's it it it understands code at a native level right it's able to look at your code and like create things in a unique way that perhaps is a bit different right uh fuzzing for AI right copilot for pull requests you can now sign up for a technical preview for the first AI generated descriptions for pull requests I wonder how useful this will be this new functionality is powered by open AIS chat gpd4 model yep yep yep yep okay I'm curious if this is gonna be useful at all all right hold on let's see this thing propose a fix for my code there's a couple issues split method uh called on the tuples wrong I mean so I I will be honest that is cool right like in some sense this is super cool like I like this experience I think there's something really neat about that but again I think that um all right I'll save it the problem is is that I I feel like it's going to be one of those have you ever thought you understood something and you thought you were good at something and then you went and tried it and doing it yourself and you're like completely terrible at it and you just find yourself Googling and unable to actually do it though you've you had much different confidence going into it have you ever like been in that experience uh uh this is kind of like what co-pilot is gonna create every developer to be is that you're like good at the thing until you yourself have to do the thing yourself and then you're just like why come no AI right yeah it's giving me a lot of copy um I'm very curious about this what is it what is it going to do to the average developer because I interview a lot and I'm I'm always a bit surprised at things all right add support for a generic water heater I mean I like I mean I like it it's kind of neat I mean I like that idea but I wonder how many too long didn't read I'm happy for you or I'm sorry is gonna happen in Co in these things also I'm curious I I'm so curious there's so many things I'm curious about this is just the first step we're taking to rethink uh pull requests to work on GitHub I like personally I don't think this is like a huge W here honestly I don't think this is like amazing I what would what I think would be way cooler is you already have this chat system built up right that's like telling you where they think errors are you already have this integration with say GitHub as we can see why not have the AI also review the code and say hey I think there could be potential errors in these situations right like why not why not do that one that one sounds a thousand times better like the the AI looks good to me pass to me why not that it does okay so that that would be a thousand times better the AI linter I'd much rather see that even if it's wrong I'd rather see that oh look at this and they're also preparing a new feature copilot will automatically warn developers if they're missing sufficient testing for a pull request see I don't like this I found two changes that might need that may need tests without corresponding tests uh you know I I'm pretty skeptical of that one not too sure about that uh I don't I uh you know again it comes down to this thing with like how do you you really have to if you don't write tests that are actually really useful they're just noise that's it that's no no no no that's not what I asked for that's ask that's writing tests what I'm asking for is you know how in the previous one right here right here this one do this again right here boom right here there's a couple issues provided in your code the split method is called with the wrong delimiter pound instead of the correct delimiter space so this seems like see how this made an automatic suggestion this right here would be way cooler to have run on your code you have a pull request and it says hey these are issues I think could exist why don't you check them out right just generating tests to get something to have a happy thumbs up that seems like you're just going to put a lot of noise into the system I'm not sure if I really think that that's like a great idea you know what I mean the mic arm is super annoying I know isn't it here I'll fix it for you how's that baby for you all right the compliments our efforts with uh co-pilot chat where developers can ask uh GitHub co-pilot to generate tests right from their editor so in the event a developer may not have sufficient test coverage you know again for me it's not about test coverage it's about the usefulness of a test I have a very simple rule when I write unit tests which is I write a unit test for code I do not think I can get right first try that's it right so if it's just like hey find the highest value in an array I'm never going to write a unit test for that because it's just like bop bop yeah I may accidentally have a bug every now and then one of those but it's just like huge amounts of complexity added just to like test all these simple things whereas if I write like say an async request queue or some sort of batching mechanism or some sort of really complex like uh I made a CSV item that does these really complex row generations and so I just wrote some simple tests to prove that my row Generations are effectively correct and that's it because I can't like I couldn't just get it right first try it was too hard to do first try so therefore I write something simple and I don't know test for business logic makes sense to me well it's not just business logic it's business logic that I do not believe I can I can get right first try and I have a pretty low standard for what I can get right first try or a high standard depending on how you define what is low or high wow all right let's see get AI generated answers about documentation we're launching okay this is actually pretty cool I think this would be I think this is going to be super super useful something that can turn a question into a go to this part of the documentation that that's a pay for service absolutely we're launching GitHub copilot for docs an experimental tool that uses chat interface to provide users with AI generated response to questions about documentation including questions developers have about the language Frameworks and Technology they're using okay I'm very curious about this how do I what am I worries about Ai and all of this is that I will be resistant to change do you know what I mean and I'm really worried about that like I don't want to be the person that doesn't want to adapt because I like x a certain way so I really do try to embrace everything that is why if you if you watch me program right now I do have co-pilot whoa what what is going on here what is what did I press oh there you go I had one of those weird uh I had a weird thing on here so if I go Foo is the script name right like I'm using Copilot uh just because I like I want to use it I want to understand it I find it hyper annoying for the most part and there's a couple things that make it really really nice but that's about it and so you know like I don't want to ever be that person that's resistant to change and so like as I watch this stuff I I'm really conflicted I'm super conflicted about copilot X honestly like when I see this where it's just simply replacing things telling you what's wrong and replacing it I feel like it's going to rob the person of their like programming agency meaning that they never actually have the ability to become great at something they're only like you know because as how I always think about his phone numbers right for those that grew up uh without cell phones and then got cell phones before you got cell phones you could memorize a number like that right you just had all of your friends numbers memorized it was just a much different world the moment you didn't have to memorize anymore it was like whatever muscle that was in my brain atrophied immediately like I just uh just I just could not do it it doesn't mean that it's good that I memorize numbers I'm not saying that that's a good thing I'm not saying it's a good or a bad thing it's just an observation of ability when the ability can be automated and so the question is is this Gonna Make a Better developer experience or is this going to make worse Developers I don't know like I honestly don't know and I really do want to be open-minded to these things and I really don't want to be someone that just judges it because it's not what I consider Pure or good but I'm just not sure what it's gonna do you know I mean yeah ebn you just said something about being able to focus on open source I do think that's pretty cool there could be something about that that's actually a pretty cool observation which is like you could imagine that it would be easier for you to be able to contribute to open source but again I feel like this tool in my hands I can do some really good things with because I am somebody who fundamentally understands programming programming problems building tools doing the whole nine yards from servers to uis I kind of get a lot of things and so jumping onto something open source I could help out pretty quick and get up to speed faster because I have this like AI assisted workflow whereas someone that doesn't have that Foundation like can you really solve the problems we get it you're a genius Anna I'm a genius okay I'm totally willing to use any tool right I will use any tool the tried out and to understand it because for me a big thing uh maybe not for you guys but a big thing for me is the ability to be able to communicate especially with the Next Generation right and so I can use you oh baby like a real talk like to be able to communicate with the Next Generation I did I tried vs code for a week straight uh just like what two months ago three months ago I didn't use uh Vim for anything I didn't uh I did not use it I used vs code for my job I used it for streaming I used it for my side project I used it for everything for a week just to make sure that I am not missing something right and I think we should all take that mentality even if it's painful like how do I know that it's how do I know that I'm not like you know degrading my thought process because I'm unwilling to try new things and so I don't ever want to be that person I don't want to ever be the person that is unwilling but I also want to be able to have like a standard and so my big fear so here's here's kind of my big fear I talked about how I talk about this at the end um I've been interviewing a lot of candidates recently uh for Netflix and some of them are pretty good you know some of them some of them can do some some things uh but some of them it's really clear that they don't know how to program despite being able to somewhat program right like they've never really learned much deeper and these are people that are engineers at other companies and other companies pay them money to be not an intern but to be like an engineer and I sit there and I look at this and I go man how wide is the world open right now like real talk I don't test them on Lee code uh like it makes me come to two conclusions one the average programmer is not what I would expect and two that means anyone that's willing to put in the work the ability to get hired to get paid well to be able to do something I think is really like the world is your oyster meaning like you have the ability to really shine in this world and yeah it's going to take a little bit of effort it's going to take a little bit of time but you can do so much now the reason why I bring this up especially in this context is that I believe during uh you know like my 100 interviews at Netflix uh I believe I've been chat GPT twice and the reason why I think this is that there is this ability to produce code and produce it interestingly enough in ways that I've never thought of and to do it swiftly but then unable to tell me what you're doing [Music] like unable to really explain why and when a problem comes up the answer almost as universally from both both suspicions was to rewrite the code just rewrite it get it out we'll do it again and whenever I see that I get I just like get so confused because I'm like okay you just got done writing a bunch of code are you sure you want to make this like are you sure you want to do this are you sure you want to go that way are you sure you want to just like remove everything because I'm not sure if that's like a good answer like maybe let's talk through the problem no we're just gonna get rid of it well why like why do you want to just get rid of it like you know like it was very interesting um I was more surprised as of recently for what would be considered like an average engineer and their ability to like really command the language and so do I think that there's plenty of room for you to get hired as an engineer absolutely just master your craft man like there's just so much opportunity right now do I think that layoffs and all these things are hard and disheartening absolutely I don't know if people are inherently lazy I don't think that that's right anyways just my thoughts I've been thinking a lot about lately whereas like I really want to believe in people and when I do interviews I really try to like let them know I am on their side when they start writing the word await and I know that they haven't made their function async sometimes I'll just jump and go here I got it for you and I'll just write a sync for them they go oh thank you I'm like yeah I'm on your team I'm here to just make you successful I want you to do the best you can possibly do right like I really want to be the best interviewer possible and to give them the most opportunity to be the best uh right because I understand that you know doing interviews there's pressures there's nervousness you don't want to mess up you want to you know do the right things and I really want to give everyone that opportunity but I'm just a little surprised that people's like caliber that I've seen and you know maybe it's just like accident bad filtering whatever's happening right you know but how many times does that happen before you go man you know like I would just expect somebody with years of experience to have a pretty serious ability to command the language right if you've been doing one thing you should be pretty serious at at it right like if I ask if I did any language pick any language even Cobalt if I program that day in and day out within three weeks I would have that thing so thoroughly just destroyed inability I'd be like this is exactly how we do this we do this right like I want to learn it I want to become good at it even if I don't like it I still want to be good at it do you know what I mean