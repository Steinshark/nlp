today I wanted to tell you what is the fastest and smartest way to get to $10,000 a month with coding and I say this as someone who has walked this path but who might do some things very very differently if I was starting over and by the way this path works even if you don't want to work for a fan company or if you're not able to work for a fan company or even if you come from a country that doesn't have access to these massive salary straight out of college like they do in California I do need to be honest with you in 2024 the tech indust is not the same as it used to be like perhaps 3 to 5 years ago there is a lot of competition because a lot of people have realized that learning the code is literally the easiest and fastest way to get to financial Independence which means that if you simply learn to code without keeping in mind a specific path to get to your goals you might just be wasting your time but before I tell you what is the most optimal career path for developers to maximize their income throughout the careers as well as how following what everyone else does today could be an Absolut disastrous choice for your career we need to start with fixing the most common beginner problems that stops beginners from getting anywhere with learning the code which I want to illustrate to you with this story so this is Tom and he's trying to learn the code he picks up an online course on python he's super super excited to learn it and for a while things go great he's making programs and building some small projects fantastic right well not exactly with probably only 2 months left until he's ready to start applying for jobs he reads an article where it says that basically python is kind of dead and nextjs is the next big thing so what does he do well he abandons Python and starts learning this new shiny framework but this now adds two additional months into his Road M because he needs to learn this entire new ecosystem but it's worth it right because now he's learning the right thing so what do you think is going to happen to Tom if you follows on like this well it sounds obvious but he's not going to get anywhere if he just keeps changing directions every two months and this sounds obvious but like don't lie to me like you've done this before you've started learning something and then you started wondering oh is it is the right thing this is the best thing to be learning and then you start dabbling on something else like oh maybe mobile development is the next big thing or maybe I should be learning AI but at some point you simply need to have the ability to choose a path choose a direction and then just stick to it no matter what paradoxically precisely because we have so much Choice as programmers it sort of leads so many beginners to get paralyzed and do not get anywhere with any of them because they keep like dipping their toes into all these different things when in real reality any of them could work if you just stuck to one thing for long enough and by the way if you're wondering what is the right road map for you based on your budget your preferences and things like this I previously made a video like this where I literally break down 40 different coding courses that I personally done and I curate them into a couple of different road maps you can literally just follow from zero to everything you need to know based on your budget level so if you're still wondering about what to do then just watch that video and pick one of those road maps after that you can finally get into step one which is just getting your first ever professional job as a software developer at this stage I don't care what the salary is it could even be unpaid because this allows you to buy yourself time to then start plotting your next move in secret which we'll talk about in the next step now of course it's possible that just with this one step you'll already land 120k a year job but chances are this is not going to happen yet and if that's the case don't feel bad like it didn't happen for me either for me what happened is that I was finally able to stick to one path in step one I learned to Cod from scratch on my own rather than just waiting for the perfect job I just took the first opportunity I got which happened to come via an internship I had done previously at a company in a completely different role so I was able to get my foot in the door very very quickly in the industry but there was one massive problem the salary was not really what I wanted so I almost instantly started looking for a better one but turns out that in order to get into the best companies there is one big obstacle that stands in the way and that is the dreaded coding interview and in order to pass this coding interviews at the best companies you need to learn something called data structures and algorithms and in case you're not aware data structures and algorithms are like the foundation of what programming is you see a program is nothing but number one some input data number two some serious of steps that you apply on that input data and then number three the output of the program and these three B step process is collectively known as an algorithm so as programmers our task is to design this algorithm but because time is finite and our computer's resources are finite ideally we want these algorithms to be as fast and efficient as possible in order to do that we need to know how to design algorithms well and we also need to know how to structure the data that we place into our programs and that is where data structures comes in and so at the very biggest companies these are the topics that you need to be able to master in order to pass coding interviews and by the way a lot of people complain a lot about like how coding interviews are unfair and like all these Concepts you don't actually use them in practice and that may or may not be true and you can have your opinions about that but the fact is that if you want to pass these kinds of interviews that a lot of companies ask you simply have no other choice but to master data structures and algorithms and that is going to be your step two I realized that the current job I was at was absolutely not what I wanted so I went through this entire journey of mastering data structure algorithms on my own to figure out how to pass these interviews as someone who had like no confidence or anything in my own ability to do that but if I was able to do it you can do it too and through this journey I learned a lot of things that I wish I knew a lot earlier in my own journey of learning dat destruction algorithms and for that reason because I also realized that there's currently no good python based data struction and algorithms course I would hear like to pre-blog my own algorithms and data structures course that I am making is called algo University and it's going to be coming out like probably in the next few weeks from when you watch this video there's going to be linked down below you can either sign up to the wait list or purchase it if you are watching this in the future when the course is already out so if you've been looking for one python based resource for this then you can check it out if you want now after you master data instuction algorithms you now know everything you need to get into junior level position pretty much at any company you want of course there's going to be a lot of luck involved you're going to have to apply a lot it's not just as simple as you just apply and then just get in but if you put in enough volume you should be able to get a job that pays you 10K a month but you still have a couple of problems what if for whatever reason you apply to the best companies but you just can't get in or what if you don't want to work for the Googles or the Facebooks and what if you happen to live in a country where even these highest positions do not pay you 10K a month like even where I was living in London I think the top salaries I could have gotten were just around like maybe just below 10K a month but there were only a very few companies where I could get that so of course I could get into one of these companies and then wait like 3 to 5 years to get my salary out of that point or I could look into something else which is probably the one thing I would do differently if I was starting over today which is to look into freelancing and before you skip over the section I'm not talking about like going into upwork and doing one of these lowc cost projects or something like that what I'm talking about is a specific kind of freelancing called Contracting so basically what this is all about is that there's a lot of companies out there that need Developers for specific projects but they might not want to hire them as full-time employees because the thing is from the company's perspective when they hire a developer or any employee it comes with a lot of like requirements like a lot of contractual requirements like sick pay paid holiday that's just a bit of a hassle for the companies to deal with and it's sort of very difficult to get rid of employees at least if you're in Europe or something like that and so that is why especially in Europe companies are are willing to pay a lot more to their developers if they become something called a contractor rather than an employee well a contractor is is essentially you're doing the same work as an employee you're essentially simply just hired as an independent service provider and because it's much easier for someone to hire you as a contractor rather than an employee companies are willing to pay a lot more like on a per day or a per hour basis for contractors versus what they pay to employees and if you're willing to take the sort of additional risk risk of not having like no dis spirit and things like that being a contractor actually offers a much better opportunities to get to these 10K plus a month salaries as a developer compared to being an employee an additional benefit which is again why I would do this much earlier if I was starting over is that being a contractor also has a lot fewer legal requirements around like where you can work so if you're picturing this like remote work Paradise or you're working from Thailand or a US company or something if you're an employee is actually very difficult to do this because of the legal requirements around remote work and where you allowed to be based for like tax reasons and all these kinds of things but as a contractor because you're just an independent service provider essentially you are a business offering a service to these companies you can live wherever you want so what you can do is be a contractor living in Bali Thailand and optimize for taxes and cost of living and everything like this while getting paid more potentially working in location as an employee and by the way the skills that you need to learn for it are exactly the same because the work that you'll do is still exactly the same you just have more pay and more freedom it's pretty good right so these steps will get you to 10K a month as a developer if you just stick to it and you don't quit but even once you do that there's still one big problem that you'll face so what's important for you will depend but for me what's important in my life is not even money per se it's the freedom that the money buys me and the truth is that being an employee or even being a contractor will never give you total freedom you'll always have a boss that can tell you like when you need to be in a meeting and you'll have a calendar that you have to stick to you'll have one employer that controls pretty much all your income unless you're doing this like overemployment thing which is pretty interesting and unless you do become a remote contractor you'll still be sort of restricted on where you're able to live at my job I had the freedom to work from home which was awesome but I still had to live in the UK where I really didn't want to live anymore the that is why I knew that eventually I would need to go into this step four which when me was step three because I wasn't aware of Contracting anyway because like let me tell you another thing like just making 10K a month or 120k a year while it sounds like a lot of money it really isn't because let's consider this to make this income especially early in your career you'll probably have to live somewhere like San Francisco or New York or London or something like that and the thing is that I literally did these calculations if you earn 120k year in New York City of the taxes of the cost of living you'll pretty much be left with nothing at the end of the year you'll still have to wait a lot of years in your life until you get into like 300K a year or something like that and if you want to do that that's absolutely fine nothing wrong with that but if you want to get there much faster what I always recommend to people nowadays is use your coding skills from 9 to5 to work your job or your Contracting project but then from 5: to 99: start a s hustle start a side project that you could could potentially turn into a business start a freaking YouTube channel where you teach your skills that you've now learned into other people there's so many sub niches or they just share your journey and the things that have worked for you and then at one point which for me happened a lot earlier than I thought it would happen you can turn that side hustle into your main hustle and leave your job and now you're using your skills as a self-employed person to be totally free rather than being stuck to one employer and by the way entrepreneurship is not for everyone if you don't want to do this that is absolutely fine as well but I'm just saying that if you want to absolutely maximize your earnings and maximize your freedom as quickly as possible you should be hustling to at least create some side income at the early years of your career because coding is such a potent skill to start creating businesses or startups or whatever you're interested in so it would be a waste to just give all of that skill that you have to one company or one employer at least that is my view and so if you want to learn the principles of how to actually do that of how to turn your coding skills into profitable businesses and how to avoid the biggest pitfalls that often make programmers the worst entrepreneurs out there I recommend you watch this video right here where I actually interview my own startup coach where he teaches all of these things in a couple of very easy to follow principles and with that I'll see you in the next one