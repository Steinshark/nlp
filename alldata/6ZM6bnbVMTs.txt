whether you are new to coding or have been coding 
for years on end one thing that stays the same   is having different skills to help you stay 
productive does this sound familiar to you you   are coding but you feel like you aren't getting 
anywhere that you're just staring at the screen   and hour after hour nothing is really changing 
this is something a ton of developers experience i   know i have been one of them but there are certain 
skills or tips that you can acquire to make you be   a more productive developer before we get into it 
though make sure to hit that subscribe button for   more tech and coding related content shout out to 
some of these subscribers here thank you for your   questions feedback i always make videos based on 
what you want to see what you ask for so if you   haven't done so already make sure to leave in the 
comments other video topics you want me to cover   also as you've seen earlier i posted 
my instagram on here make sure to go   give that a follow come say hi let me know if 
you came from youtube okay let's get started this is a story that really isn't so uncommon when 
developers are staring at screens at their code   for hours on end or maybe it just feels like that 
but you're not really getting anywhere you're not   being productive and it seems as though you just 
can't kind of what is that saying put your foot   on the gas to get moving it's not that uncommon 
but when you hear about some of these skills or   tips that you can acquire very easily to make you 
a more productive developer this will really shift   instantaneously now i'm not trying to say there's 
a secret formula here to always being productive   because productivity is a myth in itself a lot of 
times however these skills and tips are really to   help you when you are feeling as though you 
just don't want to write code today or move   forward but unfortunately you have to uh that can 
help you kind of move forward at a quicker pace   the first tip i have for you is to not be 
afraid of errors yes i know it sounds kind   of contrary to what we all think when we first 
see an error come on screen is uh what is that   but more often than not if we just take a 
step back and actually read what the error   says i know it sounds very obvious but i mean 
how many of us are guilty for not doing that   it can really save us a lot of time by just 
taking the time to step back read what the error   is sometimes it's not that helpful i understand 
that but other times it will give you the answer   as to solving your problem right in the error 
learning to properly debug an application can   save you so much time in the long run and although 
really learning to debug is a skill in itself   that does take time to develop once you have 
developed it it will save you hours hours   weeks probably years on end by being able to debug 
properly this is something that i honestly i think   i held off on for way too long i thought okay i'll 
just log out everything i won't learn learn to use   different debuggers properly depending on what 
language i was using and honestly it really for   a long time caused me headaches that i didn't even 
need to have but because of my own stubbornness   by not just diving in there and debugging or 
learning to properly debug it really slowed down   my coding growth and in the end my productivity 
so if you are someone who is either learning   to code or has been coding for some time and 
you haven't picked up the skill of debugging   put that on your list to do first debugging number 
one number two on my list is have a plan learn   that before you dive into coding before you are 
building a feature or building a product if you're   building a small tutorial product or your own 
product or project have a plan go in with a plan   too often we get excited especially if you are 
a beginner learning to code that we just start   typing on screen and i'm guilty of this still 
too rather than coming up with a full plan i   just start diving into it thinking oh this isn't 
going to be that big or it won't take much time   hours later you're halfway through in spaghetti 
code and getting nowhere because you didn't   take the time to plan properly one of my favorite 
things about coding is there are so many different   ways to develop new features however that can 
also be one of my least favorite things because   there are so many ways to develop features a lot 
of times we don't even really think about the   best solution we just dive in and do what we are 
comfortable with or what we have done in the past   and rather we should take some time step back plan 
out properly what we are hoping to achieve really   honestly even today i had that moment where i 
was asking for help and if i would have just   taken a few minutes instead of that to just speak 
out loud to myself or to a rubber ducky and say   what i am trying to achieve and come up with a 
plan it would have saved a lot of back and forth   and a lot of time and so rather than just jumping 
into writing your code and starting a new project   come up with a plan a high level plan and then 
really break it down now don't go the other way   where all you do is end up spending all your time 
planning that you never actually code you need to   find that happy medium but make sure you just not 
jump in without at least having a high level plan   of the different components you're going to 
make how you're going to structure your code   how you're going to make it reusable if it needs 
to be reusable and it will save you so much time   in the long run the third tip i want to talk about 
is find the right environment for you there are so   many different places where we can code and we 
can code from pretty much anywhere where we want   which is amazing however one of the downfalls 
to that though is sometimes we put ourselves in   environments that might not be suitable for us 
to be productive for myself i know if i go to   a coffee shop it sounds like great scenario for 
me being able to walk in have a coffee sit down   be surrounded by other people however i'm never 
really that productive there and maybe for some of   you that's where you're most productive but it's 
really important to know what environments you   really thrive in and can be productive in and what 
environments are distracting to you and really   are counterproductive this is really done by trial 
and error if you never have tried out going to a   coffee shop or working from home or any of the 
scenarios you're not going to know what's best   for you one thing for me i know though is i love 
coding by having my two monitors my dual monitors   that's really productive for me because i can 
see everything i can see my code on the screen   versus just on my laptop screen i'm not someone 
who is productive coding on the couch or in my bed   so just be aware of the environment you are 
coding in because the environment you put yourself   in to work in will have a huge impact on your 
productivity the fourth tip i have for you and   this is something that once again i had to learn 
the hard way is to have a set of tools to help you   and what i mean by that is when i i'll give 
you an example when i first started coding   at the first company i ever worked at i was really 
resistant to using different tools such as postman   or um what are some other ones you know even 
chrome dev tools or really any tools that would   essentially help me um by being a better developer 
and help me develop faster i was so resistant   to use different kind of tools and i think the 
reason for that was because i was just still new   to coding and getting my foot in the door that the 
thought of introducing more tools on top of what i   already was learning just seemed too overwhelming 
the problem with that though is it really slowed   down my development and i think it will for any 
of you as well who are learning to code if you   are not willing to adapt and bring on different 
tools that will help you with your productivity   now you might be asking how do you know what 
tools can help you with your productivity and   development and i can't really say specific tools 
because it depends on what you are working on what   i would recommend though is if you are working on 
say an angular application or a react application   or maybe you're working on a back-end application 
for the back-end of an application google just   use google google's your best friend some tools 
that can help you with that specific language or   specific framework whether it be different kind 
of plugins that you can download whether it be   different tools such as postman different tools 
that will really help your development process   speed up now also too i really want to highlight 
don't go the opposite way by downloading every   single tool in the books so just try once again 
and find that happy medium balance but just kind   of take note if you are starting to resist using 
tools it might be just because you are feeling how   i was feeling just overwhelmed with everything 
and but just recognize that it will save you a   lot of time and the last tip the final tip i want 
to share with you today tip number five is to take   breaks i get so many messages from people saying 
how long should i code for every single day to be   efficient or how long do you code for every day 
it's not about how long you code for it's about   what you do in the time that you code so it's 
always a very interesting question to answer for   me and i think more than anything is realizing 
that coding for six or eight hours straight is   not beneficial to most people anyways you need to 
take breaks and step away from your computer to   give your mind a rest and kind of what is the word 
refresh it just like an application you really do   and you can't just be a robot sitting there 
coding 24 7. so be kind to yourself take breaks   even if you are stuck on a problem i know it's 
very easy to just want to stay at the computer   and not leave until you figure it out or for 
me anyways i'm really guilty of that but it's   so important to take breaks step back go for 
a walk at in the end of the day it will make   you more productive i know it doesn't sound like 
that but i can tell you firsthand it always makes   me feel more productive and be more productive 
when i come back and a lot of times it helps   me solve the problem so take breaks i know 
you all are very hard workers but you gotta   take a break okay those are my top five tips for 
different skills or habits that you can develop   to be a more productive developer it is so key 
to take these in order to really grow your coding   skills and become a better developer i hope you 
found this video very valuable and helpful leave   in the comments other video topics you want me to 
cover if you haven't already make sure to hit that   subscribe button and give this video a thumbs 
up okay i'll see you all soon thanks everyone you