there weren't that many people sending email so it was kind of which which way is it going to go um you know we'll go with the obviously clearly better way of starting with a big name and they seem to have gone this way each side said they'll see the light in due time and i sat in several meetings where they discussed this and said oh you're all wrong eventually just the weight of history settled it and we've all gone for this scheme the uk and the us disagreed in multiple ways so the internet initially went with so originally they just had dot harper so you'd be at stanford arbor joe at stanford harbor or something like that again that wasn't going to scale we couldn't all belong to the harper they split it up into several top level domains dot edu was for educational sites mostly universities dot mil for military because obviously this came out of the arpanet and there was military people dot net was generally for network providers dot com for commercial gov for the government hint for international organizations they were thinking things like the un and anything else dot org for any other organization that list has now grown they've added all sorts of other things to it but this is the way it kind of worked so you were at uh say berkeley.edu amazon.com you were split up in those sort of top-level domains in the uk they decided and actually across most of europe they decided they were going to go more hierarchical so there would be a uk domain say in france dot fr and then below the uk they had co for commercials and ac for academic community and then you you divide it up between that and for the longest time there was only uk ac basically in the uk there was there was like one commercial domain just to sort of prove it worked for the longest while however the bad thing for us is that um not only was this this sort of a dodge we could sort of live with that because you know knew to send all the uk stuff to the uk and any of these other things you'd send off mostly to the arpanet or the internet as it was beginning to come but the thing we did weirdly in the uk was to flip everything around so this would be uk dot ac dot not dot cs brother computer science at nottingham and if you're in the internet it would be the other way around cs dot not ac dot uk and they both had good reasons for doing this both of them said it was much more natural way to write the addresses you would always start with the most significant thing work your way down no you'd always have the most significant thing on the right hand side and work it down that way this caused us no end of issues in our mail routing tables because typically users would pick up business cards or they'd be sent addresses in email addresses not actually in the headers but oh you can contact me at in berkeley.edu so we would type in you know eric berkley.edu or whatever and we'd have to sort this mess out within the routing tables and mostly it was okay if it sort of ended with edu that was okay but there were a few palindromic addresses and we were really hit when checklist czechoslovakia i can hardly say that joined and they have the top level domain of cs so now you could actually pass this either way this could be somewhere in czechoslovakia or it could be somewhere in the uk so this added even more complexity to the mail tables which were already pretty complex so you take an address and you try and pass it both ways you'd say does it work this way if not you'd flip it around and say does it work that way if you got a hit that was all well and good you knew where to send it but typically you didn't have a complete list of every place in the known world so you'd start chopping bits off you'd chop off the cs and say do i know about nottingham in ac uk and if you didn't know about that you'd chop off the next bit and say well what about uk ac or just uk so you work your way back up but you have to do it each way so in actual fact you chop off the cs going this way and then you drop off the uk going the other way and see if that made sense and then you you'd start chopping off in the opposite directions and you keep working up until you found the longest possible match and i don't think we ever really ended up with completely palindropic addresses but that was more by luck than judgment really you know it was just crazy times you get these addresses you have to flip them around and we'd give waitings to some of them and sometimes you'd fill out your table more than you needed just to say no this place although it looks ambiguous no it really does need to go off to the internet and not to not to this way or that way i think this sort of formally died out somewhere in the 1990s uh but but it lasted for no end of time and most nearly everywhere else kind of ended up with the us version um and even if they had their own names like france or greece or or whatever their own top level domain they tended to stick with this one so it was specifically uk problem of trying to get all that sorted out really a problem we could have done without it's sort of like an endian problem isn't it oh absolutely it was called big endian versus little endian it's still the same on the internet do you if you're sending like an integer which is typically often composed of four bites do you send the biggest one first or the smallest one first uh luckily i think those are the two only options now but this this one was sort of a a problem around making i don't know why we didn't just well it wasn't really clear at the time who was going to win out and they came up with this in the internet and said this is going to win this is going to be this is the obvious way to do things no no it's much easier to do it hierarchically and in some there is some sympathy with that you know you you can sort of divulge this the uk and say right the uk you sort out what goes on below uk uh because this one's a bit more awkward if you're going to sort out who grants names below edu it's sort of an international thing same with govs and things like that so it's much easier to do it by country because you've usually got some body there that can divide it up and there should be 32 bits there now each of these bits has a number associated with it so this would be considered bit zero and this would be considered bit 31 and then we can count down so this is then bit 24 that's bit 23 16 and 15 and then that