I immediately think whenever I read something from medium it's trash straight trash trash all right so let's find out okay so functional uh versus o o p are you guys excited about this I'm excited about this because this is you know I feel like this is a topic all of you degenerates just love do you love functional crap oh yeah it's medium yeah I know it's medium careful about medium medium is a place in which uh a good sounding programming articles are there to bait you into something that's actually terrible all right here we go uh so he's given some Basics right here encapsulation pure functions abstraction first class functions inheritance immutable data polymorphism referential transparency now I may know all those words individually let's find out this is a great let's see there is a great misunderstanding of what object-oriented programming really is and its Origins the term object was first coined in the 1950s and became really popular in the 60s on lisp circles as a powerful design pattern finally in the 70s the first object-oriented language Small Talk was developed by Alan K the truth is that what object-oriented programming really represents has been lost over the years as modern languages kept copying the syntax and ideas imposed by the C programming language Alan K has declared publicly that many times that the essence of oop is the concept of message passing well this article goes straight to the heart right now okay there's no warming up right now we're going right I mean we're I mean normally you read an article in the first like two paragraphs of just like meaninglessness and then we actually get to it this one is this might be the first article I've ever read that just goes straight to it all right uh and that modern programming languages focus more on object notation itself than the concept of message passing this of course is the motivation for this article and our Focus here will be to show the essence of object oriented programming using a popular modern programming language Java yeah I hope you enjoy this journey I'm ready are you guys ready so before going deeply into object oriented oriented implementations it is a fundamental it is fundamental to go deeply into the prerequisites let's start with messages so what the hell is a message it's a good question I don't even know at this point uh when you want to communicate two endpoints you need to standardized information to be passed along the way uh messages the standardization standardized information and is essential to guarantee that the two endpoints will be as decoupled as possible it is important to notice that if the producer sends a message that the consumer does not understand nothing happens because it is not a predefined standard wait shouldn't something happen so let me get this straight if you send a message and the and the consumer does not understand it or the producer wait hold on yeah the consumer does not understand it it just does nothing like shouldn't you give like a a 400 like yo like I'm just thinking in the terms of HTTP right yo dog it's not good producer 500 consumer should be a 400 yeah 420. yeah I'm a teapot 428 right uh all right all right our problem suppose I want to grab the students best grade from a list of grades and all the exams he participated we could write a silly function and do that without complex functionality we just use generic okay why is this a silly function this is not a silly function this is just a function okay let's see okay grades equals length I hate this uh statement okay let Max equals grade zero nice I like it I equals one less than this okay looking good grades Max yes yes yes return Max fantastic the above code works perfectly but since we're working with an array as a parameter it does not sound very wait it does not sound very semantic so I'm not gonna lie to you at this current moment I don't know what that means can somebody explain what this means to me let's just say if I'm let's just let's Okay Okay I I know what it means actually okay um but maybe you twitch chat could like explain to someone that doesn't understand it once again twitch chat has the ability to be completely useless whilst making me angry idiomatic does not equal semantic okay it is not that somehow telling me what semantic what something not very semantic isn't doesn't help me know what it is right like I could describe an elephant as being not a cheetah but that doesn't necessarily help me know what an elephant is you know what I mean uh it's not clear that the list of grades belongs uh to a single student how do we fix this well there are two solutions to the problem we changed the name of the function to get student best grade and we pass the parameter uh parameter of the student as an object well of course we'll focus on the second one yay okay I'm confused using the class keyword uh let's see well since we are object oriented programming lovers damn we can do it with the word class there is a this is such an easy job anyways all right grades this best grade okay yep I understand that okay this code looks much better to me I don't really see a difference between these two codes I mean the only okay so real talk here the only reason why I would put something into a class like this is if that if it had a complicated data structure and I need to do like several things to it or state was needed over time or some intermediate calculation was needed to be held on to you know what I mean so I this doesn't look any better or worse it just looks the same to me you know what I mean all right come on Carlos now the code looks much better as I can simply pass uh on the student as a parameter and bingo much better all right Carlos get the best grade come on Carlos but this uh but this is not the idea behind this article it looks quite nice but we are using JavaScript or object oriented notation to do that why not do with functions only keep on reading okay I'm reading okay I'm reading you don't need to tell me to keep on reading I'm reading our first functional object okay uh let's see to fully understand what we're talking about in the next paragraphs we need to start simple uh we need the first concept of function scope that creates a function counter so by the way just just so you know this right here what we're seeing right here I just want you to know that you're going to produce a lot of memory okay just throwing it out there you may not realize what you're doing okay a lot of people don't understand what they're doing and so uh they don't really realize that this type of JavaScript is not really the thing is is just because JavaScript can do something does not necessarily mean it's a good thing do you know what I mean the call stack can also become very upsetting as well holy cow that is a function that returns another function yeah that's fine this is a normal thing yes I know uh I know you didn't even need to put these little little things around it you actually made it look scarier by putting these things around it you don't even need to do that what the hell what what okay don't even do that I know it may sound absurd for many people but that is actually very useful I like to tell people that the first function is a function Builder because it lets you create more Dynamic functions okay but okay but what the heck is State all right think of State as anything that can cause your functions to Output different values for the same input in this case the param let's see the parameter initial does exactly that yes okay as you can see in the example above for the same counters every time we call the function review node okay I think we all understand now do we understand State injection we can we can complicate things a bit more and write JavaScript only class using functions only why JavaScript only because we'll use a Json okay what the hell are we talking about at this point all right so I'm not going to lie to you this is not better there are several reasons why this is not better first off you really don't need these parentheses here but also there's something else that is really frustrating about this now one thing that makes JavaScript so good or so kind of fast here is that when you do this in a class the function itself is created once right it's on the Prototype it's what it's bound to that it's changed depending on the object you you you call whereas this it's actually recreating the function and the closure every single time that's just substantially more memory and more garbage collection this type of programming that I'm seeing right here I would argue probably doesn't make your servers run as good now the real question is what does it mean run is good uh I will say this is  I would never use this type of syntax don't use this type of syntax this is demonstrably more confusing than the previous one I know I'm gonna keep on reading but I'm just saying this right here in of itself I would say that whatever the conclusion of the article is don't do that okay just don't do this let's keep on going it's going to get better is my hope but this is not good okay this this is not good and by the way if you put a space in between these two things I will literally fist fight you in a PR okay yeah oh you shouldn't nitpick yeah run prettier and stop putting a space between a function and the name okay it's annoying okay don't do that stop it also what the hell does that even mean what is that uh as we can see we used the same approach on the counter's example our function students that represents our class receives the grades as a parameter and maintains its private attribute grades the public methods get grades and get best grade of this class are returned of this object function Abomination are returned as a Jason it's not returned as Jason can't even it's no it's not Jason okay it's not Jason it's not Json because Json Canon code functions if you were to Simply encode this object all you would get is nothing you'd get an empty object this is not just on this is an object that's all it is okay it's not gizmal's proper name which is jismal I don't know if you know that but but Douglas Crawford actually was going to name it gizmel j s m l JavaScript markup language anyways Gizmo we could have been saying Gizmo this whole time all right there's nothing greater than that nothing would have been greater than jismal yet look at us here look at us here TJ the Dismal jizmo it's dismal that this dismal happened okay anyways all right since the class is written using a fancy looking function there is no need to use the new keyword somehow that doesn't make me like impressed right like this is not impressing me yet but I'm very curious where this is going because there must be a good reason for all this all right this implementation is very uh common in Old JavaScript source code yes but we hated it uh but it is very powerful no it is not uh it literally isn't the reason why it was so popular in Old JavaScript is because a function was a class that's what made it so powerful so if you look at old JavaScript you'll actually even see in a Constructor a basic check like is this window if it is return new of myself right and so it's like JavaScript was just a piece of language now it's just a shitty language but like it was like a genuine just horrible language and you'd have to do the craziest stuff to make it work so okay I'm ready the fun begins now let's let's have the fun begin I'm very confident that this is gonna get amazing okay message passing object notation M Pawn you guys want some npon all right here we go let's write the same object before using our message passing strategy Okay so what's happening right now is what I would refer to as the worst code I have ever seen in my entire lifetime there's something about this that does make me a little excited I'm not gonna lie to you I love seeing new ways in which people build things like this is exciting for me but this is one of the most confusing pieces of code ever the reason why I dislike that okay is first you call a function that does this useless closing over a valuable a variable that this is this is useless you don't need to do this there's nothing there that it actually just just name this thing underscore grades if you want an underscore okay second off it returns a function so that means every time you call this function it actually creates a new function you don't I mean that kind of sucks right and inside the switch you're actually creating new functions so every time you call it with a message you're actually creating a new instance of a function that should just be existing as a prototype it should just be a reference follow instead it is a function creation and then a function execution I don't know um um um as you can see this oop implementation at First Sight does not look very elegant in JavaScript but I can guarantee it will work on most popular programming languages I mean we could we could dress a turnip in a dress and say hey it looks nice but it's still just a turd right the idea is not what is being implementation can do differently but how we can extend this and Implement cool hierarchy okay so this is what I'm excited about this is what I'm excited about I want to know why this is good because maybe I'll change my mind I I'm willing to change it if you can show me one problem that's hard to solve otherwise right uh to use the message passing strategy you'll have to understand that for each message the object will have to create different handlers functions that will be specialized in dealing with the message if we pass no parameters then we can simply get the function and use it in a more flexible way uh below I show how you can use the message passing strategy okay one thing that makes me really frustrating is you you will you will defeat the LSP the LSP is utterly dominated at this current moment it doesn't exist anymore and I have a problem with that okay I have a genuine problem with defeating an LSP I'm not even sure how to make this work in typescript because I'm trying to like run in my head how would I make this work in typescript with a switch statement I don't think you can make these things a part of a type like I don't even know if it's possible Right you'd actually have to have these duplicated have to return a function that has a generic parameter of where message is of type T right you'd actually have to do that so what you'd have to do is you'd have to do like function generic something and messages of type T and that's what can be passed in maybe ah  I'm not even sure but then you'd have to like Define that I don't know I don't know you'd have to Define every single key twice yeah message would have to have a type of get best grade or uh get grades like there would not be any other one is this a meme I don't think this is a meme to use message passing strategy you'll have to understand that for each message okay yes we already know this let's let's go on all right the advantage of using this object and not the previously declared objects uh the one using Gizmo it's not chismal it's just a it's called a pojo a plain old JavaScript object is the fact that the case we need to send an invalid message there will be a predefined response for this request that we can model for our domain okay inheritance and polymorphism for this example we also need a class to extend from and there is no other class that looks nicer than person I was not very creative really since every student is a person this means every that every student should have all the attributes and methods of the basic Base Class okay I really don't understand this I really am struggling with this I also just realized that there's 1.6 000 clappies those are 1.6 000 Engineers that I'm right now considering not hiring all right that was rude I don't know I'm feeling very suspicious right now um anyways since the student needs to extend the Base Class please tell me it's a function that returns a function that returns a function that returns a function since student needs to extend the base class we should also have some nice things to make it all work out together yep yep students must have a name and an age so from out on the construction should also take that yeah one of the attributes of our class will be the base class will be constructed with the parameters set on this okay if this message we are looking for is not found we'll redirect it to the base class oh gosh so my guess is this is that it's going to be a function that returns a function oh no okay to me it would be even cooler if a student took in a person and grades so you'd actually create a person and then a person could become a student the person could become something else you know what I mean like to me that's at least a little bit more interesting variable equals private member but it's not private it's already private okay okay so a thing that's really stupid hear me out here a thing that's really stupid is having a naming convention in a language that does not like in an itch okay so I understand that underscores should have existed in early JavaScript because you're trying to convey a meaning via a name this public grade right here is not accessible from the outside therefore it does not need an underscore it's not private it's just not available it's a closed over value it's a closure and so this look at this he doesn't call base with an underscore because you don't need bass you don't need that it doesn't make any sense right you he's effectively right now what's happening is the recreation of the uh prototype chain right this is a prototype chain it first checks yours and then it goes and calls base and checks up the next one finally we can have a nice little class that extends person using functions and message passing only you can use in the same way as before by sending messages okay again I think it would have been really amazing if we would have had a person if Johnny would have been able to be passed into a student and then now like obtained the student things you know what I mean conclusion I hope you like what you read I feel like I just got I feel like the greatest letdown just happened in my entire lifetime I really thought there was going to be something more to this I really thought there's like you know like how you do something intentionally wrong to show how complex it is and then afterwards you like rip the mirror away and Bam you just see like how amazing it is it didn't happen honestly please whatever you do don't ever do this I mean I even see the phrase of uh there are lots of other things we could Implement such as method overloading and multiple inheritance ouch multiple inheritance has never been a good plan no