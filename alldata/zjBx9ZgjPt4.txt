all right Mato is going to tell us a little story right here about how AWS fooled the devs and sabotaged the industry one way or another we are all tied to Amazon Google or Microsoft or GitHub or whatever okay that are investing in some of our Technologies and providing funds in various ways okay I'm not saying it's it's a direct thing okay but they have their own cloud products okay and they are pushing this down okay now the surge of serverless and a lot of other pay by uh millisecond thing okay PID by consume okay has made absolutely damaging for those companies to invest even one dime in performance okay love that take I can't tell you how many times I've seen someone have serverless code and they're just like oh I don't care how it performs you know why cuz it's serverless it'll just go up it it'll just go down nobody cares it's just going to go up it's just going to go down it's just like oh dear goodness okay because here's the deal is that I know a lot of people don't care about performance but there is something about caring about your code in a deep way that if you don't have a thorough caring for it including the performance side I just think you write worse code I just think you're just not in it to win it you're just simply in it to make it done and then after a while that just leads to the worst choices okay you make you do design by Twitter choices I want to see you getting after it I want to see you actually making some good decisions here okay oh fascinating oh my god I've never heard this take I mean duh it makes sense the incentive yeah it's like we don't need your stuff to be slow we don't need it to be fast yeah exactly yeah we are paying us for compute you pay for more resources okay look look even I even even a hotter take than that okay please oh my God all all the hot takes we agree we are going so AWS is going has gone so good length in trying to frame The Narrative that to get more more of your money because you know you know no JS is you know is a synchronous can run multiple request at the same time with great speed right I love Mato Matta is awesome but I do not believe that take continue on right right despite what despite what people who write Ruby or python might tell you okay yeah okay got him got him okay no J this just in no JS is better than Ruby I am totally on your team that no. JS is probably better than Ruby can we get an amen can we get an amen in the chat I believe it I believe it okay I'm not going to say anything negative about python though okay because python you can dip you can dip that little python in the SE just dip that little python right into SE and all of a sudden it gets fast okay so I'm just not going to I'm not going to dunk on the python all right amen and chut so again Ruby and python runs one request at the time okay and uh uh we is that true that can't be true python has I I would be just shook if that was the case right like I would assume D Jango is some sort of they just have some threads right and they have some set of real threads green threads and they just run it in the identical way right python is well python is single thread I mean so is node node is no different yeah they have ayio yeah I've used ayio before jeno you run with celery which does threading okay I hate the names that python comes up with you know just use jeno with celery duh you're just like what the hell did you just say to me boy boy why what the hell did you just say to my face hole and it's just like dude duh everybody knows about celery and D Jango combination you use a little bit of Hugo on the side you're just like dude I hate everything you have to say but okay so this is obviously I don't think I think he's saying the default option is one at a time giving Mato because Matteo is very very smart and so I'd be shocked if he was saying that he thinks uh python is purely uh uh single-threaded he obviously knows it's not purely single threaded because he obviously knows a lot about these kind of things it's just that they don't have an async primitive like JavaScript does right JavaScript you have asyn A8 it's very easy to do the multiprocessing correctly you know what I mean I'm not saying it's it's it's good I'm just saying it's easy to do the multi-processing of requests easily python is purely single-threaded I mean JavaScript is purely single threaded with the great manager python has async too okay I didn't know that it has async does it have like does it have a weight and async and all that I honestly I never use Python I python is the language in which I wish in which I wish I knew better but I have no desire to learn it better it's kind of like you know it's kind of like when someone says I'm going to go learn a language and you're just like ah yeah I'd love to learn a language but I don't really actually care that's python this is great I love Ruby I love python I don't I'm just yeah yeah no nobody's poo pooing on those communities but there's just a lot of poo pooing on node which I uh uh right here I will poo poo on Ruby okay uh line me up set them up I will gladly knock him down I will poo poo all over I don't like you can do the same thing with those Languages by the way you can run event based computation on Ruby and python it doesn't matter okay it's the same logic okay so you have languages that are capable of running multiple requests a lot of them actually thousands on the same process most of our apps literally take some data from a database and send it out by the way if you are running react you cannot do a th000 requests per second like even the most simple react you you're going to be struggling getting a th000 requests per second okay you do a little server render of a of a quick body little di a couple divs in there not going to happen it's just not going to happen sorry server side rendering react just it ain't fast it ain't Speedy okay it's not going to be speedy and that's okay you don't you don't you don't use react to go fast you use react to talk about it on Tech Twitter we all we all know that okay uh okay I know I onreact all the time I'm going to say one nice thing about react react is attempting to continuously improve developer experience and they're trying very hard to do a good job okay so when one database qu is running I can definitely send another one down the line because I'm not you know my CPU and memory are basically idling there I'm trying I tried so nodejs made a huge Splash because it was a synchronous and it was able to handle thousand of concurrent request from a single tiny node process even a tiny Raspberry Pi can run hundreds of concurrent request on most things okay that that is if you're doing nothing right like I do think you need to qualify what what does it mean to run all these requests um you can run sure you can run thousands of requests if your endpoint just as a sleep timeout right a one second sleep uh but what does it mean to actually do something if you're doing any significant work in node that is where you actually start to fall apart right that is where things really start to fall apart and every time you add in promise per request it really genuinely slows down the system a huge amount uh I'm not just blowing not just blowing smoke here's a profile of an application we will be making faster on frontend Masters by the way by the way uh and look at this most of the time you'll notice is spent in idle why are we idling yet when I add more requests our whole thing slows down more it's because the async stuff is actually terribly slow in node uh there's a whole thread on twit twatters why it is but uh you can't just simply keep inserting more and more asynchronicity into your node application assuming it's going to get faster bu bu bu bu AWS convinced everybody that running more than one request at a time per process was wrong and you know they have you pay per second even when that CPU is Idle this is iws Lambda I mean he's absolutely right that has always been the craziest thing about serverless is that why I mean I get the idea but the I but the the just the the sheer notion of one request per process blows my mind right like the entire efficiency of node is is the fact that you can run a like request through a like with a bunch of asynchronous or a concurrency to it where even a pretty Layman programmer can do it pretty successfully like that's like the selling point of node is that it's simple is that it's not hard we actually made a serverless Lambda which waited for a database to respond that was stupid of us yes that is it's the zero start uh off cost that sold everyone yeah yeah the Layman yeah I mean real real talk node has done great things for the programming Community I don't want to crap on or shall I say JavaScript V8 but also node because node makes it accessible where people can build entire Stacks in one language and learn how things work all the way up it's usually not one request per process I it would be crazy but that's kind of the thought process you have to go through you're not thinking about scaling out something to live long term you're thinking about just making it live a single request cycle which is very very different so if you use a WS lamb that you're paying even if your CPU is literally doing nothing and everybody is believing in this massive lie essentially that is a better model it's better for them so I will in defense of serverless or shall I say lambas or any of these things is that you also get the ability if you write your program in such a way you also get the ability to just kind of like move it anywhere it needs to be and this is where all that edge Computing and everything this whole notion comes from is that you can be able to go to any region and run it which does I mean it it can be better and to write that type of infrastructure to have multi-regional support and all this kind of crap is actually really really difficult and it it's not like you can just just you can't just simply do it with one person also building the UI so there is an obvious cost benefit to creating an application that uses these tools because you don't have to hire somebody to actually run all of your infrastructure so there is like a real win there right there is definitely a real win fly iio yeah exactly like fly iio shuttle RS like these are all companies that are trying to do the same thing even for sell for sell's doing the exact same thing where they're just trying to make you uh like forget about infrastructure and hey you will pay more but you like you don't pay more because you don't have to hire someone because your idea doesn't really even have uh fruition yet right it's just barely starting so it is good to to think about that uh in defense of serverless you also have the ability to burn through investors money faster yeah I don't know if that's actually true right like real talk is that actually true let's just say that you have two devs building an application okay that's it we're whipping it out I actually want to hear that I actually do want to hear this uh Kaji okay hold we're bringing you up you're getting on the big board def defend this one defend your argument right here because I want to hear why it's time we're doing this we're doing this live we're doing a little you know I want I want I want to know know I want to know about your thought process here I'll wait I I'm fine waiting I'm waiting I'm waiting for you AWS gives you like 100k uh free credit to Young startup did you just wait hold on are you agreeing with me now then the startup uh starts building a pipeline that is going to burn that in months okay okay okay I see what you're saying they play the long game okay okay so let's let's go through this again in defense of serverless you have the ability to burn through your Investor's money faster with hype a s gives you 100K of free credits to a young startup then the startup starts building a pipeline that is going to burn that in months um I mean first off you're you're making the the greatest logical fallacy right off the rip which is that startups have users okay we don't have users okay we go from one user to two users to four users over the course of multiple months showing doubling in user growth all right double and then you double again then you double again in okay it's about growth it's not about any absolute position we don't talk about absolutes around here okay it's all about relative positioning second off is this actually true I mean obviously AWS wants to give you these free little bits because they want you to use them because they know that if they can get you on it and you build an infrastructure around it you will end up having to start using them without the credits you're absolutely right on that but I do want you to think about the other side of things for just a quick second okay like let's let's just be real for a quick second here while I'm in white light mode this is emotionally painful let's uh hold this is me trying to explain the difference between a 303 and a 302 if you don't know the difference you are weak um all right this is really painful so let's go like this let's go into where where is dark mode dude I never remember where I swear dark mode is right here okay stop moving all right so this is how I kind of think about it is that you have something like two devs uh both both obviously doing full stack uh HTM X because you you built a good startup okay and so this is going to cost you something like you know if you do all the benefits depending on how competitive your your pay is the fully loaded stuff you also have to have management software all these different things that adhere to government 6% Social Security tax blah blah blah blah so let's just say you're paying them 100k each cuz this is a startup and these are the founding devs and you're trying to pay each other so that way you can you know not die so really your fully loaded cost is going to be something like double that so it's going to be about 400k now if you were to be like hey I don't want to have to use uh server lless because I don't want to have to pay a lot of money in the end we're going to have to hire a non-f founding engineer and we need to be able to pay him competitively therefore you're going to have to have one infra like Dev right that's actually doing all these things and that is going to cost all of a sudden a lot more because they're not getting all the stalks up here your payment is in stalks right you're betting on the company down here maybe less ston right maybe this person wants much less ston again fully loaded cost care all that crap that goes with it cost more right and so they get less STS right but this is very important to understand is that will your AWS cost something like 300,000 a year to begin with in your company that doesn't even have any actual users my my guess is no it won't so do I think that start that startups should use serverless I actually think it's a pretty good starting point but you want to build your application in such a way that when you need to actually go off of startup or out of startup mode you can right you don't want to build it in such a way that is just like fully relying on every last piece uh I am a big fan of managed databases that's why why I love Tel uh I'm a big fan of certain aspects of this cuz I think they're really really good but you got to be careful on exactly what you use um you got to set limits you got to set alerts you got to do all the things smart so you don't accidentally wake up to $100,000 spent in a single night because you actually did a recursive AWS call you know what I mean you got to be a bit smart uh but serverless has heavy lock in uh it doesn't it doesn't right it just it really a some part of it is going to have to be how you write your code if you write your code like it it's going to be a single request p uh a single process per request and you just ejaculate code in there and you build everything around this notion of having zero State always and every connection has to be built up for the first time ever yeah you're going to have problems transferring that into a full process maybe don't build it that way maybe think about things in a slightly longer term fashion okay it's you know it you need to know the trade-offs lambdas are great at low volume because they scale to zero and start very fast in generically schem of thing try running a lot of lambas lambdas and then check your AWS Bill okay this is going to be you're going to be hit pretty heavily down if if you if you have a lot of Lambda calls because or even worse you know that there is a massive amount of limit of how many lambdas you can spawn on a single AWS account I know if you know this but oh I didn't know that I didn't know that either how many can you have simultaneous I think by default is I think 256 oh the old the the old two to the eight who doesn't like a little two to the8 limitations I think that is completely reasonable to make it a power of two this also isn't true is it not true 256 by the way I think it is a th per account okay it's a th000 per account it's closer to 10K to 100K 2 to the 8 100K 1,000 it sounds like all of you are are telling me different things checked uh checked that but it is a th000 per Lambda okay so it's a th000 420 16.5 five lambdas that's probably the most accurate one am I at an auction you are at an auction you can under 256 concurrent requests on the default account you need to raise it okay so did you guys check to see that a default account because I mean he's talking about the very first entry into AWS it can be raised okay yeah I know but that's that's that's good to know right it's good to know that you have a default of some lower value if you planned on scaling hard and all of a sudden you get hit with a like uh the correct answer is I don't know yes that is the correct answer but real talk like if you didn't know that there's this hard limit that exists somewhere and you all of a sudden like drop your stuff on some sort of you know whatever it is product hunt whatever and you just get absolutely limited on how many requests you can make for a moment like that could be that won't reflect well right it's it's good it prevents dos a cost attack that's good I mean dos that that I mean the limit is important I I understand that uh the only hard limit I know about AWS is the number of T3 instances you can have that's not great yeah oh wow and if you run out okay then they start getting cute wow and in the same time you can you know oh wait a sec I I can spawn 10,000 lambdas okay wait a second I can run 10,000 concr request on a single uh machine on fargate and it's significantly better performance and but very interesting they don't ship scale to zero on fargate sorry you know I'm just calling out the Ws bad Market strategy to to sabotage the industry but that's the to make more money which is great for them I I mean I honestly I do I do AG I I do like everything he had to say even if the numbers were slightly inaccurate based on what chat's saying that doesn't bother me right uh those kind of Notions where like hey I like mat ta but this isn't true I mean there is a lot of things that are true about what he's trying to say which is like when you build your infrastructure around a very specific thing like this it can cost a lot of money how many articles have we read in which people simply get off some AWS Lambda calls and they reduce their monthly uh Burn by like $30,000 a month we've done several of these it almost exclusively involves Elixir sometimes I feel like I'm uh kind of a little bit like elixir envious because I don't know Elixir and every time I hear about Elixir it's always with someone making a really great server and maybe I'm wrong could I be the person that's wrong no the kids are the ones out of touch um and so maybe Elixir is a great thing to learn I don't know I don't know uh sometimes you have to exaggerate uh to make them see the point yeah so that's what I damn kids that's what I'm trying to like think about get out of here that's right night sh dude was so ready for you get him out of here get that Elixir shill out of here but real talk like just something I've been thinking more and more about which is you know what is the cost of these things is it actually worth it is Tech Twitter really steering people in the right directions because at the end of the day when you get past phase zero to phase one is all of this things that you've built worth it how many stories do we have to read where the company's literally spending hundreds of thousands of dollars a year because they just they they went all in on a specific technology and now the specific technology is really expensive I don't know it's just a good thing to know it's a good thing to think about and it is something that we should probably you know you you should be a little bit you should be a little bit more careful about because it is totally not you know you got to be careful and so I I want to live in that way where I think about things a little bit more and I don't just promote something because it's easy do you know what I mean the name is the prim ofy