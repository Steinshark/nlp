today we are going to go through some of the 
top Technologies I would learn no Tiff Tiff   that you would not use in 2023 you would 
not use oh sorry wouldn't learn in 2023   scary yeah yeah they need to know where not 
to put their time who wants to waste time   not me okay okay let's get into it [Music] all 
right the first one is actually one minute here [Music] now we're ready I'm always scared before 
I say the first one makes it feel like you are   going to be like Tiff why are you saying you 
wouldn't learn these Technologies but I'm   gonna be totally transparent in this video and 
as a side note the topics or the technologies   that I say I would not learn are personal those 
are things that I would not learn and these are   based on industry Trends and demand I'm not out 
here saying to never learn these Technologies   there are always use cases there are always 
the butts you know what I'm talking about and   uh I just wanted to I felt like I needed to say 
that kind of heading before we dive into it all   right enough enough let's dive into it first 
one is jQuery I remember when I first started   to learn how to code jQuery was I think on like 
the second week with something I was learning and   I was like even back then which was almost 
seven years ago seven eight years long time   ago I remember being like this technology is 
outdated why am I learning this and I'll be   honest with you throughout my career as a software 
developer and now in developer relations I have   not really encountered the need to use jQuery 
now there have been times where the knowledge   of it to a certain degree has helped me but it 
never was to the point where I decided to sit   down and fully immerse myself learning jQuery 
so why was jQuery really popular at one point   well jQuery really was at its peak very popular 
in the early 2000s it was a go-to JavaScript   library for easier Dom manipulation Ajax events 
and effects and it was really great for cross   browser support and let you do some really 
cool things such as animations selectors and   Dom changes with less code than pure JavaScript 
so why did we stop using it what overtook the   usage of jQuery well of course more modern web 
Frameworks such as react view came along and less   need for jQuery at this point in my career I'd 
only learn jQuery if I had to for a very specific   task or to maintain a legacy system but it's not 
something new I'd pick up in 2023. now this next   one I actually did a poll on my Instagram and 
I said what technology would you not learn in   2023 I was curious to see if what I wouldn't 
learn aligned up to what others wouldn't learn   in 2023 and you know what one really surprised 
me which I wouldn't have put on this list and I   don't fully agree with but the amount of answers 
regarding this was kind of mind-blowing it was pH   P so many people were saying in the comments they 
would not learn PHP in 2023 and I had some trouble   deciding if I was going to include that on this 
list because at the end of the day PHP is still so   widely used and used to maintain so many different 
systems and websites and to say you wouldn't learn   it I think is a strong statement whereas the other 
Technologies I am saying are kind of obvious to a   certain degree unless they're specific cases now 
what I will do is say I wouldn't learn PHP if I   was looking for a job or it wasn't requesting me 
to learn that for example when I started out in   my career I learned JavaScript and react those are 
the first things I learned and then also to node   mongodb but then for my first job when I started 
building as a developer it was with PHP and   Symphony and I wouldn't have learned that language 
if it wasn't for a specific requirement of my job   I it just wasn't something that I saw on a ton of 
job postings or saw a need to learn unless it was   for is very specific reason so I do think that I 
I wouldn't learn PHP in 2023 unless it was for a   specific reason what do you think do you agree 
with that or do you disagree all right next on   the list is Fortran for Tran Fortran this is a 
language that I'll be honest with you I have never   really ex I've never even thought of exploring to 
be honest with you it was developed in the 1950s   and it was one of the first high-level programming 
languages so back in the 1950s back in insert Kane   back in the good old days Fortran was widely 
used many people praised it for its strong math   support and compilation compilation I can't talk 
today but of course over time other programming   languages such as C C plus plus started taking 
over now don't get me wrong modern Fortran does   have object-oriented features but the language 
feels quite outdated compared to options such as   python with pandas for data analysts or Julia for 
numerical Computing I just don't see the need to   learn Fortran from scratch today I think there 
are a lot of more modern options out there but   once again depends on what you're working on also 
can we take a second you can't see from here but   let me show you how I'm sitting this is how I'm 
making my videos sitting on top of my desk like   this we're we're intimate here we're getting to 
be best friends okay next on the list is not a   specific programming language per se but more of 
a methodology which is the waterfall methodology   this is something that I would not spend time 
learning in 2023 but also I would really not want   to work for a company where they implemented 
the waterfall methodology and this should be   far few and in between but if you are going to 
interviewing at a company and this is what they   use you really need to uncover why exactly they 
are using this old school way of methodology way   of thinking and way of working really so what 
exactly is the waterfall methodology I feel   like I've said that 20 times already waterfall 
methodology well for one thing it separates   development processes into different sequences so 
for example requirements will be one phase design   coding testing those are all done in phases 
they aren't done throughout each Sprint per se   such as agile they are done one after the other 
so what is the problem with waterfall well one   of the biggest problems is bottlenecks you go 
through this entire process kind of blind you   make a bet on it and you don't really get 
to alter or shift pivot whatever you want   to call it in the meantime you pick a design you 
commit to it you pick a programming language you   pick everything out from the beginning and then 
you start building but what if along the way you   realize that customers want something different 
a different feature or that the design might be   better in a different kind of way with a waterfall 
mentality you aren't even looking to see how you   could improve or change those different things 
you are focused on a linear path whereas with   agile you can be flexible you can continue to 
work in Sprints typically well for me anyways   it's always been two week Sprints so we have goals 
we have tasks to do for those two weeks and after   that we reconvene where are we at what's working 
what's not working and this allows you to move   much quicker but also to much more effectively so 
when the product is ready to be released or a new   features ready to be released it's really been 
well thought out and isn't just kind of on this   straight path all right those are the top four 
Technologies I'm not going to be learning in 2023   unless as I mentioned there is a specific use case 
for it now it's not to say that these Technologies   are bad but they are on the decline and kind of I 
hate to use this word but outdated they are still   around today and exist in many different forms 
for many different reasons but does that mean   you should start picking them up this year nah I 
think you'll find your time best spent elsewhere   I hope you enjoyed this video and I'm curious to 
hear your thoughts in the comments do you agree   with me do you disagree all comments are welcome 
I will do my best to answer every single one of   them and also leave in the comments what other 
questions do you have what other video topics   do you want me to create all right I gotta 
go finish that bubbly water I have [Music]   oh