how I destroyed the company's DB and survived to talk about it okay the it's that subheading that really kind of changes the flavor here good lad it's good lad let's find out okay it was a quiet Saturday okay so I'm already upset at this article what the hell are you what the hell's going on on a Saturday one of us one of us either You released on Friday and you're getting alerted on Saturday bad move or You released on Saturday bad move there's no wind starting an article this way it was on a quiet Saturday I received a message from support team telling me one of our customers has a problem I decided it was important enough to start debugging after 15 minutes I understood the issue there are some corrupted orders created in our DB and we needed to delete them sounds trivial right I swear it please tell me this involves opening two terminals the test terminal and the real terminal and you f up which one like this is like the most classic bamboozling of all time at the end of the article I share my lessons and how you can apply them to your own team and welcome to the 600 new subscribers last week you hear that press the Subscribe the breaking for those of you not working in startups please don't judge me okay okay okay there are a few hundred orders to delete so I decided not to do it manually but to write a short squeal query let's go let's go this is so good this is so good oh my goodness oh my goodness oh oh that's so good but hey at least you have this at least there's this like you're not deleting you have an is deleted flag so that you can at least recover right right red flag should have used a no should have used Prisma you didn't use Prisma loser it was a bit more complex than that but to simplify update orders a set is deleted true where ID is 1 two 3 okay okay okay you can see already you see the scale of the disaster I actually can't see it yet I mean I can see the scale the potential scale of the disaster but why but why why what which way I do not understand extra line is it the line Gap light is Whit space significant oh he oh he only selects two lines in the oh damn he runs it from some sort of wizzy wig no okay okay I don't like to look forward I don't like to read I don't like to read ahead I like to try to like think about what could have happened here tell me this was a wizzy wig issue oh that would be so good yeah a wizard uh what you see is what you get a wizzy wig all right I pressed control enter and ran the command when it took longer than a second I understood what happened the program I used D Beaver saw the empty damn you guys were right and ignored the fourth line yeah yes I deleted all the orders in the database I felt physically ill and helpless man man going a little hard on the on the D Beaver there okay going a little hard on the D Beaver you can't just be deleting all of production like that ridiculous cooked the boy cooked we let Tim Cook now we got a new iPhone coming out all right the recovery after a deep breath I knew I had to act and fast I would probably just cry a little bit uh there was no place to make more mistakes or waste time the recovery was done much better stopping the system 5 minutes creating a clone of our DB before the change luckily we had a point in time recovery setup 20 minutes calling my manager during the wait wow updating the production DB's information based on the Clone 15 minutes starting our system 5 minutes damn that's like an hour of downtime right that's 45 minutes I decided not to restore the whole DB because I couldn't stop all systems as we have multiple independent ones I didn't want to lose the changes made during the recovery process we used managed post squeal by G PCP so I created a new clone from the time before the update then I exported just the ID is deleted column from the Clone and imported the result into the production DB afterwards it was simple update select query so 45 minutes of easily avoidable downtime damn so what went wrong well I think the an one answer is really obvious you did a lot of deleting don't do that step one don't delete the database make sure you put a wear in there use transactions this may sound like a very stupid mistake by the way for those that don't remember GitHub literally deleted production because a guy was going back and forth between a ter two different terminals test terminal and real terminal and mixed up which one went to the real terminal and deleted the database like rmrf it oh it's G lab sorry git lab it was git lab just remember there's very easy ways to just ruin a good Saturday afternoon any given Saturday afternoon did he really yeah literally really terminals with colors okay it's so easy to mess up that's why you got to be so I mean you got to Triple when when you're in production world you got to be like you got to have like a buddy hanging over your shoulder you got to have someone like you got like I mean you got to be making some pretty serious steps here the actual problem is that they attempted to resolve the issue immediately in place instead of following a Playbook on how to resolve production data issues yes that also having a safe way to do that would be the better way absolutely even like something simple here's like one thing I always do whenever I do any sort of bulk updating I first make sure I get the query right try one first I do a select can I select the correct set of data that I want all right that's a good first step don't just go in there guns of Blazing and update first try okay at least I mean minimally at least try to get your query correct at least make sure you could also start with the begin yes that would be good too step one Echo the thing RG prod always select first what went wrong this may sound like a very stupid mistake you will never make or even can't make in bigger companies it might be true the problem is not the wrong squeal command a small human mistake is never the true problem one would argue this was the problem one would argue that this in fact was actually the problem but he did recover quickly so we will give a thumbs up for that me running that command is just the end of a whole chain of failures working on production during the weekend why in this case it was not even that urgent nobody asked me to fix it immediately I could have easily waited for Monday shall I go back to the bold bold a small human mistake is never the true problem problem number one so I made a small mistake let's go all right point two who the hell runs something on a prod DB without running it on QA first a small human mistake is never the problem okay so we got we got two we got two out of five points being a small human mistake all right number three why did I manually edit the DB and not use an API call three out of three people three out of three this man sounds like me this is like what I do number four if there was no API why didn't I call a teammate and have four eyes on such a sensitive action are we at four out four are we four out of four right now all right number five and the worst part why didn't I use a transaction that is literally five out of five this is you're right it's not one small human mistake that's ever the true problem it's many small human mistakes and they just all they all happen to be you at least he's owning it hey he's owning it at least all of the mistakes he said like what I would say a good thing here is that he didn't say something like this like why would they let me just execute production they there should have been someone stopping that from happening so that's good like at least there's not some sort of like blind blaming somebody else or some the the system allowed me to do this so I do like that I do like that quite a bit can we all agree to that that's good that I mean there there is some good in here and these are all good these are all good points right don't make a meaningless change on the weekend wait till Monday always have buddy if you're making a production change this whole why did I edit the DB and not use an API call this seems difficult because there'd have to be an API call specifically for this you know what I mean there' like have to be an API call for just making this specific change seems a little ridiculous you could do it one at a time if there was a way to do like some sort of super user access update one order at a time type thing that could be good who cares if you have to do 200 database queries to update if you're trying not to destroy your entire thing for deleting orders there probably is a DB API for that you're probably right there probably is an API for that again you know but sometimes using apis are hard because it requires like cookies and authentication and all that kind of stuff so for you to be able to use that API might be a little bit more difficult deleting order sounds like it should have an API or at least an auto Trail yeah yeah some sort of admin delete true admin delete yes API with cookies yeah I know crazy at least the organized recovery stopped the chain imagine the disaster if I couldn't restore the DB to the correct State what Chernobyl has to do with this we're going to Chernobyl boys boys we're going to Chernobyl a few months ago I finished reading Chernobyl the history of nuclear catastrophe the chain of mistakes there reminded me of that cursed weekend without underestimating or comparing the dimensions of Chernobyl disaster I love that we live actually I hate that we live in this I hate the fact that we live in preface culture like no no no one literally thinks what you had to go through and what the people of Chernobyl had to go through but we actually live in the world where if you don't say this some dick that's complaining about product owners being an offensive term on Twitter is going to go out and be like oh he he he said that choba was was just as big of the disaster as 45 minute down time maybe we don't need to do that maybe a metaphor can just be a metaphor and you can try to eat the fish and you can try to spit the bones you know cuzz not not all metaphors are going to land some metaphors actually are really really good are you actually comparing your DP to Chernobyl I'm not I I'm actually going to stop going I almost summoned my inner asmin gold there and almost went straight to straight to topics that are going to get me in so much trouble there was a root technological problem in the rbmk reactor it was not communicated properly there was previous incidents involving the problem but chernobyl's team was not familiar with them the team didn't follow the procedure during the safety check after the explosion the Soviet Government tried to hide it which greatly increased the severity of the damage who is responsible the designers of the reactor the team at the powerplants who didn't communicate the issues they had the team metr Noy the Soviet government I would one would probably just say the Soviet government asmin Bal I'm balding right now all of them disasters are never caused by a single mistake L of that mistake is communism got them but the chain of them our job is to do the best we uh can to cut the chain as early as possible the aftermath I didn't know what to expect from the talk with my manager on Monday he surprised me with make sure it won't happen again but I prefer it that way you made the mistake because you are dedicated and love to move fast people with buys for Action break things it's a fact yes I gave him an accent that would be akin to expanses Mars people deep south manager let's go yeah that guy's straight from the hills he was playing a banjo right before that meeting that is exactly what I needed to hear a twoo cuddly approach saying that's that's okay don't worry thanks for fixing would have felt fake on the other hand I already felt like so no point in humiliating me further you know I actually think that you can uh you know I I had a boss after I felt like once and it was a very good moment for me came in and he doubled down you know I think sometimes there are a good time to double down on some tough talk and sometimes not this one seems like you probably learned your lesson you know can we all kind of agree that you probably learned your lesson from this one I would probably first ask so what are the Lessons Learned here and then if the lessons were learned then be like yeah you know appreciate the action the dedication but let's not swap dedication for Quality don't talk to him for a week don't talk to him for a week and send weird passive aggressive messages in the team slack that's also another option at least hey how how how was your Saturday since then we try hard to remove the need for DB access creating their relevant API calls I always run queries on QA first I know obvious right nothing makes the lesson stick more than a disaster I consult with the PM to understand what's really urgent and what can wait any update insert delete query on production is done by two people this one actually prevented other mistakes yeah this actually this is probably the best single thing to do cuz you know like at at Netflix I can't really like I can't do this I'm not even sure how to update production data data is very complicated and all that stuff but this makes perfect sense right here which is if you're going to have data to update from a keyboard live in production bring a buddy bring a buddy you know what I mean I started using transactions yeah okay applying these lessons to your team after the incident I share detail explanation with my team not hiding anything or downplaying my fault there is a thin balance between shaming people and not holding them accountable when you make mistakes it's a great opportunity to send the right message if you apologize a thousand times they'll think they let's see that you'll expect the same from them if you make fun of the incident ignoring the implication they'll think it's okay if you'll be accountable learn and improve they'll behave the same way I'm not sure if I agree with any of these things I would make fun of the incident after I do these things this is part of the fun of life is when you f up make the guy who took down production make a coffee cup I took down production and all I got was this coffee cup you know what I mean do something fun here's the deal is that when you make I mean at least for me when I get made fun of or I make fun of someone it's because I respect and like that person I don't make fun of people I don't know I don't make fun of people I feel uncomfortable around with cuz I don't know what kind of crazy they're going to do right I stay away from that but when you like somebody the best way to show them that you love them is you be mean to them right like that's how you love them at least that's the family I grew up with I don't have any long-standing emotional issues responding to mistakes uh uh no worries it's fine uh productive balance next time you're fired I mean sometimes you do have to do this part though I mean it is good to set expectations right would you want a boss that talks really nice to you but if you make one more mistake just fires you or would you rather have him be like hey you know you're really goofed up here like you can't let that happen again okay you let that happen again we're going to have some serious employment consequences right like I I do think it is good to let people know that this is real to sum it up encourage people to act care about the customer and solve problems that's how startups succeed when mistakes are made hold the person accountable together understand how it could have been avoided no need to make people feel worse than they already do some people need more accountability some more encouragement did we just get did we just swap the word feel worse with the word accountability here you know how you go to a doctor and they're like you're going to feel some you're going to feel some pressure and you're like oh that pressure feels like pain doctor doctor is this some people need to feel a little bit more accountability okay we're going to feel some accountability today I always prefer to air on the side of encouragement I don't like to I try I don't want to air on the side of encouragement or on accountability the problem about always being too encouraging is that you don't develop like or the expectation of an environment that's always encouraging is that you don't learn emotional resilience you know 2024 should be the year of emotional resilience you know what I mean you should really feel like you can be tougher everyone can be tougher everyone can probably endure much more than you realize it's the expectation that always worries me and I think in today's modern world the expectation is that everyone is supposed to be nice but the problem I find is that some people are nice to your face because of this expectation I'd rather have them stab me in the front than in the back you know what I mean and so emotional resiliency I I I I do want more of that even personally for myself but should everybody be tougher everybody should be able to be tougher I don't think we should make a pass that some people should just be treated differently nice versus kind yeah I mean you should be kind you should you should know like kind kindness is a good thing kindness is a good thing we should all be kind and I don't I you know like I'm not someone that I don't communicate like us like when someone makes a mistake I usually think it's funny it's it's funny to me just because we all goof up it's like not a big deal now if you consistently goof up then it is a big deal but I just don't think it's a big it's a big deal you know what I mean I guess I just have a different approach to life you know I think sometimes when you when you grow up with like a really awful situation it's really easy to over index into humor to get out of it and so sometimes I think I over index on humor to get out of things that probably need to be addressed the problem is when kindness is exploited yeah escapism yeah probably I'm I'm a I'm humor coper the name you know the name