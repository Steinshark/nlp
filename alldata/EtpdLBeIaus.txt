so today we're going to look at security protocols and it turns out that it's actually not that easy and there can be interesting ways in which to attack them a while ago i was talking about rsa which is a well-known example of public key cryptography public key cryptography also known as asymmetric cryptography is a little bit like having a little padlock we have two parts we have the public key and we have the private key and we generate those together that's what we saw in the rsa video and then the idea is that we can use the public key to lock something which i'm going to have an analogy we're going to lock this envelope now the envelope is locked now of course for a physical envelope you can just tear it or open it another way but we're going to you know keep the analogy so nobody can open this lock except for one person which is the person who created the look who has the private key this little key here um so the owner of that can now open the message using their key by opening the lock and taking it out right but in order to do the encryption because this is private cryptography you could have done this yourself you don't need my key to lock the message you only need my key to unlock the message so if i for instance write a secret on here is this what we're saying yep you haven't seen and then i put it into the envelope and then you know the point is that i can lock this without having the key right that's right so i don't need the key to lock it it's locked and then i can hand it back to you right so you just send me a message which nobody else can read but me because the only way to read it is to open this little lock and there's only one key in the world that can open it and i've never given this key to anyone else so i can now open the envelope [Applause] and read your message and it all works exactly as intended right you can use this to send a secret message to me but now the problem is how do we know that the person that has a key is actually the person that we want to talk to so let's say that you want to know who i am right i claim that i am bob but you want me to prove this to you so what we can do is we can use the same trick you obtain my public key because it's public anyone can get the public key belonging to bulb right and you do exactly what you did before you come up with a secret you encrypt it with that you put it in the envelope and i'm the only one that can open it so at that stage i've just opened it just like before i read your message and all i do is give you back the message and you read it and you're like right this guy must have this key otherwise he wouldn't have been able to read the message so i'm using the fact that i can read the message as evidence to you that i am bob i am the holder of this private key and we did it here over the table but in reality you might want to do it over post right and this is the design challenge of the internet so it's a term that many of you will have heard of in some way or another it's called a man in the middle if i send you a message over the internet um it isn't just going to pass through my computer and your computer it will actually pass through various servers all around the world routers network devices and so we do we don't trust them they can potentially read our messages um and and try to play around with that and in this analogy that rule will be taken by the post right you're going to post the envelope to me and i'm going to receive it by post okay so we have our post box here i'm going to put my same secret in there i'm going to lock it with your public key once i've done that i'm going to pop that in the post box and then at some point or another pet the postman will be emptying the mailbox the letterbox and he'll get access to the locked letter and if they're doing their job well they'll deliver it to me and i will open the letter so i know the secret is 42 and i'll give the secret back to the mail and then the postman will deliver the left so let's pretend that pat the postman is malicious they're trying to pretend that they are mean they're trying to pretend to be bob so they want to convince you ellis that they have possession of this key and thereby being able to pretend there's someone they're not so if you post this letter this is back to where we were with my secret in a letter with you lot with your public yep gone back in the post yeah and we just established that there's only one person that can open the letter and it is the person with this key so if pat the postman is able to open this letter for you you would be convinced that they have this key correct okay so you just gave the letter to pat and challenged him to open the letter but what pat does is he doesn't try to open the letter he just gives the letter to me and i'm like oh okay i'm challenged to open a letter so i open it and say to pat you see i can open it there you go and next step is pet delivers the letter back to you ah so as far as i'm concerned pat's just given me that number correct so that means pat must have had possession of this key from your point of view so you're now convinced that pat is bob patenble by the same person which is obviously not the case right so pat has now successfully broken this very simple protocol now this sort of attack is known has been known for a long time and of course all the protocols are are a lot smarter than that but these are the challenging things that you need to face when designing a protocol you can't make these simple assumptions that just because someone is able to decrypt something it means that they must have the key no they might be able to use tricks so you want to design your protocol to make sure that these tricks do not exist the protocol that we're going to be looking at is the needham schroeder public key protocol because it's a public key protocol the very first step is that everyone involved generates a public key and a private key so as before we have my private key and my public key i give my public key to everyone else and similarly you have a private key and a public key and you give your public key to me now the goal of that protocol is for us to exchange secrets so that we're both convinced that we're talking to each other and we know each other's secrets now knowing each other's secrets is useful because we can then use that as a later basis to come up with a so-called symmetric key that's typically how it's done and we need to be wary of pat the postman playing around so in the needham schrader protocol the first step will be that alice will create a secret like before but also she will write down her identity on a piece of paper now this will make sure that if i bob receive the closed envelope i will know not only the secret but also the person that was challenging me to open the envelope which in this case is alice so please write down your identity on a piece of paper alice and i have my secret from before which i'm going to reuse envelope and i'll put in my secrets and my name and then i use bob's public key to lock the envelope because i don't need the key i can just push it shut and then am i sending this file the post then you are yes okay so we've been posting that okay and then uh yeah thank you pat for delivering alice's message i see an envelope here i wonder who that could be and i'm able to open it because it was encrypted with my public key [Applause] there we go let me have a look ah we have a secret number 42 and we have the name of the person who's challenging me alice so now i know that alice is trying to talk to me and that she came up with the secret 42. now to prove that i have this key i need to prove that i know the number 42 so i'm going to send you back the number 42 this is to prove that i was able to read the message and i'm going to write down a secret of myself i'm going to pick a number which is easy to write read upside down 69 and i'm going to put this in an envelope and in order to make sure that pep the postman can't pretend to be someone they're not what i'm going to do is i'm going to lock it using your public key alice's public key do you not put your name on it what is that i am not putting my name on it that's a good observation that it will actually turn out to be very important and i'm putting this back to patrick the postman and giving it back to you okay so i'm opening it up got my post let's put my camera down again and i've got my private key with my a on it so i am going to unlock it so i have 42 and 69. so i think i'm satisfied that my messages got to you and come back again yeah so you know that it must have gotten eventually to the person holding this key and you now also have the number 69 so that means that you not only know that it was me that must have read it at some point you also know the pair of the secret numbers 42 and 69 and so do i but i don't know yet that i'm talking to you so you need to now prove that you are who you say you are by showing that you were able to open your lock now what would be the solution for that i guess i'll send you your number back you just send me my number back that's exactly right so can you you you can use my public key for that okay so do you need anything else in here or just interesting okay so 69 goes in there and it gets locked with your public key and post it in the post box and sent to you thank you very much let's have a look whether the person who claimed to be alice in the beginning is actually alice or not 69 they must be great so now we're both convinced that we have been talking to each other so you know you've been talking to bob i know i've been talking to alice we both know the secret number 69 and 42 and nobody else in the world knows that combination of numbers these are very rare numbers that you almost never find and what we can do is we can for example create a so-called symmetric key out of these two numbers of course these numbers in computers would be way larger and you can use that to to do crypto more efficiently and we can communicate to each other more quickly using this new key we don't have to fiddle around with these public keys anymore because just as it was a little bit clumsy for us it's also a little bit clumsy for computers to use um asymmetric encryption okay so that's all great um but what i said is that these protocols are often not as secure as you might think now the interesting thing was that there was actually a proof that this protocol was secure and it kind of is because if you're planning to talk to me and i'm planning to talk to you and we do this whole setup there's no possibility for patrick postman to interfere there's nothing he could have done to make us miscommunicate and use different numbers or find out what the numbers is or confuse who we're talking to but there are some scenarios that were not considered back then where actually there is an attack so if we rewind all the way to the beginning and like before instead of talking to me you want to talk to pat the postman okay so what would you do if you wanted to talk to pat the postman uh i'd send him a secret on my name you would send him a secret and your name and you would close the envelope with what with his public key with his public key why would i want to talk to pat well in the case of the postal office there might not really be a scenario but if you think about the internet there could be a scenario like that for example let's say that you go to a dodgy website right now your computer will still want to set up a secure connection to that dodgy website so you want to talk to the doji website but then the doji website could like pat use that connection to set up a fake connection behind the scenes so if you're surfing to a 3g website this attack could apply fortunately of course modern protocols do not have this problem so it's okay for you to go to dodgy websites don't sue me right so you're sending your secret and your identity to pat into my envelope and then we're using pats public key in the post box and you are now expecting a reply from pat so what you're expecting pat to do is to open the message with their public key so i'm just going to pretend to be pep for a second just to make this work right so we're using pets private key to open the lock so pat has opened the message that was addressed to them and pat reads that alice wants to share the secret 42 and set up a connection with them right so their job is to now come up with a secret of their own but instead of doing that what pep does is they actually put this back into a box alice and 42 close the envelope and look it with bulbs public key and then delivers the letter to bob okay so from bob's perspective they just got a request and they're just opening it they don't know at this stage whether it came from pat or from ellis they just know that they got a message and then i bob is reading this and says oh alice wants to talk to me and their secret is 42. okay fair enough and i do my part of the protocol i take 42 to prove to alice that i am who i say i am and i create my own number as 69 and i'm putting them in the envelope and giving it back two pads so i'm using alice's key here to lock the message so because you know it's going to alice you lock it with alice's key exactly it's just the name that i found on this piece of paper here and i'm giving this back to pets now at this stage you're expecting a response from pat and that response is two random numbers the random number that you gave to pat which is 42 to prove that pat has access to their public key and another random number which is generated by pets right unlock this because that's my private key there we go open up the public key and then here i'll find [Music] my 42 that i sent and then a private number 69 okay so that means that the person you were talking to is well that must be from pat who i sent it to right that's right because they just prove to you that they know it's 42. but what is your response to pat because pat also doesn't know whether they're talking to you i need to send back the new number 69 not my secret and then i need to lock it with pets public key and then put that back in the post right yep so then pat receives the message addressed to pat so pets will use their private key to open it and they can see your response which is 69 so now pat knows both the secrets 69 and 42 but it's not done yet because pat also wants to lure me into believing that pat is alice right that was the whole point so basically the protocol between alice and pat has now finished and alice and pep know that they're talking to each other and there's no problem with that part of it but in the very final thing that happens is that pat encrypts the message with bob's public key okay so we have the message encrypted with bob's key and pat gives this message to bob to me and i'm using my private key to open it i open a message and i see my own secret being sent back to me now clearly that must mean that i was talking to alice because from my perspective i got alice in 42 and then i sent a message back to alice with 42 and my secret 69 and then only the person that had the key was able to decrypt that and send it back to me so i must have been talking to alice and so i believe that i'm talking to alice but i'm really talking to pat you believe you're talking to pat and that is correct but that means that if pets is a dodgy website and i am an online bank and you're a customer right you'd be logging into a doji website and then the doji website is using that connection to pretend to be alice for that connection so they can then do all kinds of bad things and i will believe that it is not pet the malicious postman but alice my customer who is doing those things and that is of course very bad the reason why this was overlooked for for over a decade was because it's quite subtle because you wouldn't expect initially that alice would want to talk to pat so it was really focused on the possibility of just alice wanting to talk to bob and bob wanting to talk to alice can anything go wrong then the answer was no so everyone was happy but then it turned out that this scenario exists and that's bad now is there an easy way to fix this uh yeah i mean i think i stumbled upon it actually earlier you should really have some your name back yes all i needed to do was in the stage um in the stage where i was sending 42 and 69 if i had added another message saying bob at my stage and just put that together with the two values in the envelope and sent it back with alice's public key then i give this back to pat now pat isn't able to open this message all they did was forward this message to you and then you opened it and you saw 42 and 69 now if you open the envelope what would you see oh this is key now we know that bob sent this from the thing i sent to him and here's a new secret yes because you would be like hold on a second i was trying to talk to pat not to bob why does he say bob and you'd know that something was amiss and you'd abort the protocol and the attack would fail now this is academic and this this attack has been known now for decades but unfortunately attacks like it are likely to exist occasionally because it's really really difficult to think about all the ways in which you can combine protocols and protocol runs together and the attacker only needs to find one way to break it and the protocol is broken and if you're on the defensive side and you want to make sure that your protocol is secure you need to think about all the possible ways in which the protocols can be overlapping or interfering with each other and you have to show that it's always going to be safe and that's the difficulty more in front of it so the belief would be updated to say that i'm probably here i take it here 44 and i raise it to the 29th power so i multiply it with itself 29 times on the clock and the number i end up with