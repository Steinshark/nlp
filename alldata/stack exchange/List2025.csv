Post Id,Parent Id,Body,Score,PostType
"79324995","","<p>I have a List in a controller that has one ClientMapping Object.
I am trying to gather that data in the JSP form and then send back to another controller.</p>
<p>Here is the controller code</p>
<pre><code>@RequestMapping(&quot;/chooseMappingValues&quot;)
    public ModelAndView chooseMappingValues() {
        ModelAndView mav = new ModelAndView();
        
        ClientMapping clientMappingChoices = new ClientMapping();
        clientMappingChoices.setMappingName(&quot;MyMapping&quot;);
        clientMappingChoices.setSchemaNameCoderepeaper(&quot;reference_tables&quot;);
        List&lt;ClientMapping&gt; cmList = new ArrayList&lt;ClientMapping&gt;();
        cmList.add(clientMappingChoices);
        
        Map&lt;String, String&gt; databases = lookupService.getLookup(&quot;DatabaseVendor&quot;);
        Map&lt;String, String&gt; tableNames = lookupService.getLookup(&quot;TableName&quot;);
        mav.addObject(&quot;tableNames&quot;, tableNames);
        mav.addObject(&quot;databaseVendor&quot;, databases);
        mav.addObject(&quot;message&quot;, &quot;Enter Mapping Name.  Choose Target Database Type, Schema Name and Table for Mapping.&quot;);
        mav.addObject(&quot;clientMappingChoices&quot;, cmList);
        mav.setViewName(&quot;mappingtool/chooseMappingValues&quot;);

        return mav;
    }
</code></pre>
<p>ANd here is the JSP</p>
<pre><code>                &lt;div class=&quot;card-body justify-content-md-center&quot;
                    style=&quot;background-color: darkgray;&quot;&gt;
                    &lt;form:form action=&quot;${pageContext.request.contextPath}/mappingtool/gatherMappingDetails&quot;
                        method=&quot;POST&quot; modelAttribute=&quot;clientMappingChoices&quot;&gt;
                        &lt;c:forEach items=&quot;${clientMappingChoices}&quot; var=&quot;cm&quot; varStatus=&quot;status&quot;&gt;
                            &lt;div class=&quot;table-responsive&quot;&gt;
                                &lt;table
                                    class=&quot;table table-responsive table-striped table-hover table-sm&quot;
                                    id=&quot;viewTable&quot;&gt;
                                    &lt;tbody&gt;
                                        &lt;tr&gt;
                                            &lt;td colspan=&quot;2&quot; class=&quot;fw-bolder justify-content-md-center&quot;&gt;&lt;h2
                                                    class=&quot;text-primary&quot;&gt;${message}&lt;/h2&gt;
                                        &lt;tr&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;label for=&quot;mappingName&quot;
                                                class=&quot;form-label&quot;&gt; Client Mapping Name:&lt;/label&gt; &lt;label
                                                class=&quot;text-danger&quot;&gt;&amp;nbsp;Required&lt;/label&gt;&lt;/td&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;form:input
                                                    class=&quot;form-control form-control-sm&quot; id=&quot;mappingName&quot;
                                                    path=&quot;${cm}.mappingName&quot; cssStyle=&quot;width:200px;&quot; /&gt; &lt;form:errors
                                                    
path=&quot;${cm}.mappingName&quot; /&gt;&lt;/td&gt;
                                        &lt;tr&gt;
                                            &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                                            &lt;td&gt;&lt;input class=&quot;btn btn-danger my-2 my-sm-0&quot; id=&quot;save&quot;
                                                type=&quot;submit&quot; value=&quot;Save&quot; /&gt;&lt;/td&gt;
                                        &lt;/tr&gt;
                                    &lt;/tbody&gt;
                                &lt;/table&gt;
                            &lt;/div&gt;
                        &lt;/c:forEach&gt;
                    &lt;/form:form&gt;
</code></pre>
<p>I have tried to setup the path of the spring form a bunch of ways but can't seem to get the syntax correct.</p>
<p>Here is the error message from the code above:</p>
<pre><code>2025-01-02 16:17:45,985 TRACE o.s.w.s.DispatcherServlet [http-nio-80-exec-5] Failed to complete request
org.apache.jasper.JasperException: An exception occurred processing [/WEB-INF/pages/mappingtool/chooseMappingValues.jsp] at line [151]

148:                                            class=&quot;form-label&quot;&gt; Client Mapping Name:&lt;/label&gt; &lt;label
149:                                            class=&quot;text-danger&quot;&gt;&amp;nbsp;Required&lt;/label&gt;&lt;/td&gt;
150:                                        &lt;td class=&quot;fw-bolder&quot;&gt;
151:                                            &lt;form:input class=&quot;form-control form-control-sm&quot; id=&quot;mappingName&quot;
152:                                                path=&quot;${cm}.mappingName&quot; cssStyle=&quot;width:200px;&quot; /&gt; &lt;form:errors
153:                                                path=&quot;${cm}.mappingName&quot; /&gt;&lt;/td&gt;
154:                                    &lt;/tr&gt;

Caused by: org.springframework.beans.NotReadablePropertyException: Invalid property 'ClientMapping [idPk=null, clientId=null, mappingName=MyMapping, schemaNameClient=null, schemaNameCoderepeaper=reference_tables, tableNameClient=null, tableNameCodereaper=null, columnNameClient=null, columnNameCodereaper=null, dataType=null, created=null, createdBy=null, updated=null, updatedBy=null]' of bean class [java.util.ArrayList]: Bean property 'ClientMapping [idPk=null, clientId=null, mappingName=MyMapping, schemaNameClient=null, schemaNameCoderepeaper=reference_tables, tableNameClient=null, tableNameCodereaper=null, columnNameClient=null, columnNameCodereaper=null, dataType=null, created=null, createdBy=null, updated=null, updatedBy=null]' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
    at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627) ~[spring-beans-6.1.13.jar:6.1.13]
    at org.springframework.beans.AbstractNestablePropertyAccessor.getNestedPropertyAccessor(AbstractNestablePropertyAccessor.java:856) ~[spring-beans-6.1.13.jar:6.1.13]
    at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyAccessorForPropertyPath(AbstractNestablePropertyAccessor.java:831) ~[spring-beans-6.1.13.jar:6.1.13]
    at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:615) ~[spring-beans-6.1.13.jar:6.1.13]
    at org.springframework.web.servlet.support.BindStatus.&lt;init&gt;(BindStatus.java:158) ~[spring-webmvc-6.1.13.jar:6.1.13]
    at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178) ~[spring-webmvc-6.1.13.jar:6.1.13]
</code></pre>
","0","Question"
"79326189","","<p>I am working in Netlogo with a model where each agent has a path through the network. Each node has an attribute called 'mode' with values <code>[&quot;bike&quot; &quot;bus&quot; &quot;train&quot; &quot;u-g&quot;]</code>. I want to find the first myway item that has a different mode from the previous one. For example:</p>
<pre><code>observer&gt; ask turtle 4455 [show myway]
 
turtle 4455 &gt; [(vertex 77445) (vertex 66227) (vertex 39816) (vertex 98972) (vertex 47091) (vertex 88001)]
</code></pre>
<p>The correspondence with the modes would be <code>[&quot;bike&quot; &quot;bike&quot; &quot;bike&quot; &quot;bike&quot; &quot;train&quot; &quot;train&quot;]</code>, so I would need to find item 4, i.e. the first different mode in the list.</p>
<p>My attempt to solve it is to create a new list with modes for each vertex like this:</p>
<pre><code>ask turtle 4455 [
let mymodes [] 
foreach myway [ r -&gt; 
set mymodes lput [mode] of r mymodes]
show mymodes]
</code></pre>
<p><code>[ &quot;bike&quot; &quot;bike&quot; &quot;bike&quot; &quot;bike&quot; &quot;train&quot; &quot;train&quot;]</code></p>
<p>I now try to find the position of the first &quot;train&quot; in the list with the commands position and first:</p>
<pre><code>show position (first mymodes != &quot;Bici&quot;) mymodes
</code></pre>
<p>But it returns &quot;false&quot;, and I need the position.</p>
","2","Question"
"79328524","","<p>I have a large dataframe that I need to make and annotate subplots from, see below.  Everything seems ok, I still have some work to do on the x and y ticks but otherwise it seems pretty right, except, I can't get the annotation for each subplot to fall on the appropriate subplot.  The annotations are all taken from the list 'df_cols' defined at the start.  All of the annotation are plotted, but on top of one another in the lowest subplot, which is also the last subplot in the list.</p>
<pre><code>df_cols = ['WC_015', 'WC_030', 'WC_046', 'WC_061', 'WC_076', 'WC_091', 'WC_107', 'WC_122', 'WC_137', 'WC_152', 'WC_168', 'WC_183', 'WC_213', 'WC_244', 'WC_274', 'WC_305', 'WC_366', 'WC_427', 'WC_488', 'WC_518']
fig, axs = plt.subplots(20, 1, figsize=(50,30))  #, sharex=True, sharey=True)

for k, col in enumerate(df_cols):
  df[col].plot(ax=axs[k])
  plt.annotate(df_cols[k], xy=(.01, .115), xycoords='axes fraction', fontsize=15, rotation=90, color='red')  #plt.annotate(df_cols[k], xy=(.01, .115), xycoords='axes fraction', fontsize=15, rotation=90, color='red')
fig.subplots_adjust(hspace=0)
plt.suptitle ('Volumetric Moisture Content', fontsize=40, y=.91)

plt.ylabel('Volumetric Moisture Content (m3/m3)', fontsize=30, y=10.0)
plt.xlabel('Date', fontsize=30)
plt.savefig('Moisture_Content_Plots.pdf', dpi=100, bbox_inches='tight')
</code></pre>
<p><a href=""https://i.sstatic.net/53gaoUFH.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/53gaoUFH.png"" alt=""Image of subplots"" /></a></p>
<p>It seems like it should iterate through the labels with the loop that makes the subplots, but I can't get it there.</p>
","0","Question"
"79330188","","<p>I am using Chromadb Version 0.5.23</p>
<pre><code>print(collection.query(...))
</code></pre>
<p>produces something like:</p>
<pre><code>{'ids': [['id1', 'id2', 'id3']], 'embeddings': None, 'documents': None, 'uris': None, 'data': None, 'metadatas': None, 'distances': [[0.2003527583406446, 0.21832232106694371, 0.23420078419011314]], 'included': [&lt;IncludeEnum.distances: 'distances'&gt;]}
</code></pre>
<p>This is a dict with lists of lists.</p>
<pre><code>print(collection.get(...))
</code></pre>
<p>produces something like:</p>
<pre><code>{'ids': ['id1', 'id2', 'id3'], 'embeddings': None, 'documents': ['Text1', 'Text2', 'Text3'], 'uris': None, 'data': None, 'metadatas': None, 'included': [&lt;IncludeEnum.documents: 'documents'&gt;]}
</code></pre>
<p>A dict with lists.</p>
<p>Is there a special reason for this behavior, is it a bug, a feature?</p>
<p>I would expect that the results have the same format. More I do not see a reason for lists containing a single element only.</p>
","1","Question"
"79331521","","<p>How do you develop a feature that changes the color of characters within a string that match the text entered into a text field, using Jetpack Compose?</p>
<p>This is a common feature in applications that allow users to search through a list using a search bar and returning matching results. The characters within the list item that match the text entered into a search bar will be a different color than the characters that don't match.</p>
<p>The only problem is that I can't quite feature out how to implement that feature properly. I have developed a feature that comes very close to achieving that goal but ever so slightly falls short.</p>
<p>Here is the code for what I have accomplished so far.</p>
<pre><code>val searchValue by remember {mutableStateOf(TextFieldValue(&quot;&quot;))}
val nameList = listOf(&quot;John&quot;, &quot;Brittany&quot;, &quot;Rick&quot;, &quot;Jill&quot;, &quot;Eric&quot;, &quot;Alex&quot;, &quot;Aaron&quot;)


Scaffold(
        topBar = {
            // SEARCH BAR; THE LIST IS RECOMPOSED ON EVERY INPUT
            TextField(
                value = searchValue,
                onValueChange = {
                    searchValue = it
                    nameList.filter { it.contains(searchValue.text, ignoreCase = true) }
                })
        }
    ) {padding -&gt;
        LazyColumn(
            modifier = Modifier.padding(padding)
        ) {

            // DISPLAYED LIST OF MATCHING NAMES
            items(if (searchValue.text.isEmpty()) emptyList() else nameList.filter { it.contains(searchValue.text, ignoreCase = true) }) { name -&gt;

               Text(
                   // ANNOTATED STRING THAT PARSES EACH CHARACTER IN A LIST ITEM
                   buildAnnotatedString {
                       name.forEach { letterInName -&gt;
                           // IF THE CHARACTER MATCHES THEN THE TEXT CHANGES TO BLUE
                           if (letterInName.toString() in searchValue.text) {
                              withStyle(style = SpanStyle(color = Color.Blue)) { append(letterInName.toString()) }
                           // ELSE BLACK
                           } else {
                              withStyle(style = SpanStyle(color = Color.Black)) { append(letterInName.toString()) }
                           }
                           }
                   }
               )

            }

        }
    }
</code></pre>
<p>This system almost accomplishes what I want but there is one problem. If there is a sequence of characters in a row that are the same, they all will be highlighted regardless of how many characters are in the search bar.</p>
<p>For example, in the name &quot;Jill&quot; both &quot;L&quot;s will be highlighted even if there is only one &quot;L&quot; in the search bar. The same problem occurs with the &quot;A&quot; in &quot;Aaron&quot;, both will be highlighted regardless of how many are in the search bar.</p>
<p>How can I fix this problem. Making sure only the number amount of a specific character entered into the search bar are highlighted.</p>
<p>Thanks for taking the time to read this question.</p>
","0","Question"
"79332760","","<p>How can I make the function more efficient?</p>
<p>This is all the test code I wrote:</p>
<pre><code>
// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'package:flutter_test/flutter_test.dart';

void main() {
  test(
    'find list item and apply math',
    () {
      final mockList = &lt;Model&gt;[
        Model(id: '1', name: 'Cortado', price: 12),
        Model(id: '2', name: 'Caffe Latte', price: 24),
        Model(id: '3', name: 'Americano', price: 48),
        Model(id: '4', name: 'Turkish Coffee', price: 96),
        Model(id: '5', name: 'Filter Coffee', price: 64),
        Model(id: '6', name: 'Flat White', price: 128),
      ];

      final selectItems = [mockList[0], mockList[3]];
      final result = findAndOperate(
        mainList: mockList,
        selectedList: selectItems,
        operations: Operations.PLUS,
        value: 40,
      );
      print(result);
    },
  );
}

List&lt;Model&gt; findAndOperate({
  required double value,
  required Operations operations,
  required List&lt;Model&gt; mainList,
  required List&lt;Model&gt; selectedList,
}) {
  for (final selectItem in selectedList) {
    for (final item in mainList) {
      if (item == selectItem) {
        final itemIndex = mainList.indexOf(item);
        switch (operations) {
          case Operations.PLUS:
            final changeItem =
                selectItem.copyWith(price: selectItem.price + value);
            mainList.removeAt(itemIndex);
            mainList.insert(itemIndex, changeItem);
          case Operations.MULTIPLICATION:
            final changeItem = selectItem.copyWith(
              price: selectItem.price + (selectItem.price * value),
            );
            mainList.removeAt(itemIndex);
            mainList.insert(itemIndex, changeItem);
        }
      }
    }
  }
  return mainList;
}

// ignore: constant_identifier_names
enum Operations { PLUS, MULTIPLICATION }

// ignore: one_member_abstracts

class Model {
  Model({required this.id, required this.name, required this.price});

  final String id;
  final String name;
  final double price;

  Model copyWith({
    String? id,
    String? name,
    double? price,
  }) {
    return Model(
      id: id ?? this.id,
      name: name ?? this.name,
      price: price ?? this.price,
    );
  }

  @override
  String toString() =&gt; 'MockModel(id: $id, name: $name, price: $price)';

  @override
  bool operator ==(covariant Model other) {
    if (identical(this, other)) return true;

    return other.id == id &amp;&amp; other.name == name &amp;&amp; other.price == price;
  }

  @override
  int get hashCode =&gt; id.hashCode ^ name.hashCode ^ price.hashCode;
}
</code></pre>
<p>The function I wrote works as expected, but I'm new to this and I'm curious about what I can improve or learn.</p>
<p>The result that comes out when I run the function:</p>
<p>[MockModel(id: 1, name: Cortado, price: 52.0), MockModel(id: 2, name: Caffe Latte, price: 24.0), MockModel(id: 3, name: Americano, price: 48.0), MockModel(id: 4, name: Turkish Coffee, price: 136.0), MockModel(id: 5, name: Filter Coffee, price: 64.0), MockModel(id: 6, name: Flat White, price: 128.0)]</p>
","2","Question"
"79332993","","<p>I have a list which nests a list like this:</p>
<pre><code> &gt;&gt;&gt;View(mylist)
[

[{&quot;id&quot;:1, &quot;name&quot;: &quot;Jack&quot;},{&quot;id&quot;:2, &quot;name&quot;: &quot;Mike&quot;}],

[{&quot;id&quot;:3, &quot;name&quot;: &quot;Mary&quot;},{&quot;id&quot;:4, &quot;name&quot;: &quot;Bob&quot;}],

]
</code></pre>
<p>Now, I want to remove this inner layer of list, so it should be:</p>
<pre><code> &gt;&gt;&gt;View(mylist)
[

{&quot;id&quot;:1, &quot;name&quot;: &quot;Jack&quot;},{&quot;id&quot;:2, &quot;name&quot;: &quot;Mike&quot;},

{&quot;id&quot;:3, &quot;name&quot;: &quot;Mary&quot;},{&quot;id&quot;:4, &quot;name&quot;: &quot;Bob&quot;},

]
</code></pre>
<p>In python, it's easy to achieve, just using compression list:</p>
<pre><code>[subitem for item in mylist for subitem in item]
</code></pre>
<p>or using itertools:</p>
<pre><code>import itertools
list(itertools.chain.from_iterable(mylist))
</code></pre>
<p>However, in R language, I feel a little tricky. I try to using do.call:</p>
<pre><code>do.call(c, mylist)
</code></pre>
<p>It works well. However, when my nest list is large like this:</p>
<p><a href=""https://i.sstatic.net/IXCM3nWk.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/IXCM3nWk.png"" alt=""enter image description here"" /></a></p>
<p><a href=""https://i.sstatic.net/KbVkshGy.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KbVkshGy.png"" alt=""enter image description here"" /></a></p>
<p>After using do.call()，I got the result like this:</p>
<p><a href=""https://i.sstatic.net/juJC23Fd.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/juJC23Fd.png"" alt=""enter image description here"" /></a></p>
<p>The output format is not like the previous, so what's the problem?</p>
<p>By the way, you can construct the above mentioned &quot;mylist&quot; using the following R code:</p>
<pre><code>mylist &lt;- list(
  list(
    list(id = 1, name = &quot;Jack&quot;),
    list(id = 2, name = &quot;Mike&quot;)
  ),
  list(
    list(id = 3, name = &quot;Mary&quot;),
    list(id = 4, name = &quot;Bob&quot;)
  )
)
</code></pre>
<p>And &quot;data1&quot;:</p>
<pre><code>data1 &lt;- list(
  data.frame(
    id = c(3, 4),
    name = c(&quot;John&quot;, &quot;Anna&quot;)
  ),
  data.frame(
    id = c(5, 6),
    name = c(&quot;Tom&quot;, &quot;Jerry&quot;)
  )
)
</code></pre>
","0","Question"
"79336950","","<p>I need to add a class item to a list, it has to be added by keyboard input. I'm not able to add its attributes</p>
<p>Product Class</p>
<pre><code>import java.util.*;

public class Product {
    public double price;
    public int quantity;
    private String id_product;
    
    public Prodotto (double price, int quantity, String id_product) {
        this.price = price;
        this.quantity = quantity;
        this.id_product = id_product;
    }
    public double getPrice() {
        return price;
    }
    public int getQuantity() {
        return quantity;
    }
    
    public String getId_product() {
        return id_product;
    }
    


}

</code></pre>
<p>ProductList Class</p>
<pre><code>import java.util.*;

public class ProductList {
    List &lt;Product&gt; productList;
    
    public ProductList() {
        productList = new LinkedList&lt;Product&gt;();
    }
    
    public void addProduct(Product p) {
        productList.add(p);
    }
    
    public int getSize() {
        return productList.size();
    }
    
    public Product getProduct(int i) {
        return productList.get(i);
    }

    public void add(String next) {
        
    }
    
    
}

</code></pre>
<p>And the the Main Class, it's still in development with additional operations that i removed to make it more clear for you, but the first it's the one that is giving me trouble</p>
<pre><code>import java.util.*;

public class WarehouseManagement {

    public static void main(String[] args) {
        // TODO Auto-generated method stub
    
    ProductList el_product = new ProductList();
    
    Scanner sc = new Scanner(System.in);
    
    boolean stop = false;
    while(!stop) {
        System.out.println(&quot;Available Operations:&quot;);
        System.out.println(&quot;1 - Add Product&quot;);
        
        System.out.print(&quot;Insert your choice: &quot;);
        int choice = sc.nextInt();
        
        Product [] products
        
        
        switch (choice) {
            case 1:
                System.out.print(&quot;Insert product: &quot;);
                el_product.add(sc.next());
                
                break;
        }
    
        
        }
    }

    }


</code></pre>
<p>With this i can add a product but not his price, quantity and Id, how can i do that?</p>
","-1","Question"
"79348220","","<p>I never used LINQ but now I have to and I'm having a bit of trouble with it. Below is an example of how I would normally compare two lists and retrieve the bad and good price records. How can I do the same procedure with LINQ?</p>
<pre><code>static void FindItemswithInvalidPackages()
{
    List&lt;Item&gt; items = new List&lt;Item&gt;()
    {
        new Item { Id = 1, Name = &quot;Item 01&quot;, Packages = new List&lt;Package&gt; { new Package { Id = 1, Name = &quot;SINGLE&quot; }, new Package { Id = 2, Name = &quot;PACK&quot; } } },
        new Item { Id = 2, Name = &quot;Item 02&quot;, Packages = new List&lt;Package&gt; { new Package { Id = 1, Name = &quot;SINGLE&quot; }, new Package { Id = 2, Name = &quot;PACK&quot; } } },
        new Item { Id = 3, Name = &quot;Item 03&quot;, Packages = new List&lt;Package&gt; { new Package { Id = 1, Name = &quot;SINGLE&quot; }, new Package { Id = 2, Name = &quot;PACK&quot; } } },
        new Item { Id = 4, Name = &quot;Item 04&quot;, Packages = new List&lt;Package&gt; { new Package { Id = 1, Name = &quot;SINGLE&quot; }, new Package { Id = 2, Name = &quot;PACK&quot; } } },
        new Item { Id = 5, Name = &quot;Item 04&quot;, Packages = new List&lt;Package&gt; { new Package { Id = 1, Name = &quot;SINGLE&quot; }, new Package { Id = 2, Name = &quot;PACK&quot; } } },
        new Item { Id = 6, Name = &quot;Item 06&quot;, Packages = new List&lt;Package&gt; { new Package { Id = 1, Name = &quot;SINGLE&quot; }, new Package { Id = 2, Name = &quot;PACK&quot; } } }
    };

    List&lt;RetailPrice&gt; prices = new List&lt;RetailPrice&gt;()
    { 
        new RetailPrice { Item = 1, Package = 1, Price = 1 },
        new RetailPrice { Item = 2, Package = 2, Price = 2 },
        new RetailPrice { Item = 3, Package = 1, Price = 3 },
        new RetailPrice { Item = 4, Package = 2, Price = 4 },
        new RetailPrice { Item = 5, Package = 3, Price = 5 }, // Bad one
        new RetailPrice { Item = 6, Package = 2, Price = 6 }
    };

    // How would I do this in linq?
    HashSet&lt;string&gt; itemPackages = new HashSet&lt;string&gt;();
    foreach (var item in items)
    {
        foreach(var package in item.Packages)
        {
            itemPackages.Add($&quot;{item.Id}|{package.Id}&quot;);
        }
    }
    List&lt;RetailPrice&gt; badPrices = new List&lt;RetailPrice&gt;();
    List&lt;RetailPrice&gt; goodPrices = new List&lt;RetailPrice&gt;();
    foreach (var price in prices)
    {
        if (!itemPackages.Contains($&quot;{price.Item}|{price.Package}&quot;))
        {
            badPrices.Add(price);
        }
        else
        {
            goodPrices.Add(price);
        }
    }
}
</code></pre>
","0","Question"
"79353603","","<p>Say I have three groups of variables a1, a2, a3 , b1, b2, b3, c1, c2, c3 and I want to change the first in each group using a loop rather than individual assignments.<br />
Putting each group in a list doesn't work:</p>
<pre><code>a1, a2, a3 = 1, 2, 3
b1, b2, b3 = 4, 5, 6
c1, c2, c3 = 7, 8, 9

ls = [[a1, a2, a3], [b1, b2, b3], [c1, c2, c3]]

for i in range(len(ls)):
    ls[i][0] = 100

print(ls)    
print(a1, b1, c1)
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>[[100, 2, 3], [100, 5, 6], [100, 8, 9]]
1 4 7
</code></pre>
<p>I guess that I'm getting into &quot;copy&quot; vs &quot;deep copy&quot; territory here.  How can I do this?</p>
","0","Question"
"79355634","","<p>Here's a simple swiftui structure that should produce a single row of a List of players in my iOS app. It consists of a Button, some Text and a second Button. When I click on either Button (or indeed on the Text itself), the functions associated with both Buttons fire. I cannot see why. I expect and want the Buttons to operate independently and only for the specific player. Any ideas?</p>
<pre><code>struct PlayerRowView: View {
   @EnvironmentObject var viewModel: ViewModel
   var player: Player
   
   var body: some View {
      HStack(alignment: .center) {
         Button(action: { viewModel.shiftPlayerDown(player) })
         { Label(&quot;&quot;, systemImage: &quot;arrow.turn.left.down&quot;) }
         
         Text(player.name).frame(width:250, height: 40)
            .frame(width:250)
         
         Button(action: { viewModel.removePlayerFromLineup(player) })
         { Label(&quot;&quot;, systemImage: &quot;minus.circle.fill&quot;) }
      }
   }
}
</code></pre>
<p>It's called this way:</p>
<pre><code>      List {
         ForEach(viewModel.lineup) { PlayerRowView(player: $0) }
      }
</code></pre>
","0","Question"
"79358064","","<p>I run R + Rcpp + RcppParallel from RStudio.</p>
<p>I run a parallel loop that works if I do not use a Rcpp::List in the worker, but throws an abort if I use the Rcpp::List in the worker (even in a trivial way).</p>
<p><a href=""https://i.sstatic.net/c8qlp6gY.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/c8qlp6gY.png"" alt=""picture of the fatal abort of R Studio"" /></a></p>
<p>Am I not allowed to use a List in a worker?</p>
<p>Minimal example:</p>
<p>The R file</p>
<pre><code>sourceCpp('minimal_example.cpp')

nn = 1e2
## the following works nicely
my_test = list_paral_flawed(nn, 2)
## the following throws a fatal error
my_test = list_paral_flawed(nn, 1)
</code></pre>
<p>The corresponding file <code>minimal_example.cpp</code> (note the minimal change between struct_A1 and struct_A2)</p>
<pre><code>// [[Rcpp::depends(RcppArmadillo)]]
#include &lt;RcppArmadillo.h&gt;
// [[Rcpp::depends(RcppParallel)]]
#include &lt;RcppParallel.h&gt;
using namespace Rcpp;
using namespace arma; 
using namespace RcppParallel;

struct struct_A1 : public Worker {
  // input matrix to write to
  arma::mat &amp;out_mat;
  
  struct_A1(arma::mat &amp;out_mat): out_mat(out_mat) {}
  
  void operator()(std::size_t begin, std::size_t end) {
    int dim_T = out_mat.n_rows;
    for (std::size_t i = begin; i &lt; end; i++) {
      // just defining a List with a zero vector, getting it out,
      // and putting it into the columns of the output matrix;
      // rest same as struct_A1
      Rcpp::List tmp = Rcpp::List::create(
        Named(&quot;v1&quot;) = arma::vec(dim_T, fill::zeros)
      );
      arma::vec v1 = tmp[&quot;v1&quot;];
      for (int i1=0;i1&lt;dim_T;++i1) out_mat(i1, i) = i1 + i + v1(i1);
    }

  }
};

struct struct_A2 : public Worker {
  // input matrix to write to
  arma::mat &amp;out_mat;
  
  struct_A2(arma::mat &amp;out_mat): out_mat(out_mat) {}
  
  void operator()(std::size_t begin, std::size_t end) {
    int dim_T = out_mat.n_rows;
    for (std::size_t i = begin; i &lt; end; i++) {
      // same as in struct_A1, but now without the list, just
      // directly making a vector of zeros and putting it into
      // the columns of the output matrix
      arma::vec v1(dim_T, fill::zeros);
      for (int i1=0;i1&lt;dim_T;++i1) out_mat(i1, i) = i1 + i + v1(i1);
    }
    
  }
};

// [[Rcpp::export]]
arma::mat list_paral_flawed(const int dim_N, const int version_x) {

  // construct the output matrix
  arma::mat out_mat(dim_N, dim_N);

  // depending on version_x, do struct_A1 or struct_A2
  // as the parallel loop
  if (version_x == 1) {
    Rcout &lt;&lt; &quot;\nDoing version A1\n&quot;;
    struct_A1 a2(out_mat);
    parallelFor(0, dim_N, a2);
  } else {
    Rcout &lt;&lt; &quot;\nDoing version A2\n&quot;;
    struct_A2 a2(out_mat);
    parallelFor(0, dim_N, a2);
  }

  return out_mat;
}
</code></pre>
<p>Now, <code>list_paral_flawed(100, 2)</code> works perfectly fine, whereas <code>list_paral_flawed(100, 1)</code> throws an abort on my machine.</p>
<p>NB: putting the number of workers in the R code to 1 using <code>RcppParallel::setThreadOptions(numThreads = 1)</code> avoids the error, which makes me suspect it is some type of memory allocation issue ...</p>
<p>Any help much appreciated</p>
","0","Question"
"79359740","","<p>Python docs mention that list sorting is stable: <a href=""https://docs.python.org/2/library/stdtypes.html#index-29"" rel=""nofollow noreferrer"">https://docs.python.org/2/library/stdtypes.html#index-29</a></p>
<p>In there it says, &quot;Starting with Python 2.3, the sort() method is guaranteed to be stable. A sort is stable if it guarantees not to change the relative order of elements that compare equal — this is helpful for sorting in multiple passes (for example, sort by department, then by salary grade)&quot;</p>
<p>Same is mentioned on another link on Stackoverflow where some users have linked the same docs and repeated that the Python sort has a stable sort:  <a href=""https://stackoverflow.com/questions/5212870/sorting-a-python-list-by-two-fields"">Sorting a Python list by two fields</a></p>
<p>However, I don't fully understand this concept. In this example below, I had expected that the result from each print statement would be the same but that is not the case.</p>
<p>Sample code -</p>
<pre><code>from operator import itemgetter

 
list1 = []
list1.append(('A','Z','50'))
list1.append(('A','Y','10'))
list1.append(('B','Z','10'))
list1.append(('B','Y','50'))
 
 
list1.sort(key = itemgetter(0,1,2))
print(list1)
 
list2 = []
list2.append(('A','Z','50'))
list2.append(('A','Y','10'))
list2.append(('B','Z','10'))
list2.append(('B','Y','50'))
 
 
list2.sort(key = itemgetter(0,1))
list2.sort(key = itemgetter(2))
print(list2)
</code></pre>
<p>The result I get is this -</p>
<h2>[('A', 'Y', '10'), ('A', 'Z', '50'), ('B', 'Y', '50'), ('B', 'Z', '10')]</h2>
<h2>[('A', 'Y', '10'), ('B', 'Z', '10'), ('A', 'Z', '50'), ('B', 'Y', '50')]</h2>
<p>I am wondering why am I not getting the same results?</p>
","0","Question"
"79360261","","<p>The setup code:</p>
<pre class=""lang-py prettyprint-override""><code>class MyContainer:
    def __init__(self):
        self.stuff = [1, 2, 3]

    def __iter__(self):
        print(&quot;__iter__&quot;)
        return iter(self.stuff)

    def __len__(self):
        print(&quot;__len__&quot;)
        return len(self.stuff)

mc = MyContainer()
</code></pre>
<p>Now, in my shell:</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; i = iter(mc)
__iter__
&gt;&gt;&gt; [x for x in i]
[1, 2, 3]
&gt;&gt;&gt; list(mc)
__iter__
__len__
[1, 2, 3]
</code></pre>
<p>Why is <code>__len__()</code> getting called by <code>list()</code>?  And where is that documented?</p>
","7","Question"
"79366125","","<p>I have a data sheet where I want to do a calculation until I find a zero in one specific column. Then I want to sum all the results of this calculation up to that zero and save the result in an array.  I tried with an np array and a list but it does not work:</p>
<pre><code>tst = []
x = data[1:len(data),0]
y = data[1:len(data),1]  
intt = data[1:len(data),2]
for i in range(0,len(data)):
   if intt[i]!=0:         
      tst.append((x[i]**2.0+ y[i]-y[i-1])**2.0)
</code></pre>
<p>I want the tst to contain in each position, the sum of the expression in the append().</p>
<p>Thanks!</p>
","-3","Question"
"79368232","","<p>I'm new(ish) to Python, and am trying to create a link manager software. I have ran into an issue in my code, however: apparently, the webbrowser module doesn't work with lists?</p>
<p>I tried doing simple commands like <code>webbrowser.get(&quot;chrome&quot;).open_new_tab(str(url))</code>, but it didn't work. For reference, my code is below:</p>
<pre><code>from tkinter import *
from customtkinter import CTk
import webbrowser

def submit():
    file = open(&quot;links.txt&quot;,&quot;a&quot;)
    file.write(entry.get()+&quot;\n&quot;)
    file.close()

def fetch():
    with open(&quot;links.txt&quot;) as f:
        lines = f.read().splitlines()
        while len(lines) &gt; 0:
            url = [lines[0]]
            chrome_path = r&quot;C:\Program Files\Google\Chrome\Application\chrome.exe&quot;
            webbrowser.register('chrome',None,webbrowser.BackgroundBrowser(chrome_path))
            webbrowser.get('chrome').open_new_tab(str(url))
            lines = lines[1:]
    f.close()

app = CTk()
app.geometry(&quot;217x115&quot;)
app.iconbitmap()
app.title(&quot;Linkment&quot;)

label = Label(text=&quot;Enter Links Below&quot;,font=(&quot;Sans Serif&quot;,15,&quot;bold&quot;),bg=&quot;#242424&quot;,fg=&quot;White&quot;)
label.pack()

entry = Entry(bg=&quot;#3b3b3b&quot;,font=(&quot;Sans Serif&quot;,11),fg=&quot;White&quot;)
entry.pack()

submit = Button(text=&quot;Submit&quot;,font=(&quot;Sans Serif&quot;,11),bg=&quot;#3b3b3b&quot;,fg=&quot;White&quot;,command=submit)
submit.pack()

fetch = Button(text=&quot;Fetch Links&quot;,font=(&quot;Sans Serif&quot;,11),bg=&quot;#3b3b3b&quot;,fg=&quot;White&quot;,command=fetch)
fetch.pack()

app.mainloop()
</code></pre>
<p>Basically, what I'm trying to do here is open a window using customtkinter (simply for the convenience of it already being in dark mode, and not having to hard-code the title bar and window background to specific colors) and make two buttons, the first of which letting you save a string to a file, the second retrieving each individual line of the file and opening it as a browser address in Google Chrome.</p>
<p>My current issue is that the webbrowser module doesn't work with lists, meaning I need to convert each item in the list into a variable, then use the <code>str()</code> function to convert it into a string. However, not even this works.
Please help!</p>
","-1","Question"
"79374284","","<p>I would like to create several lists within a for loop and each list should include the loop index in its name. I need to do it because otherwise the list object is apparently too big (&gt;20GB) [derived from 1000 random replicates of 9000 events] and I cannot export it, neither using <code>save.image()</code> nor <code>saveRDS()</code>.</p>
<p>Here is a small example of the whole procedure, with a single list for all objects:</p>
<pre><code>library(tidyverse)

SO_ListIteration &lt;- data.frame(Group = rep(1:3, each = 20),
                               Replicate = rep(1:10, each = 2),
                               Data = rnorm(60))


SO_ListIteration_ForEachGroup &lt;- list()
for (j in 1:max(SO_ListIteration$Group)) {
  SO_ListIteration_ForEachGroup[[j]] &lt;- list()
  temp_grp &lt;- SO_ListIteration %&gt;%
    filter(Group == j)
  
  for (i in 1:max(SO_ListIteration$Replicate)) {
    temp &lt;- temp_grp %&gt;%
      filter(Replicate == i)

    SO_ListIteration_ForEachGroup[[j]][[i]] &lt;- temp
    rm(temp)
  }
  rm(temp_grp)
}
</code></pre>
<p>Each element of the list contains the data for a replicate of a group, but I would like to have one list per group.</p>
<p>When I try the following code, I obviously only get the data for the last group, not for the other two:</p>
<pre><code>SO_ListIteration_ForEachGroup &lt;- list()
for (j in 1:max(SO_ListIteration$Group)) {
  temp_grp &lt;- SO_ListIteration %&gt;%
    filter(Group == j)
  
  for (i in 1:max(SO_ListIteration$Replicate)) {
    temp &lt;- temp_grp %&gt;%
      filter(Replicate == i)
    
    SO_ListIteration_ForEachGroup[[i]] &lt;- temp
    rm(temp)
  }
  rm(temp_grp)
}
</code></pre>
<p>I tried apparently silly things based on <code>paste0()</code>, such as <code>paste0(&quot;SO_ListIteration_ForGroup&quot;, j) &lt;- list()</code>, but then I get <code>Error in paste0(&quot;SO_ListIteration_ForGroup&quot;, j) &lt;- list() :  target of assignment expands to non-language object</code></p>
<p>I thought it would be easy, but could not find a solution so far.</p>
","0","Question"
"79383301","","<p>Is there a way to use list of indices to simultaneously access the modules of
<code>nn.ModuleList</code> in python?</p>
<p>I am working with pytorch <code>ModuleList</code> as described below,</p>
<pre><code>decision_modules = nn.ModuleList([nn.Linear(768, 768) for i in range(10)])
</code></pre>
<p>Our input data is of the shape <code>x=torch.rand(32,768)</code>. Here <code>32</code> is the batch size and <code>768</code> is the feature dimension.</p>
<p>Now for each input data point in a minibatch of <code>32</code> datapoints, we want to select <code>4</code> decision modules from the list of <code>decision_modules</code>. The <code>4</code> decision engines from <code>decision_engine</code> are selected using an index list as explained below.</p>
<p>I have a index matrix of dimensions <code>ind</code>. The <code>ind</code> matrix is of dimension <code>torch.randint(0,10,(32,4))</code>.</p>
<p>I want to us a solution without use of loops as loops slows down the xecution significantly.</p>
<p>But the following code throws and error.</p>
<pre><code>import torch
import torch.nn as nn

linears = nn.ModuleList([nn.Linear(768, 768) for i in range(10)])
ind=torch.randint(0,10,(32,4))
input=torch.rand(32,768)

out=linears[ind](input)
</code></pre>
<p>The following error was observed</p>
<blockquote>
<p>File ~\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\nn\modules\container.py:334, in ModuleList.<strong>getitem</strong>(self, idx)
332     return self.<strong>class</strong>(list(self._modules.values())[idx])
333 else:
--&gt; 334     return self._modules[self._get_abs_string_index(idx)]</p>
<p>File ~\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\nn\modules\container.py:314, in ModuleList._get_abs_string_index(self, idx)
312 def _get_abs_string_index(self, idx):
313     &quot;&quot;&quot;Get the absolute index for the list of modules.&quot;&quot;&quot;
--&gt; 314     idx = operator.index(idx)
315     if not (-len(self) &lt;= idx &lt; len(self)):
316         raise IndexError(f&quot;index {idx} is out of range&quot;)</p>
<p>TypeError: only integer tensors of a single element can be converted to an index</p>
</blockquote>
<p>The expected output shape is (32,4,768).</p>
<p>Any help will be highly useful.</p>
","1","Question"
"79389256","","<p>I have a grid of 81 modified <code>TextBox</code> items arranged in a 9x9 grid.
I added properties for row, column, block, and valid int entries for each box.
I was able to populate the row, column, and block properties interactively, but not the list of valid integers.
I want to create lists of rows, columns, and blocks so that I can iterate through them.</p>
<p>I tried this (I named my class <code>GridBox</code>):</p>
<pre><code>public List&lt;System.Windows.Forms.TextBox&gt; RowList =
    new List&lt;System.Windows.Forms.TextBox&gt;();
public List&lt;System.Windows.Forms.TextBox&gt; ColumnList =
    new List&lt;System.Windows.Forms.TextBox&gt;();
public List&lt;System.Windows.Forms.TextBox&gt; BlockList =
    new List&lt;System.Windows.Forms.TextBox&gt;(); 
</code></pre>
<p>I get error messages when I try to populate these lists with lists of nine items:</p>
<pre><code>IDE0059 Unnecessary assignment of a value to myRow1List
</code></pre>
<p>I want to end up being able to type a valid digit into a box, and have my code enter it at the proper location in a 9x9 array of nullable integers, where 0 has special meaning to create a null value at a location.</p>
","0","Question"
"79396329","","<p>I have a function called <code>max_list</code> that returns the largest number in a randomly generated list (I know there is an inbuilt function, this is just for practice)</p>
<pre><code>import random
L = []
rang = 100 #number size limit
r = 10 #size of list

for i in range(r):
    L.append(random.randint(0, rang))

def max_list(L):
    max_in_list = L[0]
    for j in range(len(L)):
        if max_in_list == rang:         #if max_in_list is the highest it can be it must be the maximum
            return max_in_list
        elif L[j] &gt; max_in_list:      #if tere is a value greater than max_in_list it becomes the new max_in_list
            max_in_list = L[j]
            if j+1 == r:
                return max_in_list
        elif j+1 == r:      #if it reaches the end of the list it must be the largest
            return max_in_list
</code></pre>
<p>My problem comes when trying to remove the largest element in the list one by one (the idea is to also append it to a new list) so for example in the list <code>ls = [1, 2, 3]</code> it should first remove the 3, then the 2 and so on</p>
<pre><code>for k in range(len(L)):
    L.remove(max_list(L))
</code></pre>
<p>The thing is, it seems to be that the list does not update and <code>max_list(L)</code> remains fixed so on the second iteration it will append <code>None</code> (since it was removed in the first iteration) and result in an error: <code>L.remove(max_list(L)) ValueError: list.remove(x): x not in list</code></p>
<p>With the example I gave before (<code>ls = [1, 2, 3]</code>), it would remove the 3 but on the second iteration it will try to remove the 3 instead of 2 (which would be the new max) resulting in an error</p>
<p>When using the inbuilt <code>max()</code> function it seems to work, so I think there is something wrong with the function.</p>
","-1","Question"
"79401406","","<p>I need to call an API interatively, but the api endpoint limits me to 100 calls per minute. I have a list which is used as the data for an API call (I'm using requests to call the API).</p>
<p>Lets say the list has 227 elements. I need to make a separate API call for each element (that's just the way the API endpoint works).</p>
<p>My question is, how do I take the first 100 elements and use them to make 100 individual API calls, then wait for 60 secs, then repeat for the next 100 elements, sleep again for 60secs, then repeat for the last 27 elements?</p>
<p>I'm ok with the API cals themselves. I'm ok with using sleep() to pause the function, and I'm ok processing the response from the API calls.</p>
<p>It's just the breaking up my iterative loop into chunks that I'm struggling with.</p>
<p>My code looks a bit like this:</p>
<pre><code>list_of_data = [{key1:value1, key2:value2, ... key227:value227}]
total_data=len(list_of_data_
for count in range(0, total_data):
    if count &lt;= total_data:  # limit the api calls to the list length
       data = list_of_data[count]  # Pull out the current list element
       count = count + 1  # step counter to the next list element
       url = 'https:api.com/endpoint'
       params = {
                 'param_1': data[key1],
                 'param2': data[key2],
                 ...
                'param227': data[key227]
                 }
        headers = {some headers}

        response = requests.get(url=url,params=params,headers=headers,)
        json = response.json()
        &lt;process the json&gt;
</code></pre>
<p>I'm not looking for you to debug the above. Its just to illustrate what I'm doing. the actual question is, how do I get this to pause every 100 times the API is called, without leaving off the remainder(modulus)?</p>
<p>Many thanks in advance.</p>
","0","Question"
"79403040","","<p>I would like to add columns with sunrise and sunset times for each row of data, each row having a different date and different location. The data frame looks like this but with 1500 rows:</p>
<pre><code>df1 &lt;- data.frame(
ID = c(1, 2, 3, 4), 
date = as.Date(c('2020-09-1', '2020-09-15', '2021-10-05', '2024-08-31')), 
latitude = c(47.555, 46.123, 46.892, 47.598), 
longitude = c(-50.123, -50.456, -50.789, -50.147)
)
</code></pre>
<p>I only know how to get sunrise and sunset time for a list of days with a fixed location as below:</p>
<pre><code>night &lt;- as.data.frame(suncalc::getSunlightTimes(date = list_days,  
                                        lat = y, lon = x,
                                        keep = c('sunrise','sunset'),
                                        tz=&quot;America/St_Johns&quot;))
</code></pre>
<p>I am guessing I need to reiterate the function getSunLightTimes for each row of data but I am not sure how to code this...</p>
<p>Thank you for your help!</p>
","2","Question"
"79403150","","<p>Why does this always print <strong>false</strong>?</p>
<p>I expected a different outcome because the first two items in the <strong>4th</strong> element in <code>List1</code> are <code>61, 64</code> and those match 2 items in the <strong>1st</strong> element of <code>List2</code> which has <code>61, 62, 64, 70</code></p>
<pre><code>List1 = [
    [60, 64, 67],
    [62, 67, 72],
    [62, 66, 69],
    [61, 64, 69],
    [64, 66, 71],
    [63, 66, 71],
]

List2 = [
    [61, 62, 64, 70],
    [60, 61, 62, 63],
    [64, 65, 67, 69],
    [65, 70, 66, 61],
]

for x in List1:             
    is_subset = all([(y in List2) for y in x[0:2]])
    print(is_subset)           

</code></pre>
","-2","Question"
"79404293","","<p>I need help writing a json jolt spec to transform the following into multiple json records with the lists exploded, corresponding to their respective index.</p>
<pre class=""lang-json prettyprint-override""><code>{
  &quot;id&quot;: &quot;test&quot;,
  &quot;name&quot;: &quot;John&quot;,
  &quot;number&quot;: [
    1,
    2,
    3
  ],
  &quot;letter&quot;: [
    &quot;a&quot;,
    &quot;b&quot;,
    &quot;c&quot;
  ]
}
</code></pre>
<p>I have tried the below Spec but this will break apart only 1 list at a time and also doesn't preserve indexing. I end up with 9 records instead of 3. The mappings for the lists needs to be 1 to 1 and keep the other attributes in the record.</p>
<pre class=""lang-json prettyprint-override""><code>[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;@&quot;: &quot;[]&quot;
    }
  },
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;*&quot;: {
        &quot;number&quot;: {
          &quot;*&quot;: {
            &quot;@2,id&quot;: &quot;&amp;3.&amp;1.id&quot;,
            &quot;@2,name&quot;: &quot;&amp;3.&amp;1.name&quot;,
            &quot;@2,letter&quot;: &quot;&amp;3.&amp;1.letter&quot;,
            &quot;@&quot;: &quot;&amp;3.&amp;1.&amp;2&quot;
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;*&quot;: {
        &quot;*&quot;: &quot;&quot;
      }
    }
  },
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;*&quot;: {
        &quot;letter&quot;: {
          &quot;*&quot;: {
            &quot;@2,id&quot;: &quot;&amp;3.&amp;1.id&quot;,
            &quot;@2,name&quot;: &quot;&amp;3.&amp;1.name&quot;,
            &quot;@2,number&quot;: &quot;&amp;3.&amp;1.number&quot;,
            &quot;@&quot;: &quot;&amp;3.&amp;1.&amp;2&quot;
          }
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;*&quot;: {
        &quot;*&quot;: &quot;&quot;
      }
    }
  }
]
</code></pre>
<p>This is the result from running the above.</p>
<pre class=""lang-json prettyprint-override""><code>[
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 1,
    &quot;letter&quot;: &quot;a&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 1,
    &quot;letter&quot;: &quot;b&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 1,
    &quot;letter&quot;: &quot;c&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 2,
    &quot;letter&quot;: &quot;a&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 2,
    &quot;letter&quot;: &quot;b&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 2,
    &quot;letter&quot;: &quot;c&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 3,
    &quot;letter&quot;: &quot;a&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 3,
    &quot;letter&quot;: &quot;b&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 3,
    &quot;letter&quot;: &quot;c&quot;
  }
]
</code></pre>
<p>The result I wish for is below:</p>
<pre class=""lang-json prettyprint-override""><code>[
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 1,
    &quot;letter&quot;: &quot;a&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 2,
    &quot;letter&quot;: &quot;b&quot;
  },
  {
    &quot;id&quot;: &quot;test&quot;,
    &quot;name&quot;: &quot;John&quot;,
    &quot;number&quot;: 3,
    &quot;letter&quot;: &quot;c&quot;
  }
]
</code></pre>
<p>Hopefully what I am trying to do makes sense. Any help would be greatly appreciated.</p>
","1","Question"
"79405884","","<p>how to create a mutable state for a list in jetpack compose properly
i got this problem about &quot;cannot access kotlin.collections.mutableList&quot;</p>
<p>the error in this line</p>
<pre><code>inputs = inputs + name
</code></pre>
<pre><code>@Composable
fun CreateBar(){
    var name by remember { mutableStateOf(&quot;&quot;) }
    val inputs = remember { mutableStateListOf&lt;String&gt;() }
    Column {
        Row( modifier = Modifier
            .fillMaxWidth()
            .padding(20.dp , 60.dp),
            horizontalArrangement = Arrangement.Center,
            verticalAlignment = Alignment.CenterVertically)
        {
            TextField(
                value = name,
                onValueChange = { text : String -&gt;
                    name = text
                }
            )
            Button(
                onClick = {
                        inputs = inputs + name
                }
            ) {
                Icon(
                    imageVector = Icons.Default.Search,
                    contentDescription = null,
                    modifier = Modifier
                        .height(45.dp)
                )
            }
        }
        LazyColumn {
            items(inputs){ input -&gt;
                Text(&quot;this is&quot;+input)
            }
        }
    }

}
</code></pre>
","-1","Question"
"79406869","","<p>Python query. why does req1 end up being the same as req2? How do I preserve req1 with 3 original values? I would have thought req1 would still be [23,24,25]
the following code displays
[[23, 24, 25, 26], [23, 24, 25, 26]]
``</p>
<pre><code>req1 = [23,24,25]
req2 = req1
req2.append(26)
op = [[],[]]
op[0] = req2
op[1] = req1
print(op)
</code></pre>
<p>``</p>
","-3","Question"
"79411048","","<p>I have the following function in my script. Unity throws the following error:</p>
<blockquote>
<p>MissingReferenceException: The object of type 'UnityEngine.GameObject' has been destroyed but you are still trying to access it.
Your script should either check if it is null or you should not destroy the object.</p>
</blockquote>
<p>I don't understand why I'm getting the error as I'm removing the object from the list before destroying it.</p>
<pre><code> float chunkLength = 10f;
   

    void Update()   
       {
          MoveChunks();
        }

    void MoveChunks()
        {
            // move each chunk in the chunk list backwards
            for (int i = 0; i &lt; chunksList.Count; i++)
            {
               
                chunksList[i].transform.Translate(-transform.forward * (chunkSpeed * Time.deltaTime));
    
                // destroy the chunk if it goes behind the camera
                if (chunksList[i].transform.position.z &lt;= Camera.main.transform.position.z - chunkLength)
                {
                    chunksList.Remove(chunksList[i]);
                    Destroy(chunksList[i]);
                }
            }
    
        }


 
</code></pre>
","-1","Question"
"79412559","","<p>I have two sets of data:</p>
<p>The first data frame (<code>small</code>) is relatively smaller than the second data frame (<code>large</code>). Each data frame has an <code>id</code> column with unique identifiers. The smaller data frame has a list column called <code>links</code>, which contains a list of links to the larger second data frame. The larger data frame has a column of attributes, we'll call <code>att</code>:</p>
<pre><code>library(tidyverse)

a &lt;- c(3, 3, NA, 5)
b &lt;- c(NA, 3, 4, 5)

small &lt;- tibble(id = c(1, 2),
                links = list(a, b))

large &lt;- tibble(id = c(3, 4, 5),
                att = c(&quot;yes&quot;, &quot;no&quot;, &quot;maybe&quot;))
</code></pre>
<p>My goal is to count the number of times each observation in the <code>small</code> data frame has links to observations with the <code>&quot;yes&quot;</code> attribute in the <code>large</code> data frame.</p>
<p>I feel like something like this is on the right track, but it isn't quite counting correctly:</p>
<pre class=""lang-r prettyprint-override""><code>counted &lt;- small %&gt;%
  mutate(count_yes = map_int(links, ~ sum(large$att[large$id %in% .x] == &quot;yes&quot;)))

print(counted)
#&gt; # A tibble: 2 × 3
#&gt;      id links     count_yes
#&gt;   &lt;dbl&gt; &lt;list&gt;        &lt;int&gt;
#&gt; 1     1 &lt;dbl [4]&gt;         1
#&gt; 2     2 &lt;dbl [4]&gt;         1
</code></pre>
<p>Here, <code>count_yes</code> appears as only 1, when it should read as a 2 and a 1.</p>
","4","Question"
"79412815","","<p>I am trying to generate a list of unique pairs from two ranges. I then want to use this list of unique pairs as part of a URL in a loop to download a large batch of data.</p>
<p>I have managed to generate my ranges, and a list of lists combining my two ranges, then a list of unique combinations of my values...but I don't know how to plug this into a loop that uses my code block.</p>
<pre><code># Going to try and construct a list of lists or table from the range of tile coordinates we need to pull, then we can try to loop through it
# Create ranges
range1 = range(634797, 634876)
range2 = range(776458, 776512)

# Create a list of lists
table_data = [
    [&quot;Range 1&quot;, &quot;Range 2&quot;],
    [range1, range2],
    [list(range1), list(range2)]  # Convert ranges to lists for printing
]

# Print the table
for row in table_data:
    print(row)

# Ok this gives us two lists that contain all of our unique tile coordinates, lets try and generate all the unique combinations

combinations = []
for x in range1:
    for y in range2:
        combinations.append((x, y))
length = len(combinations)
print(&quot;The count is: &quot; + str(length))
print(combinations)

# Getting there, combinations now has our full unique list of pairs, need to figure out how to iterate through the combinations in our functional code block
</code></pre>
<p>Here is the code that I want to modify to loop while plugging my unique pairs into the two variables I have declared. I tried to setup the variables for the URL, and the file, but don't understand how to bring this all together.</p>
<pre><code>#This is our functional version, we will modify it to loop through a batch of rasters

import requests

myVal1 = 
myVal2 =

url = &quot;https://api.nearmap.com/tiles/v3/surveys/6e33c960-4310-11ee-90f9-b3c1b4806389/North/21/&quot; + str(myVal1) + &quot;/&quot; + str(myVal2) + &quot;.jpg?apikey=MYKEY&quot;

headers = {&quot;accept&quot;: &quot;image/*&quot;}

response = requests.get(url, headers=headers)

print (response.status_code)

if response.status_code== 200:
       with open('/arcgis/home/nearmap/' + str(myVal1) + str(myVal2) +'.jpg', 'wb') as myImage:
            myImage.write(response.content)
</code></pre>
","-1","Question"
"79413934","","<p>My data consists of 4 columns.
They are Name, Age, Seq_1, Seq_2.</p>
<p>For a row (an instance) in my data, its Name and Age are in string and integer, respectively.
Seq_1 is an array of numbers. It can be float or integer.
Different rows can have Seq_1 with different lengths.
Same applies for Seq_2.</p>
<p>I have stored the whole table in DataFame, as <code>df</code>.</p>
<pre><code>&gt; type(df), type(df.Seq_1), type(df.loc[0].Seq_1)
(pandas.core.frame.DataFrame, pandas.core.series.Series, list)

</code></pre>
<p>I try to write/ read <code>df</code> from/to csv using</p>
<pre><code>df = pd.read_csv(&quot;../data/df.csv&quot;, low_memory=False)
df.to_csv(&quot;../data/df.csv&quot;, index=False)
</code></pre>
<p>The problem is:
After I write/ read <code>df</code>, the nature of list of numbers of <code>df.loc[0].Seq_1</code> is lost.
Before write/ read, I can access the entry in <code>df.loc[0].Seq_1</code> by <code>df.loc[0].Seq_1[0]</code>.
After write/ read, it seems <code>df.loc[0].Seq_1</code> is casted into string. <code>df.loc[0].Seq_1[0]</code> returns the first character.</p>
<p>For example,
before write/ read, <code>df.loc[0].Seq_1[0]</code> returns <code>-2</code>.
after write/ read, <code>df.loc[0].Seq_1[0]</code> returns <code>-</code>.</p>
<p>Thanks in advance.</p>
","0","Question"
"79414652","","<h2>Scenario</h2>
<p>I am making a prototype TCG project in Unity3D. I have a list of custom type <code>CardDetails</code>.</p>
<pre><code>List&lt;CardDetails&gt; cards;
</code></pre>
<p>CardDetails.cs includes attributes of card like following.</p>
<pre><code>public Class CardDetails {
    public int cost;
    public string name;
    public int power;
    // and so on
}
</code></pre>
<p>In UI, I have setup a sort and filter options with bunch of <code>toggles/radio button</code> and to sort the cards I am using an <code>else if</code> ladder like following.</p>
<pre><code>if(sortByName.isOn) { // sortByName is a UI toggle and isOn returns true if it is checked
    var sortedCards = cards.OrderBy(card =&gt; card.name);
}
else if(sortByCost.isOn) {
    var sortedCards = cards.OrderBy(card =&gt; card.cost);
}
// And so on
</code></pre>
<p>And it is working just fine but I don't want a big else if ladder. CardDetails will have a lot of attributes in a future and I don't want to come back to the script and append conditions here. Therefore I was wondering is there any better way to achieve this?</p>
<h2>What I want/tried</h2>
<p>I have tried following to make the code somewhat dynamic</p>
<pre><code>// this will be updated based on sort parameters like name, cost etc
string fieldName;
var sortedCards = cards.OrderBy(card =&gt; card.GetType().GetField(fieldName));
</code></pre>
<p>However it is not working as intended, it just returns the original list for some reason. Any help or pointers will be appreciated.
Thanks.</p>
","0","Question"
"79415944","","<p>I'd like to try and pull all files in my working directory that don't begin with the string &quot;CONVERTED&quot; -- so I'd like for <code>list.files()</code> to find &quot;x.csv&quot; but not &quot;CONVERTEDx.csv&quot; (my program will write a .csv file later that has that naming convention).</p>
<p>I tried:</p>
<pre><code>x &lt;- list.files(pattern = &quot;^(!CONVERTED)*.csv&quot;)
</code></pre>
<p>This creates an empty character variable.</p>
","1","Question"
"79418036","","<p>I am trying to modify this list</p>
<pre><code>names = [&quot;Joey Tribbiani&quot;, &quot;Monica Geller&quot;, &quot;Chandler Bing&quot;, &quot;Phoebe Buffay&quot;]
</code></pre>
<p>so that the elements will be in lower case and spaces within the list replaced with an underscore '_'</p>
<p>I tried this:</p>
<pre><code>names = [&quot;Joey Tribbiani&quot;, &quot;Monica Geller&quot;, &quot;Chandler Bing&quot;, &quot;Phoebe Buffay&quot;]
usernames = []

for i in names: 
    usernames = usernames.append(i.replace(&quot; &quot;, &quot;_&quot;))

print(usernames)
</code></pre>
<p>AND this error came up:</p>
<pre class=""lang-none prettyprint-override""><code>---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-96-513b68e18689&gt; in &lt;module&gt;
      4 # write your for loop here
      5 for i in names:
----&gt; 6     usernames = usernames.append(i.replace(&quot; &quot;, &quot;_&quot;))
      7 
      8 

AttributeError: 'NoneType' object has no attribute 'append'
</code></pre>
","-1","Question"
"79421678","","<p>I've been working on a code which will flip the order of elements backwards using 2 functions, for some reason the first function which can normally print out two or more lists with spaces between each element is putting a space between each letter of the flipped list, could you tell me why it's doing so</p>
<pre><code>cities = [[&quot;Miami&quot;, &quot;Atlanta&quot;, &quot;Dallas&quot;, &quot;Los Angeles&quot;], [&quot;New York&quot;, &quot;Chicago&quot;, &quot;Portland&quot;, &quot;Sacramento&quot;]]

def printList(nightwatch):
    for r in nightwatch:  
        for c in r:        
            print(c, end=' ')  
def flipOrder(listy):
    temp = []
    for r in range (len(listy)):
        for c in range (len(listy[r])):
            temp.insert (0, listy[r][c])
    listy = temp
    printList(listy)
    
printList(cities)
print ()
print ()
print ()
flipOrder(cities)
</code></pre>
<p>I've tried implementing the first function into the second as well as messing with the c and r loop, however this usually just causes the code to stop working, ideally i'd like to know why this is processing the list one letter at a time</p>
","-1","Question"
"79422144","","<p>I want to use a secondary list to populate a dropdown column in my Sharepoint list. However, the secondary list contains data I don't want to have pulled over based on the type column.</p>
<p>Imagine tables as follows:</p>
<p>Table 1</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>ID</th>
<th>Location</th>
<th>Description</th>
<th>Category</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>NYC</td>
<td>Junk Goods</td>
<td>?</td>
</tr>
<tr>
<td>2</td>
<td>LA</td>
<td>Apples</td>
<td>?</td>
</tr>
<tr>
<td>3</td>
<td>SF</td>
<td>Cod</td>
<td>?</td>
</tr>
</tbody>
</table></div>
<p>Table 2</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Location</th>
<th>Category Desc</th>
<th>Subcategory</th>
</tr>
</thead>
<tbody>
<tr>
<td>NYC</td>
<td>Air</td>
<td>Plane</td>
</tr>
<tr>
<td>NYC</td>
<td>Air</td>
<td>Helicopter</td>
</tr>
<tr>
<td>NYC</td>
<td>Sea</td>
<td>Boat</td>
</tr>
<tr>
<td>LA</td>
<td>Sea</td>
<td>Boat</td>
</tr>
<tr>
<td>LA</td>
<td>Air</td>
<td>Plane</td>
</tr>
<tr>
<td>SF</td>
<td>Sea</td>
<td>Boat</td>
</tr>
</tbody>
</table></div>
<p>In my case, I need to have the &quot;Category&quot; column in Table 1 lookup the &quot;Category Desc&quot; column from Table 2 but only return those values if the Location columns match in both.</p>
<p>I have looked at the lookup column set up and looked at the calculated columns for the table but those don't have everything I needed. I know you can do this in Excel, but I can't use the Excel structure in SharePoint due to a field in our list that contains an image that can't be transferred to the Excel format.</p>
<p>Any suggestions would be appreciated. Thanks in advance.</p>
","0","Question"
"79422206","","<p>I have a SwiftUI <code>List</code> where each row has a shadow under it, to add a 3D look to it. While the rows look great, the section header text seems to inherit the shadow from the list, and nothing I have tried can remove it.</p>
<p>Screenshot of the effect based on code below:</p>
<p><a href=""https://i.sstatic.net/0SjvA8CY.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/0SjvA8CY.png"" alt=""Screenshot of the shadow effect"" /></a></p>
<p>What I have tried so far:</p>
<ul>
<li>adding the List formatting to a <code>.compositeGroup()</code> and then applying the shadow
<ul>
<li>This had no effect</li>
</ul>
</li>
<li>Setting <code>.textCase()</code> of the SectionHeader to <code>.none</code>
<ul>
<li>this removed all text formatting, but not the shadow from the text</li>
</ul>
</li>
<li>Creating a custom <code>View</code> for the section header with its own formatting
<ul>
<li>This view still inherited the shadow</li>
</ul>
</li>
<li>Adding the shadow to the row view itself
<ul>
<li>This gave all text in the row the shadow, but not the row view</li>
<li>This also continued to be true when applying after a <code>compositeGroup</code> on the view</li>
<li>The shadow did disappear from the Section text however</li>
</ul>
</li>
<li>Adding the shadow in the row class to the <code>HStack</code> the elements are contained in
<ul>
<li>Same effect as above</li>
</ul>
</li>
<li>Removing the Section all together and making a <code>Text</code> view instead
<ul>
<li>This view still inherited the shadow</li>
</ul>
</li>
<li>Setting the <code>.listStyle</code> to <code>PlainListStyle</code> or <code>DefaultListStyle</code> per <a href=""https://stackoverflow.com/questions/67368556/swiftui-prevent-list-in-sheet-from-inheriting-parent-form-styles"">this SO thread</a>
<ul>
<li>had no effect, changed row width</li>
</ul>
</li>
</ul>
<p>I'm at a total loss on what to do.</p>
<p>How do I make the <code>Section</code> text not inherit the shadow formatting on the <code>List</code> view?</p>
<p>Minimal reproducible example:</p>
<pre><code>struct MinReproduceExample: View {
  var body: some View {
    List {
        Section(header: MinReproCell(text: &quot;Section Title&quot;)) {
            MinReproCell(text: &quot;Cell text&quot;)
            //causes shadow on cell text
            //does not create red shadow on cell view itself
                .shadow(color:.red, radius: 5, x:-3, y:3)

        }
    }
    .background(.clear)
    //Must be here to make cell view shadow red.
    //Also causes Section title to be red
    //does not cause cell text to have red shadow
    .shadow(color:.red, radius: 5, x:-3, y:3)
    //scrollContent required to be clear to show shadows of views
    .scrollContentBackground(.hidden)
  }
}

struct MinReproCell: View {
  var text: String
  var body: some View {
      Text(text).foregroundStyle(.black)
  }
}

struct MinReproSection:View {
  var text: String
  var body: some View {
      Text(text)
        .foregroundStyle(.black)
        .font(Font.system(size: 20, weight: .bold))
        .textCase(.none) // has no effect on section text shadow
  }
}
</code></pre>
","1","Question"
"79424131","","<p>This is something that keeps throwing me, I figured out a work around a few weeks back but I forgot:</p>
<pre><code>$l=[System.Collections.Generic.List[string[]]]::new()
$l.Add(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;)
$l.ToString()                                                  #returns ---&gt; System.String[]
&quot;$l&quot;                                                           #returns ---&gt; System.String[]           
 [string]$l                                                  #returns ---&gt; System.String[]       
 $l -join &quot;`n&quot;                                              #returns ---&gt; System.String[]       
</code></pre>
<p>I am expecting something like the following or something else as dictated by the <code>$ofs</code> variable:</p>
<pre><code>one
two
three
</code></pre>
<p>Am on pwsh 7.4</p>
","1","Question"
"79424318","","<p>I seem to have a problem to sort my list (cities and temperatures) from coldest to warmest. Here is the code for the method.</p>
<pre><code>static void bubblesort(List&lt;Stad&gt; städer, int n)
{
    n = städer.Count -1;
    for (int i = 0; i &lt; n; i++)
    {
        int färdigSorterade = n - i;
        for (int j = 0; j &lt; färdigSorterade; j++)
        {
            if (städer[j].Temp &gt; städer[j + 1].Temp);
            {
                string temporär = städer[j].namn;
                städer[j].namn = städer[j + 1].namn;
                städer[j + 1].namn = temporär;

                int tempTemp = städer[j].temp;
                städer[j].temp = städer[j+1].temp;
                städer[j+1].temp = tempTemp;
            }
        }
    }
}
</code></pre>
<p>The class I using is Stad and the two attributes are namn and temp.</p>
<p>I tried to code it from a textbook, in the textbook the example however was for an array/vektor (not 100% sure about the terminology here) but I am using a list and I think that is what makes it &quot;not work&quot;.</p>
<p>When I run the program now it does throw around the cities and their respective tempratures but not in a falling order.</p>
","-4","Question"
"79425895","","<p>I have a list of items which can be any length (but will never contain duplicates of the same item), and a set of N bins which can each hold zero or one item. What's the easiest way to get all possible ways to put the items into the bins? I'm pretty sure I have a recursive solution that would work, but I want to know if there's a simpler option.</p>
<p>Ideally I only need permutations that fill as many bins as possible.</p>
<p>Examples for N = 3:</p>
<pre><code>[A,B] -&gt; [[A,B,_],[A,_,B],[B,A,_],[_,A,B],[B,_,A],[_,B,A]]

[A,B,C,D] -&gt; [[A,B,C],[A,C,B],[B,A,C],[B,C,A],[C,A,B],[C,B,A],
              [A,B,D],[A,D,B],[B,A,D],[B,D,A],[D,A,B],[D,B,A],
              [A,D,C],[A,C,D],[D,A,C],[D,C,A],[C,A,D],[C,D,A],
              [D,B,C],[D,C,B],[B,D,C],[B,C,D],[C,D,B],[C,B,D]]
</code></pre>
","-4","Question"
"79425937","","<p>In <a href=""https://stackoverflow.com/questions/4081217/how-to-modify-list-entries-during-for-loop"">How to modify list entries during for loop?</a>, the general recommendation is that it can be unsafe so don't do it unless you know it's safe. In comments under the first answer @martineau says:</p>
<blockquote>
<p>It [the loop variable] doesn't make a copies. It just assigns the loop variable name to
successive elements or value of the thing being iterated-upon.</p>
</blockquote>
<p>That is the behavior I expect and want, but I'm not getting it. I want to remove trailing <code>None</code>s from each value in the list. My loop variable is modified correctly but the list elements remain unchanged.</p>
<p>How can I get the loop variable <code>fv</code> to be a pointer to the rows of list <code>foo</code>, not a copy of the row?</p>
<p>Extra credit: my code is sucky non-pythonic, so a solution using comprehensions or slices instead of for loops would be preferred.</p>
<pre class=""lang-py prettyprint-override""><code>foo = [
    ['a', 'b', None, None],
    ['c', None, 'e', None],
    ['f', None, None, None]
]

desired = [
    ['a', 'b'],
    ['c', None, 'e'],
    ['f']
]

for fv in foo:
    for v in range(len(fv) -1, 0, -1):
        if fv[v] == None:
            fv = fv[:v]
            print(f' {v:2} {fv}')
        else:
            break
print(foo)
</code></pre>
<p>The output is:</p>
<pre class=""lang-py prettyprint-override""><code>  3 ['a', 'b', None]
  2 ['a', 'b']
  3 ['c', None, 'e']
  3 ['f', None, None]
  2 ['f', None]
  1 ['f']
[['a', 'b', None, None], ['c', None, 'e', None], ['f', None, None, None]]
</code></pre>
","3","Question"
"79434860","","<p>From a string of numbers, no separators, to 2D 9x9 list.  I get stuck on getting the numbers from the string into a 2D 9x9 array/list.  I'm working on a Sudoku solver just to learn Python better.</p>
<pre><code>numbers = '084030001560014000001586704420001070005309802900200043100078005006105407000490000'
</code></pre>
<p>I tried:</p>
<pre><code>list1 = []
for n in numbers:
   for i in range(0,9):
      for j in range(0,9):
        list1[i][j].append(n)
</code></pre>
<p>This gives me a <code>list index out of range</code> error.</p>
<p>Same with this:</p>
<pre><code>list1 = []
for i in range(0,9):
    for j in range(0,9):
        for n in numbers:
            list1[i][j].append(n)
</code></pre>
<p>I tried using a list comprehension, but I don't quite understand that well enough, and if I cannot get the <code>for</code> loops to work, then I probably won't get the comprehension to work.</p>
<p>I have found examples of comprehensions, but like I said, I don't understand them enough for a 2D list.</p>
<p>It seems like this should be really simple, lol!</p>
<p>I see a lot of questions on strings of numbers that are already comma separated, but I have not seen one without commas, yet.</p>
","2","Question"
"79435823","","<p>I'm trying to replace for example [1,2,3,4,5,6]
and replace the 4s and 6s with 2,2 and 2,3 respectively
thus returning [1,2,3,2,2,5,2,3]
Is there an efficient way to do this?</p>
<p>I tried with np.select to little results and couldn't find a lot more</p>
","0","Question"
"79436099","","<p>If I have the following list of list of dicts, is there a way to extract only the int and float items?</p>
<pre><code>res = [
  [
    {
      &quot;tasks_id&quot;: &quot;436f4cd0-9686-4b01-8a82-a24885999183&quot;,
      &quot;qos_level&quot;: &quot;default&quot;,
      &quot;cpu_cores&quot;: 1,
      &quot;memory_mb&quot;: 128.899,
      &quot;storage_mb&quot;: 0,
      &quot;cpu_flops&quot;: 1917778687,
      &quot;gpu_flops&quot;: 0,
      &quot;gpu_memory_mb&quot;: 0,
      &quot;egress_network_bandwidth_gbps&quot;: 2334.232,
      &quot;ingress_network_bandwidth_gbps&quot;: 2334.232,
      &quot;create_time&quot;: &quot;2025-01-08T12:08:55.828355&quot;
    },
    {
      &quot;tasks_id&quot;: &quot;ec9872cb-3b6f-4222-bb31-6aacd2a46ee8&quot;,
      &quot;qos_level&quot;: &quot;default&quot;,
      &quot;cpu_cores&quot;: 1,
      &quot;memory_mb&quot;: 64.34,
      &quot;storage_mb&quot;: 0,
      &quot;cpu_flops&quot;: 12032,
      &quot;gpu_flops&quot;: 0,
      &quot;gpu_memory_mb&quot;: 0,
      &quot;egress_network_bandwidth_gbps&quot;: 1300.3432,
      &quot;ingress_network_bandwidth_gbps&quot;: 1300.3432,
      &quot;create_time&quot;: &quot;2025-01-24T13:23:12.818722&quot;
    },
    {
      &quot;tasks_id&quot;: &quot;4ba1d839-1550-4c2e-bea3-3f1e04871d8e&quot;,
      &quot;qos_level&quot;: &quot;default&quot;,
      &quot;cpu_cores&quot;: 1,
      &quot;memory_mb&quot;: 128,
      &quot;storage_mb&quot;: 0,
      &quot;cpu_flops&quot;: 19177,
      &quot;gpu_flops&quot;: 0,
      &quot;gpu_memory_mb&quot;: 0,
      &quot;egress_network_bandwidth_gbps&quot;: 2334,
      &quot;ingress_network_bandwidth_gbps&quot;: 2334,
      &quot;create_time&quot;: &quot;2025-01-08T12:08:55.828355&quot;
    }
  ]
]
</code></pre>
<p>so that I get something like this:</p>
<pre><code>[
  {
    &quot;cpu_cores&quot;: 1,
    &quot;memory_mb&quot;: 128.899,
    &quot;storage_mb&quot;: 0,
    &quot;cpu_flops&quot;: 1917778687,
    &quot;gpu_flops&quot;: 0,
    &quot;gpu_memory_mb&quot;: 0,
    &quot;egress_network_bandwidth_gbps&quot;: 2334.232,
    &quot;ingress_network_bandwidth_gbps&quot;: 2334.232
  },
  {
    &quot;cpu_cores&quot;: 1,
    &quot;memory_mb&quot;: 64.34,
    &quot;storage_mb&quot;: 0,
    &quot;cpu_flops&quot;: 12032,
    &quot;gpu_flops&quot;: 0,
    &quot;gpu_memory_mb&quot;: 0,
    &quot;egress_network_bandwidth_gbps&quot;: 1300.3432,
    &quot;ingress_network_bandwidth_gbps&quot;: 1300.3432
  },
  {
    &quot;cpu_cores&quot;: 1,
    &quot;memory_mb&quot;: 128,
    &quot;storage_mb&quot;: 0,
    &quot;cpu_flops&quot;: 19177,
    &quot;gpu_flops&quot;: 0,
    &quot;gpu_memory_mb&quot;: 0,
    &quot;egress_network_bandwidth_gbps&quot;: 2334,
    &quot;ingress_network_bandwidth_gbps&quot;: 2334
  }
]
</code></pre>
<p>I can do this below by specifying the specific key names, but I was looking for a more dynamic way to extract key/values that were based on a specific data type incase a new numeric key/value was added:</p>
<pre><code>data = [
    {
        &quot;cpu_cores&quot;: d[&quot;cpu_cores&quot;],
        &quot;cpu_flops&quot;: d[&quot;cpu_flops&quot;],
        &quot;memory_mb&quot;: d[&quot;memory_mb&quot;],
        &quot;storage_mb&quot;: d[&quot;storage_mb&quot;],
        &quot;network_bandwidth_gbps&quot;: d[&quot;egress_network_bandwidth_gbps&quot;]
        + d[&quot;ingress_network_bandwidth_gbps&quot;],
    }
    for d in res
    for d in d
]
</code></pre>
","0","Question"
"79438104","","<p>I have two lists, animal_list and outer_list. animal_list contains dictionaries within the list. outer_list is just a simple list with <strong>exact same elements</strong></p>
<pre><code>animal_list = [{'animal': 'dog', 'color': 'black'},
 {'animal': 'cat', 'color': 'brown'}]

outer_list = ['pet', 'pet']
</code></pre>
<p>How can I combine the two lists to make a nested dictionary within a single list without overwriting each record since the outer key (outer_list) is the exact same. My desired state below</p>
<pre><code>[
{'pet':{'animal': 'dog', 'color': 'black'}}, 
{'pet':{'animal': 'cat', 'color': 'brown'}}
]
</code></pre>
<p>I've tried the following but it just writes the last value since the outer key 'pet' is the same</p>
<pre><code>attempt_list = []
attempt_list.append(dict(zip(outer_list,animal_list)))

Failed output below
[{'pet': {'animal': 'cat', 'color': 'brown'}}]
</code></pre>
<p>I imagine a loop is needed but can't for the life of me figure it out</p>
","2","Question"
"79439151","","<p>I'm newbie with flutter, can someone help me ?
when I choose first dropdown, and choose the second dropdown, and then choose again the first dropdown, i get freeze error,
I'm already set the variable list empty, but still not working, i get error :</p>
<blockquote>
<p>there should be exactly one item with dropdownbutton 's value either zero or 2 or more [DropdownMenuItem]s were detected with the same value</p>
</blockquote>
<p>this my code :</p>
<p>main.dart</p>
<pre><code> import 'package:flutter/material.dart';
    import 'package:perhitungan_pkt_kgb/data.dart';
    
    class HitungPkt extends StatefulWidget {
      const HitungPkt({super.key});
    
      @override
      State&lt;HitungPkt&gt; createState() =&gt; _HitungPktState();
    }
    
    class _HitungPktState extends State&lt;HitungPkt&gt; {
      @override
      Widget build(BuildContext context) {
        return Form(
          child: Column(
            children: [
              _buildDropdown(
                  label: 'Gol',
                  items: Data.gol.cast&lt;Map&lt;String, dynamic&gt;&gt;(),
                  onChanged: (String? newValue) {
                    setState(() {
                      // value dropdown nya kita masukan ke sebuah variabel
                      Data.golValue = newValue;
                      Data.vehicle?.clear();
                      Data.vehicle = Data.cekgol();
                    });
                  }),
    
              if (Data.vehicle != null)
                _buildDropdown(
                    label: 'Vechile',
                    items: Data.vehicle!.cast&lt;Map&lt;String, dynamic&gt;&gt;(),
                    onChanged: (String? newValue) {
                      setState(() {
                        // value dropdown nya kita masukan ke sebuah variabel
                        Data.vehicleValue = newValue;
                      });
                    }),
       ],
          ),
        );
      }
    
      Widget _buildDropdown({
        required String label,
        required List&lt;Map&lt;String, dynamic&gt;&gt; items,
        required void Function(String?) onChanged,
        String? value,
      }) {
        return DropdownButtonFormField&lt;String&gt;(
            decoration: InputDecoration(
              labelText: label,
              hintStyle: const TextStyle(color: Colors.blue),
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(10),
                borderSide: const BorderSide(color: Colors.blue),
              ),
              focusedBorder: OutlineInputBorder(
                borderSide: const BorderSide(color: Colors.blue),
                borderRadius: BorderRadius.circular(10),
              ),
              enabledBorder: OutlineInputBorder(
                borderSide: const BorderSide(color: Colors.blue),
                borderRadius: BorderRadius.circular(10),
              ),
              errorBorder: OutlineInputBorder(
                borderSide: const BorderSide(color: Colors.blue),
                borderRadius: BorderRadius.circular(10),
              ),
            ),
            value: value,
            items: items.map((item) {
              return DropdownMenuItem&lt;String&gt;(
                value: item['value'] as String,
                child: Text(item['label'] as String),
              );
            }).toList(),
            onChanged: onChanged);
      }
    }
</code></pre>
<p>data.dart</p>
<pre><code>class Data{
static const List gol = [
    {'value': 'Car', 'label': 'Car'},
    {'value': 'Bus', 'label': 'Bus'},
    {'value': 'Plane', 'label': 'Plane'}
  ];
  static String? golValue;
  static String? vehicleValue;
  static List? vehicle;
  static List cekgol() {
    if (golValue == 'Car') {
      return [
        {'value': 'car1', 'label': 'car1'},
        {'value': 'car2', 'label': 'car2'},
        {'value': 'car3', 'label': 'car3'},
        {'value': 'car4', 'label': 'car4'},
        {'value': 'car5', 'label': 'car5'}
      ];
    } else if (golValue == 'Bus') {
      return [
        {'value': 'Bus1', 'label': 'Bus1'},
        {'value': 'Bus2', 'label': 'Bus2'},
        {'value': 'Bus3', 'label': 'Bus3'},
        {'value': 'Bus4', 'label': 'Bus4'}
      ];
    } else if (golValue == 'Plane') {
      return [
        {'value': 'Plane1', 'label': 'Plane1'},
        {'value': 'Plane2', 'label': 'Plane2'},
        {'value': 'Plane3', 'label': 'Plane3'},
        {'value': 'Plane4', 'label': 'Plane4'},
        {'value': 'Plane5', 'label': 'Plane5'}
      ];
    } else {
      return [];
    }
  }
}
</code></pre>
","-1","Question"
"79440728","","<p>I have a list <code>lst</code> of objects, say</p>
<p><code>[1,2,3,4,5,6,7,8,9]</code></p>
<p>and I want to break the list into a <code>list()</code> of sublists, divided by the appearance of every <code>item</code> in <code>items</code> say <code>[3,6,9]</code> so that I get</p>
<p><code>list(3:[1,2,3],6:[4,5,6],9:[7,8,9])</code></p>
<p>In other words, I want a function that is similar to <code>strsplit()</code> but for lists instead of strings.</p>
","0","Question"
"79440747","","<p>I am trying to write a Python function to validate whether a given list follows the same structure as a predefined &quot;model&quot; list, which in my particular case is:</p>
<pre><code>model = [
    [&quot;h&quot;, &quot;P12&quot;, &quot;P13&quot;],
    [&quot;P12&quot;, &quot;P23&quot;, &quot;eL&quot;],
    [&quot;P13&quot;, &quot;P23&quot;, &quot;eR&quot;]
]
</code></pre>
<p>In words:</p>
<ul>
<li>The fixed elements <code>&quot;h&quot;</code>, <code>&quot;eL&quot;</code>, and <code>&quot;eR&quot;</code> must appear in different sublists.</li>
<li>The remaining elements (placeholders) - <code>&quot;P12&quot;</code>, <code>&quot;P13&quot;</code>, and <code>&quot;P23&quot;</code> - are arbitrary elements depending on the given list to test.
The order of the elements is irrelevant</li>
<li>Repetition of the elements <code>&quot;h&quot;</code>, <code>&quot;eL&quot;</code>, and <code>&quot;eR&quot;</code> in a sublist are allowed if it fits the model structure.</li>
<li>The string <code>&quot;P12&quot;</code> must be a common element between the list that contains the element <code>&quot;h&quot;</code> and the list that contains the string <code>&quot;eL&quot;</code></li>
<li>The string <code>&quot;P13&quot;</code> must be a common element between the list that contains the element <code>&quot;h&quot;</code> and the list that contains the string <code>&quot;eR&quot;</code></li>
<li>The string <code>&quot;P23&quot;</code> must be a common element between the list that contains the element <code>&quot;eL&quot;</code> and the list that contains the string <code>&quot;eR&quot;</code></li>
</ul>
<p>So, for example:</p>
<pre><code>test_list_1 = [
    [&quot;h&quot;, &quot;a2&quot;, &quot;a3&quot;],
    [&quot;a2&quot;, &quot;a4&quot;, &quot;eL&quot;],
    [&quot;a3&quot;, &quot;a4&quot;, &quot;eR&quot;]
]

&gt; True


test_list_2 = [
[&quot;h&quot;, &quot;h&quot;, &quot;Y&quot;],
[&quot;h&quot;, &quot;Z&quot;, &quot;eL&quot;],
[&quot;Y&quot;, &quot;Z&quot;, &quot;eR&quot;]
]
    
&gt; True


test_list_3 = [
[&quot;h&quot;, &quot;X&quot;, &quot;eL&quot;],
[&quot;X&quot;, &quot;Z&quot;, &quot;eL&quot;],
[&quot;eL&quot;, &quot;Z&quot;, &quot;eR&quot;]
]
    
&gt; True


test_list_4 = [
[&quot;h&quot;, &quot;P1&quot;, &quot;eL&quot;],
[&quot;P1&quot;, &quot;P3&quot;, &quot;P2&quot;], # ❌ there is no list containing &quot;eL&quot;
[&quot;P2&quot;, &quot;P3&quot;, &quot;eR&quot;]
]
    
&gt; False
</code></pre>
<p>I have tried some help with ChatGPT, but the following code is not working properly, and so far, I cannot make it work. This is my code so far with some help of AI:</p>
<pre><code>from collections import defaultdict

def validate_structure(model, test_list):
    fixed_elements = {&quot;h&quot;, &quot;eL&quot;, &quot;eR&quot;}
    model_fixed_positions = {}
    placeholder_mapping = {}
    
    # Step 1: Identify where fixed elements appear in the model
    for i, sublist in enumerate(model):
        for item in sublist:
            if item in fixed_elements:
                model_fixed_positions[item] = i
    
    # Step 2: Identify where fixed elements appear in the test list
    test_fixed_positions = {}
    for i, sublist in enumerate(test_list):
        for item in sublist:
            if item in fixed_elements:
                if item in test_fixed_positions:
                    return False  # Each fixed element must be in a distinct sublist
                test_fixed_positions[item] = i
    
    # Step 3: Ensure fixed elements are in corresponding positions
    if set(model_fixed_positions.keys()) != set(test_fixed_positions.keys()):
        return False  # Missing or extra fixed elements
    
    for key in model_fixed_positions:
        if model_fixed_positions[key] != test_fixed_positions[key]:
            return False  # Fixed elements must appear in the same indexed sublists
    
    # Step 4: Establish and validate placeholder mapping
    for i, (model_sublist, test_sublist) in enumerate(zip(model, test_list)):
        model_placeholders = [x for x in model_sublist if x not in fixed_elements]
        test_placeholders = [x for x in test_sublist if x not in fixed_elements]
        
        if len(model_placeholders) != len(test_placeholders):
            return False  # Different number of elements
        
        for m_item, t_item in zip(model_placeholders, test_placeholders):
            if m_item in placeholder_mapping:
                if placeholder_mapping[m_item] != t_item:
                    return False  # Inconsistent placeholder mapping
            else:
                placeholder_mapping[m_item] = t_item
    
    return True  # Structure matches

# Example usage:
print(validate_structure(model, test_list_2))  # Expected: True, but returns False
</code></pre>
","-1","Question"
"79441566","","<p>I've following goLang code:</p>
<p>I use &quot;github.com/hashicorp/go-tfe&quot; go library</p>
<pre><code>workSpaces, err := tfeClient.Workspaces.List(ctx, orgName, &amp;tfe.WorkspaceListOptions{ListOptions: tfe.ListOptions{PageNumber: 1,PageSize:   100,},})
</code></pre>
<p>I want to get all workspaces for a given Org name and dont want pagination. It should fetch all workspaces irrespective for given Org. Is there any solution?</p>
<p>I tried following:</p>
<p><code>workSpaces, err := tfeClient.Workspaces.List(ctx, orgName, nil)</code></p>
<p>But it returns only 20 org workspaces (as pageSize is not specified, and hence defaults to 20). Max it can fetch 100 par page. I want to fetch all records at once.</p>
","0","Question"
"79444882","","<p>How to check type of implementation? How can you correct the last line so that it compiles and returns true?</p>
<pre class=""lang-java prettyprint-override""><code>List&lt;String&gt; list1 = new ArrayList&lt;&gt;(List.of(&quot;1&quot;, &quot;2&quot;));
List&lt;String&gt; list2 = List.of(&quot;1&quot;, &quot;2&quot;).stream().toList();

list1 instanceof List&lt;String&gt;; // true

list2.getClass().getName(); // java.util.ImmutableCollections$ListN
list2 instanceof java.util.ImmutableCollections; // does not compile
</code></pre>
","2","Question"
"79448739","","<p>Say we have a multi-dimensional list, but with random dimensions, like:</p>
<pre class=""lang-py prettyprint-override""><code>[
    [
        [1, 2, [3, 4]],
        [[5, 6], 7]
    ],
    [8, 9, [10]]
]
</code></pre>
<p>Is there any short way to flatten everything and just get the list <code>[1, 2, ..., 10]</code> ?</p>
<p>I know there's solution for list of lists, such as loops or comprehension list, but here we assume that we don't know the dimensions of the list, and that there can be different levels of nesting lists.</p>
","1","Question"
"79450950","","<p>Can someone explain what is meant by</p>
<blockquote>
<p>Both <code>loc</code> and <code>iloc</code> [in Pandas] are row-first, column-second. This is the opposite of what we do in native Python, which is column-first, row-second.</p>
</blockquote>
<p>Because I thought when accessing arrays or lists of lists, the first index always represents the row:</p>
<pre class=""lang-py prettyprint-override""><code>matrix = [
    [1,2,3], # row 1, index 0
    [4,5,6], # row 2, index 1
    [7,8,9] # row 3, index 2
]
print(matrix[1][2]) # Output = 6
</code></pre>
","1","Question"
"79451369","","<p>Starting to evaluate the <code>nodejs-polars</code> package and I am facing some issues to get access to the functions related to <code>List Datatype</code> inside a <code>DataFrame</code>.
Online help is not providing any entries on these functoins (no Interface for <code>ListNamespace</code>), I looked at the source code and obviously, the declarations of these functions are there.</p>
<p>Anyone can point me to some JS code example to use these functions ?
In python:</p>
<pre class=""lang-py prettyprint-override""><code>df = pl.DataFrame({&quot;a&quot;: [[3, 2, 1], [], [1, 2]]})
df.with_columns(contains=pl.col(&quot;a&quot;).list.contains(1)
</code></pre>
<p>How to do the same thing with <code>nodejs-polars</code> ? All my attempts failed...</p>
<pre class=""lang-py prettyprint-override""><code>let df = pl.DataFrame({&quot;a&quot;: [[3, 2, 1], [], [1, 2]]})
.withColumn(pl.col(&quot;a&quot;).list.contains(1))
&gt;&gt; TypeError: pl.col(...).list.contains is not a function
</code></pre>
<p>Thanks in advance.</p>
","0","Question"
"79453090","","<p>In my app, I have many lists where I want the user to be able to reorder the rows via <code>swipeActions</code>. I also want them to be able to disable <code>editingMode</code> by tapping anywhere on a row in a <code>List</code> (it rarely ever makes sense for me to have an <code>EditingButton()</code> on a <code>Toolbar</code>).</p>
<p>I've created a class called <code>TitleList</code> with the described functionality. It takes in an array of strings, and through a <code>ViewBuilder</code> closure, I can format the array data however I choose. I've mostly accomplished what I'm trying to in the below code:</p>
<pre><code>import SwiftUI

struct HomeView: View
{
    @Environment(\.editMode) private var editMode
    
    @State private var titles: [String] = [&quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;]
    
    var body: some View
    {
        NavigationStack
        {
            VStack
            {
                TitleList(titles: self.$titles)
                {
                    title in
                    
                    NavigationLink(destination: Text(&quot;Test&quot;))
                    {
                        Text(title)
                    }
                    
                    /*title in
                    
                    (Button(action:
                    {
                        print(&quot;Button Pushed&quot;)
                    })
                    {
                        Text(title)
                    }
                    .buttonStyle(PlainButtonStyle())
                    .disabled(self.editMode?.wrappedValue == .active)*/
                }
            }
        }
    }
}

struct TitleList&lt;RowContent: View&gt;: View
{
    @Environment(\.editMode) private var editMode
    
    @Binding var titles: [String]
    
    @State private var isReordering: Bool = false
    
    private let rowContent: (String) -&gt; RowContent
    
    init(titles: Binding&lt;[String]&gt;, @ViewBuilder rowContent: @escaping (String) -&gt; RowContent = { (_: String) in EmptyView() })
    {
        self._titles = titles
        self.rowContent = rowContent
    }
    
    var body: some View
    {
        List
        {
            ForEach(self.titles, id: \.self)
            {
                title in
                
                self.rowContent(title).moveDisabled(!self.isReordering).swipeActions(allowsFullSwipe: false)
                {
                    Button
                    {
                        self.editMode?.wrappedValue = .active
                        self.isReordering = true
                    }
                    label:
                    {
                        Label(&quot;Reorder&quot;, systemImage: &quot;list.bullet&quot;)
                    }
                }
            }
            .onMove
            {
                source, destination in self.titles.move(fromOffsets: source, toOffset: destination)
            }
            .contentShape(Rectangle())
            .allowsHitTesting(self.isReordering)
            .onTapGesture
            {
                if (self.isReordering)
                {
                    withAnimation
                    {
                        self.isReordering = false
                        self.editMode?.wrappedValue = .inactive
                    }
                }
            }
        }
    }
}
</code></pre>
<p>If I have a row with a <code>NavigationLink</code> or <code>Text</code> it works fine. But when I have a row with a Button, .allowsHitTesting(self.isReordering) seems to be blocking the touches to it. If I comment that line out, it works fine, but then lists with <code>NavigationLink</code> don't work. Easy solution is to send in a <code>Bool</code> to <code>TitleList</code> to let it know whether a button will be used or not, but I'm wondering if there is a better way to do this, because there's also a few other side effects of the way I'm doing it:</p>
<p>-To exit editingMode, the user can only tap the component in the row (i.e. the button or whatever) instead of being able to tap anywhere on the row (unless I wrap <code>rowContent</code> in an <code>HStack</code> with a <code>Spacer()</code>).</p>
<p>-Even when I have <code>.allowsHitTesting</code> set to <code>false</code> for a <code>Button</code>, I still have to disable it when in <code>editingMode</code> or else when the user taps the Button, it will do its action instead of shutting off <code>editingMode</code>.</p>
<p>So was wondering if anyone had a cleaner way to shut off editingMode that accounts for all possible UI components that can be in a row.</p>
","0","Question"
"79454518","","<p>I have the following <code>qmd</code> file of bullet lists:</p>
<pre><code>---
title: &quot;lists&quot;
format: html
editor: visual
---


# hello

this is my first sentance of lists:

-   my first list:


```{r bulletlist1, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```



-   this is next

    other lists:

```{r bulletlist2, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```

    $~$

    and the other lists:
    

```{r bulletlist3, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```
</code></pre>
<p>which returns:</p>
<p><a href=""https://i.sstatic.net/26H3m7WM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/26H3m7WM.png"" alt=""enter image description here"" /></a></p>
<p>but i want:</p>
<p><a href=""https://i.sstatic.net/nuiiVKpP.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/nuiiVKpP.png"" alt=""enter image description here"" /></a></p>
<p>Previously in <code>rmd</code>, I have indented the chunks like this (although when I have updated packages it doesn't seem to work anymore even in <code>rmd</code>):</p>
<pre><code>---
title: lists
---

# hello

this is my first sentance of lists:

-   my first list:


    ```{r bulletlist1, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```



-   this is next

    other lists:

    ```{r bulletlist2, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```

    $~$

    and the other lists:
    

    ```{r bulletlist3, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```
</code></pre>
<p>Any suggestions?</p>
<p>thanks</p>
","2","Question"
"79455279","","<p>I've initialized a list of arrays of different dimensions in Python and want to write to the entries of the arrays. If I want to write to the entry <code>list[i, m1, m1, ..., m1, m2, m2, ..., m2]</code> where <code>m1</code> appears <code>n_m1</code> times and <code>m2</code> appears <code>n_m2</code> times, how would I go about doing that, taking <code>n_m1</code> and <code>n_m2</code> as input variables?</p>
<p>I know that if I had fixed <code>n_m1</code> and <code>n_m2</code> I could just type out the index <code>[i, m1, m1, ..., m1, m2, m2, ..., m2]</code> with the exact number of <code>m1</code> and <code>m2</code> that I need, but this is part of a larger for loop and I have those numbers as variables.</p>
<p>Example code:</p>
<pre><code>import numpy as np
m = 10
i_range = 6
list = [np.zeros((m,) * i) for i in range(0,i_range)]
</code></pre>
<p>The above generates a list where the <code>i</code>th entry is a zero array of dimension <code>(m, m, ..., m)</code> where <code>m</code> appears <code>i</code> times.</p>
<p>Running</p>
<pre><code>for i, item in enumerate(list):
    print(&quot;i =&quot;, i, &quot;shape: &quot;, item.shape)
</code></pre>
<p>returns</p>
<pre><code>i = 0 shape:  ()
i = 1 shape:  (10,)
i = 2 shape:  (10, 10)
i = 3 shape:  (10, 10, 10)
i = 4 shape:  (10, 10, 10, 10)
i = 5 shape:  (10, 10, 10, 10, 10)
</code></pre>
<p>What I'm looking for is a way to take take input <code>i</code> and <code>m1, m2, n_m1, n_m2</code> such that <code>n_m1 + n_m2 = i</code>, and write something to the entry <code>list[m1, m1, ..., m1, m2, m2, ..., m2]</code>. Does anyone know of a way to do this?</p>
","0","Question"
"79456675","","<p>In some code from my company, I've read a list initialization:</p>
<pre><code>List&lt;SomeClass&gt; someClassList = new ArrayList&lt;&gt;(Collections.emptyList())
</code></pre>
<p>What does it mean? A list with 0 size initialization?</p>
","2","Question"
"79461133","","<p>I am trying to optimize a piece of code and I saw a lot of time spent into picking a random index out of a list.</p>
<p>Using the following <code>timeit</code>, I am seeing that Get Item against a larger list can take ~3x longer, while generating the random index is constant time:</p>
<pre><code>import timeit
setup = f&quot;&quot;&quot;
import random
test_10m = [x for x in range(10000000)]
test_1m = [x for x in range(1000000)]
test_10k = [x for x in range(10000)]
test_1k = [x for x in range(1000)]
&quot;&quot;&quot;

print(timeit.timeit('test_10m[int(random.random()*10000000)]', number=1000000, setup=setup))
print(timeit.timeit('test_1m[int(random.random()*1000000)]', number=1000000, setup=setup))
print(timeit.timeit('test_10k[int(random.random()*10000)]', number=1000000, setup=setup))
print(timeit.timeit('test_1k[int(random.random()*1000)]', number=1000000, setup=setup))
print(timeit.timeit('int(random.random()*10000000)', number=1000000, setup=setup))
print(timeit.timeit('int(random.random()*1000000)', number=1000000, setup=setup))
print(timeit.timeit('int(random.random()*10000)', number=1000000, setup=setup))
print(timeit.timeit('int(random.random()*1000)', number=1000000, setup=setup))
</code></pre>
<p>Example output (Python 3.8.6):</p>
<pre><code>0.7138307300047018
0.5209437379962765
0.2407058280077763
0.22641731501789764

0.21460772102000192
0.21099105197936296
0.20940051099751145
0.21421014302177355
</code></pre>
<p>I am getting similar results in Python 3.9.21.</p>
<p>Questions:</p>
<ul>
<li><p>How does <a href=""https://wiki.python.org/moin/TimeComplexity"" rel=""nofollow noreferrer"">the wiki</a> claim O(1) for Get Item? Ie. What am I missing?</p>
</li>
<li><p>Is there a faster way to get a random value out of a large list (large&gt;=100000 for now)</p>
</li>
</ul>
","1","Question"
"79461324","","<p>I would like to append each element of a list to each list of a list of lists.</p>
<pre><code>l1 &lt;- list(list(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;),
           list(&quot;d&quot;, &quot;e&quot;, &quot;f&quot;))
l2 &lt;- list(&quot;g&quot;, &quot;h&quot;)
</code></pre>
<p>Expected result :</p>
<pre><code>&gt; l3
[[1]]
[[1]][[1]]
[1] &quot;a&quot;

[[1]][[2]]
[1] &quot;b&quot;

[[1]][[3]]
[1] &quot;c&quot;

[[1]][[4]]
[1] &quot;g&quot;


[[2]]
[[2]][[1]]
[1] &quot;d&quot;

[[2]][[2]]
[1] &quot;e&quot;

[[2]][[3]]
[1] &quot;f&quot;

[[2]][[4]]
[1] &quot;h&quot;
</code></pre>
<p>With lapply, I manage to add the same element to the end of each list.
I guess that a combination of lapply and do.call would do the trick but I can get it to work as expected.</p>
<pre><code>l3 &lt;- lapply(l1, function(x) do.call(append, list(x,l2)))
# this append both &quot;g&quot; and &quot;h&quot; to each list : 
l3
[[1]]
[[1]][[1]]
[1] &quot;a&quot;

[[1]][[2]]
[1] &quot;b&quot;

[[1]][[3]]
[1] &quot;c&quot;

[[1]][[4]]
[1] &quot;g&quot;

[[1]][[5]]
[1] &quot;h&quot;


[[2]]
[[2]][[1]]
[1] &quot;d&quot;

[[2]][[2]]
[1] &quot;e&quot;

[[2]][[3]]
[1] &quot;f&quot;

[[2]][[4]]
[1] &quot;g&quot;

[[2]][[5]]
[1] &quot;h&quot;
</code></pre>
<p>Any idea?</p>
","7","Question"
"79462453","","<p>I have a class <code>TitleList</code> that allows the user to reorder its rows via swipe action. Once they're done reordering, they can tap anywhere on the UI (outside of the list ordering icons) to disable <code>editingMode</code>. In certain instances, I want the class that contains the <code>TitleList</code> to be able to disable <code>editingMode</code> (like if the user taps a button to launch a <code>.sheet</code>).</p>
<p>However, when I declare <code>@Environment(\.editMode) private var editMode</code> in the containing class and try to do s<code>elf.editMode?.wrappedValue = .inactive</code> after a button is pushed, the change does not propogate to <code>TitleList</code> and editing mode is not disabled. Specifically, nothing happens in <code>TitleList</code>'s</p>
<pre><code>.onChange(of: self.editMode?.wrappedValue) { oldValue, newValue in
    if newValue == .inactive {
        self.isReordering = false
    }
}
</code></pre>
<p>Does anyone know why this is not working? Is it a bug? Here is the full code:</p>
<pre><code>import SwiftUI

struct HomeView: View {
    @Environment(\.editMode) private var editMode
    @State private var sheetIsPresented = false
    @State private var titles: [String] = [&quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;]

    var body: some View {
        NavigationStack {
            VStack {
                List {
                    TitleList(titles: $titles)
                }
                .toolbar {
                    ToolbarItem(placement: .navigationBarTrailing) {
                        Button {
                            editMode?.wrappedValue = .inactive
                        } label: {
                            Label(&quot;Plus&quot;, systemImage: &quot;plus&quot;)
                        }
                    }
                }
            }
        }
        .onChange(of: editMode?.wrappedValue) { _, _ in
            print(&quot;Worked&quot;)
        }
    }
}

struct TitleList: View {
    @Binding var titles: [String]
    @Environment(\.editMode) private var editMode
    @State private var isReordering = false

    var body: some View {
        ForEach(titles, id: \.self) { title in
            NavigationLink(destination: Text(&quot;Test&quot;)) {
                Text(title)
            }
            .moveDisabled(!isReordering)
            .swipeActions(allowsFullSwipe: false) {
                Button {
                    editMode?.wrappedValue = .active
                    isReordering = true
                } label: {
                    Label(&quot;Reorder&quot;, systemImage: &quot;list.bullet&quot;)
                }
            }
            .contentShape(Rectangle())
            .highPriorityGesture(
                TapGesture().onEnded {
                    if isReordering {
                        withAnimation {
                            editMode?.wrappedValue = .inactive
                        }
                    }
                },
                isEnabled: isReordering
            )
        }
        .onMove { source, destination in
            titles.move(fromOffsets: source, toOffset: destination)
        }
        .contentShape(Rectangle())
        .onChange(of: editMode?.wrappedValue) { _, newValue in
            print(&quot;Test&quot;)
            if newValue == .inactive {
                isReordering = false
            }
        }
    }
}
</code></pre>
","0","Question"
"79463169","","<p>I have a list made by strings, correctly cleaned (<code>split(',')</code> can be safely used), and correctly sorted depending on numbers. As a small example:</p>
<pre><code>l = ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4', 'C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8', 'C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']
</code></pre>
<p>What I'm trying to achieve is to create as many sublists that start and end with <em>single</em> strings, that is:</p>
<pre><code>[
    ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4'],
    ['C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8'],
    ['C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']
]
</code></pre>
<p>I thought to add some logic like the following code, but I'm not sure if I'm on the correct way:</p>
<pre><code>tl = []

for i in l:
    
    # just get the variable
    val = i
    
    tl.append(val)
    
    # split by ,
    val_split = len(i.split(','))  
    
    # check if the value is the first element of the list (C1)
    if val == l[0]:
        print(1, val)
    # check if the split of the character is longer than 2 (C1,C2)
    elif val_split &gt; 1:
        print(2, val)
    # check is the split of the character siis equalt to 1 (C4)
    elif val_split == 1:
        # here the code should compare if the character is equal to the last value of the nested list. If yes go with teh next value (C5)
        if val != tl[-1]:
            print(3, val)
        else:
            print(4, val)
</code></pre>
","2","Question"
"79467726","","<p>I am working in Polars and I have data set where one column is lists of strings.  To see what it's like:</p>
<pre><code>import pandas as pd

list_of_lists = [['base', 'base.current base', 'base.current base.inventories - total', 'ABCD']
                  , ['base', 'base.current base', 'base.current base.inventories - total','ABCD']
                  , ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD']
                  , ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD']]

pd_df = pd.DataFrame({'lol': list_of_lists})
</code></pre>
<p>Gives:</p>
<pre><code>    lol
0   ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD']
1   ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD']
2   ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD']
3   ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD']
</code></pre>
<p>I want to hash each list. I thought to cast each list as a string and then hash it.  I can do that with Pandas</p>
<pre><code>pd_df = pd.DataFrame({'lol': list_of_lists}).astype({'lol':str})
pl_df_1 = pl.DataFrame(pd_df)
pl_df_1.with_columns(pl.col('lol')
                    .hash(seed=140)
                    .name.suffix('_hashed')
                    )
</code></pre>
<p>Gives:</p>
<pre><code>               lol                  lol_hashed
               str                   u64
&quot;['base', 'base.current base', …    14283628883798345624
&quot;['base', 'base.current base', …    14283628883798345624
&quot;['base', 'base.current base', …    14283628883798345624
&quot;['base', 'base.current base', …    14283628883798345624
</code></pre>
<p>But if I try to do similar in Polars I get an error:</p>
<pre class=""lang-py prettyprint-override""><code>pl_df_2 = pl.DataFrame({'lol': list_of_lists})
pl_df_2.with_columns(pl.col('lol') # &lt;== can insert .cast(pl.String) here still get error
                    .hash(seed=140)
                    .name.suffix('_hashed')
                    )
</code></pre>
<p>Gives:</p>
<pre><code># PanicException: Hashing a list with a non-numeric inner type not supported. 
#   Got dtype: List(String)
</code></pre>
<p>I would prefer to work just with the Polars library so is it possible to cast the column of lists as strings or is there a better way in Polars of achieving the same result?</p>
<p>UPDATE:</p>
<p>Based on the accepted answer I experimented further.</p>
<pre><code>list_of_lists = [
                 ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD'], 
                 ['base', 'base.current base', 'base.current base.inventories - total', 'DEFG'], 
                 ['base', 'base.current base', 'base.current base.inventories - total', 'ABCD'], 
                 ['base', 'base.current base', 'base.current base.inventories - total', 'HIJK'], 
                 '(bobbyJoe460)',
                 'bobby, Joe (xx866e)',
                 137642039575
                 ]

pl_df_1 = pl.DataFrame({'lol': list_of_lists}, strict=False)  # &lt;==== allow mixed types in column
pl_df_1.with_columns(pl.col('lol')
                     .cast(pl.Categorical)  # &lt;==== cast to Categorical
                     .hash(seed=140)
                     .name.suffix('_hashed')
                     )
</code></pre>
<p>Gives:</p>
<pre><code>                 lol.               lol_hashed
                 str                    u64
&quot;[&quot;base&quot;, &quot;base.current base&quot;, …    11231070086490249882
&quot;[&quot;base&quot;, &quot;base.current base&quot;, …    6519339301964281776
&quot;[&quot;base&quot;, &quot;base.current base&quot;, …    11231070086490249882
&quot;[&quot;base&quot;, &quot;base.current base&quot;, …    14549859594875138034
&quot;(bobbyJoe460)&quot;                     1954884316252525743
&quot;bobby, Joe (xx866e)&quot;               4241414284122449899
&quot;137642039575&quot;                      6383308039250228053
</code></pre>
","2","Question"
"79467770","","<p>There are the two following classes with an One-to-many-Relationship between in my App:</p>
<pre><code>class Lesson: Object, Identifiable {
   @Persisted(primaryKey: true) var id: ObjectId
   @Persisted var name: String
   @Persisted var pupils: List&lt;Pupil&gt;
}

class Pupil: Object, Identifiable {
   @Persisted(primaryKey: true) var id: ObjectId
   @Persisted var firstname: String
   @Persisted var lastname: String
   @Persisted(originProperty: &quot;pupils&quot;) var lesson: LinkingObjects&lt;Lesson&gt;
}
</code></pre>
<p>I've implemented a view with a list of all existing lessons. It's possible to add new lessons and to delete them again. Each of the lessons is a <code>NavigationLink</code> to another view where all pupils of the selected lesson should be listed. There's a sheet (as separate view) for adding new pupils to this list, too. The action of the &quot;Save-Button&quot; in this view is the following:</p>
<pre><code>.toolbar {
   ToolbarItem(placement: .confirmationAction) {
      Button(&quot;Save&quot;) {
         let newPupil = Pupil()
         newPupil.lastname = self.lastname
         newPupil.firstname = self.firstname
                
         try? realmService.localRealm.write {
            selectedLesson.pupils.append(neuerSchueler)
         }
         showModal = false
      }
   }
}
</code></pre>
<p>The <code>selectedLesson</code> is the lesson-object the new pupil should be added.</p>
<p>But there's the following error (a lot of lines following):</p>
<blockquote>
<p>*** Terminating app due to uncaught exception 'RLMException', reason: 'Cannot modify List outside of a write transaction.'</p>
</blockquote>
<p>I've tried some other variants as well. For example:</p>
<pre><code> let newPupil = Pupil()
 newPupil.lastname = self.lastname
 newPupil.firstname = self.firstname
                
 try? realmService.localRealm.write {
    selectedLesson.pupils.append(newPupil)
    realmService.localRealm.add(selectedPupil, update: Realm.UpdatePolicy.all)
 }
</code></pre>
<p>But the error is the same.</p>
<p>Can you help me, please. Thanks in advance!</p>
","0","Question"
"79468225","","<p>I have a list</p>
<pre><code>{1 2}
{2 3}
{3 4}
{4 5}
{}
{}
{6 7}
</code></pre>
<p>I am trying to do an expression but due the {} empty string, the code below cannot handle it. How should I code it so that, the tool will ignore the empty string in the list?</p>
<pre><code>for {set i 0} {$i &lt; 1} {incr i} {
if {3000 - [lindex $list $i 0] &gt; 2600} {
puts &quot;WARNING&quot;
}}
</code></pre>
<p>Output:</p>
<pre><code>WARNING
WARNING
WARNING 
</code></pre>
","1","Question"
"79471697","","<p>What is this declaration?</p>
<p>lists are declared using <code>[</code> but these contain key-value pairs as seen with the use of <code>{}</code>. It's confusing. list with <code>{}</code> brackets with a pair of two items forming one.</p>
<pre class=""lang-py prettyprint-override""><code>players = [
    {&quot;name&quot;: &quot;Rolf&quot;, &quot;numbers&quot;: {1, 3, 5, 7, 9, 11}},
    {&quot;name&quot;: &quot;Charlie&quot;, &quot;numbers&quot;: {2, 7, 9, 22, 10, 5}},
    {&quot;name&quot;: &quot;Anna&quot;, &quot;numbers&quot;: {13, 14, 15, 16, 17, 18}},
    {&quot;name&quot;: &quot;Jen&quot;, &quot;numbers&quot;: {19, 20, 12, 7, 3, 5}}
]
</code></pre>
<p>How does <code>player in players</code> have a <code>&quot;numbers&quot;</code> index?</p>
<pre class=""lang-py prettyprint-override""><code>for player in players:      # Go over each player
    matched_numbers = len(player[&quot;numbers&quot;].intersection(lottery_numbers))
</code></pre>
<p>and how does the <code>len</code> function work?</p>
","-5","Question"
"79472283","","<p>I need to combine interconnected list elements to form distinct elements in base R with no additional packages required (while removing NA and zero-length elements).</p>
<p><strong>Edit:</strong> I look for flexibility of data types (character, numeric etc), lists below augmented.</p>
<p>The lists:</p>
<pre><code>list(c(1),c(1,2),c(1,2),c(2,3,4),c(8,9,10),c(10,11),c(NA))
list(c(&quot;a&quot;),c(&quot;a&quot;,&quot;b&quot;),c(&quot;a&quot;,&quot;b&quot;),c(&quot;b&quot;,&quot;c&quot;,&quot;d&quot;),c(&quot;h&quot;,&quot;i&quot;,&quot;j&quot;),c(&quot;j&quot;,&quot;k&quot;),c(NA))
</code></pre>
<p>...should become:</p>
<pre><code>list(c(1,2,3,4),c(8,9,10,11))
list(c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;),c(&quot;h&quot;,&quot;i&quot;,&quot;j&quot;,&quot;k&quot;))
</code></pre>
<p>This is my solution so far which seem to work well:</p>
<pre><code>ml &lt;- list(c(1),c(1,2),c(1,2),c(2,3,4),c(8,9,10),c(10,11),c(NA))
# Remove duplicates
ml &lt;- ml[!duplicated(ml)]
# Combine connected list elements
for (l1 in seq(1,length(ml))){
  for (l2 in seq(1,length(ml))){
    if (l1 != l2){
      if(any(ml[[l2]] %in% ml[[l1]])){
        ml[[l1]] &lt;- sort(unique(c(ml[[l1]],ml[[l2]])))
        ml[[l2]] &lt;- NA
      }
    }
  }
}
# Clean up list (remove NA, and zero-length elements)
ml &lt;- Filter(Negate(anyNA), ml)
ml &lt;- ml[lapply(ml, length)&gt;0]
</code></pre>
<p>Is there any way to achieve the required result with fewer lines of code?</p>
","3","Question"
"79476133","","<p>So, in a tab, i'm displaying a list of <strong>Friends</strong>, when selecting one of the friends, the data should go to another list <strong>Participants</strong>.</p>
<p><a href=""https://i.sstatic.net/U1mUVLED.jpg"" rel=""nofollow noreferrer"">Friends and Participants list</a></p>
<p>It works fine until you try to add another friend to the <strong>Participants</strong>.
It just rewrites the last friend with the one just selected.</p>
<pre><code>//imports...
Const Create = () {

   //code for Friends list

   let listParticipants = [];
   let seeParticipants = [];
   let [showParticipants, setShowParticipants] = useState([]);
   const addParticipant = (participant) =&gt; {
        if (alreadyParticipant(participant)) return console.log(&quot;Participant already&quot;);
        seeParticipants.push(participant.accountId2);

        listParticipants.push(
            &lt;TouchableOpacity&gt;
                &lt;FriendCardAvatar key={key++} friend={participant} /&gt;
            &lt;/TouchableOpacity&gt;
        );
        setShowParticipants(listParticipants);
    }
}

return (
    &lt;View&gt;
        //code
        {showFriends}
    &lt;/View&gt;
    
    &lt;View&gt;
        //code
        {showParticipants}
    &lt;/View&gt;
)
</code></pre>
<p>For some reason the whole code before addParticipant() is called  whenever it's called.</p>
<p>This is my first react native project, hope to find a way around the problem.</p>
","-1","Question"
"79477559","","<p>I'm trying to a get a subset of elements of L1, which do not match with any element of another list</p>
<pre><code>&gt;&gt;&gt; L1 = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;date&quot;]
&gt;&gt;&gt; L2 = [&quot;bananaana&quot;, &quot;datedate&quot;]
&gt;&gt;&gt; 
</code></pre>
<p>For instance, from these two lists, I want to create a list ['apple', 'cherry']</p>
<pre><code>&gt;&gt;&gt; [x for x in L1 for y in L2 if x in y]
['banana', 'date']
&gt;&gt;&gt;
</code></pre>
<p>The above nested list comprehension helps to get element which matches, but not other way</p>
<pre><code>&gt;&gt;&gt; [x for x in L1 for y in L2 if x not in y]
['apple', 'apple', 'banana', 'cherry', 'cherry', 'date']  
&gt;&gt;&gt;

          ^^^^^^^^   I was expecting here ['apple', 'cherry']
</code></pre>
","0","Question"
"79477700","","<p>i'm new on python and having some issues about take from a spefcific index to other. EX: i request a input of the name from every parent from the user, and want to print just the name of the brothers, but dont want to describe every index like:
<code>parent = input('Write the name of all your parents: ') print(f'The name of your brothers is {parent[1]}, {parent[2]}, etc...)</code>
i was thinking if has a way to select like <code>print(f'... {parent[1:4]}...')</code>
<strong>PS: i'm from Brazil, so my list is in portuguese.</strong>
My code actually:</p>
<pre><code>familia = input('Digite o nome da sua família! Seus pais, seus irmãos e avós: ')
parentes = familia.split(' ')
print(f'o seu nome é {parentes[0].capitalize()}.')
print(f'o nome do seu pai é {parentes[1].capitalize()}.')
print(f'o nome da sua mãe é {parentes[2].capitalize()}.')
print(f'o nome dos seus irmãos são {parentes [3:8]}.')
print(f'o nome dos seus avós paternos é {parentes [8:10]}.')
print(f'o nome dos seus avós maternos é {parentes [10:12]}.')
quantos_sao = len(parentes)
print(f'a sua familia tem {quantos_sao} pessoas!'.capitalize())
</code></pre>
<p>The 3 firts results are perfect, but when i need select more names goes like this:</p>
<pre><code>o seu nome é Gean,.
o nome do seu pai é Enio,.
o nome da sua mãe é Denise,.
o nome dos seus irmãos são ['valentina,', 'anthony,', 'rafael,', 'caroline,', 'gustavo,'].
o nome dos seus avós paternos é ['ademar,', 'gisela,'].
o nome dos seus avós maternos é ['leonilda,', 'amazir'].
A sua familia tem 12 pessoas!
</code></pre>
<p>Someone, could help me?</p>
","-7","Question"
"79477947","","<p>In python, given a list <code>mylist</code> of lists <code>el</code> of integers, I would like to remove duplicates that are equivalent under specific permutations of the indices.</p>
<p>The question is more general but I have in mind &quot;decorated&quot; <a href=""https://en.wikipedia.org/wiki/McKay_graph"" rel=""nofollow noreferrer"">McKay graphs</a> where each node is given an integer defining <code>el</code> whose sum is equal to a certain number. Generating <code>mylist</code>  is easy enough, but there is a lot of redundancy depending on the symmetry of the graph. For instance, for the &quot;D4&quot; diagram, <code>el</code> represents the following decorated graph:</p>
<pre><code>                                       a
                                       |
    el = [a, b, c, d, e]     &lt;--&gt;    b-c―d
                                       |
                                       e
</code></pre>
<p>The two lists <code>[1,0,4,0,0]</code> and <code>[0,0,4,0,1]</code> are duplicates because there are the same up to a reflection of the graph around the horizontal axis. More generally, the lists <code>el</code> duplicates if there are equivalent under any permutation of <code>a,b,d,e</code>. Is there a simple way of removing duplicates given an arbitrary symmetry?</p>
<p>The way I did it for this particular graph was to sort the indices <code>0,1,3,4</code> and compare:</p>
<pre><code>from itertools import product

def check_duplicate(f, li):

    for l in li:
        if l[2] == f[2] and sorted(l[:2] + l[3:]) == sorted(f[:2] + f[3:]):
            return True

    return False

mylist = [list(i) for i in product(range(5), repeat=5) if sum(i) == 5]

newlist = []
for f in my_list:
    if check_duplicate(f, newlist) == False:
        newlist.append(f)
</code></pre>
<p>Here <code>tmp</code> is generated brute force, but the condition is more involved in my real case.</p>
<p>This works well enough for this particular example, but is a bit clunky, and the implementation is harder to generalize to more involved cases. Is there a way to remove the duplicates in a more optimized way, in particular one that can easily implement removing duplicates given a particular symmetry of the indices of <code>el</code>?</p>
","1","Question"
"79486064","","<p>I've written some code to scrape a webpage, however when I try to make some modifications, I am getting an error. Below is my code</p>
<pre><code>library(httr)
library(jsonlite)
library(dplyr)
library(janitor)
library(data.table)
library(magrittr)
library(tidyverse)

req_url &lt;- &quot;https://stats.nba.com/stats/leaguedashptstats?College=&amp;Conference=&amp;Country=&amp;DateFrom=&amp;DateTo=&amp;Division=&amp;DraftPick=&amp;DraftYear=&amp;GameScope=&amp;Height=&amp;ISTRound=&amp;LastNGames=0&amp;LeagueID=00&amp;Location=&amp;Month=0&amp;OpponentTeamID=0&amp;Outcome=&amp;PORound=0&amp;PerMode=PerGame&amp;PlayerExperience=&amp;PlayerOrTeam=Player&amp;PlayerPosition=&amp;PtMeasureType=PullUpShot&amp;Season=2024-25&amp;SeasonSegment=&amp;SeasonType=Regular%20Season&amp;StarterBench=&amp;TeamID=0&amp;VsConference=&amp;VsDivision=&amp;Weight=&quot;

json &lt;- 
  request(req_url) |&gt;
  req_user_agent(&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36&quot;) |&gt;
  req_headers(
    Accept = &quot;*/*&quot;,
    Origin = &quot;https://www.nba.com&quot;,
    Referer = &quot;https://www.nba.com/&quot;,
  ) |&gt; 
  req_perform() |&gt;
  resp_body_json() 

hdr &lt;- json$resultSets$headers

df &lt;- as.data.frame(do.call(rbind, json$resultSets[[1]][[3]]), stringsAsFactors = FALSE)
hdr &lt;- as.data.frame(do.call(cbind, json$resultSets[[1]][[2]]), stringsAsFactors = FALSE)

names(df) &lt;- as.character(unlist(hdr[1,]))


df %&lt;&gt;% as.data.table()

df[,PTS_pullups_3 := as.numeric(`PULL_UP_FG3M`)*3]
</code></pre>
<p>I am getting the following error when trying to run the very last line</p>
<p>Error in eval(jsub, SDenv, parent.frame()) :
'list' object cannot be coerced to type 'double'</p>
<p>I am confused as to why R is saying object &quot;df&quot; is a list when I have converted it to a dataframe first and then a data table to apply the new column?</p>
<p>**** EDIT *******</p>
<p>I am unable to reply a comment to the suggestion below but when I run</p>
<pre><code>pullups[,PTS_pullups_3 := as.numeric(unlist(`3PM`))*3]
</code></pre>
<p>I get the following error, because there are NULL values in the list. How do I convert these NULL values to 0?</p>
<p>Error in <code>[.data.table</code>(pullups, , <code>:=</code>(PTS_pullups_3, as.numeric(unlist(<code>3PM</code>)) *  :
Supplied 513 items to be assigned to 549 items of column 'PTS_pullups_3'. If you wish to 'recycle' the RHS please use rep() to make this intent clear to readers of your code.</p>
","0","Question"
"79487206","","<p>I am a beginner learning python, trying to accomplish the following:</p>
<p>Given two strings of equal length, e.g:</p>
<p>string_1 = 'Hello'
string_2 = 'World'
print them vertically side by side, with a space between each character:</p>
<pre><code>H W
e o
l r
l l
o d
</code></pre>
<p>however I am encountering an issue with my code where the first and second 'l' in 'Hello' are being treated as the same letter, which is leading to some issues in output</p>
<p>here is my code:</p>
<pre><code>string1 = 'Hello'
string2 = 'World'
indx = ''

for letter in string1:
    indx = int(string1.index(letter))
    print(letter + ' ' + string2[indx])
</code></pre>
<p>it ends up giving the result as shown(area of concern bolded for easier viewing):</p>
<pre><code>H W
e o
l **r**
l **r**
o d
</code></pre>
<p>instead of:</p>
<pre><code>H W
e o
l **r**
l **l**
o d
</code></pre>
<p>My question is how I can modify the code such that it can distinguish between the 2 'l's in 'Hello', or if my code was entirely wrong to begin with. Am not sure how to proceed with this</p>
<p>As I am just starting out I am not sure how to deal with this issue and hope to get some advice on how to rectify the issue and improve the code.Thanks.</p>
","-1","Question"
"79487404","","<p>To easily understand my problem, below is a simplified version of some example input.</p>
<pre class=""lang-py prettyprint-override""><code>['foo', 1, 'a', 'foo', 2, 'foo', 1, 'b', 'foo', -1, 'foo', -1, &quot;bar&quot;, 1, &quot;c&quot;, &quot;bar&quot;, 2, 'baz', 1, 'd', 'baz', -1, &quot;bar&quot;, 3, &quot;e&quot;, &quot;bar&quot;, 4, 'qux', 1, 'stu', 1, 'f', 'stu', -1, 'qux', -1, 'bar', -1]
</code></pre>
<p>(I used &quot;stu&quot; because I ran out of placeholder names.)</p>
<p>The strings are function names (sort of, specifics later). The numbers after the function names specify the position of the argument in the function that follows. A position of -1 closes the function.</p>
<p>For example, <code>['foo',1,'a','foo',2,'b','foo',-1]</code> should be equivalent to <code>foo('a', 'b')</code>.</p>
<p>This should also work when nested:</p>
<pre class=""lang-py prettyprint-override""><code>['foo', 1, 'a', 'foo', 2, 'foo', 1, 'b', 'foo', -1, 'foo', -1]
</code></pre>
<p>should be equivalent to <code>foo('a', foo('b'))</code> and</p>
<pre class=""lang-py prettyprint-override""><code>['bar', 1, 'c', 'bar', 2, 'baz', 1, 'd', 'baz', -1, 'bar', 3, 'e', 'bar', 4, 'qux', 1, 'stu', 1, 'f', 'stu',-1, 'qux', -1, 'bar', -1]
</code></pre>
<p>should be equivalent to <code>bar('c', baz('d'), e, qux(stu('f')))</code>.</p>
<p>My desired function should return a list. For example,</p>
<pre class=""lang-py prettyprint-override""><code>['foo', 1, 'a', 'foo', 2, 'foo', 1, 'b', 'foo', -1, 'foo', -1, 'bar', 1, 'c', 'bar', -1]
</code></pre>
<p>should result in</p>
<pre class=""lang-py prettyprint-override""><code>[['foo', 'a', ['foo', 'b']], ['bar', 'c']]
</code></pre>
<p>Now that the problem is clearer, my actual problem is slightly different. All elements of the list are integers. The function names are not strings, they're sequences of three integers. Thus, <code>['foo',1,'a','foo',2,'b','foo',-1]</code> is actually <code>[1, 1, 1, 1, 104, 1, 1, 1, 2, 105, 1, 1, 1, -1]</code>.</p>
<p>The function names (<code>[1, 1, 1]</code> in the above example) act as dictionary keys. The dictionary (called <code>constructs</code>) looks something like this:</p>
<pre class=""lang-py prettyprint-override""><code>constructs = {
    1: {
        1: {
            1: lambda *chars : print(''.join(chr(char) for char in chars))
        }
    }
}
</code></pre>
<p>So finally, the example should result in something like</p>
<pre class=""lang-py prettyprint-override""><code>[[lambda *chars : print(''.join(chr(char) for char in chars)), 104, 105]]
</code></pre>
<p>All the specifications about nesting and such should all still apply. I have no clue how to reliably and elegantly implement this, please help!</p>
<p>Thanks in advance.</p>
<p>Edit: I forgot to say that <code>0</code> is always ignored and skipped over, and a <code>0</code> following a function call will escape the function call and cause it to be treated as an argument. All of this functionality is implemented to some degree in <a href=""https://www.online-python.com/ObiQuLVxUr"" rel=""nofollow noreferrer"">my attempt so far</a>, but it doesn't work when the same function is nested within itself. It's also inefficient and inelegant, with lots of potential problems, so I took to Stack Overflow for help writing a better one. Feel free to use it as a starting point!</p>
<p>Edit 2: here is the code for my attempt so far:</p>
<pre class=""lang-py prettyprint-override""><code>constructs = {
    1: {
        1: {
            1: print,
        }
    }
}

def parse(code: list) -&gt; list:
    if len(code) &lt;= 1:
        return code
    result = []
    in_function = 0
    for i, token in enumerate(code):
        if in_function &gt; 0:
            in_function -= 1
            continue
        if token == 0:
            continue
        if result and result[-1][0][3] != -1:
            if token in constructs and code[i + 1] in constructs[token] and code[i + 2] in constructs[token][code[i + 1]]:
                if i &lt; len(code) - 4 and code[i + 4] == 0:
                    result[-1][-1].append(token)
                else:
                    if code[i + 3] == result[-1][0][3] + 1:
                        result[-1].append([])
                    result[-1][0] = code[i:i + 4]
                    in_function = 3
            else:
                result[-1][-1].append(token)
        else:
            if token in constructs and code[i + 1] in constructs[token] and code[i + 2] in constructs[token][code[i + 1]]:
                if code[i + 3] == 1:
                    result.append([code[i:i + 4], []])
                    in_function = 3
                else:
                    raise SyntaxError(f'function {code[i:i + 3]} has no previous separator {code[i + 3] - 1}')
            else:
                raise SyntaxError(f'function {code[i:i + 3]} was not recognized')
    for i, function in enumerate(result):
        result[i][0] = constructs[result[i][0][0]][result[i][0][1]][result[i][0][2]]
        for j, argument in enumerate(result[i][1:]):
            result[i][j + 1] = parse(argument)
    return result
</code></pre>
<p>It works for <code>parse([1, 1, 1, 1, 'Hello world', 1, 1, 1, 2, 'etc', 1, 1, 1, -1])</code> but not for <code>parse([1, 1, 1, 1, 1, 1, 1, 1, 'Hello world', 1, 1, 1, -1, 1, 1, 1, 2, 'etc', 1, 1, 1, -1])</code>.</p>
","5","Question"
"79487590","","<p>I'm trying to write a code in python that can remove overlapping lists. My lists are in the format <code>[lower_bound,upper_bound,data,data]</code>. These lists are stored in a larger list. I want to iterate over the larger list, removing any of these smaller lists where the bounds overlap. This is what I have.</p>
<pre><code>def cut_overlapping_ranges(ranges):

  keep_ranges = []
  temp_ranges = ranges

  for range_1 in temp_ranges:
    keep_ranges.append(range_1)
    for range_2 in temp_ranges:
      if range_1 != range_2:
        if ((range_1[0] &lt; range_2[0] &lt; range_1[1]) or (range_1[0] &lt; range_2[1] &lt; range_1[1])):
          temp_ranges.remove(range_2)
  return
</code></pre>
","-1","Question"
"79490043","","<p>I have the following python code using regex that finds the substrings &quot;¬[&quot;, &quot;[&quot;, &quot;¬(&quot;, &quot;(&quot;, &quot;)&quot;, &quot;]&quot; and get their positions
(I transformed the &quot;¬[&quot; and &quot;¬(&quot; into &quot;[&quot; and &quot;(&quot;)</p>
<pre><code>import re

expression = &quot;¬[P∧¬(¬T∧R)]∧(T→¬P)&quot;
# [[0 &quot;¬[&quot;], [4 &quot;¬(&quot;], [13 &quot;(&quot;], [10 &quot;)&quot;], [18 &quot;)&quot;], [11 &quot;]&quot;]]

lsqb = [[match.start(), &quot;[&quot;] for match in re.finditer(&quot;\¬\[|\[&quot;, expression)]
lpar = [[match.start(), &quot;(&quot;] for match in re.finditer(&quot;\¬\(|\(&quot;, expression)]
rpar = [[match.start(), &quot;)&quot;] for  match in re.finditer(&quot;\)&quot;, expression)]
rsqb = [[match.start(), &quot;]&quot;] for match in re.finditer(&quot;\]&quot;, expression)]
all = lsqb + lpar + rpar + rsqb

print(lsqb) # [[0, '[']]
print(lpar) # [[4, '('], [13, '(']]
print(rpar) # [[10, ')'], [18, ')']]
print(rsqb) # [[11, ']']]

print(all) # [[0, '['], [4, '('], [13, '('], [10, ')'], [18, ')'], [11, ']']]

</code></pre>
<p>The issue is that I'm iterating over the string 4 times (once for each type of parentheses I want to find the position of... )
I'd like to get rid of all those parentheses variables and just have the &quot;all&quot; one while iterating only once over the string and still getting:
[[0, '['], [4, '('], [13, '('], [10, ')'], [18, ')'], [11, ']']] as a result</p>
","-4","Question"
"79492363","","<p>I've built a script that tries to get a snippet from the latest youtube videos of my channel. It works well but sometimes skips some videos, the script doesn't see it despite waiting days for YouTube to list it or whatever. If I try to access any of the skipped videos directly through the video ID I can get the information, so the API has it listed.</p>
<p>I think it's because my URL for the request is not the best way to do this:</p>
<pre><code>https://www.googleapis.com/youtube/v3/search?part=snippet&amp;channelId=&quot; + channelId + &quot;&amp;order=date&amp;maxResults=5&amp;type=video
</code></pre>
<p>I guess this request search my latest videos and gives me my 5 newer ones, right?
Is there a better and more reliable way of doing it? am I missing something?</p>
<p>I'm pretty new to all the coding world, it's my first time writing JS, so please bear with me.
Thanks for reading!</p>
","0","Question"
"79493427","","<p>I have two lists of data frames. Both of same length, same order, and identical names for each data frame.</p>
<pre><code>df1 &lt;- data.frame(
  Code = c(&quot;A1&quot;,&quot;A1&quot;,&quot;A1&quot;,&quot;B1&quot;,&quot;B1&quot;,&quot;B1&quot;,&quot;C1&quot;,&quot;C1&quot;,&quot;C1&quot;),
  Name = c(&quot;Cat&quot;, &quot;Dog&quot;, &quot;Horse&quot;,&quot;Cat&quot;, &quot;Dog&quot;, &quot;Horse&quot;,&quot;Cat&quot;, &quot;Dog&quot;, &quot;Horse&quot;),
  freq = c(4,5,6,4,2,6,8,1,5)
)

list1 &lt;- split(df1, df1$Code)


df2 &lt;- data.frame(
  Code = c(&quot;A1&quot;,&quot;A1&quot;,&quot;A1&quot;,&quot;B1&quot;,&quot;B1&quot;,&quot;B1&quot;,&quot;C1&quot;,&quot;C1&quot;,&quot;C1&quot;),
  filler = c(2,8,4,1,6,9,4,1,2),
  filler1 = c(4,5,6,4,2,6,8,1,5)
)

list2 &lt;- split(df2, df2$Code)
</code></pre>
<p>I want to subset all data frames in list1. I want to remove all rows where the value of 'freq' is less than or equal to the number of rows in the data frame of same name in list2.</p>
<p>The desired result is as follows:</p>
<pre><code>df3 &lt;- data.frame(
  Code = c(&quot;A1&quot;,&quot;A1&quot;,&quot;A1&quot;,&quot;B1&quot;,&quot;B1&quot;,&quot;C1&quot;,&quot;C1&quot;),
  Name = c(&quot;Cat&quot;, &quot;Dog&quot;, &quot;Horse&quot;,&quot;Cat&quot;, &quot;Horse&quot;,&quot;Cat&quot;, &quot;Horse&quot;),
  freq = c(4,5,6,4,6,8,5)
)
 
list3 &lt;- split(df3, df3$Code)
</code></pre>
<p>I have tried the following</p>
<pre><code>list3 &lt;- lapply(list1, function(x) x[x$freq&gt;nrow(list2$x),])
</code></pre>
<p>Unfortunately it seems lapply can't iterate over a second list even though the elements have identical names. I have tried mapply but failed to get it to run at all.</p>
","3","Question"
"79494211","","<p>I am looking at GeeksforGeeks problem <a href=""https://www.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1"" rel=""nofollow noreferrer"">Cycle in a Directed Graph</a>:</p>
<blockquote>
<p>Given a Directed Graph with V vertices (Numbered from 0 to V−1) and E edges, check whether it contains any cycle or not.</p>
<p>The graph is represented as an adjacency list, where <code>adj[i]</code> contains a list of vertices that are directly reachable from vertex <code>i</code>. Specifically, <code>adj[i][j]</code> represents an edge from vertex <code>i</code> to vertex <code>j</code>.</p>
<h3>Example 1:</h3>
<p><a href=""https://i.sstatic.net/B48vW8zu.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/B48vW8zu.png"" alt=""graph"" /></a></p>
<p>Output: 1</p>
<p>Explanation: <code>3 -&gt; 3</code> is a cycle.</p>
</blockquote>
<h1>My code</h1>
<pre><code>from typing import List

class Solution:
    
    # Function to detect cycle in a directed graph.
    def is_cyclic(self, adj : List[List[int]]) -&gt; bool :
        def dfs(i, arr):
            vis[i] = 1
            for item in adj[i]:
                if not vis[item]:
                    arr.append(i)
                    if dfs(item,arr) == True:return True
                    arr.pop()
                else:
                    if item in arr:
                        return True
        n = len(adj)
        vis = [0]*n
        for i in range(n):
            if not vis[i]:
                if dfs(i,[i]) == True:
                    return True
        return False     
</code></pre>
<p>But this gives <code>False</code> for the example input while <code>True</code> is expected.</p>
<p>I changed the approach as to where to append nodes to the path <code>arr</code> like below, and then it worked, but I don't see why the above code wouldn't return the exact same results:</p>
<pre><code>from typing import List

class Solution:
    
    # Function to detect cycle in a directed graph.
    def is_cyclic(self, adj : List[List[int]]) -&gt; bool :
        def dfs(i, arr):
            vis[i] = 1
            arr.append(i)
            for item in adj[i]:
                if not vis[item]:
                    if dfs(item,arr) == True:
                        return True
                else:
                    if item in arr:
                        return True 
            arr.pop()
        n = len(adj)
        vis = [0]*n
        for i in range(n):
            if not vis[i]:
                if dfs(i,[]) == True:
                    return True
        return False    
</code></pre>
<p>The difference is only in the list that is passed to <code>dfs</code>. I don't understand why my code does not work properly as it essentially uses the same logic. What is my mistake?</p>
","1","Question"
"79495595","","<p>I'm new to programming and taking a course in dart.
I'm trying to build a to-do list console program and I'm using a map as the to-do list.
I'm trying to figure out how to automatically assign the key so that when I delete an entry the following keys would change accordingly (for example, deleting the second entry and having the key of the former third entry change to 2 and so on).</p>
<p>How should I go about it?</p>
<p>This is my code so far for adding an entry:</p>
<pre><code>int taskId = toDoList.length;

case 'c' :  
      userInput = null;
      print('Enter name of new adventure');
      print('');
        if (taskId &gt;= toDoList.length) {
          ++taskId;
        } 
        String task = stdin.readLineSync()!;
        toDoList[taskId] = task;
      print('Quest added!');
              for (final allPrint in mainMenu.entries) {
                print('${allPrint.key}: ${allPrint.value}');
              } ;
</code></pre>
<p>And this is my code for deleting an entry:</p>
<pre><code>    case 'b' :  
      userInput = null;
          if (toDoList.length &lt; 1) {
      print('No quests available to complete!');
          for (final allPrint in mainMenu.entries) {
          print('${allPrint.key}: ${allPrint.value}');
          };
      } else{
          print('Which good fortune have you brought from your adventures?');
          print('Which task have you completed?');
          print('');
            for (final allPrint in toDoList.entries) { 
                print('${allPrint.key}: ${allPrint.value}');
            }
          print('');
          print('');
            int? idDelete = int.tryParse(stdin.readLineSync() ?? '');
              if (toDoList.containsKey(idDelete)) {
                  toDoList.remove(idDelete);
                  print('Good Job!');
              for (final allPrint in mainMenu.entries) {
                print('${allPrint.key}: ${allPrint.value}');
              } ;
            }
        }
</code></pre>
","1","Question"
"79496918","","<p>i have list of names that i want to match for a tennis competition. The games are taking place once a week and everyone should have a new opponent each week till all pairings have been made.</p>
<p>To create 2 people combinations with all the players I did the following:</p>
<pre><code>from itertools import combinations 

names = ['ben',
         'josh',
         'jessy',
         'natalia']

result = [[a + '-' + b] for a, b in combinations(names, 2)]

</code></pre>
<p>This gives the following:</p>
<pre><code>[['ben - josh'],
 ['ben - jessy'],
 ['ben - natalia'],
 ['josh - jessy'],
 ['josh - natalia'],
 ['jessy - natalia']] 

</code></pre>
<p>The last part is to match each player with someone who they’ve never played before. In order to do this i did the following:</p>
<pre><code>
for i, j in zip(range(int(len(result)/2)), (reversed(range(int(len(result) /2),len(result))))):

    print(result[i], result[j]


</code></pre>
<p>This way each player plays with someone new each time. The result is:</p>
<pre><code>

['ben - josh'] ['jessy - natalia']

['ben - jessy'] ['josh - natalia']

['ben - natalia'] ['josh - jessy']

</code></pre>
<p>How I can extend the following to a much bigger list of players ? Lets say 100+ ? Is there any better way of doing this ? Also, what if the list of players has odd number of players? Thanks for your help with this.</p>
","-1","Question"
"79500466","","<p>Mock the sftp-list operation especially the attributes with file name and its path. These attributes are used in a for each loop are not available.</p>
","0","Question"
"79505042","","<p>I have the need to create a function which takes an input list or numpy array and creates into a string. The issue is easy enough to compute when knowing the numbers and the particulars. Like in the simple function code below, we see a list with 2x 100 which I can create the string very simply. I know that there are only 2 variables and can join simply to create the values using a and b.</p>
<pre><code>squares = [(i, i) for i in range(100)]
values = &quot;,&quot;.join([f&quot;({a}, {b})&quot; for (a, b) in squares])
</code></pre>
<p>Is there a way to create the values matrix if there was a np array with x by y dimensions? The y dimension will work through the loop easy enough, just the x. The x will change dependent on the particular need and list I am assessing - also the lists are variable with different types of data - mainly integers and floats.</p>
","-2","Question"
"79507207","","<h2>SETUP</h2>
<p>I have a list <code>days</code> and a value <code>N</code></p>
<pre><code>days = ['Monday','Tuesday','Wednesday','Thursday','Friday']
N = 52
</code></pre>
<h2>WHAT I AM TRYING TO DO</h2>
<p>I am trying to create a list <code>selections</code> with length <code>N</code> where I <em>uniformly in frequency</em> sample values from <code>days</code> (remainders are fine). I would like the order of this list to then be shuffled.</p>
<h2>EXAMPLE OUTPUT</h2>
<p><strong>NOTE HOW THE ORDER IS SHUFFLED, BUT THE DISTRIBUTION OF VALUES IS UNIFORM</strong></p>
<pre><code>selections

['Wednesday','Friday','Monday',...'Tuesday','Thursday','Monday']

import collections
counter = collections.Counter(selections)
counter
Counter({'Monday': 11, 'Tuesday': 10, 'Wednesday': 11, 'Thursday': 10, 'Friday': 10})
</code></pre>
<h2>WHAT I HAVE TRIED</h2>
<p>I have code to randomly select <code>N</code> values from <code>days</code></p>
<pre><code>from random import choice, seed

seed(1)

days = ['Monday','Tuesday','Wednesday','Thursday','Friday']
N = 52

selections = [choice(days) for x in range(N)]
</code></pre>
<p>But they aren't selected uniformly</p>
<pre><code>import collections
counter = collections.Counter(selections)
counter

Counter({'Tuesday': 9,
         'Friday': 8,
         'Monday': 14,
         'Wednesday': 7,
         'Thursday': 14})
</code></pre>
<p>How can I adjust this code or what different method will create a list of length <code>N</code> with a uniform distribution of values from <code>days</code> in a random order?</p>
<hr />
<p>EDIT: I obviously seemed to have phrased this question poorly. I am looking for list with length <code>N</code> with a uniform distribution of values from <code>days</code> but in a <strong>shuffled</strong> order (what I meant by random.) So I suppose what I am looking for is how to uniformly sample values from <code>days</code> <code>N</code> times, then just shuffle that list. Again, I want an equal amount of each value from <code>days</code> making up a list with length <code>N</code>. I need a uniform distribution for a list of <em>exactly</em> length 52, just as the example output shows.</p>
","2","Question"
"79507355","","<p>I have a class that comes with a <code>.equals()</code> method. I'd like to compare two unordered lists of these objects to see if they are <em><strong>not</strong></em> equal.</p>
<p>My current approach is to loop through list 1, then loop through list 2.</p>
<pre><code>def objectListsNotEqual(list_1, list_2):
    if(len(list_1) != len(list_2)):
        return True

    # same length lists, so check it
    for obj_1 in list_1:
        if(not(any(obj_1.equals(obj_2) for obj_2 in list_2))):
            return True

    for obj_2 in list_2:
        if(not(any(obj_2.equals(obj_1) for obj_1 in list_1))):
            return True

    # if execution reaches here, then both lists match
    return False
</code></pre>
<p>However, this doesn't account for when list 1 and list 2 have different counts when the <code>.equals()</code> method returns <code>True</code>. e.g. if I had:</p>
<pre><code>list_1 = [obj_1(foo), obj_2(foo), obj_3(bar)]
list_2 = [obj_4(foo), obj_5(bar), obj_6(bar)]

objectListsNotEqual(list_1, list_2) # --&gt; returns False due to the use of any() function
</code></pre>
<p>I would want the function to return <code>False</code> in the above example since they have different counts of <code>foo</code> and <code>bar</code> instances of the object.</p>
<p><strong>Edit</strong>: class is a <a href=""https://pro.arcgis.com/en/pro-app/latest/arcpy/classes/polyline.htm"" rel=""nofollow noreferrer"">Polyline</a> which is built from the <a href=""https://pro.arcgis.com/en/pro-app/latest/arcpy/classes/geometry.htm"" rel=""nofollow noreferrer"">Geometry object</a>. Don't really know how it works internally.</p>
","0","Question"
"79514575","","<p>In our code, we use <code>JWKset</code> from the <code>nimbus-jose-jwt</code> library in a method that creates a map that we use for stuff. As you can see in the return, we use a stream that calls map on a list of <code>RSAkey</code>, and then we create a <code>List</code> from that, which is used to create a <code>JWKSet</code>. We use <code>collect(Collections.toList())</code> and that works, but when I tried to change this to use <code>toList()</code> which our SonarQube suggested we should, it does not work.</p>
<p>The compiler error is:</p>
<blockquote>
<p>Cannot resolve constructor 'JWKSet(List)</p>
</blockquote>
<p>I also get the suggestion to 'cast argument to JWK'. But <code>RSAKey</code> is a class that extends the abstract class <code>JWK</code> if you look at the documentation <a href=""https://github.com/felx/nimbus-jose-jwt/blob/master/src/main/java/com/nimbusds/jose/jwk/RSAKey.java"" rel=""nofollow noreferrer"">https://github.com/felx/nimbus-jose-jwt/blob/master/src/main/java/com/nimbusds/jose/jwk/RSAKey.java</a></p>
<p>I do not see how the two method calls, which create the same type of output, do not work the same here.</p>
<pre><code>final List&lt;RSAKey&gt; keys = Collections.singletonList(identityToRSAKey(certificate));
    
// Evidence the methold calls create the same type of output
List&lt;RSAKey&gt; list = keys.stream().map(RSAKey::toPublicJWK).toList();
List&lt;RSAKey&gt; collect = keys.stream().map(RSAKey::toPublicJWK).collect(Collectors.toList());

//This works
JWKSet mySet = new JWKSet(keys
        .stream()
        .map(RSAKey::toPublicJWK)
        .collect(Collectors.toList()));

//This does not work
JWKSet mySet2 = new JWKSet(keys
        .stream()
        .map(RSAKey::toPublicJWK)
        .toList() );

// Where we actually use the code
return new JWKSet(keys
    .stream()
    .map(RSAKey::toPublicJWK)
    .collect(Collectors.toList() ))
    .toPublicJWKSet()
.toJSONObject();
</code></pre>
<p>Constructor in <code>JWKSet</code> that we try to invoke</p>
<pre><code>public JWKSet(List&lt;JWK&gt; keys) {
    this(keys, Collections.emptyMap());
}
</code></pre>
","2","Question"
"79514576","","<p>I have a list of words and a text file and I'd need to find out if any of the words on the list are found in the text file. In addition I'd need to replace those words with &quot;DELETED&quot; and save this file with another name.</p>
<p>I'm very new with Ruby and Python this all seems really hard. I kow I need to open the file and read it line by line. I konw how to check if the line includes one certain word but not if it includes one word from a list.</p>
<pre><code>File.open(&quot;text.txt&quot;) do |x|
    x.each do |line|
        # WHAT TO PUT HERE?
    end
end
</code></pre>
<p>thank you in advance!</p>
","1","Question"
"79516057","","<p>I would like to make this code compile and run:</p>
<pre class=""lang-none prettyprint-override""><code>import Data.List
main = print $ elemIndices [] []
</code></pre>
<p>Without adding specific type annotations. The error it gives is:</p>
<pre><code>Ambiguous type variable ‘a0’ arising from a use of ‘elemIndices’
      prevents the constraint ‘(Eq a0)’ from being solved.
      Probable fix: use a type annotation to specify what ‘a0’ should be.
      These potential instances exist:
        instance Eq Ordering -- Defined in ‘GHC.Classes’
        instance Eq Integer
        ...plus 21 others
</code></pre>
<p>I believe problems are specific to functions like <code>elemIndices</code>, <code>sortOn</code>, etc, since it needs to be solved since it uses Eq (or Ord/etc)</p>
<p>The reason I would not like to add specific type annotations is because I am actually compiling <a href=""https://golfscript.com/iogii"" rel=""nofollow noreferrer"">another language</a> to Haskell and I need empty lists to remain flexible on their behavior (in case the same value is used elsewhere).</p>
<p>For example, if you had this code and gave <code>a</code> a specific type then it would no longer work:</p>
<pre class=""lang-none prettyprint-override""><code>main=do
   print $ zipWith (+) a [1,2]
   print $ zipWith (zipWith (+)) a [[1],[2]]
   where
      a = []
</code></pre>
<p>I am hoping there is a simple solution to this, but all recommendations I have seen have just said to use type annotations. I think there might be a simple solution since the code in question works in <strong>ghci but not compiled haskell</strong> code.</p>
<p>These examples may seem stupid, but it is important for them to work because my language does some things dynamically based on input, no input would have a value of [] (with no type). So even if you do take input it needs to not compiler error for cases like this that would never run (and it couldn't know in advance would never run).</p>
","0","Question"
"79517619","","<p>When using structs in a List in C# - is a copy created when comparing a variable of the struct using an IF statement or else?</p>
<pre><code>private struct ExampleStruct
{
    public int a;

    public ExampleStruct()
    {
        a = 1;
    }
}

List&lt;ExampleStruct&gt; exampleList = new List&lt;ExampleStruct&gt;();
ExampleStruct newExampleStruct = new ExampleStruc();
exampleList.Add(newExampleStruct);

for(int i = 0; i &lt; exampleList.Count; i++)
{
    if(exampleList[i].a == 1)//Does this cause a copy of the struct?
    {
        Console.WriteLine(&quot;Struct value has been compared.&quot;);
    }
}
</code></pre>
<p>I tried researching official source material on C# and anything else I could find but I could not find a definite answer on the use of structs in List.</p>
","0","Question"
"79520526","","<p>Given a list of tuples, where each tuple consists of 3 integers, transpose the list recursively so that the &quot;rows&quot; and &quot;columns&quot; are swapped. The result will be a list of lists.</p>
<p>So for example:
transpose [ (1, 2, 3); (11, 12, 13) ]
=&gt; [ [1; 11]; [2; 12]; [3; 13] ]</p>
<p>So I tried:</p>
<pre><code>   let rec transpose LT =
      match LT with
      | [] -&gt; [[], [], []]
      | (a, b, c) :: tail -&gt;
         let rest = transpose tail
         match rest with
         | [d; e; f] -&gt; [a::d; b::e; c::f]
</code></pre>
<p>but is getting the error:</p>
<blockquote>
<p>All elements of a list must be implicitly convertible to the type of
the first element, which here is ''a list * 'b list * 'c list'. This
element has type ''d list'.</p>
</blockquote>
<p>at the list of lists [a::d; b::e; c::f]</p>
<p>Can anyone tell me what I'm missing or what I'm doing wrong?</p>
","0","Question"
"79524177","","<p>for the game I'm working on I had my groups write multiple scripts that I would be implementing into the project. Each script would contain the dialogue for the game. It was a rushed solution and very ugly, but it worked up until the scripts needed to be randomized at the start. I'm hoping anyone can tell me what's going wrong with my incredibly scuffed implementation.</p>
<p>This is the error I'm getting when I run the code.
<a href=""https://i.sstatic.net/TdGKuaJj.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<p>Also I'm sorry if this is poorly formatted, it's my first time using stackoverflow and I'm on a time crunch to finish this</p>
<pre><code>using System;
using System.Collections;
using System.Collections.Generic;
using Unity.Collections.LowLevel.Unsafe;
using Unity.VisualScripting;
using UnityEditor;
using UnityEngine;

public class UserRandomizer : MonoBehaviour
{
    //The scripts in this list are set in engine
    public List&lt;MonoScript&gt; scripts = new List&lt;MonoScript&gt;();

    public GameObject User1;
    public GameObject User2;
    public GameObject User3;

    public int number;
    
    

    // Start is called before the first frame update
    void Start()
    {
        User1 = GameObject.Find(&quot;User1&quot;);
        User2 = GameObject.Find(&quot;User2&quot;);
        User3 = GameObject.Find(&quot;User3&quot;);

        number = UnityEngine.Random.Range(0, scripts.Count - 1);
        User1.AddComponent(scripts[number].GetType());
        scripts.RemoveAt(number);

        number = UnityEngine.Random.Range(0, scripts.Count - 1);
        User2.AddComponent(scripts[number].GetType());
        scripts.RemoveAt(number);

        number = UnityEngine.Random.Range(0, scripts.Count - 1);
        User3.AddComponent(scripts[number].GetType());
        scripts.RemoveAt(number);
    }

    
}
</code></pre>
","-3","Question"
"79525693","","<p>This is my uni homework but I am currently stuck. We have to incorporate several different functions in our code in order to learn about lists in C++.
We didn't use so many libraries yet, that's why we have to keep it simple.
The code ran well until I wanted to delete the first element of my list. I think the mistake is that head gets 'lost' after running the remove function and I am helpless. When I change the function to deleting the second element of the list, everything works fine, just the first element just won't work. Maybe you can help me finding the mistake.</p>
<pre><code>#include &lt;iostream&gt;
using namespace std;

struct lelem
{
    int data;
    lelem* next;
};

void print (lelem* head)
{
    if (head == nullptr)
    {
        cout &lt;&lt; &quot;Liste ist leer.&quot; &lt;&lt; endl;
        return;
    }
    
    while (head)
    {
        cout &lt;&lt; head-&gt;data &lt;&lt; &quot; ,&quot;;
        head = head-&gt;next;
    }
    return;
}

int size (lelem* head)
{
    int size = 0;
    
    while (head)
    {
        size ++;
        head = head-&gt;next;
    }
    return size;
}

void insert_back(lelem*&amp; head, int e)
{
    if (!head)
    {
        head = new lelem;
        head-&gt;data = e;
        head-&gt;next = nullptr;
        return;
    }
    lelem* tmp = head;
    
    while (tmp-&gt;next)
    {
        tmp = tmp-&gt;next;
    }
    
    lelem* neu = new lelem;
    neu-&gt;data = e;
    neu-&gt;next = nullptr;
    tmp-&gt;next = neu;
    return;
}

void insert_sort(lelem* &amp;head, int d)
{
    lelem* neu = new lelem;
    neu-&gt;data = d;
    
    if (!head || d &lt; head-&gt;data)
    {
        neu-&gt;next = head;
        head = neu;
        return;
    }
    
    lelem* tmp = head;
    
    while (tmp-&gt;next)
    {
        if (d &lt; tmp-&gt;next-&gt;data)
        {
            neu-&gt;next = tmp-&gt;next;
            tmp-&gt;next = neu;
            return;
        }
        tmp = tmp-&gt;next;
    }
}

void remove (lelem* &amp;head)
{
    lelem* loesch = head;
    head = head-&gt;next;
    delete loesch;
    return;
}

int main ()
{
    lelem* const start = new lelem;
    lelem* head = start;
    
    int* anz = new int;
    
    cout &lt;&lt; &quot;Anzahl der Listenelemtete eigeben: &quot;;
    cin &gt;&gt; *anz;
    
    for (int i=0; i&lt;*anz; i++)
    {
        head-&gt;data = i+1;
        if(i&lt;*anz-1)
        {
            head-&gt;next = new lelem;
            head = head-&gt;next;
        }
        else
        {
            head-&gt;next = nullptr;
        }
    }
    
    head = start;
    print (head);
    
    head = start;
    cout &lt;&lt; &quot;Liste hat &quot; &lt;&lt; size(head) &lt;&lt; &quot; Elemente.&quot; &lt;&lt; endl;
    
    head = start;
    cout &lt;&lt; &quot;Sortiertes einfügen des Wertes 5&quot; &lt;&lt; endl;

    insert_sort(head, 5);
    
    head = start;
    print (head);
    
    head=start;
    remove(head);
    
    head = start;
    print (head);
    
    return 0;
}
</code></pre>
","-1","Question"
"79526855","","<p>I'm having trouble setting a list at a certain index to a specified value. For example:</p>
<pre><code>healths[index].split(&quot;,&quot;)[anotherIndex] = 0
</code></pre>
<p>This code runs but doesn't change the value. The reason I'm not just moving this to a list and going through these hoops with indexing a split list is because the first list, &quot;<code>healths</code>&quot; is also a split list. This means the amount of lists within is not a set value, so I could have 1 string in <code>healths </code>or I could have 4 strings in <code>healths</code>. If anyone can help with this it would be much appreciated. Here is another example highlighting what I'm trying to do:</p>
<pre><code>strHealth = &quot;1,8,4,3,/11,12,/&quot;
healths = strHealth.split(&quot;/&quot;)
ct = int(input(&quot;Enter the creature type you're targeting: &quot;)) - 1
cn = int(input(&quot;Enter the number of the creature you're targeting: &quot;)) - 1
damage = int(input(&quot;Enter the amount of damage dealt: &quot;))
healths[ct].split(&quot;,&quot;)[cn] = str(int(healths[ct].split(&quot;,&quot;)[cn]) - damage)
</code></pre>
<p>I tried setting the initial <code>healths[ct].split(&quot;,&quot;)[cn]</code> to an integer but that gave me a &quot;cannot assign to function call here&quot; error. I also double checked on how to change values in a list in python. This has me a bit stumped at the moment.</p>
","0","Question"
"79528112","","<p>I have a batch file that checks if a previously compiled exe file exists. If not, it will recompile, otherwise it will check if any files have been modified since the creation of the exe file. If modified files are found, it will recompile. It then checks through the directory, keeping track of the names and timestamps for the file contents.</p>
<p>I am wondering how to do this, so that I don't have to manually list:</p>
<pre><code>file[0]=
file[1]=
file[2]=
etc.
</code></pre>
<p>Now I already have a list in here that is able to be modified whenenever, and works,
but its modified like:</p>
<pre><code>set SOURCES=!SOURCES! &quot;%%F&quot;
</code></pre>
<p>and my timestamp list is like:</p>
<pre><code>set LIST=!LIST! %FILE_TIMESTAMP_FORMAT%
</code></pre>
<p>I've already checked a lot of sources, and none of them are dynamic, or just dont work for me. Also does anyone know why the format wont be <code>echo</code>ed.</p>
<pre><code>@echo off
setlocal enabledelayedexpansion

cd /d &quot;C:\Users\ealos\OneDrive\Desktop\C++ Project&quot;

echo Current directory: %CD%

set SOURCES=
set FILES_CHANGED=false
set LIST=

rem Check if cppgame.exe exists and get its timestamp
if exist cppgame.exe (
    for %%F in (cppgame.exe) do (
        set EXE_TIMESTAMP=%%~tF
    )
    echo cppgame.exe last modified: !EXE_TIMESTAMP!
    rem Convert cppgame.exe timestamp to comparable format
    set EXE_TIMESTAMP_FORMAT=!EXE_TIMESTAMP:~6,4!!EXE_TIMESTAMP:~0,2!!EXE_TIMESTAMP:~3,2!!EXE_TIMESTAMP:~11,2!!EXE_TIMESTAMP:~14,2!
    echo EXE Timestamp Format: !EXE_TIMESTAMP_FORMAT!
) else (
    echo cppgame.exe does not exist or was just created.
    set FILES_CHANGED=true
)

rem Loop through all .cpp files and check if any are newer than cppgame.exe
for %%F in (*.cpp) do (
    echo -----------
    rem Add the .cpp file to the SOURCES variable for compilation
    set SOURCES=!SOURCES! &quot;%%F&quot;
    
    rem Get the timestamp of the current .cpp file
    set FILE_TIMESTAMP=%%~tF
    rem Convert .cpp file timestamp to comparable format
    set FILE_TIMESTAMP_FORMAT=!FILE_TIMESTAMP:~6,4!!FILE_TIMESTAMP:~0,2!!FILE_TIMESTAMP:~3,2!!FILE_TIMESTAMP:~11,2!!FILE_TIMESTAMP:~14,2!
    
    echo Checking: %%F (Modified: !FILE_TIMESTAMP!)
    echo File Timestamp Format: (!FILE_TIMESTAMP_FORMAT!)
    
    rem Add the formatted timestamp to the LIST for comparison
    set LIST=!LIST! &quot;%FILE_TIMESTAMP_FORMAT%&quot;
    echo list: %LIST%
)

rem Now compare each timestamp in LIST with cppgame.exe's timestamp
echo %LIST%
for /f &quot;tokens=1, delims==&quot; %%a in (%LIST%) do (
    echo Comparing: %%a with !EXE_TIMESTAMP_FORMAT!
    if %%a GTR %EXE_TIMESTAMP_FORMAT% (
        set FILES_CHANGED=true
        echo File has changed, setting FILES_CHANGED=true
    )
    echo EXE Timestamp Format: !EXE_TIMESTAMP_FORMAT!
    echo File Timestamp Format: %%a
)

rem If no files have changed, just run the existing executable
if &quot;!FILES_CHANGED!&quot;==&quot;false&quot; (
    echo No files changed, running existing executable...
    cppgame.exe
    pause
    exit /b
)

rem If no .cpp files are found, exit
if &quot;%SOURCES%&quot;==&quot;&quot; (
    echo No .cpp files found in the directory!
    pause
    exit /b
)

rem Compile all .cpp files into a single executable (cppgame.exe)
echo Compiling...
g++ %SOURCES% -o cppgame.exe

rem Check if compilation was successful
if %ERRORLEVEL% NEQ 0 (
    echo Compilation failed!
    pause
    exit /b
)

rem Run the compiled executable
echo Running cppgame...
cppgame.exe

rem Pause to keep the console open after execution
pause
</code></pre>
","0","Question"
"79528915","","<p>I have 2 lists (if that is what django calls them) containg an id and a key/value pair e.g. [{'id': x, 'string': 'string'}] one list assigned to variable 'periods' the other assigned to 'paydates'.</p>
<p>I am trying to loop through each list and display the value from each in an HTML element, using DTL.</p>
<p>I have the DTL in the HTML page {% for ... in ... %} one inside the other. The outer for loop from list 'periods' is working correctly, the inner for loop from list 'paydates' is not displaying anything at all, it doesn't throw an error either.</p>
<p><a href=""https://i.sstatic.net/9QOsRObK.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9QOsRObK.png"" alt=""Where the data is to be displayed"" /></a></p>
<p>The blue date in the pic is from the 'periods' list and is working correctly, the date from the 'paydates' list is supposed to show underneath 'Pay Date'.</p>
<p>I cannot separate the for loop code because of the way i want my html page displayed. I am not sure what options I have to rectify the issue.</p>
<p>My code follows:</p>
<p><strong>home.html:</strong></p>
<pre><code>    {% load static %}
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot; /&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;
    &lt;script src=&quot;https://unpkg.com/@tailwindcss/browser@4&quot;&gt;&lt;/script&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;{% static 'appmain/style.css' %}&quot; /&gt;
    &lt;title&gt;Payslip Data&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div class=&quot;container mx-auto my-10 border rounded-2xl border-4 border-purple-200 p-10 bg-gray-200 shadow-2xl&quot;&gt;
      &lt;h1 class=&quot;text-4xl font-bold mb-15 text-center text-purple-400&quot;&gt;Home Page - Payslip Data&lt;/h1&gt;
      &lt;div class=&quot;periods flex flex-wrap gap-30 justify-center&quot;&gt;
        {% for period in periods %}
        &lt;a href=&quot;&quot; class=&quot;hover:scale-110 duration-500&quot;&gt;
          &lt;div class=&quot;card&quot;&gt;
            &lt;div class=&quot;cardbody bg-gray-500 text-white text-center p-5&quot;&gt;
              &lt;p class=&quot;text-2xl&quot;&gt;Pay Date&lt;/p&gt;
              {% for paydate in paydates %}
              &lt;p class=&quot;text-2xl text-blue-700&quot;&gt;{{paydate.paydate}}&lt;/p&gt;
              {% endfor %}
            &lt;/div&gt;
            &lt;div class=&quot;cardheader text-center bg-purple-200 p-5 shadow-xl&quot;&gt;
              &lt;p class=&quot;text-2xl&quot;&gt;Period Commencing&lt;/p&gt;
              &lt;h2 class=&quot;text-blue-700 text-2xl&quot;&gt;{{period.period}}&lt;/h2&gt;
              &lt;p&gt;15/06/2025 - 28/06/2025&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/a&gt;
        {% endfor %}
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p><strong>views.py:</strong></p>
<pre><code>    from django.shortcuts import render
from django.http import HttpRequest
from django.http import HttpResponse

periods = [
  {'id': 0, 'period': '15/06/2025'},
  {'id': 1, 'period': '29/06/2025'},
  {'id': 2, 'period': '13/07/2025'},
  {'id': 3, 'period': '27/07/2025'},
  {'id': 4, 'period': '10/08/2025'},
  {'id': 5, 'period': '24/08/2025'},
  {'id': 6, 'period': '07/09/2025'},
  {'id': 7, 'period': '21/09/2025'},
  {'id': 8, 'period': '05/10/2025'},
  {'id': 9, 'period': '19/10/2025'},
  {'id': 10, 'period': '02/11/2025'},
  {'id': 11, 'period': '16/11/2025'},
  {'id': 12, 'period': '30/11/2025'},
  {'id': 13, 'period': '14/12/2025'},
  {'id': 14, 'period': '28/12/2025'},
  {'id': 15, 'period': '11/01/2026'},
  {'id': 16, 'period': '25/01/2026'},
  {'id': 17, 'period': '08/02/2026'},
  {'id': 18, 'period': '22/02/2026'},
  {'id': 19, 'period': '08/03/2026'},
  {'id': 20, 'period': '22/03/2026'},
  {'id': 21, 'period': '05/04/2026'},
  {'id': 22, 'period': '19/04/2026'},
  {'id': 23, 'period': '03/05/2026'},
  {'id': 24, 'period': '17/05/2026'},
  {'id': 25, 'period': '31/05/2026'},
  {'id': 26, 'period': '14/06/2026'}
]

paydates = [
  {'id': 0, 'paydate': '02/07/2026'},
  {'id': 1, 'paydate': '02/07/2026'},
  {'id': 2, 'paydate': '02/07/2026'},
  {'id': 3, 'paydate': '02/07/2026'},
  {'id': 4, 'paydate': '02/07/2026'},
  {'id': 5, 'paydate': '02/07/2026'},
  {'id': 6, 'paydate': '02/07/2026'},
  {'id': 7, 'paydate': '02/07/2026'},
  {'id': 8, 'paydate': '02/07/2026'},
  {'id': 9, 'paydate': '02/07/2026'},
  {'id': 10, 'paydate': '02/07/2026'},
  {'id': 11, 'paydate': '02/07/2026'},
  {'id': 12, 'paydate': '02/07/2026'},
  {'id': 13, 'paydate': '02/07/2026'},
  {'id': 14, 'paydate': '02/07/2026'},
  {'id': 15, 'paydate': '02/07/2026'},
  {'id': 16, 'paydate': '02/07/2026'},
  {'id': 17, 'paydate': '02/07/2026'},
  {'id': 18, 'paydate': '02/07/2026'},
  {'id': 19, 'paydate': '02/07/2026'},
  {'id': 20, 'paydate': '02/07/2026'},
  {'id': 21, 'paydate': '02/07/2026'},
  {'id': 22, 'paydate': '02/07/2026'},
  {'id': 23, 'paydate': '02/07/2026'},
  {'id': 24, 'paydate': '02/07/2026'},
  {'id': 26, 'paydate': '02/07/2026'}
]

def main(request):
  return render(request, 'appmain/home.html', {'periods':periods})

def dates(request):
  return render(request, 'appmain/home.html', {'paydates':paydates})
</code></pre>
<p><strong>urls.py:</strong></p>
<pre><code>    from django.contrib import admin
from django.urls import path, include
from . import views

urlpatterns = [
    path('', views.main),
    path('', views.dates)
]
</code></pre>
<p>I don't know if the 2 lists can be combined and the relevant data extracted and placed in the correct element, I am new to django and programming in general. Hopefully it is a simple solution.</p>
<p>My thanks in advance.</p>
","0","Question"
"79529772","","<p>I have a numbered list that has large round numbers for steps in a corresponding image. This works, but want the text and supporting text to align tight with the round number.</p>
<p>As in Step 3 in the image.</p>
<p>Attached screen. My code below.<br />
Numbered list image;<br />
<img src=""https://i.sstatic.net/0kXJZc2C.jpg"" alt="""" /></p>
<p>HTML</p>
<pre class=""lang-html prettyprint-override""><code>&lt;ul class=&quot;boldblack&quot;&gt;
  &lt;li_large&gt;
    &lt;span class=&quot;boldblack&quot;&gt;Step 1 text ti&lt;/span&gt;tle here
    &lt;h6 class=&quot;boldgreen&quot; &gt;
      Step 1 descriction with more information here.Step 1 descriction with more information here.
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 descriction with more information here.
      &lt;/span&gt;
      &lt;br&gt;
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 descriction with more information here.
      &lt;/span&gt;
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 descriction with more information here.
      &lt;/span&gt;
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 descriction with more information here.
      &lt;/span&gt;
    &lt;/h6&gt;

  &lt;li_large&gt;
    Step 2 text title here
    &lt;h6 class=&quot;boldgreen&quot; &gt;
      Step 2 descriction with more information here.Step 2 descriction with more information here.Step 2 descriction with more information here
      &lt;br&gt;
      Step 2 descriction with more information here.Step 2 descriction with more information here.Step 2 descriction with more information here
    &lt;/h6&gt;
    
  &lt;li_large&gt;
    Step 3 text title here
    &lt;h6 class=&quot;boldgreen&quot; &gt;
      Step 2 descriction with more information here.Step 2 descriction with more information here.Step 2 descriction with more information here
      &lt;br&gt;
      Step 2 descriction with more information here.Step 2 descriction with more information here.Step 2 descriction with more information here
    &lt;/h6&gt;
    &lt;h6 class=&quot;boldgreen&quot; &gt;
      &amp;nbsp;
    &lt;/h6&gt;
</code></pre>
<p>CSS</p>
<pre class=""lang-css prettyprint-override""><code>/* Large bullet list */
ul_large {
  counter-reset: section;
  list-style: none;
}

li_large {
  margin: 0 0 10px 0;
  line-height: 40px;
}

li_large:before {
  content: counter(section);
  counter-increment: section;
  display: inline-block;
  width: 40px;
  height: 40px;
  color: white; 
  margin: 10px 20px 0 0;
  border: 1px solid black;
  background: black;    
  border-radius: 100%;
  text-align: center;
  font-size: 30;
  font-weight: bold;
</code></pre>
","-1","Question"
"79532018","","<p>I have a table where each column is a Data set with a series of actions needed to be taken under it. There are roughly 50 datasets, and this will expand in the future.</p>
<p>The user will select which Datasets they need, which may include duplicates, and the Query is supposed to append the steps they need to take.</p>
<p>Data looks a bit like this:</p>
<p>Query_1:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">Dataset 1</th>
<th style=""text-align: center;"">Dataset 2</th>
<th style=""text-align: right;"">Dataset 3</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">DS1_Step1</td>
<td style=""text-align: center;"">DS2_Step1</td>
<td style=""text-align: right;"">DS3_Step1</td>
</tr>
<tr>
<td style=""text-align: left;"">DS1_Step2</td>
<td style=""text-align: center;"">null</td>
<td style=""text-align: right;"">DS3_Step2</td>
</tr>
<tr>
<td style=""text-align: left;"">DS1_Step3</td>
<td style=""text-align: center;"">null</td>
<td style=""text-align: right;"">null</td>
</tr>
</tbody>
</table></div>
<p>Say the user selects Dataset 1 and 2x Dataset 3, the output should look like:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">Output</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">DS1_Step1</td>
</tr>
<tr>
<td style=""text-align: left;"">DS1_Step2</td>
</tr>
<tr>
<td style=""text-align: left;"">DS1_Step3</td>
</tr>
<tr>
<td style=""text-align: left;"">DS3_Step1</td>
</tr>
<tr>
<td style=""text-align: left;"">DS3_Step2</td>
</tr>
<tr>
<td style=""text-align: left;"">null</td>
</tr>
<tr>
<td style=""text-align: left;"">DS3_Step1</td>
</tr>
<tr>
<td style=""text-align: left;"">DS3_Step2</td>
</tr>
<tr>
<td style=""text-align: left;"">null</td>
</tr>
</tbody>
</table></div>
<p>I can use List.Combine({Query_1[#&quot;Dataset 1&quot;],Query_1[#&quot;Dataset 3&quot;],Query_1[#&quot;Dataset 3&quot;]}) and get the correct output, but I need a dynamic list to put in the list area.</p>
<p>I created one from the input, and used a bunch of concatenating to give it the proper syntax, so now I have a list:</p>
<p>Query_2:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">Input</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">Query_1[#&quot;Dataset 1&quot;]</td>
</tr>
<tr>
<td style=""text-align: left;"">Query_1[#&quot;Dataset 3&quot;]</td>
</tr>
</tbody>
</table></div>
<p>But when I use List.Combine(Query_2[Input]), I get an Expression Error. It says 'We cannot convert the value &quot;Query_1[#&quot;Dataset 1&quot;]&quot; to type List.</p>
<p>Can anyone tell me what I'm doing wrong here?</p>
","1","Question"
"79532783","","<p>I have a dataframe with a column called &quot;education&quot; which has over 100 unique values. I want to create a new column and categorize &quot;education&quot; into four levels: high school, undergrad, masters, and doctorate.</p>
<p>The following example is oversimplified but this is what I <strong>don't</strong> want to do:</p>
<pre><code>df['level'] = df['education'].map({'grade 9' : 'high school', 
                                   'grade 10' : 'high school', 
                                   'grade 11' : 'high school', 
                                   'BS' : 'undergrad', 
                                   'B.Com' : 'undergrad', 
                                   'BA' : 'undergrad', 
                                   'MBA' : 'masters', 
                                   'PhD' : 'doctorate'
                                  })
</code></pre>
<p>The above worked well for another column but I find it too tedious in this instance. Is there a way that I could use an if-else statement with the following lists (or is there a better way)? Although suggested in a similar question, it would not be sufficient to use .startswith() because a bachelor's won't always start with &quot;B&quot;, a master's won't always start with &quot;M&quot;, etc.</p>
<pre><code>high_school = ['grade 9', 'grade 10', 'grade 11', 'grade 12']
undergrad = ['BS', 'B.Com', 'B.Ed', 'BA', 'LLB']
masters = ['MA', 'MBA', 'M.Ed', 'MPA', 'LLM', 'MTech', 'M.Tech']
doctorate = ['PhD', 'MD', 'DO']

</code></pre>
<p>This is an example of my desired outcome:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>education</th>
<th>level</th>
</tr>
</thead>
<tbody>
<tr>
<td>BS</td>
<td>undergrad</td>
</tr>
<tr>
<td>LLM</td>
<td>masters</td>
</tr>
<tr>
<td>DO</td>
<td>doctorate</td>
</tr>
<tr>
<td>5.47</td>
<td>NaN</td>
</tr>
<tr>
<td>grade 9</td>
<td>high school</td>
</tr>
<tr>
<td>MBA</td>
<td>masters</td>
</tr>
<tr>
<td>John</td>
<td>NaN</td>
</tr>
</tbody>
</table></div>
<p>Thank you for your help in advance.</p>
","1","Question"
"79534214","","<p>Taking the following data frame:</p>
<pre><code>df &lt;- data.frame(first_name = c(&quot;John&quot;, &quot;Jane&quot;),
                 last_name  = c(&quot;Doe&quot;, &quot;Doe2&quot;),
                 age        = c(20, 30))
</code></pre>
<p>I want to convert each row into its own list which I then again convert into a JSON body.</p>
<p>I thought about simply using <code>jsonlite::toJSON(df, auto_unbox = TRUE, pretty = TRUE)</code> which leads to:</p>
<pre><code>[
  {
    &quot;first_name&quot;: &quot;John&quot;,
    &quot;last_name&quot;: &quot;Doe&quot;,
    &quot;age&quot;: 20
  },
  {
    &quot;first_name&quot;: &quot;Jane&quot;,
    &quot;last_name&quot;: &quot;Doe2&quot;,
    &quot;age&quot;: 30
  }
]
</code></pre>
<p>However, the API I'm calling expects a JSON object without the square brackets. I have a vague feeling that the above is not even the problem, because I can only send one &quot;object&quot; (i.e. person) through the API anyway, so I would basically loop through my data frame and convert each row individually.</p>
<p>However, even when I convert just one row of data into a JSON object I get the square brackets whereas I need it without.</p>
<p>What I basically need is:</p>
<pre><code>person1 &lt;- list(first_name = &quot;John&quot;,
                last_name   = &quot;Doe&quot;,
                age         = 20)

jsonlite::toJSON(person1, auto_unbox = TRUE, pretty = TRUE)

{
  &quot;first_name&quot;: &quot;John&quot;,
  &quot;last_name&quot;: &quot;Doe&quot;,
  &quot;age&quot;: 20
}
</code></pre>
<p>So I either need a smart way to cut the JSON object into pieces which I can then call in individual loops or probably I need to create a list that contains all persons and when I take one list element from that larger list make sure to get it without square brackets.</p>
<p>Any ideas? I also thought if I would first need to e.g. dplyr::group_split my rows and then create the individual JSON rows from there. But this also gives me the outer square brackets:</p>
<pre><code>df |&gt;
  group_split(row_number(), .keep = FALSE) |&gt;
  map(.f = ~jsonlite::toJSON(.x, pretty = TRUE, auto_unbox = TRUE))

[[1]]
[
  {
    &quot;first_name&quot;: &quot;John&quot;,
    &quot;last_name&quot;: &quot;Doe&quot;,
    &quot;age&quot;: 20
  }
] 

[[2]]
[
  {
    &quot;first_name&quot;: &quot;Jane&quot;,
    &quot;last_name&quot;: &quot;Doe2&quot;,
    &quot;age&quot;: 30
  }
] 
</code></pre>
","1","Question"
"79535068","","<p>I am trying to build music theory logic into a program from scratch, I have the following functions where I am trying to return the scale degree of a given key center based on the inputed note, and I am trying to get around it like this:</p>
<pre><code>chromatic_notes = [&quot;C&quot;, &quot;C#&quot;, &quot;Db&quot;, &quot;D&quot;, &quot;D#&quot;, &quot;Eb&quot;, &quot;E&quot;, &quot;F&quot;, &quot;F#&quot;, &quot;Gb&quot;, &quot;G&quot;, &quot;G#&quot;, &quot;Ab&quot;, &quot;A&quot;, &quot;A#&quot;, &quot;Bb&quot;, &quot;B&quot;]

def main():
    key_center = input()
    print(get_degrees(key_center))

def get_information(k_c):
    degrees = {
        &quot;1&quot; : k_c,
        &quot;m2&quot; : # the item 1 position away from k in the list
        &quot;2&quot; : # the item 2 positions away from k in the list
        &quot;m3&quot; : # etc, where keys continue as &quot;3&quot;, &quot;4&quot;, &quot;m5&quot;, &quot;m6&quot;, &quot;6&quot;, &quot;m7&quot;, &quot;7&quot;
    }
return degrees[&quot;2&quot;]
</code></pre>
<p>To translate some of the musical jargon: each of the keys in the <code>degrees</code> correspond to a scale degree, and scale degrees are essentially the indices of a musical scale where the musical scale is one indexed.</p>
<p>For example, in the scale of C major, the &quot;m2&quot;, also known as the minor second, would be C#, and the &quot;2&quot;, also known as the major second would be D, and so on until for 12 the listed in the <code>dict</code> until we reach C again.</p>
<p>Notes like C# and Db are known as 'enharmonic', which means they are the same note (so are D# and Eb, F# and Gb, G# and Ab, and A# and Bb), so the length of the list is shorter than the usual chromatic scale.</p>
<p>I would like to dynamically generate the scale degrees depending on which note from the list is inputted, where for example I would want it to return &quot;D&quot; as the &quot;2&quot; if I input &quot;C&quot;, or &quot;B&quot; if I input &quot;A&quot;.</p>
<p>For this, I am trying to formulate an expression that can do the following:</p>
<ol>
<li><p>Locate an item that is always <code>n</code> positions
away from a given item in the list, so for the &quot;2&quot; degree, I would
want to find the item two items to the right of my given key centre.</p>
</li>
<li><p>Loop back to the beginning of the list if the desired degree is out of range. For example, to be able to find &quot;C#&quot; 2
degrees away from &quot;B&quot;.</p>
</li>
</ol>
<p>I've not been able to find anything from list methods that is able to do this, and I am finding it impossible to do this in a way that doesn't just involve writing 12 <code>dict</code> objects, one for each key, which I know is an option, but there must be some slightly advanced way of doing it that I'm just not seeing.</p>
<p>I know there are libraries that have inbuilt musical logic but it's important to be able to start it from scratch here.</p>
","0","Question"
"79537662","","<p>I am currently stuck on evaluating a list of some <code>Double</code>s representing time intervals. Let's say I have an unordered list of up to 100 values fluctuating around 1: <code>[0.897, 0.912, ... 1.214, 0.981]</code></p>
<p>I am now trying to find the interval of <code>0.05s</code> that includes the most values in my list (say 20 of a list with 100 values).<br />
Below is what I came up on my own and although it seems to work on my dummy data, this approach (looping the entire list for every interval) appears <em>really</em> redundant to me, especially if I were to evaluate much larger lists.</p>
<p>I am interested if someone could advice a more elegant way, perhaps using plotting of some sort?
´´´</p>
<pre><code>    var lowerEnd = 0.5
    var higherEnd = 1.5
    var numberOfElements = 0
    var currentMost = 0
    var mostCommonRange = 0.0

    while(lowerEnd &lt; higherEnd) {
        records.forEach { entry -&gt;
            if(lowerEnd &lt;= entry &amp;&amp; entry &lt; (lowerEnd + 0.05)) {
                numberOfElements += 1
            }              
        }
        if(numberOfElements &gt; currentMost) {
            currentMost = numberOfElements
            mostCommonRange = lowerEnd
        }
        numberOfElements = 0
        lowerEnd += .05
    }
</code></pre>
<p>´´´</p>
","1","Question"
"79537866","","<p>Consider the following code:</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;list&gt;

int main() {
    // Write C++ code here
    std::list&lt;int&gt; li {0,1,2,3,8};
    std::list&lt;int&gt;::iterator* p = new std::list&lt;int&gt;::iterator[5] {};
    
    int j = 0;
    
    for (int i=0;  i&lt;5; ++i){
        p[i] = li.end();
    }
    
    for (auto it=li.begin(); it!=li.end(); ++it){
        p[j++] = it;
    }
    std::cout &lt;&lt; *p[4] &lt;&lt;&quot;, &quot; &lt;&lt; *li.end();
    
    delete[] p;

    return 0;
}
</code></pre>
<p>Why does dereferencing an iterator like <code>list.end()</code> give out a value? Is it not supposed to throw an error?</p>
","2","Question"
"79537965","","<p>I am trying to find the determinant of a 4x4 matrix using nested list operations. I gave the following code</p>
<pre><code>def determinant_4x4(matrix: list[list[int|float]]) -&gt; float:
    # Your recursive implementation here
    def recursedet(matrix):
        if len(matrix) == 2: 
            return matrix[0][0]*matrix[1][1] - matrix[0][1]*matrix[1][0]
        
        sum = 0
        for i in range(len(matrix)):
            ele = matrix[0][i]

            del matrix[0]
            for row in matrix:
                del row[i]
            
            sum += ele*((-1)**i)*recursedet(matrix)
        
        return sum
    
    return recursedet(matrix)
</code></pre>
<p>But I am getting the error: IndexError: list index out of range</p>
<p>However, when I asked GPT to rectify this, it said that my code gave the same output as the rectified version but the matrix was corrupted. Can anybody help me understand what does this mean?</p>
","1","Question"
"79538207","","<p>I want to replace missing data with median values to a dataframe within a list. I can do this by entering the column name. However, how can I do this when I need to randomly select the column in a simulation study?</p>
<p>For example:</p>
<pre><code>mylist &lt;- list(structure(list(V1 = c(3L, 16L, 8L, 2L, 17L, 6L, 10L, 15L, 
7L, 11L), V2 = c(9L, NA, 14L, 18L, NA, 20L, 15L, 17L, 3L, NA), 
    V3 = c(4L, 1L, 10L, 9L, 7L, 13L, 16L, 8L, 17L, 18L)), row.names = c(NA, 
-10L), class = &quot;data.frame&quot;), structure(list(V1 = c(6L, 12L, 
14L, 10L, 5L, 20L, 26L, 2L, 23L, 1L), V2 = c(6L, 15L, NA, 30L, 
NA, 14L, 2L, 11L, NA, 3L), V3 = c(18L, 12L, 3L, 2L, 8L, 23L, 
13L, 16L, 17L, 7L)), row.names = c(NA, -10L), class = &quot;data.frame&quot;), 
    structure(list(V1 = c(18L, 26L, 9L, 28L, 8L, 4L, 29L, 24L, 
    37L, 3L), V2 = c(NA, 36L, 13L, 19L, NA, 31L, 20L, 7L, NA, 
    16L), V3 = c(NA, 25L, NA, NA, NA, 21L, 17L, 4L, 32L, 6L)), row.names = c(NA, 
    -10L), class = &quot;data.frame&quot;))

newlist &lt;- list()
for (k in 1:3) {
  newlist[[k]] &lt;- mylist[[k]] %&gt;%
    mutate(V2 = replace_na(V2, median(V2, na.rm = TRUE)))
}

newlist
</code></pre>
<p>I have successfully done this for column named <code>V2</code> (as you can see above).</p>
<pre><code>ch_column &lt;- sample(1:3, 1)
ch_column
</code></pre>
<p>How can I do if I select the column with the help of <code>sample()</code> function? I need to change the places named <strong><code>V2</code></strong> (with <code>ch_column</code>) in the first codes I shared.</p>
","1","Question"
"79540013","","<p>I was using pop function to catch a value and then add them as below</p>
<pre><code>my_list = [1,2,3,4,5]  
a = my_list.pop(0)
b = my_list.pop(0)
c = a+b
print(c)
</code></pre>
<p>I was expecting the output as 2 but it shows it as 3.
I tried capturing value at different position and add them but it always gave me a number higher then the actual answer</p>
<p>like if POP position were 1 and 2 the addition should be 5 but it shows 6.</p>
<p>Can someone help me with more clarity on this please?</p>
","-1","Question"
"79540307","","<p>I have a list called <code>tmp</code> which contains two elements like below.</p>
<pre><code>&gt; tmp
$a
integer(0)

$b
   [1]    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19
  [20]   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36   37   38
  [39]   39   40   41   42   43   44   45   46   47   48   49   50   51   52   53   54   55   56   57
  [58]   58   59   60   61   62   63   64   65   66   67   68   69   70   71   72   73   74   75   76
  [77]   77   78   79   80   81   82   83   84   85   86 ...
[ reached getOption(&quot;max.print&quot;) -- omitted 386732 entries ]
</code></pre>
<p>I would like to create my own text in console using <code>paste()</code> or <code>print()</code> to print all the values like this:</p>
<pre><code>[1] &quot;a contains integer(0)&quot;
[1] &quot;b contains 1, 2, 3, 4, 5, 6, 7, ..., 386732&quot;
</code></pre>
<p>(used <code>...</code> for the convenience but I want all the values to be printed)</p>
<p>What I have tried is</p>
<pre><code>names &lt;- c('a', 'b')
#1
for (p in seq_along(names)) {
  print(paste(names[p], 'contains', as.list(tmp[p])))
}

#2
cat(sprintf(&quot;%s contains %s\n&quot;, names, tmp))
</code></pre>
<p>and the output is</p>
<pre><code>[1] &quot;a contains integer(0)&quot;
[1] &quot;b contains 1:387732&quot;
</code></pre>
<p>Does anyone know how I can print the entire list as one? Thank you!</p>
","5","Question"
"79542988","","<p>I'm newbie in python language and have some prolem here. I have a list of name and score for example:</p>
<pre><code>score = [['Andy', 80], ['John', 70], ['Diana', 100]]
</code></pre>
<p>I want to Delete or Update score based on it's name. So I can update score if name 'Andy' to 70 or Delete data where name is 'John'. Then the data will be like this</p>
<pre><code>score = [['Andy', 70], ['Diana', 100]]
</code></pre>
<p>Please help me with this, thanks in advance</p>
","-5","Question"
"79549268","","<p>I'm a beginner, practicing Python, I want to understand if one or the other way is better version. If yes, please elaborate!
And how to determine the same in future, on my own?</p>
<pre><code>words = ['This', 'is', 'a', 'list']
separator = ' - '

for word in words:    
    if words.index(word) &lt; len(words) - 1:
        print(word+separator, end='')
    else:
        print(word,end='')
print()
</code></pre>
<p>OR</p>
<pre><code>words = ['This', 'is', 'a', 'list']

for word in words:
    if words.index(word) &lt; len(words) - 1:
        print(word, end=' - ')
    else:
        print(word, end=' ')
print()
</code></pre>
","0","Question"
"79549626","","<p>I have a list of integers with duplicates and I need to sort it by the number of these duplicates.</p>
<p>For example:</p>
<pre class=""lang-none prettyprint-override""><code>input: n = [2, 4, 1, 2]
output: n = [4, 1, 2, 2]
</code></pre>
<p>I wrote some code and noticed, that sort() does not change the list. But if I try to use sorted() with the same key argument, then it works just fine. What is the reason behind this?</p>
<p>My code:</p>
<pre><code>nums = [2, 4, 1, 2]
nums.sort(key = lambda x: nums.count(x))
print(nums)
</code></pre>
<p>Can it be connected to sort() method using in-place algorithm?</p>
","4","Question"
"79550512","","<p>I want to have a SwiftUI List to be filled with array items that is a part protocol type. Here is a snippet I have :</p>
<pre><code>import Foundation
import SwiftUI

struct ScanItem: Hashable, Equatable, Identifiable {
    let id: UUID
    let name: String
    let rssi: Int
    let peripheral: Peripheral?
    
    func hash(into hasher: inout Hasher) {
        hasher.combine(id)
    }
    
    static func == (lhs: ScanItem, rhs: ScanItem) -&gt; Bool {
        return lhs.id == rhs.id
    }
}

protocol ScanProtocol: ObservableObject {
    var isScanning: Bool { get }
    var peripherals: [ScanItem] { get }
    var error: String? { get }

    func startScan()
    func stopScan()
}


struct FoundDeviceListView&lt;Model&gt;: View where Model: ScanProtocol {
    @ObservedObject var scanModel: Model
    
    var body : some View {
        List(scanModel.peripherals) { item in
            Text(&quot;\(item.name) ( \(item.identifier) ) \(item.rssi) dBm&quot;)
        }
    }
}

#Preview {
    @Previewable @StateObject var model = ScanEmulator()
    FoundDeviceListView(scanModel: model)
}
</code></pre>
<p>But I get 2 compile-time issues:</p>
<ol>
<li>Cannot convert value of type '[ScanItem]' to expected argument type 'Binding'</li>
<li>Generic parameter 'Data' could not be inferred</li>
</ol>
<p>What should be done to fix it?</p>
","0","Question"
"79552574","","<p>I want to calculate a parameter (not with a standard function like <code>mean()</code>) for sliding windows. I have found the <code>runner::runner()</code> function, which is probably capable of providing the functionality that I want, i.e. sliding windows based on time, robust in case of missing dates and uneven spacing, but I cannot get the right syntax.</p>
<p>Please see my reprex below, where I try to get windows of three days in length with a lag of 1 day. So window_nr1 would be: d0 - d3, window_nr2: d1 - d4 etc.:</p>
<pre><code>Data:
library(runner)
t &lt;- seq(from=0, to=(3600*24*5), by=3600)
runner(x=t, k=(3600*24*3), lag=(3600*24), idx=t)
</code></pre>
<p>Expected output:</p>
<pre><code>[[1]]
[1] 0 ...... [72] 259200
...
[[3]]
[1] 172800 .... [72] 432000
...
## --&gt; one window spans three days, with one day overlap
</code></pre>
<p>Instead I get this:</p>
<pre><code>[[96]]
[1] 0 ..... [72] 255600
[[97]]
[1] 3600 ... [72] 259200
[[98]]
[1] 7200 .... [72] 262800
...
## --&gt; basically no matter what I enter for lag, 
##     the window shifts one hour (3600s), or one step along `t`.
</code></pre>
<p>I have one major and one minor question:</p>
<ul>
<li>how to I get <code>runner</code> to shift the window one day(86400 s), and not one step along the t-axis?</li>
<li>how to discard the first 95 elements of the result-set that are filled with windows who do
not include full 3 days?</li>
</ul>
","3","Question"
"79553270","","<p>I present here an <code>input</code> data frame that contains lists of data frames that contains lists.
Some of the bottom level lists are empty and some lists have length greater than one.
I am looking for some R code that will turn the <code>input</code> into the <code>output</code> (also given below)</p>
<pre><code>input = structure(list(pet = c(&quot;colin&quot;, &quot;fred&quot;, &quot;roy&quot;),
                       fruit = list(structure(list(apple = &quot;red&quot;,
                                                   banana = &quot;yellow&quot;, 
                                                   mango = &quot;green&quot;),
                                              class = &quot;data.frame&quot;,
                                              row.names = 1L), 
                                    structure(list(apple = &quot;mouldy&quot;,
                                                   banana = &quot;bruised&quot;,
                                                   mango = &quot;cut&quot;),
                                              class = &quot;data.frame&quot;,
                                              row.names = 1L), 
                                    structure(list(apple = c(&quot;windfall&quot;, &quot;cooking&quot;),
                                                   banana = c(&quot;picked&quot;, &quot;ripe&quot;),
                                                   mango = c(&quot;stolen&quot;, &quot;round&quot;)),
                                              class = &quot;data.frame&quot;,
                                              row.names = 1:2)), 
                       flavours = list(structure(list()),
                                       structure(list(sweet = &quot;very&quot;,
                                                      sour = &quot;ouch&quot;, 
                                                      spicy = &quot;hot&quot;),
                                                 class = &quot;data.frame&quot;,
                                                 row.names = 1L), 
                                       structure(list(sweet = c(&quot;sugary&quot;, &quot;calories&quot;),
                                                      sour = c(&quot;citrus&quot;, &quot;lemon&quot;),
                                                      spicy = c(&quot;inferno&quot;, &quot;burning&quot;)),
                                                 class = &quot;data.frame&quot;,
                                                 row.names = 1:2))),
                  row.names = c(NA, 3L),
                  class = &quot;data.frame&quot;)

output = data.frame(pet = c(&quot;colin&quot;, &quot;fred&quot;, &quot;roy&quot;, &quot;roy&quot;),
                    fruit.apple = c(&quot;red&quot;, &quot;mouldy&quot;, &quot;windfall&quot;, &quot;cooking&quot;),
                    fruit.banana = c(&quot;yellow&quot;, &quot;bruised&quot;, &quot;picked&quot;, &quot;ripe&quot;),
                    fruit.mango = c(&quot;green&quot;, &quot;cut&quot;, &quot;stolen&quot;, &quot;round&quot;),
                    flavours.sweet = c(NA, &quot;very&quot;, &quot;sugary&quot;, &quot;calories&quot;),
                    flavours.sour = c(NA, &quot;ouch&quot;, &quot;citrus&quot;, &quot;lemon&quot;),
                    flavours.spicy = c(NA, &quot;hot&quot;, &quot;inferno&quot;, &quot;burning&quot;))
</code></pre>
<p>The features must be that the <code>output</code> data frame has column names that are the concatenation of the names already existing in the <code>input</code>, separated by a dot.
Where the inner data frame has a list that's empty, this should give rise to NA in the final data frame, and not throw any errors.
Where either of the inner data frames has a list with length greater than one, this length will be matched across all lists in that row (it's a design of the input data), and should give rise to two rows in the <code>output</code> with the corresponding values.</p>
<p>I have tried a wide combination of approaches already using such things as rrapply::rrapply(), data.table::'s .SDcol within lapply, unlist(), and every flatten() function that I can find, from purrr:: to jsonlite:: ! None have worked for me so far.</p>
<p>I found some Stack Overflow links (<a href=""https://stackoverflow.com/questions/54936035/r-using-purrr-to-replace-null-elements-with-na-in-a-list-of-lists"">here</a> and <a href=""https://stackoverflow.com/questions/34206003/how-to-flatten-r-data-frame-that-contains-lists"">here</a>) that came close to what I wanted, but none delivered the correct column names, dealing with empty lists, and lists of greater than length one all at once.</p>
<p>Can you help please? Thank you.</p>
","1","Question"
"79558381","","<p>I am trying to append values from a dictionary to a list to find out the total Value of the items from a vending machine.</p>
<p>I have tried matching, listofkeys(selection) from user input/selection == to a key from dictionary and append the value to a list called total. I was aspecting the value to be appended to the new list total everytime an item from list of keys was selected and sum up the total however the list stays empty. &lt;line 34 and 35&gt;</p>
<pre><code>import sys 

products = {&quot;Water&quot;: 1.00, &quot;Chocolate Chip Cookie&quot;: 1.00, &quot;Cheese and Onion Crisps&quot;: 1.10, &quot;Ceeam Soda&quot;: 0.70, &quot;Chicken Sandwich&quot;: 2.60, &quot;M&amp;ms&quot;: 1.50, &quot;Peanut Butter Kit-Kat&quot;: 1.10}

key, value = list(products.items())[0]

position = -1
for key in products:
    position += 1
    print(position,  &quot; &quot;, key, products[key])

productkeys = list(products.keys())


print(&quot;select a number for the item you want \n&quot;)

choice_index = int(input(&quot;Enter Vending item number: &quot;))
order = []
total = []
# Write a try-except block to display the selected product
try:
      print(productkeys[choice_index])
      order = [productkeys[choice_index]]
# or print &quot;wrong index&quot; if the input index is out of range
except IndexError as e:
      print(e)
      
else:
  while choice_index != 9:
      while True:
        choice_index = int(input(&quot;Enter Vending item number:                            9 to exit&quot;))
        if choice_index == 9:
             sys.exit()
        if productkeys[choice_index] == key:
            total.append(products[key])
            sum(total)
        if choice_index not in range(len(productkeys)):
             print(&quot;wrong index&quot;)
        if choice_index in range(len(products)):
            print(productkeys[choice_index])
            order = order + [productkeys[choice_index]]
            break
        break 
      
finally:    
           print(&quot;Thanks for your selection&quot;, order, &quot;Total = &quot;, total)
        
      
 # Try create a dictionary with key = item and value = price add total items together and display total in finally block
</code></pre>
","1","Question"
"79558936","","<pre><code>import time
    
list = [&quot;@gmail.com&quot;, &quot;@yahoo.com&quot;, &quot;@outlook.com&quot;]
email = input(&quot;Email: &quot;) 
time.sleep(1.5)
if email in list:
    print(email) 
else:
    print(&quot;\nPlease enter a valid email!&quot;) 
    exit() 
</code></pre>
<blockquote>
<p>it works well but whenever I type something like <em>myname123@gmail.com</em>, It displays from the <strong>else</strong>.</p>
</blockquote>
","-1","Question"
"79558939","","<p>I have a Polars DataFrame below:</p>
<pre><code>import polars as pl
df = pl.DataFrame({&quot;a&quot;:[1, 2, 3], &quot;b&quot;:[4, 3, 2]})

&gt;&gt;&gt; df
  a    b
i64  i64
  1    4
  2    3
  3    2
</code></pre>
<p>I can subset based on a specific value:</p>
<pre><code>x = df[df[&quot;a&quot;] == 3]

&gt;&gt;&gt; x
  a    b
i64  i64
  3    2
</code></pre>
<p>But how can I subset based on a list of values? - something like this:</p>
<pre><code>list_of_values = [1, 3]
y = df[df[&quot;a&quot;] in list_of_values]
</code></pre>
<p>To get:</p>
<pre><code>  a    b
i64  i64
  1    4
  3    2
</code></pre>
","1","Question"
"79560599","","<p>Assignment:</p>
<blockquote>
<p>Write a funcion <code>cycle_sublist(lst, start, step)</code> where:</p>
<ul>
<li><code>lst</code> is a list</li>
<li><code>start</code> is number that satisfies: <code>0 &lt;= start &lt; len(lst)</code></li>
<li><code>step</code> is the amount we increase your index each iteration</li>
</ul>
<p><strong>without using</strong>: slicing, importing, list comprehension, built-in functions like <code>map</code> and <code>filter</code>.</p>
<p>The function works in this way:
We start to iterate over the list of items when we get back to start or cross it again.
So for example:</p>
<pre><code>cycle_sublist([1], 0, 2) -&gt; [1]
cycle_sublist([6, 5, 4, 3], 0, 2) -&gt; [6, 4]
cycle_sublist([7, 6, 5, 4, 3], 3, 1) -&gt; [4, 3, 7, 6, 5]
cycle_sublist([4, 3, 2, 5, 1, 6, 9], 2, 2) -&gt; [2, 1, 9, 3]
cycle_sublist([4, 3, 2, 5, 1, 6, 9], 5, 3) -&gt; [6, 3, 1]
</code></pre>
</blockquote>
<p>My problem is detecting when I have completed a cycle. I tried to:</p>
<ul>
<li>Check my previous step and current steps and check it against start. The problem is there are some cases where it fails.</li>
<li>Count my steps and checking if I had crossed the start.</li>
</ul>
<p>None of those worked.</p>
<p>Here is my code - with the missing logic for detecting the cycle:</p>
<pre><code>def cycle_sublist(lst,start,step):
    index = start 
    length = len(last)

    cycle_complete = False
    res = []

    while True:
        index = index % length if index &gt;= length else index

        if ...:
            cycle_complete = True

        if cycle_complete and index &gt;= start:
            break

        res.append(lst[index])

        index += step

    return res
</code></pre>
<p>If you can I'd like to ask you to answer with the algorithm to detect the cycle only so I can write the code myself.</p>
","7","Question"
"79562622","","<p>I have a list of lists called mylist. In the following example, mylist has two lists, in which contains another two lists of random numbers.</p>
<pre><code>mylist &lt;- list()
list1 &lt;- rnorm(100)
list2 &lt;- rnorm(100)
list3 &lt;- rnorm(100)
list4 &lt;- rnorm(100)

mylist[[1]] &lt;- list(&quot;list1&quot; = list1, &quot;list2&quot; = list2)
mylist[[2]] &lt;- list(&quot;list1&quot; = list3, &quot;list2&quot; = list4)  
</code></pre>
<p>When printing the mylist, it should give us something like</p>
<pre><code>[[1]]
[[1]]$list1
  [1]  0.0382233645  0.2416676908  1.1910173996  0.7833025597 -0.7144370041
  [6]  1.9762077872  0.9438593806  0.1590264664 -0.5323112247  1.2820246358...
[[1]]$list2
  [1] -0.084982839 -0.462448106  0.771458598  1.354049503 -1.616381590 -0.368789648
  [7] -0.678521566 -0.340799431 -0.441370037 -0.212117105 -0.921661840  0.893550382...
[[2]]
[[2]]$list1
  [1]  0.367971534  0.028976364  1.391761655 -0.033661646  1.196138270 -1.645738949
  [7]  0.086037770  0.530143788  0.639389906  2.193683933 -1.427285285  0.430282258...
[[2]]$list2
  [1]  0.235027959  2.110340896 -0.951831561 -1.510063739 -0.007402732 -0.575736079
  [7] -0.363731268  1.232404358 -0.848716435  1.217101680 -0.014577878  0.440142686...
</code></pre>
<p>I want to unlist <code>mylist</code> so that the final results (res) will output two elements. The first element will combine all available list1, and the second element will aggregate all available list2. The final results should look like</p>
<pre><code>res$list1
[1]  0.0382233645  0.2416676908  1.1910173996  0.7833025597 -0.7144370041
[6]  1.9762077872  0.9438593806  0.1590264664 -0.5323112247  1.2820246358...
[101]  0.367971534  0.028976364  1.391761655 -0.033661646  1.196138270 -1.645738949
[107]  0.086037770  0.530143788  0.639389906  2.193683933 -1.427285285  0.430282258...

res$list2
[1]  0.367971534  0.028976364  1.391761655 -0.033661646  1.196138270 -1.645738949
[7]  0.086037770  0.530143788  0.639389906  2.193683933 -1.427285285  0.430282258...
[101]  0.235027959  2.110340896 -0.951831561 -1.510063739 -0.007402732 -0.575736079
[107] -0.363731268  1.232404358 -0.848716435  1.217101680 -0.014577878  0.440142686...
</code></pre>
<p>How can I achieve this?</p>
","6","Question"
"79570015","","<p>I am trying to map SummaryData</p>
<pre><code>final List&lt;Map&lt;String, Object&gt;&gt; summaryData;
</code></pre>
<p>on <code>QuestionSummary</code> widgets I'm getting error</p>
<blockquote>
<p>The element type 'List&lt;Row&gt;' can't be assigned to the list type 'Widget'. Flutter`</p>
</blockquote>
<pre><code>import 'package:flutter/material.dart';

class QuestionsSummary extends StatelessWidget{
  QuestionsSummary(this.summaryData, {super.key});

  final List&lt;Map&lt;String, Object&gt;&gt; summaryData;

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        summaryData.map((data){
          return Row(
            children: [
              Text(((data['questions'] as int)+ 1).toString()),
            ],
          );
        }).toList(),
      ],
    );
  }

}
</code></pre>
<p>I tried to add <code>summaryData.map(...).toList()</code>, but I still get the same error.</p>
","0","Question"
"79570725","","<p>I have Three lists, list1 contains the first value, List2 contains the second value, and the third contains characters. How do I make mathematical operations based on the signs stored there work with the numbers from list1 and list2.That is, if the sign is +, then you need to add an element of list 1 and list2. The lists were filled using multithreading, and I do not know if this has any effect or not. I need all this to implement a console calculator. Help please, look my operation code:</p>
<pre><code>import java.util.ArrayList;
import java.util.List;

public class Calculate {

    public static List&lt;Double&gt; converter(List&lt;String&gt; list) {
        List&lt;Double&gt; doubleList = new ArrayList&lt;&gt;();
        for (String s : list) {
            doubleList.add(Double.parseDouble(s));
        }
        return doubleList;
    }

    public static Double addition(Double a, Double b) {
        return a + b;
    }

    public static Double subtraction(Double a, Double b) {
        return a - b;
    }

    public static Double multiplication(Double a, Double b) {
        return a * b;
    }

    public static Double division(Double a, Double b) {
        return a / b;
    }

    public static Double operation(List&lt;Double&gt; doubles1, List&lt;Double&gt; doubles2, List&lt;String&gt; symbols, Double result) {
        Double a = 0.0;
        Double b = 0.0;
        for (int i = 0; i &lt; doubles1.size(); i++) {
            a = doubles1.get(i);
            for (int j = 0; j &lt; doubles2.size(); j++) {
                b = doubles2.get(j);
                if (symbols.get(i).equals(&quot;+&quot;)) {
                    result = Calculate.addition(a, b);
                } else if (symbols.get(i).equals(&quot;-&quot;)) {
                    result = Calculate.subtraction(a, b);
                }
            }
        }
        return result;
    }

    public static void main(String[] args) {
        Double result = 0.0;
        List&lt;Double&gt; doubles = new ArrayList&lt;&gt;();
        List&lt;Double&gt; doubles2 = new ArrayList&lt;&gt;();
        doubles.add(33.0);
        doubles2.add(17.0);
        doubles.add(50.0);
        doubles2.add(50.0);
        doubles.add(50.0);

        List&lt;String&gt; symbols = new ArrayList&lt;&gt;();
        symbols.add(&quot;+&quot;);
        symbols.add(&quot;+&quot;);
        symbols.add(&quot;-&quot;);
        symbols.add(&quot;-&quot;);
        System.out.println(operation(doubles, doubles2, symbols, result));
    }
}
</code></pre>
<p>Look my class for adding list:</p>
<pre class=""lang-java prettyprint-override""><code>import java.util.*;
import java.util.concurrent.*;

public class Test2 {
    private static Double result = 0.0;
    private static Double value = 0.0;
    private static final List&lt;String&gt; firstValues = Collections.synchronizedList(new ArrayList&lt;&gt;());
    private static final List&lt;String&gt; symbols = Collections.synchronizedList(new ArrayList&lt;&gt;());
    private static final List&lt;String&gt; secondValues = Collections.synchronizedList(new ArrayList&lt;&gt;());
    private static final BlockingQueue&lt;String&gt; q1 = new LinkedBlockingQueue&lt;&gt;();
    private static final BlockingQueue&lt;String&gt; qs = new LinkedBlockingQueue&lt;&gt;();
    private static final BlockingQueue&lt;String&gt; q2 = new LinkedBlockingQueue&lt;&gt;();
    private static volatile boolean running = true;

    public static void main(String[] args) throws InterruptedException {
        Scanner scanner = new Scanner(System.in);

        // Reader thread: routes inputs to correct queues
        Thread reader = new Thread(() -&gt; {
            while (running) {
                String input = scanner.nextLine();
                if (input.equals(&quot;=&quot;)) {
                    running = false;
                    q1.offer(&quot;STOP&quot;);
                    qs.offer(&quot;STOP&quot;);
                    q2.offer(&quot;STOP&quot;);
                    break;
                }

                if (input.startsWith(&quot;1:&quot;)) {
                    q1.offer(input.substring(2));
                } else if (input.startsWith(&quot;s:&quot;)) {
                    qs.offer(input.substring(2));
                } else if (input.startsWith(&quot;2:&quot;)) {
                    q2.offer(input.substring(2));
                } else {
                    System.out.println(&quot;Invalid input. Use 1:&lt;val&gt;, s:&lt;val&gt;, or 2&lt;val&gt;&quot;);
                }
            }
        });

        // Each worker reads only from its own queue
        Thread worker1 = new Thread(() -&gt; process(q1, firstValues, &quot;1st&quot;));
        Thread workerS = new Thread(() -&gt; process(qs, symbols, &quot;Symbol&quot;));
        Thread worker2 = new Thread(() -&gt; process(q2, secondValues, &quot;2nd&quot;));

        reader.start();
        worker1.start();
        workerS.start();
        worker2.start();

        reader.join();
        worker1.join();
        workerS.join();
        worker2.join();
    }

    private static void process(BlockingQueue&lt;String&gt; queue, List&lt;String&gt; list, String name) {
        while (running || !queue.isEmpty()) {
            try {
                String value = queue.poll(100, TimeUnit.MILLISECONDS);
                if (value == null || value.equals(&quot;STOP&quot;)) continue;
                list.add(value);
                System.out.println(&quot;[&quot; + name + &quot;] Added: &quot; + value);
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
    }
}
</code></pre>
","-1","Question"
"79572333","","<p>Hello I want to remove lines from a txt file that don't match with a list of strings.</p>
<p>For example my list look like this</p>
<ul>
<li>AppleYellow</li>
<li>PearOrange</li>
<li>BannanaPurple</li>
<li>KiwiGreen</li>
</ul>
<p>And my list</p>
<ul>
<li>AppleRed</li>
<li>AppleGreen</li>
<li>PearBrown</li>
<li>PearGreen</li>
<li>BannanaYellow</li>
<li>BannanaGreen</li>
<li>KiwiGreen</li>
<li>KiwiBrown</li>
</ul>
<p>And the output i want is</p>
<ul>
<li>KiwiGreen</li>
</ul>
<p>Is there any way to achieve this?</p>
<p>Thanks</p>
","-5","Question"
"79573312","","<p>I have a folder with about 300 .csv files. I was able to read all of them and list them in R with this script</p>
<pre><code>allsp &lt;- gsub(&quot;\\.csv$&quot;,&quot;&quot;, list.files(pattern=&quot;\\.csv$&quot;))

for(sp in allsp){
  assign(sp, read.csv(paste(sp, &quot;.csv&quot;, sep=&quot;&quot;)))}
</code></pre>
<p>Now I need to change one column name of all of them in the same way but I'm having problems because it seems that even if I see all of them listed as dataframe they aren't so. Can you please help me?</p>
","0","Question"
"79574787","","<p>I want to be able to filter a given data.frame by a dynamic list.</p>
<p>Lets say I have a list of filters like this</p>
<pre class=""lang-r prettyprint-override""><code>filter_list = list(filter_1 = list(vs = c(0), carb = c(1,4)),
                   filter_2 = list(cyl = c(4,6)))
</code></pre>
<p>Is there a way to filter a <code>data.frame</code> like <code>mtcars</code> in such a way, that it is equivalent too</p>
<pre><code>library(dplyr)

mtcars %&gt;%
  filter(vs %in% c(0) &amp; carb %in% c(1,4) |
           cyl %in% c(4,6))
</code></pre>
<p>using the filter_list form above? So each element of the <code>filter_list</code> is evaluated as <code>or</code> and each item of the element of the filter list is evaluated as an <code>and</code>.</p>
<p>I tried using a loop, but it isn't working as intended:</p>
<pre class=""lang-r prettyprint-override""><code>df = mtcars
for(f in filter_list){
  vars = names(f)
  i = 1
  for(n in f){
    df = filter(df, !!vars[[i]] %in% n)
    i = i +1
  }
}
</code></pre>
<p>This just returns a empty <code>data.frame</code>. The <code>or</code> condition is also violated with the <code>loop</code>-approach.</p>
","10","Question"
"79578386","","<p>I have a long input list, and I want to generate combinations of 3 elements. But each combination's elements should be drawn from a length-5 sublist of the original list, rather than drawing elements from the whole list.</p>
<p>Equivalently, no two elements of a combination can be spaced more than 4 positions apart in the original list.</p>
<p>I wrote this code:</p>
<pre><code>import itertools

input = [
    'a','b','c','d','e','f','g','h','i','j'
]
l=0
space = ' '
count = 3
run = 5

def combine_list(input_list, count, run):
    list_out = []
    j=0
    k = (len(input)-run)+1
    while j &lt; k:
        comb_set = input_list[j:run+j:]
        comb = itertools.combinations(comb_set,count)
        for i in comb:
            out = space.join(list(i))
            list_out += [out]
        j += 1
    return list_out

x = combine_list(input,count, run)

print(x, len(x))
</code></pre>
<p>with this output:</p>
<pre><code>['a b c', 'a b d', 'a b e', 'a c d', 'a c e', 'a d e', 'b c d', 'b c e', 'b d e', 'c d e', 'b c d', 'b c e', 'b c f', 'b d e', 'b d f', 'b e f', 'c d e', 'c d f', 'c e f', 'd e f', 'c d e', 'c d f', 'c d g', 'c e f', 'c e g', 'c f g', 'd e f', 'd e g', 'd f g', 'e f g', 'd e f', 'd e g', 'd e h', 'd f g', 'd f h', 'd g h', 'e f g', 'e f h', 'e g h', 'f g h', 'e f g', 'e f h', 'e f i', 'e g h', 'e g i', 'e h i', 'f g h', 'f g i', 'f h i', 'g h i', 'f g h', 'f g i', 'f g j', 'f h i', 'f h j', 'f i j', 'g h i', 'g h j', 'g i j', 'h i j'] 60
</code></pre>
<p>But this produces duplicates. I can sort to remove them, but I would rather not make them in the first place.</p>
","1","Question"
"79579896","","<p>So I created a list of grocery items
I wanted the user to be able to add items but prevent them from duplicating items that are already on the list how do i do this</p>
","-2","Question"
"79583042","","<p>I have a list of numbers and need to analyze them in two different ways.</p>
<pre><code>[[ 0, 1, 0, 1, 0], [1, 1, 1, 1, 1], [ 0, 1, 1, 1, 0]]
</code></pre>
<p>I need to add up any 1's and group them but ONLY if they're after each other. For this example:</p>
<pre><code>&gt;&gt;&gt;[[1, 1], [5], [3]]
</code></pre>
<p>(if 0 then post a 0)</p>
<p>Then I need to add each row but one column at a time</p>
<pre><code>[[ **0**, 1, 0, 1, 0], [**1**, 1, 1, 1, 1], [ **0**, 1, 1, 1, 0]]
&gt;&gt;&gt;1
</code></pre>
<p>(Continues to the next column)</p>
<pre><code>[[ 0, **1**, 0, 1, 0], [1, **1**, 1, 1, 1], [ 0, **1**, 1, 1, 0]]
&gt;&gt;&gt;3
</code></pre>
<p>etc, etc.</p>
","-5","Question"
"79584112","","<p>I'm trying to remove duplicate items from a list in Python, but I want to preserve the original order of the elements.</p>
<p>For example:</p>
<pre><code>my_list = [1, 3, 2, 3, 1, 5, 2]
</code></pre>
<p>I tried using <code>set()</code> to remove duplicates:</p>
<pre><code>list(set(my_list))
</code></pre>
<p>But the order is not preserved. Is there a simple and efficient way to do this in Python?</p>
<p>I want to get:</p>
<pre><code>[1, 3, 2, 5]
</code></pre>
","-3","Question"
"79584270","","<p>I've searched extensively, but I can't find a solution that meets all these objectives at once:</p>
<ul>
<li>I have hundreds of RData files located in different subfolders.</li>
<li>In each of these RData files, I have a single data.frame object and other character objects. The data.frame object always has 48 columns, but the number of rows can vary (several hundred thousand).</li>
</ul>
<p>I would like to be able to import only the data.frames into a list (i.e., without the other character objects nor the other formats), while selecting only their columns 3, 4, 5, and 6, and then rbind them all into a new, single object in the environment (i.e., no longer in a list).<br />
Optional question: given the high number and large size of the data.frames, wouldn't it be better to convert the data.frames to data.tables first?</p>
<p>Thanks for help.</p>
<p>Sorry, but given the complexity of the case, I don't see how to provide a concrete example to test.</p>
","0","Question"
"79589552","","<p>I am traversing a list and want to remove a certain element that matches a condition. I also want to return that element. There are two ways I've come up with to do this.</p>
<p>First:</p>
<pre><code>for (int i = 0; i &lt; list.size(); i++) {
    if (shouldBeRemoved(list.get(i)) {
        E toRemove = list.get(i);
        list.remove(i);
        return toRemove;
    }
}
return null;
</code></pre>
<p>Second:</p>
<pre><code>Iterator&lt;E&gt; iterator = list.iterator();
while (iterator.hasNext()) {
    E element = iterator.next();
    if (shouldBeRemoved(element)) {
        iterator.remove();
        return element;
    }
}
return null;
</code></pre>
<p>I like the Iterator method, since it seems like the Iterator &quot;knows where it is&quot; and therefore shouldn't have to go through the list to find the thing to delete; the going-through happens alongside the search for the item itself. That's just speculation, though.</p>
<p>Which one of these is more efficient/faster? Are there certain scenarios in which it is better to use one or the other?</p>
<p>EDIT: The intended behavior is for only one element to be removed. The specific element that is to be removed doesn't matter, as long as it matches the condition.</p>
<p>As a programmer, I know the specific implementation of List that is being used, but for the purposes of this question, I'd like to examine the performance of multiple different implementations, if it is relevant to the performance of the algorithm.</p>
","3","Question"
"79595582","","<p>The goal of the assignment was to initialize an empty list called <strong>rand_array</strong> then fill it with 10 unique random numbers</p>
<p>I figured out the assignment normally as per the teacher's directions:</p>
<pre><code>import random

rand_array = []
while len(rand_array) != 10:
    lmnt = random.randint(1, 15)
    if lmnt not in rand_array:
        rand_array.append(lmnt)

print(rand_array)
</code></pre>
<p>I modified it later to have inline to make it more efficient since my teacher didn't like me using inline:</p>
<pre><code>import random

rand_array = []
while len(rand_array) &lt; 10:
    lmnt = random.randint(1, 15)
    rand_array.append(lmnt) if lmnt not in rand_array else None
</code></pre>
<p>I started questioning if this was actually more efficient and if I could still make it better if I take off the requirement of initializing an empty list. So, the main question is: &quot;Is the second version more efficient than the first?&quot; and also &quot;Can I make the second version even more efficient?&quot;</p>
<p>Also, before anyone says, &quot;This is such a small assignment, it doesn't matter&quot;, if I use lots of inline code in the future, I need to know if the way I'm using it is more efficient than non-inline code.</p>
<p>Also I apologize in advance if anything I have typed is inaccurate.</p>
","0","Question"
"79596807","","<p>I have two lists that look like -</p>
<pre><code>list_a = [('gfhr_10_dfrght_sl', None, None), ('gfhr_11_dfrght_sl', None, None), ('mnop_yxt_done', None, None), ('mnop_yxt_gd', None, None), ('frdf_yxty_syn', None, None), ('ABC_XYZ1', 2, 0), ('ABC_XYZ2', 2, 0), ('ABC_XYZ3', 2, 0), ('ABC_XYZUL', 2, 0), ('ABC_JKL1', 1, 0), ('ABC_JKL2', 1, 0)]


list_b = ['ABC_XYZ1', 'ABC_XYZ2', 'ABC_XYZ3', 'ABC_XYZUL', 'mnop_yxt_done', 'mnop_yxt_gd', 'frdf_yxty_syn', 'ABC_JKL1', 'ABC_JKL2', 'DFG_OUT2_ATTgd', 'UHBCB_DFG_nvbgh']
</code></pre>
<p>I want a list_c that looks like -</p>
<pre><code>list_c = ['(2-0) ABC_XYZ1', ' (2-0) ABC_XYZ2', '(2-0) ABC_XYZ3', '(2-0) ABC_XYZUL', 'mnop_yxt_done', 'mnop_yxt_gd', 'frdf_yxty_syn', '(2-0) ABC_JKL1', '(2-0) ABC_JKL2', 'DFG_OUT2_ATTgd', 'UHBCB_DFG_nvbgh']
</code></pre>
<p>Basically it should replace items in list_b from items and corresponding index that are present in list_a. I have this code -</p>
<pre><code>for i in list_b:
  for j in list_a:
    if (i == j[0]) and (j[1] != 'None'):
      list_c.append(f&quot;({j[1]}-{j[2]}) {i}&quot;)
    else:
      list_c.append(i)
list_c = list(dict.fromkeys(list_c))
print(list_c)
</code></pre>
<p>I am getting this output instead -</p>
<pre><code>['ABC_XYZ1', '(2-0) ABC_XYZ1', 'ABC_XYZ2', '(2-0) ABC_XYZ2', 'ABC_XYZ3', '(2-0) ABC_XYZ3', 'ABC_XYZUL', '(2-0) ABC_XYZUL', 'mnop_yxt_done', '(None-None) mnop_yxt_done', 'mnop_yxt_gd', '(None-None) mnop_yxt_gd', 'frdf_yxty_syn', '(None-None) frdf_yxty_syn', 'ABC_JKL1', '(1-0) ABC_JKL1', 'ABC_JKL2', '(1-0) ABC_JKL2', 'DFG_OUT2_ATTgd', 'UHBCB_DFG_nvbgh']
</code></pre>
<p>It's appending same element again too in my code. How do I just get it once?</p>
","-1","Question"
"79601344","","<p>I want  to build a page that has each author with their quote.
I have tried, but everything i tried has failed.
The function below is what causes me the issues.</p>
<pre class=""lang-py prettyprint-override""><code>quotes = {
    &quot;Arthur Ashe&quot;: &quot;Start where you are, Use what you have, Do what you can.&quot;,
    &quot;Steve Jobs&quot;: &quot;Don’t watch the clock; do what it does. Keep going.&quot;,
    &quot;Sam Levenson&quot;: &quot;Don’t watch the clock; do what it does. Keep going.&quot;,
    &quot; Robert Collier&quot;: &quot;Success is the sum of small efforts, repeated day in and day out.&quot;,
    &quot;Nelson Mandela&quot;: &quot;It always seems impossible until it’s done.&quot;,
    &quot;Mahatma Gandhi&quot;: &quot;The future depends on what you do today.&quot;,
    &quot;Zig Ziglar&quot;: &quot;You don’t have to be great to start, but you have to start to be great.&quot;,
    &quot;Dave&quot;: &quot;Discipline is doing what needs to be done, even if you don’t want to do it.&quot;,
    &quot;Suzy Kassem&quot;: &quot;Doubt kills more dreams than failure ever will.&quot;,
    &quot;Pablo Picasso&quot;: &quot;Action is the foundational key to all success.&quot;    
}
     
def mypage(request):
    messages = [quotes[item] for item in quotes]
    authors = [item for item in quotes]
    return render(request, &quot;quotes/mypage.html&quot;, {&quot;authors&quot;: authors, &quot;quotes&quot;:messages})
</code></pre>
","1","Question"
"79605319","","<p>I wrote a function that checks if every character on a given string is also present in an arbitrary list. The code works for most cases, but when the input is an empty string, the built-in function <code>all</code> evaluates to <code>True</code>, even though that value isn't present at the <code>ITEMS</code> list:</p>
<pre><code>ITEMS = ['a', 'b', 'c', 'd']

def check_all_chars_are_in_list(string):
    return all(char in ITEMS for char in string)


if __name__ == &quot;__main__&quot;:
    print(check_all_chars_are_in_list('saban'))   # False, as expected. (1)
    print(check_all_chars_are_in_list('abcd'))    # True, as expected.  (2)
    print(check_all_chars_are_in_list(''))        # True (why?).        (3) 

</code></pre>
<p>I performed a manual test as to try and understand that behavior. I simply checked the <code>in</code> assertion via the terminal:</p>
<pre><code>&gt;&gt;&gt; st = ''
&gt;&gt;&gt; l = ['a', 'b', 'c', 'd']
&gt;&gt;&gt; st in l
False        # As expected
</code></pre>
<p>I get the expected <code>False</code> value, so how come the example (3) on my code evaluates to <code>True</code>? Can someone explain that to me, please?</p>
","-3","Question"
"79611365","","<p>I have a list of dataframes containing a column that has information and I would like to append to each of the column names in the respective dataframes.</p>
<p>The dataframes are held in a list like so:</p>
<pre><code>set.seed(42)

df1 &lt;- data.frame(a=runif(5), b=runif(5), 
                  c=runif(5), d=rep(&quot;2019-01-01&quot;, 5))

df2 &lt;- data.frame(a=runif(5), b=runif(5), 
                  c=runif(5), d=rep(&quot;2018-01-01&quot;, 5))

dflist &lt;- list(df1, df2)
</code></pre>
<p>I would like to take the first four characters of column <code>d</code> in each of the dataframes and add it as a suffix to the other three columns in each dataframe.  The desired result would be as follows:</p>
<pre><code>list(structure(list(a_2019 = c(0.0735903384629637, 0.45781580847688, 
0.895365369971842, 0.956784400856122, 0.388441316317767), b_2019 = c(0.569785073166713, 
0.988750448683277, 0.691403181757778, 0.429520909907296, 0.89688018662855
), c_2019 = c(0.112286600051448, 0.536210271995515, 0.642839963315055, 
0.0812418239656836, 0.823694829596207)), class = &quot;data.frame&quot;, row.names = c(NA, 
-5L)), structure(list(a_2018 = c(0.43615216971375, 0.201880273642018, 
0.773977502714843, 0.161682726116851, 0.610612905817106), b_2018 = c(0.446780714904889, 
0.986791611183435, 0.151835724711418, 0.479479277506471, 0.71488028508611
), c_2018 = c(0.918830131879076, 0.762737749610096, 0.713592572370544, 
0.207230044994503, 0.130390273174271)), class = &quot;data.frame&quot;, row.names = c(NA, 
-5L)))
</code></pre>
<p>Based on posts <a href=""https://stackoverflow.com/questions/60064798/add-different-suffix-to-column-names-on-multiple-data-frames-in-r"">like this one</a></p>
<p>I figure it should be something involving <code>names</code> or <code>colnames</code> and <code>paste</code> with some <code>lapply</code> but</p>
<pre><code>colnames(dflist) &lt;- paste(colnames(dflist), substr(dflist[[]]$d, 1, 
4), sep = &quot;_&quot;)  
</code></pre>
<p>But this doesn't seem to be working because i'm missing a subscript.  I get the error:</p>
<blockquote>
<pre><code>Error in dflist[[]]: missing subscript.  
</code></pre>
</blockquote>
<p>I also tried:</p>
<pre><code>dflist &lt;- lapply(dflist, function(i){
dflist &lt;- dflist[[i]]

names(dflist) &lt;- paste(names(dflist), substr(dflist[[i]]$d,1,4), 
sep = &quot;_&quot;))

dflist

})
</code></pre>
<p>But R returned the error, <code>invalid subscript type 'list'</code>.</p>
<p>Is there a way to achieve this result via <code>lapply</code>? I'm pretty sure there's a simple solution to this but I keep coming up short.  Any suggestions would be greatly appreciated.</p>
","1","Question"
"79613039","","<p>I have a long list of items that I want to assign a number to that increases by one every time the value in the list changes. Basically I want to categorize the values in the list.</p>
<p>It can be assumed that the values in the list are always lumped together, but I don't know the number of instances it's repeating. The list is stored in a dataframe as of now, but the output needs to be a dataframe.
Example:</p>
<pre><code>my_list = ['Apple', 'Apple', 'Orange', 'Orange','Orange','Banana']
grouping = pd.DataFrame(my_list, columns=['List'])
</code></pre>
<p>Expected output:</p>
<pre><code>     List  Value
0   Apple      1
1   Apple      1
2  Orange      2
3  Orange      2
4  Orange      2
5  Banana      3
</code></pre>
<p>I have tried with a <code>for</code> loop, where it checks if the previous value is the same as the current value, but I imagine that there should be a nicer way of doing this.</p>
","4","Question"
"79624324","","<p>The following table <code>my_table</code></p>
<pre><code>idx   speed   duration
 0     420       50
 1     380       40
 2     390       45
</code></pre>
<p>is stored in a database file <code>my_db.db</code>.  Loading this table as a list of dictionaries appears straightforward:  the code</p>
<pre><code>conn = sqlite3.connect(folder_path + 'my_db.db')
conn.row_factory = sqlite3.Row
cur = conn.cursor()
cur.execute(f'SELECT * FROM my_table')
list_of_objs = cur.fetchall()
list_of_dicts = [dict(obj) for obj in list_of_objs]
cur.close()
conn.close()
</code></pre>
<p>yields</p>
<pre><code>list_of_dicts = [
  {'idx': 0, 'speed': 420, 'duration': 50},
  {'idx': 0, 'speed': 380, 'duration': 40},
  {'idx': 0, 'speed': 390, 'duration': 45}
]
</code></pre>
<p>However, for my data, I would like to load the data as a dictionary of lists:</p>
<pre><code>dict_of_lists = [
  'idx': [0, 1, 2],
  'speed': [420, 380, 390],
  'duration': [50, 40, 45]
]
</code></pre>
<p>Is there a straightforward way to do this?</p>
<p>(Part of my motivation for the dictionary-of-lists representation is that it seems like it would require less RAM than a list of dictionaries when the table has many rows.  But does it, or does Python somehow recognize and avoid the redundancy of keys in the list-of-dictionaries representation?)</p>
","0","Question"
"79625347","","<p>I am working on <code>Python 3x</code> and I have this list of integers:</p>
<pre><code>L = [0, 1, 2, 3, 4]
</code></pre>
<p>How could I from <code>L</code> create this list of tick labels:</p>
<pre><code>T = [0, \pi, 2\pi, 3\pi, 4\pi] ? 
</code></pre>
<p>I have no idea and just tried:</p>
<pre><code>L = [0,1,2,3,4]
ticklabels = [f'L[{i}]' + r'$\pi$' for i in L]
</code></pre>
<p>which doesn't give the expected result...</p>
","-1","Question"
"79627957","","<p>Here is my code to see if names from modified_sn exist in modified_assigned_to_path (when I hit run, nothing happens, and I don't get any errors either. What am I doing wrong? Thanks in advance):</p>
<pre><code>sn_users_path = &quot;C:\\Users\\karlj\\Downloads\\sn_users.csv&quot;
assigned_to_path = &quot;C:\\Users\\karlj\\Downloads\\assigned_to.csv&quot;
modified_sn = &quot;sn_users_path_modified.csv&quot;
modified_assigned_to_path = &quot;assigned_to_path.csv&quot;

with open(sn_users_path, 'r') as sn:
    with open(modified_sn, 'w') as outfile:
        for user_line in sn:
            user_line = user_line.rstrip()
                if &quot;@&quot; in user_line and &quot;.&quot; in user_line:
                    users = user_line.split('@')
                    users[0] = users[0].split(&quot;.&quot;)
                    users[0] = &quot; &quot;.join(users[0])
                    users[0] = users[0].title()
                    if &quot;,&quot; in user_line:
                        users[1] = users[1].split(&quot;,&quot;)
                        outfile.write(str(users) + '\n')
                    else:
                        user = user_line.split(&quot;,&quot;)
                        outfile.write(str(user) + '\n')


with open(modified_sn, 'r') as msn:
    for line in msn:
        line = eval(line)
    with open(modified_assigned_to_path) as map:
        for names_list in map:
            for name in names_list:
                if name == line[0]:
                    print(name)
</code></pre>
<p>Hi everyone, I'm somewhat of a Python beginner, maybe intermediate level, not sure what you would classify me as. Anyways, I have two files. I want to check if names in one csv file exist in another csv file. I took both original files and made some formatting changes by creating a new file and changing the strings into lists of strings, as well as maybe getting rid of some @ symbols. I am trying to see if the names in my modified_assigned_to_path file, which are all contained in one list, exist in any of the lists in my modified_sn list. Take a look at the formatting for reference for both these modified files for an easier visual understanding:</p>
<p>modified_sn looks like (just a glimpse, but the rest of the file looks like this, all names formatted in proper case. TRUE or False just mean if that employee is still active or not):</p>
<p>['Wayne Stevenson', 'FALSE']</p>
<p>['Wayne Bradley', ['clarkwinterjv.com', 'TRUE']]</p>
<p>modified_assigned_to_path looks like (just a glimpse, again, all names formatted with proper case:</p>
<p>['assigned_to_updated', 'Andy Fuhrmann', 'Gina Eaton', 'Lakeasha Williams', 'Chris Chow', 'Teha Herzi', 'Loida Maiselman']</p>
","0","Question"
"79628290","","<p>I'm developing a python script that executes some check on yt channels.
I need to retreive channel_id full list of video, or at least the last 30-40 videos.</p>
<p>I'm using the API <strong><a href=""https://www.googleapis.com/youtube/v3/search"" rel=""nofollow noreferrer"">https://www.googleapis.com/youtube/v3/search</a></strong> with the following params:</p>
<ul>
<li>API KEY</li>
<li>channel ID</li>
<li>part=id</li>
<li><strong>maxResults=30</strong></li>
</ul>
<p>However it always shows me only 5 results as the FULL set of result. There is no pagination. Even testing the API from the google console it returns me the same.
Additionally, if I call consecutvely the API I get one time 4 results, one time 5, one time 3... seems to be randomic.</p>
<p>Maybe there is somewhere some limitation.
Any suggestions?</p>
<p>Thanks</p>
<p>I expected it to retourn the number of reslts of maxResults</p>
","1","Question"
"79629963","","<p>I have a list like this.</p>
<pre><code>[[&quot;Hi, this is Tesa form the sales departmet. Iam working here from&quot;],[&quot;&quot;],[&quot;&quot;]]
</code></pre>
<p>How can I explode this string inside the first sublist by preserving words by filling all sublists.Like,</p>
<pre><code>[[&quot;Hi, this is Tesa.&quot;],[&quot;form the sales departmet&quot;],[&quot;Iam working here from&quot;]]
</code></pre>
<p>Things to consider:</p>
<ol>
<li>The number of sublists will can be <code>n</code> but all of them will be empty for sure except the first one.</li>
<li>Word format should not be broken. There is no need to preserve the sentence meaning.</li>
</ol>
<p>what I have:</p>
<pre><code>def explode_string(array, split_positions=None):
    original_text = array[0][0]
    num_sublists = len(array)
    
    if split_positions is None:
        chunk_size = len(original_text) // num_sublists
        split_positions = [chunk_size * i for i in range(1, num_sublists)]
    
    parts = []
    start = 0
    for pos in split_positions:
        parts.append(original_text[start:pos])
        start = pos
    parts.append(original_text[start:])
    
    result = [[part] for part in parts]
    
    return result

original_array = [
    [&quot;Hi, this is Tesa form the sales departmet. Iam working here from&quot;],
    [&quot;&quot;],
    [&quot;&quot;]
]

result = explode_string(original_array, [15, 39])
print(result)
</code></pre>
<p>The output iam getting:</p>
<pre><code>[['Hi, this is Tes'], ['a form the sales departm'], ['et. Iam working here from']]
</code></pre>
<p>The dataset is very long, Looking if you guys suggest any easy approch to tackle this.</p>
","-2","Question"
"79630693","","<p>I have a dataframe, and a list of potentially different filters.</p>
<p>Is there a way to apply a filter that comes from a list so that the dataframe is filtered accordingly?</p>
<p>MRE:</p>
<p>In this example, the <code>df</code> is filtered based on the conditions set out in <code>filter_ls[0]</code>, ie, I want to run <code>df[df.col1&gt;3]</code>. the filter used depends on earlier logic, which specifies which element to take from filter_ls, ie element 0</p>
<pre><code>df=pd.DataFrame({'col1':[1,2,3,4,5], 'col2':[6,7,8,9,9], 'col3':[11,12,13,14,15]})
filter_ls=['df[df.col1&gt;3]', 'df[(df.col1&lt;4) &amp; (df.col2&lt;8)]', 'df[(df.col2&gt;7) &amp; (df.col3&gt;14)]']
filter_ls[0]
</code></pre>
<p>which returns <code>KeyError: 'df.col1&gt;3'</code></p>
","0","Question"
"79631318","","<p>I'm new to python and I've managed to populate a list with instances of my model.</p>
<pre><code># requisition.py

from pydantic import BaseModel
from app.schemas.job_information import JobInformation

class Requisition(BaseModel):
    # Base fields (common between internal and external)
    index: int = 0
    contest_number: int = 0
    open_date: str = None
    close_date: str = &quot;&quot;
    job_information: JobInformation = None

    def set_index(self, index):
        self.index = index

    def set_contest_number(self, contest_number):
        self.contest_number = contest_number

    def set_open_date(self, open_date):
        self.open_date = open_date

    def set_close_date(self, close_date):
        self.close_date = close_date

    def set_job_information(self, job_information):
        self.job_information = job_information
</code></pre>
<p>Then in my main.py</p>
<pre><code>@router.get(&quot;/&quot;)
async def get_sourcing_requests():
    requisitions = []
    pageindex = 1
    pagecount, reqs = get_sourcing_requests_by_page_index(pageindex)

    requisitions.append(reqs)

    while pageindex &lt; pagecount:
        pageindex += 1
        pagecount, reqs = get_sourcing_requests_by_page_index(pageindex)
        requisitions.append(reqs)

    for i, req in enumerate(requisitions):
        req.set_index(int(i))

    return requisitions
</code></pre>
<p>But I keep getting the error</p>
<blockquote>
<p>AttributeError: 'list' object has no attribute 'set_index'</p>
</blockquote>
<p>EDIT: Adding code for get_sourcing_request_by_page_index</p>
<pre><code>def get_sourcing_requests_by_page_index(pageindex):
    url = &quot;https://cp0.taleo.net/enterprise/soap?ServiceName=FindService&quot;
    
    e = &quot;http://www.taleo.com/ws/art750/2006/12&quot;
    itk = &quot;http://www.taleo.com/ws/integration/toolkit/2005/07&quot;
    soapenv = &quot;http://www.w3.org/2003/05/soap-envelope&quot;

    ns = {&quot;e&quot;: e, &quot;itk&quot;:itk, &quot;soapenv&quot;:soapenv}

    un = os.environ.get(&quot;USERNAME&quot;)
    pw = os.environ.get(&quot;PASSWORD&quot;)
    
    filename = &quot;app/files/request-findPartialEntities-SourcingRequest.xml&quot;
    
    pagecount = 1
    pageindex

    requisitions = []

    try:
        
        xml = etree.parse(filename)
        root = xml.getroot()
        
        attrs = root.xpath(&quot;//soapenv:Body/itk:findPartialEntities/itk:attributes&quot;,namespaces=ns)[0]

        pientry = etree.Element(f&quot;{{{itk}}}entry&quot;)
        pikey = etree.Element(f&quot;{{{itk}}}key&quot;)
        pikey.text = &quot;pageindex&quot;
        pival = etree.Element(f&quot;{{{itk}}}value&quot;)
        pival.text = str(pageindex)

        pientry.append(pikey)
        pientry.append(pival)

        attrs.append(pientry)

        req = etree.tostring(root, encoding=&quot;unicode&quot;, pretty_print=True)
    except FileNotFoundError:
        print(f&quot;Error: File not found: {filename}&quot;)
        return 0, None

    cl = str(sys.getsizeof(req))

    hd = {&quot;Content-Type&quot;: &quot;application/xml&quot;, &quot;Content-Length&quot;: cl}

    response = requests.post(url, data=req, headers=hd, auth=(un, pw))

    root = etree.fromstring(response.text)

    for soap_env in root:
        for soap_body in soap_env:
            for req_resp in soap_body:
                pagecount = int(req_resp.attrib['pageCount'])
                for i, entity in enumerate(req_resp, start=0):

                    contest_number = entity.xpath(
                        '//*[local-name()=&quot;ContestNumber&quot;]', namespaces=ns
                    )[i].text
                    
                    last_modified_date = entity.xpath(
                        &quot;//e:Requisition/e:Requisition/e:JobInformation/e:JobInformation/e:LastModifiedDate&quot;,
                        namespaces=ns,
                    )[i].text
                    
                    title = entity.xpath(
                        &quot;//e:Requisition/e:Requisition/e:JobInformation/e:JobInformation/e:Title/e:value&quot;,
                        namespaces=ns,
                    )[i].text

                    description = entity.xpath(
                        &quot;//e:Requisition/e:Requisition/e:JobInformation/e:JobInformation/e:DescriptionInternalHTML/e:value&quot;,
                        namespaces=ns,
                    )[i].text

                    qualification = entity.xpath(
                        &quot;//e:Requisition/e:Requisition/e:JobInformation/e:JobInformation/e:InternalQualificationHTML/e:value&quot;,
                        namespaces=ns,
                    )[i].text                    
                    
                    open_date = entity.xpath(&quot;//e:OpenDate&quot;, namespaces=ns)[i].text

                    if hasattr(entity, &quot;e:CloseDate&quot;):
                        close_date = entity.xpath(&quot;//e:CloseDate&quot;, namespaces=ns)[
                            i
                        ].text
                    else:
                        close_date = &quot;&quot;

                    job_information = JobInformation()
                    job_information.set_title(title)
                    job_information.set_last_modified_date(last_modified_date)
                    # job_information.set_description(description)
                    # job_information.set_qualification(qualification)

                    requisition = Requisition()
                    requisition.set_contest_number(int(contest_number))
                    requisition.set_open_date(open_date)
                    requisition.set_close_date(close_date)
                    requisition.set_job_information(job_information)

                    requisitions.append(requisition)

    return pagecount, requisitions
</code></pre>
<p>I'm guessing req is considered a list object instead of a Requisition object but not really sure.</p>
<p>Appreciate any help.</p>
<p>Using Python 3.13.3.</p>
","0","Question"
"79631554","","<p>How can I merge the following two lists <code>ids</code> and <code>attributes</code> based on the matching <code>did</code> field and for each matched pair increment the <code>iterid</code> values</p>
<p>For example I have two lists below. size of the list differ dynamically</p>
<p>ids</p>
<pre><code>[
  {
    &quot;id&quot;: &quot;d3c0da07-e58f4606bm&quot;,
    &quot;did&quot;: &quot;714c9836927d&quot;
  }
]
</code></pre>
<p>attributes</p>
<pre><code>[
  {
    &quot;snm&quot;: &quot;3298SJDJ&quot;,
    &quot;did&quot;: &quot;714c9836927d&quot;
  }
]
</code></pre>
<p>I want to achieve the result like below</p>
<pre><code>[
  {
    &quot;iterid&quot;: 1,
    &quot;id&quot;: &quot;d3c0da07-e58f4606bm&quot;,
    &quot;did&quot;: &quot;714c9836927d&quot;
  },
  {
    &quot;iterid&quot;: 2,
    &quot;id&quot;: &quot;d3c0da07-e58f4606bm&quot;,
    &quot;did&quot;: &quot;714c9836927d&quot;
  }
]
</code></pre>
<p>I've tried with <code>flatMap</code> to form the merged list, but I'm being blocked at incrementing the <code>iterid</code> count dynamically</p>
","1","Question"
"79632332","","<p>Consider a 2d python list (ie: lst2) and a matrix that gives the value of each adjacent pair of letters (ie: value_matrix).</p>
<pre><code>lst2 = [['acba', 'ca'],   ['babab', 'ca', 'bc']]

value_matrix = [['aa', 0], ['ab', 3], ['ac', 5], ['ba', 2], ['bb', 0], ['bc', 9], ['ca', 7], ['cb', 4], ['cc', 0]]
</code></pre>
<p>I want to replace each element of lst2 with an integer derived by summing the values of its adjacent pairs.  For example,   'acba' sums the values   5 (from 'ac')  +  4 (from 'cb'  +  2 (from 'ba')  =  11.   <strong>I'm sure a dictionary can be used, but I don't know how to incorporate the summing of adjacent pair values.</strong></p>
<p>When completed, the result should be:</p>
<pre><code>new_lst2 = [[11, 7],   [10, 7, 9]]
</code></pre>
","-1","Question"
"79633073","","<p>I'm trying to remove duplicate items from a list in Python, but I want to keep the original order of the elements. For example, if I have:</p>
<p>python
Copy
Edit
my_list = [1, 2, 2, 3, 1, 4, 3]
I want the output to be:</p>
<p>python
Copy
Edit
[1, 2, 3, 4]
I tried using set(), but it doesn't preserve the order:</p>
<p>python
Copy
Edit
list(set(my_list))
This gives me different results each time, and the order is not what I want.</p>
<p>What is the most efficient or Pythonic way to do this?</p>
<p>I tried using list(set(my_list)) to remove duplicates, but it returned the elements in a random order. I expected the output to keep the first occurrence of each value and maintain the original sequence, like [1, 2, 3, 4]. Instead, I got something like [1, 2, 3, 4] but in a different order each time, which is not what I want.</p>
","-3","Question"
"79634539","","<p>I am writing a function in R which allows for Differential Gene Expression data to be plotted while grouping different genes based on a user's interest. For example, GO terms contain genes that are functionally related however the problem lies within the fact that many genes are shared between groups. I want to warn the user of their degeneracy in gene grouping.</p>
<p>Consider some genes of the Integrated Stress Response (ISR_Genes), Perk response (Perk_Genes) which is a subset the ISR, and genes which are transcription factors (Transcription_Genes)</p>
<p>FocusedGenes is a named list that will highlight our data corresponding to their group</p>
<pre><code>FocusedGenes &lt;- list(
  ISR_Genes = c(&quot;Ddit3&quot;, &quot;Ptpn2&quot;, &quot;Atf4&quot;, &quot;Nfe2l2&quot;, &quot;Eif2ak4&quot;, &quot;Gcn1&quot;, &quot;Eif2ak3&quot;, &quot;Qrich1&quot;, &quot;Bok&quot;),
  Perk_Genes = c(&quot;Ptpn2&quot;, &quot;Atf4&quot;, &quot;Nfe2l2&quot;, &quot;Eif2ak3&quot;, &quot;Qrich1&quot;, &quot;Bok&quot;),
  Transcription_Genes = c(&quot;Ddit3&quot;, &quot;Ptpn2&quot;, &quot;Atf4&quot;, &quot;Nfe2l2&quot;, &quot;Hsf1&quot;, &quot;Snw1&quot;, &quot;Ighmbp2&quot;, &quot;Mef2c&quot;)
)

</code></pre>
<p>All of the Perk_Genes are also ISR_Genes, and some of those genes are involved in Transcription.</p>
<pre><code>DuplicateFocus &lt;- character()
DuplicateFocus &lt;- unlist(FocusedGenes, use.names = FALSE)[duplicated(unlist(FocusedGenes, use.names = FALSE))] %&gt;% unique()
print(DuplicateFocus)
</code></pre>
<p>Creating this list of duplicated focus genes, I'd like to return a list for each element containing the names of the groups they belong to.</p>
<p>In order to preserve the names when checking which group they are in I did this:</p>
<pre><code>names(FocusedGenes)[lapply(X = lapply(FocusedGenes,unlist),FUN = function(x) {DuplicateFocus[1] %in% x}) == TRUE]
</code></pre>
<p>This feels ridiculous and seems like this could probably be done much simpler.</p>
<p>My next thought was to utilize another layer of lapply but then I thought I would run into scope issues passing variables into nested functions defined in other functions.</p>
<pre><code>lapply(DuplicateFocus, function(y) {
  names(FocusedGenes)[lapply(X = lapply(FocusedGenes,unlist),FUN = function(x) {y %in% x}) == TRUE]
})
</code></pre>
<p>I was under the impression because the formal argument in <code>lapply(X = var, FUN = function(x))</code> that the variable in the function had to call upon x, but using y seemed to work to avoid duplicating the x parameter.</p>
<p>To wrap it all up</p>
<pre><code>DuplicateFocus &lt;- character()
DuplicateFocus &lt;- unlist(FocusedGenes, use.names = FALSE)[duplicated(unlist(FocusedGenes, use.names = FALSE))] %&gt;% unique()
DuplicateFocus &lt;- data.frame(Duplicated_Gene = DuplicateFocus)
DuplicateFocus &lt;- DuplicateFocus %&gt;% mutate(Groups = paste(lapply(Duplicated_Gene, function(y) {
  names(FocusedGenes)[lapply(X = lapply(FocusedGenes,unlist),FUN = function(x) {y %in% x}) == TRUE]
})))
print(DuplicateFocus)
</code></pre>
<p>In the end this works but feels very sloppy/indirect. Is there some elegant way to do this using purrr or dplyr functions that I haven't understood?</p>
<p>Even if this is the best way to do things. I figured I'd post this since I couldn't find anything online to help so I hope this helps someone.</p>
<p><a href=""https://i.sstatic.net/7AXuL1Me.png"" rel=""nofollow noreferrer"">Output:</a></p>
","2","Question"
"79635286","","<p>I have this vector of non-syntactic names (integers), a list of unique vectors that I want to repeat each <code>reps</code> time to create a named list with names <code>nms</code> of length <code>length(nms)</code> where <code>un_vecs</code> are repeated each <code>reps</code> times. Any ideas how to do it?</p>
<pre class=""lang-r prettyprint-override""><code>#Input:
nms &lt;- 1:5
un_vecs &lt;- list(letters[1:3], letters[2:7])
reps &lt;- c(2, 3)

#Expected output:
list(
  `1` = un_vecs[[1]],
  `2` = un_vecs[[1]],
  `3` = un_vecs[[2]],
  `4` = un_vecs[[2]],
  `5` = un_vecs[[2]]
)

# $`1`
# [1] &quot;a&quot; &quot;b&quot; &quot;c&quot;
# 
# $`2`
# [1] &quot;a&quot; &quot;b&quot; &quot;c&quot;
# 
# $`3`
# [1] &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot;
# 
# $`4`
# [1] &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot;
# 
# $`5`
# [1] &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot;
</code></pre>
","3","Question"
"79636838","","<p>I want to create a list of lists, and this list will be filled by calls to various functions. The output is awkward and unworkabe, so there must be a better way than the one I used. Here is a simplified code to illustrate the idea</p>
<pre><code>choices &lt;- list()

###############
add_wealth &lt;- function(ch, wealth) {
  a &lt;- list(type=&quot;wealth&quot;, parameter =wealth)
  list(ch, a)
}

wealth &lt;- 1
choices &lt;- add_wealth(choices, wealth)

##############
add_diversification &lt;- function(ch, div) {
  a &lt;- list(type=&quot;diversification&quot;, parameter =div)
  list(ch, a)
}

div &lt;- .7
choices &lt;- add_diversification(choices, div)

##############
add_margin &lt;- function(ch, bounds) {
  a &lt;- list(type=&quot;margin&quot;, parameter=bounds)
  list(ch, a)
}

bounds &lt;- c(1, 3)
choices &lt;- add_margin(choices, bounds)

choices
</code></pre>
<p>Ideally, here is the output I need (or something close enough)</p>
<pre><code> [[1]]
 [[1]]$type
 [1] &quot;wealth&quot;
 [[1]]$parameter
 [1] 1

 [[2]]
 [[2]]$type
 [1] &quot;diversification&quot;
 [[2]]$parameter
 [1] .7

 [[3]]
 [[3]]$type
 [1] &quot;margin&quot;
 [[3]]$parameter
 [1] 1 3
</code></pre>
","3","Question"
"79639253","","<p>I am attempting to split a string by each word and symbol into a list. This should put them in separate strings by iteration in the function SplitString().</p>
<p>For example:</p>
<p>display(&quot;Hello, World!&quot;) -&gt; ['display', '(', '&quot;', 'Hello', ',', 'World', '!', '&quot;', ')']</p>
<p>However, in my code, the double quotation symbol (&quot;) does not get appended to the list. It shows as this instead:</p>
<p>['display', '(', 'Hello', ',', 'World', '!', '', ')']</p>
<p>Here is my code:</p>
<pre><code>string  = 'display(&quot;Hello, World!&quot;)'


def SplitString(string):
    splitstring = []
    newword = ''
    firstIteration = True
    symbolPassed = False  # Initialize here

    for i in string:
        if newword == '' and firstIteration == False and symbolPassed == True:
            symbolPassed = False

        elif i == ' ':
            if newword:
                splitstring.append(newword)
            newword = ''
            symbolPassed = False

        elif i in '!?+-*/=&lt;&gt;()}{][.,\&quot;:;@£$%^&amp;|¬`~_€]':
            splitstring.append(newword)
            newword = ''
            splitstring.append(i)
            newword = ''
            symbolPassed = True

        else:
            newword += i
            symbolPassed = False

        firstIteration = False


    if newword:
        splitstring.append(newword)

    return splitstring

SplitedString = SplitString(string)


for i in range(0, len(SplitedString)):
    print(SplitedString[i])
print(SplitedString)
</code></pre>
","0","Question"
"79641119","","<p>Say I have a Numpy array of 500 lists with random sizes ranging from 0 to 9:</p>
<pre><code>import numpy as np
a = np.array([[i for i in range(np.random.randint(10))] for _ in range(500)], dtype=object)
</code></pre>
<p>Now I want to append a value <code>100</code> to indices <code>[0,10,20,30,40,50]</code>, I tried to apply a function to each list in the array:</p>
<pre><code>func = np.vectorize(lambda x: x + [100])
a[[0,10,20,30,40,50]] = func(a[[0,10,20,30,40,50]])
</code></pre>
<p>but I get <code>ValueError: setting an array element with a sequence.</code></p>
<p>Is there any way I can broadcast operations to all objects (with different sizes) in a Numpy array? In my case I usually have up to ~50,000 indices. Using a normal for loop would be too slow. I'm thinking maybe converting the array to a sparse matrix with equal sizes of rows if it's more efficient that way?</p>
","1","Question"
"79647709","","<p>I am trying to get any mathematical string to split into a list by operators (i.e. <code>&quot;+&quot;</code>, <code>&quot;-&quot;</code>, <code>&quot;/&quot;</code>, <code>&quot;*&quot;</code>), while keeping anything in a matching number of brackets together as one list element.</p>
<p>Here are some very random examples and the desired outputs of what I want to achieve:</p>
<pre><code>import math 

equation = &quot;5+5*10&quot;
equation_segmented = [&quot;5&quot;, &quot;+&quot;, &quot;5&quot;, &quot;*&quot;, &quot;10&quot;]

equation = &quot;(2*2)-5*(math.sqrt(9)+2)&quot;
equation_segmented = [&quot;(2*2)&quot;, &quot;-&quot;, &quot;5&quot;, &quot;*&quot;, &quot;(math.sqrt(9)+2)&quot;]

equation = &quot;(((5-3)/2)*0.5)+((2*2))*(((math.log(5)+2)-2))&quot;
equation_segmented = [&quot;(((5-3)/2)*0.5)&quot;, &quot;+&quot;, &quot;((2*2))&quot;, &quot;*&quot;, &quot;(((math.log(5)+2)-2))&quot;]
</code></pre>
<p><strong>Note</strong>: alphabetical letters (or symbols like &quot;π&quot;) should be included in the brackets too.</p>
<p>My first thought was using a regex:</p>
<pre><code>import re

equation_segmented = re.split(&quot;([\+|\-|\*|\/]|\(.*\))&quot;, equation)
</code></pre>
<p>The problem here, however, is that it does not account for matching brackets.</p>
<p>I then thought of iterating through the string manually and keeping track of the parentheses with a counter, but did not get it to work (I was pretty much only able to write my own 're.split' function).</p>
<p>Lastly I went back to regex (<code>equation_segmented = re.split(&quot;([\+|\-|\*|\/])&quot;, equation)</code>) and thought about just splitting the string by operators, to then <code>&quot;&quot;.join()</code> all the list elements in matching brackets afterwards - yet again to no avail.</p>
<p>I am not sure if this might be a problem for a parser, but I am not sure where to start.</p>
","3","Question"
"79647909","","<p>I have a table of records of species in a site (date, species ID, location etc) and want to create a dashboard of the newest species discovered there. I want to generate the top 5 species that have the most recent <strong>first</strong> records.</p>
<p>E.g. If I find a species that has never been recorded at the site before and enter it in the table, it should be top of the list. If it has been recorded there for years, it shouldn't make the list.</p>
<p>My table has around 5000 entries at the moment and is growing steadily.</p>
<p>I am interested in formula or pivot table type entries. I am sure it could be done in VBA, but am trying to avoid using too much where I don't need to.</p>
<p>Thanks</p>
","0","Question"
"79649925","","<p>Say I have this matrices:</p>
<pre class=""lang-r prettyprint-override""><code>emp &lt;- matrix(nrow = 13, ncol = 13)
emp2 &lt;- matrix(nrow = 13, ncol = 13)

emp[lower.tri(emp)] &lt;- 2
emp2[lower.tri(emp)] &lt;- 3
</code></pre>
<p>And I want to combine them so below the diagonal, I have all values = 2 and above all values = 3. I have managed to produce this as such (then the result is just the emp matrix).</p>
<pre class=""lang-r prettyprint-override""><code>emp[upper.tri(emp)] &lt;- t(emp2[lower.tri(emp2)])
</code></pre>
<p>However, now I would like to store the result and make a function for this (after all the matrices I want to use are inside elements of a list). Do you know how can I store this in a new matrix? Or perhaps a better alternative.</p>
<p>I hope I have provided a reproducible enough example, otherwise, let me know.</p>
<p>Thank you!</p>
","4","Question"
"79650348","","<p>I am using a long ad hoc script for exploratory data analysis -- not for tool development.  The script has gotten quite long, so I've taken to <code>del</code>ing ephemeral variables to keep the Spyder Variable Explorer clean.  I've done this all over the script.</p>
<p>I tried to be streamline the script by coding some loops as tuple comprehensions, thus eliminating the need for an extra line of code to <code>del</code> the iteration variable.  Here is an example of three ways to iterate through figures to clear the plots:</p>
<pre><code># Generate the figures
import matplotlib as mpl
import matplotlib.pyplot as plt
plt.close('all')
plt.scatter([1,2,3],[4,5,6])
plt.figure()
plt.scatter([1,2,3],[6,5,4])

# 3 ways to clear the figures

if True: # Use Tuple Comprehension
   ( plt.figure(iFig).clf() for iFig in plt.get_fignums() )

elif True: # Use List Comprehension

   [ plt.figure(iFig).clf() for iFig in plt.get_fignums() ]

else: # Don't use comprehension

   for iFig in plt.get_fignums(): plt.figure(iFig).clf()
   del iFig # The extra line of source code I want to avoid
</code></pre>
<p>The 3rd and final option is the one I've been using.  The 1st and 2nd options are my attempts at tuple comprehension and list comprehension.</p>
<p>The tuple comprehension returns a generator object and doesn't actually execute evaluate the invocation to <code>clf</code> unless I assign the tuple to <code>x</code> and execute <code>next(x)</code> twice.  I can see the figures clearing each time.</p>
<p>This is unnecessary for the list comprehension.</p>
<p>I started off with tuple comprehension with the rationale that I can avoid using a mutable container if I'm not going to use the contents anyway.</p>
<p>Why does the tuple comprehension yield a generator that must be iterated through while list comprehension evaluates all the elements needed to build the list right away?</p>
<p>Is there a known Python rule about list and tuple comprehension that would have allowed me to foresee this?</p>
","-2","Question"
"79651651","","<p>I found some really unexpected behavior today using python 3.12.4. I am trying to sort a list of tuples into 2 different lists in a list of lists based on the first number of the tuple. Instead,  each list in the list of lists gets every tuple.</p>
<p>I see similar posts here:</p>
<p><a href=""https://stackoverflow.com/questions/6602172/how-to-group-a-list-of-tuples-objects-by-similar-index-attribute-in-python"">How to group a list of tuples/objects by similar index/attribute in python?</a></p>
<p><a href=""https://stackoverflow.com/questions/44756248/list-of-tuples-to-list-of-list-of-tuples"">List of Tuples to List of List of Tuples</a></p>
<p>which suggests using defaultdict or itertools. But I would prefer to understand why what I am doing here does not work.</p>
<p>Here is a minimal recreation of the problem</p>
<pre><code>data = [(0,1),(0,2),(1,1),(1,2),(1,3)] 
arr = [[]]*2 

for x in data:
    if x[0] == 0:
        arr[0].append(x)
    elif x[0] == 1:
        arr[1].append(x)
print(arr)
&gt;&gt;&gt; [[(0, 1), (0, 2), (1, 1), (1, 2), (1, 3)], [(0, 1), (0, 2), (1, 1), (1, 2), (1, 3)]]
</code></pre>
<p>Hence, each list in the list of lists is the same and gets every tuple. My expectation is that the code should return:</p>
<pre><code>&gt;&gt;&gt; [[(0, 1), (0, 2)], [(1, 1), (1, 2), (1, 3)]]
</code></pre>
<p>Can anyone explain why this is happening?</p>
","2","Question"
"79652976","","<p>I am writing a pretty basic calculator for functions <em>(for example f(x)=x+5)</em>, and the first step is writing a quick function to calculate the result if we already know all the variables. Source code is:</p>
<pre><code>def calc(function, **kwargs):
if re.fullmatch(r'[0-9a-z+\-*/()]+', function) != None:
    return eval(function)
return None
</code></pre>
<p>But I need to add a script that changes the function to add in the values instead of the variables.
For example, if I call my <code>calc()</code> as <code>calc('x+5*y', x=2, y=7)</code>, it should change the function to simply <code>'2+5*7'</code>, so that I could put it into <code>eval()</code>.</p>
<p>Does anybody have any ideas on how this would be possible, or what are some alternative methods for this?</p>
","0","Question"
"79655305","","<p>I have a list, <code>lst</code></p>
<pre><code>lst = ['A','B','C','D','E','F','G']
</code></pre>
<p>From this list, I want to generate a given number of lists, each of length <code>N</code> <strong>with the minimum possible amount of overlap between each item in <code>lst</code></strong>.</p>
<p>For example, let's say I want to generate three lists of length three from <code>lst</code> by hand, and I come up with the following:</p>
<pre><code>['A','B','C']
['D','E','F']
['G','A','B']
</code></pre>
<p>With the length of <code>lst</code> and my parameters - three lists of length three - I actually did this sub-optimally, as <code>A</code> and <code>B</code> are in the same output twice. I understand repeats are unavoidable, but they still can be handled optimally. The following output is an example of what I am trying to achieve, as the output consists of the minimum amount of pairings between each item in <code>lst</code> as possible:</p>
<pre><code>['A','B','C']
['D','E','F']
['G','A','D']
</code></pre>
<p>Of course, this is easy to do manually when parameters are really small, but as they get larger it becomes increasingly difficult - and time consuming - to optimize it manually.</p>
<p>I have tried looking through <code>itertools</code> docs, but can't quite find something that could help me (probably not looking or thinking hard enough...) <code>cycle()</code> came to mind, but that just cycles through the items in a list and doesn't handle either the generation of sublists nor the handling of minimum possible overlap. I would still think
<code>cycle()</code> is useful here as I want an evenly distributed amount of each item from <code>lst</code> in the output lists. Also, is there a name for this type of problem? Some sort of graph theory? Thanks in advance for any help!</p>
<p>EDIT: This problem has three parts. 1. input list (<code>lst</code>) 2. number of groupings to generate (in this example, 3) and 3. length of each grouping (in this example, also 3), with a max of this value being <code>len(lst)</code>. The goal is to have minimal duplicate pairings overall between any of the values in <code>lst</code> among all of the generated groupings.</p>
<hr />
<h2><strong>EDIT 2: REPHRASING THE PROBLEM:</strong></h2>
<p>I have a list, <code>lst</code>, from above.</p>
<h4><strong>I have two desired parameters:</strong></h4>
<p><code>N</code> - How many results to generate.</p>
<p><code>x</code> - How many items are in each result.</p>
<h4><strong>My conditions are:</strong></h4>
<ul>
<li><p>I want minimum pairings between any two items in <code>lst</code> out of all results. That is, if I want <code>N = 20</code>, I don't want, for example, <code>A</code> and <code>B</code> to appear in 5 results together while <code>A</code> and <code>C</code> or <code>B</code> and <code>C</code> appear in no results together. I understand under specific parameter settings that there are multiple ways to satisfy this condition. That does not matter to me. As long as the conditions are satisfied, it does not matter what specifically the results are</p>
</li>
<li><p>I want each item in <code>lst</code> to be used as evenly as possible. ie, I don't want <code>A</code> in every output and <code>G</code> in one output.</p>
</li>
</ul>
<h4><strong>EXAMPLE:</strong></h4>
<p>Let's say I want N = 5 and x = 3. This means that I want 5 results of length 3. Out of all 5 results, I want as little overlap between any two pairings as possible. I also want to use each item in <code>lst</code> an even number of times.</p>
<p><strong>Unsatisfactory result:</strong></p>
<pre><code>ABC
DEF
GAB
CDE
FGA
</code></pre>
<p><strong>Why is this unsatisfactory?</strong></p>
<p>The first condition is sub optimally handled:</p>
<p>AB - 2
AC - 1
AD - 0
AE - 0
AF - 1
AG - 1
BC - 1
BD - 0
BE - 0
BF - 0
BG - 1
CD - 1
CE - 1
CF - 0
CG - 0
DE - 2
DF - 1
DG - 0
EF - 1
EG - 0
FG - 1</p>
<p>The second condition, however, is passed:</p>
<p>A - 3, B - 2, C - 2, D - 2, E - 2, F - 2, G - 2</p>
<p>It is easy to do this by hand when the parameters are small, but becomes increasingly difficult to keep track of as parameters grow. A satisfactory result for these parameters would likely not have some pairings with two common results and others with zero.</p>
<p><strong>Look at the example in OP:</strong></p>
<pre><code>['A','B','C']
['D','E','F']
['G','A','B']
</code></pre>
<p>While satisfying the second condition, this is does not optimally handle the first condition as <code>AB</code> are in two outputs when it can be handled in many ways where no two pairings are in two outputs together, such as this:</p>
<pre><code>['A','B','C']
['D','E','F']
['G','A','D']
</code></pre>
<p>Yes, there are multiple solutions when the parameters are <code>N=3</code> and <code>x=3</code>. Again, I do not care about which solution is used, just as long as both conditions are satisfied.</p>
","6","Question"
"79657712","","<p>I am trying to download financial data using <code>yfinance</code> which seems to return a panda, and try to convert that to a simple python list. Here is the complete code:</p>
<pre><code>import yfinance as yf

# Download 1-minute intraday data for Airbus 
df = yf.download(&quot;AIR.DE&quot;, interval=&quot;1m&quot;, period=&quot;1d&quot;)

# Get datetime list and close prices
x = df.index.tolist()          
y = df[&quot;Close&quot;].tolist()       
</code></pre>
<p>However I get an error</p>
<pre><code>AttributeError: 'DataFrame' object has no attribute 'tolist'
</code></pre>
<p>So how to convert the float values of the panda to a list of floats?</p>
","0","Question"
"79657969","","<p>I wrote a simple intersection function on two lists:</p>
<pre class=""lang-lisp prettyprint-override""><code>(define (intersection l1 l2)
  (if (null? l1) '()
      (if (member (car l1) l2)
          (cons (car l1) (intersection (cdr l1) l2))
          (intersection (cdr l1) l2))))

</code></pre>
<p>But I can't get replace this code so that <code>(intersection (cdr l1) l2)</code> only appears once as in:</p>
<pre class=""lang-lisp prettyprint-override""><code>(define (intersection l1 l2)
  (if (null? l1) '()
      (let (appel '(intersection (cdr l1) l2))
        (if (member (car l1) l2)
            (cons (car l1) appel)
            appel))))
</code></pre>
<p>I try also to replace <code>appel</code> with <code>(eval appel)</code> but it didn' work.</p>
","1","Question"
"79657997","","<p>OK, this is a pretty basic question that I am having a hard time finding an answer. I have functions that return several results that are returned as a list. I want to store that output list in a dataframe. The data frame also has the variables that are used in the function. For example:</p>
<pre><code>library(dplyr)
### function
testFunc &lt;- function(a){
  a = a
  b = a+1
  c = list(out1=a, out2=b)
  return(c)
}
### data
dat &lt;- data.frame(x=1:5)

### dplyr processing
datProcessed &lt;- dat %&gt;%
  mutate(calcd = testFunc(x))

### Fails, `calcd` must be size 10 or 1, not 2.

</code></pre>
<p>However, if the output is a single item, of course it works:</p>
<pre><code>datProcessed &lt;- dat %&gt;%
  mutate(calcd = testFunc(x)$out2)
</code></pre>
<p>How do I store a list output in the dataframe column of lists using a dplyr pipe?</p>
","4","Question"
"79658238","","<p>I'm looking for a Deque like data structure, but it's only responsible for prepending to the start in O(1) time. Since it wouldn't need to append to the end, it would simplify the responsibilities that Deque has, ideally being faster than deque.</p>
<p>Are there any data structures which follow this rule?</p>
<p>I tried using linked lists, but this is slower than Deque. But pointer allocation/reallocation seems slow. For 1 million prepends, linked lists give you ~0.84 seconds while deque is only ~0.1 seconds.</p>
<pre><code>import time
from collections import deque

# Linked List Implementation
class Node:
    def __init__(self, value=None):
        self.value = value
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def prepend(self, value):
        new_node = Node(value)
        new_node.next = self.head  # Point new node to current head
        self.head = new_node  # Update head to the new node

    def get_list(self):
        current = self.head
        result = []
        while current:
            result.append(current.value)
            current = current.next
        return result

# Deque Implementation
class FrontOnlyDeque:
    def __init__(self):
        self.deque = deque()

    def prepend(self, value):
        self.deque.appendleft(value)

    def get_list(self):
        return list(self.deque)


# Timing function
def time_operations(impl, n):
    start_time = time.time()
    for i in range(n):
        impl.prepend(i)
    return time.time() - start_time

# Number of prepends to test
n = 1000000

# Linked List test
linked_list = LinkedList()
linked_list_time = time_operations(linked_list, n)

# Deque test
deque_impl = FrontOnlyDeque()
deque_time = time_operations(deque_impl, n)

print(f&quot;Linked List prepend time: {linked_list_time} seconds&quot;)
print(f&quot;Deque prepend time: {deque_time} seconds&quot;)
</code></pre>
","0","Question"
"79659142","","<p>In working with the collection expressions and spread element introduced in C# 12, I have found null checks to be slightly clunky. I have a case where I need to convert from one list type to another so I was simply trying to do the following:</p>
<p><code>CustomList newType = [.. oldList];</code></p>
<p>This ran into the obvious issue when <code>oldList</code> was null, so I've started doing the following:</p>
<p><code>CustomList newType = oldList is not null ? [.. oldList] : null</code></p>
<p>But I was hoping to find a more concise way to write this. Is there some combination of operators that can do the spread operation while maintaining a null value without the ternary? I want to keep the new list null, so the following would not have the desired behavior.</p>
<p><code>CustomList newType = [.. oldList ?? []]</code></p>
","1","Question"
"79659739","","<p>my function guess_loop only gets the first of duplicate values or its only filling in the first when I print display</p>
<p>if I select B as my first letter it fills in fine but when i select O it only gets the first O and never the second O
EXAMPLE: gets stuck at:
['b', 'a', 'b', 'o', '_', 'n']</p>
<pre><code>import random

#randomly chose a word
wordList = [&quot;baboon&quot;, &quot;baboon&quot;, &quot;baboon&quot;]
randWord = random.choice(wordList)
print(f'Psst the random word is: {randWord}.')
display = []
underSc = &quot;_&quot;
#splits the random word into a list
randWordSplit = list(randWord)
guessPos = 0

def guess_loop():
    #ask user to guess a letter and store it
    guess = input(&quot;Guess a letter (in lowercase)&quot;)
    for item in randWordSplit:
        if item == guess:
            guessPos = randWordSplit.index(item)
            display[guessPos] = guess
                
        else:
            item = item

 

#ask user to guess a letter and store it
guess = input(&quot;Guess a letter (in lowercase)&quot;)
for item in randWordSplit:
    if item == guess:
        display.append(guess)
    else:
        display.append(&quot;_&quot;)

print(display)

while &quot;_&quot; in display:
    print(display)
    guess_loop()


print(display)`
</code></pre>
","0","Question"
"79660875","","<p>I’m working on a SwiftUI project and want to replicate the behavior of the Apple Mail app, where the section header (title with a disclosure button) is transparent, and a list slides out from underneath it when expanded. I’d like the header cell (containing the title and chevron button) to have no background, blending seamlessly with the list’s background, while the list content (my custom MainFormCellView rows) slides out with a smooth animation.</p>
<p>I’ll attach screenshots and my current code for reference. My goal is to achieve this effect using DisclosureGroup or a custom solution, ensuring the header remains transparent and the list animates from beneath it, similar to how Mail handles its sections (e.g., &quot;Content&quot; expanding to show &quot;Drafts&quot;).</p>
<p>Any guidance on how to implement this in SwiftUI would be greatly appreciated!</p>
<pre class=""lang-swift prettyprint-override""><code>struct MainScreenView: View {
    // MARK: - Properties
    @State private var isExpanded: Bool = true
    
    // MARK: - Body
    var body: some View {
        NavigationStack {
            Form {
                Section {
                    MainFormCellView(cellImage: &quot;folder&quot;, celltitle: &quot;All Cells&quot;, cellCount: 154)
                    MainFormCellView(cellImage: &quot;star&quot;, celltitle: &quot;Favourites&quot;, cellCount: 12)
                }// Section
                
                DisclosureGroup(&quot;&quot;, isExpanded: $isExpanded) {
                    List {
                        ForEach(0 ..&lt; 5) { cell in
                            MainFormCellView(cellImage: &quot;folder&quot;, celltitle: &quot;All Cells&quot;, cellCount: 154)
                        }
                    }
                    .listRowSeparator(.hidden)
                }
                .disclosureGroupStyle(MyDisclosureStyle())
            }// Main Form
            .navigationTitle(LocalizedStringKey(&quot;Main&quot;))
        }// NavigationStack
    }// Body
}// View

struct MyDisclosureStyle: DisclosureGroupStyle {
    func makeBody(configuration: Configuration) -&gt; some View {
        HStack {
            Text(&quot;Title&quot;)
            
            Spacer()
            
            Button {
                configuration.isExpanded.toggle()
            } label: {
                Text(&quot;Button&quot;)
            }
        }
        if configuration.isExpanded {
            configuration.content
        }
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/9nWGdvHK.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9nWGdvHK.png"" alt=""enter image description here"" /></a></p>
","0","Question"
"79334208","79324995","<p>I resolved this by doing the following:</p>
<p>created a top level object that has a List of ClientMpping objects.</p>
<p>Pojo below</p>
<pre><code>public class ClientMappingForm {
    private List&lt;ClientMapping&gt; dynamicRow =
            LazyList.decorate(new ArrayList&lt;ClientMapping&gt;(), FactoryUtils.instantiateFactory(ClientMapping.class));

    public ClientMappingForm() {
        // TODO Auto-generated constructor stub
    }

    public List&lt;ClientMapping&gt; getDynamicRow() {
        return dynamicRow;
    }

    public void setDynamicRow(List&lt;ClientMapping&gt; dynamicRow) {
        this.dynamicRow = dynamicRow;
    }
}
</code></pre>
<p>Controller for this as follows</p>
<pre><code>@RequestMapping(&quot;/chooseMappingValues&quot;)
public ModelAndView chooseMappingValues() {
    ModelAndView mav = new ModelAndView();
    
    ClientMappingForm form = new ClientMappingForm();
    ClientMapping cm = new ClientMapping();
    cm.setMappingName(&quot;MyMapping&quot;);
    cm.setSchemaNameCoderepeaper(&quot;reference_tables&quot;);
    List&lt;ClientMapping&gt; cmList = new ArrayList&lt;ClientMapping&gt;();
    cmList.add(cm);
    form.setDynamicRow(cmList);
    
    Map&lt;String, String&gt; databases = lookupService.getLookup(&quot;DatabaseVendor&quot;);
    Map&lt;String, String&gt; tableNames = lookupService.getLookup(&quot;TableName&quot;);
    mav.addObject(&quot;tableNames&quot;, tableNames);
    mav.addObject(&quot;databaseVendor&quot;, databases);
    mav.addObject(&quot;message&quot;, &quot;Enter Mapping Name.  Choose Target Database Type, Schema Name and Table for Mapping.&quot;);
    mav.addObject(&quot;clientMappingForm&quot;, form);
    mav.setViewName(&quot;mappingtool/chooseMappingValues&quot;);

    return mav;
}
</code></pre>
<p>And finally the JSP</p>
<pre><code>&lt;div class=&quot;card-body justify-content-md-center&quot;
                    style=&quot;background-color: darkgray;&quot;&gt;
                    &lt;form:form action=&quot;${pageContext.request.contextPath}/mappingtool/gatherMappingDetails&quot;
                        method=&quot;POST&quot; modelAttribute=&quot;clientMappingForm&quot;&gt;                   
                            &lt;div class=&quot;table-responsive&quot;&gt;
                                &lt;table class=&quot;table table-responsive table-striped table-hover table-sm&quot; id=&quot;viewTable&quot;&gt;
                                    &lt;tbody&gt;
                                        &lt;tr&gt;
                                            &lt;td colspan=&quot;2&quot; class=&quot;fw-bolder justify-content-md-center&quot;&gt;&lt;h2
                                                    class=&quot;text-primary&quot;&gt;${message}&lt;/h2&gt;
                                        &lt;tr&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;label for=&quot;mappingName&quot;
                                                class=&quot;form-label&quot;&gt; Client Mapping Name:&lt;/label&gt; &lt;label
                                                class=&quot;text-danger&quot;&gt;&amp;nbsp;Required&lt;/label&gt;&lt;/td&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;form:input
                                                    class=&quot;form-control form-control-sm&quot; id=&quot;mappingName&quot;
                                                    path=&quot;dynamicRow[0].mappingName&quot; cssStyle=&quot;width:200px;&quot; /&gt; &lt;form:errors
                                                    path=&quot;dynamicRow[0].mappingName&quot; /&gt;&lt;/td&gt;
                                        &lt;/tr&gt;
                                        &lt;tr&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;label for=&quot;user.lastname&quot;
                                                class=&quot;form-label&quot;&gt;Client Schema Name:&lt;/label&gt; &lt;label
                                                class=&quot;text-danger&quot;&gt;&amp;nbsp;Required&lt;/label&gt;&lt;/td&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;form:input
                                                    class=&quot;form-control form-control-sm&quot; id=&quot;schemaNameClient&quot;
                                                    path=&quot;dynamicRow[0].schemaNameClient&quot; cssStyle=&quot;width:200px;&quot; /&gt; &lt;form:errors
                                                    path=&quot;dynamicRow[0].schemaNameClient&quot; /&gt;&lt;/td&gt;
                                        &lt;/tr&gt;
                                        &lt;tr&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;Table Type: &lt;label
                                                class=&quot;text-danger&quot;&gt;&amp;nbsp;Required&lt;/label&gt;&lt;/td&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;form:select
                                                    id=&quot;tableNameCodereaper&quot; path=&quot;dynamicRow[0].tableNameCodereaper&quot;&gt;
                                                    &lt;form:option value=&quot;&quot; label=&quot;--- Select ---&quot; /&gt;
                                                    &lt;form:options items=&quot;${tableNames}&quot; /&gt;
                                                &lt;/form:select&gt; &lt;form:errors path=&quot;dynamicRow[0].tableNameCodereaper&quot; /&gt;&lt;/td&gt;
                                        &lt;/tr&gt;
                                        &lt;tr&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;Database Type: &lt;label
                                                class=&quot;text-danger&quot;&gt;&amp;nbsp;Required&lt;/label&gt;&lt;/td&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;form:select id=&quot;databaseVendor&quot;
                                                    path=&quot;dynamicRow[0].databaseVendor&quot;&gt;
                                                    &lt;form:option value=&quot;&quot; label=&quot;--- Select ---&quot; /&gt;
                                                    &lt;form:options items=&quot;${databaseVendor}&quot; /&gt;
                                                &lt;/form:select&gt; &lt;form:errors path=&quot;dynamicRow[0].databaseVendor&quot; /&gt;&lt;/td&gt;
                                        &lt;/tr&gt;
                                        &lt;tr&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;Client Tablename: &lt;label
                                                class=&quot;text-danger&quot;&gt;&amp;nbsp;Required&lt;/label&gt;&lt;/td&gt;
                                            &lt;td class=&quot;fw-bolder&quot;&gt;&lt;form:input
                                                    class=&quot;form-control form-control-sm&quot; id=&quot;tableNameClient&quot;
                                                    path=&quot;dynamicRow[0].tableNameClient&quot; cssStyle=&quot;width:200px;&quot; /&gt; &lt;form:errors
                                                    path=&quot;dynamicRow[0].tableNameClient&quot; /&gt;&lt;/td&gt;
                                        &lt;/tr&gt;
                                        &lt;tr&gt;
                                            &lt;td&gt;&amp;nbsp;&lt;/td&gt;
                                            &lt;td&gt;&lt;input class=&quot;btn btn-danger my-2 my-sm-0&quot; id=&quot;save&quot;
                                                type=&quot;submit&quot; value=&quot;Save&quot; /&gt;&lt;/td&gt;
                                        &lt;/tr&gt;
                                    &lt;/tbody&gt;
                                &lt;/table&gt;
                            &lt;/div&gt;
                    &lt;/form:form&gt;
                    &lt;div&gt;
                        &lt;jsp:directive.include
                            file=&quot;/WEB-INF/sitemesh-common/empireidsfooter.jsp&quot; /&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
</code></pre>
","0","Answer"
"79327386","79326189","<p>Here is one way- iterate over the positions / indices of the items in your list and use those to compare <code>item i</code> and <code>item i-1</code>. Here I've set up a reporter called <code>report-first-different</code> that returns the position of the first different item if one is found, and returns -1 if no difference is found (for example, if only 'bike' is present):</p>
<pre><code>extensions [rnd]

to-report report-first-different [input-list]
  ; Iterate over the indices of the input-list 
  foreach range length input-list [ i -&gt;
    ; Ignore the first item
    if i &gt; 0 [
      ; If there is a difference between the item from current index
      ; and the item from previous index, report the current index
      if item i input-list != item (i - 1) input-list [ report i]     
    ]
  ]  
  ; If all items are the same, report -1
  report -1 
end


to show-example
  ; Set up a test list, biased towards 'bike'
  let ls [ [&quot;bike&quot; 5 ] [&quot;bus&quot; 1]  [&quot;train&quot; 1] ]
  let test-list map first map [ y -&gt; rnd:weighted-one-of-list ls [ x -&gt; last x ] ] range 8
   
  print &quot;Test list:&quot;
  print test-list
  
  print &quot;Position of first different:&quot;
  print report-first-different test-list
end
</code></pre>
<p>Example output:</p>
<pre><code>Test list:
[bike bike bus bus bike bus train bike]
Position of first different:
2

Test list:
[bike bike bike bike bike bus bike train]
Position of first different:
5

Test list:
[bike bike bike bike bike bike bike bike]
Position of first different:
-1
</code></pre>
","2","Answer"
"79327462","79326189","<p>You might try this:</p>
<pre><code>let f first mymodes
let tf map [m -&gt; (m = f)] mymodes
show position false tf
</code></pre>
<p><code>tf</code> is a list of true/false values corresponding to whether each element of <code>mymodes</code> is equal to the first.  <code>position</code> then finds the first false value.</p>
<p>Note that you can create <code>mymodes</code> with <code>map</code> instead of <code>foreach</code>:</p>
<pre><code>let mymodes map [r -&gt; [mode] of r] myway
</code></pre>
<p><code>map</code> is a very useful primitive.</p>
","3","Answer"
"79330203","79330188","<p>From the <a href=""https://docs.trychroma.com/docs/querying-collections/query-and-get"" rel=""nofollow noreferrer"">documentation</a>, it looks like the difference in format between <code>.query</code> and <code>.get</code> are expected. In the section &quot;Choosing Which Data is Returned&quot;,  it mentions embeddings will be returned as a 2-d numpy array in <code>.get</code> and a python list of 2-d numpy arrays in <code>.query</code>.</p>
","0","Answer"
"79330441","79330188","<p>Looks like a typing error helped to find the answer myself!</p>
<p><code>collection.query(query_texts = ['first query', 'second query'])</code></p>
<p>allows to enter multiple querytexts, which lead to multiple results.
Therefore the results contains</p>
<p><code>{'ids': [[results for first query], [results for second query] ...}</code></p>
<p>On the other hand</p>
<p><code>collection.get()</code></p>
<p>returns a single list of documents to return.</p>
","1","Answer"
"79332055","79328524","<p>A big thanks to RuthC above, she had the answer.  The following is what I used.</p>
<pre><code>df_cols = ['WC_015', 'WC_030', 'WC_046', 'WC_061', 'WC_076', 'WC_091', 
'WC_107', 'WC_122', 'WC_137', 'WC_152', 'WC_168', 'WC_183', 'WC_213', 
'WC_244', 'WC_274', 'WC_305', 'WC_366', 'WC_427', 'WC_488', 'WC_518']
fig, axs = plt.subplots(20, 1, figsize=(50,30))  #, sharex=True, sharey=True)  20

for k, col in enumerate(df_cols):
  df[col].plot(ax=axs[k]) 
  axs[k].annotate(df_cols[k], xy=(.01, .115), xycoords='axes fraction', fontsize=15, rotation=90, color='red')
    
fig.subplots_adjust(hspace=0)
plt.suptitle ('Volumetric Moisture Content', fontsize=40, y=.91)

plt.ylabel('Volumetric Moisture Content (m3/m3)', fontsize=30, y=10.0)
plt.xlabel('Date', fontsize=30)
plt.savefig('Moisture_Content_Plots.pdf', dpi=100, bbox_inches='tight')
</code></pre>
<p><a href=""https://i.sstatic.net/2vdffOM6.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/2vdffOM6.png"" alt=""Plot with subplots annotated"" /></a></p>
","0","Answer"
"79332864","79332760","<ol>
<li><p>The <code>break;</code> statements are missing in the switch cases. This means that the code would continue to the next case, which in fact is not needed.</p>
</li>
<li><p>I'm pretty sure you can avoid the inner loop. You're checking every Item in <code>mainList</code> with every Item in <code>selectedList</code></p>
</li>
</ol>
","1","Answer"
"79332929","79332760","<p>I would replace this</p>
<pre><code>        mainList.removeAt(itemIndex);
        mainList.insert(itemIndex, changeItem);
</code></pre>
<p>with</p>
<pre><code>        mainList[itemIndex] = changeItem;
</code></pre>
<p>Also the inner loop is not necessary, because you can just check if <code>indexOf</code> is -1 (unless you expect duplicates in the list). And you can make other small changes to make the code more compact. So all in all I would make <code>findAndOperate</code> like this:</p>
<pre><code>List&lt;Model&gt; findAndOperate({
  required double value,
  required Operations operations,
  required List&lt;Model&gt; mainList,
  required List&lt;Model&gt; selectedList,
}) {
  for (final selectItem in selectedList) {
    final itemIndex = mainList.indexOf(selectItem);
    if (itemIndex != -1) {
      final changeItem = switch (operations) {
        Operations.PLUS =&gt; selectItem.copyWith(price: selectItem.price + value),
        Operations.MULTIPLICATION =&gt; selectItem.copyWith(price: selectItem.price * value)
      };
      mainList[itemIndex] = changeItem;
    }
  }
  return mainList;
}
</code></pre>
<p>or even</p>
<pre><code>List&lt;Model&gt; findAndOperate({
  required double value,
  required Operations operations,
  required List&lt;Model&gt; mainList,
  required List&lt;Model&gt; selectedList,
}) {
  for (final selectItem in selectedList) {
    final itemIndex = mainList.indexOf(selectItem);
    if (itemIndex != -1) {
      mainList[itemIndex] = switch (operations) {
        Operations.PLUS =&gt; selectItem.copyWith(price: selectItem.price + value),
        Operations.MULTIPLICATION =&gt; selectItem.copyWith(price: selectItem.price * value)
      };
    }
  }
  return mainList;
}
</code></pre>
","0","Answer"
"79333183","79332760","<p>I updated my code this way; I think it's better than the previous version.</p>
<pre><code>List&lt;Model&gt; findAndOperate({
  required double value,
  required Operations operations,
  required List&lt;Model&gt; mainList,
  required List&lt;Model&gt; selectedList,
}) {
  for (final item in mainList) {
    if (selectedList.contains(item)) {
      final itemIndex = mainList.indexOf(item);
      final changeItem = switch (operations) {
        Operations.PLUS =&gt; item.copyWith(price: item.price + value),
        Operations.MULTIPLICATION =&gt; item.copyWith(price: item.price * value)
      };
      mainList[itemIndex] = changeItem;
    }
  }
  return mainList;
}
</code></pre>
","0","Answer"
"79333197","79332993","<p>Here is one option using base R -</p>
<p>We <code>unlist</code> <code>mylist</code> by one-level and turn the individual elements in dataframe and <code>rbind</code> them together. Since <code>data1</code> is already a list of dataframes we can <code>rbind</code> them directly.</p>
<p>Finally we combine the two datasets together to get final output.</p>
<pre><code># Thanks to @Friede for the comment. 
data_1 &lt;- do.call(rbind.data.frame, unlist(mylist, recursive = FALSE))
data_2 &lt;- do.call(rbind, data1)

rbind(data_1, data_2)

#  id  name
#1  1  Jack
#2  2  Mike
#3  3  Mary
#4  4   Bob
#5  3  John
#6  4  Anna
#7  5   Tom
#8  6 Jerry
</code></pre>
<p>Note that the temporary variables <code>data_1</code> and <code>data_2</code> are created just for clarity purposes and are not required.</p>
","1","Answer"
"79335823","79331521","<p>A developed the same functionality some time ago, you can find it <a href=""https://github.com/7kashif/ComposeMPTweaks/blob/main/shared/src/commonMain/kotlin/com/kashif/composemptweaks/HighlightedTextSearch.kt"" rel=""nofollow noreferrer"">here</a></p>
","0","Answer"
"79337048","79336950","<p>What I recommend is that you add a static method to Product to take input through a Scanner and return a Product</p>
<pre><code>public static Product createProduct (Scanner s) {
    double price, 
    int quantity;
    String id_product;
    System.out.println(&quot;Enter the price&quot;);
    price = s.nextDouble();
    System.out.println(&quot;Enter the quantity&quot;);
    quantity = s.nextInt();
    System.out.println(&quot;Enter the product ID&quot;);    
    id_product = s.next();
    return new Product(price, quantity, id_product);
}
</code></pre>
<p>You might want to further break this down so that you initially just create the product id, and then you can create methods to add quantity or set the price.</p>
","2","Answer"
"79337260","79336950","<p>Maybe something like this will help you:</p>
<pre><code>public static void main( String[] args ) {
   ProductList el_product = new ProductList();
   Scanner sc = new Scanner( System.in );
   double price = 0d;
   int quantity = 0;
   String id_product = &quot;&quot;;

   // we create the string with all messages
   String msgs = &quot;Enter the number of products//product//Enter the price//Enter the quantity//Enter the product ID&quot;;

   // we create the array of messages
   String messages[] = msgs.split( &quot;//&quot; );
   
   // we ask the user how many products he/she wants to create
   // and instantiate &quot;numberOfProduct&quot; with the obtained value
   System.out.println( messages[ 0 ] );
   int numberOfProduct = Integer.parseInt( sc.nextLine() );

   for( int k = 0; k &lt; numberOfProduct; k ++ ) {

      // show the second message
      System.out.println( &quot;create the &quot; + ( k + 1 ) + &quot;° &quot; + messages[ 1 ] );

      // i = 2 to start displaying from the third message
      for( int i = 2; i &lt; messages.length; i ++ ) {
         while( true ) {

            // show the message for each item
            System.out.println( messages[ i ] );
            try {
               String data = sc.nextLine();
               if( i == 0 ) {
                  price = Double.parseDouble( data );
                  break;
               }
               else if( i == 1 ) {
                  quantity = Integer.parseInt( data );
                  break;
               }
               else {
                  id_product = data;
                  break;
               }
            }
            catch( Exception e ) { }
         }
      }
      // add to the list the new &quot;Product&quot;
      el_product.addProduct( new Product( price, quantity, id_product ));
   }
}
</code></pre>
","0","Answer"
"79340718","79336950","<p>Here is another way to accept input and check for syntax errors, allowing repeated entry for each item independently.  But first, here are some other potential enhancements you can make.</p>
<ul>
<li><p>in the <code>ProductList class</code>, implement the <code>Iterable</code> interface. It allows you to use the enhanced <code>for loop</code> as well as the <code>forEach</code> method to process the stored items. Here are the changes:</p>
</li>
<li><p>The new class header</p>
</li>
</ul>
<pre><code>class ProductList implements Iterable&lt;Product&gt; {

</code></pre>
<ul>
<li>Add the following methods.</li>
</ul>
<pre><code>public Iterator&lt;Product&gt; iterable() {
    return iterator();
}

@Override
public Iterator&lt;Product&gt; iterator() {
    return productList.iterator();
}
</code></pre>
<ul>
<li>And add a <code>toString()</code> method to the <code>Product</code> class. This can be modified as required</li>
</ul>
<pre><code>@Override
 public String toString() {
     return price + &quot;, &quot; + quantity + &quot;, &quot; + id_product;
 }
</code></pre>
<p>The method to help with input follows. The types are verified correct by the scanner and then stored as Objects.  They are recast as their proper types when everything has been correctly entered.</p>
<pre><code>static String[] args = {&quot;Price&quot;,&quot;Quantity&quot;,&quot;Product ID&quot;};

static Product createNewProduct(Scanner scanner) {
    Object[] arguments = new Object[3];
    for (int i = 0; i &lt; arguments.length; i++) {
        try {
            System.out.printf(&quot;Enter %s: &quot;, args[i]);
            arguments[i] = switch (i) {
                case 0 -&gt; scanner.nextDouble();
                case 1 -&gt; scanner.nextInt();
                case 2 -&gt; scanner.next();
                
                default -&gt; throw new InternalError(
                        &quot;invalid index (i = %d)&quot;.formatted(i));
            };
            continue;
        } catch (InputMismatchException ime) {
            System.out.printf(&quot;Input type mismatch for '%s', try again!%n&quot;,
                    args[i]);
            scanner.nextLine(); // clear invalid entry in scanner buffer
        }
        i--; // reset loop index for re-entering
    }

    return new Product((Double)arguments[0],
            (Integer)arguments[1], (String)arguments[2]);
}

</code></pre>
<p>And here is a demo of how it would be used</p>
<pre><code>public class ProductListDemo {
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        ProductListDemo d = new ProductListDemo();
        ProductList plist = new ProductList();
        for (int i = 1; i &lt;= 2; i++) {
            System.out.printf(&quot;Enter data for product #%d%n&quot;, i);
            Product prod = createNewProduct(scanner);
            plist.addProduct(prod);
            System.out.println();
        }
        // display the products
        plist.forEach(System.out::println);
    }
}
</code></pre>
<p>Prompts and user input.</p>
<pre><code>Enter data for product #1
Enter Price: 22,2
Input type mismatch for 'Price', try again!
Enter Price: 22.29
Enter Quantity: 47
Enter Product ID: ID_1

Enter data for product #2
Enter Price: 15.98
Enter Quantity: AA
Input type mismatch for 'Quantity', try again!
Enter Quantity: 31r
Input type mismatch for 'Quantity', try again!
Enter Quantity: 31
Enter Product ID: ID_2
</code></pre>
<p>And output using <code>forEach</code> as defined in the <code>iterable</code> class.</p>
<pre><code>22.29, 47, ID_1
15.98, 31, ID_2
</code></pre>
<p><strong>Note:</strong> Since strings accept any characters you could use a regular expression to enforce a specific format for the <code>Product ID</code></p>
","0","Answer"
"79348260","79348220","<p>You can filter the elements in the <code>prices</code> list that fulfill the existence of the <code>item</code> element by matching the (item) <code>Id</code> and the existence of the <code>package</code>.</p>
<p>The <code>badPrices</code> criteria is the negation of the <code>goodPrices</code> criteria.</p>
<pre><code>goodPrices = prices
    .Where(price =&gt; items.Any(item =&gt; price.Item == item.Id &amp;&amp; item.Packages.Any(package =&gt; price.Package == package.Id)))
    .ToList();
        
badPrices = prices
    .Where(price =&gt; !items.Any(item =&gt; price.Item == item.Id &amp;&amp; item.Packages.Any(package =&gt; price.Package == package.Id)))
    .ToList();
</code></pre>
<p><a href=""https://dotnetfiddle.net/YAL00l"" rel=""nofollow noreferrer"">Demo @ .NET Fiddle</a></p>
","0","Answer"
"79348663","79348220","<p>If your collections are large, using a <code>HashSet</code> to speed up the matching process is a good idea. This can avoid the inefficencies of a nested loop that a <code>.Where(... .Any())</code> solution might generate and reduce an operation having an <code>O(N x M)</code> complexity to one closer to <code>O(N + M)</code> complexity. One pass through the lookup table to build the hash table, and one pass through the data table to check for matches. Each hash table seek is <code>O(1)</code>, assuming no collisions. Big savings.</p>
<p>The following will build a hash set of <code>Item.Id</code> and <code>Package.Id</code> pairs (as an anonymous type) and will use that hash set to efficiently check each <code>price</code> object.</p>
<pre><code>var itemPackages = items
    .SelectMany(item =&gt;
        item.Packages
        .Select(package =&gt; new {Item = item.Id, Package = package.Id})
    )
    .ToHashSet();
List&lt;RetailPrice&gt; goodPrices = prices
    .Where(price =&gt; itemPackages.Contains(new {price.Item, price.Package}))
    .ToList();
List&lt;RetailPrice&gt; badPrices = prices
    .Where(price =&gt; !itemPackages.Contains(new {price.Item, price.Package}))
    .ToList();
</code></pre>
<p>Note that the Item-Id/Package-Id pairs above are represented as an anonymous type instead of a formatted string. (A string would still work, but adds extra overhead.)</p>
<p>The above is <em>LINQ method syntax</em>. The same can also be performed using (mostly) <em>LINQ query syntax</em> as follows.</p>
<pre><code>var itemPackages = (
        from item in items
        from package in item.Packages
        select new { Item = item.Id, Package = package.Id }
    ).ToHashSet();
var goodPrices = (
        from price in prices
        where itemPackages.Contains(new { price.Item, price.Package })
        select price
    ).ToList();
var badPrices = (
        from price in prices
        where !itemPackages.Contains(new { price.Item, price.Package })
        select price
    ).ToList();     
</code></pre>
<p>LINQ method syntax is good for most simple operations involving the manipulation of one or a few collections. LINQ query syntax may be more intuitive to some programmers, especially when joining multiple data sources. Some operations (like <code>.ToList()</code>) only be done using LINQ method syntax, so it is not uncommon to find a mix (like in the above code). It is good to learn both and then use whichever syntax you find easier to use and more readable for others for a given situation.</p>
<p>As you start using LINQ, often be working with anonymous types that are implicitly defined with an untyped <code>new { ... }</code> expression. You may also often deal with complex nested generic types (even if you don't know it). To allow convenient declaration of variables to hold these types, C# introduced the <code>var</code> keyword that implicitly defines the type based on the assigned value. So instead of declaring <code>HashSet&lt;anonymous type: int Item, int Package&gt;  itemPackages = ...</code> you can simply use <code>var itemPackages = ...</code>. The <code>var</code> keyword can also be used in place of simpler known types like <code>int</code> or <code>List&lt;Price&gt;</code>. Whether or not you choose to use <code>var</code> for these cases is a question of style (readability vs simplicity).</p>
<p>Results:</p>
<pre><code>Good prices 1:
{&quot;Item&quot;:1,&quot;Price&quot;:1,&quot;Package&quot;:1}
{&quot;Item&quot;:2,&quot;Price&quot;:2,&quot;Package&quot;:2}
{&quot;Item&quot;:3,&quot;Price&quot;:3,&quot;Package&quot;:1}
{&quot;Item&quot;:4,&quot;Price&quot;:4,&quot;Package&quot;:2}
{&quot;Item&quot;:6,&quot;Price&quot;:6,&quot;Package&quot;:2}

Bad prices 1:
{&quot;Item&quot;:5,&quot;Price&quot;:5,&quot;Package&quot;:3}
</code></pre>
<p>See <a href=""https://dotnetfiddle.net/5EETww"" rel=""nofollow noreferrer"">this .NET Fiddle</a> for a demo.</p>
","1","Answer"
"79353719","79353603","<p>The issue here is that Python <code>int</code> values are immutable and that you're not storing references to the <code>a1</code>, <code>a2</code>, etc. variables in <code>ls</code>. Rather, you're storing the values those variables point to, which are immutable.</p>
<p>If we used a mutable type we'd see something like what you're expecting.</p>
<pre><code>&gt;&gt;&gt; a1, a2 = [1,2], [3,4]
&gt;&gt;&gt; ls = [a1, a2]
&gt;&gt;&gt; ls
[[1, 2], [3, 4]]
&gt;&gt;&gt; ls[0].append(56)
&gt;&gt;&gt; ls
[[1, 2, 56], [3, 4]]
&gt;&gt;&gt; a1
[1, 2, 56]
</code></pre>
<p>But <code>ls[0]</code> still doesn't contain any kind of reference to <code>a1</code>.</p>
<pre><code>&gt;&gt;&gt; a1 = 42
&gt;&gt;&gt; ls
[[1, 2, 56], [3, 4]]
</code></pre>
<p>It's just that at the time, <code>a1</code> and <code>ls[0]</code> were both names for the same mutable <code>list</code> value. We then changed that by making <code>a1</code> a name for a different value.</p>
","1","Answer"
"79355780","79355634","<p>On further investigation I find that producing the list in either of the following ways works. I still do not understand why the version I used doesn't. I think it should.</p>
<pre><code>   // this works
   Group {
      ForEach(viewModel.lineup) { PlayerRowView(player: $0) }
   }

   // so does this
   ScrollView {
      ForEach(viewModel.lineup) { PlayerRowView(player: $0) }
   }
</code></pre>
","0","Answer"
"79358221","79358064","<p>It may be as simple as having skipped the recommendation</p>
<blockquote>
<p>The code that you write within parallel workers should not call the R or Rcpp API in any fashion.</p>
</blockquote>
<p>from section <a href=""https://rcppcore.github.io/RcppParallel/#thread_safety"" rel=""nofollow noreferrer"">'Thread Safety'</a> of the (generally excellent) <a href=""https://rcppcore.github.io/RcppParallel"" rel=""nofollow noreferrer"">RcppParallel documentation site</a>. 'Writing R Extensions' has similar recommendations. All this boils down to 'cannot use any data structure / container with R memory' as we cannot know when <code>gc()</code> gets called and we get back into single-threaded R.</p>
<p>So in short, to be on the safe side you need have data in non-R data structures to permit parallel work on that data.  That is what the examples in RcppParallel do. They are worth studying in detail.</p>
","0","Answer"
"79359746","79359740","<p>You've got the sorts backward. You need to sort by <code>itemgetter(2)</code> first, then sort by <code>itemgetter(0, 1)</code>, to get the same result as sorting by <code>itemgetter(0, 1, 2)</code>.</p>
<p>The terminology might be confusing. A sort where comparisons are done by X, breaking ties by Y, is often referred to as &quot;sorting by X, then by Y&quot;, but it's completely different from performing one sort by X, then a second sort by Y.</p>
","2","Answer"
"79360288","79360261","<p>The behavior of calling <code>__len__</code> of the given iterable during initialization of a new list is an implementation detail and is meant to help pre-allocate memory according to the estimated size of the result list, as opposed to naively and inefficiently grow the list as it is iteratively extended with items produced by a given generic iterable.</p>
<p>You can find the logics in <a href=""https://github.com/python/cpython/blob/d05140f9f77d7dfc753dd1e5ac3a5962aaa03eff/Objects/listobject.c#L1193"" rel=""noreferrer""><code>Objects/listobject.c</code></a> of CPython, where it defaults the pre-allocation of memory to a size of 8 if the iterable has neither <code>__len__</code> nor <code>__length_hint__</code>, which is documented in <a href=""https://peps.python.org/pep-0424/#rationale"" rel=""noreferrer"">PEP-424</a>:</p>
<pre class=""lang-c prettyprint-override""><code>static int
list_extend_iter_lock_held(PyListObject *self, PyObject *iterable)
{
    PyObject *it = PyObject_GetIter(iterable);
    if (it == NULL) {
        return -1;
    }
    PyObject *(*iternext)(PyObject *) = *Py_TYPE(it)-&gt;tp_iternext;

    /* Guess a result list size. */
    Py_ssize_t n = PyObject_LengthHint(iterable, 8);
    ...
}
</code></pre>
","15","Answer"
"79366191","79366125","<p>I looks like you skip the first datapoint since you write <code>x = data[1:len(data),0]</code> and so forth. As @trincot mentioned, you also have to care about the <code>y[i-1]</code> case for <code>i=0</code>. Maybe the following will help you:</p>
<pre><code>tst = []
x = data[:,0]
y = data[:,1]  
intt = data[:,2]
total = []
for i in range(1,len(data)):
   if intt[i]!=0:         
      tst.append((x[i]**2.0+ y[i]-y[i-1])**2.0)
   else:
      total.append(sum(tst))
      break
total = np.array(total)
</code></pre>
<p>This includes all data points in <code>x</code>, <code>y</code>, and <code>intt</code>, but the first data point will still be skipped since the loop starts with <code>i=1</code>.</p>
<p>Edit: A cleaner solution, based on comment from @Barmar.</p>
<pre><code>tst = []
x = data[:,0]
y = data[:,1]  
intt = data[:,2]
for i in range(1,len(data)):
   if intt[i]!=0:         
      tst.append((x[i]**2.0+ y[i]-y[i-1])**2.0)
   else:
      total = np.array(sum(tst))
      break
</code></pre>
<p>Edit: Another solution that goes through all of <code>intt</code>:</p>
<pre><code>tst = []
x = data[:,0]
y = data[:,1]  
intt = data[:,2]
total = []
for i in range(1,len(data)):
   if intt[i]!=0:         
      tst.append((x[i]**2.0+ y[i]-y[i-1])**2.0)
   elif i == len(data) - 1:
      total.append(sum(tst))
   else:
      total.append(sum(tst))
      tst = []
      continue
total = np.array(total)
</code></pre>
","1","Answer"
"79369091","79368232","<blockquote>
<p>Webbrowser Module Doesn't Work with Lists</p>
</blockquote>
<p>The reason it opened a new window rather than new tabs is due to this <code>webbrowser.get('chrome').open_new_tab(str(url))</code>.</p>
<p>The issue can be resolved through the use of looping.</p>
<p>Snippet:</p>
<pre><code>def fetch():
    with open(&quot;links.txt&quot;) as f:
        lines = f.read().splitlines()
        while len(lines) &gt;1:
            urls = lines
            print(urls)
            chrome_path = r&quot;C:\Program Files\Google\Chrome\Application\chrome_proxy.exe&quot;
            webbrowser.register('chrome',None,webbrowser.BackgroundBrowser(chrome_path))
            for url in urls: #add looping
                webbrowser.get('chrome').open_new_tab(str(url))
                lines = lines[1:]
    f.close()
</code></pre>
","0","Answer"
"79371361","79368232","<p>Your issue is caused by the way you're handling lines[0]. In your code, you're unnecessarily converting it into a list and then converting that list to a string:</p>
<pre><code>url = [lines[0]] # line 15
webbrowser.get('chrome').open_new_tab(str(url)) # line 18
</code></pre>
<p>When you do str(url), it converts the list into a string like this:</p>
<pre><code>&quot;['https://example.com']&quot;
</code></pre>
<p>This results in an invalid URL format, which causes the function to fail.</p>
<p><strong>Solution</strong></p>
<p>Simply assign lines[0] directly to url without wrapping it in a list:</p>
<pre><code>url = lines[0] # line 15
webbrowser.get('chrome').open_new_tab(url) # line 18
</code></pre>
<p><strong>Full code</strong></p>
<pre><code>from tkinter import *
from customtkinter import CTk
import webbrowser

def submit():
    file = open(&quot;links.txt&quot;,&quot;a&quot;)
    file.write(entry.get()+&quot;\n&quot;)
    file.close()

def fetch():
    with open(&quot;links.txt&quot;) as f:
        lines = f.read().splitlines()

        while len(lines) &gt; 0:
            url = lines[0]
            chrome_path = r&quot;C:\Program Files\Google\Chrome\Application\chrome.exe&quot;
            webbrowser.register('chrome',None,webbrowser.BackgroundBrowser(chrome_path))
            webbrowser.get('chrome').open_new_tab(url)
            lines = lines[1:]
    f.close()

app = CTk()
app.geometry(&quot;217x115&quot;)
app.iconbitmap()
app.title(&quot;Linkment&quot;)

label = Label(text=&quot;Enter Links Below&quot;,font=(&quot;Sans Serif&quot;,15,&quot;bold&quot;),bg=&quot;#242424&quot;,fg=&quot;White&quot;)
label.pack()

entry = Entry(bg=&quot;#3b3b3b&quot;,font=(&quot;Sans Serif&quot;,11),fg=&quot;White&quot;)
entry.pack()

submit = Button(text=&quot;Submit&quot;,font=(&quot;Sans Serif&quot;,11),bg=&quot;#3b3b3b&quot;,fg=&quot;White&quot;,command=submit)
submit.pack()

fetch = Button(text=&quot;Fetch Links&quot;,font=(&quot;Sans Serif&quot;,11),bg=&quot;#3b3b3b&quot;,fg=&quot;White&quot;,command=fetch)
fetch.pack()

app.mainloop()
</code></pre>
","0","Answer"
"79375078","79374284","<p>I am not sure what the the disered output is supposed to look like.
You could try something like this:</p>
<pre><code>SO_ListIteration &lt;- data.frame(Group = rep(1:3, each = 20),
                               Replicate = rep(1:10, each = 2),
                               Data = rnorm(60))


for(j in 1:max(SO_ListIteration$Group)){

    temp_gr &lt;- SO_ListIteration[SO_ListIteration$Group==j,]
    assign(paste0(&quot;loop&quot;,j),split(temp_gr,temp_gr$Replicate))

}
</code></pre>
<p>This gets you three lists (loop1, loop2, loop3) carrying the replicates of the respective group.</p>
<pre><code>loop1

&gt; loop1
$`1`
  Group Replicate       Data
1     1         1 -1.3843642
2     1         1 -0.8653507

$`2`
  Group Replicate      Data
3     1         2 0.8221535
4     1         2 0.3215665

$`3`
  Group Replicate       Data
5     1         3 -0.2025913
6     1         3 -1.0237386

$`4`
  Group Replicate      Data
7     1         4  1.769719
8     1         4 -1.431969

$`5`
   Group Replicate       Data
9      1         5  0.6306618
10     1         5 -0.1247508

$`6`
   Group Replicate      Data
11     1         6 -2.128931
12     1         6 -1.512757

$`7`
   Group Replicate       Data
13     1         7 -0.8367149
14     1         7  0.4827991

$`8`
   Group Replicate      Data
15     1         8 0.4900297
16     1         8 2.1262468

$`9`
   Group Replicate       Data
17     1         9 0.49559605
18     1         9 0.02258138

$`10`
   Group Replicate       Data
19     1        10 0.04831295
20     1        10 1.75682687
</code></pre>
","1","Answer"
"79383640","79383301","<p>According to <a href=""https://pytorch.org/docs/stable/_modules/torch/nn/modules/container.html#ModuleList"" rel=""nofollow noreferrer"">PyTorch's implementation</a>, you cannot directly call <code>linears[ind]</code> when <code>ind</code> is neither an <code>int</code> nor a <code>slice</code>.</p>
<p>What you can do instead is:</p>
<pre class=""lang-py prettyprint-override""><code>out = input
for idx in ind:
    out = linears[idx](out)
</code></pre>
","1","Answer"
"79385246","79383301","<p>The <code>ind</code> tensor is of size <code>(bs, n_decisions)</code>, which means we're choosing a different set of experts for each item in the batch.</p>
<p>With this setup, the most efficient way to compute the output is to compute all experts for all batch items, then gather the desired choices after. This will be more performant in GPU compared to looping over the individual experts.</p>
<p>Since we're looking at a linear layer, you can compute all the experts using a single linear layer of size <code>n_experts * dim</code>.</p>
<pre class=""lang-py prettyprint-override""><code>d_in = 768
n_experts = 10
bs = 32
n_choice = 4

# Create a single large linear layer
fused_linear = nn.Linear(d_in, d_in * n_experts)

indices = torch.randint(0, n_experts, (bs, n_choice))
x = torch.randn(bs, d_in)

# Forward pass through the fused layer
y = fused_linear(x)  # Shape: [bs, d_in * n_experts]

# Reshape to separate the experts dimension
ys = y.reshape(bs, n_experts, d_in)  # Shape: [bs, n_experts, d_in]

# Gather the chosen experts
ys = torch.gather(ys, 1, indices.unsqueeze(-1).expand(-1, -1, d_in))
</code></pre>
<p>The output <code>ys</code> will be of shape <code>(bs, n_choice, d_in)</code></p>
","2","Answer"
"79396374","79396329","<p>The problem is that your function does not return anything explicitly (i.e. it returns <code>None</code>) when the <code>if</code> conditions are never true, which can happen when your list is shorter than <code>r</code>. And as you remove items, the second call of this function will indeed get a list that is shorter than <code>r</code>...</p>
<p>The very quick fix is to append a <code>return max_in_list</code> at the end of your function body.</p>
<p>But consider these remarks:</p>
<ul>
<li><p>Instead of comparing with <code>r</code>, just let the loop complete (as it is the last iteration anyway). So drop those two <code>if</code> statements that test for <code>j+1 == r</code>.</p>
</li>
<li><p>Instead of iterating over <code>range(len(L))</code>, you can iterate over <code>L</code>, which means (together with the previous remark) you don't need to work with indices: you get the <em>values</em> in the list.</p>
</li>
<li><p>The work done to test <code>max_in_list == rang</code> may not be worth the effort, as the probability of hitting that value is rather small.</p>
</li>
<li><p>Your code assumes that the list is not empty. If you call it with an empty list you'll get an error. Maybe consider checking for the list to be empty and determine what you want to return in that case.</p>
</li>
</ul>
","1","Answer"
"79396401","79396329","<p>Rather than looping on the original list length just loop until the list is empty.</p>
<p>In other words change:</p>
<pre><code>for k in range(len(L)):
</code></pre>
<p>to:</p>
<pre><code>while L:
</code></pre>
<p>The way you're determining the maximum value in the list is unnecessarily convoluted.</p>
<p>The entire program could be:</p>
<pre><code>from random import randint

rang = 100  # number size limit
r = 10  # size of list

L = [randint(0, rang) for _ in range(r)]


def max_list(data: list[int]) -&gt; int:
    assert data
    m = data[0]
    for x in data[1:]:
        if x &gt; m:
            m = x
    return m


while L:
    print(L)
    L.remove(max_list(L))
</code></pre>
","1","Answer"
"79397166","79389256","<p>You're reporting an error:</p>
<p><code>IDE0059 Unnecessary assignment of a value to myRow1List</code></p>
<p>If I'm understanding the code that you <em>did</em> post, it seems likely that it's going to create way more than the 81 textboxes you actually need and this will make for overlaps and conflicting assignments. To solve, make <em>only</em> the 81 display controls and work with collections that contain <em>references to</em> those controls, <em>not</em> the controls themselves. Here's what I mean.</p>
<hr />
<h4>Game Board</h4>
<p>Idiomatically, a &quot;game board UI&quot; is often represented in WinForms as a <code>TableLayoutPanel</code>. Using inheritance, a control like <code>Label</code> can be used as the basis for a <code>Square</code>. Making an <code>indexer</code> for <code>MainForm</code> allows squares to be easily referenced by their coordinates.</p>
<h5>Indexer</h5>
<p><em>Allows statements like <code>this[column, row] = square;</code></em></p>
<pre><code>Square this[int column, int row]
{
    get =&gt; gameBoard.GetControlFromPosition(column, row) as Square 
           ?? throw new InvalidOperationException();
    set =&gt; gameBoard.Controls.Add(value, column, row);
}
</code></pre>
<hr />
<p>The uninitialized game board can be populated by iterating its rows and columns</p>
<pre><code>public MainForm()
{
    InitializeComponent();
    for (int column = 0; column &lt; 9; column++)
    {
        for (int row = 0; row &lt; 9; row++)
        {
            // Square inherits from Label
            var square = new Square
            {
                Size = new Size(48, 48),
                Margin = new Padding(1),
                Anchor = (AnchorStyles)0xf,
                BackColor = Color.DarkGray,
                ForeColor = Color.WhiteSmoke,
                BorderStyle = BorderStyle.FixedSingle,
                TextAlign = ContentAlignment.MiddleCenter,
                Font = new Font(Font.FontFamily, 16),
            };
            square.Click += Any_SquareClicked;
            this[column, row] = square;
        }
    }
    InitGame();
}
</code></pre>
<h6>Game Board, after running <code>InitGame</code> and player makes a few moves.</h6>
<p><a href=""https://i.sstatic.net/828JdtLT.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/828JdtLT.png"" alt=""game board"" /></a></p>
<hr />
<p><strong>Columns, Rows, and Nonants</strong></p>
<p>Now you're set up to where instead of the <code>RowList</code>, <code>ColumnList</code> and <code>BlockList</code> you simply leverage the indexer to make the collections that you need.</p>
<pre><code>
Square[] GetRow(int row) =&gt;
    Enumerable
    .Range(0, 9)
    .Select(_ =&gt; this[_, row])
    .ToArray();

Square[] GetColumn(int column) =&gt;
    Enumerable
    .Range(0, 9)
    .Select(_ =&gt; this[column, _])
    .ToArray();

Square[,] GetNonant(int oneOfNine)
{
    int startRow = (oneOfNine / 3) * 3;
    int startColumn = (oneOfNine % 3) * 3;
    Square[,] nonant = new Square[3, 3];
    for (int row = 0; row &lt; 3; row++)
    {
        for (int column = 0; column &lt; 3; column++)
        {
            nonant[row, column] = this[startColumn + column, startRow + row];
        }
    }
    return nonant;
}
</code></pre>
","0","Answer"
"79396556","79396329","<ol>
<li><p>Your approach had unnecessary checks (like if max_in_list == rang) that didn't help with finding the maximum value and made the code harder to understand.</p>
</li>
<li><p>Looping with for in a list that changes over the code is not a good practice.</p>
</li>
</ol>
<pre><code>import random

L = []
rang = 100  
r = 10 

for i in range(r):
    L.append(random.randint(0, rang))

print(&quot;Original List:&quot;, L)

def max_list(L):
    max_in_list = L[0]
    for j in range(len(L)):
        if L[j] &gt; max_in_list:
            max_in_list = L[j]
    return max_in_list

while L:
    largest = max_list(L)
    L.remove(largest)
    print(f&quot;Remaining List: {L}&quot;)
</code></pre>
","0","Answer"
"79396573","79396329","<p>The program below does the trick. The max_list function now iterates over the values of the list keeping track of the maximum.</p>
<pre><code>import random
L = []
rang = 100 #number size limit
r = 10 #size of list

for i in range(r):
    L.append(random.randint(0, rang))

def max_list(L):
    max_in_list = L[0]
    for val in L:
        if max_in_list &lt; val:#if max_in_list is the highest it can be it m
            max_in_list = val
    return max_in_list
        
print(max(L))
print(max_list(L))
print(L)
L.remove(max_list(L))
print(L)
for k in range(len(L)):
    L.remove(max_list(L))
    print(L)
</code></pre>
","0","Answer"
"79401602","79401406","<p>Good to hear you are comfortable with the execution, and you are looking at how to execute the api calls.</p>
<p><em><strong>Ability to retry</strong></em></p>
<p>This is a key point that comes to mind. Yes, we can sleep for 60s, but every api call is not guaranteed success. One batch may succeed, and the next may fail. You don't want to be in a situation where you need to start from batch #1 when a batch in between fails.</p>
<p><strong>Storage of inputs</strong></p>
<p>I would suggest to think of a way to store files of batches, with one batch per file. This could be a blob item, message queue message, local file etc. Think of a queue of files, when one file is processed, move it is deleted, and the respone is handled. If api call is not successful, see how to retry.</p>
<p><strong>Processing</strong></p>
<p>Split the inputs into files with 100 items. Something on this lines is what I can suggest.</p>
<pre><code>def process():
    try:
        api_call()
    except Exception as e:
        print(f&quot;Error processing file {file}: {e}&quot;)
        #move file to a retry folder

for file in files:
    process(file)
    pause(60_seconds)

</code></pre>
<p>The main point id make, is you are limited to a batch size of 100. I'd always suggest to ensure success of every batch, and the ability to retry.</p>
","0","Answer"
"79402937","79401406","<p>Thanks to all who responded, in particular mkreiger, who guided me to this answer:</p>
<pre><code>def list_splitter(seq, block_length):
    return (seq[pos:pos + block_length] for pos in range(0, len(seq), block_length))

for group in list_splitter(my_list, 100):
    print(group, &quot;\n&quot;, len(group), &quot;\n&quot;)
</code></pre>
","0","Answer"
"79403149","79403040","<p><code>getSunlightTimes()</code> can also be called with a <code>data.frame</code> with <code>date</code>, <code>lat</code> &amp;  <code>lon</code> columns.</p>
<p>To approach this with <code>dplyr</code> in a single <code>mutate()</code> call, you could prepare a local frame with correctly named columns with <code>tibble()</code> and then select required columns from <code>getSunlightTimes()</code> output; returned 2-column frame gets automatically unpacked to 2 columns in parent frame:</p>
<pre class=""lang-r prettyprint-override""><code>library(suncalc)
library(dplyr)

df1 &lt;- data.frame(
  ID = c(1, 2, 3, 4), 
  date = as.Date(c('2020-09-1', '2020-09-15', '2021-10-05', '2024-08-31')), 
  latitude = c(47.555, 46.123, 46.892, 47.598), 
  longitude = c(-50.123, -50.456, -50.789, -50.147)
)

df1 |&gt; 
  mutate(
    tibble(date, lat = latitude, lon = longitude) |&gt; 
      getSunlightTimes(data = _, keep = c('sunrise', 'sunset'), tz=&quot;America/St_Johns&quot;) |&gt; 
      select(sunrise, sunset)
  )
#&gt;   ID       date latitude longitude             sunrise              sunset
#&gt; 1  1 2020-09-01   47.555   -50.123 2020-09-01 06:11:05 2020-09-01 19:32:41
#&gt; 2  2 2020-09-15   46.123   -50.456 2020-09-15 06:31:44 2020-09-15 19:04:52
#&gt; 3  3 2021-10-05   46.892   -50.789 2021-10-05 06:58:32 2021-10-05 18:26:51
#&gt; 4  4 2024-08-31   47.598   -50.147 2024-08-31 06:09:44 2024-08-31 19:34:53
</code></pre>
<p><sup>Created on 2025-01-31 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","3","Answer"
"79403373","79403150","<p>Use sets and the <a href=""https://docs.python.org/3/library/stdtypes.html#frozenset.issubset"" rel=""nofollow noreferrer""><code>issubset()</code></a> method.</p>
<p>You should use <code>any()</code> to test if <code>x[0:2]</code> is a subset of any of the lists in <code>List2</code>, not <code>all()</code>.</p>
<pre><code>List1 = [
    [60, 64, 67],
    [62, 67, 72],
    [62, 66, 69],
    [61, 64, 69],
    [64, 66, 71],
    [63, 66, 71],
]

List2 = [
    [61, 62, 64, 70],
    [60, 61, 62, 63],
    [64, 65, 67, 69],
    [65, 70, 66, 61],
]

Sets2 = list(map(set, List2))

for x in List1:
    xset = set(x[0:2])
    is_subset = any(xset.issubset(y) for y in Sets2)
    print(is_subset)
</code></pre>
<p>Result:</p>
<pre class=""lang-none prettyprint-override""><code>False
False
False
True
False
False
</code></pre>
","0","Answer"
"79403459","79403150","<p>You were comparing numbers with list items that are lists as well.
This alternative code might satisfy your purpose.</p>
<pre><code>List1 = [
    [60, 64, 67],
    [62, 67, 72],
    [62, 66, 69],
    [61, 64, 69],
    [64, 66, 71],
    [63, 66, 71],
]

List2 = [
    [61, 62, 64, 70],
    [60, 61, 62, 63],
    [64, 65, 67, 69],
    [65, 70, 66, 61],
]

for x in List1:
    for z in List2:
        is_subset =all([(y in z) for y in x[0:2]])
        if is_subset == True:
            break
    print(is_subset)    
</code></pre>
<p>Result:</p>
<pre><code>False
False
False
True
False
False
</code></pre>
","1","Answer"
"79404549","79403040","<p>Using R base, You may try this:</p>
<pre><code>t(sapply(1:nrow(df1),
  function(i){
    suncalc::getSunlightTimes(date = df1$date[i],
                              lat = df1$latitude[i],
                              lon = df1$longitude[i],
                              keep = c('sunrise','sunset'),
                              tz=&quot;America/St_Johns&quot;)
</code></pre>
","2","Answer"
"79404567","79404293","<p>You can use the following <strong>shift</strong> transformation spec :</p>
<pre class=""lang-json prettyprint-override""><code>[
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;*&quot;: &quot;Others.&amp;&quot;, //the elements other than &quot;number&quot; and &quot;letter&quot;
      &quot;number|letter&quot;: {
        // loop through all the &quot;numbers&quot; and &quot;letters&quot;
        &quot;*&quot;: {
          &quot;@&quot;: &quot;main[&amp;1].&amp;2&quot;
        }
      }
    }
  },
  {
    &quot;operation&quot;: &quot;shift&quot;,
    &quot;spec&quot;: {
      &quot;main&quot;: {
        &quot;*&quot;: {
          &quot;@2,Others&quot;: { &quot;*&quot;: &quot;[&amp;1].&amp;&quot; }, // go two levels up the tree to grab the values of the &quot;main&quot; array
          &quot;*&quot;: &quot;[&amp;1].&amp;&quot;
        }
      }
    }
  }
]
</code></pre>
<p>the <strong>demo</strong> on the site <strong><a href=""https://jolt-demo.appspot.com/"" rel=""nofollow noreferrer"">Jolt Transform Demo Using v0.1.1</a></strong> is :</p>
<p><a href=""https://i.sstatic.net/kEsYoASb.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/kEsYoASb.png"" alt=""Jolt Transform Demo"" /></a></p>
","0","Answer"
"79405939","79405884","<p>A great question!
If you are getting this error, some suggestions/alternatives to solve this problem, and also improvements from my side side-&gt;</p>
<ol>
<li>Check for correct import for mutableStateList-&gt;</li>
</ol>
<pre><code>import androidx.compose.runtime.mutableStateListOf
</code></pre>
<ol start=""2"">
<li><p>Check for gradle for correct dependency. Even though, if you are using newer versions of android studio it won't be a problem.</p>
</li>
<li><p>Clean and Rebuild the project again.</p>
</li>
<li><p>If issue persists, then instead of using mutableStateListOf, you may use this</p>
</li>
</ol>
<pre><code>var inputsMut by remember { mutableStateOf&lt;List&lt;String&gt;&gt;(emptyList()) }
inputsMut = inputsMut + name //Insert the name on button click

</code></pre>
<p>**Note: **Remember, behind the scenes &quot;mutableStateOf&lt;List&gt;()&quot; and &quot;mutableStateListOf&quot; works differently. But in your case it will do the work.</p>
<ol start=""5"">
<li><p>In your existing code, You are updating the &quot;mutableStateListOf&quot; in wrong way. MutableStateList is already mutable so you don't need to reassign it, just modify it using &quot;.add(name)&quot; function.</p>
</li>
<li><p>As the parent layout don't use &quot;Column&quot; just use &quot;LazyColumn&quot; Otherwise it may create some unknown UI related problems.</p>
</li>
</ol>
<p>This is the final modified code from my side =&gt;</p>
<pre><code>@Composable
fun CreateBar(
    modifier: Modifier = Modifier
){
    var name by remember { mutableStateOf(&quot;&quot;) }
    val inputs = remember { mutableStateListOf&lt;String&gt;() }
    var inputsMut by remember { mutableStateOf&lt;List&lt;String&gt;&gt;(emptyList()) }

    //Use lazy column as it will minimizes recomposition and also good for this type of scenarios
    LazyColumn (
        modifier = modifier
    ){
        item {
            Row( modifier = Modifier
                .fillMaxWidth()
                .padding(20.dp , 60.dp),
                horizontalArrangement = Arrangement.Center,
                verticalAlignment = Alignment.CenterVertically)
            {
                TextField(
                    value = name,
                    onValueChange = { text : String -&gt;
                        name = text
                    }
                )
                Button(
                    onClick = {
                        inputs.add(name) // Use this to modify the input list
//                        inputsMut = inputsMut + name // Use this to modify the input list, if you are using mutableStateOf
                        name = &quot;&quot; // After adding change the name to empty
                    }
                ) {

                    androidx.compose.material3.Icon(
                        imageVector = Icons.Default.Search,
                        contentDescription = null,
                        modifier = Modifier
                            .height(45.dp)
                    )
                }
            }
        }
        //Use this to show the input list, if you are using mutableStateOf
//            items(inputsMut){ input -&gt;
//                Text(&quot;this is$input&quot;)
//            }

        items(inputs){ input -&gt;
            Text(&quot;this is$input&quot;)
        }
    }

}
</code></pre>
<p>I hope my answer helped you. Feel free to ask new question related to it or any further clarifications regarding this question.
Thanks</p>
","-1","Answer"
"79406904","79406869","<pre><code>req2 = req1
</code></pre>
<p>creates a reference to the same object. So when you modify either one, the other what is modifed as well.</p>
<p>Use the copy method to copy all values from on list to a new object.</p>
<pre><code>req2 = req1.copy()
</code></pre>
","0","Answer"
"79411223","79411048","<p>You are trying to destroy the wrong object.</p>
<p>Let's say you want to destroy the 5th element of the list, after you remove it, the 6th element will become the 5th, so you are actually trying to destroy the 6th element.
What you need to do is store the gameObject in a temporary obj and then destroy this temporary obj.</p>
<p>Also you need to decrease the value of your iterator after you delete a object from the list.</p>
<pre><code>GameObject tmp = chunksList[i];
chunksList.RemoveAt(i); 
Destroy(tmp);
i--;
</code></pre>
","1","Answer"
"79412574","79412559","<p>As you're looking for a <a href=""/questions/tagged/tidyverse"" class=""s-tag post-tag"" title=""show questions tagged &#39;tidyverse&#39;"" aria-label=""show questions tagged &#39;tidyverse&#39;"" rel=""tag"" aria-labelledby=""tag-tidyverse-tooltip-container"" data-tag-menu-origin=""Unknown"">tidyverse</a> solution, I think an expressive way here is to <a href=""https://tidyr.tidyverse.org/reference/unnest.html"" rel=""nofollow noreferrer""><code>tidyr::unnest()</code></a> the list column here, then <a href=""https://dplyr.tidyverse.org/reference/mutate-joins.html"" rel=""nofollow noreferrer""><code>left_join()</code></a> to <code>large</code> and <a href=""https://dplyr.tidyverse.org/reference/summarise.html"" rel=""nofollow noreferrer""><code>summarise()</code></a>:</p>
<pre class=""lang-r prettyprint-override""><code>small |&gt;
    tidyr::unnest(links) |&gt;
    left_join(large, by = c(&quot;links&quot; = &quot;id&quot;)) |&gt;
    summarise(
        links = list(links),
        count_yes = sum(att == &quot;yes&quot;, na.rm = TRUE), .by = id
    )

# # A tibble: 2 × 3
#      id links     count_yes
#   &lt;dbl&gt; &lt;list&gt;        &lt;int&gt;
# 1     1 &lt;dbl [4]&gt;         2
# 2     2 &lt;dbl [4]&gt;         1
</code></pre>
<p>Though I'd rather just keep the data in long form rather than doing the last step, unless there's a very good reason to work with list columns, as this will avoid the need to iterate over a column with <code>map*()</code> or <code>*apply()</code> functions.</p>
","1","Answer"
"79412582","79412559","<p>You are on the right track but need some adjustment.</p>
<pre><code>small %&gt;%
  mutate(count_yes = map_int(links, ~sum(.x %in% large$id[large$att %in% &quot;yes&quot;])))

#     id links     count_yes
#  &lt;dbl&gt; &lt;list&gt;        &lt;int&gt;
#1     1 &lt;dbl [4]&gt;         2
#2     2 &lt;dbl [4]&gt;         1
</code></pre>
<p>Or in base R :</p>
<pre><code>sapply(small$links, \(x) sum(x %in% large$id[large$att %in% &quot;yes&quot;]))
</code></pre>
<p>Note the use of <code>%in%</code> instead of <code>==</code> would return <code>FALSE</code> for <code>NA</code> values.</p>
","3","Answer"
"79412869","79412815","<p>This is what worked for me:</p>
<pre><code>import requests

# Define ranges
range1 = range(634797, 634876)
range2 = range(776458, 776512)

# Generate unique coordinate pairs
combinations = [(x, y) for x in range1 for y in range2]

# API key
API_KEY = &quot;SECRET&quot;

# Loop through all pairs and fetch images
for myVal1, myVal2 in combinations:
    url = f&quot;https://api.nearmap.com/tiles/v3/surveys/6e33c960-4310-11ee-90f9-b3c1b4806389/North/21/{myVal1}/{myVal2}.jpg?apikey={API_KEY}&quot;
    headers = {&quot;accept&quot;: &quot;image/*&quot;}

    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        file_path = f&quot;/arcgis/home/nearmap/{myVal1}_{myVal2}.jpg&quot;
        with open(file_path, 'wb') as myImage:
            myImage.write(response.content)
        print(f&quot;Downloaded: {file_path}&quot;)
    else:
        print(f&quot;Failed to download {myVal1}, {myVal2}: {response.status_code}&quot;)
</code></pre>
","0","Answer"
"79413949","79413934","<p>This is a duplicate of this question. I use <code>ast.literal_eval</code> given in the second answer.</p>
<p><a href=""https://stackoverflow.com/questions/23111990/pandas-dataframe-stored-list-as-string-how-to-convert-back-to-list/63020659#63020659"">Pandas DataFrame stored list as string: How to convert back to list</a></p>
<p><code>df.Seq_1 = df.Seq_1.apply(literal_eval)</code></p>
","1","Answer"
"79415090","79414652","<p>You could provide your own implementation for ordering by property name.</p>
<p>So, to follow the signature of existing <code>OrderBy</code> method, we should define:</p>
<pre class=""lang-cs prettyprint-override""><code>public static IOrderedEnumerable&lt;T&gt; OrderByProperty&lt;T&gt;(this IEnumerable&lt;T&gt; source, string propertyName)
</code></pre>
<p>and implement it using <code>Expression</code>s and existing <code>OrderBy</code> method, as below:</p>
<pre class=""lang-cs prettyprint-override""><code>
public static class QueryableExtensions
{
    public static IOrderedEnumerable&lt;T&gt; OrderByProperty&lt;T&gt;(this IEnumerable&lt;T&gt; source, string propertyName)
    {
        if (string.IsNullOrWhiteSpace(propertyName))
            throw new ArgumentException(&quot;Property name cannot be null or empty.&quot;, nameof(propertyName));

        var type = typeof(T);
        var property = type.GetProperties()
                            .FirstOrDefault(p =&gt; p.Name.Equals(propertyName, StringComparison.OrdinalIgnoreCase));

        if (property == null)
            throw new ArgumentException($&quot;No property '{propertyName}' found on type '{type.FullName}'.&quot;);

        var parameter = Expression.Parameter(type, &quot;x&quot;);
        var propertyAccess = Expression.Property(parameter, property);
        var orderByExpression = Expression.Lambda(propertyAccess, parameter);

        var method = typeof(Enumerable).GetMethods()
            .First(m =&gt; m.Name == &quot;OrderBy&quot; &amp;&amp; m.GetParameters().Length == 2)
            .MakeGenericMethod(type, property.PropertyType);

        return (IOrderedEnumerable&lt;T&gt;)method.Invoke(null, new object[] { source, orderByExpression.Compile() });
    }
}
</code></pre>
<p>Then the usage is pretty simple:</p>
<pre class=""lang-cs prettyprint-override""><code>var sortedCards = cards.OrderByProperty(fieldName);
</code></pre>
","1","Answer"
"79415989","79415944","<p>To</p>
<blockquote>
<p>pull all .csv files in my working directory that don't <strong>begin</strong> with the string &quot;CONVERTED&quot;</p>
</blockquote>
<p>You can always do</p>
<pre><code>x &lt;- list.files(pattern = &quot;\\.csv$&quot;) # get all CSV files
x &lt;- x[!startsWith(x, &quot;CONVERTED&quot;)]
</code></pre>
<p>or</p>
<pre><code>x &lt;- list.files(pattern = &quot;\\.csv$&quot;)[!grepl(&quot;^CONVERTED&quot;, list.files(pattern = &quot;\\.csv$&quot;))]
</code></pre>
","1","Answer"
"79416048","79415944","<p><code>grep</code> would come in handy on this one to get the files that do not match the pattern instead of trying to get all files and then filter in more than one line. <code>invert</code> gives the opposite of the pattern. <code>value</code> gives the filenames that do not match the <code>pattern</code>.</p>
<pre><code>x &lt;- grep(list.files(pattern=&quot;\\.csv&quot;), pattern='^CONVERTED', invert=TRUE, value=TRUE)
</code></pre>
","2","Answer"
"79416162","79415944","<p>You almost have a negative lookahead there, just missing a <code>?</code>.<br />
Regex for <em>&quot;start of the string that is not followed by <code>CONVERTED</code>&quot;</em> would be <code>^(?!CONVERTED)</code>. But we'd need to switch to Perl / PCRE regex for this to work, unfortunatly not an option for <code>list.files()</code>.</p>
<p>As an alternative, there's <code>fs::dir_ls()</code> which uses <code>grep()</code> and forwards extra arguments (e.g. <code>perl = TRUE</code>):</p>
<pre class=""lang-r prettyprint-override""><code>fs::dir_tree()
#&gt; .
#&gt; ├── CONVERTEDx.csv
#&gt; └── x.csv

fs::dir_ls(regexp = &quot;^(?!CONVERTED).*\\.csv$&quot;, perl = TRUE)
#&gt; x.csv
</code></pre>
","2","Answer"
"79418146","79418036","<p>You could replace the names <em>in situ</em> like this:</p>
<pre><code>names = [&quot;Joey Tribbiani&quot;, &quot;Monica Geller&quot;, &quot;Chandler Bing&quot;, &quot;Phoebe Buffay&quot;]

for i, name in enumerate(names):
    names[i] = name.lower().replace(&quot; &quot;, &quot;_&quot;)

print(names)
</code></pre>
<p>...or... if you want a new list then:</p>
<pre><code>names = [&quot;Joey Tribbiani&quot;, &quot;Monica Geller&quot;, &quot;Chandler Bing&quot;, &quot;Phoebe Buffay&quot;]
new_names = [name.lower().replace(&quot; &quot;, &quot;_&quot;) for name in names]
print(new_names)
</code></pre>
","0","Answer"
"79418179","79418036","<p>just do:</p>
<pre><code>names = [&quot;Joey Tribbiani&quot;, &quot;Monica Geller&quot;, &quot;Chandler Bing&quot;, &quot;Phoebe Buffay&quot;]
usernames = []

for i in names: 
    usernames.append(i.replace(&quot; &quot;, &quot;_&quot;))

print(usernames)

</code></pre>
<p>your code throws error usernames.append() function appends the modified name to usernames but returns &quot;None&quot; and then, the usernames get assigned the value - &quot;None&quot; and thus causing the error!</p>
","1","Answer"
"79421745","79421678","<p>The following line of code already iterates through the merged list named <code>nightwatch</code> <code>['Sacramento', 'Portland', 'Chicago', 'New York', 'Los Angeles', 'Dallas', 'Atlanta', 'Miami']</code> (Your <code>flipOrder</code> function merges both sublists to one):</p>
<pre><code>for r in nightwatch:
...
</code></pre>
<p>Therefore, you don't need this:</p>
<pre><code>for c in r:
...
</code></pre>
<p>Since it just iterates through every single character and adds a space to it.</p>
<p>This code should work:</p>
<pre><code>cities = [[&quot;Miami&quot;, &quot;Atlanta&quot;, &quot;Dallas&quot;, &quot;Los Angeles&quot;], [&quot;New York&quot;, &quot;Chicago&quot;, &quot;Portland&quot;, &quot;Sacramento&quot;]]

def printList(nightwatch):
    for r in nightwatch:          
        print(r, end=' ')  
def flipOrder(listy):
    temp = []
    for r in range (len(listy)):
        for c in range (len(listy[r])):
            temp.insert (0, listy[r][c])
    listy = temp
    printList(listy)
    
printList(cities)
print ()
print ()
print ()
flipOrder(cities)
</code></pre>
","0","Answer"
"79421788","79421678","<p>Your <code>printList</code> function is double nested to deal with the two subLists in the <code>cities</code> List. But <code>fliporder</code> creates a single List (no-subs) so the nested loop in <code>printList</code> takes each character each time.</p>
<p>Here is a version which flips the order within each sublist then flips the sublists. It used a List comprehension for simplicity.</p>
<pre><code>cities = [[&quot;Miami&quot;, &quot;Atlanta&quot;, &quot;Dallas&quot;, &quot;Los Angeles&quot;], [&quot;New York&quot;, &quot;Chicago&quot;, &quot;Portland&quot;, &quot;Sacramento&quot;]]

def printList(nightwatch):
    for r in nightwatch:  
        for c in r:
            print(c, end=' ')  

def flipOrder(listy):
    listy = [x[::-1] for x in listy[::-1]]
    printList(listy)

    
printList(cities)
print ()
print ()
print ()
flipOrder(cities)
</code></pre>
<p>which gives:</p>
<pre><code>Miami Atlanta Dallas Los Angeles New York Chicago Portland Sacramento 


Sacramento Portland Chicago New York Los Angeles Dallas Atlanta Miami 
</code></pre>
","1","Answer"
"79422635","79422144","<p>Instead of using a lookup column, consider using a plain text column. Then customise the SharePoint list form with PowerApps. In the list, click on Integrate &gt; PowerApps &gt; Customise form.</p>
<p>PowerApps allows you to do all sorts of things to make the form more user friendly than the out of the box SharePoint list form.</p>
<p>You can add the other SharePoint list as an additional data source.</p>
<p>For the new plain text field, you can add a combo box control to the form and populate it with the values from the lookup list, which can be filtered to your needs. Overlay the text box with the combo box and hide the combo box when the form is being viewed. Store the value of the combo box in the text field.</p>
<p>This is just a rough outline of the approach. It is a bit of a learning curve, but it's worth conquering, because it is VERY powerful.</p>
","0","Answer"
"79422942","79422206","<p>If the <code>.shadow</code> is applied to the <code>List</code> as a whole then it is going to apply to all the content inside the list. This includes the section header.</p>
<p>One workaround would be to apply the shadow effect to the list rows instead. This is demonstrated in the answer to <a href=""https://stackoverflow.com/a/79247388/20386264"">How to use dual shadows on a list?</a> (it was my answer). However, this technique is a bit cumbersome.</p>
<p>A simpler workaround is to hide the native section header and show your own header as an overlay in the same space:</p>
<ul>
<li><code>.matchedGeometryEffect</code> can be used to match the position exactly. I found it works best if <code>anchor: .bottom</code> is used.</li>
<li>Alternatively, the overlay could be applied with <code>alignment: .topLeading</code> and padding used to adjust its position.</li>
<li>To mimic the styling, set the font to <code>.subheadline.smallCaps()</code>.</li>
<li>If you really want to match the styling precisely, you may need to tweak the kerning too.</li>
</ul>
<pre class=""lang-swift prettyprint-override""><code>struct MinReproduceExample: View {
    @Namespace private var ns

    var body: some View {
        List {
            Section {
                MinReproCell(text: &quot;Row one&quot;)
                MinReproCell(text: &quot;Row two&quot;)
                    .shadow(color:.red, radius: 5, x:-3, y:3)

            } header: {
                MinReproCell(text: &quot;Section Title&quot;)
                    .hidden()
                    .matchedGeometryEffect(id: &quot;title&quot;, in: ns, anchor: .bottom)
            }
        }
        .background(.clear)
        .scrollContentBackground(.hidden)
        .shadow(color:.red, radius: 5, x:-3, y:3)
        .overlay {
            MinReproCell(text: &quot;Section Title&quot;)
                .font(.subheadline.smallCaps())
                .kerning(0.2)
                .matchedGeometryEffect(
                    id: &quot;title&quot;,
                    in: ns,
                    properties: .position,
                    anchor: .bottom,
                    isSource: false
                )
        }
    }
}
</code></pre>
<p><img src=""https://i.sstatic.net/TpwZzE3J.png"" alt=""Screenshot"" /></p>
","0","Answer"
"79424203","79424131","<p>The following code, gets the result, but I'm in 7.5:</p>
<pre><code>$l=[System.Collections.Generic.List[string[]]]::new()
$l.Add(&quot;one&quot;)
$l.Add(&quot;two&quot;)
$l.Add(&quot;three&quot;)
$l
</code></pre>
","1","Answer"
"79424271","79424131","
<p>Leaving aside that the <code>$l.Add(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;)</code> call cannot work, I assume that your intent is to create a list whose elements are <em>strings</em> (<code>[string]</code>) rather than <em>arrays</em> of strings (<code>[string[]]</code>).</p>
<p>Therefore, change:<br />
<code>$l=[System.Collections.Generic.List[string[]]]::new()</code><br />
to:<br />
<code>$l=[System.Collections.Generic.List[string]::new()</code></p>
<p>To put it all together:</p>
<pre class=""lang-bash prettyprint-override""><code># Create a list whose elements are strings.
$l = [System.Collections.Generic.List[string]]::new()
# Add 3 elements; note the use of .AddRange() rather than .Add()
$l.AddRange([string[]] (&quot;one&quot;, &quot;two&quot;, &quot;three&quot;))

$l.ToString() # -&gt; 'System.Collections.Generic.List`1[System.String]'

&quot;$l&quot;           # -&gt; 'one two three'
[string] $l    # ditto
$l -join &quot;`n&quot;  # -&gt; &quot;one`ntwo`nthree&quot;
</code></pre>
<p>Note that <code>&quot;$l&quot;</code> and <code>[string] $l</code> do respect the value of the <a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_Preference_Variables#ofs"" rel=""nofollow noreferrer""><code>$OFS</code> preference variable</a>, if defined; in the latter's absence, a <em>single space</em> is used.</p>
","3","Answer"
"79424388","79424318","<p>Please remove the semicolon at the end of the if statement  which is causing the issue.</p>
<p>wrong code   :</p>
<pre><code>if (städer[j].Temp &gt; städer[j + 1].Temp);
                                        ^
                                        |
                                        |
</code></pre>
<p>Correct code :</p>
<pre><code>if (städer[j].Temp &gt; städer[j + 1].Temp)
</code></pre>
<p>It would work as you expected.</p>
","2","Answer"
"79425941","79425937","<p>The line <code>fv = fv[:v]</code> will create a new variable named <code>fv</code> instead of mutating <code>fv</code>. You should mutate the existing list.</p>
<p>One solution could be using <code>while</code> to strip unwanted values until none left. The <a href=""https://docs.python.org/3/tutorial/datastructures.html#more-on-lists"" rel=""nofollow noreferrer""><code>.pop()</code> method</a> will mutate <code>row</code> instead of returning a new list:</p>
<pre class=""lang-py prettyprint-override""><code>for row in foo:
    while row and row[-1] is None:
        row.pop()

assert foo == desired
</code></pre>
","3","Answer"
"79425981","79425895","<p>itertools.permutations() does what I'm looking for, I just need to pad the list with blanks if it has fewer than N values and specify N as the max permutation length. Thanks to John and Copperfield for pointing me in the right direction.</p>
<pre><code>import itertools

def BinObjects(objects, binCount):
    objectsPadded = objects[:]  # Make a copy so we don't modify the original list
    if len(objects) &lt; binCount:
        objectsPadded.extend([&quot;_&quot;] * (binCount - len(objects)))
    permutations = itertools.permutations(objectsPadded, binCount)
    print(list(permutations))

BinObjects([&quot;A&quot;, &quot;B&quot;], 3)
BinObjects([&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;], 3)


Output:
[('A', 'B', '_'), ('A', '_', 'B'), ('B', 'A', '_'), ('B', '_', 'A'), ('_', 'A', 'B'), ('_', 'B', 'A')]
[('A', 'B', 'C'), ('A', 'B', 'D'), ('A', 'C', 'B'), ('A', 'C', 'D'), ('A', 'D', 'B'), ('A', 'D', 'C'),
 ('B', 'A', 'C'), ('B', 'A', 'D'), ('B', 'C', 'A'), ('B', 'C', 'D'), ('B', 'D', 'A'), ('B', 'D', 'C'),
 ('C', 'A', 'B'), ('C', 'A', 'D'), ('C', 'B', 'A'), ('C', 'B', 'D'), ('C', 'D', 'A'), ('C', 'D', 'B'),
 ('D', 'A', 'B'), ('D', 'A', 'C'), ('D', 'B', 'A'), ('D', 'B', 'C'), ('D', 'C', 'A'), ('D', 'C', 'B')]
</code></pre>
","-2","Answer"
"79426044","79425937","<p>You can go from the end of the list and remove a range of elements starting from the first non-zero element. If you have a lot of None elements (average more then 50), this approach faster, then @Selcuk answer</p>
<pre class=""lang-py prettyprint-override""><code>for row in foo:
    last_null_index = 0
    for index, element in enumerate((reversed(row))):
        if element is not None:
            last_null_index = index
            break
    
    # for case when all of elements is not None
    if last_null_index == 0:
        continue

    row[-last_null_index:] = []

assert foo == desired
</code></pre>
","0","Answer"
"79434868","79434860","<p>Your <code>list</code> is an empty list, so any indexing will fail since there are no elements.</p>
<p>You could initialize the list first with the proper dimensions and then use an iterator to move through the numbers:</p>
<pre class=""lang-py prettyprint-override""><code>from pprint import pprint

numbers = '084030001560014000001586704420001070005309802900200043100078005006105407000490000'

# list comprehension creates 9 lists of 9 zeroes.
list1 = [[0] * 9 for _ in range(9)]
n = iter(numbers)  # calling next() on an iterator gives the next value
for i in range(9):
    for j in range(9):
        list1[i][j] = int(next(n))  # get the value and convert to integer

pprint(list1)
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>[[0, 8, 4, 0, 3, 0, 0, 0, 1],
 [5, 6, 0, 0, 1, 4, 0, 0, 0],
 [0, 0, 1, 5, 8, 6, 7, 0, 4],
 [4, 2, 0, 0, 0, 1, 0, 7, 0],
 [0, 0, 5, 3, 0, 9, 8, 0, 2],
 [9, 0, 0, 2, 0, 0, 0, 4, 3],
 [1, 0, 0, 0, 7, 8, 0, 0, 5],
 [0, 0, 6, 1, 0, 5, 4, 0, 7],
 [0, 0, 0, 4, 9, 0, 0, 0, 0]]
</code></pre>
<p>Or you could use numpy to reshape the array after loading it as a 1D list:</p>
<pre class=""lang-py prettyprint-override""><code>import numpy as np

numbers = '084030001560014000001586704420001070005309802900200043100078005006105407000490000'
grid = np.array(list(numbers), dtype=np.int8).reshape((9, 9))
print(grid)
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>[[0 8 4 0 3 0 0 0 1]
 [5 6 0 0 1 4 0 0 0]
 [0 0 1 5 8 6 7 0 4]
 [4 2 0 0 0 1 0 7 0]
 [0 0 5 3 0 9 8 0 2]
 [9 0 0 2 0 0 0 4 3]
 [1 0 0 0 7 8 0 0 5]
 [0 0 6 1 0 5 4 0 7]
 [0 0 0 4 9 0 0 0 0]]
</code></pre>
","2","Answer"
"79434880","79434860","<p>It can be done with a single nested comprehension</p>
<pre class=""lang-py prettyprint-override""><code>numbers = '084030001560014000001586704420001070005309802900200043100078005006105407000490000'
dim = 9
n2 = [ [int(nx[d]) for d in range(dim)] for nx in [numbers[i:i + dim] for i in range(0, len(numbers), dim)]]

# looks better but inner array dimension is not explicit
# n2 = [ [int(x) for x in nx] for nx in [numbers[i:i + 9] for i in range(0,len(numbers),9)]]

for i,l in enumerate(n2):
    print(i, len(l),l)
</code></pre>
<p>Result</p>
<pre class=""lang-none prettyprint-override""><code>0 9 [0, 8, 4, 0, 3, 0, 0, 0, 1]
1 9 [5, 6, 0, 0, 1, 4, 0, 0, 0]
2 9 [0, 0, 1, 5, 8, 6, 7, 0, 4]
3 9 [4, 2, 0, 0, 0, 1, 0, 7, 0]
4 9 [0, 0, 5, 3, 0, 9, 8, 0, 2]
5 9 [9, 0, 0, 2, 0, 0, 0, 4, 3]
6 9 [1, 0, 0, 0, 7, 8, 0, 0, 5]
7 9 [0, 0, 6, 1, 0, 5, 4, 0, 7]
8 9 [0, 0, 0, 4, 9, 0, 0, 0, 0]

</code></pre>
<p>To verify the first comprehension:</p>
<p><code>''.join([numbers[i:i + 9] for i in range(0,len(numbers),9)]) == numbers</code></p>
<p>Returns <code>True</code></p>
","1","Answer"
"79434906","79434860","<p>Since Python 3.12 you can use <a href=""https://docs.python.org/3/library/itertools.html#itertools.batched"" rel=""nofollow noreferrer""><code>itertools.batched</code></a> to iterate over a sequence in chunks of a specified size:</p>
<pre><code>from itertools import batched

list(map(list, batched(numbers, 9)))
</code></pre>
<p>This returns:</p>
<pre><code>[['0', '8', '4', '0', '3', '0', '0', '0', '1'],
 ['5', '6', '0', '0', '1', '4', '0', '0', '0'],
 ['0', '0', '1', '5', '8', '6', '7', '0', '4'],
 ['4', '2', '0', '0', '0', '1', '0', '7', '0'],
 ['0', '0', '5', '3', '0', '9', '8', '0', '2'],
 ['9', '0', '0', '2', '0', '0', '0', '4', '3'],
 ['1', '0', '0', '0', '7', '8', '0', '0', '5'],
 ['0', '0', '6', '1', '0', '5', '4', '0', '7'],
 ['0', '0', '0', '4', '9', '0', '0', '0', '0']]
</code></pre>
<p>Demo <a href=""https://ato.pxeger.com/run?1=NU8xDoMwDNx5RTaoRKUDAiRDHwMtiEiERMEMfUsXlvYjfUV_0xDAw-l8tnW-18c-aTDTur4X6q_i9-2d0UxR58iYcWZKW-OItQ3dh-4Rham1Tk10jvYuiqZFt52b2Y3FEBwFgKysPHAgcFHV4DzfOGqPZQEpkEtg03iReayF14EqQ8nDEpfbcRztLsmoZkp0YwNJz7eSwztl8uJrj3IkOpP9AQ"" rel=""nofollow noreferrer"">here</a></p>
<p>Prior to Python 3.12 you can use the <a href=""https://docs.python.org/3.11/library/itertools.html#itertools-recipes"" rel=""nofollow noreferrer""><code>batched</code></a> recipe in the <code>itertools</code> documentation.</p>
<p>Alternatively, you can sequentially fetch values from an iterator over the given string of characters with a nested list comprehension:</p>
<pre><code>seq = iter(numbers)
[[next(seq) for _ in range(9)] for _ in range(9)]
</code></pre>
<p>Demo <a href=""https://ato.pxeger.com/run?1=bU87DsIwFNtzimwkA5Lbpm0ycJIKIZBSyNAkpKkEZ2HpAkfhDtyG9MPGYvlZ9rP8ePl7vDg7js8htlv5ebfBddT7YGykpvMuxPUixA7dSYee7ugGUqAAkJVVAgHMXFY1hMgnjjphWUBJ5AqYNFFkCWuZdKDKUIrZJNQU3pBeX9NnE3VgaxEnSzNrGqtvkSUHp60L9ECNpeFoz5opvv8j8WXNOuo37gs"" rel=""nofollow noreferrer"">here</a></p>
<p>Since a string is indexable, you can also use a nested list comprehension to output the character at each index:</p>
<pre><code>[[numbers[j] for j in range(i, i + 9)] for i in range(0, 81, 9)]
</code></pre>
<p>Demo <a href=""https://ato.pxeger.com/run?1=RU9BDoIwELzzir0BEZMpFGgPvoR40AS0JLSkloNv8cJF_-Ez_I0tYLxMZmdmM5nHa7y7q9Hz_Jxctxefd2fNQONolXakhtFYt11RpKfh3NobHSiG4CgAsLLywIGFi6oG53ngqD2WBaRALoGg8YJ5rIXXgYqh5EuIy_AcR2tL0jRbTdMfqTOWelKa7Elf2kRlpGhHMl0d9XeQkWBZcNJ1yLbnt-sL"" rel=""nofollow noreferrer"">here</a></p>
","3","Answer"
"79434938","79434860","<p>If you are okay using a numpy array:</p>
<pre><code>np.array(list(numbers)).reshape(-1, 9)
</code></pre>
<p>gives you</p>
<pre><code>array([['0', '8', '4', '0', '3', '0', '0', '0', '1'],
       ['5', '6', '0', '0', '1', '4', '0', '0', '0'],
       ['0', '0', '1', '5', '8', '6', '7', '0', '4'],
       ['4', '2', '0', '0', '0', '1', '0', '7', '0'],
       ['0', '0', '5', '3', '0', '9', '8', '0', '2'],
       ['9', '0', '0', '2', '0', '0', '0', '4', '3'],
       ['1', '0', '0', '0', '7', '8', '0', '0', '5'],
       ['0', '0', '6', '1', '0', '5', '4', '0', '7'],
       ['0', '0', '0', '4', '9', '0', '0', '0', '0']], dtype='&lt;U1')
</code></pre>
<p>here <code>-1, 9</code> indicates that you want 9 entries per column, and then just whatever number of rows is needed to achieve that based on how long <code>numbers</code> is. <code>list(numbers)</code> converts the string to a list of characters.</p>
","2","Answer"
"79435887","79435823","<p>Replacing one element with two will change the length of that array (will mess up the indexing) so you can't do it with np.select, so, I recommend making a dict with the numbers you want to change as keys. in the example you provided it will be <code>replacement = {4: [2, 2], 6: [2, 3]}</code>
and then iterate over the list and change the numbers with that list in the dict, you will have a list of lists <code>[1, 2, 3, [2, 2], 5, [2, 3]]</code> so then you can flatten this list by using <code>np.concatenate</code></p>
<p>so the final result will be:</p>
<pre class=""lang-py prettyprint-override""><code>arr = np.array([1, 2, 3, 4, 5, 6])
replacement = {4: [2, 2], 6: [2, 3]}
result = np.concatenate([replacement.get(x, [x]) for x in arr])
</code></pre>
<p>it will output <code>[1 2 3 2 2 5 2 3]</code></p>
","2","Answer"
"79435890","79435823","<p>Using a numpy module, <code>if-else</code> will be beneficial for outputting a new array using concatenate: <a href=""https://numpy.org/doc/stable/reference/generated/numpy.concatenate.html"" rel=""nofollow noreferrer"">concatenate doc</a></p>
<pre><code>for element in original_array:
    if element == 4:
        expanded_list.append(np.array([2, 2])) 
    elif element == 6:
        expanded_list.append(np.array([2, 3])) 
    else:
        expanded_list.append(np.array([element]))

new_array = np.concatenate(expanded_list)
</code></pre>
","2","Answer"
"79435892","79435823","<p>There is no straightforward way to achieve this in pure numpy.</p>
<p>Assuming the replacements are always of the same size you could identify the positions of the replacements, extend the array with <code>repeat</code> and assign the new values with a mask:</p>
<pre><code>a = np.array([1, 2, 3, 4, 5, 6, 7, 6, 8, 4])

d = {4: [20, 20], 6: [21, 31]}
m = np.isin(a, list(d))
# array([False, False, False,  True, False,  True, False,  True, False,  True])

uniq, idx = np.unique(a[m], return_inverse=True)
# array([4, 6]), array([0, 1, 1, 0])

rep = np.ones_like(a)
rep[m] = 2
# array([1, 1, 1, 2, 1, 2, 1, 2, 1, 2])

vals = np.array([d[x] for x in uniq])[idx].ravel()
# array([20, 20, 21, 31, 21, 31, 20, 20])

out = np.repeat(a, rep)
out[np.repeat(m, rep)] = vals
</code></pre>
<p><em>NB. you could generalize this approach to handle a different number of replacement values per original value, but this would become a bit more complex, and probably no longer efficient.</em></p>
<p>Output (slightly different example):</p>
<pre><code>array([ 1,  2,  3, 20, 20,  5, 21, 31,  7, 21, 31,  8, 20, 20])
</code></pre>
<p>For a pure python approach, which is easier to understand and can handle an arbitrary number of items as replacement (but potentially slower):</p>
<pre><code>from itertools import chain

a = np.array([1, 2, 3, 4, 5, 6, 7, 6, 8, 4])

d = {4: [20, 20], 6: [21, 31]}

out = out = np.fromiter(chain.from_iterable(d.get(x, (x,)) for x in a),
                        dtype=a.dtype)
</code></pre>
","2","Answer"
"79435923","79435823","<p>If you don't mind the efficiency issue, you can play the trick <code>//</code> within list comprehension like below</p>
<pre><code>import itertools
x = [1, 2, 3, 4, 5, 6]
list(itertools.chain(*[[2, v//2] if v in [4,6] else [v] for v in x]))
</code></pre>
<p>which gives</p>
<pre><code>[1, 2, 3, 2, 2, 5, 2, 3]
</code></pre>
","0","Answer"
"79436112","79435823","<p>While all the answers work the problem you are having seems to prime decomposition.
So ideally to make this more general you have some function that extracts prime factors.</p>
<p>One example could be:</p>
<pre><code>import numpy as np

def prime_factors(n):
    if n == 0 or n == 1:
        return [n]

    factors = []
    while n % 2 == 0:  # Factor out 2s
        factors.append(2)
    n //= 2

    for i in range(3, int(np.sqrt(n)) + 1, 2): # Factor out odd numbers from 3 onwards
        while n % i == 0:
            factors.append(i)
            n //= i

    if n &gt; 2: # If it is a prime
        factors.append(n)
    return factors
</code></pre>
<p>This is by no means optimized but could be a nice starting point. If efficiency is a concern maybe <a href=""https://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n/3035188#3035188"">prime sieves</a> help.</p>
<p>Then the result of a list ranging from [1,6] would be:</p>
<pre><code>print(np.array(sum([prime_factors(n) for n in range(1,7)],[]))  # [1 2 3 2 2 5 2 3]
</code></pre>
","0","Answer"
"79436120","79435823","<p>Another approach is to leverage <code>numba</code>:</p>
<pre><code>import numpy as np
import numba as nb
from numba import types
from numba.typed import Dict

a = np.array([1, 2, 3, 4, 5, 6], dtype=np.int64)

# Create a numba-typed dictionary
d_typed = Dict.empty(
    key_type=types.int64,
    value_type=types.Array(types.int64, 1, 'C')
)

d_typed[4] = np.array([2, 2], dtype=np.int64)
d_typed[6] = np.array([2, 3], dtype=np.int64)

@nb.njit()
def replace_nums(b, d):
    x = []
    for i in range(len(b)):
        key = b[i]
        if key in d:
            x.append(d[key])
        else:
            x.append(np.array([key], dtype=np.int64)) 
    return x


np.concatenate(replace_nums(a, d_typed))
</code></pre>
<p>The steps are:</p>
<ul>
<li><p>It initializes a numba-typed dictionary <code>d_typed</code> with integer keys and values that are arrays of integers.</p>
</li>
<li><p>The dictionary <code>d_typed</code> is populated with arrays for specific keys.</p>
</li>
<li><p>A function <code>replace_nums</code> is defined using the <code>njit</code> decorator from Numba for just-in-time compilation.</p>
</li>
<li><p>The function iterates through each element in <code>b</code>, checking if the element exists as a key in <code>d</code>. If it does, the corresponding array from <code>d</code> is appended to the list <code>x</code>; otherwise, a new array containing the element is appended.</p>
</li>
<li><p>Finally, the function returns the list <code>x</code>, and <a href=""https://numpy.org/doc/stable/reference/generated/numpy.concatenate.html"" rel=""nofollow noreferrer""><code>np.concatenate</code></a> is used to flatten the list of arrays into a single array.</p>
</li>
</ul>
<p><em>NB: Preallocating the final array leads to an extra performance improvement, although the above code is already fast.</em></p>
<p>Output:</p>
<pre><code>array([1, 2, 3, 2, 2, 5, 2, 3])
</code></pre>
","0","Answer"
"79436170","79436099","<p>A more generic way to do this specifically:</p>
<pre><code>data = [
    [
        {
            k: v for k, v in d.items() if isinstance(v, (int, float))
        } for d in ds
    ] for ds in res
]
</code></pre>
<p>If you want something even more generic, where you can just give it a compound data structure of lists and dictionaries and you want to only retain values in dictionaries that match:</p>
<pre><code>from typing import TypeVar

T = TypeVar('T')
def only_numeric(x: T) -&gt; T:
    if isinstance(x, list):
        return [only_numeric(v) for v in x]
    elif isinstance(x, dict):
        return {k: v for k, v in x.items() if isinstance(v, (int, float))}
    else:
        return x

data = only_numeric(res)
print(data)
</code></pre>
<p>Note that you can go even further. For example, this solution doesn't account for nested dictionaries, which you recursively process (it only processes dictionaries in lists), and it doesn't do anything with other non-list, non-dict values in a list, where you may want to filter those as well.</p>
<p>Edit: I'm noticing that you wanted to flatten the list, which would change the first solution to:</p>
<pre><code>data = [
    {
        k: v for k, v in d.items() if isinstance(v, (int, float))
    } 
    for ds in res
    for d in ds
]
</code></pre>
<p>And the second to something like:</p>
<pre><code>from typing import TypeVar, Generator

T = TypeVar('T')
def only_numeric_dict(x: T) -&gt; Generator[T, None, None]:
    if isinstance(x, list):
        for y in x:
            yield from only_numeric_dict(y)
    elif isinstance(x, dict):
        yield {k: v for k, v in x.items() if isinstance(v, (int, float))}
    else:
        pass

data = list(only_numeric_dict(res))
</code></pre>
","0","Answer"
"79436214","79436099","<p>You could do recursion to resolve the dicts. One way would be:</p>
<pre><code>def clean_dict(target_dict: dict) -&gt; dict:
    for key, value in target_dict.items():
       if isinstance(value, dict):
           target_dict[key] = clean_dict(value)
       elif not isinstance(value, int) or not isinstance(value, float):
           target_dict.pop(key)
    return target_dict
</code></pre>
<p>This could be extended to filter for any type of dtypes in the conditions as follows:</p>
<pre><code>not any(isinstance(value, dtype) for dtype in [int, float, set, ...])
</code></pre>
<p>Then the only thing you have to still decide about is the list of lists, whether this can be represented differently or if it should be included in the recursion.</p>
","0","Answer"
"79436470","79435823","<p>There are easy ways to do this with list comprehension:</p>
<pre><code>def replace_vals(list_to_use, replacements):
    return [element for x in list_to_use for element in (replacements[x] if x in replacements else [x])]

# example
list_to_use = [1, 2, 3, 4, 5, 6]
replacements = {4: [2, 2], 6: [2, 3]}

result = replace_vals(list_to_use, replacements)
print(result)  # [1, 2, 3, 2, 2, 5, 2, 3]
</code></pre>
<p>With this idea you can extend your <code>replacements</code> dict however you need to update your needs.</p>
","0","Answer"
"79437548","79435823","<p>Here's a way using only numpy functions, and no explicit iteration.  However functions like <code>delete</code> and <code>insert</code> make new arrays of the right size, and copy values to the respective slots.  So I doubt if it has any speed advantage over the more python list like answers.</p>
<pre><code>In [237]: x = np.array([1,2,3,4,5,6])
</code></pre>
<p>Find the elements that need to be replaced:</p>
<pre><code>In [238]: mask = np.nonzero((x[:,None]==[4,6]).any(axis=1))[0]; mask
Out[238]: array([3, 5], dtype=int64)
</code></pre>
<p>Delete those elements, and modify the mask to account for that change:</p>
<pre><code>In [239]: mask1=mask-np.arange(len(mask)); mask1
Out[239]: array([3, 4], dtype=int64)

In [240]: x1=np.delete(x,mask);x1
Out[240]: array([1, 2, 3, 5])
</code></pre>
<p>Now we can use <code>insert</code>:</p>
<pre><code>In [241]: np.insert(x1,mask1.repeat(2), [2,2,2,3])
Out[241]: array([1, 2, 3, 2, 2, 5, 2, 3])
</code></pre>
<p>For now I'm assuming one value is replaced by 2.  If we want to replace the <code>6</code> with <code>[1,2,3]</code>, we could use:</p>
<pre><code>In [243]: np.insert(x1,mask1.repeat([2,3]), [2,2,1,2,3])
Out[243]: array([1, 2, 3, 2, 2, 5, 1, 2, 3])
</code></pre>
","0","Answer"
"79438123","79438104","<p>You can use a list comprehension that outputs a new dict for each key-value pair:</p>
<pre><code>[{key: value} for key, value in zip(outer_list, animal_list)]
</code></pre>
<p>Demo: <a href=""https://ideone.com/IDUJL8"" rel=""nofollow noreferrer"">https://ideone.com/IDUJL8</a></p>
<p>Also, if it is truly guaranteed that <code>outer_list</code> always contains the same value throughout, you can simply extract the first item as a fixed key instead:</p>
<pre><code>key = outer_list[0]
[{key: animal} for animal in animal_list]
</code></pre>
","4","Answer"
"79438136","79438104","<p>Wrapping each pair so we can apply <code>dict</code> to each:</p>
<pre class=""lang-py prettyprint-override""><code>attempt_list = list(map(dict,zip(zip(outer_list,animal_list))))
</code></pre>
<p><a href=""https://ato.pxeger.com/run?1=m72soLIkIz9vwc17iXmZuYk58TmZxSUKtgrR1eoQAXUrBfWU_HR1HQX15Pyc_CIQPyknMTlbvVaHSwFZVXJiCaqqovzyPPXaWK780pLUIrjB6gWpYHUgKpaLKyW1OLMoNQUkw1UNFrQiwupaHQVsqnE4oZYrdmlpSZquxU37xJKS1NyCEphrQJRGbmKBRkpmcolOVWaBBggjHKyDFCqaQAAxZl9BUWZeiQaqWbYKUK9AFS1YAKEB"" rel=""nofollow noreferrer"">Attempt This Online!</a></p>
<p>(But I just did this because you tried <code>dict(zip</code> and as a fun little challenge. I prefer @blhsing's list comp.)</p>
","3","Answer"
"79439183","79439151","<p>The issue arises because you're likely setting the value of your DropdownButtonFormField to a value that isn't present in the items list you provide.  When you change the first dropdown (Gol), you correctly clear the vehicle list, but you're not resetting the vehicleValue.  This means the second dropdown tries to render with a vehicleValue that no longer exists in the newly populated vehicle list, causing the error.</p>
<pre class=""lang-dart prettyprint-override""><code>
class Data {
  static const List gol = [
    {'value': 'Car', 'label': 'Car'},
    {'value': 'Bus', 'label': 'Bus'},
    {'value': 'Plane', 'label': 'Plane'}
  ];
  static String? golValue;
  static String? vehicleValue;
  static List? vehicle;

  static List cekgol() {
    if (golValue == 'Car') {
      return [
        {'value': 'car1', 'label': 'car1'},
        {'value': 'car2', 'label': 'car2'},
        {'value': 'car3', 'label': 'car3'},
        {'value': 'car4', 'label': 'car4'},
        {'value': 'car5', 'label': 'car5'}
      ];
    } else if (golValue == 'Bus') {
      return [
        {'value': 'Bus1', 'label': 'Bus1'},
        {'value': 'Bus2', 'label': 'Bus2'},
        {'value': 'Bus3', 'label': 'Bus3'},
        {'value': 'Bus4', 'label': 'Bus4'}
      ];
    } else if (golValue == 'Plane') {
      return [
        {'value': 'Plane1', 'label': 'Plane1'},
        {'value': 'Plane2', 'label': 'Plane2'},
        {'value': 'Plane3', 'label': 'Plane3'},
        {'value': 'Plane4', 'label': 'Plane4'},
        {'value': 'Plane5', 'label': 'Plane5'}
      ];
    } else {
      return [];
    }
  }
}

class HitungPkt extends StatefulWidget {
  const HitungPkt({super.key});

  @override
  State&lt;HitungPkt&gt; createState() =&gt; _HitungPktState();
}

class _HitungPktState extends State&lt;HitungPkt&gt; {
  @override
  Widget build(BuildContext context) {
    return Form(
      child: Column(
        children: [
          _buildDropdown(
            label: 'Gol',
            items: Data.gol.cast&lt;Map&lt;String, dynamic&gt;&gt;(),
            onChanged: (String? newValue) {
              setState(() {
                Data.golValue = newValue;
                Data.vehicle?.clear();
                Data.vehicle = Data.cekgol();
                Data.vehicleValue = null; // Reset vehicleValue here!
              });
            },
          ),
          if (Data.vehicle != null)
            _buildDropdown(
              label: 'Vechile',
              items: Data.vehicle!.cast&lt;Map&lt;String, dynamic&gt;&gt;(),
              onChanged: (String? newValue) {
                setState(() {
                  Data.vehicleValue = newValue;
                });
              },
            ),
        ],
      ),
    );
  }

  Widget _buildDropdown({
    required String label,
    required List&lt;Map&lt;String, dynamic&gt;&gt; items,
    required void Function(String?) onChanged,
  }) {
    return DropdownButtonFormField&lt;String&gt;(
      decoration: InputDecoration(
        labelText: label,
        hintStyle: const TextStyle(color: Colors.blue),
        border: OutlineInputBorder(
          borderRadius: BorderRadius.circular(10),
          borderSide: const BorderSide(color: Colors.blue),
        ),
        focusedBorder: OutlineInputBorder(
          borderSide: const BorderSide(color: Colors.blue),
          borderRadius: BorderRadius.circular(10),
        ),
        enabledBorder: OutlineInputBorder(
          borderSide: const BorderSide(color: Colors.blue),
          borderRadius: BorderRadius.circular(10),
        ),
        errorBorder: OutlineInputBorder(
          borderSide: const BorderSide(color: Colors.blue),
          borderRadius: BorderRadius.circular(10),
        ),
      ),
      value: (label == &quot;Gol&quot;)
          ? Data.golValue
          : Data.vehicleValue, // Use ternary for value
      items: items.map((item) {
        return DropdownMenuItem&lt;String&gt;(
          value: item['value'] as String,
          child: Text(item['label'] as String),
        );
      }).toList(),
      onChanged: onChanged,
    );
  }
}
</code></pre>
","-1","Answer"
"79440761","79440728","<p>Assuming your data are both <em>vectors</em>, as implied in the question:</p>
<pre class=""lang-r prettyprint-override""><code>lst &lt;- 1:9
items &lt;- c(3, 6, 9)
</code></pre>
<p>Then you can achieve your desired result using <code>split</code>.</p>
<pre class=""lang-r prettyprint-override""><code>split(lst[seq(max(items))], rep(items, c(items[1], diff(items))))
#&gt; $`3`
#&gt; [1] 1 2 3
#&gt; 
#&gt; $`6`
#&gt; [1] 4 5 6
#&gt; 
#&gt; $`9`
#&gt; [1] 7 8 9
</code></pre>
<p>And to show this generalizes, let's use letters in our vector with some different indices:</p>
<pre class=""lang-r prettyprint-override""><code>lst &lt;- letters
items &lt;- c(8, 12, 24)

split(lst[seq(max(items))], rep(items, c(items[1], diff(items))))
#&gt; $`8`
#&gt; [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot;
#&gt; 
#&gt; $`12`
#&gt; [1] &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot;
#&gt; 
#&gt; $`24`
#&gt;  [1] &quot;m&quot; &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot;
</code></pre>
<p><sup>Created on 2025-02-14 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.0</a></sup></p>
","3","Answer"
"79440818","79440728","<p><strong>1)</strong> Let <code>ok</code> be a logical vector the same length as <code>x</code> indicating whether the corresponding element of <code>x</code> is in <code>y</code>.  Then <code>cumsum(ok)-ok+1</code> will provide the corresponding indexes of <code>y</code> so index into <code>y</code> and <code>split</code>.</p>
<p><code>x</code> is sorted in the question but this code does impose that restriction.  The elements in <code>y</code> should appear in the same order that they appear in <code>x</code>.  Also each element of <code>y</code> should appear at most once in <code>x</code>; otherwise, it does not make sense to call <code>y</code> a &quot;key&quot;.  See (2) later on to relax that.</p>
<p>This also works for <code>x</code> and <code>y</code> being character vectors.</p>
<pre><code>x &lt;- 1:9
y &lt;- c(3, 6, 9)

ok &lt;- x %in% y
split(x, y[ cumsum(ok) - ok + 1 ] )
</code></pre>
<p>giving</p>
<pre><code>$`3`
[1] 1 2 3

$`6`
[1] 4 5 6

$`9`
[1] 7 8 9
</code></pre>
<p><strong>2)</strong> If the delimiters in <code>y</code> can be repeated in <code>x</code> then <code>y</code> is no longer a &quot;key&quot; vector as described in the poster's comments below the question but if we are interested in that situation anyways then replacing <code>y[...]</code> with just <code>...</code> will handle that. In this scenario it no longer makes sense to use <code>y</code> as the output names so we use &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, ... instead.  This one also works even if <code>x</code> does not end in an element of <code>y</code> in which case the portion after the last separator in <code>x</code> is included as an element in the output.</p>
<pre><code>x &lt;- c(&quot;z&quot;, &quot;b&quot;, &quot;a&quot;, &quot;q&quot;, &quot;f&quot;, &quot;r&quot;, &quot;a&quot;, &quot;s&quot;, &quot;a&quot;, &quot;a&quot;)
y &lt;- &quot;a&quot;

ok &lt;- x %in% y
split(x, cumsum(ok) - ok + 1 )
</code></pre>
<p>giving</p>
<pre><code>$`1`
[1] &quot;z&quot; &quot;b&quot; &quot;a&quot;

$`2`
[1] &quot;q&quot; &quot;f&quot; &quot;r&quot; &quot;a&quot;

$`3`
[1] &quot;s&quot; &quot;a&quot;

$`4`
[1] &quot;a&quot;
</code></pre>
","3","Answer"
"79440855","79440747","<p>I looked it as a recursion problem. Used dictionary where keys are your fixed elements and indexes (paths) are in the tuples. Used those data structures because they are hashtables, in general good big-O</p>
<p>P.S. For your PROD code never test like me above, write asserts</p>
<pre><code>def recursive_scan(data, fixed_elements, path=()):
    positions = {key: [] for key in fixed_elements}

    if isinstance(data, list):
        for index, element in enumerate(data):
            new_path = path + (index,)

            if element in fixed_elements:
                positions[element].append(new_path)
            elif isinstance(element, list):
                sub_positions = recursive_scan(element, fixed_elements, new_path)
                for key in sub_positions:
                    positions[key].extend(sub_positions[key])

    return positions


def check_structure_match(model_structure, test_structure):
    for key in model_structure:
        model_positions = set(model_structure[key])
        test_positions = set(test_structure[key])

        # Check if all model positions exist in the test (extra occurrences are ignored)
        if not model_positions.issubset(test_positions):
            return False
    return True


MODEL = [[&quot;h&quot;, &quot;P12&quot;, &quot;P13&quot;], [&quot;P12&quot;, &quot;P23&quot;, &quot;eL&quot;], [&quot;P13&quot;, &quot;P23&quot;, &quot;eR&quot;]]
FIXED_ELEMENTS = [&quot;h&quot;, &quot;eL&quot;, &quot;eR&quot;]
model_structure = recursive_scan(MODEL, FIXED_ELEMENTS)

test_cases = {
    &quot;test_list_2&quot;: [[&quot;h&quot;, &quot;h&quot;, &quot;Y&quot;], [&quot;h&quot;, &quot;Z&quot;, &quot;eL&quot;], [&quot;Y&quot;, &quot;Z&quot;, &quot;eR&quot;]],
    &quot;test_list_3&quot;: [[&quot;h&quot;, &quot;X&quot;, &quot;eL&quot;], [&quot;X&quot;, &quot;Z&quot;, &quot;eL&quot;], [&quot;eL&quot;, &quot;Z&quot;, &quot;eR&quot;]],
    &quot;test_list_4&quot;: [[&quot;h&quot;, &quot;P1&quot;, &quot;eL&quot;], [&quot;P1&quot;, &quot;P3&quot;, &quot;P2&quot;], [&quot;P2&quot;, &quot;P3&quot;, &quot;eR&quot;]],
}

for test_name, test_list in test_cases.items():
    test_structure = recursive_scan(test_list, FIXED_ELEMENTS)
    print(f&quot;{test_name}: {check_structure_match(model_structure, test_structure)}&quot;)
</code></pre>
","-1","Answer"
"79441182","79440728","<p>You can try <code>findInterval()</code>. Add <code>+ 1</code> to the desired breaks, bc it excludes right boundary.</p>
<pre><code>&gt; split(1:9, findInterval(1:9, c(3, 6, 9) + 1))
$`0`
[1] 1 2 3

$`1`
[1] 4 5 6

$`2`
[1] 7 8 9

&gt; breaks &lt;- c(3, 6, 9)
&gt; split(1:9, findInterval(1:9, c(3, 6, 9) + 1)) |&gt; setNames(breaks)
$`3`
[1] 1 2 3

$`6`
[1] 4 5 6

$`9`
[1] 7 8 9

&gt; split(letters, findInterval(seq_along(letters), c(7, 14, 21) + 1))
$`0`
[1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot;

$`1`
[1] &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot; &quot;n&quot;

$`2`
[1] &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot;

$`3`
[1] &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot;
</code></pre>
","2","Answer"
"79442271","79440747","<p>I used sets to check for membership (and only allowed the members <code>P12, P13 and P23</code> to be considered to match.</p>
<pre><code>test_list_1 = [
    [&quot;h&quot;, &quot;a2&quot;, &quot;a3&quot;],
    [&quot;a2&quot;, &quot;a4&quot;, &quot;eL&quot;],
    [&quot;a3&quot;, &quot;a4&quot;, &quot;eR&quot;]
]

test_list_2 = [
[&quot;h&quot;, &quot;h&quot;, &quot;Y&quot;],
[&quot;h&quot;, &quot;Z&quot;, &quot;eL&quot;],
[&quot;Y&quot;, &quot;Z&quot;, &quot;eR&quot;]
]

test_list_3 = [
[&quot;h&quot;, &quot;X&quot;, &quot;eL&quot;],
[&quot;X&quot;, &quot;Z&quot;, &quot;eL&quot;],
[&quot;eL&quot;, &quot;Z&quot;, &quot;eR&quot;]
]
    
test_list_4 = [
[&quot;h&quot;, &quot;P1&quot;, &quot;eL&quot;],
[&quot;P1&quot;, &quot;P3&quot;, &quot;P2&quot;], # ❌ there is no list containing &quot;eL&quot;
[&quot;P2&quot;, &quot;P3&quot;, &quot;eR&quot;]
]

test_list_5 = [[&quot;h&quot;, &quot;h&quot;, &quot;Y&quot;], [&quot;h&quot;, &quot;Z&quot;, &quot;eL&quot;], [&quot;k&quot;, &quot;Z&quot;, &quot;eR&quot;]]
    

model = [
    [&quot;h&quot;, &quot;P12&quot;, &quot;P13&quot;],
    [&quot;P12&quot;, &quot;P23&quot;, &quot;eL&quot;],
    [&quot;P13&quot;, &quot;P23&quot;, &quot;eR&quot;]
]

def validate(test_list, model):
    fixed_vals = [&quot;h&quot;, &quot;eL&quot;, &quot;eR&quot;]

    for value, model_array, test_array in zip(fixed_vals, model, test_list):
        idx = model_array.index(value)
        if value != test_array[idx]:
            return False
        
    sets = []
    for i in range(len(test_list)):
        s = set(test_list[i])
        if 1 == test_list[i].count(fixed_vals[i]):
            s.remove(fixed_vals[i])
        sets.append(s)

    #sets = list(map(set, test_list))
        # only if fixed elements in postion sre allowed to match
        # I don't think thats allowed by his specifications
        # in test_list_3 the 'Z's match, not the 'eL's

    for i in range(len(sets)):
        for j in range(i+1, len(sets)):
            if len(sets[i] &amp; sets[j]) == 0:
                return False
    return True

print(validate(test_list_1, model))
print(validate(test_list_2, model))
print(validate(test_list_3, model))
print(validate(test_list_4, model))
print(validate(test_list_5, model))
</code></pre>
<p>Prints:</p>
<pre><code>True
True
True
False
False
</code></pre>
","0","Answer"
"79442966","79441566","<p><strong>go-tfe</strong> library does not provide a way to fetch all workspaces in one request and API itself enforces pagination. I can recommend trying recursively fetch workspace (a loop), until you reach a response with fewer than <strong>PageSize</strong> records.</p>
","-1","Answer"
"79445063","79444882","<p>For a List to be immutable, it is necessary (although not sufficient) for it to have implemented all of the methods marked &quot;optional&quot; in the Javadoc to simply throw an <code>UnsupportedOperationException</code>.</p>
<p>There is no safe way to check whether this is the case - the only mechanism would be to invoke all of the methods; but at least some of these would necessarily mutate the list if they don't throw the exception; plus, this would only tell you whether the list is <em>unmodifiable</em>, which isn't the same as <em>immutable</em>.</p>
<p>You could check for specific &quot;known immutable&quot; (or &quot;known mutable&quot;) types using reflection (e.g. <code>myList.getClass()....</code>); but you can't hope to cover all List implementations like that, since there are infinitely many possible implementations. In other words, you could reflectively detect some classes that you definitely know either to be mutable or immutable; but you still don't know in general.</p>
<p>You should <em>in general</em> assume that a <code>List</code> argument to a method doesn't implement <em>any</em> of the optional methods, because there is no way of testing whether those methods are &quot;really&quot; implemented or will throw an <code>NotImplementedException</code>.</p>
<p>If you actually need a mutable list, you should either:</p>
<ul>
<li>Copy the list parameter to a mutable structure (e.g. an Array list); or</li>
<li>Change the type of the method parameter so that it will <em>only</em> accept mutable types.</li>
</ul>
","13","Answer"
"79448751","79448739","<p>A recursive function can make quick work of this:</p>
<pre><code>test = [
    [
        [1, 2, [3, 4]],
        [[5, 6], 7]
    ],
    [8, 9, [10]]
]

def flatten(l):
    for item in l:
        if isinstance(item, list):
            for i in flatten(item):
                yield i
        else:
            yield item

print(list(flatten(test)))
</code></pre>
<hr />
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
<p>This function iterates through each item in the first layer of lists. If it finds something that isn't a list, it returns it with <code>yield</code>. If it finds another list, the function calls itself to iterate upon that list as well. What you end up with is each value inside every list returned back to the caller.</p>
","4","Answer"
"79448752","79448739","<p>It doesn't matter what the dimensions are. Simply do a recursive flattening should work:</p>
<pre><code>def flatten(lst):
    flat_list = []
    for item in lst:
        if isinstance(item, list):
            flat_list.extend(flatten(item))
        else:
            flat_list.append(item)
    return flat_list
</code></pre>
","1","Answer"
"79450963","79450950","<p>This means that if you pass two coordinates, the first one indexes the rows, and the second the columns.</p>
<p>Assuming this example:</p>
<pre><code>   0  1  2
0  0  1  2
1  3  4  5
2  6  7  8
</code></pre>
<pre><code>df.iloc[0, 2]  # first (0) row, third (2) column
# 2
</code></pre>
<p>You would actually get the same in pure python:</p>
<pre><code>lst = [[0, 1, 2], [3, 4, 5], [6, 7, 8]]

lst[0][2] # 2
</code></pre>
<p>The side effect is that, with a single coordinate you default to the rows:</p>
<pre><code>df.iloc[0] # first row
</code></pre>
<p>And if you want only a column, you should explicitly request all rows with <code>:</code>:</p>
<pre><code>df.iloc[:, 2] # all rows, third column
</code></pre>
","2","Answer"
"79450979","79450950","<p>I would say that statement is incorrect or, at least, very misleading and likely to cause confusion.</p>
<p>Both <code>iloc</code> and <code>loc</code> are <strong>row-first</strong> &amp; <strong>column-second</strong>, but this is exactly the <strong>same as</strong> how indexing works in <strong>native Python</strong> and your example. First index refers to the row, and the second index refers to the column.</p>
<p>Your example in pandas using <code>iloc/loc</code> also outputs <strong>6</strong>:</p>
<pre><code>import pandas as pd

data = [
    [1, 2, 3], # row 0
    [4, 5, 6], # row 1
    [7, 8, 9]  # row 2
]

df = pd.DataFrame(data)

print(df.iloc[1, 2])

# Output: 6
</code></pre>
<p>There has already been some discussion about this exact statement in this <a href=""https://www.kaggle.com/discussions/getting-started/138866"" rel=""nofollow noreferrer"">Kaggle discussion</a>, but to me is still not clear to what the author was referring to.</p>
<p>As per <em>Siraz Naorem</em> understanding, the <strong>statement might be referring</strong> to the <strong>creation of DataFrames</strong> <strong>from</strong> column-oriented data, e.g. <strong>dictionaries</strong>, where each list or array represents a column, not a row.</p>
<p>If we replicate again your example but create the DataFrame from a dictionary like this:</p>
<pre><code>df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]})

print(df)
# Output:    
#    A  B  C
# 0  1  4  7
# 1  2  5  8
# 2  3  6  9
</code></pre>
<p>Now, when we access index <code>[1,2]</code>, we do not get 6:</p>
<pre><code>print(df.iloc[1, 2]) 
# Output: 8

print(df.iloc[2, 1]) 
# Output: 6
</code></pre>
<p>In this case, the row and column indices might seem reversed and may lead to the mistaken idea that indexing is different: <code>iloc[1,2]</code> give us now <strong>8</strong>, and we have to use <code>iloc[2,1]</code> to get the value <strong>6</strong>.</p>
<p>However, <strong><code>iloc/loc</code> indexing itself has not changed</strong>, is still row-first &amp; column-second, and what is <strong>different</strong> is the <strong>structure</strong> of the DataFrame, since pandas internally has treated each list in the dictionary as a column.</p>
","2","Answer"
"79453087","79451369","<p>Ok found my error.
In nodejs implementation, the list namespace is accessible using .lst. and not .list. like in python implementation.
Could be of interest btw to harmonise naming between all 3 implémentations RS, JS, python.</p>
","0","Answer"
"79453118","79453090","<p>You don't need to use <code>.allowsHitTesting</code> like that. To deal with the <code>NavigationLink</code> acting up, you need to remove the button styling that it adds by default, by using <code>.buttonStyle(.plain)</code>, although I am not sure it really applies in this case.</p>
<p>To prevent the <code>Button</code> from triggering the action when in edit mode and to fix the <code>NavigationLink</code>, the solution is a <code>.highPriorityGesture</code>, that you enable conditionally based on the <code>EditMode</code> state:</p>
<pre><code>.highPriorityGesture(
    TapGesture()
        .onEnded {
            if (self.isReordering) {
                withAnimation {
                    self.isReordering = false
                    self.editMode?.wrappedValue = .inactive
                }
            }
        }
    , isEnabled: isReordering
)
</code></pre>
<h2>Here's the entire code:</h2>
<pre><code>import SwiftUI

struct ListHomeView: View {
    
    @Environment(\.editMode) private var editMode
    
    @State private var titles: [String] = [&quot;Title 1&quot;, &quot;Title 2&quot;, &quot;Title 3&quot;]
    
    @ViewBuilder
    var body: some View {
        
        NavigationStack {
            VStack {
                Section(&quot;Buttons&quot;) {
                    TitleList(titles: $titles) { title in
                        Button {
                            print(&quot;Button Pushed&quot;)
                        } label : {
                            Text(title)
                        }
                        .buttonStyle(PlainButtonStyle())
                    }
                }
                
                Section(&quot;Navigation Links&quot;) {
                    TitleList(titles: self.$titles) { title in
                        NavigationLink(destination: Text(&quot;Test&quot;)) {
                            Text(title)
                        }
                    }
                }
            }
        }
    }
}

struct TitleList&lt;RowContent: View&gt;: View {
    
    //Parameters
    @Binding var titles: [String]
    
    //Environment values
    @Environment(\.editMode) private var editMode
    
    @State private var isReordering: Bool = false
   
    private let rowContent: (String) -&gt; RowContent
    
    //Initializer
    init(titles: Binding&lt;[String]&gt;, @ViewBuilder rowContent: @escaping (String) -&gt; RowContent = { (_: String) in EmptyView() })
    {
        self._titles = titles
        self.rowContent = rowContent
    }
    
    //Body
    var body: some View {
        List {
            ForEach(self.titles, id: \.self) { title in
                
                rowContent(title)
                    .moveDisabled(!self.isReordering)
                    .swipeActions(allowsFullSwipe: false) {
                        Button {
                            self.editMode?.wrappedValue = .active
                            self.isReordering = true
                        } label: {
                            Label(&quot;Reorder&quot;, systemImage: &quot;list.bullet&quot;)
                        }
                    }
            }
            .onMove {
                source, destination in self.titles.move(fromOffsets: source, toOffset: destination)
            }
            .highPriorityGesture(
                TapGesture()
                    .onEnded {
                        if (self.isReordering) {
                            withAnimation {
                                self.isReordering = false
                                self.editMode?.wrappedValue = .inactive
                            }
                        }
                    }
                , isEnabled: isReordering
            )
        }
    }
}

#Preview {
    ListHomeView()
}
</code></pre>
<p><em><strong>Note: By the way, not a fan of that coding structure. Please stick to conventional formatting when sharing or asking questions to make everyone lives easier.</strong></em></p>
","1","Answer"
"79455831","79455279","<p>Just keep in mind what you are working with - you have a <code>list</code>object where every element is a <code>numpy.ndarray</code> object (of varying shapes). The simple way to accomplish this is then to just get the ith <code>numpy.ndarray</code> out of the <code>list</code>, then create a tuple with the appropriate indices (this can be done easily with python's nifty sequence operators <code>+</code> and <code>*</code>), then simply use index assignment on the <code>numpy.ndarray</code>:</p>
<pre><code>def write(jagged, *, i, m1, m2, n_m1, n_m2, val):
    arr = jagged[i]
    idx = (m1,)*n_m1 + (m2,)*n_m2
    arr[idx] = val
</code></pre>
<p>This could be simplfied further (but why? isn't the above just nice and readable?)</p>
<pre><code>def write(jagged, *, i, m1, m2, n_m1, n_m2, val):
    jagged[i][(m1,)*n_m1 + (m2,)*n_m2] = val
</code></pre>
","1","Answer"
"79456700","79456675","<ul>
<li><a href=""https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#emptyList--"" rel=""nofollow noreferrer""><code>Collections.emptyList()</code></a> returns an immutable list (i.e. a list where you cannot add elements).</li>
<li><a href=""https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html#ArrayList-java.util.Collection-"" rel=""nofollow noreferrer""><code>new ArrayList(Collection&lt;? extends E&gt; c)</code></a> creates a new <code>ArrayList</code> with the elements in the specified collection.</li>
</ul>
<p>So <code>List&lt;SomeClass&gt; someClassList = new ArrayList&lt;&gt;(Collections.emptyList())</code> is one way to initilize a  mutable <code>ArrayList</code> with no elements</p>
","2","Answer"
"79456755","79456675","<p>Yes, it initializes an <code>ArrayList</code> with a size of &quot;0&quot; but in a rather obscure way, given that there is <a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ArrayList.html#%3Cinit%3E(int)"" rel=""nofollow noreferrer"">an appropriate constructor</a> for that:</p>
<pre><code>List&lt;SomeClass&gt; someClassList = new ArrayList&lt;&gt;(0);
</code></pre>
<p>By default, new <code>ArrayList</code> instances have a capacity of 10, so I would argue that it is also not obvious why that size of 0 is required. Unless reasoning given by comments or context, I would probably simply replace it with:</p>
<pre><code>List&lt;SomeClass&gt; someClassList = new ArrayList&lt;&gt;();
</code></pre>
","4","Answer"
"79456771","79456675","<h2>Misguided micro-optimization</h2>
<p>That code with <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/Collections.html#emptyList()"" rel=""nofollow noreferrer""><code>Collections.emptyList()</code></a>:</p>
<pre><code>new ArrayList&lt;&gt;(Collections.emptyList())
</code></pre>
<p>… is either a misguided micro-optimization (see below) or silly nonsense.</p>
<ul>
<li>Passing a <code>Collection</code> to <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/ArrayList.html#%3Cinit%3E(java.util.Collection)"" rel=""nofollow noreferrer"">the constructor</a> results in the elements being assigned to the new list.</li>
<li>Passing an empty <code>Collection</code> has no effect. The result is a new empty list, just as if you had used <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/ArrayList.html#%3Cinit%3E()"" rel=""nofollow noreferrer"">the no-arg constructor</a>.</li>
</ul>
<p>So deliberately passing a hard-coded empty collection makes no sense practically speaking.</p>
<p>All three of the following examples result in an empty list, an instantiated <code>ArrayList</code> containing zero elements.</p>
<pre><code>List &lt; Person &gt; persons = new ArrayList&lt;&gt;( Collections.emptyList() ) ;  // Empty list. 
</code></pre>
<p>… and:</p>
<pre><code>List &lt; Person &gt; persons = new ArrayList&lt;&gt;( List.of () ) ;   // Empty list. 
</code></pre>
<p>… and:</p>
<pre><code>List &lt; Person &gt; persons = new ArrayList&lt;&gt;() ;   // Empty list. 
</code></pre>
<p>Only the last one is wise. The other two distract and confuse the reader, as evidenced by the posting of this Question.</p>
<h2>Initial Capacity</h2>
<p>There is one small technical difference between the first two examples above and the third. They may give the new <code>ArrayList</code> a different <em>initial capacity</em>.</p>
<ul>
<li>The third example results in a list with a default number of slots to hold elements’ assigned object references, all with null values. Commonly, the default is ten empty slots though this is an implementation detail and may vary.</li>
<li>The first two examples may result in a list with zero slots. Again this is an implementation detail and may vary.</li>
</ul>
<p>(See Comments below for discussion of these implementation details.)</p>
<p>So passing an empty collection <em>might</em> save some octets of memory (or might not). But with computers typically sporting dozens to hundreds of billions of octets, there is no practical point to such a micro-optimization in most situations. Furthermore, those saved octets will be spent the moment your app adds an element object reference to the list. And, even if this micro-optimization works in one version of Java, it may not work in another version when such implementation details may change.</p>
<h2>Premature optimization</h2>
<p>Some programmers coming from programming languages requiring  manual memory management (like <em>C</em>) may feel the need to take more control than is necessary when working in an environment like Java with sophisticated managed-memory features. The modern implementations of Java are <em>highly</em> tuned and performant. Such optimization attempts as seen in this Question are frequently premature (no proven need), ineffectual, or even counter-productive.</p>
<p>Generally it’s best in Java to <strong>write simple straight-forward code</strong> that is easy to read and comprehend. Then let the <a href=""https://en.wikipedia.org/wiki/Java_virtual_machine"" rel=""nofollow noreferrer"">JVM</a> do its thing.</p>
<h2><code>ArrayList#trimToSize</code></h2>
<p>The only optimization I routinely consider with <code>ArrayList</code> is calling <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/ArrayList.html#trimToSize()"" rel=""nofollow noreferrer""><code>trimToSize</code></a> when done adding/removing elements. And even then, I would only bother to do so on very large lists that may have grown to have a large number of extra slots. Or I might pass the modifiable list to <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/List.html#copyOf(java.util.Collection)"" rel=""nofollow noreferrer""><code>List.copyOf</code></a> to produce an <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/List.html#unmodifiable"" rel=""nofollow noreferrer"">unmodifiable list</a> with presumably few to no extra slots.</p>
","12","Answer"
"79458215","79454518","<p>The issue has nothing to do with using <code>*</code> or <code>-</code> or whether we are using Quarto or Rmarkdown. It's just a matter of the correct indentation, i.e. you can achieve your desired result by adding a tabulator aka <code>\t</code> to each sublist item so that they get indented by &quot;four&quot; spaces in the <code>knitr</code>red markdown document:</p>
<pre><code>---
title: &quot;lists&quot;
format: html
editor: visual
---

# hello

this is my first sentance of lists:

-   my first list:

```{r bulletlist1, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;\t*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```

-   this is next

    other lists:

```{r bulletlist2, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;\t*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```

```         
$~$

and the other lists:
```

```{r bulletlist3, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;\t*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```
</code></pre>
<p><a href=""https://i.sstatic.net/ebgPoFvI.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ebgPoFvI.png"" alt=""enter image description here"" /></a></p>
<p>To clarify check this simplified Rmd:</p>
<pre><code>---
title: &quot;lists&quot;
format: 
  html:
    keep-md: true
editor: visual
---

-   without tab:

```{r bulletlist1, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```

-   with tab:

```{r bulletlist1-tab, echo = FALSE, eval = TRUE, results = 'asis'}
cat(paste(&quot;\t*&quot;, levels(iris$Species)), sep = &quot;\n&quot;)
```
</code></pre>
<p>which after knitting results in this <code>md</code> file:</p>
<pre><code>---
title: &quot;lists&quot;
format: 
  html:
    keep-md: true
editor: visual
---

-   without tab:

* setosa
* versicolor
* virginica

-   with tab:

    * setosa
    * versicolor
    * virginica
</code></pre>
","2","Answer"
"79461174","79461133","<p>I was able to reproduce a O(1) behaviour for getting an item from a list. I think the workbench in the OP measures <em>nested</em> statements together and this lead to different results: <code>int</code>-casting, creation of random number, <em>item-getting</em>.</p>
<p>Unfortunately <code>timeit</code> doesn't support a nice way pass variable parameters to the function to <code>timeit</code>. Used string templating to focus only on the time-measurement of <em>the item-getting</em> step, generation of the random numbers is done before is done in advance in order not to affect the time measurement.</p>
<p>Notice that <code>timeit</code>-functions accept statements either in form of a string or of a callable.</p>
<pre><code>import timeit
import random
from statistics import mean


SEED = 123456
random.seed(SEED)
print(f&quot;{SEED = }&quot;)


setup = f&quot;&quot;&quot;
test_10m = [x for x in range(10000000)]
test_1m = [x for x in range(1000000)]
test_10k = [x for x in range(10000)]
test_1k = [x for x in range(1000)]
&quot;&quot;&quot;

# string 
template_stmts = (
    'test_10m[{}]',
    'test_1m[{}]',
    'test_10k[{}]',
    'test_1k[{}]',
)
</code></pre>
<p><strong>Workbench 1:</strong> repeated access to same index</p>
<pre><code>for stmt, size in zip(template_stmts, [10000000, 1000000, 10000, 1000]):
    # exclud the computation the index from the workbench
    r = int(random.random()*size)
    
    # statement to workbench
    t = timeit.timeit(stmt.format(r), number=10**6, setup=setup)
    print(f&quot;array size: {size: &lt;10}  time: {t:.5f}s&quot;)
</code></pre>
<p>Output</p>
<pre class=""lang-none prettyprint-override""><code>array size: 10000000    time: 0.01524s
array size: 1000000     time: 0.01456s
array size: 10000       time: 0.01432s
array size: 1000        time: 0.01549s
</code></pre>
<p><strong>Workbench 2:</strong> repeated access to random indeces (slow method, notice also reduced the size of the repetitions)</p>
<pre><code>from statistics import mean


# &quot;restart&quot; the seed to generate same values as before
random.seed(SEED) # !&lt;- important for comparison of different methods

for stmt, size in zip(template_stmts, [10000000, 1000000, 10000, 1000]):
    # statement to workbench
    ts = [timeit.timeit(stmt.format(int(random.random()*size)), number=10**2, setup=setup)
          for _ in range(10**2)]
    print(f&quot;array size: {size: &lt;10}  time: {min(ts):f}s  mean: {mean(ts):f}s&quot;)    
</code></pre>
<p>Output</p>
<pre class=""lang-none prettyprint-override""><code>array size: 10000000    time: 3.4719996619969606e-06s  mean: 4.67159996e-06s
array size: 1000000     time: 3.5260000004200265e-06s  mean: 4.50958998e-06s
array size: 10000       time: 3.453998942859471e-06s   mean: 4.18842002e-06s
array size: 1000        time: 3.0489991331705824e-06s  mean: 3.94016999e-06s
</code></pre>
","-1","Answer"
"79461329","79461324","<p>You could use <code>Map()</code> here:</p>
<pre><code>Map(append, l1, l2)

[[1]]
[[1]][[1]]
[1] &quot;a&quot;

[[1]][[2]]
[1] &quot;b&quot;

[[1]][[3]]
[1] &quot;c&quot;

[[1]][[4]]
[1] &quot;g&quot;


[[2]]
[[2]][[1]]
[1] &quot;d&quot;

[[2]][[2]]
[1] &quot;e&quot;

[[2]][[3]]
[1] &quot;f&quot;

[[2]][[4]]
[1] &quot;h&quot;
</code></pre>
","9","Answer"
"79461616","79461324","<p>Using an explicit loop:</p>
<pre><code>for (i in seq_along(l1)) {
  li[[i]] &lt;- c(l1[[i]], l2[[i]])
}
</code></pre>
","4","Answer"
"79461912","79461324","<p>The reason your solution does not work is that your function is appending the entire <code>l2</code> list to each sublist of <code>l1</code> (as you can observe from the output).
If we can assume that <code>l1</code> and <code>l2</code> are of the same length, then the lapply solution would be to pass the indices and then append:</p>
<p><strong>Input</strong></p>
<pre><code>l3 &lt;- lapply(1:length(l1), \(x) c(l1[[x]], l2[[x]]))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>List of 2
 $ :List of 4
  ..$ : chr &quot;a&quot;
  ..$ : chr &quot;b&quot;
  ..$ : chr &quot;c&quot;
  ..$ : chr &quot;g&quot;
 $ :List of 4
  ..$ : chr &quot;d&quot;
  ..$ : chr &quot;e&quot;
  ..$ : chr &quot;f&quot;
  ..$ : chr &quot;h&quot;
</code></pre>
<p>I think the Map/mapply solution already offered is more idiomatic.</p>
","2","Answer"
"79462056","79461324","<p>The easiest way is as provided by <a href=""https://stackoverflow.com/a/79461329/12158757"">@tmfmnk's <code>Map(...)</code> solution</a>.</p>
<hr />
<p>Since you have a tag <a href=""/questions/tagged/do.call"" class=""s-tag post-tag"" title=""show questions tagged &#39;do.call&#39;"" aria-label=""show questions tagged &#39;do.call&#39;"" rel=""tag"" aria-labelledby=""tag-do.call-tooltip-container"" data-tag-menu-origin=""Unknown"">do.call</a> for this question, here is its implementation</p>
<pre><code>&gt; do.call(Map, list(c, l1, l2))
[[1]]
[[1]][[1]]
[1] &quot;a&quot;

[[1]][[2]]
[1] &quot;b&quot;

[[1]][[3]]
[1] &quot;c&quot;

[[1]][[4]]
[1] &quot;g&quot;


[[2]]
[[2]][[1]]
[1] &quot;d&quot;

[[2]][[2]]
[1] &quot;e&quot;

[[2]][[3]]
[1] &quot;f&quot;

[[2]][[4]]
[1] &quot;h&quot; 
</code></pre>
","2","Answer"
"79462931","79462453","<p>I'm not sure if this <em>particular</em> case is a bug, but <code>editMode</code> is definitely broken in one way or another. The example code in its <a href=""https://developer.apple.com/documentation/swiftui/environmentvalues/editmode"" rel=""nofollow noreferrer"">documentation</a> doesn't actually work as advertised, at least.</p>
<p>It's not that the change in <code>HomeView.editMode</code> is not propagated to <code>TitleList</code> - it's that <code>HomeView.editMode</code> doesn't have any effect at all. The plus button isn't even changing <code>HomeView.editMode</code>.</p>
<p>It seems like <code>editMode</code> only works if you get it from an <code>@Environment</code> within an editable view (e.g. <code>List</code>) or a toolbar. You can wrap your existing code into <code>View</code>s and/or <code>ViewModifier</code>s, and put them in those places.</p>
<pre><code>struct EditModeChanger: View {
    @Environment(\.editMode) var editMode
    var body: some View {
        Button {
            editMode?.wrappedValue = .inactive
        } label: {
            Label(&quot;Plus&quot;, systemImage: &quot;plus&quot;)
        }
    }
}

struct EditModeDetector: ViewModifier {
    @Environment(\.editMode) var editMode
    func body(content: Content) -&gt; some View {
        content.onChange(of: editMode?.wrappedValue) { _, _ in
            print(&quot;Worked&quot;)
        }
    }
}
</code></pre>
<pre><code>List {
    TitleList(titles: $titles)
        .modifier(EditModeDetector())
}
.toolbar {
    ToolbarItem(placement: .navigationBarTrailing) {
        EditModeChanger()
    }
}
</code></pre>
<p>Now the plus button works as expected, and &quot;Worked&quot; is also being printed.</p>
","1","Answer"
"79463247","79463169","<p>Given data <code>s</code> like below</p>
<pre class=""lang-py prettyprint-override""><code>s = ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4', 'C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8', 'C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']
</code></pre>
<p>you can try <code>itertools</code> along with <code>numpy</code></p>
<pre class=""lang-py prettyprint-override""><code>import numpy as np
import itertools
grp = np.ceil(np.cumsum(np.char.count(s, ',')==0)/2)
[list(g) for k, g in itertools.groupby(s, lambda i: grp[s.index(i)])]
</code></pre>
<p>or without <code>numpy</code></p>
<pre class=""lang-py prettyprint-override""><code>from itertools import accumulate, groupby
from math import ceil

grp = [ceil(x/2) for x in accumulate(map(lambda x: int(x.count(',')==0), s))]
[list(g) for k, g in groupby(s, lambda i: grp[s.index(i)])]
</code></pre>
<p>such that you will obtain</p>
<pre><code>[['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4'], ['C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8'], ['C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']]
</code></pre>
","1","Answer"
"79463251","79463169","<p>If the input list is <strong>guaranteed</strong> to start and end with a single string <strong>and</strong> if there will always be at least one adjacent pair of single strings then:</p>
<pre><code>lst = ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4', 'C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8', 'C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']
result = [[]]
for e in lst:
    result[-1].append(e)
    if not &quot;,&quot; in e:
        if len(result[-1]) &gt; 1:
            result.append([])
result.pop()
print(result)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4'], ['C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8'], ['C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']]
</code></pre>
","1","Answer"
"79463262","79463169","<p>Here is my take on this, using regular expressions.  We can recombine your starting list using some distinct separator, say <code>|</code>, then use <code>re.findall</code> to find each single C-multi C string.</p>
<pre class=""lang-py prettyprint-override""><code>import re

inp = ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4', 'C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8', 'C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']
x = '|'.join(inp)
parts = re.findall(r'(?&lt;![^|])C\d+(?:\|(?:C\d+(?:,C\d+)+)+)+\|C\d+(?![^|])', x)
output = [p.split('|') for p in parts] 
print(output)
</code></pre>
<p>This prints:</p>
<pre><code>[
    ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4'],
    ['C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8'],
    ['C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']
]
</code></pre>
","1","Answer"
"79463388","79463169","<p>With <a href=""https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.split_when"" rel=""nofollow noreferrer""><code>split_when</code></a> from more-itertools:</p>
<pre><code>from more_itertools import split_when

lst = ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4', 'C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8', 'C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']

result = list(split_when(lst, lambda s, t: ',' not in s+t))

print(result)
</code></pre>
<p>Or just basic:</p>
<pre><code>lst = ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4', 'C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8', 'C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']

result = []
it = iter(lst)
for s in it:
    sub = [s]
    for t in it:
        sub.append(t)
        if ',' not in t:
            break
    result.append(sub)

print(result)
</code></pre>
","1","Answer"
"79465669","79463169","<p>You can use a generator to produce items after the first item of each sublist until an item with no comma is found:</p>
<pre><code>def until_no_comma(seq):
    for i in seq:
        yield i
        if ',' not in i:
            return
seq = iter(l)
print([[i, *until_no_comma(seq)] for i in seq])
</code></pre>
<p>This outputs:</p>
<pre><code>[['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4'], ['C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8'], ['C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']]
</code></pre>
<p>Demo: <a href=""https://ideone.com/VJ4fnW"" rel=""nofollow noreferrer"">https://ideone.com/VJ4fnW</a></p>
","1","Answer"
"79467826","79467726","<p>The PanicException is a bug and could be reported.</p>
<p><a href=""https://docs.pola.rs/api/python/dev/reference/expressions/api/polars.Expr.list.join.html"" rel=""nofollow noreferrer""><code>.list.join()</code></a> can be used to create a &quot;single string&quot; which you can hash.</p>
<pre class=""lang-py prettyprint-override""><code>df = pl.DataFrame({&quot;lol&quot;: list_of_lists})

df.with_columns(
    pl.col(&quot;lol&quot;).list.join(&quot;&quot;).hash()
)
</code></pre>
<pre><code>shape: (4, 1)
┌─────────────────────┐
│ lol                 │
│ ---                 │
│ u64                 │
╞═════════════════════╡
│ 8244365561843513530 │
│ 8244365561843513530 │
│ 8244365561843513530 │
│ 8244365561843513530 │
└─────────────────────┘
</code></pre>
<p>You can also cast to <a href=""https://docs.pola.rs/user-guide/expressions/categorical-data-and-enums/#data-type-categorical"" rel=""nofollow noreferrer"">Categoricals</a> which can be hashed.</p>
<pre class=""lang-py prettyprint-override""><code>df.with_columns(
    pl.col(&quot;lol&quot;).cast(pl.List(pl.Categorical)).hash()
)
</code></pre>
<pre><code>shape: (4, 1)
┌────────────────────┐
│ lol                │
│ ---                │
│ u64                │
╞════════════════════╡
│ 599332512135826737 │
│ 599332512135826737 │
│ 599332512135826737 │
│ 599332512135826737 │
└────────────────────┘
</code></pre>
","1","Answer"
"79467862","79467770","<p>If you are using <code>@ObservedRealmObject</code> or <code>@ObservedResults</code></p>
<p>Try something like</p>
<pre><code>   $selectedLesson.pupils.append(neuerSchueler)
</code></pre>
<p>Instead of the <code>write</code> operation</p>
<p><a href=""https://www.mongodb.com/docs/realm-sdks/swift/latest/index.html"" rel=""nofollow noreferrer"">https://www.mongodb.com/docs/realm-sdks/swift/latest/index.html</a></p>
<p><a href=""https://www.mongodb.com/docs/atlas/device-sdks/sdk/swift/swiftui-tutorial/"" rel=""nofollow noreferrer"">https://www.mongodb.com/docs/atlas/device-sdks/sdk/swift/swiftui-tutorial/</a></p>
","1","Answer"
"79468882","79468225","<p>It would help if you post complete working examples, so we won't need to fill in the gaps ourself. But hoping to get your intentions right, you could do it this way:</p>
<pre><code>set list {1 {}}
set i 1
if {3000 - [expr [lindex $list $i 0] + 0]} {puts done}
</code></pre>
","0","Answer"
"79469468","79468225","<p>Here is how you can write <strong>(if statement)</strong> to handle <strong>empty string</strong> using <code>llength</code>. Modify your loop to <strong>skip empty elements</strong>:</p>
<p>code:</p>
<pre><code>set list {{1 2} {2 3} {3 4} {4 5} {} {} {6 7}}

for {set i 0} {$i &lt; [llength $list]} {incr i} {
    set sublist [lindex $list $i]
    
    # Skip empty lists
    if {[llength $sublist] == 0} {
        continue
    }

    # Extract first element safely
    set first_element [lindex $sublist 0]

    # Perform the calculation
    if {3000 - $first_element &gt; 2600} {
        puts &quot;WARNING&quot;
    }
}
</code></pre>
","0","Answer"
"79470754","79463169","<p>Alternatively, we can throw <code>groupby</code> from <em>itertools</em> at this problem:</p>
<pre><code>from itertools import groupby

lst = ['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4', 'C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8', 'C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']

groups = []

for key, group in groupby(lst, lambda x: ',' in x):

    if key:
        groups[-1].extend(group)
    else:
        a, *b = group

        if b:
            groups[-1].append(a)
            groups.append(b)
        else:
            if groups:
                groups[-1].append(a)
            else:
                groups.append([a])

print(groups)
</code></pre>
<p>Assumes input is in the proper order, just needs to be reformatted.</p>
<p><strong>OUTPUT</strong></p>
<pre><code>% python3 test.py
[['C1', 'C1,C2', 'C2,C3', 'C3,C4', 'C4'], ['C5', 'C5,C6', 'C6,C7', 'C7,C8', 'C8'], ['C10', 'C10,C11', 'C11,C12', 'C12,C13', 'C13']]
% 
</code></pre>
","0","Answer"
"79472308","79472283","<p>You could try to <code>unlist</code> and <code>sort</code> (which removes <code>NA</code>), then <code>split</code> along cumulated <code>diff</code>erences.</p>
<pre><code>&gt; u &lt;- sort(unique(unlist(lst)))
&gt; split(u, cumsum(c(1, diff(u)) &gt; 1)) |&gt; unname()
[[1]]
[1] 1 2 3 4

[[2]]
[1]  8  9 10 11

[[3]]
[1] 20 21 22 23
</code></pre>
<hr />
<p><em>Data:</em></p>
<p>Slightly expanded.</p>
<pre><code>&gt; dput(lst)
list(1, c(1, 2), c(1, 2), c(2, 3, 4), c(8, 9, 10), c(10, 11), 
    20:23, NA)
</code></pre>
","4","Answer"
"79472633","79472283","<p>There are 6 basic vector data types in R: logical, numeric, integer, complex, character and raw (see <a href=""https://rdrr.io/r/base/typeof.html"" rel=""nofollow noreferrer"">typeof</a>) and this should work with all except possibly raw. It creates a 2 column data frame <code>edges</code> each of whose rows represents an edge and from that an igraph object <code>g</code>. At the end we show the graph.</p>
<pre><code>library(igraph)

L &lt;- list(c(1),c(1,2),c(1,2),c(2,3,4),c(8,9,10),c(10,11),c(NA))

L2 &lt;- Map(\(x) unique(na.omit(x)), L)
edges &lt;- L2 |&gt;
  Filter(f = \(x) length(x) &gt; 1) |&gt;
  Map(f = \(x) data.frame(from = head(x, -1), to = tail(x, -1))) |&gt;
  do.call(what = &quot;rbind&quot;) |&gt;
  unique()

g &lt;- graph_from_data_frame(edges, vertices = unique(unlist(L2)), directed = FALSE)

cl &lt;- components(g)$membership
s &lt;- split( as(names(cl), typeof(unlist(L))), cl)

str(s)
## List of 2
##  $ 1: num [1:4] 1 2 3 4
##  $ 2: num [1:4] 8 9 10 11
</code></pre>
<p>Image of graph follows.  Note that it has an edge for each element to the next within each component of L with duplicates removed.</p>
<pre><code>set.seed(123)
plot(g)
</code></pre>
<p><a href=""https://i.sstatic.net/e8qiTdlv.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/e8qiTdlv.png"" alt=""screenshot"" /></a></p>
","5","Answer"
"79472862","79472283","<p>It might be easier to work with data.frames on that problem. Here's a solution using <code>igraph</code> and working on all data types:</p>
<pre class=""lang-r prettyprint-override""><code>library(igraph)

dat &lt;- 
  setNames(l, paste0('node', 1:length(l))) |&gt; stack() |&gt; na.omit()

dat |&gt;
  graph_from_data_frame(dir = FALSE) |&gt;
  components() |&gt;
  getElement('membership') |&gt;
  stack() |&gt;
  subset(!grepl(&quot;node&quot;, ind)) |&gt;
  aggregate(ind ~ values, FUN = toString)

#  values          ind
#1      1   1, 2, 3, 4
#2      2 8, 9, 10, 11
</code></pre>
","5","Answer"
"79473826","79468225","<p>Since you are effectively having to deal with empty records, it's probably best to just handle them as a separate step. I prefer to do that by getting the record from the list first:</p>
<pre><code>for {set i 0} {$i &lt; 1} {incr i} {
    set record [lindex $list $i]

    # filter empty
    if {![llength $record]} continue

    # process other records
    if {3000 - [lindex $record 0] &gt; 2600} {
        puts &quot;WARNING&quot;
    }
}
</code></pre>
<p><em><strong>However,</strong></em> if this is the only use of <code>$i</code>, then it might instead be better to write:</p>
<pre><code>foreach record $list {
    # filter empty
    if {![llength $record]} continue

    # process other records
    if {3000 - [lindex $record 0] &gt; 2600} {
        puts &quot;WARNING&quot;
    }
}
</code></pre>
<p>Or even:</p>
<pre><code>foreach record $list {
    # filter empty
    if {![llength $record]} continue

    # process other records
    lassign $record x y
    if {3000 - $x &gt; 2600} {
        puts &quot;WARNING&quot;
    }
}
</code></pre>
","1","Answer"
"79473960","79472283","<p>There are already a bunch of excellent <a href=""/questions/tagged/igraph"" class=""s-tag post-tag"" title=""show questions tagged &#39;igraph&#39;"" aria-label=""show questions tagged &#39;igraph&#39;"" rel=""tag"" aria-labelledby=""tag-igraph-tooltip-container"" data-tag-menu-origin=""Unknown"">igraph</a> solutions. Below is just another option, using <a href=""https://r.igraph.org/reference/graph_from_biadjacency_matrix.html"" rel=""nofollow noreferrer""><code>graph_from_biadjacency_matrix</code></a> and <a href=""https://r.igraph.org/reference/bipartite_projection.html"" rel=""nofollow noreferrer""><code>bipartite_projection</code></a></p>
<pre><code>library(igraph)

lst %&gt;%
    Filter(f = Negate(anyNA)) %&gt;%
    setNames(paste0(&quot;x&quot;, seq_along(.))) %&gt;%
    stack() %&gt;%
    table() %&gt;%
    graph_from_biadjacency_matrix() %&gt;%
    bipartite_projection(which = &quot;false&quot;) %&gt;%
    decompose() %&gt;%
    map(~ as.integer(names(V(.x))))
</code></pre>
<p>and you will obtain</p>
<pre><code>[[1]]
[1] 1 2 3 4

[[2]]
[1]  8  9 10 11
</code></pre>
<h1>data</h1>
<pre><code>lst &lt;- list(c(1), c(1, 2), c(1, 2), c(2, 3, 4), c(8, 9, 10), c(10, 11), NA)
</code></pre>
<hr />
<p>Let's take a look how bipartite graph makes things work. Given a graph <code>g</code> obtained from below</p>
<pre><code>g &lt;- lst %&gt;%
    Filter(f = Negate(anyNA)) %&gt;%
    setNames(paste0(&quot;x&quot;, seq_along(.))) %&gt;%
    stack() %&gt;%
    table() %&gt;%
    graph_from_biadjacency_matrix()


g %&gt;%
    plot(layout = layout_as_bipartite, vertex.color = factor(V(.)$type))
</code></pre>
<p>we see</p>
<p><a href=""https://i.sstatic.net/iVl6F7Dj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/iVl6F7Dj.png"" alt=""enter image description here"" /></a></p>
<p>Then, using <code>bipartite_projection</code></p>
<pre><code>g %&gt;%
    bipartite_projection(which = &quot;false&quot;) %&gt;%
    plot()
</code></pre>
<p>we see
<a href=""https://i.sstatic.net/fzYqKNf6.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/fzYqKNf6.png"" alt=""enter image description here"" /></a></p>
<p>where <code>which = &quot;false&quot;</code> indicates the vertices as shown in <code>lst</code>, otherwise <code>which = &quot;true&quot;</code> denotes the vertices of names starting with <code>x</code>.</p>
","2","Answer"
"79474015","79472283","<p>If you are interested in working <em><strong>with base R only</strong></em> but with shorter code, you can try</p>
<ul>
<li><strong>Option 1</strong>: Use <code>tcrossprod</code> + <code>%*%</code></li>
</ul>
<pre><code>l &lt;- Filter(Negate(anyNA), lst)
M &lt;- tcrossprod(table(stack(setNames(l, paste0(&quot;x&quot;, seq_along(l))))))
p &lt;- M &gt; 0
repeat {
    q &lt;- (p %*% M) &gt; 0
    if (identical(p, q)) break
    p &lt;- q
}
k &lt;- order(p[, 1])
out &lt;- apply(unique(p[k, k]), 1, \(x) as.integer(names(which(x))))
</code></pre>
<p>and you will see</p>
<pre><code>&gt; out
$`2`
[1] 2

$`4`
[1] 4

$`1`
 [1]  1  5  7  9 10 11 12 14 17 18 20
</code></pre>
<ul>
<li><strong>Option 2</strong>: Use <code>repeat</code> + <code>Reduce</code></li>
</ul>
<pre><code>out &lt;- list()
l &lt;- Filter(negate(anyNA), lst)
repeat {
    if (!length(l)) break
    v &lt;- unique(unlist(l))
    sz &lt;- 0
    repeat{
        p &lt;- Reduce(\(x, y) c(x, if (any(y %in% x)) setdiff(y, x)), l)
        l &lt;- lapply(l, \(x) if (all(x %in% p)) p else x)
        if (length(p) == sz) break
        sz &lt;- length(p)
    }
    out &lt;- c(out, list(p))
    l &lt;- Filter(\(x) !any(x %in% p), l)
}
</code></pre>
<p>gives</p>
<pre><code>&gt; out
[[1]]
 [1] 11 14 18  1  5  9 20 17 10  7 12

[[2]]
[1] 4

[[3]]
[1] 2
</code></pre>
<h1>data</h1>
<hr />
<p>Given a &quot;tough&quot; list for example</p>
<pre><code>set.seed(0)
lst &lt;- sample(c(rep(NA, 3), replicate(7, list(sample(20, sample(5, 1))))))

&gt; lst
[[1]]
[1] NA

[[2]]
[1] 11 14 18  1  5

[[3]]
[1] NA

[[4]]
[1]  5  9 14 20 17

[[5]]
[1] 10 12

[[6]]
[1] 4

[[7]]
[1] 2

[[8]]
[1] 10 14 20  7  9

[[9]]
[1] 20

[[10]]
[1] NA
</code></pre>
","2","Answer"
"79477569","79477559","<p>Consider utilizing <a href=""https://docs.python.org/3/library/functions.html#any"" rel=""nofollow noreferrer""><code>any</code></a>:</p>
<pre><code>&gt;&gt;&gt; L1 = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;date&quot;]
&gt;&gt;&gt; L2 = [&quot;bananaana&quot;, &quot;datedate&quot;]
&gt;&gt;&gt; [x for x in L1 if not any(x in y for y in L2)]
['apple', 'cherry']
</code></pre>
","2","Answer"
"79477575","79477559","<p>Using simple for:</p>
<pre><code>L1 = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;date&quot;]
L2 = [&quot;bananaana&quot;, &quot;datedate&quot;]

result = []
for x in L1:
    match = False
    for y in L2:
        if x in y:
            match = True
            break
    if not match:
        result.append(x)

print(result) #['apple', 'cherry']
</code></pre>
<p>With list comprehension: <code>[x for x in L1 if not any(x in y for y in L2)]</code></p>
","1","Answer"
"79477607","79477559","<p>Here is another option using <a href=""https://docs.python.org/3.13/library/stdtypes.html#frozenset.difference"" rel=""nofollow noreferrer""><code>difference</code></a></p>
<pre><code>list({*L1}.difference(x for y in L2 for x in L1 if x in y))

# ['apple', 'cherry']
</code></pre>
","1","Answer"
"79477685","79477559","<p>You could use the if / else construct which will be easier to read / maintain than some of the rather esoteric suggestions already made:</p>
<pre><code>L1 = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;date&quot;]
L2 = [&quot;bananaana&quot;, &quot;datedate&quot;]

L3 = []

for e in L1:
    for f in L2:
        if e in f:
            break
    else:
        L3.append(e)

print(L3)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>['apple', 'cherry']
</code></pre>
","1","Answer"
"79477728","79477700","<p><strong>Solution:</strong></p>
<pre><code>parentes = familia.split(' ')
parentes = [name.strip(',') for name in parentes]  

print(f'o seu nome é {parentes[0].capitalize()}.')
print(f'o nome do seu pai é {parentes[1].capitalize()}.')
print(f'o nome da sua mãe é {parentes[2].capitalize()}.')
print(f'o nome dos seus irmãos são {&quot;, &quot;.join(parentes[3:8])}.')  
print(f'o nome dos seus avós paternos é {&quot;, &quot;.join(parentes[8:10])}.')  
print(f'o nome dos seus avós maternos é {&quot;, &quot;.join(parentes[10:12])}.')
quantos_sao = len(parentes)
print(f'a sua familia tem {quantos_sao} pessoas!'.capitalize())
</code></pre>
<p><em>&quot;, &quot;.join(...): This takes the list elements and joins them into a single string, where each element is separated by a comma and a space.</em></p>
","2","Answer"
"79478049","79476133","<p>First of all you should not save the Element in the React State, like we use variables in Javascript or Jquery</p>
<p>It can be done with only one STATE instead of using all these</p>
<pre><code>    listParticipants = [];
    let seeParticipants = [];
    let [showParticipants, setShowParticipants] = useState([]);
</code></pre>
<p>I will give you an example hope it will help you understand</p>
<pre><code>//imports...
Const Create = () {

  //code for Friends list


  let [showParticipants, setShowParticipants] = useState([]);

  const addParticipant = (participant) =&gt; {
    let alreadyParticipant = showParticipants.find((v,i)=&gt;v.accountId2==participant.accountId2)
    if (alreadyParticipant) return console.log(&quot;Participant already&quot;);
    setShowParticipants(participant);
  }
}

return (
   &lt;View&gt;
       //code
       {showFriends}
   &lt;/View&gt;
   
   &lt;View&gt;
       {showParticipants.map((participant,participant_index)=&gt;{
        return &lt;TouchableOpacity&gt;
                  &lt;FriendCardAvatar key={participant_index} friend={participant} /&gt;
              &lt;/TouchableOpacity&gt;
       })}
   &lt;/View&gt;
)
</code></pre>
<p>Whenever the <strong>setShowParticipants</strong> is called it automatically re-renders the View of the App no need to do something else unlinke Javascript/Jquery</p>
","0","Answer"
"79523410","79471697","<p>Just applying the suggestions in the comments, here is one way to understand what <code>players</code> contains:</p>
<pre class=""lang-py prettyprint-override""><code>players = [
    {&quot;name&quot;: &quot;Rolf&quot;, &quot;numbers&quot;: {1, 3, 5, 7, 9, 11}},
    {&quot;name&quot;: &quot;Charlie&quot;, &quot;numbers&quot;: {2, 7, 9, 22, 10, 5}},
    {&quot;name&quot;: &quot;Anna&quot;, &quot;numbers&quot;: {13, 14, 15, 16, 17, 18}},
    {&quot;name&quot;: &quot;Jen&quot;, &quot;numbers&quot;: {19, 20, 12, 7, 3, 5}}
]
</code></pre>
<p>First, <code>players</code> is a <a href=""https://docs.python.org/3/library/stdtypes.html#list"" rel=""nofollow noreferrer"">list</a> of length 4:</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; type(players)
&lt;class 'list'&gt;
&gt;&gt;&gt; len(players)
4
</code></pre>
<p>So <code>players</code> has 4 items. Each item of <code>players</code> is a <a href=""https://docs.python.org/3/library/stdtypes.html#dict"" rel=""nofollow noreferrer"">dict</a>:</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; item0 = players[0]
&gt;&gt;&gt; item0
{'name': 'Rolf', 'numbers': {1, 3, 5, 7, 9, 11}}
&gt;&gt;&gt; type(item0)
&lt;class 'dict'&gt;
&gt;&gt;&gt; len(item0)
2
</code></pre>
<p>dicts also have a length that is the number of key-value pairs in the dict, in this case the length is 2. dicts are indexed by their keys.</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; item0.keys()
dict_keys(['name', 'numbers'])
&gt;&gt;&gt; item0[&quot;name&quot;]
'Rolf'
&gt;&gt;&gt; item0['numbers']
{1, 3, 5, 7, 9, 11}
</code></pre>
<p>Notice that strings can be written with either single quotes (<code>'</code>) or double quotes (<code>&quot;</code>). Now let's look at the item corresponding to the <code>&quot;numbers&quot;</code> key.</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; s = item0[&quot;numbers&quot;]
&gt;&gt;&gt; s
{1, 3, 5, 7, 9, 11}
&gt;&gt;&gt; type(s)
&lt;class 'set'&gt;
&gt;&gt;&gt; len(s)
6
</code></pre>
<p><code>s</code> is a <a href=""https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset"" rel=""nofollow noreferrer"">set</a> with 6 elements, and it supports the basic set operations.</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; s.union(players[1]['numbers'])
{1, 2, 3, 5, 7, 9, 10, 11, 22}
&gt;&gt;&gt; s.intersection(players[1]['numbers'])
{9, 5, 7}
&gt;&gt;&gt; s | players[3]['numbers']
{1, 3, 5, 7, 9, 11, 12, 19, 20}
&gt;&gt;&gt; s &amp; players[3]['numbers']
{3, 5, 7}
</code></pre>
<p>This example also illustrates that some of the basic set operations have both method call and operator versions.</p>
","1","Answer"
"79477733","79477700","<p>Yes. Python support slice indexing. <code>arr[start: end]</code> remember end will be your desired end index + 1.</p>
<p><code>arr = [1, 2, 3, 4, 5]</code></p>
<p>if you want to get index from 1 to 3, then use</p>
<p><code>print(arr[1: 4])</code></p>
<p>there is a reference link.
<a href=""https://www.geeksforgeeks.org/python-list-slicing/"" rel=""nofollow noreferrer"">https://www.geeksforgeeks.org/python-list-slicing/</a></p>
","-1","Answer"
"79478273","79477947","<p>It will probably be better to add &quot;seen&quot; cases to a set, and then continue to check if new elements have already been &quot;seen&quot;, rather than comparing every element to every other element in the list iteratively (an operation with O(n^2) time complexity). Hopefully I understand what you're trying to accomplish, but here's how I'd do it:</p>
<pre><code>from itertools import product

def to_key(f):
    # Creates a hashable key, keeping order-insensitive values sorted, and noting the middle value&quot;&quot;&quot;
    return (f[2], tuple(sorted(f[:2] + f[3:])))

mylist = [list(i) for i in product(range(5), repeat=5) if sum(i) == 5]

# Init an empty set. We'll add to it if a key isn't there
seen = set()
# If we add to the seen set, we'll add the element to newList
newlist = []

for f in mylist:
    key = to_key(f) # Create the hashable key
    if key not in seen: # Check if key in seen
        seen.add(key)
        newlist.append(f)
</code></pre>
","1","Answer"
"79486101","79486064","<p>The error occurs because there are values in the PULL_UP_FG3M column coming in as a list, rather than values that can be converted to numeric.</p>
<p>You can try this, modify your last line as:</p>
<pre><code>df[, PTS_pullups_3 := as.numeric(unlist(PULL_UP_FG3M)) * 3]
</code></pre>
","1","Answer"
"79487244","79487206","<p>As @Grismar has rightly pointed out, your code will not work if either of the strings have duplicated letters.</p>
<p>What you really want to do is iterate over the strings &quot;side-by-side&quot;. The built-in <a href=""https://docs.python.org/3/library/functions.html#zip"" rel=""nofollow noreferrer"">zip function</a> will work if both strings are of equal length. For strings of equal or differing lengths you could use <a href=""https://docs.python.org/3/library/itertools.html#itertools.zip_longest"" rel=""nofollow noreferrer"">itertools.zip_longest</a></p>
<p>Try this:</p>
<pre><code>from itertools import zip_longest

string1 = 'Orange'
string2 = 'Grapefruit'

for p in zip_longest(string1, string2, fillvalue=&quot; &quot;):
    print(*p)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>O G
r r
a a
n p
g e
e f
  r
  u
  i
  t
</code></pre>
<p>If, for some reason, you're not comfortable with <em>zip_longest()</em> then you could even write something that will handle an arbitrary number of strings.</p>
<p>Something like this:</p>
<pre><code>from collections.abc import Iterator

def yc(s: str) -&gt; Iterator[str]:
    yield from s
    while True:
        yield &quot; &quot;

def vprint(*s: str) -&gt; None:
    gf = [yc(a) for a in s]
    for _ in range(max(map(len, s))):
        print(*(next(g) for g in gf))


vprint(&quot;Orange&quot;, &quot;Grapefruit&quot;, &quot;Tomato&quot;, &quot;Banana&quot;, &quot;Lemon&quot;)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>O G T B L
r r o a e
a a m n m
n p a a o
g e t n n
e f o a  
  r      
  u      
  i      
  t      
</code></pre>
","4","Answer"
"79487261","79487206","<p>In this case you probably want to iterate over the <em>positions</em> in the string, instead of the <em>letters</em>.</p>
<pre><code>for idx in range(len(string1)):
    print(string1[idx], string2[idx])
</code></pre>
","1","Answer"
"79487993","79487590","<p>Here was my guess about the problem. I don't know if two ranges overlap, you want to remove them both or just the second one. My solution removes the second one.</p>
<pre><code>L = [[0, 10], [5, 15], [11, 18], [10, 25], [20, 25], [30, 35]]
L.sort(key= lambda x: x[0])

sets = []
delete_idx = set()

for sub_list in L:
    sets.append(set(range(sub_list[0], sub_list[1]+1)))

for i, set_1 in enumerate(sets[:-1]):
    if i in delete_idx:
        continue
    for j, set_2 in enumerate(sets[i+1:], start = i+1):
        if j in delete_idx:
            continue
        if len(set_1 &amp; set_2) &gt; 0:
            delete_idx.add(j)

# remove from the greatest idx to smallest idx
for i in sorted(delete_idx, reverse=True):
    L.remove(L[i])

print(L)
</code></pre>
<p>It printed:</p>
<pre><code>[[0, 10], [11, 18], [20, 25], [30, 35]]
</code></pre>
","0","Answer"
"79488179","79487404","<p>A valid list following this grammar rule can be parsed recursively with a function which, given a valid index, tries to parse the tokens starting from the index as keys to a function followed by the argument position (with -1 ending the function call), or otherwise defaults to a scalar value.</p>
<p>In addition to the parsed object, the function should also return the index to the next token in order to advance the index according to the number of tokens consumed at the current level.</p>
<p>Since there can be one or more of such expressions in the input list, the function should be called iteratively with returning values appended to an output list until the index reaches the end of the input:</p>
<pre><code>def parse(code):
    def parse_expr(index):
        while index &lt; size and code[index] == 0:
            index += 1  # skip 0s
        try:
            call = []
            while True:
                key1, key2, key3, pos = code[index: (next_index := index + 4)]
                if next_index &lt; size and code[next_index] == 0:
                    raise ValueError  # escape the token
                if not call:
                    call.append(constructs[key1][key2][key3])
                if pos == -1:
                    return call, next_index
                obj, index = parse_expr(next_index)
                call.append(obj)
        except (ValueError, KeyError):
            return code[index], index + 1
    size = len(code)
    index = 0
    result = []
    while index &lt; size:
        obj, index = parse_expr(index)
        result.append(obj)
    return result
</code></pre>
<p>so that:</p>
<pre><code>print(parse([1, 1, 1, 1, 'Hello world', 1, 1, 1, 2, 'etc', 1, 1, 1, -1]))
print(parse([1, 1, 1, 1, 1, 1, 1, 1, 'Hello world', 1, 1, 1, -1, 1, 1, 1, 2, 'etc', 1, 1, 1, -1]))
print(parse([1, 1, 1, 1, 'a', 1, 1, 1, 2, 1, 1, 1, 1, 'b', 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, 'c', 1, 1, 1, -1]))
</code></pre>
<p>outputs:</p>
<pre><code>[[&lt;built-in function print&gt;, 'Hello world', 'etc']]
[[&lt;built-in function print&gt;, [&lt;built-in function print&gt;, 'Hello world'], 'etc']]
[[&lt;built-in function print&gt;, 'a', [&lt;built-in function print&gt;, 'b']], [&lt;built-in function print&gt;, 'c']]
</code></pre>
<p>Demo: <a href=""https://ideone.com/4ct2KA"" rel=""nofollow noreferrer"">https://ideone.com/4ct2KA</a></p>
<p>The code above assumes the input to be valid and ignores the keys to a function after the first argument since they are redundant. Argument positions are ignored too since they are always incremented from 1, although they can be used for input validation as necessary.</p>
","1","Answer"
"79488608","79487590","<p>One efficient approach is to build an interval tree where all nodes to the left of a node have intervals lower than or equal to the lower bound of the node, and all nodes to the right of the node have intervals greater than or equal to the upper bound of the node so that adding an interval to the tree has an average time complexity of <em>O(log n)</em>, and construction of the tree overall takes <em>O(n log n)</em> on average.</p>
<p>Since the goal is to retain non-overlapping intervals, we can make an insertion raise an exception to reject an overlapping interval:</p>
<pre><code>class Interval:
    def __init__(self, lower_bound, upper_bound):
        self.lower_bound = lower_bound
        self.upper_bound = upper_bound

class NonOverlappingIntervalTree:
    def __init__(self):
        self.interval = None
        self.left = None
        self.right = None

    def add_interval(self, lower_bound, upper_bound):
        if not self.interval:
            self.interval = Interval(lower_bound, upper_bound)
            return
        if upper_bound &lt;= self.interval.lower_bound:
            if not (node := self.left):
                node = self.left = NonOverlappingIntervalTree()
        elif lower_bound &gt;= self.interval.upper_bound:
            if not (node := self.right):
                node = self.right = NonOverlappingIntervalTree()
        else:
            raise ValueError
        node.add_interval(lower_bound, upper_bound)
</code></pre>
<p>so your filter function can just skip an interval when it is found to overlap an existing node in the interval tree when attempting to add it to the tree:</p>
<pre><code>def cut_overlapping_ranges(ranges):
    output = []
    tree = NonOverlappingIntervalTree()
    for lower_bound, upper_bound, *data in ranges:
        try:
            tree.add_interval(lower_bound, upper_bound)
        except ValueError:
            continue
        output.append([lower_bound, upper_bound, *data])
    return output
</code></pre>
<p>so that:</p>
<pre><code>cut_overlapping_ranges([[0, 10], [5, 15], [11, 18], [10, 25], [20, 25], [30, 35]])
</code></pre>
<p>outputs:</p>
<pre><code>[[0, 10], [11, 18], [20, 25], [30, 35]]
</code></pre>
<p>Demo: <a href=""https://ideone.com/vv48Oh"" rel=""nofollow noreferrer"">https://ideone.com/vv48Oh</a></p>
","2","Answer"
"79490155","79490043","<p>Use a single regular expression that matches all the patterns. You can use a capture group to extract the parenthesis after <code>¬</code>.</p>
<p>Then loop over all the matches, generating the appropriate string in the result based on what was matched.</p>
<pre><code>expression = &quot;¬[P∧¬(¬T∧R)]∧(T→¬P)&quot;
pattern = r'¬?([\[(])|([\])])'
all_matches = [(match.start(), match.group(1) or match.group(2))
                for match in re.finditer(pattern, expression)]
print(all_matches)
# [(0, '['), (4, '('), (10, ')'), (11, ']'), (13, '('), (18, ')')]
</code></pre>
<p>Each match will only match one side of the pipe, so <code>match.group(1) or match.group(2)</code> selects the matched parenthesis.</p>
","6","Answer"
"79490433","79487590","<p>This is the solution I found, thanks to help on loop mechanics from juanpa.arrivillaga. I imagine it's not too efficient, for that, look to other answers; however, this works without excess libraries.</p>
<pre><code>def cut_overlapping_ranges(ranges):

  keep_ranges = []
  temp_ranges = ranges.copy()

  while True:
    range_position = 0
    if len(temp_ranges) == 0:
      break
    range_1 = temp_ranges[0]
    lb = range_1[0]
    ub = range_1[1]
    keep_ranges.append(range_1)
    temp_ranges.remove(range_1)
    while True:
      if len(temp_ranges) == 0:
        break
      try:
        range_2 = temp_ranges[range_position]
        if ((lb &lt; range_2[0] &lt; ub) or (lb &lt; range_2[1] &lt; ub)):
            temp_ranges.remove(range_2)
        else:
          range_position += 1
      except IndexError:
        break

  print(range)

  return
</code></pre>
<p>input is</p>
<pre><code>[[0.0023, 0.0033],[0.0025, 0.0035],[0.0029, 0.0039],[0.0022, 0.0032],[0.0017, 0.0027],[0.0031, 0.0041],[0.0032, 0.0042],[-0.0005, 0.0005],[0.0014, 0.0024],[-0.0002, 0.0008],[-0.0006,0.0004],[0.0012, 0.0022],[0.0013, 0.0023],[0.0008, 0.0018],[0.0011, 0.0021]]
</code></pre>
<p>output is</p>
<pre><code>[[0.0023, 0.0033],[-0.0005, 0.0005],[0.0012, 0.0022]]
</code></pre>
","0","Answer"
"79490651","79487206","<p>You are using the position of the <em>first</em> occurrence of a letter in the first string to index the second string. However, since the letter appears twice, you get the same index every time you try. You stated &quot;I want <code>indx</code> to take on the placement value of each letter?&quot; which is fair, and there's several ways to achieve that.</p>
<p>For all those solutions though, you have to consider these scenarios:</p>
<ul>
<li><p><code>string1</code> could be longer than <code>string2</code></p>
</li>
<li><p><code>string1</code> could be shorter than <code>string2</code></p>
</li>
</ul>
<p>Here are some possible solutions:</p>
<ul>
<li>For both strings, the index you want goes from 0 to the length of the strings; so you could literally <code>for indx in range(0, len(string1)</code>) like @johngordon's answer suggests</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>string1 = 'Hello'
string2 = 'World'

for idx in range(len(string1)):
    print(string1[idx], string2[idx])
</code></pre>
<p>This causes an error if <code>string2</code> is shorter, and only prints the first letters from <code>string2</code> if it is longer.</p>
<ul>
<li>For each letter from <code>string1</code>, you want the accompanying index which can be done with <code>enumerate()</code>:</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>string1 = 'Hello'
string2 = 'World'

for indx, letter in enumerate(string1):
    print(letter + ' ' + string2[indx])
</code></pre>
<p>This has the same behaviour - you get an error if string2 is shorter, and only the first first few letters matching <code>string1</code>'s length if it is longer.</p>
<ul>
<li>For each letter from <code>string1</code>, you can just get the next letters from <code>string2</code> and keep track of it as you go:</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>string1 = 'Hello'
string2 = 'World'
indx = 0  # note that '' is not a very good value, since you need an integer, not a string

for letter in string1:
    print(letter + ' ' + string2[indx])
    indx += 1  # increase the index so that it has the right value for the next iteration
</code></pre>
<p>Again, the same problem.</p>
<ul>
<li>Instead of dealing with the index, you can just use library functions like <code>zip()</code> to get a letter from each string pairwise:</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>string1 = 'Hello'
string2 = 'World'

for letter1, letter2 in zip(string1, string2):
    print(letter1 + ' ' + letter2)
</code></pre>
<p>This never causes an error, but you only get the number of characters that matches the shortest length, so you're not guaranteed to get all the letters from <code>string1</code> if <code>string2</code> is shorter.</p>
<p>If you always want all the letters from both strings, and blanks for the other, you could do something like:</p>
<pre class=""lang-py prettyprint-override""><code>string1 = 'Hello'
string2 = 'World'
longest = max(len(string1), len(string2))

for indx in range(longest):
    letter1 = ' ' if indx &gt;= len(string1) else string1[indx]
    letter2 = ' ' if indx &gt;= len(string2) else string2[indx]
    print(letter1 + ' ' + letter2)
</code></pre>
<p>By the way, shortening an already short name like <code>index</code> to <code>indx</code> is generally a bad idea. Pick a name that's descriptive and doesn't require someone to remember how you decided to spell it - <code>index</code> would be better. If you can't use <code>index</code> because something else already used that, consider putting your code in a separate function and call it. That makes the code more reusable (especially if you do a good job with nice function arguments) and organised.</p>
","-1","Answer"
"79490847","79487404","<p>Thanks, blhsing!</p>
<p>So I got my attempt working, though it's twice as long as blhsing's answer.</p>
<pre class=""lang-py prettyprint-override""><code>def parse(code: list) -&gt; tuple:
    result = []
    stack = []
    i = 0
    while i &lt; len(code):
        key1, key2, key3, pos = code[i: i + 4]
        if key1 == 0 and key2 != 0:
            i += 1
        elif stack:
            if constructs.get(key1, {}).get(key2, {}).get(key3) is not None:
                if (len(code) &gt; i + 4 and code[i + 4] == 0) and (len(code) &lt;= i + 5 or code[i + 5] != 0):
                    result[-1][-1] += [key1, key2, key3, pos]
                    i += 4
                elif pos == 1:
                    stack.append([(key1, key2, key3), pos])
                    result[-1][-1] += [key1, key2, key3, pos]
                    i += 4
                elif (key1, key2, key3) == stack[-1][0]:
                    if pos == stack[-1][1] + 1:
                        stack[-1][1] += 1
                        if len(stack) == 1:
                            result[-1].append([])
                        else:
                            result[-1][-1] += [key1, key2, key3, pos]
                        i += 4
                    elif pos == -1:
                        if len(stack) &gt; 1:
                            result[-1][-1] += [key1, key2, key3, pos]
                        stack.pop()
                        i += 4
                    else:
                        raise SyntaxError(f'function {key1}.{key2}.{key3} at position {i} has no previous position {pos - 1}')
                else:
                    raise SyntaxError(f'function {key1}.{key2}.{key3} at position {i} has no previous position {pos - 1}')
            else:
                result[-1][-1].append(key1)
                i += 1
        else:
            if constructs.get(key1, {}).get(key2, {}).get(key3) is not None:
                if pos == 1:
                    result.append([(key1, key2, key3), []])
                    stack.append([(key1, key2, key3), pos])
                    i += 4
                else:
                    raise SyntaxError(f'function {key1}.{key2}.{key3} at position {i} has no previous separator {pos - 1}')
            else:
                raise SyntaxError(f'function {key1}.{key2}.{key3} at position {i} is not recognized')
    for i, function_call in enumerate(result):
        new_function_call = [function_call[0]]
        for argument in function_call[1:]:
            try:
                new_function_call += parse(argument)[0]
            except:
                new_function_call += argument
        result[i] = new_function_call
    return result, stack
</code></pre>
<p>It also implements the feature that a <code>0</code> followed by another <code>0</code> is not skipped. The only problem with it is that escaped sequences that happen to form a nested function call are treated as such, instead of being skipped.</p>
<p>I.e., <code>parse([1, 1, 1, 1, 1, 1, 2, 1, 0, 97, 1, 1, 2, -1, 0, 1, 1, 1, -1])</code> returns <code>([[(1, 1, 1), [(1, 1, 2), 97]]], [])</code> instead of <code>([[1, 1, 1], 1, 1, 2, 1, 97, 1, 1, 2, -1], [])</code>.</p>
<p>(I added the stack to the return so that another function can tell if any functions were not closed properly.)</p>
<p>Edit: <a href=""https://www.online-python.com/XpTsK76iFd"" rel=""nofollow noreferrer"">demo</a></p>
","0","Answer"
"79492668","79492363","<blockquote>
<p><em>...Sometimes it skips some videos. <br>...If I try to access any of the skipped videos directly (video ID) then I can get the information.</em></p>
</blockquote>
<p>You can try the XML feed via: <br>
<a href=""https://www.youtube.com/feeds/videos.xml?channel_id=your_channel_id_here"" rel=""nofollow noreferrer"">https://www.youtube.com/feeds/videos.xml?channel_id=your_channel_id_here</a></p>
<p>The link returns an XML document. Usefulness depends on how much data you need. It has the most recent few video's own specific link, title, thumbnail, description, upload/publish date, and also its total views.</p>
","0","Answer"
"79493485","79493427","<p><code>lapply</code> is best used to iterate items in a single list. To work on parallel items within two or more lists, use <code>Map</code> instead.</p>
<pre class=""lang-r prettyprint-override""><code>Map(function(a, b) a[a$freq &gt; nrow(b),], list1, list2)
#&gt; $A1
#&gt;   Code  Name freq
#&gt; 1   A1   Cat    4
#&gt; 2   A1   Dog    5
#&gt; 3   A1 Horse    6
#&gt; 
#&gt; $B1
#&gt;   Code  Name freq
#&gt; 4   B1   Cat    4
#&gt; 6   B1 Horse    6
#&gt; 
#&gt; $C1
#&gt;   Code  Name freq
#&gt; 7   C1   Cat    8
#&gt; 9   C1 Horse    5
</code></pre>
<p>If you want to use <code>lapply</code>, use the names of <code>list1</code> to access each member of <code>list1</code> and <code>list2</code> inside your function:</p>
<pre class=""lang-r prettyprint-override""><code>names(list1) |&gt;
  lapply(function(x) list1[[x]][list1[[x]]$freq &gt; nrow(list2[[x]]),]) |&gt;
  setNames(names(list1))
#&gt; $A1
#&gt;   Code  Name freq
#&gt; 1   A1   Cat    4
#&gt; 2   A1   Dog    5
#&gt; 3   A1 Horse    6
#&gt; 
#&gt; $B1
#&gt;   Code  Name freq
#&gt; 4   B1   Cat    4
#&gt; 6   B1 Horse    6
#&gt; 
#&gt; $C1
#&gt;   Code  Name freq
#&gt; 7   C1   Cat    8
#&gt; 9   C1 Horse    5
</code></pre>
","5","Answer"
"79493491","79493427","<p>Using lapply</p>
<pre><code># Subset list1 based on the condition
filtered_list1 &lt;- lapply(names(list1), function(nm) {
  df &lt;- list1[[nm]]  # Extract the dataframe from list1
  threshold &lt;- nrow(list2[[nm]])  # Get the number of rows in the corresponding dataframe from list2
  df[df$freq &gt; threshold, ]  # Keep only rows where freq is greater than the threshold
})

# Convert list back to named list
names(filtered_list1) &lt;- names(list1)

# Print the result
filtered_list1
</code></pre>
","0","Answer"
"79493539","79493427","<h1>If you start from <code>list1</code> and <code>List2</code></h1>
<pre><code>l &lt;- sapply(list2, nrow)
lapply(list1, \(x) subset(x, freq &gt; l[Code]))
</code></pre>
<p>gives</p>
<pre><code>$A1
  Code  Name freq
1   A1   Cat    4
2   A1   Dog    5
3   A1 Horse    6

$B1
  Code  Name freq
4   B1   Cat    4
6   B1 Horse    6

$C1
  Code  Name freq
7   C1   Cat    8
9   C1 Horse    5
</code></pre>
<hr />
<h1>If you start from <code>df1</code> and <code>df2</code></h1>
<p>Actually you can bypass the steps of yielding <code>list1</code> and <code>list2</code>, but using <code>df1</code> and <code>df2</code> directly. You can try the following options:</p>
<ul>
<li><em><strong>Base <a href=""/questions/tagged/r"" class=""s-tag post-tag"" title=""show questions tagged &#39;r&#39;"" aria-label=""show questions tagged &#39;r&#39;"" rel=""tag"" aria-labelledby=""tag-r-tooltip-container"" data-tag-menu-origin=""Unknown"">r</a> approach</strong></em>: <code>split</code> + <code>subset</code> + <code>table</code></li>
</ul>
<pre><code>&gt; split(subset(df1, freq &gt; table(df2$Code)[Code]), ~Code)
$A1
  Code  Name freq
1   A1   Cat    4
2   A1   Dog    5
3   A1 Horse    6

$B1
  Code  Name freq
4   B1   Cat    4
6   B1 Horse    6

$C1
  Code  Name freq
7   C1   Cat    8
9   C1 Horse    5
</code></pre>
<ul>
<li><em><strong><a href=""/questions/tagged/dplyr"" class=""s-tag post-tag"" title=""show questions tagged &#39;dplyr&#39;"" aria-label=""show questions tagged &#39;dplyr&#39;"" rel=""tag"" aria-labelledby=""tag-dplyr-tooltip-container"" data-tag-menu-origin=""Unknown"">dplyr</a> approach</strong></em>: <code>left_join</code> + <code>filter</code> + <code>group_split</code></li>
</ul>
<pre><code>library(dplyr)

df1 %&gt;%
    left_join(count(df2, Code)) %&gt;%
    filter(freq &gt; n) %&gt;%
    select(-n) %&gt;%
    group_split(Code)
</code></pre>
<p>which gives</p>
<pre><code>[[1]]
# A tibble: 3 × 3
  Code  Name   freq
  &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;
1 A1    Cat       4
2 A1    Dog       5
3 A1    Horse     6

[[2]]
# A tibble: 2 × 3
  Code  Name   freq
  &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;
1 B1    Cat       4
2 B1    Horse     6

[[3]]
# A tibble: 2 × 3
  Code  Name   freq
  &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;
1 C1    Cat       8
2 C1    Horse     5
</code></pre>
","1","Answer"
"79494215","79494211","<p>You are right in your general idea that it shouldn't matter whether you add the node to <code>arr</code> either at the start of <code>dfs</code> or just before <code>dfs</code> is called (and when in both cases you remove that node from <code>arr</code> again when that call returns without success).</p>
<p>However, you did not add the correct node in the version that fails the test.</p>
<p>In the first (failing) version, the node that should be added in the <code>for</code> loop should be the <em>adjacent</em> node being iterated, not <code>i</code>. So change this:</p>
<pre><code>        for item in adj[i]:
            if not vis[item]:
                arr.append(i)  # &lt;-- wrong node!
</code></pre>
<p>to this:</p>
<pre><code>        for item in adj[i]:
            if not vis[item]:
                arr.append(item)  # &lt;-- correct node
</code></pre>
<p>...and now also the first version of your code will work as expected.</p>
<h1>Other remarks</h1>
<p>Unrelated to your question, but evaluating the condition <code>item in arr</code> is not efficient. You could reduce the execution time for this condition by using <code>vis</code> for this purpose: use value 1 to indicate that the node is on the current path, and 2 that it is also visited, but no longer on the current path.</p>
<p>Also, you can make use of <code>map</code> and <code>any</code> to make your loops implicit. This results in this variant:</p>
<pre><code>    def isCyclic(self, adj: List[List[int]]) -&gt; bool:
        def dfs(i):
            if vis[i] == 1:
                return True
            vis[i] = 1
            if any(map(dfs, adj[i])):
                return True
            vis[i] = 2

        n = len(adj)
        vis = [0] * n
        return any(map(dfs, range(n)))
</code></pre>
","0","Answer"
"79495638","79495595","<p>What you have here is equivalent of an autoincrement feature in database engines, such as PostgreSQL. When you add a row into a database table with an autoincrement column, that column (often called the ID) starts with 0 and goes on until the limit of the defined datatype. However, if the second row added is removed from a table with 20 rows, the database <em>will not</em> reindex all 18 following elements, because it'll be very inefficient: what if the table has 200 rows?</p>
<p>Anyway, you would need something like this:</p>
<pre class=""lang-dart prettyprint-override""><code>todoList.remove(keyToRemove);

// Reindex all items
final Map&lt;int, String&gt; newTodoList = {};
int newIndex = 1;
todoList.forEach((key, value) {
  newTodoList[newIndex] = value;
  newIndex++;
});
todoList.clear();
todoList.addAll(newTodoList);
</code></pre>
<p>What can be done in this case is to <em>hide</em> the ID for the user, and when you need to display the map, just sort the map entries by key:</p>
<pre class=""lang-dart prettyprint-override""><code>void main() {
  Map&lt;int, String&gt; todoList = {
    1: 'Buy groceries',
    3: 'Finish homework',
    // ...
    18: 'Clean the house',
    19: 'Call mom',
    20: 'Go for a run',
  };
  // Displaying by key will show holes in the map
  for (final entry in todoList.entries) { 
    print('${entry.key}: ${entry.value}');
  }
  // 1: Buy groceries
  // 3: Finish homework
  // 4: Read a book
  // ...
  // 18: Clean the house
  // 19: Call mom
  // 20: Go for a run
  

  // Instead, use the key only to sort the entries
  final List&lt;MapEntry&lt;int, String&gt;&gt; entries = todoList.entries.toList();
  entries.sort((e0, e1) =&gt; e0.key.compareTo(e1.key));
  for (int i = 0; i &lt; entries.length; i++) {
    final e = entries[i];
    print('${i+1}: ${e.value}');
  } 
  // 1: Buy groceries
  // 2: Finish homework
  // 3: Read a book
  // ...
  // 17: Clean the house
  // 18: Call mom
  // 19: Go for a run
}
</code></pre>
<p>But note that, whenever you need to display the map, you'll have to sort all the items beforehand.</p>
<p>So you have two problems while using a map: reindex all elements when removing an element (the logic will become more complex if you decide to remove more than one element), or sorting all elements when displaying the map.</p>
<p>Basically, a <code>Map&lt;int, String&gt;</code> <strong>is not</strong> a good choice here.</p>
<p>Note that every key in your map strictly goes from 1 (the first element index) to <em>N</em> (the last element index). Therefore, while you could use a map to represent your TODO list, it's a best practice to use a plain <code>List&lt;String&gt;</code> instead, which uses indices that goes from 0 to <em>N-1</em>:</p>
<pre class=""lang-dart prettyprint-override""><code>List&lt;String&gt; todoList = [];
// Adding elements:
todoList.add('Buy groceries');
todoList.add('Pay bills');
todoList.add('Finish homework');
// ...
todoList.add('Clean the house');
todoList.add('Call mom');
todoList.add('Go for a run');

// To remove the N item, refer to the N-1 position:
todoList.remove(1); // The second element

// No need to reindex the following elements: 
// Dart already implements that for you 
print(todoList);
// [
//   Buy groceries,
//   Finish homework,
//   Read a book,
//   ...
//   Clean the house,
//   Call mom,
//   Go for a run,
// ]

// Or, if you need to display the position:
for (int i = 0; i &lt; todoList.length; i++) {
  print('${i+1}: ${todoList[i]}');
}
</code></pre>
","1","Answer"
"79497372","79496918","<p>Even if your list contains 100+ names, the performance difference will be negligible.</p>
<p>An odd number of names is managed correctly using similar logic.</p>
<p>The second phase of your process can be simplified as follows:</p>
<pre><code>from itertools import combinations

names = [&quot;ben&quot;, &quot;josh&quot;, &quot;jessy&quot;, &quot;natalia&quot;, &quot;dan&quot;]

pairs = list(combinations(names, 2))

m = len(pairs) // 2

for a, b in zip(pairs[:m], reversed(pairs)):
    print(a, b)
</code></pre>
<pre><code>('ben', 'josh') ('natalia', 'dan')
('ben', 'jessy') ('jessy', 'dan')
('ben', 'natalia') ('jessy', 'natalia')
('ben', 'dan') ('josh', 'dan')
('josh', 'jessy') ('josh', 'natalia')
</code></pre>
","1","Answer"
"79500471","79500466","<p>Correct way to mock sftp-list operation where attributes can be available inside foreach loop:</p>
<pre><code>&lt;flow doc:name=&quot;Flow&quot; &gt;
    &lt;file:list doc:name=&quot;List&quot; config-ref=&quot;File_Config&quot; directoryPath=&quot;/tmp/&quot;/&gt;
&lt;/flow&gt;

&lt;munit-tools:mock-when processor=&quot;file:list&quot;&gt;
    &lt;munit-tools:with-attributes&gt;
       &lt;munit-tools:with-attribute attributeName=&quot;doc:name&quot; whereValue=&quot;List&quot;/&gt;
    &lt;/munit-tools:with-attributes&gt;
    &lt;munit-tools:then-return&gt;
       &lt;munit-tools:payload value=&quot;#[[MunitTools::createMessage( &amp;quot;ITEM-1&amp;quot;,  &amp;quot;text/plain&amp;quot;, { name : 'file1.txt'}, null) , MunitTools::createMessage( &amp;quot;ITEM-2&amp;quot;,  &amp;quot;text/plain&amp;quot;, { name : 'file2.txt'}, null)]]&quot; /&gt;
&lt;/munit-tools:then-return&gt;
&lt;/munit-tools:mock-when&gt;
</code></pre>
","1","Answer"
"79505075","79505042","<p>So I had a coffee and found the a solution. This will create the array of values dependant on x and y.</p>
<pre><code>import numpy as np

x = 5
y = 100
inputArray = np.zeros(x)

squares = [list(inputArray+i) for i in range(y)]
values = ','.join([f&quot;{j}&quot; for j in squares])
</code></pre>
","-1","Answer"
"79507230","79507207","<p>The code you have is correct. You are seeing expected noise around the mean.</p>
<p>Note that for higher N, the relative noise decreases, as expected. For example, this is what you get for <code>N = 10000000</code>:</p>
<pre><code>Counter({'Tuesday': 2000695, 'Thursday': 2000615, 'Wednesday': 2000096, 'Monday': 1999526, 'Friday': 1999068})
</code></pre>
<p>If you need equal or approximately equal (deterministic, rather than random) numbers of each element in random order, try a combination of <a href=""https://docs.python.org/3/library/random.html#random.shuffle"" rel=""nofollow noreferrer""><code>itertools.cycle</code></a>, <a href=""https://docs.python.org/3/library/random.html#random.shuffle"" rel=""nofollow noreferrer""><code>itertools.islice</code></a>  and <a href=""https://docs.python.org/3/library/random.html#random.shuffle"" rel=""nofollow noreferrer""><code>random.shuffle</code></a> like so:</p>
<pre><code>
import random
import collections
import itertools

random.seed(1)

days = ['Monday','Tuesday','Wednesday','Thursday','Friday']
N = 52

# If `N` is not divisible by `len(days)`, this line ensures that the last 
# `N % len(days)` elements of `selections` also stay random:
random.shuffle(days)

selections = list(itertools.islice(itertools.cycle(days), N))
random.shuffle(selections)
print(selections)

counter = collections.Counter(selections)
print(counter)
</code></pre>
<p>Output:</p>
<pre><code>['Friday', 'Friday', 'Wednesday', ...,  'Thursday']
Counter({'Tuesday': 11, 'Monday': 11, 'Friday': 10, 'Wednesday': 10, 'Thursday': 10})
</code></pre>
","5","Answer"
"79507233","79507207","<p>According to the<a href=""https://docs.python.org/3/library/random.html"" rel=""nofollow noreferrer""> documentation</a></p>
<blockquote>
<p>For integers, there is <strong>uniform</strong> selection from a range. For sequences, there is uniform selection of a random element, a function to generate a random permutation of a list in-place, and a function for random sampling without replacement. [emphasis mine]</p>
</blockquote>
<p>The differences you are seeing come down to <em>randomness</em> as you might imagine.</p>
<p>For demonstration, I've set up the same test using <code>choice</code>, <code>uniform</code>, and <code>randint</code> - you'll notice they all provide similar (random) results:</p>
<pre><code>from collections import Counter
from random import choice, seed, uniform, randint

# seed(1)

days = ['Monday','Tuesday','Wednesday','Thursday','Friday']
N = 52

selections = [choice(days) for _ in range(N)]  # what you're doing now
uni = [days[int(uniform(0, len(days)))] for _ in range(N)]
randi = [days[randint(0, len(days) - 1)] for _ in range(N)]

print(Counter(selections))
print(Counter(uni))
print(Counter(randi))
</code></pre>
<p>Output from a random sample:</p>
<pre><code>Counter({'Tuesday': 16, 'Thursday': 13, 'Wednesday': 9, 'Monday': 7, 'Friday': 7})
Counter({'Friday': 14, 'Wednesday': 11, 'Monday': 10, 'Thursday': 9, 'Tuesday': 8})
Counter({'Friday': 15, 'Monday': 12, 'Wednesday': 10, 'Tuesday': 9, 'Thursday': 6})
</code></pre>
","1","Answer"
"79507302","79507207","<p>If you want uniform distribution (which isn't random at all), then you really want to use random choices only for the <em>remainder</em>, which is <code>N % len(days)</code>.</p>
<p>In your example, N is 52 and there are five days in the list, so that's ten occurrences of each day, leaving two remaining choices for random additional days (and you should ensure the same day isn't chosen twice.)</p>
<p>So, make a new list with <code>N // len(days)</code> copies of <code>days</code>, shuffle the list, then add <code>N % len(days)</code> additional random choices.</p>
","0","Answer"
"79507351","79507207","<p>You could build a list of days with a uniform distribution (not randomly) then just shuffle it.</p>
<p>Something like this:</p>
<pre><code>import random
from collections import Counter
days = ['Monday','Tuesday','Wednesday','Thursday','Friday']
N = 52
# populate lista with at least N values then truncate it to the required length
lista = (days * (N//len(days)+1))[:N]
# demonstrate uniformity
print(Counter(lista))
random.shuffle(lista)
print(lista)
</code></pre>
","1","Answer"
"79507462","79507355","<p>Assuming it's equality of the geometry you're interested in then you could utilise the Geometry class's JSON property.</p>
<p>Let's emulate the Geometry class by giving it a JSON property (which is a string) then we can do this:</p>
<pre><code>from random import randint
from json import dumps

# if we had full control over this class we would obviously implement
# two crucial dunder methods - i.e., __lt__ to enable sorting and __eq__ for testing equality
# so let's just emulate the ArcGIS class
class Geometry:
    def __init__(self):
        self._JSON = dumps({&quot;x&quot;: randint(1, 360), &quot;y&quot;: randint(1, 360)})

    @property
    def JSON(self):
        return self._JSON

def are_lists_equal(lista, listb):
    return set(g.JSON for g in lista) == set(g.JSON for g in listb)

lista = [Geometry() for _ in range(10)]
listb = [Geometry() for _ in range(10)]

print(are_lists_equal(lista, listb))
</code></pre>
","1","Answer"
"79507502","79507355","<p>You need to implement a method like the following:</p>
<pre><code>def objectListsNotEqual( list_1, list_2 ):
    if( len( list_1 ) != len( list_2 )):
        return True

    used = []
    
    for i in range( len( list_1 )):
        find = True
        for k in range( len( list_2 )):
            if k in used: continue
            if( list_1[ i ],equals( list_2[ k ] )):
                used.append( k )
                find = False
                break
        if find: return False
    return True

print( objectListsNotEqual( list_1, list_2 ))
</code></pre>
<p>We use the <strong>used</strong> list to save the index of the items that have already been found.</p>
<p>In the outer <strong>for</strong> we instantiate <strong>find</strong> as &quot;true&quot;, which will allow us to know if after completing the iteration of the inner <strong>for</strong>, the searched value was found.</p>
<p>In the inner <strong>for</strong> we check if the index has already been used, in which case, we move on to the next iteration, and if not, we compare the two objects, if they are equal, we add the index to the visited ones, set <strong>find</strong> to &quot;false&quot; and exit the loop.</p>
<p>After the inner <strong>for</strong> if <strong>find</strong> is &quot;true&quot; (no equal object has been found) we return &quot;false&quot;.</p>
<p>If the outer <strong>for</strong> ends, we return &quot;true&quot;.</p>
","0","Answer"
"79507551","79507207","<p>The frequencies don't change, so a simpler solution would be to just assign frequencies to a randomly-shuffled list of keys:</p>
<pre><code>#!/usr/bin/env python

import random

days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']
N = 52

random.shuffle(days)

n_days = len(days)
days_counter = {day: 0 for day in days}
for i in range(0, N):
    day = days[i % n_days]
    days_counter[day] += 1

assert(sum(days_counter.values()) == N)
print(days_counter)
</code></pre>
<p>If you then need a uniform sample of days from these frequencies, you can use rejection sampling:</p>
<pre><code>days_sample = []
while len(days_sample) &lt; N:
    day_idx = random.randint(0, n_days - 1)
    day = days[day_idx]
    if days_counter[day] &gt; 0:
        days_counter[day] -= 1
        days_sample.append(day)

assert(len(days_sample) == N)
print(days_sample)
</code></pre>
","0","Answer"
"79514620","79514576","<p>I would do something like this:</p>
<pre><code>BLOCK_PATTERN = Regexp.union([&quot;word_1&quot;, &quot;word_2&quot;, &quot;...&quot;])  
INPUT_FILE    = &quot;input.txt&quot;  
OUTPUT_FILE   = &quot;output.txt&quot;  

File.open(OUTPUT_FILE, &quot;w&quot;) do |output_file|  
  File.foreach(INPUT_FILE) do |line|  
    output_file &lt;&lt; line.gsub(BLOCK_PATTERN, &quot;DELETED&quot;)  
  end  
end
</code></pre>
","1","Answer"
"79514842","79514575","<p>The compiler error <code>Cannot resolve constructor 'JWKSet(List&lt;RSAKey&gt;)'</code> is caused by the different signatures of <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/stream/Stream.html#collect(java.util.stream.Collector)"" rel=""nofollow noreferrer""><code>collect()</code></a> and <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/stream/Stream.html#toList()"" rel=""nofollow noreferrer""><code>toList()</code></a>.</p>
<pre><code>&lt;R,A&gt; R collect(Collector&lt;? super T,A,R&gt; collector)
</code></pre>
<pre><code>List&lt;T&gt; toList()
</code></pre>
<p>The terminal operation <code>collect()</code> accepts a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/stream/Collector.html"" rel=""nofollow noreferrer""><code>Collector</code></a>, which is simply a <em>mutable</em> reduction operation, that starts from a type <code>T</code> (in your case, <code>RSAKey</code>), and returns a container <code>R</code> of accumulated <em>transformed</em> results.</p>
<blockquote>
<p>accumulates input elements into a mutable result container, optionally transforming the accumulated result into a final representation after all input elements have been processed</p>
</blockquote>
<p>When you assign the result of the stream to <code>List&lt;RSAKey&gt; collect</code>, no transformation is performed on the <code>RSAKey</code> elements. The end result <code>R</code> basically corresponds to a list of the supplied elements (<code>List&lt;T&gt;</code>, in your case <code>List&lt;RSAKey&gt;</code>). However, when the same stream appears as an argument for <code>JWKSet</code>'s constructor, the compiler tries to find a matching signature, and the only one available is <code>JWKSet(List&lt;JWK&gt;)</code>. Therefore, every <code>RSAKey</code> element of the stream is <em>transformed</em> (upcast) to <code>JWK</code>, returning <code>List&lt;JWK&gt;</code>.</p>
<p>On the other hand, <code>toList()</code> simply returns a <code>List</code> of the elements streamed. Therefore, the list you're obtaining is <code>List&lt;RSAKey&gt;</code>, and not <code>List&lt;JWK&gt;</code>. This is because <a href=""https://github.com/felx/nimbus-jose-jwt/blob/master/src/main/java/com/nimbusds/jose/jwk/RSAKey.java#L1948"" rel=""nofollow noreferrer""><code>toPublicJWK()</code></a> return type is <code>RSAKey</code> (not <code>JWK</code>), and since <code>List&lt;RSAKey&gt;</code> is not a subtype of <code>List&lt;JWK&gt;</code> (even though <code>RSAKey</code> is a subtype of <code>JWK</code>), you're receiving a compiler error when providing the stream to <code>JWKSet</code>'s constructor. For more details about subtyping with generics, I recommend this <a href=""https://angelikalanger.com/GenericsFAQ/FAQSections/ParameterizedTypes.html#FAQ006"" rel=""nofollow noreferrer"">article</a> by Angelika Langer.</p>
<p>In your case, I would just stick with <code>collect()</code>, but if you really want (or need) to use <code>toList()</code>, you can simply cast each element of the stream to <code>JWK</code>.</p>
<pre><code>JWKSet mySet = new JWKSet(keys
    .stream()
    .map(RSAKey::toPublicJWK)   // I've left this invocation, because I don't know if it's really necessary to what you're doing
    .map(JWK.class::cast)
    .toList());
</code></pre>
","2","Answer"
"79516109","79516057","<p>Using <code>{-# LANGUAGE ExtendedDefaultRules #-}</code> solves the problem and the first example works with it. Thank you @snak for the tip!!</p>
","1","Answer"
"79517594","79516057","<blockquote>
<p>For example, if you had this code and gave <code>a</code> a specific type then it would no longer work:</p>
<pre class=""lang-hs prettyprint-override""><code>main=do
   print $ zipWith (+) a [1,2]
   print $ zipWith (zipWith (+)) a [[1],[2]]
   where
      a = []
</code></pre>
</blockquote>
<p>You can give <code>a</code> a type in two different places:</p>
<ol>
<li><p>At the definition site:</p>
<pre class=""lang-hs prettyprint-override""><code>main=do
   print $ zipWith (+) a [1,2]
   print $ zipWith (zipWith (+)) a [[1],[2]]
   where
     a :: [Int] 
     a = []
</code></pre>
<p>This does indeed break the code.</p>
</li>
<li><p>At the use sites:</p>
<pre class=""lang-hs prettyprint-override""><code>main=do
   print $ zipWith (+) (a :: [Int]) [1,2]
   print $ zipWith (zipWith (+)) (a :: [[Int]]) [[1],[2]]
   where
     a = []
</code></pre>
<p>This does not break the code.</p>
</li>
</ol>
<p>So if you want to reuse the same variable or function in many places, but still disambiguate its type, then you should specify the specific type at the use sites.</p>
","2","Answer"
"79517724","79517619","<p>The thing that causes the struct copy is the indexer <code>get</code>, i.e.</p>
<pre><code> exampleList[i] &lt;=== this bit
</code></pre>
<p>You can, however, get around that <em>if you absolutely need to</em>, using <code>CollectionsMarshal.AsSpan</code>. This would only usually be appropriate/relevant for <em>large</em> structs and non-changing lists. It <strong>is not necessary in your example</strong>.</p>
<pre class=""lang-cs prettyprint-override""><code>var span = CollectionsMarshal.AsSpan(exampleList);
for (int i = 0 ; i &lt; span.Length; i++)
{
    if (span[i].a == 1) {...}
}
</code></pre>
<p>The indexer on a <em>span</em> is a <code>ref</code> access, i.e. to the underlying data <em>without</em> a copy.</p>
<p>Note that a mutable <code>struct</code> is a bad idea, and could cause a lot of problems; it would be a good idea to make <code>ExampleStruct</code> a <code>readonly struct</code></p>
","3","Answer"
"79517725","79517619","<p>In a sense, yes, because the struct itself (as opposed to a reference) is returned as the output of the list index operator.</p>
<p>This is not specific to lists, or the index operator (which may be why you can't find documentation for that specific case), but it is true for <em>any</em> function that returns a <code>struct</code> value.</p>
<p>The next questions are - is that a problem?  What problems do you anticipate by returning a struct instead of a reference to an object? If you think this is a problem, then why do you define it as a <code>struct</code> in the first place? Do the benefits you wanted by using a struct outweigh the drawbacks of passing the data around instead of a reference?</p>
","0","Answer"
"79518096","79516057","<p>If you need your empty lists to stay flexible, then annotate something else.</p>
<pre><code>import Data.List
main = print $ (elemIndices :: [Bool] -&gt; [[Bool]] -&gt; [Int]) [] []
</code></pre>
<p>This can be made more compact with type applications.</p>
<pre><code>{-# Language TypeApplications #-}
import Data.List
main = print $ elemIndices @[Bool] [] []
</code></pre>
","0","Answer"
"79520628","79520526","<p>The first branch of the match returns <code>[[], [], []]</code> which is of type <code>(list * list * list) list</code> - that is, a list of triples, where each element of the triples is also a list.</p>
<p>But the second branch returns <code>[a::d; b::e; c::f]</code>, which is of type <code>list list</code>, which is a list of lists.</p>
<p>So your function returns two different types, which cannot happen. You need to bring them into sync.</p>
<p>Either return a list of lists from the first branch:</p>
<pre><code>    | [] -&gt; [[]; []; []]
</code></pre>
<p>Or return a list of triples form the second:</p>
<pre><code>      | [d, e, f] -&gt; [a::d, b::e, c::f]
</code></pre>
<hr />
<p>Note that this only explains your immediate error and how to get rid of it. Your solution to the problem you're stating is still very much incorrect for multiple reasons. For one, you're only handling matrices with three rows.</p>
","2","Answer"
"79524182","79524177","<p>So I figured out what I was doing wrong.</p>
<p>I was using .GetType() when I needed to be using .GetClass()</p>
<p>I spent an hour searching and minutes after posting this I found a thread with the answer.</p>
<p><a href=""https://discussions.unity.com/t/add-script-component-to-game-object-from-c/590211"" rel=""nofollow noreferrer"">https://discussions.unity.com/t/add-script-component-to-game-object-from-c/590211</a> Heres the link I suppose</p>
","2","Answer"
"79525736","79525693","<p>Your head becomes the next element of the linked list through head-&gt;next, but in main your start still points to the original head, but this head has been deleted.</p>
","2","Answer"
"79526870","79526855","<p>Now that i know the split function creates a new list that can't be saved, I found a new way of changing the values.</p>
<pre><code>health_list = healths[ct].split(&quot;,&quot;)
health_list[cn] = str(int(health_list[cn]) - damage)
healths[ct] = &quot;,&quot;.join(health_list)
</code></pre>
<p>I need to just make a temporary list as a placeholder then join the list back together with the new value.</p>
","0","Answer"
"79528429","79528112","<p>I believe the following would suit your requirement:</p>
<pre><code>@ECHO OFF
SETLOCAL ENABLEDELAYEDEXPANSION
rem The following setting for the directory is a name
rem that I use for testing and deliberately includes spaces to make sure
rem that the process works using such names. These will need to be changed to suit your situation.

SET &quot;sourcedir=u:\your files&quot;
SET &quot;logfilename=%sourcedir%\q79528112.txt&quot;

SET &quot;filesrequired=*.cpp final.exe&quot;
SET &quot;abort=&quot;

CALL :existing
IF DEFINED abort GOTO cleanup
FC &quot;%logfilename%&quot; &quot;%logfilename%.new&quot; &gt;NUL 2&gt;nul
IF ERRORLEVEL 1 (
 ECHO recompile game
 CALL :existing
 MOVE /y &quot;%logfilename%.new&quot; &quot;%logfilename%&quot; &gt;NUL
)

ECHO run game

:cleanup
DEL &quot;%logfilename%.new&quot; 2&gt;nul

GOTO :EOF

:: Set #?? to current datestamp of required files &amp; record in %logfile%.new
:existing
:: remove variables starting #
FOR  /F &quot;delims==&quot; %%e In ('set # 2^&gt;Nul') DO SET &quot;%%e=&quot;

PUSHD &quot;%sourcedir%&quot;
FOR %%e IN (%filesrequired%) DO (
 IF EXIST &quot;%%e&quot; (SET &quot;#%%e=%%~te&quot;) ELSE SET &quot;abort=y&quot;&amp;ECHO %%e NOT found
)
popd

SET #&gt;&quot;%logfilename%.new&quot;

GOTO :eof

</code></pre>
<p>The name of the logfile simply suits my testing setup.</p>
<p>The routine <code>existing</code> sets <code>#filename</code> to the datestamp of each file found on the <code>filesrequired</code> list, sets <code>abort</code> to <code>y</code> if any are missing and writes the list of filenames/datestamps to <code>logfile.new</code>.</p>
<p>Then check whether the new logfile is the same as the old. If not, or one of the files is missing then recompile, reset the #variables with the new versions and re-write the log file.</p>
<p>Then run the game and clean up any unwanted files.</p>
","0","Answer"
"79528939","79528915","<p>the problem is that you're only passing one of the lists (<code>periods</code> or <code>paydates</code>) to the template at a time because in your <strong>urls.py</strong> the second <code>path('', views.dates)</code> overwrites the first one <strong>(views.main)</strong>.</p>
<p>So when Django renders <strong>home.html</strong>, only <code>paydates</code> or <code>periods</code> is available, not both.</p>
<p>try this code</p>
<h5>views.py</h5>
<pre><code>    from django.shortcuts import render
from django.http import HttpRequest
from django.http import HttpResponse

periods = [
  {'id': 0, 'period': '15/06/2025'},
  {'id': 1, 'period': '29/06/2025'},
  {'id': 2, 'period': '13/07/2025'},
  {'id': 3, 'period': '27/07/2025'},
  {'id': 4, 'period': '10/08/2025'},
  {'id': 5, 'period': '24/08/2025'},
  {'id': 6, 'period': '07/09/2025'},
  {'id': 7, 'period': '21/09/2025'},
  {'id': 8, 'period': '05/10/2025'},
  {'id': 9, 'period': '19/10/2025'},
  {'id': 10, 'period': '02/11/2025'},
  {'id': 11, 'period': '16/11/2025'},
  {'id': 12, 'period': '30/11/2025'},
  {'id': 13, 'period': '14/12/2025'},
  {'id': 14, 'period': '28/12/2025'},
  {'id': 15, 'period': '11/01/2026'},
  {'id': 16, 'period': '25/01/2026'},
  {'id': 17, 'period': '08/02/2026'},
  {'id': 18, 'period': '22/02/2026'},
  {'id': 19, 'period': '08/03/2026'},
  {'id': 20, 'period': '22/03/2026'},
  {'id': 21, 'period': '05/04/2026'},
  {'id': 22, 'period': '19/04/2026'},
  {'id': 23, 'period': '03/05/2026'},
  {'id': 24, 'period': '17/05/2026'},
  {'id': 25, 'period': '31/05/2026'},
  {'id': 26, 'period': '14/06/2026'}
]

paydates = [
  {'id': 0, 'paydate': '02/07/2026'},
  {'id': 1, 'paydate': '02/07/2026'},
  {'id': 2, 'paydate': '02/07/2026'},
  {'id': 3, 'paydate': '02/07/2026'},
  {'id': 4, 'paydate': '02/07/2026'},
  {'id': 5, 'paydate': '02/07/2026'},
  {'id': 6, 'paydate': '02/07/2026'},
  {'id': 7, 'paydate': '02/07/2026'},
  {'id': 8, 'paydate': '02/07/2026'},
  {'id': 9, 'paydate': '02/07/2026'},
  {'id': 10, 'paydate': '02/07/2026'},
  {'id': 11, 'paydate': '02/07/2026'},
  {'id': 12, 'paydate': '02/07/2026'},
  {'id': 13, 'paydate': '02/07/2026'},
  {'id': 14, 'paydate': '02/07/2026'},
  {'id': 15, 'paydate': '02/07/2026'},
  {'id': 16, 'paydate': '02/07/2026'},
  {'id': 17, 'paydate': '02/07/2026'},
  {'id': 18, 'paydate': '02/07/2026'},
  {'id': 19, 'paydate': '02/07/2026'},
  {'id': 20, 'paydate': '02/07/2026'},
  {'id': 21, 'paydate': '02/07/2026'},
  {'id': 22, 'paydate': '02/07/2026'},
  {'id': 23, 'paydate': '02/07/2026'},
  {'id': 24, 'paydate': '02/07/2026'},
  {'id': 26, 'paydate': '02/07/2026'}
]


def main(request):
    return render(request, 'appmain/home.html', {'periods': periods, 'paydates': paydates})
</code></pre>
<h5>url.py</h5>
<pre><code>from django.urls import path
from . import views

urlpatterns = [
    path('', views.main),
]

</code></pre>
<p>now both <code>periods</code> and <code>paydates</code> will be available in the template, and the <code>{% for paydate in paydates %}</code> loop will actually have data to iterate over.</p>
","0","Answer"
"79530435","79529772","<p>There are a few issues in your code that may be causing misalignment:</p>
<p><strong>Incorrect HTML elements:</strong></p>
<p><code>&lt;li_large&gt;</code> is not a valid HTML element. You should use <code>&lt;li&gt; and assign a class to it, e.g., </code>```.</p>
<p><strong>CSS selector issues:</strong></p>
<p><code>ul_large</code> should be <code>.ul_large</code> if you are referring to a class.</p>
<p><code>li_large</code> should be <code>.li_large</code> (class selector).</p>
<p><strong>Fixing Alignment:</strong></p>
<p>To make sure the text aligns properly with the numbered circle, you can use flexbox.</p>
<p>Your code should be:</p>
<pre><code>&lt;ul class=&quot;ul_large&quot;&gt;
  &lt;li class=&quot;li_large&quot;&gt;
    &lt;span class=&quot;boldblack&quot;&gt;Step 1 text title here&lt;/span&gt;
    &lt;h6 class=&quot;boldgreen&quot;&gt;
      Step 1 description with more information here. Step 1 description with more information here.
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 description with more information here.
      &lt;/span&gt;
      &lt;br&gt;
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 description with more information here.
      &lt;/span&gt;
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 description with more information here.
      &lt;/span&gt;
      &lt;span class=&quot;boldgreen&quot;&gt;
        Step 1 description with more information here.
      &lt;/span&gt;
    &lt;/h6&gt;
  &lt;/li&gt;

  &lt;li class=&quot;li_large&quot;&gt;
    &lt;span class=&quot;boldblack&quot;&gt;Step 2 text title here&lt;/span&gt;
    &lt;h6 class=&quot;boldgreen&quot;&gt;
      Step 2 description with more information here. Step 2 description with more information here. Step 2 description with more information here.
      &lt;br&gt;
      Step 2 description with more information here. Step 2 description with more information here. Step 2 description with more information here.
    &lt;/h6&gt;
  &lt;/li&gt;

  &lt;li class=&quot;li_large&quot;&gt;
    &lt;span class=&quot;boldblack&quot;&gt;Step 3 text title here&lt;/span&gt;
    &lt;h6 class=&quot;boldgreen&quot;&gt;
      Step 3 description with more information here. Step 3 description with more information here. Step 3 description with more information here.
      &lt;br&gt;
      Step 3 description with more information here. Step 3 description with more information here. Step 3 description with more information here.
    &lt;/h6&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</code></pre>
<pre><code>/* Large bullet list */
.ul_large {
  counter-reset: section;
  list-style: none;
  padding-left: 0;
}

.li_large {
  counter-increment: section;
  display: flex;
  align-items: flex-start;
  margin: 0 0 20px 0;
}

.li_large::before {
  content: counter(section);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  color: white;
  border: 1px solid black;
  background: black;
  border-radius: 50%;
  font-size: 20px;
  font-weight: bold;
  margin-right: 10px;
  flex-shrink: 0;
}
</code></pre>
","0","Answer"
"79532229","79532018","<p>Just like the error message say, when you use <code>List.Combine(Query_2[Input])</code>, it tries to combine the text values rather than the actual lists.  Instead you can try:</p>
<pre><code>let
    // Your original table
    Query_1 = #table(
        {&quot;Dataset 1&quot;, &quot;Dataset 2&quot;, &quot;Dataset 3&quot;},
        {
            {&quot;DS1_Step1&quot;, &quot;DS2_Step1&quot;, &quot;DS3_Step1&quot;},
            {&quot;DS1_Step2&quot;, null, &quot;DS3_Step2&quot;},
            {&quot;DS1_Step3&quot;, null, null}
        }
    ),

    // Parameter table
    ParameterTable = #table(
        {&quot;Dataset&quot;},
        {
            {&quot;Dataset 1&quot;},
            {&quot;Dataset 3&quot;}
        }
    ),

    // Filter the original table based on the parameter table
    FilteredColumns = Table.SelectColumns(Query_1, ParameterTable[Dataset]),

    // Combine the steps from the filtered datasets
    CombinedSteps = List.Combine(Table.ToColumns(FilteredColumns))
in
    CombinedSteps
</code></pre>
<p>or you can do the last step in a single like:</p>
<pre><code>FilterAndCombine = List.Combine(
    List.Transform(ParameterTable[Dataset], each Table.Column(Query_1, _)))
</code></pre>
","1","Answer"
"79532882","79532783","<p>If you have these 4 arrays, you start with putting them in a dictionary like so:</p>
<pre><code>EDUCATION_LEVELS = {
    'high_school': ['grade 9', 'grade 10', 'grade 11', 'grade 12'],
    'undergrad': ['BS', 'B.Com', 'B.Ed', 'BA', 'LLB'],
    'masters': ['MA', 'MBA', 'M.Ed', 'MPA', 'LLM', 'MTech', 'M.Tech'],
    'doctorate': ['PhD', 'MD', 'DO']  
    }
</code></pre>
<p>After that the easiest is to define a custom mapper and use <code>apply</code> on the column:</p>
<pre><code>def map_education(x):
    for k, v in EDUCATION_LEVELS.items():
        if x in v:
            return k
    return np.nan

df['education'].apply(map_education)
</code></pre>
<p>That should do the trick.</p>
","0","Answer"
"79532894","79532783","<p>My solution does not pretend to be perfect. If I understood you correctly, you would not want to paint a large dictionary of correspondence with your own hands. We can make a spread of the catalog that you have already prepared using the inclusion of the list. For convenience, all this logic can be hidden in a separate function.</p>
<pre class=""lang-py prettyprint-override""><code>def get_grade(education: str) -&gt; str | None:
    glossary = {
        &quot;high_school&quot;: [&quot;grade 9&quot;, &quot;grade 10&quot;, &quot;grade 11&quot;, &quot;grade 12&quot;],
        &quot;undergrad&quot;: [&quot;BS&quot;, &quot;B.Com&quot;, &quot;B.Ed&quot;, &quot;BA&quot;, &quot;LLB&quot;],
        &quot;masters&quot;: [&quot;MA&quot;, &quot;MBA&quot;, &quot;M.Ed&quot;, &quot;MPA&quot;, &quot;LLM&quot;, &quot;MTech&quot;, &quot;M.Tech&quot;],
        &quot;doctorate&quot;: [&quot;PhD&quot;, &quot;MD&quot;, &quot;DO&quot;],
    }
    # swapping the key and values
    glossary_pivot = {
        value: key for key, values in glossary.items() for value in values
    }
    return glossary_pivot.get(education, None)
</code></pre>
<p>The function takes the name of the education as an argument and returns the corresponding grade. If the transferred education is not in the directory, it returns None.
We apply it using the map method.</p>
<pre class=""lang-py prettyprint-override""><code>df['level'] = df['education'].map(get_grade)
</code></pre>
","0","Answer"
"79533785","79532018","<p>Seems to me the problem is how the user is going to select the data sets, since you do not indicate how that is actually done in your question. <em>(The rest is relatively simple).</em></p>
<p>Here's one suggestion.</p>
<p>Someplace in your workbook</p>
<ul>
<li>Create a Table named, for example, <code>Dataset_Chooser</code></li>
<li>Make the table with enough rows to accomodate any reasonable number of choices</li>
<li>Use <code>Data Validation</code> so the choices are limited to the Header range of your <code>Query_1</code> table.
<ul>
<li>You may need to code this specifically: eg. <code>$A$1:$C$1</code></li>
</ul>
</li>
<li>The user can then choose any of the datasets any number of times</li>
</ul>
<p>For your <code>M-Code</code>:</p>
<pre><code>let

//Read in your table
//May need to change the Name if your actual table name is different
    Source = Excel.CurrentWorkbook(){[Name=&quot;Query_1&quot;]}[Content],

//Set the data types to type text
    #&quot;Changed Type&quot; = Table.TransformColumnTypes(Source,
        List.Transform(Table.ColumnNames(Source), each {_, type text})),

//Get the users choices as a list
    #&quot;Choose&quot; = List.Buffer(List.RemoveNulls(Excel.CurrentWorkbook(){[Name=&quot;Dataset_Chooser&quot;]}[Content][DataSets])),

//Combine the results
    #&quot;Result&quot; = List.Accumulate(
            #&quot;Choose&quot;,
            {},
            (s,c)=&gt; s &amp; Table.Column(#&quot;Changed Type&quot;,c))

in
    #&quot;Result&quot;
</code></pre>
<p><em><strong>Query_1</strong></em><br />
<a href=""https://i.sstatic.net/w2blR2Y8.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/w2blR2Y8.png"" alt=""enter image description here"" /></a></p>
<p><em><strong>Dataset_Chooser</strong></em><br />
<a href=""https://i.sstatic.net/0ufhwfCY.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/0ufhwfCY.png"" alt=""enter image description here"" /></a></p>
<p><em><strong>Results</strong></em><br />
<a href=""https://i.sstatic.net/Hl9WnGZO.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Hl9WnGZO.png"" alt=""enter image description here"" /></a></p>
","0","Answer"
"79534272","79534214","<p>You can try</p>
<pre class=""lang-r prettyprint-override""><code>split(df, seq(nrow(df))) |&gt;
  lapply(\(.) gsub('^\\[|\\]$', '', jsonlite::toJSON(., pretty=TRUE)))
</code></pre>
<pre class=""lang-r prettyprint-override""><code>$`1`

  {
    &quot;first_name&quot;: &quot;John&quot;,
    &quot;last_name&quot;: &quot;Doe&quot;,
    &quot;age&quot;: 20
  }
 

$`2`

  {
    &quot;first_name&quot;: &quot;Jane&quot;,
    &quot;last_name&quot;: &quot;Doe2&quot;,
    &quot;age&quot;: 30
  }
</code></pre>
<p>if you really need each row as separate list element structured in JSON format.</p>
","1","Answer"
"79534364","79534214","<p>Here's a working <code>split</code> method. Your insight that a <code>list</code> input leaves off the square brackets you don't want guides us to use <code>as.list()</code> on the input.</p>
<pre><code>df |&gt; 
  split(1:nrow(df)) |&gt;
  lapply(
    \(x) jsonlite::toJSON(as.list(x), pretty = TRUE, auto_unbox = TRUE)
  )
# $`1`
# {
#   &quot;first_name&quot;: &quot;John&quot;,
#   &quot;last_name&quot;: &quot;Doe&quot;,
#   &quot;age&quot;: 20
# } 
# 
# $`2`
# {
#   &quot;first_name&quot;: &quot;Jane&quot;,
#   &quot;last_name&quot;: &quot;Doe2&quot;,
#   &quot;age&quot;: 30
# } 
</code></pre>
","1","Answer"
"79534621","79534214","<p>Use <code>toJSON(unbox(...))</code> with <code>by</code> giving the character vector shown.</p>
<pre><code>library(jsonlite)

c(by(df, 1:nrow(df), \(x) toJSON(unbox(x))))

##                                                             1 
##  &quot;{\&quot;first_name\&quot;:\&quot;John\&quot;,\&quot;last_name\&quot;:\&quot;Doe\&quot;,\&quot;age\&quot;:20}&quot; 
##                                                             2 
## &quot;{\&quot;first_name\&quot;:\&quot;Jane\&quot;,\&quot;last_name\&quot;:\&quot;Doe2\&quot;,\&quot;age\&quot;:30}&quot; 


</code></pre>
","2","Answer"
"79535098","79535068","<p>I think this is what you want?</p>
<pre><code>
chromatic_notes = [&quot;A&quot;, &quot;A#&quot;, &quot;B&quot;, &quot;C&quot;, &quot;C#&quot;, &quot;D&quot;, &quot;D#&quot;, &quot;E&quot;, &quot;F&quot;, &quot;F#&quot;, &quot;G&quot;, &quot;G#&quot;]
scale = [&quot;1&quot;, &quot;m2&quot;, &quot;2&quot;, &quot;m3&quot;, &quot;3&quot;, &quot;4&quot;, &quot;m5&quot;, &quot;5&quot;, &quot;m6&quot;, &quot;6&quot;, &quot;m7&quot;, &quot;7&quot;]

def get_information(k_c):
    i = chromatic_notes.index(k_c)
    shift = [chromatic_notes[(n+i)%12] for n in range(12)]
    degrees = dict(zip(scale, shift))
    return degrees

print(get_information(&quot;B&quot;)[&quot;2&quot;]) # outputs &quot;C#&quot;
print(get_information(&quot;G&quot;)[&quot;2&quot;]) # outputs &quot;A&quot;
</code></pre>
<p>Here I just removed the enharmonic notes since they are duplicates (and you can also start from &quot;A&quot; instead of &quot;C&quot; equivalently) and then used modular arithmetic to &quot;rotate&quot; the chromatic list.</p>
","0","Answer"
"79537685","79537662","<p>Since you only consider ranges that start and end at multiples of 0.05 (and not e.g. 0.01 ~ 0.06), just doing <code>(x / 0.05).toInt()</code> will tell you which range a number <code>x</code> is in.</p>
<p>So you just group by <code>(x / 0.05).toInt()</code>, and count how many items are in each group, then find the biggest group.</p>
<pre><code>fun rangeLowerBound(list: List&lt;Double&gt;) =
    list.groupingBy { (it / 0.05).toInt() }.eachCount().maxBy { it.value }.key * 0.05
</code></pre>
<p><code>rangeLowerBound(listOf(-0.1, -0.11, -0.13, 0.1, 0.11, 0.12, 0.13))</code> will return 0.1, meaning that the range 0.1 ~ 0.15 contains the most numbers out of all the other ranges.</p>
<p>Note that this assumes the list is non-empty. If the list can be empty, you can use <code>.maxByOrNull { it.value }?.key?.times(0.05)</code> and return that (which would be null if the list is empty), or provide a default value with <code>?:</code>.</p>
","3","Answer"
"79537884","79537866","<p>First of all, I have a question, why are you using pointers to store iterators instead of vector?</p>
<p>When it comes to dereferencing the</p>
<pre><code>.end()
</code></pre>
<p>iterator, doing so <em>always</em> results in undefined behavior within C++, and it's irrespective of any prior initialization. The purpose of the</p>
<pre><code>.end()
</code></pre>
<p>iterator is specifically for making comparisons, not for accessing a value.</p>
","0","Answer"
"79537963","79537866","<p>As you can see in the <a href=""https://en.cppreference.com/w/cpp/container/list/end"" rel=""nofollow noreferrer""><code>std::list::end</code> reference</a>:</p>
<blockquote>
<p>Returns an iterator to the element following the last element of the list.</p>
<p>This element acts as a placeholder; attempting to access it results in <strong>undefined behavior</strong>.</p>
</blockquote>
<p><em>(emphasis is mine)</em></p>
<p>Dereferencing <code>end()</code> is a form of accessing it, and so this invokes UB (<a href=""https://en.wikipedia.org/wiki/Undefined_behavior"" rel=""nofollow noreferrer"">Undefined Behavior</a>).<br />
When UB ensues the standard gives no guarantee about the behavior.<br />
Anything that happens is valid (including a seemingly working program).<br />
In particular there is no requirement to issue an error.</p>
","5","Answer"
"79538031","79537965","<p>The error occurs because your code is modifying the original matrix during the recursive calls, which leads to incorrect submatrix dimensions and eventually an <code>IndexError</code>.</p>
<p>Problems in your code are:</p>
<ol>
<li><p><code>del matrix[0]</code> removes the first row permanently.</p>
</li>
<li><p><code>del row[i]</code> modifies each row, which reduces the matrix's width.</p>
</li>
<li><p>Since you are not making a copy of <code>matrix</code> for each recursive call, it gets progressively smaller and incorrect.</p>
</li>
</ol>
<p>Solution:</p>
<pre><code>def determinant_4x4(matrix: list[list[int | float]]) -&gt; float:
    def recursedet(matrix):
        if len(matrix) == 2:
            return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]
        
        total = 0
        for i in range(len(matrix)):
            ele = matrix[0][i]

            # Create a minor matrix without modifying the original
            minor = [row[:i] + row[i+1:] for row in matrix[1:]]

            total += ele * ((-1) ** i) * recursedet(minor)

        return total
    
    return recursedet(matrix)

# Example usage
matrix_4x4 = [
    [2, 3, 1, 5],
    [1, 0, 2, 4],
    [3, 1, 4, 2],
    [2, 5, 3, 1]
]

print(determinant_4x4(matrix_4x4))
</code></pre>
","2","Answer"
"79538320","79538207","<p>You can create a character string of column name, and inject it on the left-hand side of <code>⁠:=</code>⁠.</p>
<pre class=""lang-r prettyprint-override""><code>imp_fun &lt;- function(df, col) {
  var &lt;- paste0('V', col)
  df %&gt;%
    mutate(!!var := replace_na(.data[[var]], median(.data[[var]], na.rm = TRUE)))
}

newlist &lt;- lapply(mylist, imp_fun, col = ch_column)
</code></pre>
<pre><code>ch_column
# [1] 2

newlist
# [[1]]
#    V1 V2 V3
# 1   3  9  4
# 2  16 15  1
# 3   8 14 10
# 4   2 18  9
# 5  17 15  7
# 6   6 20 13
# 7  10 15 16
# 8  15 17  8
# 9   7  3 17
# 10 11 15 18
# 
# [[2]]
# ...
# 
# [[3]]
# ...
</code></pre>
<hr />
<p>If you are not familiar with how <code>lapply</code> works, the code above is equivalent to the following for loop.</p>
<pre class=""lang-r prettyprint-override""><code>newlist &lt;- list()
ch_column &lt;- sample(1:3, 1)
var &lt;- paste0('V', ch_column)
for (k in 1:3) {
  newlist[[k]] &lt;- mylist[[k]] %&gt;%
    mutate(!!var := replace_na(.data[[var]], median(.data[[var]], na.rm = TRUE)))
}
</code></pre>
","1","Answer"
"79540017","79540013","<blockquote>
<p>I was expecting the output as 2 but it shows it as 3.</p>
</blockquote>
<p>Keep in mind that <code>pop()</code> <em>removes the element from the list</em>.  (At the specified index, which is <code>0</code> here.)  So when you do this:</p>
<pre><code>my_list = [1,2,3,4,5]
a = my_list.pop(0)
</code></pre>
<p>The <code>a</code> variable now has a value of <code>1</code>.  But <code>my_list</code> is now <code>[2,3,4,5]</code>.  So when you do this:</p>
<pre><code>b = my_list.pop(0)
</code></pre>
<p>Then <code>b</code> will have a value of <code>2</code>, and now <code>my_list</code> will be <code>[3,4,5]</code>.</p>
<p>The code is working correctly, the list is simply changing as it goes.</p>
<hr />
<p>To achieve the behavior you're expecting, don't use <code>pop()</code>.  Just reference the element in the list:</p>
<pre><code>my_list = [1,2,3,4,5]  
a = my_list[0]
b = my_list[0]
c = a+b
print(c)
</code></pre>
<hr />
<p>You can learn more about lists in Python <a href=""https://docs.python.org/3/tutorial/datastructures.html"" rel=""nofollow noreferrer"">here</a>.</p>
","3","Answer"
"79540320","79540307","<p>The issue you may be having is that you are trying to print a list element, rather than the underlying vector.  Here is a working snippet:</p>
<pre class=""lang-r prettyprint-override""><code>x &lt;- list(a=0, b=c(1:5))

unlist(sapply(names(x), function(y) paste(y, &quot;contains&quot;, paste(x[[y]], collapse=&quot;,&quot;))))

             a                      b 
&quot;a contains 0&quot; &quot;b contains 1,2,3,4,5&quot;
</code></pre>
<p>I iterate the names of the input list implicitly using <code>sapply</code>.  Then I collapse each list element into a CSV string using <code>paste</code>.  Note carefully that I dereference each list element via <code>x[[y]]</code>, so that I am working with the underlying vector rather than  a list element.</p>
","4","Answer"
"79540354","79540307","<p>You can use <code>sapply</code> + <code>toString</code>, and then paste the result with its name.</p>
<pre class=""lang-r prettyprint-override""><code>x &lt;- list(a = 0, b = c(1:5))

paste(names(x), &quot;contains&quot;, sapply(x, toString))

# or

sprintf(&quot;%s contains %s&quot;, names(x), sapply(x, toString))

# [1] &quot;a contains 0&quot;
# [2] &quot;b contains 1, 2, 3, 4, 5&quot;
</code></pre>
","6","Answer"
"79540403","79540307","<p>Here's two for-loop variations:</p>
<pre><code>tmp &lt;- list(a=NULL, b=c(0,1,1,2,3,5,8,13))
</code></pre>
<pre><code>for (p in 1:length(tmp)) { 
  cat(paste(names(tmp)[p], 'contains'), paste(tmp[[p]], collapse=&quot;,&quot;))
  cat(&quot;\n&quot;)
}

a contains 
b contains 0,1,1,2,3,5,8,13
</code></pre>
<pre><code>for (p in 1:length(tmp)) { 
  print(paste(names(tmp)[p], 'contains', paste(tmp[[p]], collapse=&quot;,&quot;)))
}

[1] &quot;a contains &quot;
[1] &quot;b contains 1,1,2,3,5,8,13&quot;
</code></pre>
","3","Answer"
"79542994","79542988","<p>One simple way would be function along the following lines:</p>
<pre><code>def update_score(score, name, value):
    for entry in score:
        if entry[0] == name:
            entry[1] = value
            break
    else:
        score.append([name, value])
</code></pre>
<p>THis uses a for-else construct, which executes the else block if the loop was not broken out of.</p>
","0","Answer"
"79544009","79540307","<p>Not exactly the same as what you are after, but should help a bit if you use <code>capture.output</code> + <code>str</code></p>
<pre><code>&gt; tmp &lt;- list(a = integer(0), b = 1:10)

&gt; capture.output(str(tmp))[-1]
[1] &quot; $ a: int(0) &quot;
[2] &quot; $ b: int [1:10] 1 2 3 4 5 6 7 8 9 10&quot;
</code></pre>
","1","Answer"
"79549279","79549268","<p>while both of those work, there is a much quicker way to do so:</p>
<pre><code>words = ['This', 'is', 'a', 'list']
separator = '-'

#then, to join the words together
new = separator.join(words)
print(new)
</code></pre>
","1","Answer"
"79549281","79549268","<p>Both options have issues. Both call <code>words.index(word)</code> which searches the list every time. Also in both it returns the index of the first occurrence. If your list has duplicates, the logic would break.</p>
<p>Python offers a very nice way to join items with a separator:</p>
<pre class=""lang-py prettyprint-override""><code>words = ['This', 'is', 'a', 'list']
separator = ' - '
print(separator.join(words))
</code></pre>
","1","Answer"
"79549286","79549268","<p>Both are terrible. On top of being more verbose than necessary, and incorrect (see final paragraph), they're both <code>O(n²*m)</code> (<a href=""https://stackoverflow.com/q/487258/364696"">Big O explanation</a>) algorithms, relying on a <code>O(n*m)</code> <code>index</code> call for each element in the input, along with the unavoidable <code>O(m)</code> work to <code>print</code> (<code>n</code> is the length of <code>words</code>, <code>m</code> the average length of the strings). This means on large inputs, they can become <em>very</em> slow (each doubling of the input size, with word length held constant, quadruples the work required).</p>
<p>There are two reasonable ways to do this:</p>
<ol>
<li><p>The trivial way for simple cases:</p>
<pre><code>print(*words, sep=separator)
# or
print(separator.join(words))
</code></pre>
<p>They both do <code>O(n*m)</code> work (<code>n</code> and <code>m</code> retaining their same definition as before), with the former printing the elements individually via unpacking, replacing the default <code>sep</code> (a single space) with the specified <code>separator</code> inserted between each of the unpacked positional arguments (avoiding building any large intermediate strings), while the latter creates and prints a single string (theoretically suboptimal, due to using more memory and involving more memory copies, but possibly more efficient if it lets the entire I/O occur as a single system call; both are the same big-O on computation, so either is reasonable unless performance becomes an issue, at which point you'd profile to identify the slow spot). The former has a slight advantage when <code>words</code> contains non-<code>str</code> objects, as it continues to work, implicitly converting to <code>str</code> with no changes, while the latter would need to change to <code>print(separator.join(map(str, words)))</code> or <code>print(separator.join(str(word) for word in words))</code> to explicitly convert before <code>join</code>ing.</p>
</li>
<li><p>The complex way for when more logic is needed:</p>
<pre><code>for i, word in enumerate(words):
    # do stuff to calculate an output
    if i == len(words) - 1:  # Ideally you compute and cache the length outside the loop, but this is fine normally
        print(output)
    else:
        print(output, end=separator)

    # Or to one-line the output:
    print(output, end=separator if i &lt; len(words) - 1 else &quot;\n&quot;)
</code></pre>
<p>This is closer to what you wrote, but performant, it doesn't perform repeated <code>O(n)</code> <code>index</code> scans. It's useful if real work is needed to convert from <code>word</code> to the expected output string, but it's otherwise overly verbose and slower than the earlier options.</p>
</li>
</ol>
<p>On top of being more performant, these are all more correct than your solution, since your solution would misbehave (inserting the separator at the end) in a simple case like <code>words = [&quot;a&quot;, &quot;a&quot;]</code>, because <code>words.index(&quot;a&quot;)</code> will <em>always</em> return <code>0</code> in this case, for both copies of <code>&quot;a&quot;</code>, because <code>index</code> stops looking when it finds an equal element, and the last element is equal to an earlier element.</p>
<hr />
<h4>How to determine this on your own</h4>
<p>To understand how to select the most efficient algorithms, you need to learn:</p>
<ol>
<li><a href=""https://en.wikipedia.org/wiki/Big_O_notation"" rel=""nofollow noreferrer"">The definition of big-O</a> and how it's calculated (knowing that a loop is <code>O(n)</code>, but a loop over <code>n</code> items that does <code>O(n)</code> work per item becomes <code>O(n²)</code>). This is typically a significant component of an undergraduate Computer Science Theory course; simple cases like this are easy to eyeball, but more complex algorithms can be tricky to analyze without a formal grounding.</li>
<li>The big-O cost of the various components of your work (e.g. that <code>list.index</code> is a <code>O(n*m)</code> operation, usually abbreviated to <code>O(n)</code> when the length of individual words is de minimus)</li>
</ol>
<p>I've done both of these for you, but it's useful to know how to do them yourself.</p>
<p>Once you are able to write an <em>algorithmically</em> optimal solution, choosing between them involves:</p>
<ol>
<li>The self-restraint to not optimize prematurely; avoiding a nasty big-O is usually acceptable without analysis if the input is known to not be well-bounded, but micro-optimizations <em>within</em> a given big-O &quot;tier&quot; should be avoided in favor of clear code until testing and profiling proves the code in question is too slow</li>
<li>Benchmarking/profiling (with <code>timeit</code> and <code>profile</code> modules, for example) to measure performance of snippets or whole programs</li>
</ol>
<p>I have <em>not</em> done either of these. I have a pretty good intuition (I do microbenchmarking of the CPython interpreter as part of testing patches I submit, so I've seen how a lot of string-oriented code like this performs), but I would absolutely choose the simplest available option with acceptable performance without much thought, and defer micro-optimizing until a demonstrated need exists (so I guess I have done the part of #1 that involves exercising self-restraint).</p>
","5","Answer"
"79549643","79549626","<p>Unlike <code>sorted</code>, the <code>list.sort</code> method sorts a list in-place, during which time the list is in an interim state where there is no integrity to its internal data structure for the other methods to read from.</p>
<p>Since a key function for the <code>sort</code> method is called during a sort, your calling the <code>count</code> method of the same list in the key function does not actually return the count of a given item as you expect, which you can see with a wrapper function:</p>
<pre><code>def count(x):
    n = nums.count(x)
    print(n)
    return n

nums = [2, 4, 1, 2]
nums.sort(key=count)
</code></pre>
<p>the above outputs:</p>
<pre><code>0
0
0
0
</code></pre>
<p>which explains why the list remains in the same order since the key for each item turns out to be the same value of 0 and since the sorting algorithm used is a stable one.</p>
<p>The <a href=""https://docs.python.org/3/library/stdtypes.html#list.sort"" rel=""noreferrer"">documentation</a> of <code>list.sort</code> also notes:</p>
<blockquote>
<p>CPython implementation detail: While a list is being sorted, the effect of attempting to mutate, or even inspect, the list is undefined. The C implementation of Python makes the list appear empty for the duration, and raises <code>ValueError</code> if it can detect that the list has been mutated during a sort.</p>
</blockquote>
<p>So CPython's implementation makes the list appear empty during a sort, which explains why <code>list.count</code> returns 0 when called from a key function.</p>
","5","Answer"
"79550560","79550512","<p>I guess, I found a solution - hope that would safe some time for future readers</p>
<pre><code>struct FoundDeviceListView&lt;Model&gt;: View where Model: ScanProtocol {
    @ObservedObject var scanModel: Model
    
    var body : some View {
        List(scanModel.peripherals, id: \.identifier) { peripheral in
            NavigationLink(
                &quot;\(peripheral.name) ( \(peripheral.identifier) ) \(peripheral.rssi) dBm&quot;,
                value: peripheral
            )
            .frame(height: 100, alignment: .center)
            .font(scanModel.isScanning ? .title : .largeTitle.bold())
            .foregroundStyle(.blue)
        }
        .navigationDestination(for: ScanItem.self) { item in
            ConnectedDeviceView(uuid: item.identifier, deviceName: item.name)
        }
        .navigationTitle(&quot;Обнаруженные устройства&quot;)
        .font(.title)
        .disabled(scanModel.isScanning)
    }
}
</code></pre>
","0","Answer"
"79550588","79550512","<pre><code>// Generic View with List
struct FoundDeviceListView&lt;ViewModel, Data&gt;: View where ViewModel: ScanViewModelProtocol, Data: RandomAccessCollection, Data.Element: Identifiable {
    @ObservedObject var scanModel: ViewModel
    var items: Data

    var body: some View {
        List(items) { item in
            if let device = item as? ScanViewListItem {
                Text(&quot;\(device.name) (\(device.id)) \(device.rssi) dBm&quot;)
            }
        }
    }
}
</code></pre>
<pre><code>FoundDeviceListView(scanModel: ScanViewModelEmulator(), items: 
ScanViewModelEmulator().peripherals)
</code></pre>
","0","Answer"
"79553382","79552574","<p>You need <code>at</code> instead of <code>lag</code>; we can also use <code>Filter()</code> to filter out elements that are less than 3 days long.</p>
<p>To make this easier to comprehend, I used hours instead of seconds, but you can simply multiply the output by 3600.</p>
<pre class=""lang-r prettyprint-override""><code>library(runner)
t &lt;- seq(from=0, to=(24*5), by=1)

Filter(\(v) length(v) == (24*3), 
       runner(x=t, k=(24*3), at = seq(0, 24*5, by = 24))) -&gt; OUTPUT

OUTPUT

#&gt; [[1]]
#&gt;  [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
#&gt; [26] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
#&gt; [51] 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
#&gt; 
#&gt; [[2]]
#&gt;  [1] 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
#&gt; [26] 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
#&gt; [51] 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
#&gt; 
#&gt; [[3]]
#&gt;  [1]  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66
#&gt; [20]  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85
#&gt; [39]  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104
#&gt; [58] 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119

## to get the desired output in seconds 
# OUTPUT * 3600
</code></pre>
<p><sup>Created on 2025-04-03 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","1","Answer"
"79553463","79553270","<p>Here's one way to do this with <code>tidyr::unnest</code></p>
<pre class=""lang-r prettyprint-override""><code>library(tidyr)

input |&gt;
  unnest_wider(col = c(fruit, flavours),
               names_sep = '.') |&gt;
  unnest(cols = -pet)
#&gt; # A tibble: 4 × 7
#&gt;   pet   fruit.apple fruit.banana fruit.mango flavours.sweet flavours.sour
#&gt;   &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt;        &lt;chr&gt;       &lt;chr&gt;          &lt;chr&gt;        
#&gt; 1 colin red         yellow       green       &lt;NA&gt;           &lt;NA&gt;         
#&gt; 2 fred  mouldy      bruised      cut         very           ouch         
#&gt; 3 roy   windfall    picked       stolen      sugary         citrus       
#&gt; 4 roy   cooking     ripe         round       calories       lemon        
#&gt; # ℹ 1 more variable: flavours.spicy &lt;chr&gt;
</code></pre>
","1","Answer"
"79553467","79553270","<p>You need to <code>replace</code> <code>list()</code> with sufficient amount of <code>NA</code>.</p>
<pre><code>&gt; cbind(
+   pet=rep(input$pet, sapply(input$fruit, nrow)),
+   fruit=do.call(rbind, input$fruit),
+   flavours=do.call(rbind, replace(input$flavours, lengths(input$flavours) == 0, list(rep_len(NA, nrow(input)))))
+ )
    pet fruit.apple fruit.banana fruit.mango flavours.sweet flavours.sour flavours.spicy
1 colin         red       yellow       green           &lt;NA&gt;          &lt;NA&gt;           &lt;NA&gt;
2  fred      mouldy      bruised         cut           very          ouch            hot
3   roy    windfall       picked      stolen         sugary        citrus        inferno
4   roy     cooking         ripe       round       calories         lemon        burning
</code></pre>
<p>You can wrap this in a function:</p>
<pre><code>&gt; fx &lt;- \(x) {do.call(rbind, replace(x, lengths(x) == 0, list(rep_len(NA, length(x)))))}
&gt; cbind(pet=rep(input$pet, sapply(input$fruit, nrow)), do.call(cbind, lapply(input[-1], fx)))
    pet fruit.apple fruit.banana fruit.mango flavours.sweet flavours.sour flavours.spicy
1 colin         red       yellow       green           &lt;NA&gt;          &lt;NA&gt;           &lt;NA&gt;
2  fred      mouldy      bruised         cut           very          ouch            hot
3   roy    windfall       picked      stolen         sugary        citrus        inferno
4   roy     cooking         ripe       round       calories         lemon        burning
</code></pre>
","1","Answer"
"79558404","79558381","<p>You’re on the right track 👏.
The issue you’re facing (list total remaining empty or not summing correctly) stems mainly from:</p>
<ul>
<li>Logic order inside the loop.</li>
<li>Improper checks like <code>if productkeys[choice_index] == key</code>, where key holds the last value from the earlier for-loop.</li>
<li>You're calling <code>sum(total)</code> but not storing or printing the result.</li>
<li><code>sys.exit()</code> prevents reaching the finally block.</li>
</ul>
<p>Try this version that uses functions and tries to better have clear separation of concerns:</p>
<pre><code>from collections.abc import Mapping
from dataclasses import dataclass, field
from decimal import Decimal


@dataclass
class VendingMachine:
    price_by_product: Mapping[str, Decimal]
    order: list[str] = field(default_factory=list)
    total: Decimal = Decimal('0.0')

    def display_price_by_product(self) -&gt; None:
        &quot;&quot;&quot;Display all available vending machine items with their index and price.&quot;&quot;&quot;
        for index, (name, price) in enumerate(self.price_by_product.items()):
            print(f'{index}: {name} - ${price:.2f}')

    def get_product_by_index(self, index: int) -&gt; str:
        &quot;&quot;&quot;Return the product name by index.&quot;&quot;&quot;
        keys = list(self.price_by_product.keys())
        if 0 &lt;= index &lt; len(keys):
            return keys[index]
        raise IndexError('Invalid index selected.')

    def add_to_order(self, product_name: str) -&gt; None:
        &quot;&quot;&quot;Add product to the order and update total.&quot;&quot;&quot;
        self.order.append(product_name)
        self.total += self.price_by_product[product_name]

    def display_summary(self) -&gt; None:
        &quot;&quot;&quot;Display the order summary and total cost.&quot;&quot;&quot;
        print('\nThanks for your selection:')
        print('Items:', ', '.join(self.order))
        print(f'Total: ${self.total:.2f}')


def run_vending_machine() -&gt; None:
    &quot;&quot;&quot;Run the vending machine program.&quot;&quot;&quot;
    price_by_product = {
        'Water': Decimal('1.00'),
        'Chocolate Chip Cookie': Decimal('1.00'),
        'Cheese and Onion Crisps': Decimal('1.10'),
        'Ceeam Soda': Decimal('0.70'),
        'Chicken Sandwich': Decimal('2.60'),
        'M&amp;ms': Decimal('1.50'),
        'Peanut Butter Kit-Kat': Decimal('1.10'),
    }
    vm = VendingMachine(price_by_product)
    print('Welcome to the vending machine!\n')
    vm.display_price_by_product()
    while True:
        try:
            user_input = input('\nEnter the number of the item to purchase'
                               '(9 to finish): ').strip()
            if user_input == '9':
                break
            index = int(user_input)
            product = vm.get_product_by_index(index)
            vm.add_to_order(product)
            print(f'Added: {product}')
        except ValueError:
            print('Please enter a valid number.')
        except IndexError as e:
            print(e)
    vm.display_summary()


def main() -&gt; None:
    run_vending_machine()


if __name__ == '__main__':
    main()
</code></pre>
<p><strong>Example Usage:</strong></p>
<pre><code>Welcome to the vending machine!

0: Water - $1.00
1: Chocolate Chip Cookie - $1.00
2: Cheese and Onion Crisps - $1.10
3: Ceeam Soda - $0.70
4: Chicken Sandwich - $2.60
5: M&amp;ms - $1.50
6: Peanut Butter Kit-Kat - $1.10

Enter the number of the item to purchase(9 to finish): 4
Added: Chicken Sandwich

Enter the number of the item to purchase(9 to finish): 3
Added: Ceeam Soda

Enter the number of the item to purchase(9 to finish): 9

Thanks for your selection:
Items: Chicken Sandwich, Ceeam Soda
Total: $3.30
</code></pre>
","1","Answer"
"79558967","79558939","<pre><code>y = df.filter(pl.col(&quot;a&quot;).is_in(list_of_values))
</code></pre>
<p>Output:</p>
<pre><code>┌─────┬─────┐
│ a   ┆ b   │
│ --- ┆ --- │
│ i64 ┆ i64 │
╞═════╪═════╡
│ 1   ┆ 4   │
│ 3   ┆ 2   │
└─────┴─────┘
</code></pre>
","1","Answer"
"79560630","79560599","<p>This is my try based on your try. I got something like this:</p>
<pre class=""lang-py prettyprint-override""><code>def cycle_sublist(lst,start,step):
    index = start 
    length = len(lst)
    res = []

    while index &lt; length + start:
        res.append(lst[index % length])
        index += step

    return res
    
print(cycle_sublist([1], 0, 2))                    # [1]
print(cycle_sublist([6, 5, 4, 3], 0, 2))           # [6, 4]
print(cycle_sublist([7, 6, 5, 4, 3], 3, 1))        # [4, 3, 7, 6, 5]
print(cycle_sublist([4, 3, 2, 5, 1, 6, 9], 2, 2))  # [2, 1, 9, 3]
print(cycle_sublist([4, 3, 2, 5, 1, 6, 9], 5, 3))  # [6, 3, 1]
</code></pre>
<p>Basically, there is not much of a difference between your and my code. You were trying to keep <code>index</code> in valid range which made it more difficult to detect when cycle was over. Change I introduced is that I let <code>index</code> change in each iteration by step and not trying to keep it in valid range since I used remainder when indexing list. I guess you know, but remainder goes up to <code>length - 1</code> so it will always be in valid range. Additionally, I removed some unused variables.</p>
<p>Little addition, not sure if it's helpful. If you want to cycle multiple times under conditions you set, you can change while condition to <code>while index &lt; n * length + start:</code> where <code>n</code> is how many times you want to cycle through list. Also, if you want to include starting element if final iteration sets on him, change <code>&lt;</code> to <code>&lt;=</code> in while condition.</p>
","5","Answer"
"79561440","79560599","<p>Actually you don't need to detect if you have finished going through a cycle. Instead, you can try defining a &quot;cycle&quot; first and indexing by <code>step</code> in turn, e.g.,</p>
<pre><code>def cycle_sublist(lst, start, step):
 return (lst[start:] + lst[:start])[::step]

print(f'cycle_sublist([1], 0, 2) --&gt; {cycle_sublist([1], 0, 2)}')
print(f'cycle_sublist([6, 5, 4, 3], 0, 2) --&gt; {cycle_sublist([6, 5, 4, 3], 0, 2)}')
print(f'cycle_sublist([7, 6, 5, 4, 3], 3, 1) --&gt; {cycle_sublist([7, 6, 5, 4, 3], 3, 1)}')
print(f'cycle_sublist([4, 3, 2, 5, 1, 6, 9], 2, 2) --&gt; {cycle_sublist([4, 3, 2, 5, 1, 6, 9], 2, 2)}')
print(f'cycle_sublist([4, 3, 2, 5, 1, 6, 9], 5, 3) --&gt; {cycle_sublist([4, 3, 2, 5, 1, 6, 9], 5, 3)}')
</code></pre>
<p>which gives</p>
<pre><code>cycle_sublist([1], 0, 2) --&gt; [1]
cycle_sublist([6, 5, 4, 3], 0, 2) --&gt; [6, 4]
cycle_sublist([7, 6, 5, 4, 3], 3, 1) --&gt; [4, 3, 7, 6, 5]
cycle_sublist([4, 3, 2, 5, 1, 6, 9], 2, 2) --&gt; [2, 1, 9, 3]
cycle_sublist([4, 3, 2, 5, 1, 6, 9], 5, 3) --&gt; [6, 3, 1]
</code></pre>
","1","Answer"
"79562652","79562622","<p>When you use <code>unlist</code>, you could specify <code>recursive = FALSE</code>, and then apply <code>unstack</code> + <code>stack</code></p>
<pre><code>unclass(unstack(stack(unlist(mylist,recursive = FALSE))))
</code></pre>
<p>or</p>
<pre><code>with(stack(unlist(mylist, recursive = FALSE)), split(values, ind))
</code></pre>
<p>then you should be able to achieve the desired output</p>
","4","Answer"
"79562660","79562622","<p>We can use <code>Map</code> to combine the sub-lists of each top-level list element.</p>
<p>Reproducible data:</p>
<pre class=""lang-r prettyprint-override""><code>set.seed(42)
mylist &lt;- list()
list1 &lt;- rnorm(5)
list2 &lt;- rnorm(5)
list3 &lt;- rnorm(5)
list4 &lt;- rnorm(5)
mylist[[1]] &lt;- list(&quot;list1&quot; = list1, &quot;list2&quot; = list2)
mylist[[2]] &lt;- list(&quot;list1&quot; = list3, &quot;list2&quot; = list4)  
mylist
# [[1]]
# [[1]]$list1
# [1]  1.3709584 -0.5646982  0.3631284  0.6328626  0.4042683
# [[1]]$list2
# [1] -0.10612452  1.51152200 -0.09465904  2.01842371 -0.06271410
# [[2]]
# [[2]]$list1
# [1]  1.3048697  2.2866454 -1.3888607 -0.2787888 -0.1333213
# [[2]]$list2
# [1]  0.6359504 -0.2842529 -2.6564554 -2.4404669  1.3201133
</code></pre>
<pre class=""lang-r prettyprint-override""><code>do.call(Map, args = c(list(f = c), mylist))
# $list1
#  [1]  1.3709584 -0.5646982  0.3631284  0.6328626  0.4042683  1.3048697  2.2866454 -1.3888607 -0.2787888 -0.1333213
# $list2
#  [1] -0.10612452  1.51152200 -0.09465904  2.01842371 -0.06271410  0.63595040 -0.28425292 -2.65645542 -2.44046693  1.32011335
</code></pre>
<p>If it's always <code>list1</code> and <code>list2</code> (a pre-known length within <code>mylist</code>), then we can do away with <code>do.call</code> and just use <code>Map</code> directly:</p>
<pre class=""lang-r prettyprint-override""><code>Map(c, mylist[[1]], mylist[[2]])
</code></pre>
<p>The (sole?) benefit of using <code>do.call</code> is that if <code>mylist</code> is either unknown-length or long-length and you don't want to have to type in all of <code>mylist[[1]]</code>, <code>mylist[[2]]</code>, ..., <code>mylist[[n]]</code> (which would work), then a simple expression handles it all for you.</p>
","7","Answer"
"79562662","79562622","<p>Couple of options -</p>
<ol>
<li>Use <code>purrr::transpose</code> and <code>unlist</code> each list</li>
</ol>
<pre><code>purrr::transpose(mylist) |&gt; lapply(unlist)
</code></pre>
<ol start=""2"">
<li>Pure base R - combine similar names together in one list.</li>
</ol>
<pre><code>nms &lt;- names(mylist[[1]])

res &lt;- lapply(nms, function(nm) {
  do.call(c, lapply(mylist, `[[`, nm))
})

names(res) &lt;- nms
</code></pre>
","3","Answer"
"79562854","79562622","<p>An alternative might be using <code>list.map</code> from <a href=""https://renkun-ken.github.io/rlist-tutorial/Getting-started/index.html"" rel=""nofollow noreferrer"">rlist package</a></p>
<pre><code>set.seed(123)
mylist &lt;- list()
list1 &lt;- rnorm(5)
list2 &lt;- rnorm(5)
list3 &lt;- rnorm(5)
list4 &lt;- rnorm(5)

mylist[[1]] &lt;- list(&quot;list1&quot; = list1, &quot;list2&quot; = list2)
mylist[[2]] &lt;- list(&quot;list1&quot; = list3, &quot;list2&quot; = list4)  

mylist

#install.packages(&quot;rlist&quot;)
library(rlist)

list(
  list1 = unlist(list.map(mylist, list1)),
  list2 = unlist(list.map(mylist, list2))
  )
</code></pre>
","2","Answer"
"79564625","79558936","<p>I'll assume that you are using Python.</p>
<p>In your code, the variable <code>email</code> receives the whole email address (including the text before &quot;@&quot;). To find if the email address is in your list, you need to compare the text after the &quot;@&quot;. One way to do that is to split the string into two parts, and taking the second.</p>
<p>I will use the <code>split</code> function. The function <code>str.split('string')</code> returns a array with the words of <code>str</code> that are delimited by &quot;string&quot;.</p>
<p>For example, if I input &quot;myemail@site.com&quot;, <code>email.split(&quot;@&quot;)</code> returns the array <code>['myemail','site.com']</code>. Now I use the index &quot;1&quot; to access the desired array item 'site.com'.</p>
<p>Here is how your code would be:</p>
<pre><code>import time
    
list = [&quot;gmail.com&quot;, &quot;yahoo.com&quot;, &quot;outlook.com&quot;]
email = input(&quot;Email: &quot;) 
time.sleep(1.5)
provider=email.split(&quot;@&quot;)[1] #split the string and takes the second part
if provider in list:
    print(email) 
else:
    print(&quot;\nPlease enter a valid email!&quot;) 
    exit() 
</code></pre>
<p>Please note that <code>split</code> removes the &quot;@&quot; character, so I removed it from all itens of <code>list</code>.</p>
","1","Answer"
"79570039","79570015","<p>You can add spread operator  like</p>
<pre class=""lang-dart prettyprint-override""><code>children: [
  ...summaryData.map((data) {
    return Row(
</code></pre>
<p>Or you can do</p>
<pre class=""lang-dart prettyprint-override""><code>return Column(
  children: summaryData.map(
    (data) {
      return Row(
        children: [
          Text(&quot;${data['questions'] ?? 0 + 1}&quot;),//default will be 1
        ],
      );
    },
  ).toList(),
);
</code></pre>
","1","Answer"
"79570230","79570015","<pre><code>import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    // Sample data to pass into QuestionsSummary
    final summaryData = [
      {'questions': 0},
      {'questions': 1},
      {'questions': 2},
    ];

    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: const Text('Questions Summary')),
        body: Center(
          child: QuestionsSummary(summaryData),
        ),
      ),
    );
  }
}

class QuestionsSummary extends StatelessWidget {
  final List&lt;Map&lt;String, Object&gt;&gt; summaryData;

  const QuestionsSummary(this.summaryData, {super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start, // optional styling
      children: summaryData.map((data) {
        return Row(
          children: [
            Text(
              'Question #${(data['questions'] as int) + 1}',
              style: const TextStyle(fontSize: 18),
            ),
          ],
        );
      }).toList(),
    );
  }
}
</code></pre>
","0","Answer"
"79570792","79570725","<p>Update the operation method as below.</p>
<pre><code>public static void operation(List&lt;Double&gt; list1, List&lt;Double&gt; list2, List&lt;String&gt; symbols) {
    int size = Math.min(list1.size(), Math.min(list2.size(), symbols.size()));
    for (int i = 0; i &lt; size; i++) {
        Double a = list1.get(i);
        Double b = list2.get(i);
        String op = symbols.get(i);
        Double result;

        switch (op) {
            case &quot;+&quot; -&gt; result = addition(a, b);
            case &quot;-&quot; -&gt; result = subtraction(a, b);
            case &quot;*&quot; -&gt; result = multiplication(a, b);
            case &quot;/&quot; -&gt; result = division(a, b);
            default -&gt; {
                System.out.println(&quot;Invalid operator: &quot; + op);
                continue;
            }
        }

        System.out.println(&quot;Result &quot; + i + &quot;: &quot; + a + &quot; &quot; + op + &quot; &quot; + b + &quot; = &quot; + result);
    }
}
</code></pre>
<p>And add this after thread joins:</p>
<pre><code>List&lt;Double&gt; list1 = converter(firstValues);
List&lt;Double&gt; list2 = converter(secondValues);
operation(list1, list2, symbols);
</code></pre>
","0","Answer"
"79572417","79572333","<p>This might work for you (GNU grep or sed):</p>
<pre><code>grep -o '.*' file1 | grep -Ff- file2
</code></pre>
<p>Make your own tool using grep from the first list and then apply to second.</p>
<p>Or perhaps more succinctly:</p>
<pre><code>grep . file1 | grep -Ff- file2
</code></pre>
<p>Alternative for sed:</p>
<pre><code>sed -n '/\S/s#.*#/^&amp;$/p#p' file1 | sed -nf- file2
</code></pre>
<hr />
<p>As for comment:</p>
<pre><code>sed -n '/\S/{s#.*#/^&amp;$/p#;s/-/(-[^-]*)*/g;p}' file1 |
sed -Enf- file2
</code></pre>
","1","Answer"
"79573407","79573312","<p>Here is a way.<br />
First of all, you don't need to remove the suffix <code>.csv</code> from the file names and then in the loop, paste it back. Don't remove it, leave the file names as they were.<br />
Second, I find <code>full.names</code> safer but that's optional.</p>
<p>As for the <code>for</code> loop, instead of <code>assign</code>, I assign the data directly to an object in the global environment, <code>temp_df</code>, change one of its column names and write it back to disk. You can use other arguments to <code>write.csv</code>, such as <code>quote = FALSE</code>, <code>row.names = FALSE</code>, etc.</p>
<pre><code>allsp &lt;- list.files(pattern = &quot;\\.csv$&quot;, full.names = TRUE)
for(sp in allsp) {
  temp_df &lt;- read.csv(sp)
  i &lt;- grep(&quot;old&quot;, names(temp_df))
  names(temp_df)[i] &lt;- &quot;new&quot;
  write.csv(temp_df, sp)
}
rm(temp_df)
</code></pre>
<hr />
<p>If you do not want to write the data back to disk, use code such as the following.</p>
<p>With a <code>for</code> loop, you must first create a list where to hold the data frames.</p>
<pre><code>allsp &lt;- list.files(pattern = &quot;\\.csv$&quot;, full.names = TRUE)
sp_list &lt;- vector(&quot;list&quot;, length(allsp)) |&gt; setNames(basename(allsp))
for(sp in allsp) {
  sp_list[[sp]] &lt;- read.csv(sp)
  i &lt;- grep(&quot;old&quot;, names(sp_list[[sp]]))
  names(sp_list[[sp]])[i] &lt;- &quot;new&quot;
}
</code></pre>
<p>A <code>lapply</code> loop will create the output list.</p>
<pre><code>sp_list &lt;- lapply(allsp, \(sp) {
  temp_df &lt;- read.csv(sp)
  i &lt;- grep(&quot;old&quot;, names(temp_df))
  names(temp_df)[i] &lt;- &quot;new&quot;
  temp_df
})
names(sp_list) &lt;- basename(allsp)
</code></pre>
<hr />
<h1>Edit</h1>
<p>Answering to the comment, the two code examples below save the data to disk.</p>
<pre><code># this rewrites the files
mapply(\(sp, fl) {
  write.csv(sp, fl)
}, sp_list, allsp)

# this does not rewrite the files
# note that there is no trailing directory separator
new_dir &lt;- &quot;path/to/new/dir&quot;
mapply(\(sp, fl) {
  f &lt;- file.path(new_dir, basename(fl))
  write.csv(sp, f)
}, sp_list, allsp)
</code></pre>
","2","Answer"
"79573559","79572333","<p>Using <code>join</code> (<em>input needs to be sorted</em>)</p>
<pre><code>join &lt;(sort f1) &lt;(sort f2)
</code></pre>
","1","Answer"
"79574815","79574787","<p>You might create an expression and then <code>eval</code>.</p>
<pre><code>fx &lt;- \(data, x) {
  expr &lt;- mapply(\(x, y) sprintf('%s %%in%% c(%s)', x, toString(y)), names(x), x) |&gt; 
    paste(collapse=' &amp; ') |&gt; str2lang()
  subset(data, eval(expr))
}
</code></pre>
<p>Usage on single list</p>
<pre><code>&gt; fx(mtcars, filter_list[[1]])
                     mpg cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4           21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag       21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
Duster 360          14.3   8  360 245 3.21 3.570 15.84  0  0    3    4
Cadillac Fleetwood  10.4   8  472 205 2.93 5.250 17.98  0  0    3    4
Lincoln Continental 10.4   8  460 215 3.00 5.424 17.82  0  0    3    4
Chrysler Imperial   14.7   8  440 230 3.23 5.345 17.42  0  0    3    4
Camaro Z28          13.3   8  350 245 3.73 3.840 15.41  0  0    3    4
Ford Pantera L      15.8   8  351 264 4.22 3.170 14.50  0  1    5    4
</code></pre>
<p>And on nested list</p>
<pre><code>&gt; lapply(filter_list, fx, data=mtcars)
$filter_1
                     mpg cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4           21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag       21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
Duster 360          14.3   8  360 245 3.21 3.570 15.84  0  0    3    4
Cadillac Fleetwood  10.4   8  472 205 2.93 5.250 17.98  0  0    3    4
Lincoln Continental 10.4   8  460 215 3.00 5.424 17.82  0  0    3    4
Chrysler Imperial   14.7   8  440 230 3.23 5.345 17.42  0  0    3    4
Camaro Z28          13.3   8  350 245 3.73 3.840 15.41  0  0    3    4
Ford Pantera L      15.8   8  351 264 4.22 3.170 14.50  0  1    5    4

$filter_2
                mpg cyl  disp  hp drat    wt  qsec vs am gear carb
Mazda RX4      21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
Datsun 710     22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
Valiant        18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
Merc 240D      24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
Merc 230       22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
Merc 280       19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
Merc 280C      17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
Fiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
Honda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
Toyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
Toyota Corona  21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
Fiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
Porsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
Lotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
Ferrari Dino   19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
Volvo 142E     21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
</code></pre>
","5","Answer"
"79574838","79574787","<p>In base R, you might try <code>lapply</code> to <code>eval</code>uate <code>parse</code>d strings, where we use <code>collapse='&amp;'</code> in <code>paste()</code>.</p>
<pre class=""lang-r prettyprint-override""><code>lapply(filter_list, 
       \(i) subset(mtcars, subset=eval(parse(text=paste(names(i), '%in%', i, collapse='&amp;')))))
</code></pre>
<pre class=""lang-r prettyprint-override""><code>$filter_1
                     mpg cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4           21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag       21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
Duster 360          14.3   8  360 245 3.21 3.570 15.84  0  0    3    4
Cadillac Fleetwood  10.4   8  472 205 2.93 5.250 17.98  0  0    3    4
Lincoln Continental 10.4   8  460 215 3.00 5.424 17.82  0  0    3    4
Chrysler Imperial   14.7   8  440 230 3.23 5.345 17.42  0  0    3    4
Camaro Z28          13.3   8  350 245 3.73 3.840 15.41  0  0    3    4
Ford Pantera L      15.8   8  351 264 4.22 3.170 14.50  0  1    5    4

$filter_2
                mpg cyl  disp  hp drat    wt  qsec vs am gear carb
Mazda RX4      21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
Datsun 710     22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
Valiant        18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
Merc 240D      24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
Merc 230       22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
Merc 280       19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
Merc 280C      17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
Fiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
Honda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
Toyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
Toyota Corona  21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
Fiat X1-9      27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
Porsche 914-2  26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
Lotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
Ferrari Dino   19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
Volvo 142E     21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
</code></pre>
","3","Answer"
"79574888","79574787","<p>Similar to @Friede's answer (maybe he can put this in his answer and I'll delete mine?)</p>
<pre><code>e &lt;- lapply(filter_list, 
            \(i) paste(names(i), '%in%', i, collapse=' &amp; '))

cars2 &lt;- subset(mtcars, subset=eval(parse(text=paste(e, collapse=&quot; | &quot;))))
</code></pre>
<hr />
<p>The dplyr method:</p>
<pre><code>cars &lt;- mtcars %&gt;%
  filter(vs %in% c(0) &amp; carb %in% c(1,4) | cyl %in% c(4,6))
</code></pre>
<hr />
<pre><code>identical(cars, cars2)
[1] TRUE
</code></pre>
","3","Answer"
"79574936","79574787","<p>We can use <a href=""https://stat.ethz.ch/R-manual/R-patched/library/base/html/expand.grid.html"" rel=""nofollow noreferrer""><code>expand.grid()</code></a> to create a data frame from each nested, ragged list of conditions, at which point this is essentially a join. To get a sense of this approach, here it is applied on the first filter:</p>
<pre class=""lang-r prettyprint-override""><code>expand.grid(filter_list$filter_1)
#   vs carb
# 1  0    1
# 2  0    4
</code></pre>
<p>As you've tagged <a href=""/questions/tagged/dplyr"" class=""s-tag post-tag"" title=""show questions tagged &#39;dplyr&#39;"" aria-label=""show questions tagged &#39;dplyr&#39;"" rel=""tag"" aria-labelledby=""tag-dplyr-tooltip-container"" data-tag-menu-origin=""Unknown"">dplyr</a>, we can  <a href=""https://dplyr.tidyverse.org/reference/mutate-joins.html"" rel=""nofollow noreferrer""><code>inner_join()</code></a>, taking advantage of default joining on columns with the same names. As we want rows which meet <code>filter1</code> <em>or</em> <code>filter2</code>, <a href=""https://dplyr.tidyverse.org/reference/bind_rows.html"" rel=""nofollow noreferrer""><code>bind_rows()</code></a> of the resulting list of matches. Ensure we don't twice include those rows that meet both filters with <a href=""https://dplyr.tidyverse.org/reference/distinct.html"" rel=""nofollow noreferrer""><code>distinct()</code></a>.</p>
<pre class=""lang-r prettyprint-override""><code>library(dplyr)
# Create rownames column as dplyr join strips them
mtcars &lt;- tibble::rownames_to_column(mtcars, &quot;car&quot;)
lapply(filter_list, \(filter) expand.grid(filter) |&gt;
    inner_join(mtcars, y = _)) |&gt;
    bind_rows() |&gt;
    distinct(car, .keep_all = TRUE)
</code></pre>
<p>Output:</p>
<pre class=""lang-r prettyprint-override""><code>                   car  mpg cyl  disp  hp drat    wt  qsec vs am gear carb
1            Mazda RX4 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4
2        Mazda RX4 Wag 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4
3           Duster 360 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4
4   Cadillac Fleetwood 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4
5  Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4
6    Chrysler Imperial 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4
7           Camaro Z28 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4
8       Ford Pantera L 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4
9           Datsun 710 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1
10      Hornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1
11             Valiant 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1
12           Merc 240D 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2
13            Merc 230 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2
14            Merc 280 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4
15           Merc 280C 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4
16            Fiat 128 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1
17         Honda Civic 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2
18      Toyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1
19       Toyota Corona 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1
20           Fiat X1-9 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1
21       Porsche 914-2 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2
22        Lotus Europa 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2
23        Ferrari Dino 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6
24          Volvo 142E 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2
</code></pre>
","8","Answer"
"79575733","79574787","<p>Late to the party:</p>
<p>In base R, use merge directly:</p>
<pre><code>do.call(rbind, lapply(filter_list, merge, mtcars))

            vs carb  mpg cyl  disp  hp drat    wt  qsec am gear
filter_1.1   0    4 21.0   6 160.0 110 3.90 2.620 16.46  1    4
filter_1.2   0    4 14.7   8 440.0 230 3.23 5.345 17.42  0    3
filter_1.3   0    4 14.3   8 360.0 245 3.21 3.570 15.84  0    3
filter_1.4   0    4 10.4   8 460.0 215 3.00 5.424 17.82  0    3
filter_1.5   0    4 15.8   8 351.0 264 4.22 3.170 14.50  1    5
filter_1.6   0    4 21.0   6 160.0 110 3.90 2.875 17.02  1    4
filter_1.7   0    4 10.4   8 472.0 205 2.93 5.250 17.98  0    3
filter_1.8   0    4 13.3   8 350.0 245 3.73 3.840 15.41  0    3
filter_2.1   1    2 24.4   4 146.7  62 3.69 3.190 20.00  0    4
filter_2.2   1    1 22.8   4 108.0  93 3.85 2.320 18.61  1    4
filter_2.3   1    1 33.9   4  71.1  65 4.22 1.835 19.90  1    4
filter_2.4   1    2 22.8   4 140.8  95 3.92 3.150 22.90  0    4
filter_2.5   1    1 32.4   4  78.7  66 4.08 2.200 19.47  1    4
filter_2.6   1    2 30.4   4  75.7  52 4.93 1.615 18.52  1    4
filter_2.7   1    2 30.4   4  95.1 113 3.77 1.513 16.90  1    5
filter_2.8   1    1 21.5   4 120.1  97 3.70 2.465 20.01  0    3
filter_2.9   1    1 27.3   4  79.0  66 4.08 1.935 18.90  1    4
filter_2.10  0    2 26.0   4 120.3  91 4.43 2.140 16.70  1    5
filter_2.11  1    2 21.4   4 121.0 109 4.11 2.780 18.60  1    4
filter_2.12  0    4 21.0   6 160.0 110 3.90 2.875 17.02  1    4
filter_2.13  1    1 18.1   6 225.0 105 2.76 3.460 20.22  0    3
filter_2.14  1    1 21.4   6 258.0 110 3.08 3.215 19.44  0    3
filter_2.15  1    4 19.2   6 167.6 123 3.92 3.440 18.30  0    4
filter_2.16  1    4 17.8   6 167.6 123 3.92 3.440 18.90  0    4
filter_2.17  0    4 21.0   6 160.0 110 3.90 2.620 16.46  1    4
filter_2.18  0    6 19.7   6 145.0 175 3.62 2.770 15.50  1    5
</code></pre>
","4","Answer"
"79578397","79578386","<p>Rather than generating all length-3 combinations of length-5 sublists of the list, go over each element of the list and generate all valid length-3 combinations that start with a particular element.</p>
<p>To do that for an element, take all length-2 combinations of the next 4 elements, and stick the current element in front of the combination.</p>
<p>When you near the end of the input, you'll reach a point where there <em>aren't</em> 4 next elements. Just generate all length-3 combinations of what's left at that point.</p>
<pre><code>import collections
import itertools

def restricted_combinations(elements, window_length, combination_length):
    elements = iter(elements)
    pool = collections.deque(itertools.islice(elements, 0, window_length-1))

    for next_elem in elements:
        pool.append(next_elem)
        start = pool.popleft()
        for tail in itertools.combinations(pool, combination_length - 1):
            yield (start, *tail)

    yield from itertools.combinations(pool, combination_length)
</code></pre>
","2","Answer"
"79578716","79578386","<p>Like <a href=""https://stackoverflow.com/a/79578397"">user2357112's</a>, but fixing the <em>end</em> element is simpler (<a href=""https://ato.pxeger.com/run?1=rZRLTsMwEIaF2OUUg1g0hrRqihAIqQvuwD4KyaS15NjBdtT2LGy6gUNxGsZ5NWlLxSu7eMbfP_PPJK_vxcYuldxu30qbje8_zh55XihtIVFCYGK5ksZrjrhFbZUSxvNSzECjsZonFtMoUfkzl3GV7aPAHKU1Aay4TNUqEigXdhlAL6s5Yw8e0FMQFOZ9yUmKLyX6ebymxPmAMw5ZdSlTGpwUcAmtZI1ro0uMUxft6p4M6nSqx4qCMYRsR3LPhqNIwb9yxKBSY13cYSZxUaBMq9ZZ4-T59hKeyCIuF2QEYUuDenZzexeGs5EBo0TpRE96GU1_4WZ7gxx1nXcEdtrrnUvcCJ5gT3m6J04jYF43BIlrG309ib4_XerOPmNjWq15nVaoQmBmfTaYo425-Nc5VpoBXDlw00gdybTKfypDAFdko0ll6lgu0J9ND8chuLF-HW7u7lbZlM8uHO1zwgDu2HCvj7TaT98jXR-4gOuCRk_1fGfrhrTjBvThxCzFCfgf0Dyjr0YT0K9FGFzM25O6p71Gq_XTXFp_lNGoR8xr3lIlcdR8qO2v7xM"" rel=""nofollow noreferrer"">Attempt This Online!</a>, with testing):</p>
<pre class=""lang-py prettyprint-override""><code>import collections
import itertools

def restricted_combinations(elements, window_length, combination_length):
    pool = collections.deque(maxlen=window_length-1)
    for elem in elements:
        for head in itertools.combinations(pool, combination_length - 1):
            yield (*head, elem)
        pool.append(elem)
</code></pre>
<p>Or since the input is a list, which we can slice (fixing the <em>start</em> instead):</p>
<pre class=""lang-py prettyprint-override""><code>import itertools

def restricted_combinations(elements, window_length, combination_length):
    for i in range(len(elements)):
        start, *pool = elements[i : i+window_length]
        for tail in itertools.combinations(pool, combination_length - 1):
            yield (start, *tail)
</code></pre>
<p><a href=""https://ato.pxeger.com/run?1=vVTLTsMwEBTilo9Aizg0hrZqilBRJf6CG0JRSDZlJdcO9kbAt3DhAme-h6_BTp00LRXiIeFbsrMzs7NOnl6rR77V6vn5peZydP6-d0DLShsGYjSstbRRVGAJBi0byhmLNNfLG1IZk1Y2RolLVGyHcE-q0PepRLXg2yH0UOGdmEfgTqkNEJACk6kFxq7WkYgA8cdyZngIx5XzABfQQq4I5kAnG2LXXZPn5oykp-8GGG8Y9ny73MEIkp68P4-EsoC4deKJRYhp_-0ILl0kpBZucNddWzTT07NZkkwHFqyWteeOopBmrqXEvHHwZZ7p5BeJth0uJj_0Os6mGgLsORgXeFdjvA6IrKQce8qTLfFRIkTUbU_hA6ce7GNum9bRecFxVlWoiriDis3FOkMNrNKVxJJj8Y8rXA2yqpRGL38q4wi8yaDZXeTp5PM6JFmOu3vue0WXoq1vfDnd5kmGMOtN4aE7Ru3Dt5hOPqWAD5VbvfPznVu3ybY7gD6546zlF-R_oKYyJNhICDgMia7m2RqyuXqGFMeD0q15IKLwVGiFg_Dhtv-5Dw"" rel=""nofollow noreferrer"">Attempt This Online!</a></p>
","2","Answer"
"79579908","79579896","<p>If the elements are hashable, use a <a href=""https://docs.python.org/3/library/stdtypes.html#set"" rel=""nofollow noreferrer"">set</a>.</p>
","1","Answer"
"79579951","79579896","<p>Code:</p>
<pre class=""lang-py prettyprint-override""><code>if new_item not in items:
   items.append(new_item)
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; items
[1, 2, 3, 4]
&gt;&gt;&gt; new_item = 3
&gt;&gt;&gt; if new_item not in items: \
...     items.append(new_item)
...
&gt;&gt;&gt; items
[1, 2, 3, 4]
</code></pre>
","0","Answer"
"79580703","79574787","<p>I would use map/reduce approach.</p>
<p>The solution relies on</p>
<pre class=""lang-r prettyprint-override""><code>library(dplyr)
library(purrr)
</code></pre>
<p>First we create function which takes &quot;and&quot; conditions, evalute them and return logical vector:</p>
<pre class=""lang-r prettyprint-override""><code>apply_and_filters &lt;- function(df, and_conditions) {
    and_conditions |&gt; 
        imap(\(x, xname) df[[xname]] %in% x) |&gt; 
        reduce(`&amp;`)
}
</code></pre>
<p>We use <code>imap</code> from purrr package to iterate over values and names. Reduce combines all logical vectors.</p>
<p>With the same logic we could evalute &quot;or&quot;:</p>
<pre class=""lang-r prettyprint-override""><code>apply_or_filters &lt;- function(df, list_of_and_conditions) {
    list_of_and_conditions |&gt; 
        map(\(and_condition) apply_and_filters(df, and_condition)) |&gt;
        reduce(`|`)
}
</code></pre>
<p>Now we could use to filter <code>data.frame</code></p>
<pre class=""lang-r prettyprint-override""><code>filter_with_list &lt;- function(df, list_of_conditions) {
    indx &lt;- apply_or_filters(df, list_of_conditions)
    df |&gt; filter(indx)
}
mtcars |&gt; filter_with_list(filter_list)
</code></pre>
<p>Side note: helper function could be put into final function definition:</p>
<pre class=""lang-r prettyprint-override""><code>filter_with_list &lt;- function(df, list_of_conditions) {
    apply_and_filters &lt;- function(df, and_conditions) {
        and_conditions |&gt; 
            imap(\(x, xname) df[[xname]] %in% x) |&gt; 
            reduce(`&amp;`)
    }
    apply_or_filters &lt;- function(df, list_of_and_conditions) {
        list_of_and_conditions |&gt; 
            map(\(and_condition) apply_and_filters(df, and_condition)) |&gt;
            reduce(`|`)
    }
    
    indx &lt;- apply_or_filters(df, list_of_conditions)
    df |&gt; filter(indx)
}
</code></pre>
","2","Answer"
"79583061","79583042","<p>I don't know if I understood your question completely, but hopefully this could help:</p>
<pre><code>L = [[ 0, 1, 0, 1, 0], [1, 1, 1, 1, 1], [ 0, 1, 1, 1, 0]]

def get_ones(l : list) -&gt; list:
    res = []
    for sublist in l:
        ones = 0
        subres = []
        for item in sublist:
            if item == 1:
                ones += 1
            else:
                if ones &gt; 0:
                    subres.append(ones)
                ones = 0
        if ones &gt; 0:
            subres.append(ones) # All were ones
        res.append(subres)
    return res

def sum_column_ones(l : list, column) -&gt; int:
    # assertion you have same amount of columns
    ones = 0
    for sublist in l:
        if sublist[column] == 1:
            ones += 1
    return ones
    
print(get_ones(L))

for i in range(len(L[0])): # iterate all columns
    print(f&quot;Ones in column {i}: {sum_column_ones(L, i)}&quot;)


[[1, 1], [5], [3]]
Ones in column 0: 1
Ones in column 1: 3
Ones in column 2: 2
Ones in column 3: 3
Ones in column 4: 1
</code></pre>
","1","Answer"
"79584116","79584112","<p>You can follow this</p>
<pre><code>my_list = [1, 3, 2, 3, 1, 5, 2]
seen = set()
result = []

for item in my_list:
    if item not in seen:
        seen.add(item)
        result.append(item)

print(result)
</code></pre>
","-1","Answer"
"79584540","79584270","<p>Assuming</p>
<ul>
<li>(<strong>1</strong>) you have a character vector of full path names,</li>
</ul>
<pre class=""lang-r prettyprint-override""><code>paths = list.files('&lt;path_to_top_level_folder&gt;', pattern=&quot;.RData$&quot;, recursive=TRUE, full.names=TRUE)
</code></pre>
<ul>
<li>(<strong>2</strong>) there is a single <code>data.frame</code> in each <code>.RData</code>-file, and</li>
<li>(<strong>3</strong>) columns <code>3:6</code> exist in each,</li>
</ul>
<p>you might want to start developing something robust from</p>
<pre class=""lang-r prettyprint-override""><code>## for explicity:
# result = 
lapply(paths, \(i) {
  load(i,  i&lt;-new.env())
  d = get(Filter(\(x) is.data.frame(get(x, envir=i)), ls(i)), i)
  d[3:6]
}) |&gt; data.table::rbindlist() # |&gt; do.call(what='rbind') 
</code></pre>
<pre class=""lang-r prettyprint-override""><code>## streamlined: 
# result = 
lapply(paths, \(i) { 
  load(i)
  get(Filter(\(x) is.data.frame(get(x)), ls()))[3:6] 
}) |&gt; data.table::rbindlist()
</code></pre>
<p>If the name of the <code>data.frame</code> is always the same, this can be done even more concise. Subsetting by column names is less error-prone, but requires that all data frames have the same column names (w/o typos).</p>
<hr />
<p>Note</p>
<p><code>data.table::rbindlist()</code> handles <code>data.frame</code> objects just fine, and is quite fast.</p>
<pre class=""lang-r prettyprint-override""><code>&gt; class(mtcars[3:6])
[1] &quot;data.frame&quot;
&gt; dim(mtcars[3:6])
[1] 32  4
&gt; list(mtcars[3:6], mtcars[3:6] * 2) |&gt; data.table::rbindlist() |&gt; dim()
[1] 64  4
</code></pre>
","2","Answer"
"79584543","79584270","<p>One way is to <code>load</code> the .RData files into a temporary environment so as to not overwrite anything.</p>
<pre><code>set.seed(1)
data1 &lt;- data.frame(matrix(sample(48*100), ncol=48))
data2 &lt;- data.frame(matrix(sample(48*200), ncol=48))
x &lt;- y &lt;- z &lt;- &quot;xyz&quot;
save(data1, x, y, z, file=&quot;data1.RData&quot;)
save(data2, x, y, z, file=&quot;data2.RData&quot;)
</code></pre>
<hr />
<pre><code>Data &lt;- dplyr::bind_rows(
  lapply(list.files(pattern=&quot;.RData&quot;), 
         \(x) {
           e &lt;- new.env()
           load(x, envir=e) 
           rm(list=ls(envir=e, sorted = FALSE)[
             !sapply(e, is.data.frame)], 
             envir=e)
           get(ls(e), envir=e)[,3:6]
         }
  ))
</code></pre>
<hr />
<pre><code>head(Data)
    X3   X4   X5   X6
1 3309  572 3154 1957
2 3718 4167 1173  184
3 4040  680  853 4057
4  811 1122 2717 1010
5 2501 1983 1169 3932
6 1512 2394 4352 4373
</code></pre>
","2","Answer"
"79589567","79589552","<blockquote>
<p>Which one of these is more efficient/faster? Are there certain scenarios in which it is better to use one or the other?</p>
</blockquote>
<p>They are about the same (and could be made slightly more so) for a random-access list such as an <code>ArrayList</code>, but the iterator-based solution is much more efficient for a sequential list, such as a <code>LinkedList</code>.</p>
<p>This is because in a sequential list, each <code>get()</code> and each <code>remove()</code> needs to start at the beginning of the list and iterate through it to the specified index, so you have that iteration happening at least twice for each element to be removed (three times in the actual implementation you present).  On the other hand, the <code>Iterator</code> approach iterates through the whole list exactly once, no matter what specific type of list or how many elements are selected for removal.  Even if zero elements are removed, you can at best match that with an index-based approach.</p>
<p>In view of that, the <code>Iterator</code>-based approach is probably to be preferred unless you have more specific information about what type of <code>List</code> you can expect, reflected in the declared type of <code>list</code>.</p>
","7","Answer"
"79595607","79595582","<p>Maybe the interpreter can easily read the first than second or vice versa, but thats not efficiency which we would be talking of, take a look at <a href=""https://stackoverflow.com/a/64317649/14862885"">this answer</a>.</p>
<p>But replacement of != with &lt; makes a huge difference at large scale, in which sense first one is more efficient.</p>
<pre><code>N=2**25

def f(x):
  i=0
  while i!=x:
    i+=1

def g(x):
  i=0
  while i&lt;x:
    i+=1

%timeit f(N)
1.24 s ± 229 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)

%timeit g(N)
1.87 s ± 506 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
</code></pre>
<p>Its true fact that &lt; will involve more steps,computation in terms of GATES than != which will need just XOR.<br />
But the results are often masked in real world cpu by pipelining and branch prediction.<br />
You can test it <a href=""https://colab.research.google.com/drive/1jwThat5D6QwdqcEJ1Mx2kBUraJIeNozK?usp=sharing"" rel=""nofollow noreferrer"">here</a> though the opposite of proposed result may be obtained sometimes.</p>
<p>Also second code is generating many None and misusing the inline code.<br />
You can consider using <code>if lmnt not in rand_array: rand_array.append(lmnt)</code> for inline</p>
<p>Also in general its a fact that for sake of inlining we would be adding more and more complications to code</p>
","-1","Answer"
"79595762","79595582","<p>Technically, your inline is actually a little bit less efficient. It forces Python to:</p>
<ol>
<li>(Briefly) store a <code>None</code> value in the <code>True</code> case</li>
<li>Skip past the false case in the true case.</li>
</ol>
<p>This isn't just theoretical; the CPython bytecode for the second approach (from <code>dis</code>) has extra instructions for precisely that reason.</p>
<p>This is a really small difference, though. More importantly, the second approach is hard to read. Ternary expressions are for essentially one use case:</p>
<ol>
<li>You have an if statement AND</li>
<li>It needs and else statement AND</li>
<li>The only thing this if-else does is determine the value of a variable.</li>
</ol>
<p>Your use case only passes the first test; it neither needs an else statement nor creates a variable based on the result of the if. For that reason, a ternary is an unintuitive choice. (I actually had to read the code a couple times to figure out why it didn't fill your list with <code>None</code> values.) The if statement is more readable and pythonic.</p>
<p>The actual best solution is to do neither of these. Instead, use <code>random.sample</code>:</p>
<pre><code>import random
rand_array = random.sample(range(1, 16), 10)
</code></pre>
<p>This has three advantages: it's more readable, it avoids reinventing the wheel, and it's faster. You can compare execution speed using this script:</p>
<pre><code>import random
from timeit import timeit

def if_based():
    rand_array = []
    while len(rand_array) &lt; 10:
        lmnt = random.randint(1, 15)
        if lmnt not in rand_array:
            rand_array.append(lmnt)
    return rand_array

def sample_based():
    rand_array = random.sample(range(1, 16), 10)
    return rand_array

print(f&quot;If: {timeit(if_based)}&quot;)
print(f&quot;Sample: {timeit(sample_based)}&quot;)
</code></pre>
<p>The difference is pretty drastic on my machine.</p>
<pre><code>If: 6.120091282999965
Sample: 3.0449935650001407
</code></pre>
","2","Answer"
"79596897","79596807","<p>I would start by creating a dictionary out of <code>list_a</code> to make looking up values slightly easier. Once <code>list_a</code> is a dictionary, using it to construct your result is dead simple.</p>
<pre class=""lang-py prettyprint-override""><code>list_a = [
    ('gfhr_10_dfrght_sl', None, None),
    ('gfhr_11_dfrght_sl', None, None),
    ('mnop_yxt_done', None, None),
    ('mnop_yxt_gd', None, None),
    ('frdf_yxty_syn', None, None),
    ('ABC_XYZ1', 2, 0),
    ('ABC_XYZ2', 2, 0),
    ('ABC_XYZ3', 2, 0),
    ('ABC_XYZUL', 2, 0),
    ('ABC_JKL1', 1, 0),
    ('ABC_JKL2', 1, 0)
]

list_b = [
    'ABC_XYZ1',
    'ABC_XYZ2',
    'ABC_XYZ3',
    'ABC_XYZUL',
    'mnop_yxt_done',
    'mnop_yxt_gd',
    'frdf_yxty_syn',
    'ABC_JKL1',
    'ABC_JKL2',
    'DFG_OUT2_ATTgd',
    'UHBCB_DFG_nvbgh'
]

## -----------
## re-shape list_a for lookup
## -----------
list_a = {
    k: f&quot;({v2}-{v1}) &quot;
    for k, v1, v2
    in list_a
    if v1
}
## -----------

list_c = [
    f&quot;{list_a.get(key, &quot;&quot;)}{key}&quot;
    for key in list_b
]

for row in list_c:
    print(row)

</code></pre>
<p>That should give you:</p>
<pre><code>(0-2) ABC_XYZ1
(0-2) ABC_XYZ2
(0-2) ABC_XYZ3
(0-2) ABC_XYZUL
mnop_yxt_done
mnop_yxt_gd
frdf_yxty_syn
(0-1) ABC_JKL1
(0-1) ABC_JKL2
DFG_OUT2_ATTgd
UHBCB_DFG_nvbgh
</code></pre>
","2","Answer"
"79597262","79596807","<p>First mistake is string <code>'None'</code> but it should be <code>None</code>.</p>
<p>Main mistake - you run <code>else</code> before you check all values in <code>list_b</code>.</p>
<p>There are two methods for this</p>
<ol>
<li>use special variable i.e <code>found</code> which you set <code>False</code> before loop, and you set it <code>True</code> inside <code>if</code> (when you find matching element), and after loop you check if it is false and set other value</li>
</ol>
<p>(I use variabels <code>a</code>, <code>b</code> instead of <code>i</code>, <code>j</code> because it is simpler to see what list was used)</p>
<pre><code>list_c = []

for b in list_b:

  # - before loop -
  found = False

  # - loop -
  for a in list_a:
    if (b == a[0]) and (a[1] is not None):
      list_c.append(f&quot;({a[1]}-{a[2]}) {b}&quot;)
      found = True
      #break # you can use if you expect only one matching element

  # - after loop -
  if not found:
    list_c.append(b)
</code></pre>
<ol start=""2"">
<li>you can use special construction <code>for</code>-loop with <code>break</code> and with special <code>else</code> (outside
<code>for</code>-loop) which is excuted only when <code>for</code>-loop was finished without using <code>break</code></li>
</ol>
<p>(<code>else</code> has the same indentation as <code>for</code>, not as <code>if</code>)</p>
<pre><code>list_c = []

for b in list_b:

  for a in list_a:
    if (b == a[0]) and (a[1] is not None):
      list_c.append(f&quot;({a[1]}-{a[2]}) {b}&quot;)
      break  # exit loop when found element
  else: # executed only if `breake` wasn't used
    list_c.append(b)
</code></pre>
<p>First version without <code>breake</code> can be useful if there can be more matching elements.<br />
First version with <code>break</code> searchs only first matching element.</p>
<p>Second version always searchs only first matching element.</p>
<hr />
<p>Full code for first version:</p>
<pre><code>list_a = [('gfhr_10_dfrght_sl', None, None), ('gfhr_11_dfrght_sl', None, None), ('mnop_yxt_done', None, None), ('mnop_yxt_gd', None, None), ('frdf_yxty_syn', None, None), ('ABC_XYZ1', 2, 0), ('ABC_XYZ2', 2, 0), ('ABC_XYZ3', 2, 0), ('ABC_XYZUL', 2, 0), ('ABC_JKL1', 1, 0), ('ABC_JKL2', 1, 0)]


list_b = ['ABC_XYZ1', 'ABC_XYZ2', 'ABC_XYZ3', 'ABC_XYZUL', 'mnop_yxt_done', 'mnop_yxt_gd', 'frdf_yxty_syn', 'ABC_JKL1', 'ABC_JKL2', 'DFG_OUT2_ATTgd', 'UHBCB_DFG_nvbgh']

expected_list_c = ['(2-0) ABC_XYZ1', '(2-0) ABC_XYZ2', '(2-0) ABC_XYZ3', '(2-0) ABC_XYZUL', 'mnop_yxt_done', 'mnop_yxt_gd', 'frdf_yxty_syn', '(1-0) ABC_JKL1', '(1-0) ABC_JKL2', 'DFG_OUT2_ATTgd', 'UHBCB_DFG_nvbgh']

list_c = []

for b in list_b:
  # - before loop -
  found = False
  # - loop -
  for a in list_a:
    if (b == a[0]) and (a[1] is not None):
      list_c.append(f&quot;({a[1]}-{a[2]}) {b}&quot;)
      found = True
  # - after loop -
  if not found:
    list_c.append(b)

list_c = list(dict.fromkeys(list_c))

print('--- list_c ---')
print(list_c)

print('--- expected_list_c ---')
print(expected_list_c)

print('--- comparison ---')
print(list_c == expected_list_c)
</code></pre>
<p>Full code for second version:</p>
<pre><code>list_a = [('gfhr_10_dfrght_sl', None, None), ('gfhr_11_dfrght_sl', None, None), ('mnop_yxt_done', None, None), ('mnop_yxt_gd', None, None), ('frdf_yxty_syn', None, None), ('ABC_XYZ1', 2, 0), ('ABC_XYZ2', 2, 0), ('ABC_XYZ3', 2, 0), ('ABC_XYZUL', 2, 0), ('ABC_JKL1', 1, 0), ('ABC_JKL2', 1, 0)]


list_b = ['ABC_XYZ1', 'ABC_XYZ2', 'ABC_XYZ3', 'ABC_XYZUL', 'mnop_yxt_done', 'mnop_yxt_gd', 'frdf_yxty_syn', 'ABC_JKL1', 'ABC_JKL2', 'DFG_OUT2_ATTgd', 'UHBCB_DFG_nvbgh']

expected_list_c = ['(2-0) ABC_XYZ1', '(2-0) ABC_XYZ2', '(2-0) ABC_XYZ3', '(2-0) ABC_XYZUL', 'mnop_yxt_done', 'mnop_yxt_gd', 'frdf_yxty_syn', '(1-0) ABC_JKL1', '(1-0) ABC_JKL2', 'DFG_OUT2_ATTgd', 'UHBCB_DFG_nvbgh']

list_c = []

for b in list_b:
  for a in list_a:
    if (b == a[0]) and (a[1] is not None):
      list_c.append(f&quot;({a[1]}-{a[2]}) {b}&quot;)
      break
  else:
    list_c.append(b)

list_c = list(dict.fromkeys(list_c))

print('--- list_c ---')
print(list_c)

print('--- expected_list_c ---')
print(expected_list_c)

print('--- comparison ---')
print(list_c == expected_list_c)
</code></pre>
","0","Answer"
"79601457","79601344","<p>You can pass the entire dictionary:</p>
<pre class=""lang-py prettyprint-override""><code>def mypage(request):
    messages = [quotes[item] for item in quotes]
    authors = [item for item in quotes]
    return render(request, 'quotes/mypage.html', <b>{'quotes': quotes}</b>)</code></pre>
<p>and then in the template, enumerate over the <code>.items()</code> of the <code>quotes</code>, so:</p>
<pre class=""lang-html prettyprint-override""><code>{% for author, quote in <b>quotes.items</b> %}
{{author}} said: &quot;{{ quote }}&quot;
{% endfor % }</code></pre>
","3","Answer"
"79605332","79605319","<p>First of all, what does function <code>all</code> do? According to <a href=""https://docs.python.org/3/library/functions.html#all"" rel=""nofollow noreferrer"">docs</a>:</p>
<blockquote>
<p>Return True if all elements of the iterable are true (or if the iterable is empty). Equivalent to:</p>
<pre class=""lang-py prettyprint-override""><code>def all(iterable):
    for element in iterable:
        if not element:
             return False
    return True
</code></pre>
</blockquote>
<p>That means that you have to pass iterable of boolean values to function <code>all</code>.</p>
<p>Let's walk through your examples to see what happens. I will modify your function a little just so it prints list that is passed to function <code>all</code> to see what is really passed.</p>
<pre class=""lang-py prettyprint-override""><code>ITEMS = ['a', 'b', 'c', 'd']

def check_all_chars_are_in_list(string):
    temp = [char in ITEMS for char in string]
    print(temp)
    return all(temp)
</code></pre>
<p>So, for your examples:</p>
<pre class=""lang-py prettyprint-override""><code>check_all_chars_are_in_list('saban') # list temp is [False, True, True, True, False]
check_all_chars_are_in_list('abcd') # list temp is [True, True, True, True]
check_all_chars_are_in_list('') # list temp is [] (empty)
</code></pre>
<p>What happens in third example is that you pass empty list to function <code>all</code> and by definition it returns <code>True</code>. Why is <code>temp = []</code> in that example? Because you are trying to loop through <code>string</code> (which is empty) in list comprehension and since it has nothing to loop through it sets temp to be empty list. If you look at to what is function <code>all</code> equivalent (provided in quoted docs) you can see that when you pass empty list it will have nothing to loop through so it will just return <code>True</code>.</p>
<p>Your terminal example is not really the same as the one using function <code>all</code>. Lets see what might be equivalent to checking if string is in list. What your code:</p>
<pre class=""lang-py prettyprint-override""><code>st = ''
l = ['a', 'b', 'c', 'd']
print(st in l)
</code></pre>
<p>is equivalent (<strong>not exactly, but logically</strong>) is this:</p>
<pre class=""lang-py prettyprint-override""><code>def check_with_in(string, l):
    for el in l:
        if el == string:
            return True
    return False

print(check_with_in('', ['a', 'b', 'c', 'd'])) # False
</code></pre>
<p>and since <code>''</code> is not in the list it will return <code>False</code>. What using <code>in</code> with lists is equivalent to according to <a href=""https://docs.python.org/3/reference/expressions.html#membership-test-operations"" rel=""nofollow noreferrer"">docs</a>:</p>
<blockquote>
<p>The operators <code>in</code> and <code>not in</code> test for membership. [...] For container types such as <strong>list</strong>, tuple, set, frozenset, dict, or collections.deque, the expression <code>x in y</code> is equivalent to <code>any(x is e or x == e for e in y)</code>.</p>
</blockquote>
","4","Answer"
"79611383","79611365","<p>An approach using <code>lapply</code>.</p>
<p><code>sub(&quot;-.*&quot;, ...)</code> gets the year-part of the date by replacing everything (any character <code>.*</code>) after the dash with nothing. There are other ways to do this, e.g. using <code>format(..., &quot;%Y&quot;)</code> on a date class, but since we have a character class that might not be appropriate.</p>
<pre><code>lapply(dflist, \(x) 
  `colnames&lt;-`(x, 
     paste(colnames(x), unique(sub(&quot;-.*&quot;, &quot;&quot;, x[,&quot;d&quot;])), sep=&quot;_&quot;))[,-4])
[[1]]
     a_2019     b_2019    c_2019
1 0.3552064 0.82044889 0.6287748
2 0.4784447 0.45830277 0.1527843
3 0.1512967 0.06958506 0.1427231
4 0.3385199 0.85607143 0.8699766
5 0.3718691 0.42898319 0.1123058

[[2]]
     a_2018    b_2018    c_2018
1 0.5139337 0.5950540 0.6968023
2 0.3667286 0.3203041 0.0673042
3 0.8323601 0.3248967 0.7141813
4 0.3284436 0.5314369 0.7229421
5 0.9907402 0.1683277 0.3333113
</code></pre>
<p>Example if <em>d</em> <code>class(dflist[[1]][,&quot;d&quot;])</code> == <code>Date</code> using <code>format</code> (safer approach)</p>
<pre><code>lapply(dflist_, \(x) 
  `colnames&lt;-`(x, paste(colnames(x), unique(format(x[,&quot;d&quot;], &quot;%Y&quot;)), sep=&quot;_&quot;))[,-4])
</code></pre>
","2","Answer"
"79611388","79611365","<p>Another alternative using <code>lapply + setNames</code></p>
<pre><code>lapply(seq_along(dflist), \(i) {
  suffix &lt;- unique(substr(dflist[[i]]$d, 1, 4))
  setNames(dflist[[i]], paste(colnames(dflist[[i]]), suffix, sep = &quot;_&quot;))  
} )

[[1]]
      a_2019     b_2019    c_2019     d_2019
1 0.71580242 0.49293356 0.8675581 2019-01-01
2 0.74377365 0.82927954 0.6518484 2019-01-01
3 0.69639785 0.92222743 0.3476958 2019-01-01
4 0.54465125 0.07617777 0.2217393 2019-01-01
5 0.01444444 0.38529120 0.3071998 2019-01-01

[[2]]
     a_2018    b_2018      c_2018     d_2018
1 0.7967700 0.8127201 0.534049822 2018-01-01
2 0.2115015 0.8140268 0.272342837 2018-01-01
3 0.1239380 0.1284555 0.227347827 2018-01-01
4 0.7377559 0.6102532 0.251243092 2018-01-01
5 0.6431480 0.9188899 0.004611053 2018-01-01
</code></pre>
","1","Answer"
"79611405","79611365","<pre class=""lang-r prettyprint-override""><code>lapply(
  dflist,
  \(x) {
    cols &lt;- setdiff(names(x), &quot;d&quot;)
    setNames(x[cols], paste(cols, substr(x[1, &quot;d&quot;], 1, 4), sep = &quot;_&quot;))
  }
)
</code></pre>
","2","Answer"
"79611410","79611365","<p>Or</p>
<pre class=""lang-r prettyprint-override""><code>lapply(dflist, \(i) { 
  setNames(i, c((n&lt;-names(i))[-4], sprintf('%s_%s', n[4], sub('-.*', '', i$d[1])))) })
</code></pre>
<p><code>setNames</code> and <code>names</code> are for <code>data.frame</code>s.</p>
","2","Answer"
"79611460","79611365","<p>If we know the column name but not its position, we can do:</p>
<pre><code>&gt; fx &lt;- \(x, info='d') {
+   sfx &lt;- substr(el(x[[info]]), 1, 4)
+   nm &lt;- setdiff(names(x), info)
+   x[nm] |&gt; setNames(paste(nm, sfx, sep='_'))
+ }
&gt; 
&gt; lapply(dflist, fx)
[[1]]
     a_2019    b_2019    c_2019
1 0.9148060 0.5190959 0.4577418
2 0.9370754 0.7365883 0.7191123
3 0.2861395 0.1346666 0.9346722
4 0.8304476 0.6569923 0.2554288
5 0.6417455 0.7050648 0.4622928

[[2]]
     a_2018     b_2018    c_2018
1 0.9400145 0.90403139 0.5142118
2 0.9782264 0.13871017 0.3902035
3 0.1174874 0.98889173 0.9057381
4 0.4749971 0.94666823 0.4469696
5 0.5603327 0.08243756 0.8360043
</code></pre>
<p></p>
<pre><code>&gt; ## shuffle columns
&gt; set.seed(42)
&gt; dflist2 &lt;- lapply(dflist, \(x) x[sample(names(x))])
&gt; 
&gt; lapply(dflist2, fx)
[[1]]
     a_2019    c_2019    b_2019
1 0.9148060 0.4577418 0.5190959
2 0.9370754 0.7191123 0.7365883
3 0.2861395 0.9346722 0.1346666
4 0.8304476 0.2554288 0.6569923
5 0.6417455 0.4622928 0.7050648

[[2]]
      b_2018    c_2018    a_2018
1 0.90403139 0.5142118 0.9400145
2 0.13871017 0.3902035 0.9782264
3 0.98889173 0.9057381 0.1174874
4 0.94666823 0.4469696 0.4749971
5 0.08243756 0.8360043 0.5603327
</code></pre>
","2","Answer"
"79613050","79613039","<p>You can use <code>pandas</code>' built-in functionality -- use <code>.shift()</code> along with <code>.cumsum()</code> on a comparison to identify when the value changes, then increment a counter accordingly.</p>
<p>Here's how to do it:</p>
<pre><code>import pandas as pd  

my_list = ['Apple', 'Apple', 'Orange', 'Orange','Orange','Banana'] 

df = pd.DataFrame(my_list, columns=['List'])  
df['Value'] = (df['List'] != df['List'].shift()).cumsum()  

print(df)
</code></pre>
","4","Answer"
"79613063","79613039","<p>Use <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.factorize.html"" rel=""noreferrer""><code>pandas.factorize</code></a>, and add <code>1</code> if you need the category numbers to start with <code>1</code> instead of <code>0</code>:</p>
<pre><code>import pandas as pd

my_list = ['Apple', 'Apple', 'Orange', 'Orange','Orange','Banana']
grouping = pd.DataFrame(my_list, columns=['List'])

grouping['code'] = pd.factorize(grouping['List'])[0] + 1
print(grouping)
</code></pre>
<p>Output:</p>
<pre><code>     List  code
0   Apple     1
1   Apple     1
2  Orange     2
3  Orange     2
4  Orange     2
5  Banana     3
</code></pre>
","9","Answer"
"79613138","79613039","<p>If you are using pandas, you should just use the pandas function as suggested by the other answers, but there exists a very simple approach in vanilla python:</p>
<pre><code>my_list = ['Apple', 'Apple', 'Orange', 'Orange','Orange','Banana']
factors = {}
result = []

for item in my_list:
    result.append(factors.setdefault(item, len(factors) + 1))
print(result) # [1, 1, 2, 2, 2, 3]
</code></pre>
<p>Note, this doesn't depend on repeated items in the list being lumped together.</p>
<p>Note, you could even use a list-comprehension, although the purist in me doesn't like list comprehensions with side-effects, but in this case I might let that go:</p>
<pre><code>my_list = ['Apple', 'Apple', 'Orange', 'Orange','Orange','Banana']
factors = {}
result = [factors.setdefault(item, len(factors) + 1) for item in my_list]
</code></pre>
<p>If they <em>are</em> lumped together, though, here's a fun little itertools-based one-liner:</p>
<pre><code>&gt;&gt;&gt; from itertools import groupby, count
&gt;&gt;&gt; [c for c, (_, g) in zip(count(1), groupby(my_list)) for _ in g]
[1, 1, 2, 2, 2, 3]
</code></pre>
<p>Probably, I would go with the <code>dict</code> approach in production code, it's less cryptic. Although, I suspect it may be more performant on large datasets (this would be a micro-optimization)</p>
","0","Answer"
"79613243","79613039","<p>You can try <a href=""https://docs.python.org/3/library/stdtypes.html#dict.fromkeys"" rel=""nofollow noreferrer""><code>dict.fromkeys</code></a> like below</p>
<pre><code>d = {v:(i+1) for i, v in enumerate(dict.fromkeys(my_list))}
list(map(d.get, my_list))
</code></pre>
<p>which gives</p>
<pre><code>[1, 1, 2, 2, 2, 3]
</code></pre>
","1","Answer"
"79614287","79613039","<p>There are many different ways to do this, some with sorting implications:</p>
<pre><code>grouping['Label_groupby'] = grouping.groupby('List', sort=False).ngroup().add(1)

grouping['Label_factorize'] = grouping['List'].factorize()[0] + 1

grouping['Label_CategoryCode'] = grouping['List'].astype('category').cat.codes + 1
</code></pre>
<p>Output:</p>
<pre><code>     List  Label_groupby  Label_factorize  Label_CategoryCode
0   Apple              1                1                   1
1   Apple              1                1                   1
2  Orange              2                2                   3
3  Orange              2                2                   3
4  Orange              2                2                   3
5  Banana              3                3                   2
</code></pre>
","1","Answer"
"79616588","79487206","<p>I’m a beginner too and found this question interesting. The below tasks you've asked align with my current skill level:</p>
<ol>
<li><p>Given two strings of equal length, print them vertically side by side with a space between each character;</p>
</li>
<li><p>Handle the same as (1) above, but when the words are of unequal length (as discussed in the comments); and</p>
</li>
<li><p>Ensure that duplicate letters in the same word are be printed (e.g., both 'l's in &quot;hello&quot;).</p>
</li>
</ol>
<p>I’ve attempted a solution and added comments in the code to explain how it can handle both cases:</p>
<pre class=""lang-py prettyprint-override""><code># The below two lines ask the user to enter two words.
# If needed, you can replace input() calls with fixed strings.
word1 = input(&quot;Please enter the first word: &quot;)
word2 = input(&quot;Please enter the second word: &quot;)

# Compare string lengths and pad the shorter one with spaces.
# This ensures both strings are of equal length for iteration.
if len(word1) &gt; len(word2):
    word2 = word2 + &quot; &quot; * (len(word1) - len(word2))
else:
    # This covers both cases: word1 shorter or equal in length to word2.
    # If both are equally long, space is not added as difference in lengths is 0.
    word1 = word1 + &quot; &quot; * (len(word2) - len(word1))
    
# For strings of equal length, removing the if-else clauses above won’t affect the output.
# This is because we don't have to pad the words with spaces.

# Loop through each character in both words (now of equal length).
# Using 'len(word1)' or 'len(word2)' in range() gives the same result.
for index in range(len(word1)):
    # Since we iterate through each index, duplicate letters are not missed.
    print(word1[index] + &quot; &quot; + word2[index])
</code></pre>
","0","Answer"
"79624372","79624324","<p>i think it'd be ideal to use <code>.fetchmany()</code> since that can be loaded in chunks in case you're dealing with larger amounts of data. probably this should be put into a function; i'll leave that as an exercise for you :)</p>
<pre><code>import sqlite3
from collections import defaultdict

# Connect to the database
conn = sqlite3.connect(&quot;:memory:&quot;)
cursor = conn.cursor()

# Execute a query
cursor.execute(&quot;&quot;&quot;
  SELECT 1 as a, 2 as b 
  UNION ALL 
  SELECT 3 as a, 4 as b
&quot;&quot;&quot;)

# Get column names from cursor.description
columns = [desc[0] for desc in cursor.description]

# Initialize defaultdict of lists
data = defaultdict(list)

# Define chunk size, may need some tweaking
CHUNK_SIZE = 2

# Fetch in chunks and populate defaultdict
while True:
    chunk = cursor.fetchmany(CHUNK_SIZE)
    if not chunk:
        break
    for row in chunk:
        for col_name, value in zip(columns, row):
            data[col_name].append(value)

# Close connection
cursor.close()
conn.close()

# Print result
for key, values in data.items():
    print(f&quot;{key}: {values}&quot;)
</code></pre>
<p>and here's an example of how <code>data</code> looks:</p>
<pre><code>&gt;&gt;&gt; data
defaultdict(&lt;class 'list'&gt;, {'a': [1, 3], 'b': [2, 4]})
</code></pre>
","2","Answer"
"79625395","79625347","<p>As noted in comments, don't worry about conditionals to handle the first two cases. Just special case those.</p>
<blockquote>
<pre><code>ticklabels = [&quot;0&quot;, r&quot;\pi&quot;] + [fr&quot;{i}\pi&quot; for i in L[2:]]
</code></pre>
</blockquote>
<p>If you must handle <em>any</em> <code>0</code> or <code>1</code> value in the list this way and can't count on them being at the beginning of the list, then you may need to include conditional expressions in your list comprehension.</p>
<pre><code>ticklabels = [
  '0'    if n == 0 else
  r'\pi' if n == 1 else
  rf'{n}\pi'
  for n in L
]
</code></pre>
","0","Answer"
"79626453","79624324","<p>Similar to the previous answer, using <code>fetchmany()</code>, but several times faster; just the juicy parts:</p>
<pre class=""lang-py prettyprint-override""><code>data: dict[str, list] = collections.defaultdict(list)
while chunk := cursor.fetchmany(CHUNK_SIZE):
    for values, col_name in zip(zip(*chunk), columns):
        data[col_name].extend(values)
</code></pre>
<p>This is roughly 5x times faster, as it avoids repeated dictionary lookups for every single column in every single row, and uses more dense iterators.</p>
","1","Answer"
"79628330","79628290","<h2>Code correction</h2>
<p>As suggested in comments: probably you should use the <a href=""https://developers.google.com/youtube/v3/docs/playlistItems/list"" rel=""nofollow noreferrer""><code>playlistItems.list</code></a> method only costs <code>1 quota</code> unit per call, compared to <code>100 units</code> for the <code>search.list</code> method.</p>
<p>get_uploads_playlist_id:</p>
<pre><code>import requests

def get_uploads_playlist_id(channel_id, api_key):
    url = f&quot;https://www.googleapis.com/youtube/v3/channels?part=contentDetails&amp;id={channel_id}&amp;key={api_key}&quot;
    print(f&quot;Getting uploads playlist ID with URL: {url}&quot;)
    
    try:
        response = requests.get(url)
        data = response.json()
        
        if 'error' in data:
            print(f&quot;Error: {data['error']['message']}&quot;)
            return None
        
        print(f&quot;Channel API response: {data}&quot;)
        
        if 'items' in data and len(data['items']) &gt; 0:
            uploads_playlist_id = data['items'][0]['contentDetails']['relatedPlaylists']['uploads']
            print(f&quot;Found uploads playlist ID: {uploads_playlist_id}&quot;)
            return uploads_playlist_id
        else:
            print(f&quot;No channel found with ID: {channel_id}&quot;)
            return None
            
    except Exception as e:
        print(f&quot;An error occurred: {e}&quot;)
        return None


if __name__ == &quot;__main__&quot;:
    API_KEY = &quot;#####&quot;
    CHANNEL_ID = &quot;UCupvZG-5ko_eiXAupbDfxWw&quot;
    
    uploads_playlist_id = get_uploads_playlist_id(CHANNEL_ID, API_KEY)
    print(f&quot;Uploads playlist ID: {uploads_playlist_id}&quot;)
</code></pre>
<p>output#</p>
<pre><code>Getting uploads playlist ID with URL: 
https://www.googleapis.com/youtube/v3/channels?part=contentDetails&amp;id=UCupvZG-5ko_eiXAupbDfxWw&amp;key=[API_KEY_HIDDEN]

Channel API response: 
{
    &quot;kind&quot;: &quot;youtube#channelListResponse&quot;,
    &quot;etag&quot;: &quot;IbXPspjj5fQ4E6OF2FGfdSAqO6Q&quot;,
    &quot;pageInfo&quot;: {
        &quot;totalResults&quot;: 1,
        &quot;resultsPerPage&quot;: 5
    },
    &quot;items&quot;: [
        {
            &quot;kind&quot;: &quot;youtube#channel&quot;,
            &quot;etag&quot;: &quot;G8xQgHvyOJZrWSekOjayPj-5Cbc&quot;,
            &quot;id&quot;: &quot;UCupvZG-5ko_eiXAupbDfxWw&quot;,
            &quot;contentDetails&quot;: {
                &quot;relatedPlaylists&quot;: {
                    &quot;likes&quot;: &quot;&quot;,
                    &quot;uploads&quot;: &quot;UUupvZG-5ko_eiXAupbDfxWw&quot;
                }
            }
        }
    ]
}

Found uploads playlist ID: UUupvZG-5ko_eiXAupbDfxWw
Uploads playlist ID: UUupvZG-5ko_eiXAupbDfxWw
</code></pre>
<p>use this uploads playlist ID with the <code>get_videos_from_playlist</code> function to fetch all videos from the channel.</p>
<pre><code>import requests

def get_videos_from_playlist(playlist_id, api_key):
    if not playlist_id:
        print(&quot;No playlist ID provided&quot;)
        return []
        
    videos = []
    next_page_token = None
    
    print(f&quot;Fetching videos from playlist ID: {playlist_id}&quot;)
    
    while True:
        url = f&quot;https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&amp;maxResults=50&amp;playlistId={playlist_id}&amp;key={api_key}&quot;
        if next_page_token:
            url += f&quot;&amp;pageToken={next_page_token}&quot;
        
        print(f&quot;Making API request with URL: {url}&quot;)
        
        try:
            response = requests.get(url)
            data = response.json()
            
            if 'error' in data:
                print(f&quot;Error: {data['error']['message']}&quot;)
                break
            
            items = data.get('items', [])
            print(f&quot;Retrieved page with {len(items)} videos&quot;)
            
            for item in items:
                video_data = {
                    'video_id': item['snippet']['resourceId']['videoId'],
                    'title': item['snippet']['title'],
                    'published_at': item['snippet']['publishedAt'],
                }
                videos.append(video_data)
            
            next_page_token = data.get('nextPageToken')
            if not next_page_token:
                print(&quot;No more pages to fetch&quot;)
                break
            else:
                print(f&quot;Next page token: {next_page_token}&quot;)
                
        except Exception as e:
            print(f&quot;An error occurred: {e}&quot;)
            break
    
    return videos


if __name__ == &quot;__main__&quot;:
    API_KEY = &quot;###&quot;  
    PLAYLIST_ID = &quot;UUupvZG-5ko_eiXAupbDfxWw&quot;  
    
    videos = get_videos_from_playlist(PLAYLIST_ID, API_KEY)
    
    print(f&quot;\nTotal videos fetched: {len(videos)}&quot;)
    
    if videos:
        for i, video in enumerate(videos[:5]):
            print(f&quot;\nVideo {i+1}:&quot;)
            print(f&quot;  ID: {video['video_id']}&quot;)
            print(f&quot;  Title: {video['title']}&quot;)
            print(f&quot;  Published: {video['published_at']}&quot;)
    else:
        print(&quot;\nNo videos were fetched.&quot;)
</code></pre>
<pre><code>output#

Fetching videos from playlist ID: UUupvZG-5ko_eiXAupbDfxWw Making API request with URL: https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&amp;maxResults=50&amp;playlistId=UUupvZG-5ko_eiXAupbDfxWw&amp;key=

[API_KEY_HIDDEN] Retrieved page with 50 videos Next page token: EAAaHlBUOkNESWlFRUUyTTBFME16WTROekEwTmpoQ1JrWQ Making API request with URL: https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&amp;maxResults=50&amp;playlistId=UUupvZG-5ko_eiXAupbDfxWw&amp;key=[API_KEY_HIDDEN]&amp;pageToken=EAAaHlBUOkNESWlFRUUyTTBFME16WTROekEwTmpoQ1JrWQ 

Retrieved page with 50 videos Next page token: EAAaHlBUOkNHUWlFRGMzUTBKRE9URTVNa1ZHUWpGR1Fqaw Making API request with URL: https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&amp;maxResults=50&amp;playlistId=UUupvZG-5ko_eiXAupbDfxWw&amp;key=[API_KEY_HIDDEN]&amp;pageToken=EAAaHlBUOkNHUWlFRGMzUTBKRE9URTVNa1ZHUWpGR1Fqaw 

Retrieved page with 50 videos Next page token: EAAaH1BUOkNKWUJJaEF3UmpkRFJVWTJSVUpHTVRFeFFUSkQ

---------
</code></pre>
","0","Answer"
"79628452","79627957","<p>Below i've modified your code with the fixes , use this should work correctly</p>
<pre><code>
sn_users_path = &quot;C:\\Users\\karlj\\Downloads\\sn_users.csv&quot;
assigned_to_path = &quot;C:\\Users\\karlj\\Downloads\\assigned_to.csv&quot;
modified_sn = &quot;C:\\Users\\karlj\\Downloads\\sn_users_path_modified.csv&quot;
modified_assigned_to_path = &quot;C:\\Users\\karlj\\Downloads\\assigned_to_path_modified.csv&quot;


with open(sn_users_path, 'r') as sn, open(modified_sn, 'w') as outfile:
    for user_line in sn:
        user_line = user_line.strip()
        if &quot;@&quot; in user_line and &quot;.&quot; in user_line:
            users = user_line.split('@')
            users[0] = &quot; &quot;.join(users[0].split(&quot;.&quot;)).title()
            outfile.write(users[0] + '\n')  # Just write cleaned name


assigned_names = set()
with open(assigned_to_path, 'r') as f:
    for line in f:
        line = line.strip()
        if line:
            assigned_names.add(line)


with open(modified_sn, 'r') as msn:
    for line in msn:
        name = line.strip()
        if name in assigned_names:
            print(f&quot;Matched: {name}&quot;)
</code></pre>
","0","Answer"
"79629984","79629963","<p>Your current implementation splits the string by character index, which results in broken words. To preserve word integrity, you need to split by words, then group those words into roughly equal sequential chunks.</p>
<p>You can split the sentence into words and divide them sequentially across all sublists:</p>
<pre class=""lang-py prettyprint-override""><code>def explode_string(array):
    text = array[0][0]
    words = text.split()
    n = len(array)
    
    # Determine base chunk size and how many extras to distribute
    avg = len(words) // n
    extras = len(words) % n

    result = []
    start = 0
    for i in range(n):
        end = start + avg + (1 if i &lt; extras else 0)
        chunk = &quot; &quot;.join(words[start:end])
        result.append([chunk])
        start = end

    return result

original_array = [
    [&quot;Hi, this is Tesa form the sales departmet. Iam working here from&quot;],
    [&quot;&quot;],
    [&quot;&quot;]
]

result = explode_string(original_array)
print(result)
</code></pre>
<p>That will result in this output:<br />
<code>[['Hi, this is Tesa.'], ['form the sales departmet'], ['Iam working here from']]</code></p>
","4","Answer"
"79630009","79629963","<p>@julien edits for @salt solution</p>
<pre><code>def explode_string(array):
    original_text = array[0][0]
    num_sublists = len(array)
    
    words = original_text.split()
    
    words_per_sublist, extras = divmod(len(words), num_sublists)
    
    result = []
    start_idx = 0
    
    for i in range(num_sublists):
        current_words = words_per_sublist + (1 if i &lt; extras else 0)
        end_idx = start_idx + current_words
        
        sublist_text = &quot; &quot;.join(words[start_idx:end_idx])
        result.append([sublist_text])
        
        start_idx = end_idx
    
    return result

original_array = [
    [&quot;Hi, this is Tesa form the sales departmet. Iam working here from&quot;],
    [&quot;&quot;],
    [&quot;&quot;]
]
result = explode_string(original_array)
print(result)
</code></pre>
","0","Answer"
"79630739","79630693","<p>can be complete using <code>df.query()</code> Need to alter the filtering element of <code>filter_ls</code> .</p>
<p>This works</p>
<pre><code>filter_ls=['col1&gt;3', '(col1&lt;4) &amp; (col2&lt;8)', '(col2&gt;7) &amp; (col3&gt;14)']
df.query(filter_ls[2])
</code></pre>
","2","Answer"
"79631338","79631318","<p>The <code>AttributeError: 'list' object has no attribute 'set_index'</code> means that you are trying to use <code>set_index</code> in <code>list</code> but it doesn't exist.</p>
<p>I actually had this issue while working on a project a few minutes ago. What I recommend is to check for misspelling or typos.</p>
<p>You look up more <a href=""https://labex.io/tutorials/python-how-to-manage-object-attribute-errors-421190#:%7E:text=Double%2Dcheck%20attribute,and%20IDE%20support"" rel=""nofollow noreferrer"">here</a>.</p>
<blockquote>
<ol>
<li><p>Double-check attribute and method names</p>
</li>
<li><p>Use <code>hasattr()</code> to check attribute existence</p>
</li>
<li><p>Implement proper error handling</p>
</li>
<li><p>Use type hints and IDE support</p>
</li>
</ol>
</blockquote>
","0","Answer"
"79631360","79631318","<p>In your code, <code>get_sourcing_requests_by_page_index</code> is returning a tuple of two items. The first item is an integer, and the second item is a list. Check your code again to make sure you're returning the correct second value.</p>
","0","Answer"
"79631577","79631554","<p>You can do it with same <code>flatMap</code> along with adding a logic to increment a number by leveraging the index of the elements in each iteration.</p>
<p>Here is the example below</p>
<pre><code>%dw 2.0
output application/json

var ids = [
  {
    &quot;id&quot;: &quot;d3c0da07-e58f4606bm&quot;,
    &quot;did&quot;: &quot;714c9836927d&quot;
  }
]

var attributes = [
  {
    &quot;snm&quot;: &quot;3298SJDJ&quot;,
    &quot;did&quot;: &quot;714c9836927d&quot;
  }
]

var data = ids flatMap ((id) -&gt;
  (attributes filter ((attribute) -&gt; attribute.did == id.did))
    map ((attribute) -&gt; {
      snm:  attribute.snm,
      did:  id.did,
      id:   id.id
    })
)

---
data flatMap ((item, index) -&gt; [
  {
    iterid: (index * 2) + 1,
    id: item.id,
    did: item.did
  },
  {
    iterid: (index * 2) + 2,
    id: item.id,
    did: item.did
  }
])
</code></pre>
","1","Answer"
"79632419","79632332","<p>A few hints, to move you in the right direction</p>
<ol>
<li><code>value_dict = dict(value_matrix)</code> is a very convenient way to produce the dictionary</li>
</ol>
<pre><code>    {'aa': 0, 'ab': 3, ..., 'cc': 0}
</code></pre>
<ol start=""2"">
<li>Some other notable approaches:</li>
</ol>
<pre><code>    # dict comprehension
    value_dict = {key: value for key, value in value_matrix} 

    # ---------------------------------
    
    # &quot;traditional&quot; iteration over a loop
    value_dict = {}
    for key, value in value_matrix:
        value_dict[key] = value
</code></pre>
<ol start=""3"">
<li>For a given string <code>s</code> (such as <code>'acba'</code>), you could technically iterate over pairs using the <a href=""https://docs.python.org/3/library/itertools.html#itertools.pairwise"" rel=""nofollow noreferrer""><code>itertools.pairwise</code></a> function, but I prefer the approach taken below to iterates over strings of adjacent pairs:</li>
</ol>
<pre><code>    for i in range(len(s) - 1)):
        pair = s[i: i + 2]
        print(pair)
</code></pre>
<ol start=""4"">
<li>For a 2d list <code>lst2</code> of strings, the following iterates over all entries and replaces them (in this case, with an upper-case version)</li>
</ol>
<pre><code>    for i, row in enumerate(lst2):
        for j, entry in enumerate(row):
            row[j] = entry.upper()
</code></pre>
<ol start=""5"">
<li>If the <code>enumerate</code> function is not familiar yet, the following does the same as the above</li>
</ol>
<pre><code>    for i in range(len(lst2)):
        for j in range(len(lst2[i])):
            lst2[i][j] = entry.upper()
</code></pre>
","1","Answer"
"79633079","79633073","<p>You can this way too:</p>
<pre><code>
my_list = [1, 2, 2, 3, 1, 4, 3]
seen = set()
unique_list = []

for item in my_list:
    if item not in seen:
        unique_list.append(item)
        seen.add(item)

print(unique_list)
</code></pre>
","-1","Answer"
"79634591","79634539","<p>You could do it with <code>dplyr</code> by first making each element of the list into a data frame, then binding the frames together with <code>bind_rows(.id=&quot;type&quot;)</code>, which will make a type variable that identifies the names of the list elements.  Next, group by gene and either collapse the types into a comma separated string (first approach) or into a list column (second approach).</p>
<pre class=""lang-r prettyprint-override""><code>FocusedGenes &lt;- list(
  ISR_Genes = c(&quot;Ddit3&quot;, &quot;Ptpn2&quot;, &quot;Atf4&quot;, &quot;Nfe2l2&quot;, &quot;Eif2ak4&quot;, &quot;Gcn1&quot;, &quot;Eif2ak3&quot;, &quot;Qrich1&quot;, &quot;Bok&quot;),
  Perk_Genes = c(&quot;Ptpn2&quot;, &quot;Atf4&quot;, &quot;Nfe2l2&quot;, &quot;Eif2ak3&quot;, &quot;Qrich1&quot;, &quot;Bok&quot;),
  Transcription_Genes = c(&quot;Ddit3&quot;, &quot;Ptpn2&quot;, &quot;Atf4&quot;, &quot;Nfe2l2&quot;, &quot;Hsf1&quot;, &quot;Snw1&quot;, &quot;Ighmbp2&quot;, &quot;Mef2c&quot;)
)
library(dplyr)

FocusedGenes %&gt;% 
  purrr::map(\(x)data.frame(gene = x)) %&gt;% 
  bind_rows(.id = &quot;type&quot;) %&gt;% 
  group_by(gene) %&gt;% 
  filter(n() &gt; 1) %&gt;% 
  summarise(groups = paste(type, collapse=&quot;, &quot;))
#&gt; # A tibble: 7 × 2
#&gt;   gene    groups                                    
#&gt;   &lt;chr&gt;   &lt;chr&gt;                                     
#&gt; 1 Atf4    ISR_Genes, Perk_Genes, Transcription_Genes
#&gt; 2 Bok     ISR_Genes, Perk_Genes                     
#&gt; 3 Ddit3   ISR_Genes, Transcription_Genes            
#&gt; 4 Eif2ak3 ISR_Genes, Perk_Genes                     
#&gt; 5 Nfe2l2  ISR_Genes, Perk_Genes, Transcription_Genes
#&gt; 6 Ptpn2   ISR_Genes, Perk_Genes, Transcription_Genes
#&gt; 7 Qrich1  ISR_Genes, Perk_Genes

FocusedGenes %&gt;% 
  purrr::map(\(x)data.frame(gene = x)) %&gt;% 
  bind_rows(.id = &quot;type&quot;) %&gt;% 
  group_by(gene) %&gt;% 
  filter(n() &gt; 1) %&gt;% 
  summarise(groups = list(type))
#&gt; # A tibble: 7 × 2
#&gt;   gene    groups   
#&gt;   &lt;chr&gt;   &lt;list&gt;   
#&gt; 1 Atf4    &lt;chr [3]&gt;
#&gt; 2 Bok     &lt;chr [2]&gt;
#&gt; 3 Ddit3   &lt;chr [2]&gt;
#&gt; 4 Eif2ak3 &lt;chr [2]&gt;
#&gt; 5 Nfe2l2  &lt;chr [3]&gt;
#&gt; 6 Ptpn2   &lt;chr [3]&gt;
#&gt; 7 Qrich1  &lt;chr [2]&gt;
</code></pre>
<p><sup>Created on 2025-05-22 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1.9000</a></sup></p>
","2","Answer"
"79634613","79634539","<pre class=""lang-r prettyprint-override""><code>stack(FocusedGenes) |&gt;
  aggregate(ind~values, data=_, \(x) if(length(x)&gt;1L) toString(x) else NA) |&gt;
  na.omit()
</code></pre>
<blockquote>
<pre class=""lang-none prettyprint-override""><code>   values                                        ind
1     Atf4 ISR_Genes, Perk_Genes, Transcription_Genes
2      Bok                      ISR_Genes, Perk_Genes
3    Ddit3             ISR_Genes, Transcription_Genes
4  Eif2ak3                      ISR_Genes, Perk_Genes
10  Nfe2l2 ISR_Genes, Perk_Genes, Transcription_Genes
11   Ptpn2 ISR_Genes, Perk_Genes, Transcription_Genes
12  Qrich1                      ISR_Genes, Perk_Genes
</code></pre>
</blockquote>
<p>We can change names if relevant. <code>values</code> and <code>ind</code> is default from <code>stack()</code>.</p>
","4","Answer"
"79635288","79635286","<p>It was easier than I thought, since <code>rep</code> works on list:</p>
<pre class=""lang-r prettyprint-override""><code>setNames(rep(un_vecs, times = reps), nms)
</code></pre>
","3","Answer"
"79635326","79634539","<p>Similar to @Friede's answer, but with <code>data.table</code>:</p>
<pre><code>library(data.table)
setDT(stack(FocusedGenes))[,if (.N &gt; 1L) .(group = .(ind)) else NULL, values]
#&gt;     values                                    group
#&gt;     &lt;char&gt;                                   &lt;list&gt;
#&gt; 1:   Ddit3            ISR_Genes,Transcription_Genes
#&gt; 2:   Ptpn2 ISR_Genes,Perk_Genes,Transcription_Genes
#&gt; 3:    Atf4 ISR_Genes,Perk_Genes,Transcription_Genes
#&gt; 4:  Nfe2l2 ISR_Genes,Perk_Genes,Transcription_Genes
#&gt; 5: Eif2ak3                     ISR_Genes,Perk_Genes
#&gt; 6:  Qrich1                     ISR_Genes,Perk_Genes
#&gt; 7:     Bok                     ISR_Genes,Perk_Genes
</code></pre>
","0","Answer"
"79636883","79636838","<p>Modifying the representation a bit we can use a 2 column tibble where the second column is a list column.</p>
<pre><code>library(dplyr)
add &lt;- function(data, type, parameter) {
  bind_rows(data, tibble(type, parameter = list(parameter)))
}

dat &lt;- tibble() %&gt;%
  add(&quot;wealth&quot;, 1) %&gt;%
  add(&quot;diversification&quot;, 0.7) %&gt;%
  add(&quot;margin&quot;, c(1, 3))
str(dat)
## tibble [3 × 2] (S3: tbl_df/tbl/data.frame)
##  $ type     : chr [1:3] &quot;wealth&quot; &quot;diversification&quot; &quot;margin&quot;
##  $ parameter:List of 3
##   ..$ : num 1
##   ..$ : num 0.7
##   ..$ : num [1:2] 1 3
</code></pre>
","1","Answer"
"79636983","79636838","<blockquote>
<p>How to create a function to add a list to an existing list of list?</p>
</blockquote>
<p>If there already is an (empty) <code>list</code> <code>L</code>, i.e.,</p>
<pre class=""lang-r prettyprint-override""><code>L = list()
</code></pre>
<p>we can simply do</p>
<pre class=""lang-r prettyprint-override""><code>L = append(L, list(list(type='wealth', parameter=1))) |&gt;
  append(list(list(type='diversification', parameter=.7)))
</code></pre>
<blockquote>
<pre class=""lang-none prettyprint-override""><code>&gt; L
List of 2
$ :List of 2
 ..$ type     : chr &quot;wealth&quot;
 ..$ parameter: num 1
$ :List of 2
 ..$ type     : chr &quot;diversification&quot;
 ..$ parameter: num 0.7
</code></pre>
</blockquote>
<p>i.e.,</p>
<pre class=""lang-r prettyprint-override""><code>add2list = \(l, ty, pa) append(l, list(list(type=ty, parameter=pa)))
</code></pre>
<blockquote>
<pre class=""lang-none prettyprint-override""><code>&gt; add2list(L, &quot;margin&quot;, c(1, 2))
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 2


</code></pre>
</blockquote>
","2","Answer"
"79637399","79636838","<p>If a vectorized function would be useful, try this one:</p>
<pre><code>fx &lt;- \(x=NULL, type=NULL, par=NULL) {
  stopifnot(length(type) == length(NULL))  ## maybe change to `if (...) {stop(...)}`
  .fx &lt;- \(x, y) {
    if (!is.null(x) &amp;&amp; !is.list(x) &amp;&amp; all(lengths(y) == 1)) {
      c(list(x), list(y))
    } else if (all(lengths(y) &gt; 1)) {
      c(x, y)
    } else {
      c(x, list(y))
    }
  }
  if (is.list(type) &amp;&amp; is.list(par)) {
    y &lt;- Map(\(a, b) list(type=a, parameter=b), type, par)
    .fx(x, y)
  } else {
    y &lt;- list(type=type, parameter=par)
  }
  .fx(x, y)
}
</code></pre>
<h3>Usage</h3>
<pre><code>&gt; fx(NULL, &quot;wealth&quot;, 1)
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1

&gt; foo &lt;- fx(NULL, &quot;wealth&quot;, 1)
&gt; fx(foo, &quot;diversification&quot;, .7) 
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7
</code></pre>
<p><em>Piping:</em></p>
<pre><code>&gt; fx(NULL, &quot;wealth&quot;, 1) |&gt; 
+   fx(&quot;diversification&quot;, .7) 
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


&gt; fx(NULL, &quot;wealth&quot;, 1) |&gt; 
+   fx(&quot;diversification&quot;, .7) |&gt; 
+   fx(&quot;margin&quot;, c(1, 3))
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 3
</code></pre>
<p><em>Vectorized feature:</em></p>
<pre><code>&gt; fx(x=NULL, 
+    type=list(&quot;wealth&quot;, &quot;diversification&quot;, &quot;margin&quot;), 
+    par=list(1, .7, c(1, 2))
+    )
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 2
</code></pre>
<p><em>Combined:</em></p>
<pre><code>&gt; fx(NULL, &quot;wealth&quot;, 1) |&gt; 
+   fx(
+     type=list(&quot;diversification&quot;, &quot;margin&quot;), 
+     par=list(.7, c(1, 2))
+   ) |&gt; 
+   fx(&quot;foo&quot;, 42) 
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 2


[[4]]
[[4]]$type
[1] &quot;foo&quot;

[[4]]$parameter
[1] 42
</code></pre>
<p><em>Misspecification (we might come up with some nicer error messages):</em></p>
<pre><code>&gt; fx(
+   type=list(&quot;diversification&quot;, &quot;margin&quot;), 
+   par=list(.7)
+ )
Error in fx(type = list(&quot;diversification&quot;, &quot;margin&quot;), par = list(0.7)) : 
  length(type) == length(NULL) is not TRUE
</code></pre>
<p><em>Default:</em></p>
<pre><code>&gt; fx()
[[1]]
[[1]]$type
NULL

[[1]]$parameter
NULL
</code></pre>
","1","Answer"
"79639280","79639253","<p>There is something strange about your loop and how it is handling special characters. I'll leave it to you to debug, but I am pasting an example of the code below where I have added some helpful debugging print statements. I have also added an extra quote mark (&quot;) to your original string. When this happens it skips a quote mark and the letter H from the original string. This makes me think that something about how you are iterating over characters is not handling the specials well. I also moved the / to a different location because /&quot; creates an escaped quote mark and that may not be the behavior you were looking for. Finally, there is probably more efficient ways to do this, but I like the idea of sticking with your plan and getting a working output :)</p>
<pre><code>string = 'display(&quot;&quot;Hello, World!&quot;)'


def SplitString(string):
    splitstring = []
    newword = ''
    firstIteration = True
    symbolPassed = False  # Initialize here

    for i in string:
        print(f&quot;Cur char: {i}&quot;)

        if newword == '' and firstIteration == False and symbolPassed == True:
            symbolPassed = False


        elif i == ' ':
            if newword:
                splitstring.append(newword)
            newword = ''
            symbolPassed = False

        elif i in '!?+-*/\=&lt;&gt;()}{][.,&quot;:;@£$%^&amp;|¬`~_€]':
            print(f&quot;Found Special Character {i}&quot;)
            splitstring.append(newword)
            newword = ''
            splitstring.append(i)
            newword = ''
            symbolPassed = True

        else:
            newword += i
            symbolPassed = False

        firstIteration = False


    if newword:
        splitstring.append(newword)

    return splitstring

SplitedString = SplitString(string)


for i in range(0, len(SplitedString)):
    print(SplitedString[i])
print(SplitedString)
</code></pre>
<p>Notably, take a look at this output in the console for how your program behaves:</p>
<pre><code>Cur char: (
Found Special Character (
Cur char: &quot;
Cur char: &quot;
Found Special Character &quot;
Cur char: H
</code></pre>
<p>And the final output it produces when this happens:<br />
<code>['display', '(', '', '&quot;', 'ello', ',', 'World', '!', '', ')']</code></p>
","0","Answer"
"79639326","79639253","<p>Use regex:</p>
<pre><code>import re
re.split('(?=\\W)|(?&lt;=\\W)(?=\\w)', string)

['display', '(', '&quot;', 'Hello', ',', ' ', 'World', '!', '&quot;', ')']
</code></pre>
<p>Note:</p>
<p>This uses a positive lookahead for a non-word <code>(?=\W)</code> and a positive lookbehind for a non-word followed by a word <code>(?&lt;=\W)(?=\w)</code>, then splits the string on these positions.</p>
","0","Answer"
"79641183","79641119","<p>Setting up your array (slightly smaller)</p>
<pre><code>In [32]: a = np.array([[i for i in range(np.random.randint(10))] for _ in range(100)], dtype=object)

In [33]: idx = [0,10,30,50]
</code></pre>
<p>By specifying the <code>otypes</code>, I can run your vectorized function:</p>
<pre><code>In [34]: func =lambda x: x + [100]; vfunc = np.vectorize(func, otypes=[object])

In [36]: vfunc(a[idx])
Out[36]: 
array([list([0, 1, 2, 3, 4, 5, 6, 100]),
       list([0, 1, 2, 3, 4, 5, 6, 7, 100]), list([0, 1, 100]),
       list([0, 1, 2, 3, 4, 100])], dtype=object)

In [37]: a[idx] = vfunc(a[idx])

In [38]: a[idx]
Out[38]: 
array([list([0, 1, 2, 3, 4, 5, 6, 100]),
       list([0, 1, 2, 3, 4, 5, 6, 7, 100]), list([0, 1, 100]),
       list([0, 1, 2, 3, 4, 100])], dtype=object)
</code></pre>
<p>The equivalent with iteration:</p>
<pre><code>In [39]: for i in idx: a[i] = func(a[i])

In [40]: a[idx]
Out[40]: 
array([list([0, 1, 2, 3, 4, 5, 6, 100, 100]),
       list([0, 1, 2, 3, 4, 5, 6, 7, 100, 100]), list([0, 1, 100, 100]),
       list([0, 1, 2, 3, 4, 100, 100])], dtype=object)
</code></pre>
<p>I can't time the assignment without playing games with deep copies (I don't want to grow each list manytimes).  But timing just the append step:</p>
<pre><code>In [41]: %%timeit
    ...: vfunc(a[idx])
    ...: 
    ...: 
19.4 μs ± 459 ns per loop (mean ± std. dev. of 7 runs, 10,000 loops each)

In [42]: %%timeit
    ...: for i in idx: func(a[i])
    ...: 
    ...: 
2 μs ± 57.6 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each)
</code></pre>
<p>The loop is quite a bit faster.</p>
<p>Since I specify object <code>otypes</code>, I could just as well use <code>frompyfunc</code>, and run faster:</p>
<pre><code>In [43]: vofunc = np.frompyfunc(func,1,1)

In [44]: vofunc(a[idx])
Out[44]: 
array([list([0, 1, 2, 3, 4, 5, 6, 100, 100, 100]),
       list([0, 1, 2, 3, 4, 5, 6, 7, 100, 100, 100]),
       list([0, 1, 100, 100, 100]), list([0, 1, 2, 3, 4, 100, 100, 100])],
      dtype=object)

In [45]: %%timeit
    ...: vofunc(a[idx])
    ...: 
    ...: 
9.34 μs ± 183 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)
</code></pre>
<p>Still iteration is faster.</p>
<p>In some other cases <code>vectorize/frompyfunc</code> is closer in speed to iteration, even a bit faster for large samples.  But it never an order of magnitude faster.</p>
","2","Answer"
"79648003","79647909","<p>If you do not want to use VBA or Power Query, here is a pure Excel solution you can use, you will need to follow the following steps in <strong>order</strong>:</p>
<ol>
<li><p><strong>Copy</strong> your data in a new sheet, I will suppose that the column names are in line 1 and the first columns in A. This impies that the first data will be in A2.</p>
</li>
<li><p><strong>Create</strong> an excel table based on your data.</p>
</li>
<li><p><strong>Order</strong> the table by ascending date (from oldest to newest).</p>
</li>
<li><p><strong>Remove duplicates</strong> only based on species ID column. To do so go to Data &gt; Data Tools &gt; Remove Duplicates then deselect every columns and tick only species ID column and click on Ok.</p>
</li>
<li><p><strong>Order</strong> the table by descending date (from newest to oldest).</p>
</li>
<li><p><strong>Create</strong> a new columns (named Top Species for exemple) and put the following code in the first cell at line 2 if your data contains 3 columns you will need to fill D2:<br />
<code>=&quot;Top &quot; &amp; ROW(A2) - 1</code></p>
</li>
<li><p><strong>Filter</strong> the table with the new Top Species columns keeping only &quot;Top 1&quot; to &quot;Top 5&quot; or more / less depending on your needs.</p>
</li>
</ol>
<p>You can modify <strong>step 6</strong> and replace the formula by <code>=ROW(A2) - 1</code> this way the column will be of type number and you can use Excel filters on numeric (less or equal than, greater than etc.)</p>
","1","Answer"
"79648019","79647909","<h2>Top Latest First Time Appearances</h2>
<p><strong>Step by Step</strong></p>
<pre><code>=LET(data,A2:B21,date_col,1,species_col,2,top,5,
    d,SORT(data,date_col),
    s,INDEX(d,,species_col),
    u,UNIQUE(s),
    m,XMATCH(u,s),
    c,CHOOSEROWS(d,m),
    f,SORT(c,date_col,-1),
    r,TAKE(f,top),
    r)
</code></pre>
<ul>
<li>Replace the bottom-most <code>r</code> with any other variable to see what it holds.</li>
</ul>
<p><strong>Consolidated</strong></p>
<pre><code>=LET(data,A2:B21,date_col,1,species_col,2,top,5,
    d,SORT(data,date_col),
    s,INDEX(d,,species_col),
    TAKE(SORT(CHOOSEROWS(d,XMATCH(UNIQUE(s),s)),date_col,-1),top))
</code></pre>
<p><a href=""https://i.sstatic.net/oT7GV04A.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/oT7GV04A.jpg"" alt=""enter image description here"" /></a></p>
<p><strong>PowerQuery</strong></p>
<ul>
<li>If you don't mind putting your data in an Excel table, you could use PowerQuery. In a blank query, use the following code (adjust the values of the four (uppercase) constants at the top of the code):</li>
</ul>
<pre><code>let
    TABLE_NAME = &quot;Table1&quot;,
    DATE_COLUMN = &quot;Date&quot;,
    SPECIES_COLUMN = &quot;Species&quot;,
    TOP_ITEMS_COUNT = 5,
    Source = Excel.CurrentWorkbook(){[Name=TABLE_NAME]}[Content],
    #&quot;Sorted by Date Asc&quot; = Table.Sort(Source,{{DATE_COLUMN, Order.Ascending}}),
    #&quot;Buffered Table&quot; = Table.Buffer(#&quot;Sorted by Date Asc&quot;),
    #&quot;Removed Duplicate Species&quot; = Table.Distinct(#&quot;Buffered Table&quot;, {SPECIES_COLUMN}),
    #&quot;Sorted by Date Desc&quot; = Table.Sort(#&quot;Removed Duplicate Species&quot;,{{DATE_COLUMN, Order.Descending}}),
    #&quot;Kept Top Rows&quot; = Table.FirstN(#&quot;Sorted by Date Desc&quot;,TOP_ITEMS_COUNT)
in
    #&quot;Kept Top Rows&quot;
</code></pre>
<p><strong>The Data</strong></p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Date</th>
<th>Species</th>
</tr>
</thead>
<tbody>
<tr>
<td>10/25/2024</td>
<td>A</td>
</tr>
<tr>
<td>10/15/2024</td>
<td>B</td>
</tr>
<tr>
<td>9/25/2024</td>
<td>C</td>
</tr>
<tr>
<td>12/15/2024</td>
<td>A</td>
</tr>
<tr>
<td>11/9/2024</td>
<td>D</td>
</tr>
<tr>
<td>9/27/2024</td>
<td>E</td>
</tr>
<tr>
<td>2/14/2025</td>
<td>F</td>
</tr>
<tr>
<td>3/10/2025</td>
<td>A</td>
</tr>
<tr>
<td>3/24/2025</td>
<td>H</td>
</tr>
<tr>
<td>6/28/2024</td>
<td>G</td>
</tr>
<tr>
<td>12/20/2024</td>
<td>I</td>
</tr>
<tr>
<td>1/29/2025</td>
<td>A</td>
</tr>
<tr>
<td>7/25/2024</td>
<td>B</td>
</tr>
<tr>
<td>9/18/2024</td>
<td>F</td>
</tr>
<tr>
<td>11/1/2024</td>
<td>J</td>
</tr>
<tr>
<td>7/22/2024</td>
<td>I</td>
</tr>
<tr>
<td>7/23/2024</td>
<td>G</td>
</tr>
<tr>
<td>9/2/2024</td>
<td>Z</td>
</tr>
<tr>
<td>11/3/2024</td>
<td>A</td>
</tr>
<tr>
<td>4/21/2025</td>
<td>Y</td>
</tr>
</tbody>
</table></div>
","1","Answer"
"79648251","79647709","<p>Try:</p>
<pre><code>((\((?:[^()\n]+|(?2))*+\))|[^\n+*\/-]+|[+*\/-])
</code></pre>
<p>See: <a href=""https://regex101.com/r/csb4kJ/2"" rel=""nofollow noreferrer"">regex101</a></p>
<p>You can use the <a href=""https://pypi.org/project/regex/"" rel=""nofollow noreferrer"">regex</a> package from pypi to use recursion:</p>
<pre class=""lang-py prettyprint-override""><code>import regex as re

pattern=r&quot;((\((?:[^()\n]+|(?2))*+\))|[^\n+*\/-]+|[+*\/-])&quot;

def math_tokenizer(equation:str)-&gt;list:
    return [expr[0] for expr in re.findall(pattern,equation)] 

equations=[
    &quot;5+5*10&quot;,
    &quot;(2*2)-5*(math.sqrt(9)+2)&quot;,
    &quot;(((5-3)/2)*0.5)+((2*2))*(((math.log(5)+2)-2))&quot;
]

[math_tokenizer(eq) for eq in equations]
</code></pre>
<p>which outputs</p>
<pre><code>[['5', '+', '5', '*', '10'],
 ['(2*2)', '-', '5', '*', '(math.sqrt(9)+2)'],
 ['(((5-3)/2)*0.5)', '+', '((2*2))', '*', '(((math.log(5)+2)-2))']]
</code></pre>
<hr />
<p>Explanation</p>
<ul>
<li><code>( ... | ... | ... )</code>: Match either of three cases to group 1
<ul>
<li><code>( ... )</code>: Match anything in ballenced parenthesis in group 2 by
<ul>
<li><code>\(</code>: starting with a literal <code>(</code></li>
<li><code>(?: ... )*+</code>: then possesivly match 0 or more nestings
<ul>
<li><code>[^()\n]+</code>: that are eigher not a parenthesis</li>
<li><code>|</code>:</li>
<li><code>(?2)</code>: a recursion of group 2 (again ballanced parenthesis)</li>
</ul>
</li>
<li><code>\)</code>: and finally a closing parenthesis.</li>
</ul>
</li>
<li><code>[^\n+*\/-]+</code>: Match anything but a newline, of operators; this would be non-bracketed expressions.</li>
<li><code>[+*\/-]</code>: Match operators.</li>
</ul>
</li>
</ul>
","2","Answer"
"79648380","79647709","<p>A custom (non-regex) function is trivial. All you need to do is ensure that you keep track of opening and closing parentheses.</p>
<p>Assuming the string formulae are syntactically correct then:</p>
<pre><code>OPS = set(&quot;+-*/&quot;)
PMAP = {&quot;(&quot;: 1, &quot;)&quot;: -1}


def tokenizer(s: str) -&gt; list[str]:
    result = [&quot;&quot;]
    pcount = 0

    for c in s:
        pcount += PMAP.get(c, 0)
        if c in OPS:
            if pcount == 0:
                result.extend([c, &quot;&quot;])
                continue
        result[-1] += c

    return result


equations = [
    &quot;5+5*10&quot;,
    &quot;(2*2)-5*(math.sqrt(9)+2)&quot;,
    &quot;(((5-3)/2)*0.5)+((2*2))*(((math.log(5)+2)-2))&quot;,
]

for eq in equations:
    print(tokenizer(eq))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>['5', '+', '5', '*', '10']
['(2*2)', '-', '5', '*', '(math.sqrt(9)+2)']
['(((5-3)/2)*0.5)', '+', '((2*2))', '*', '(((math.log(5)+2)-2))']
</code></pre>
","2","Answer"
"79649955","79649925","<p>Just wrap the logic in a function and <code>Map</code> over the list.</p>
<pre><code>&gt; fx &lt;- \(e1, e2) {
+   e1[upper.tri(e1)] &lt;- t(e2[lower.tri(e2)])
+   e1
+ }
&gt; lst &lt;- list(list(emp, emp, emp), list(emp2, emp2, emp2))
&gt; Map(fx, lst[[1]], lst[[2]])
[[1]]
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]   NA    3    3    3    3    3    3    3    3     3     3     3     3
 [2,]    2   NA    3    3    3    3    3    3    3     3     3     3     3
 [3,]    2    2   NA    3    3    3    3    3    3     3     3     3     3
 [4,]    2    2    2   NA    3    3    3    3    3     3     3     3     3
 [5,]    2    2    2    2   NA    3    3    3    3     3     3     3     3
 [6,]    2    2    2    2    2   NA    3    3    3     3     3     3     3
 [7,]    2    2    2    2    2    2   NA    3    3     3     3     3     3
 [8,]    2    2    2    2    2    2    2   NA    3     3     3     3     3
 [9,]    2    2    2    2    2    2    2    2   NA     3     3     3     3
[10,]    2    2    2    2    2    2    2    2    2    NA     3     3     3
[11,]    2    2    2    2    2    2    2    2    2     2    NA     3     3
[12,]    2    2    2    2    2    2    2    2    2     2     2    NA     3
[13,]    2    2    2    2    2    2    2    2    2     2     2     2    NA

[[2]]
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]   NA    3    3    3    3    3    3    3    3     3     3     3     3
 [2,]    2   NA    3    3    3    3    3    3    3     3     3     3     3
 [3,]    2    2   NA    3    3    3    3    3    3     3     3     3     3
 [4,]    2    2    2   NA    3    3    3    3    3     3     3     3     3
 [5,]    2    2    2    2   NA    3    3    3    3     3     3     3     3
 [6,]    2    2    2    2    2   NA    3    3    3     3     3     3     3
 [7,]    2    2    2    2    2    2   NA    3    3     3     3     3     3
 [8,]    2    2    2    2    2    2    2   NA    3     3     3     3     3
 [9,]    2    2    2    2    2    2    2    2   NA     3     3     3     3
[10,]    2    2    2    2    2    2    2    2    2    NA     3     3     3
[11,]    2    2    2    2    2    2    2    2    2     2    NA     3     3
[12,]    2    2    2    2    2    2    2    2    2     2     2    NA     3
[13,]    2    2    2    2    2    2    2    2    2     2     2     2    NA

[[3]]
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]   NA    3    3    3    3    3    3    3    3     3     3     3     3
 [2,]    2   NA    3    3    3    3    3    3    3     3     3     3     3
 [3,]    2    2   NA    3    3    3    3    3    3     3     3     3     3
 [4,]    2    2    2   NA    3    3    3    3    3     3     3     3     3
 [5,]    2    2    2    2   NA    3    3    3    3     3     3     3     3
 [6,]    2    2    2    2    2   NA    3    3    3     3     3     3     3
 [7,]    2    2    2    2    2    2   NA    3    3     3     3     3     3
 [8,]    2    2    2    2    2    2    2   NA    3     3     3     3     3
 [9,]    2    2    2    2    2    2    2    2   NA     3     3     3     3
[10,]    2    2    2    2    2    2    2    2    2    NA     3     3     3
[11,]    2    2    2    2    2    2    2    2    2     2    NA     3     3
[12,]    2    2    2    2    2    2    2    2    2     2     2    NA     3
[13,]    2    2    2    2    2    2    2    2    2     2     2     2    NA
</code></pre>
","2","Answer"
"79650468","79650348","<p>This is not a &quot;tuple comprehension&quot;:</p>
<pre><code>( plt.figure(iFig).clf() for iFig in plt.get_fignums() )
</code></pre>
<p>It's just a generator wrapped in parentheses. They're like parentheses around any other expression, for syntactic grouping, they don't create a tuple. Consider the expression <code>(1)</code> -- this is equivalent to just <code>1</code>, not <code>(1,)</code>.</p>
<p>Tuples are created using a comma, not parentheses, although often we wrap the comma-separated items in parentheses to make the grouping clear. This is specifically necessary when the tuple is an argument to a function, because the comma interpretation as argument separators takes precedence. Consider:</p>
<pre><code>x = 1, 2 # sets x to a tuple
</code></pre>
<p>If you want to create a tuple from the generator, call the <code>tuple()</code> function:</p>
<pre><code>tuple(plt.figure(iFig).clf() for iFig in plt.get_fignums())
</code></pre>
<p>But stylistically, this is inappropriate in the first place (i.e. it's not considered Pythonic). Generators and comprehensions shouldn't be used purely for side effects, use them when you actually want to process the results (either lazily with a generator, or collecting them with a comprehension). Use a <code>for</code> loop when you only care about side effects.</p>
","4","Answer"
"79651660","79651651","<p>You don't have a list of distinct lists -- you have a list of the same list. This is due to the fact that when you instantiate the list of lists in</p>
<pre><code>arr = [[]]*2
</code></pre>
<p>you are creating a duplicated reference to the inner list. It's as if you had done</p>
<pre><code>inner_list = []
arr = [inner_list, inner_list]
</code></pre>
<p>Then, when you mutate <code>inner_list</code>, you're going to see that change in both places you access the inner list.</p>
","3","Answer"
"79652989","79652976","<p>In Python the <a href=""https://docs.python.org/3/library/functions.html#eval"" rel=""nofollow noreferrer"">eval</a> function takes two additional parameters beyond the <code>expression</code> parameter, namely <code>locals</code> and <code>globals</code> which populate the variables the expression has access to, so a simple solution is just to pass your <code>kwargs</code> to eval's <code>locals</code> and everything works as expected.</p>
<pre class=""lang-py prettyprint-override""><code>import re

def calc(function, **kwargs):
    if re.fullmatch(r'[0-9a-z+\-*/()]+', function) != None:
        return eval(function, locals=kwargs)
    return None

print(calc('x+y', x=10, y=20)) # Outputs 30
</code></pre>
<p>Obligatory warning on never using eval nor relying on regex as a security measure, but this works perfectly for a small concept as this.</p>
<p>You can read more about <code>globals</code> and <code>locals</code> in python here: <a href=""https://stackoverflow.com/questions/7969949/whats-the-difference-between-globals-locals-and-vars"">What&#39;s the difference between globals(), locals(), and vars()?</a></p>
<h2>Python &lt; 3.13 compatibility</h2>
<p>As @furas pointed out modifying the <code>eval</code> call to look like <code>eval(function, None, kwargs)</code> is required for versions older than 3.13, passing either None or an empty dictionary will work, but there is not really any security gains in disabling all globals as seen here <a href=""https://stackoverflow.com/questions/35804961/python-eval-is-it-still-dangerous-if-i-disable-builtins-and-attribute-access"">Python eval: is it still dangerous if I disable builtins and attribute access?</a>. But there are projects out there that aim to provide secure arbitrary python execution such as <a href=""https://github.com/openedx/codejail"" rel=""nofollow noreferrer"">https://github.com/openedx/codejail</a>.</p>
","3","Answer"
"79654900","79649925","<p>I actually found a better solution and I wanted to post it here. In the previous example, it did work because both matrices were composed of single values. But the function is actually not working as it should. It should mirror the lower triangle of the second matrix in the upper triangle of the first one.</p>
<p>You can check this simulating matrices with difference values:</p>
<pre class=""lang-r prettyprint-override""><code>mat1 &lt;- matrix(nrow = 10, ncol = 10)
mat2 &lt;- matrix(nrow = 10, ncol = 10)

mat1[lower.tri(mat1)] &lt;- runif(n = 10, min = 0, max = 1)
mat2[lower.tri(mat2)] &lt;- runif(n = 10, min = 0, max = 1)

fx &lt;- function(mat1, mat2) {
  n &lt;- nrow(mat1)
  for (i in 1:n) {
    for (j in 1:n) {
      if (i &gt; j) {
        mat1[j, i] &lt;- mat2[i, j]
      }
    }
  }
  mat1
}

mat3 &lt;- fx(mat1, mat2)
</code></pre>
<p>Note. We can see that in <code>mat3</code> now the upper triangle corresponds to <code>t(mat2)</code>.</p>
","-1","Answer"
"79655128","79649925","<p>I think you can use <code>pmax</code> with option <code>na.rm = TRUE</code></p>
<pre><code>&gt; pmax(emp, t(emp2), na.rm = TRUE)
      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]
 [1,]   NA    3    3    3    3    3    3    3    3     3     3     3     3
 [2,]    2   NA    3    3    3    3    3    3    3     3     3     3     3
 [3,]    2    2   NA    3    3    3    3    3    3     3     3     3     3
 [4,]    2    2    2   NA    3    3    3    3    3     3     3     3     3
 [5,]    2    2    2    2   NA    3    3    3    3     3     3     3     3
 [6,]    2    2    2    2    2   NA    3    3    3     3     3     3     3
 [7,]    2    2    2    2    2    2   NA    3    3     3     3     3     3
 [8,]    2    2    2    2    2    2    2   NA    3     3     3     3     3
 [9,]    2    2    2    2    2    2    2    2   NA     3     3     3     3
[10,]    2    2    2    2    2    2    2    2    2    NA     3     3     3
[11,]    2    2    2    2    2    2    2    2    2     2    NA     3     3
[12,]    2    2    2    2    2    2    2    2    2     2     2    NA     3
[13,]    2    2    2    2    2    2    2    2    2     2     2     2    NA
</code></pre>
","2","Answer"
"79655327","79655305","<p>I provide an idea like this:</p>
<pre><code>lst = ['A','B','C','D','E','F','G']
n = 3  # length of output list
m = 4  # how many output lists you want

lst = list(set(lst))
lst.sort()
result = []
sliced = []
factor = 1
while len(result) &lt; m:
    found = 0
    for i in range(0, len(lst), n):
        if len(lst[i:]) &lt; n:
            sliced.extend(lst[i:])
            factor *= n
            break
        for p in range(n):
            try:
                sliced.append(lst[i+p*factor])
                if len(sliced) == n:
                    break
            except IndexError:
                break
        if len(sliced) == n:
            result.append(sliced.copy())
            found = 1
        sliced.clear()
    if not found:
        break

print(result)

</code></pre>
<p>The output is</p>
<pre><code>[['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'A', 'D']]
</code></pre>
","0","Answer"
"79655558","79655305","<ul>
<li>Split the list approximately with <code>[seq[i:i+group_size] for i in range(0, n, n_groups)]</code>; all groups are now correct except the last group which might be too small</li>
<li>Fix the last group by adding elements from the first groups taken in round-robin</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>def get_groups(seq, group_size):
    n = len(seq)                                                  # n = 7
    q, r = divmod(n, group_size)                                  # q, r = 2, 1 because n = 2 * group_size + 1
    n_groups = q if r == 0 else q+1                               # n_groups = 3
    groups = [seq[i:i+group_size] for i in range(0, n, n_groups)] # ['abc', 'def', 'g']
    n_missing_in_last_group = group_size - r                      # 2 missing in last group
    for i in range(0, (n_missing_in_last_group//q)+2):
        groups[-1] += seq[i:q*group_size:group_size]              # add 'ad', then 'be', then 'cf'
    groups[-1] = groups[-1][:group_size]                          # in case we added too many elements, which happens if q does not divide n_missing_in_last_group exactly
    return groups


# test:
print( get_groups('abcdefg', 3) )
# ['abc', 'def', 'gad']
</code></pre>
<p>Alternatively, using function <code>roundrobin</code> from <a href=""https://docs.python.org/3/library/itertools.html#itertools-recipes"" rel=""nofollow noreferrer"">itertools recipes</a>:</p>
<pre class=""lang-py prettyprint-override""><code>from itertools import islice, cycle

def roundrobin(*iterables):
    &quot;Visit input iterables in a cycle until each is exhausted.&quot;
    # roundrobin('ABC', 'D', 'EF') → A D E B F C
    # Algorithm credited to George Sakkis
    iterators = map(iter, iterables)
    for num_active in range(len(iterables), 0, -1):
        iterators = cycle(islice(iterators, num_active))
        yield from map(next, iterators)

def get_groups(seq, group_size):
    n = len(seq)
    q, r = divmod(n, group_size)
    n_groups = q if r == 0 else q+1
    groups = [seq[i:i+group_size] for i in range(0, n, n_groups)]
    n_missing_in_last_group = group_size - r
    groups[-1] += islice(roundrobin(*groups[:-1]), n_missing_in_last_group)
    return groups

# test:

print( get_groups(['A','B','C','D','E','F','G'], 3) )
# [['A', 'B', 'C'], ['D', 'E', 'F'], ['G', 'A', 'D']]
</code></pre>
","0","Answer"
"79655567","79655305","<p>I would take a round-robin approach to distributing the given list as a cycle evenly onto <code>num</code> lists of size <code>size</code> by transposing, with your example:</p>
<pre><code>['A','B','C']
['D','E','F']
['G','A','B']
</code></pre>
<p>into:</p>
<pre><code>['A','D','G']
['B','E','A']
['C','F','B']
</code></pre>
<p>so that there is still only a maximum of 1 overlapping item between any pair of groups:</p>
<pre><code>from itertools import cycle, islice

def even_split(lst, num, size):
    seq = cycle(lst)
    return list(map(list, zip(*(list(islice(seq, num)) for _ in range(size)))))

lst = ['A','B','C','D','E','F','G']
print(even_split(lst, 3, 3))
</code></pre>
<p>This outputs:</p>
<pre><code>[['A', 'D', 'G'], ['B', 'E', 'A'], ['C', 'F', 'B']]
</code></pre>
<p>Demo: <a href=""https://ideone.com/63RmPm"" rel=""nofollow noreferrer"">https://ideone.com/63RmPm</a></p>
","2","Answer"
"79657251","79655305","<p>I'm going to try my best to be generous and write a clearer version of what I'm guessing to be the intended problem statement:</p>
<p>Given an input set <em>S</em>, generate <em>n</em> distinct subsets <em>s_i</em> of <em>S</em> each having <em>m</em> elements each where</p>
<ul>
<li><em>m</em> &gt;= 2</li>
<li><em>n</em> &gt;=1</li>
<li>For each value <em>x</em> in <em>S</em>, let <em>u</em>(<em>x</em>) be the count of the number of times it appears across all <em>s</em>. <em>s</em> must be chosen so that the difference between the lowest <em>u</em> and highest <em>u</em> is minimized; that is, output frequency of values of <em>S</em> is balanced.</li>
<li>Consider all possible pair subsets {<em>x</em>, <em>y</em>} of <em>S</em> where <em>x</em> &lt; <em>y</em>. A pair appears in <em>s_i</em> if {<em>x</em>,<em>y</em>} is a subset of <em>s_i</em>. For each pair, let <em>v</em>(<em>x</em>,<em>y</em>) be the count of appearances of that pair across all <em>s</em>. <em>s</em> must be chosen so that the difference between the lowest <em>v</em> and highest <em>v</em> is minimized; that is, output frequency of pairs of <em>S</em> is balanced.</li>
</ul>
<p>In the other answers so far I've seen a mix of fast-and-suboptimal, and fast-and-wrong. I'll be patient about that, but in the meantime, my approach is:</p>
<ul>
<li>Adapt the suggestion from @blhsing as a starting point for more refinement (&quot;warm start&quot;)</li>
<li>Demonstrate what's effectively a family of LP constructions that are anywhere from slow to very slow, and either optimal or approximated-suboptimal depending on parameters</li>
</ul>
<p>I'll start with the output to talk through those differences. For your first, smaller case, the warm-start is good enough that there is no more optimal solution:</p>
<pre class=""lang-none prettyprint-override""><code>Warm start:
For 7 values, 3 rows, 3 columns: t=0.00 s
Value assignments balanced between 1 and 2
Pair assignments balanced between 0 and 1
Output:
ABC
ADG
DEF

Solution:
For 7 values, 3 rows, 3 columns: t=0.78 s
Value assignments balanced between 1 and 2
Pair assignments balanced between 0 and 1
Output:
ABC
AEG
CDF
</code></pre>
<p>For the second case it's more complicated. The warm start is sub-optimal:</p>
<pre class=""lang-none prettyprint-override""><code>Warm start:
For 7 values, 5 rows, 3 columns: t=0.00 s
Value assignments balanced between 2 and 3
Pair assignments balanced between 0 and 2
Output:
ACE
ACF
ADF
BDG
BEG
</code></pre>
<p>The exact solution is optimal but slow:</p>
<pre class=""lang-none prettyprint-override""><code>Exact solution:
For 7 values, 5 rows, 3 columns: t=4.49 s
Value assignments balanced between 2 and 3
Pair assignments balanced between 0 and 1
Output:
ABF
ACD
AEG
BDG
CEF
</code></pre>
<p>If we ask for a good-enough solution after one second, it's not any more optimal than warm start:</p>
<pre class=""lang-none prettyprint-override""><code>Time-limited approximation:
For 7 values, 5 rows, 3 columns: t=1.02 s
Value assignments balanced between 2 and 3
Pair assignments balanced between 0 and 2
</code></pre>
<p>If we give up on the lower constraint and only balance from the upper end, it's both optimal and reasonably fast:</p>
<pre class=""lang-none prettyprint-override""><code>High approximation:
For 7 values, 5 rows, 3 columns: t=0.12 s
Value assignments balanced between 2 and 3
Pair assignments balanced between 0 and 1
</code></pre>
<p>LP performance is a bit of a dark art. If we give up on the upper constraint and only balance from the lower end, it's still optimal but actually slower than if we give it all of the constraints:</p>
<pre class=""lang-none prettyprint-override""><code>Low approximation:
For 7 values, 5 rows, 3 columns: t=6.58 s
Value assignments balanced between 2 and 3
Pair assignments balanced between 0 and 1
</code></pre>
<p>The full code:</p>
<pre class=""lang-py prettyprint-override""><code>import itertools
import math
import time
import typing

import pulp


def var_sanity(actual: float, var: pulp.LpVariable) -&gt; bool:
    if var.varValue is None:
        # No check possible; variable has not been optimised
        return True
    return math.isclose(actual, var.varValue)


class Problem(typing.NamedTuple):
    values: tuple[str, ...]
    n_rows: int
    n_cols: int
    constrain_low: bool
    constrain_high: bool
    problem: pulp.LpProblem
    min_assigns: pulp.LpVariable
    max_assigns: pulp.LpVariable
    min_pairs: pulp.LpVariable
    max_pairs: pulp.LpVariable
    assigns: dict[tuple[int, str], pulp.LpVariable]
    pairs: dict[tuple[int, str, str], pulp.LpVariable]
    pair_values: list[tuple[str, str]]

    @classmethod
    def build(
        cls, values: typing.Sequence[str], n_rows: int, n_cols: int,
        constrain_low: bool = True,
        constrain_high: bool = True,
    ) -&gt; typing.Self:
        if not (constrain_low or constrain_high):
            raise ValueError('Must have at least one low or high constraint sense')

        min_assigns = pulp.LpVariable(name='min_assigns', cat=pulp.LpContinuous)
        min_pairs = pulp.LpVariable(name='min_pairs', cat=pulp.LpContinuous)
        if not constrain_low:
            min_assigns.varValue = 0
            min_assigns.fixValue()
            min_pairs.varValue = 0
            min_pairs.fixValue()

        max_assigns = pulp.LpVariable(name='max_assigns', cat=pulp.LpContinuous)
        max_pairs = pulp.LpVariable(name='max_pairs', cat=pulp.LpContinuous)
        if not constrain_high:
            max_assigns.varValue = 0
            max_assigns.fixValue()
            max_pairs.varValue = 0
            max_pairs.fixValue()

        # Over all input element values, the extrema for the number of times they've been assigned,
        # in service of
        # &gt;    I want each item in lst to be used as evenly as possible, i.e.
        # &gt;    I don't want A in every output and G in one output.
        value_imbalance = max_assigns - min_assigns

        # Over all pairs, the extrema for the number of times they've been assigned,
        # in service of
        # &gt;    I don't want, for example, A and B to appear in 5 results together while
        # &gt;    A and C or B and C appear in no results together.
        pair_imbalance = max_pairs - min_pairs

        # For each input value and output row, binary assignment.
        assigns = pulp.LpVariable.dicts(
            name='assign', cat=pulp.LpBinary,
            indices=[
                (y, v)
                for y in range(n_rows)
                for v in values
            ],
        )

        # Fairly safe assumption to reduce effort: each row will have at least one different output
        for y, v in enumerate(values[:n_rows]):
            assign = assigns[y, v]
            assign.varValue = 1
            assign.fixValue()

        # Surrogate pair variables, binary
        pair_values = [
            (a, b)
            for ia, a in enumerate(values[:-1])
            for b in values[ia + 1:]
        ]
        pairs = pulp.LpVariable.dicts(
            name='pair', cat=pulp.LpBinary,
            indices=[
                (y,) + pair
                for y in range(n_rows)
                for pair in pair_values
            ],
        )

        problem = pulp.LpProblem(name='pair_distribution', sense=pulp.LpMinimize)
        problem.setObjective(value_imbalance + pair_imbalance)

        self = cls(
            values=tuple(values), n_rows=n_rows, n_cols=n_cols,
            constrain_low=constrain_low, constrain_high=constrain_high,
            problem=problem, assigns=assigns, pairs=pairs, pair_values=pair_values,
            min_assigns=min_assigns, max_assigns=max_assigns,
            min_pairs=min_pairs, max_pairs=max_pairs,
        )
        self.constrain_assigns()
        self.constrain_pairs()
        self.warm_start()

        return self

    def constrain_assigns(self) -&gt; None:
        # Each row must have exactly n_cols assignments (order does not matter)
        for y in range(self.n_rows):
            self.problem.addConstraint(
                name=f'row{y}_assign_count',
                constraint=self.n_cols == pulp.lpSum(self.assigns[y, v] for v in self.values),
            )

        # Across all values, enforce assignment extrema
        for v in self.values:
            assign_sum = pulp.lpSum(self.assigns[y, v] for y in range(self.n_rows))
            if self.constrain_low:
                self.problem.addConstraint(
                    name=f'assign_min_{v}',
                    constraint=self.min_assigns &lt;= assign_sum,
                )
            if self.constrain_high:
                self.problem.addConstraint(
                    name=f'assign_max_{v}',
                    constraint=self.max_assigns &gt;= assign_sum,
                )

    def constrain_pairs(self) -&gt; None:
        # Across all pairs, enforce assignment extrema
        for a, b in self.pair_values:
            assign_sum = pulp.lpSum(self.pairs[y, a, b] for y in range(self.n_rows))
            if self.constrain_low:
                self.problem.addConstraint(
                    name=f'pair_min_{a}_{b}',
                    constraint=self.min_pairs &lt;= assign_sum,
                )
            if self.constrain_high:
                self.problem.addConstraint(
                    name=f'pair_max_{a}_{b}',
                    constraint=self.max_pairs &gt;= assign_sum,
                )

        # Correlate value assignments and pairs
        for (y, a, b), pair in self.pairs.items():
            # Placing upper bounds on 'pair' is only useful if pair counts are being increased,
            # that is, if constrain_low is enabled
            if self.constrain_low:
                # If a is low, this pair is low
                self.problem.addConstraint(
                    name=f'cor_y{y}_{a}_{b}_left',
                    constraint=pair &lt;= self.assigns[y, a],
                )
                # If b is low, this pair is low
                self.problem.addConstraint(
                    name=f'cor_y{y}_{a}_{b}_right',
                    constraint=pair &lt;= self.assigns[y, b],
                )

            if self.constrain_high:
                # If a and b are high, this pair must be high
                self.problem.addConstraint(
                    name=f'cor_y{y}_{a}_{b}_min',
                    constraint=pair &gt;= -1 + self.assigns[y, a] + self.assigns[y, b],
                )

    def warm_start(self) -&gt; None:
        # Adapted from https://stackoverflow.com/a/79655567/313768

        # For values ABCDE: infinite iterator of ABCDEABCDEA...
        cycled_values = itertools.cycle(self.values)

        # Iterator over (what will be) every output column
        cycled_columns = (
            # take n_rows values from the infinite cycle
            tuple(itertools.islice(cycled_values, self.n_rows))
            for _ in range(self.n_cols)   # for each output column
        )

        # Transpose from columns to rows
        cycled_rows = map(
            frozenset,  # for membership test, set is faster
            zip(*cycled_columns)
        )

        # Set initial (warm-start) variable values, but don't fix at those values
        for y, row in enumerate(cycled_rows):
            for v in self.values:
                self.assigns[y, v].varValue = int(v in row)
            for a, b in self.pair_values:
                pair = self.pairs[y, a, b]
                pair.varValue = int(a in row and b in row)

    def solve(
        self,
        verbose: bool = False,
        timeout: float | None = None,
    ) -&gt; 'Solution':
        solver = pulp.PULP_CBC_CMD(msg=verbose, timeLimit=timeout, warmStart=True)

        t_start = time.perf_counter()
        self.problem.solve(solver)
        t_end = time.perf_counter()

        if self.problem.status != pulp.LpStatusOptimal:
            raise ValueError(self.problem.status)
        return Solution.from_problem(problem=self, solve_time=t_end - t_start)

    def estimated_solution(self) -&gt; 'Solution':
        return Solution.from_problem(problem=self, solve_time=0)


class Solution(typing.NamedTuple):
    out: tuple[tuple[str, ...], ...]
    n_values: int
    min_assigns: int
    max_assigns: int
    min_pairs: int
    max_pairs: int
    solve_time: float

    @classmethod
    def from_problem(cls, problem: Problem, solve_time: float) -&gt; typing.Self:
        # Order doesn't matter, so output in ascending lexicographic order
        out = tuple(sorted(
            tuple(sorted(
                v for v in problem.values
                if pulp.value(problem.assigns[y, v]) &gt; 0.5
            ))
            for y in range(problem.n_rows)
        ))

        assign_counts = [
            sum(1 for row in out if v in row)
            for v in problem.values
        ]
        pair_counts = [
            sum(1 for row in out if a in row and b in row)
            for a, b in problem.pair_values
        ]
        min_assigns = min(assign_counts)
        max_assigns = max(assign_counts)
        min_pairs = min(pair_counts)
        max_pairs = max(pair_counts)
        if problem.constrain_low:
            assert var_sanity(min_assigns, problem.min_assigns)
            assert var_sanity(min_pairs, problem.min_pairs)
        if problem.constrain_high:
            assert var_sanity(max_assigns, problem.max_assigns)
            assert var_sanity(max_pairs, problem.max_pairs)

        return cls(
            out=out,
            n_values=len(problem.values),
            min_assigns=min_assigns, min_pairs=min_pairs,
            max_assigns=max_assigns, max_pairs=max_pairs,
            solve_time=solve_time,
        )

    @staticmethod
    def assign_desc(min_: float, max_: float) -&gt; str:
        return f'assignments balanced between {min_:.0f} and {max_:.0f}'

    def describe(self, full: bool = True) -&gt; str:
        brief = (
f'''For {self.n_values} values, {len(self.out)} rows, {len(next(iter(self.out)))} columns: t={self.solve_time:.2f} s
Value {self.assign_desc(self.min_assigns, self.max_assigns)}
Pair {self.assign_desc(self.min_pairs, self.max_pairs)}
''')
        if full:
            return brief + f'''Output:
{&quot;\n&quot;.join(&quot;&quot;.join(row) for row in self.out)}
'''
        return brief


def demo_op_a() -&gt; None:
    problem = Problem.build('ABCDEFG', n_rows=3, n_cols=3)
    print('Warm start:')
    print(problem.estimated_solution().describe())
    print('Solution:')
    print(problem.solve().describe())


def demo_op_b() -&gt; None:
    params = {'values': 'ABCDEFG', 'n_rows': 5, 'n_cols': 3}
    problem = Problem.build(**params)
    print('Warm start:')
    print(problem.estimated_solution().describe())
    print('Exact solution:')
    print(problem.solve().describe())

    print('Time-limited approximation:')
    print(problem.solve(timeout=1).describe(full=False))

    print('High approximation:')
    problem = Problem.build(**params, constrain_high=True, constrain_low=False)
    print(problem.solve().describe(full=False))

    print('Low approximation:')
    problem = Problem.build(**params, constrain_high=False, constrain_low=True)
    print(problem.solve().describe(full=False))


if __name__ == '__main__':
    demo_op_a()
    demo_op_b()
</code></pre>
","0","Answer"
"79657724","79657712","<p>You can use multi-level column access to resolve this issue.</p>
<p>Here is the example:</p>
<pre class=""lang-py prettyprint-override""><code>import yfinance as yf

# Download 1-minute intraday data for Airbus 
df = yf.download(&quot;AIR.DE&quot;, interval=&quot;1m&quot;, period=&quot;1d&quot;)
# For multi-level columns, you might need:
x = df.index.tolist()  # This should work for the index
y = df[('Close', 'AIR.DE')].tolist()  # Multi-level column access
</code></pre>
","2","Answer"
"79657992","79657969","<p>The result of the recursive call just needs to be bound to a variable, not quoted.<br />
<strong><code>let</code></strong> evaluates the right hand side automatically, so there's no need write a leading quote and you certainly don’t need <strong><code>eval</code></strong>.</p>
<pre class=""lang-lisp prettyprint-override""><code>(define (intersection l1 l2)
  (if (null? l1)
      '()
      (let ((tail (intersection (cdr l1) l2))) 
            (cons (car l1) tail)               
            tail))))
</code></pre>
","-1","Answer"
"79658009","79657997","<p>You probably want to apply your function to each row individually, in which case you could do:</p>
<pre><code>library(tidyverse)
dat %&gt;%
  mutate(calcd = apply(across(x), 1, testFunc))
</code></pre>
<p>This returns:</p>
<pre><code>  x calcd
1 1  1, 2
2 2  2, 3
3 3  3, 4
4 4  4, 5
5 5  5, 6


'data.frame':   5 obs. of  2 variables:
 $ x    : int  1 2 3 4 5
 $ calcd:List of 5
  ..$ :List of 2
  .. ..$ out1: Named int 1
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  .. ..$ out2: Named num 2
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  ..$ :List of 2
  .. ..$ out1: Named int 2
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  .. ..$ out2: Named num 3
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  ..$ :List of 2
  .. ..$ out1: Named int 3
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  .. ..$ out2: Named num 4
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  ..$ :List of 2
  .. ..$ out1: Named int 4
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  .. ..$ out2: Named num 5
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  ..$ :List of 2
  .. ..$ out1: Named int 5
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;
  .. ..$ out2: Named num 6
  .. .. ..- attr(*, &quot;names&quot;)= chr &quot;x&quot;

</code></pre>
","2","Answer"
"79658025","79657997","<p>Here are some options, depending wholly on your expected output and what you're going to do with it next.</p>
<p>(BTW: I'm using <code>tibble(dat)</code> instead of <code>dat</code> only to differentiate between vector-columns and list-columns, your production use does not need <code>tibble(..)</code>.)</p>
<ol>
<li><p>If you want both vectors returned from <code>testFunc()</code> as individual columns in <code>dat</code>, then we can just do</p>
<pre class=""lang-r prettyprint-override""><code>tibble(dat) |&gt;
  mutate(as.data.frame(testFunc(x)))
# # A tibble: 5 × 3
#       x  out1  out2
#   &lt;int&gt; &lt;int&gt; &lt;dbl&gt;
# 1     1     1     2
# 2     2     2     3
# 3     3     3     4
# 4     4     4     5
# 5     5     5     6
</code></pre>
<p>This works because <code>mutate(.)</code> (and other similar verb-functions in <code>dplyr</code>) appends columns if the value of the unnamed argument is a frame itself (it does not work with a named-list, though the differences between the two are very minor).</p>
</li>
<li><p>If you want each of the pairs of the return values stored in a list-column <em>per-row</em> in <code>dat</code>, then we can use <code>purrr::transpose</code>:</p>
<pre class=""lang-r prettyprint-override""><code>out &lt;- dat |&gt;
  mutate(calcd = purrr::transpose(testFunc(x)))
out
#   x calcd
# 1 1  1, 2
# 2 2  2, 3
# 3 3  3, 4
# 4 4  4, 5
# 5 5  5, 6

tibble(out)
# # A tibble: 5 × 2
#       x calcd           
#   &lt;int&gt; &lt;list&gt;          
# 1     1 &lt;named list [2]&gt;
# 2     2 &lt;named list [2]&gt;
# 3     3 &lt;named list [2]&gt;
# 4     4 &lt;named list [2]&gt;
# 5     5 &lt;named list [2]&gt;

out$calcd[[1]]
# $out1
# [1] 1
# $out2
# [1] 2
</code></pre>
<p>In this second form, each element in <code>$calcd</code> is a named list with one value each (based on how your <code>testFunc(.)</code> worked).</p>
</li>
</ol>
<p>Both methods assume that the return from <code>testFunc(.)</code> is a named list of vectors where each vector is the same length as the number of rows.</p>
<p>If you aren't familiar with what <code>purrr::transpose</code> does, compare the change:</p>
<pre class=""lang-r prettyprint-override""><code>str(testFunc(dat$x))
# List of 2
#  $ out1: int [1:5] 1 2 3 4 5
#  $ out2: num [1:5] 2 3 4 5 6

str(purrr::transpose(testFunc(dat$x)))
# List of 5
#  $ :List of 2
#   ..$ out1: int 1
#   ..$ out2: num 2
#  $ :List of 2
#   ..$ out1: int 2
#   ..$ out2: num 3
#  $ :List of 2
#   ..$ out1: int 3
#   ..$ out2: num 4
#  $ :List of 2
#   ..$ out1: int 4
#   ..$ out2: num 5
#  $ :List of 2
#   ..$ out1: int 5
#   ..$ out2: num 6
</code></pre>
","6","Answer"
"79658251","79658238","<p>In Python, <code>collections.deque.appendleft()</code> already provides O(1) prepend operations and is very efficient. It’s hard to get faster than this in pure Python. If you need better performance, you would need to implement the data structure in a faster language like C++.</p>
<p>Here is a simple benchmark showing the speed difference:</p>
<p>For Python:</p>
<pre><code>import time
from collections import deque

class FrontOnlyDeque:
    def __init__(self):
        self.deque = deque()

    def prepend(self, value):
        self.deque.appendleft(value)

def time_operations(impl, n):
    start_time = time.time()
    for i in range(n):
        impl.prepend(i)
    return time.time() - start_time

n = 1000000

deque_impl = FrontOnlyDeque()
deque_time = time_operations(deque_impl, n)

print(f&quot;Deque appendleft: {deque_time} seconds&quot;)
</code></pre>
<p>For C++:</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;list&gt;
#include &lt;chrono&gt;

int main() {
    const int n = 1000000;
    std::list&lt;int&gt; lst;

    auto start = std::chrono::high_resolution_clock::now();

    for (int i = 0; i &lt; n; ++i) {
        lst.push_front(i);
    }

    auto end = std::chrono::high_resolution_clock::now();

    std::chrono::duration&lt;double&gt; elapsed = end - start;
    std::cout &lt;&lt; &quot;std::list push_front: &quot; &lt;&lt; elapsed.count() &lt;&lt; &quot; seconds\n&quot;;

    return 0;
}
</code></pre>
","-2","Answer"
"79658518","79657997","<p>If dimensions are equal, why not extending <code>dat</code>?</p>
<pre class=""lang-r prettyprint-override""><code>cbind(dat, list2DF(testFunc(dat$x)))
</code></pre>
<blockquote>
<pre class=""lang-none prettyprint-override""><code>&gt; str(cbind(dat, list2DF(testFunc(dat$x))))
'data.frame':  5 obs. of  3 variables:
$ x   : int  1 2 3 4 5
$ out1: int  1 2 3 4 5
$ out2: num  2 3 4 5 6
</code></pre>
</blockquote>
","1","Answer"
"79659206","79659142","<p>If you only care about the number of characters in the expression, then I do the check the other way around, to eliminate the word <code>not</code>.</p>
<pre><code>CustomList? newType = oldList is null ? null : [..oldList];
</code></pre>
<p>I think this is the most readable.</p>
<hr>
<p>You can also eliminate the repeated occurrence of <code>oldList</code>. Match the list contents using a list pattern to a new, shorter identifier. This can shave off some more characters if the name <code>oldList</code> is longer.</p>
<pre><code>CustomList? newType = oldList is [..var x] ? [..x] : null;
</code></pre>
<p>Note that for most types of <code>oldList</code>, this will create a temporary copy of the collection.</p>
","1","Answer"
"79659815","79659739","<p>Mark pointed out the problem was with using .index which only returns the first occurrence.</p>
<p>Alternately you can either:</p>
<ol>
<li><p>use range(theLengthOfYourList) and loop a position through that.</p>
</li>
<li><p>or use a <strong>list</strong> comprehension with <code>enumerate()</code> which will return all instances where the value you are looking for occurs without having to use loops.</p>
</li>
</ol>
","0","Answer"
"79660676","79657969","<blockquote>
<p>I try also to replace appel with (eval appel) but it didn' work.</p>
</blockquote>
<p>The expression <code>(eval '(intersection (cdr l1) l2))</code> will eventually evaluate <code>l1</code> and <code>l2</code>, which are free variables in the expression. You didn't show which error you had but you probably encountered something like this:</p>
<pre><code>reference to undefined identifier: l1
</code></pre>
<p>Function calls do not capture the current lexical environment; <code>eval</code> is not special here, it doesn't have access to the bindings that are present in the source code when it is being executed.</p>
","1","Answer"
"79663127","79660875","<p>You can play around with this</p>
<pre class=""lang-swift prettyprint-override""><code>import SwiftUI

struct Mailbox: Identifiable {
    let id = UUID()
    let title: String
    let icon: String
    let count: Int?
    let isBold: Bool
    let countColor: Color
}

struct MailboxListView: View {
    // Sample mailbox data
    private let mainMailboxes: [Mailbox] = [
        Mailbox(title: &quot;Inbox&quot;, icon: &quot;tray.full&quot;, count: 2, isBold: true, countColor: .blue),
        Mailbox(title: &quot;Unread&quot;, icon: &quot;envelope.badge&quot;, count: 5, isBold: false, countColor: .gray),
    ]

    private let icloudMailboxes: [Mailbox] = [
        Mailbox(title: &quot;Drafts&quot;, icon: &quot;doc.text.fill&quot;, count: 1, isBold: false, countColor: .gray),
        Mailbox(title: &quot;Sent&quot;, icon: &quot;paperplane.fill&quot;, count: nil, isBold: false, countColor: .gray),
        
        Mailbox(title: &quot;Junk&quot;, icon: &quot;trash.fill&quot;, count: nil, isBold: false, countColor: .gray)
    ]

    // Expand/collapse toggles
    @State private var isICloudExpanded = true

    var body: some View {
        NavigationView {
            List {
                // Mailboxes Section
                ForEach(mainMailboxes) { mailbox in
                    mailboxRow(mailbox)
                }

                // iCloud Section
                Section(header: sectionHeader(title: &quot;iCloud&quot;, isExpanded: $isICloudExpanded)) {
                    if isICloudExpanded {
                        ForEach(icloudMailboxes) { mailbox in
                            mailboxRow(mailbox)
                        }
                    }
                }
            }
            .listStyle(InsetGroupedListStyle())
            .navigationTitle(&quot;Mailboxes&quot;)
            .navigationBarTitleDisplayMode(.inline)
            
            .toolbar {
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button(&quot;Edit&quot;) {
                        // Edit tapped
                    }
                }
            }
        }
    }

    // MARK: - Reusable row
    private func mailboxRow(_ mailbox: Mailbox) -&gt; some View {
        HStack {
            Label(mailbox.title, systemImage: mailbox.icon)
                .font(mailbox.isBold ? .headline : .body)

            Spacer()

            if let count = mailbox.count {
                Text(&quot;\(count)&quot;)
                    .foregroundColor(mailbox.countColor)
                    .font(.subheadline)
            }

            Image(systemName: &quot;chevron.right&quot;)
                .foregroundColor(.gray)
                .font(.system(size: 12, weight: .semibold))
        }
        .padding(.vertical, 4)
    }

    // MARK: - Section Header with Dropdown
    private func sectionHeader(title: String, isExpanded: Binding&lt;Bool&gt;) -&gt; some View {
        Button(action: {
            withAnimation {
                isExpanded.wrappedValue.toggle()
            }
        }) {
            HStack {Text(title)
                    .font(.headline)
                    .foregroundColor(.primary)

                Spacer()
                
                Image(systemName: isExpanded.wrappedValue ? &quot;chevron.down&quot; : &quot;chevron.right&quot;)
                    .font(.subheadline)
                    .foregroundColor(.blue)
            }
            .padding(.vertical, 6)
        }
    }
}

#Preview {
    MailboxListView()
}
</code></pre>
<p>and to change the navigation title color use below in your App</p>
<pre><code>let coloredNavAppearance = UINavigationBarAppearance()

init() {
        let font = UIFont(name: &quot;Helvetica Neue&quot;, size: 20) ?? UIFont(name: &quot;OpenSans-Regular&quot;, size: 20.0)
        coloredNavAppearance.configureWithOpaqueBackground()
        coloredNavAppearance.backgroundColor = UIColor(.white.opacity(0.0))
        coloredNavAppearance.titleTextAttributes = [.foregroundColor: UIColor.black,
                                                    .font: font as Any]
        UINavigationBar.appearance().standardAppearance = coloredNavAppearance
        UINavigationBar.appearance().scrollEdgeAppearance = coloredNavAppearance
    }
</code></pre>
<p>Here is the output</p>
<p><a href=""https://i.sstatic.net/2fnORBNM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/2fnORBNM.png"" alt=""enter image description here"" /></a></p>
","0","Answer"