Post Id,Parent Id,Title,Body,CreationDate,Score,PostType
"79442399","79213129","","<p>You can still use a workaround by leveraging the <code>Dictionary&lt;TKey, TValue&gt;</code> constructor that takes an <code>IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;</code>:</p>
<pre><code>var d = new Dictionary&lt;string, int&gt;
{
    [&quot;a&quot;] = 1,
    [&quot;b&quot;] = 2,
    [&quot;c&quot;] = 3
};
</code></pre>
<p>Why doesn't <code>Dictionary&lt;string, int&gt; d = [{&quot;a&quot;, 1}];</code> work?
Collection expressions (<code>[...]</code>) are currently designed to work only with indexable collections like <code>List&lt;T&gt;</code> and arrays. They do not automatically convert into <code>IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;</code> for <code>Dictionary&lt;TKey, TValue&gt;</code>.</p>
","2025-02-15 23:55:24","1","Answer"
"79383263","79213129","","<p>You were so close. It should be: <code>Dictionary&lt;string, int&gt; d = new() { { &quot;a&quot;, 1 } };</code></p>
","2025-01-24 05:07:22","-2","Answer"
"79374209","79102249","","<p>I had the exact same error message when trying to do the same. My first idea was to write the <code>Dict[str, str]</code> as <code>List[Tuple[str, str]]</code>. This yielded a similar issue though.</p>
<p>What ended up working for me, was to create another Model with two attributes acting as key and value pair and having a list of that:</p>
<pre><code>from typing import Generic, TypeVar
from pydantic import BaseModel

# Parameterized Key-Value-Pair Model
TKey = TypeVar(&quot;TKey&quot;)
TValue = TypeVar(&quot;TValue&quot;)
class KeyValuePair(BaseModel, Generic[TKey, TValue]):
    key: TKey
    value: TValue

class C(BaseModel):
   ccc: List[A]
   ppp: List[KeyValuePair[str, List[B]]]
</code></pre>
<p>Let me know, if that works for you.</p>
","2025-01-21 11:28:30","1","Answer"
"79313564","79313157","","<p>You don't need to import any &quot;helper&quot; modules to do this.</p>
<p>You should always validate your source data. In this case a ValueError exception may arise if the 2nd token cannot be converted to float. The same exception may be raised if the number of comma-delimited tokens is not exactly two.</p>
<p>Therefore:</p>
<pre><code>d: dict[str, tuple[int, float]] = {}

for row in open(&quot;data.txt&quot;):
    try:
        k, v = row.split(&quot;,&quot;)
        if (t := d.get(k)) is not None:
            d[k] = t[0]+1, t[1] + float(v)
        else:
            d[k] = 1, float(v)
    except ValueError:
        pass # ignore invalid line

print(d)
</code></pre>
<p><strong>Note:</strong></p>
<p>It's not necessary to strip the input rows because <em>float()</em> is impervious to leading and trailing whitespace.</p>
","2024-12-28 10:00:45","1","Answer"
"79313227","79313157","","<p>Assuming the lines from the file is read into an iterable separated by newlines (<a href=""https://www.w3schools.com/python/ref_file_readlines.asp"" rel=""nofollow noreferrer"">readlines</a>),</p>
<pre><code>from itertools import groupby
from operator import itemgetter

tokens = [tuple(token.strip() for token in line.split(&quot;,&quot;)) for line in lines.split()]
tokens.sort()
result = {k: sum(float(v) for _, v in g) for k, g in groupby(tokens, key=itemgetter(0))}
</code></pre>
<blockquote>
<p>{'Beechcraft': 467.2, 'Cessna': 455.4, 'Gulfstream': 1229.5, 'Honda': 1304.8, 'Velocity': 1560.4}</p>
</blockquote>
","2024-12-28 04:44:18","0","Answer"
"79313197","79313157","","<p>Here's how I would do it</p>
<pre><code>with open(&quot;aircraft_data.txt&quot;, &quot;r&quot;) as infile:
    for line in infile:
        # Split the line into aircraft type and mileage
        aircraft, mileage = line.strip().split(&quot;,&quot;)
        mileage = float(mileage)  # Convert mileage to a float

        # If the aircraft is already in the dictionary, update its count and mileage
        if aircraft in aircraft_dict:
            count, total_mileage = aircraft_dict[aircraft]
            aircraft_dict[aircraft] = (count + 1, total_mileage + mileage)
        else:
            # If the aircraft is not in the dictionary, add it with initial values
            aircraft_dict[aircraft] = (1, mileage)
</code></pre>
","2024-12-28 04:02:21","4","Answer"
"79313157","","Python Dictionaries","<p>hoping you all can help. I am having a bit of trouble wrapping my head around importing a text file into a python dictionary.
As an overview of my program, I am trying to take a text file (basicaly a CSV, but with a txt extention)
Sample data from text file:</p>
<pre><code>Cessna,234.1
Velocity,412.5
Beechcraft,467.2
Gulfstream,599.3 
Honda,412.1
Velocity,398.8
Velocity,343.9
Gulfstream,630.2
Honda,456.3
Cessna,221.3
Velocity,405.2
Honda,436.4
</code></pre>
<p>The final product I am hoping for is to combine like aircraft, for example Honda would be Honda: (3,1304.8) in the dictionary. Honda being the key, 3 is the number of like aircraft in the text file, 1304.8 bing total mile between all Honda aircraft.</p>
<p>This is the code i am using to read the text file into a list (print is just me looking at what my code is doing)</p>
<pre><code>aircraft = []
aircraftDict = {}

infile = open(file, &quot;r&quot;)
for item in infile:
    item = item.rstrip()
    aircraft.append(item)
    
print (aircraft)

infile.close()
</code></pre>
<p>I have no issues with reading a file into a list, this is my result as a list:</p>
<pre><code>['Cessna,234.1', 'Velocity,412.5', 'Beechcraft,467.2', 'Gulfstream,599.3', 'Honda,412.1', 'Velocity,398.8', 'Velocity,343.9', 'Gulfstream,630.2', 'Honda,456.3', 'Cessna,221.3', 'Camry,4.2', 'Honda,436.4']
</code></pre>
<p>All is good here, data looks good.</p>
<p>I have two questions:</p>
<p>One: how do I combine the list items and get Honda, 1304.8
Two: more importantly, how do I create a dictionary out of the combined data with a tuple. For example:</p>
<pre><code>{&quot;Honda&quot;:(3,1304.8), next aircraft here} 
</code></pre>
<p>Again, the final dictionary would be: Aircraft Type:(Number of Aircraft, Mile total from all like aircraft)</p>
","2024-12-28 03:07:43","-3","Question"
"79302620","79301703","","<p><code>def</code> defines a key value pair in the <strong>current</strong> dictionary. There is always a dictionary which is 'current', it's whatever is at the top of the dictionary stack. Initially this will be 'userdict' but if you 'begin' another dictionary it will be pushed onto the top of the dictionary stack and will become the current dictionary.</p>
<p>You need to understand that PostScript is a stack based interpreted language, not a compiled language. When you do:</p>
<pre><code>/a 22
</code></pre>
<p>What you are actually doing is putting two objects on the operand stack; the name object <code>/a</code> and the integer value 22.</p>
<p>You then execute the <code>def</code> operator which takes two objects from the stack and makes a key/value pair in the current dictionary.</p>
<p>Your code:</p>
<pre><code>/d &lt;&lt;
        /a 22 def
        /b 33 
    &gt;&gt; def % Define dictionary 'd'
</code></pre>
<p>Starts by placing the name object <code>/d</code> on the operand stack, then it places a mark object on the operand stack (<code>&lt;&lt;</code> is a mark, this particular form of mark is used to introduce a dictionary, but you could also use <code>[</code> or even just <code>mark</code>, the different mark types are essentially identical)</p>
<p>Then you put two more objects on the stack, <code>/a</code> and 22. Then you execute the <code>def</code> operator.</p>
<p>That immediately takes two objects from the stack and defines them as a key/value pair in the current dictionary (probably userdict).</p>
<p>NOTE it does <strong>not</strong> define them in the dictionary which you are in the middle of constructing, which is what you seem to be expecting. The interpreter cannot know that you are constructing a dictionary, it just executes tokens as it encounters them, it can't look ahead.</p>
<p>Then you put two more objects on the stack, <code>/b</code> and 23, and a closing mark <code>&gt;&gt;</code> which is actually an operator. That counts back along the stack to find the most recent mark, checks that the number of objects is a multiple of two, and then removes pairs one at a time and places them in a new dictionary. The new dictionary is left on the operand stack.</p>
<p>Then you execute the <code>def</code> operator, which looks at the stack, finds two objects, <code>/d</code> and a dictionary, and creates a key/value pair in the current dictionary, again most likely userdict.</p>
<p>The overall effect is to modify the current dictionary by adding two key/value pairs:</p>
<pre><code>/a 22
/d &lt;&lt;/b 23&gt;&gt;
</code></pre>
<p>You then do:</p>
<pre><code>d ===
</code></pre>
<p>You should avoid using <code>===</code> as that's a Ghostscript-specific operator and you won't find it in any other interpreter. You can dump a dictionary by doing:</p>
<pre><code>{== ==} forall
</code></pre>
<p>But executing <code>d</code> causes the interpreter to search the current dictionary for that name, which it finds (because you <code>def</code>ined it). It pushes that on the operand stack. <code>===</code> then prints out that dictionary.</p>
<p>You then do:</p>
<pre><code>d begin
</code></pre>
<p>which searches for <code>d</code>, finds a key/value pair with that key, and pushes the value onto the operand stack, leaving the dictionary <code>d</code> on the operand stack.</p>
<p>You then do :</p>
<pre><code>a =
</code></pre>
<p>So the interpreter searches the dictionaries on the dictionary stack looking for a key <code>/a</code>. It doesn't find it in the current dictionary, so it searches the next dictionary back on the stack, which will be the one that was current when you defined <code>a</code>, probably userdict. It finds the key/value pair, and pushes the value onto the operand stack. You then <code>=</code> it and get the output 22.</p>
<p>Similarly for <code>b</code> except that it is defined in the current dictionary so we don't need to search back on the stack.</p>
<p>Then you do :</p>
<pre><code>d /b get =
</code></pre>
<p>So the interpreter searches the current dictionaries for an object with the name <code>d</code>, finds one and pushes it on the operand stack, then you put the name object <code>/b</code> on the operand stack, and execute the 'get' operator.</p>
<p><code>get</code> checks the operands to see that the first one is a dictionary, and if it is, looks for the name in that dictionary. Finds it, and returns it on the operand stack. Finally <code>=</code> prints it out.</p>
<p>You then do</p>
<pre><code>d /a get =
</code></pre>
<p>Skipping all the same stuff as above up to the  execution of <code>get</code>, that looks for the name <code>/a</code> in the dictionary and doesn't find it. At that point it gives you an <code>/undefined</code> error in 'get'.</p>
","2024-12-23 08:58:00","1","Answer"
"79301703","","Not understanding dictionary semantics, key-value defining and visability","<p>I am not sure I understand the semantics of Postscript dictionaries. What is the difference if a 'def' is used when defining an entry to a dictionary as opposed to just listing the key value pair. Below, I define /a and /b in dictionary /d. /a is defined using 'def'; /b is defined using a ky value pair. When printing out /d with the '===' operator, we only see /b. If we load /d onto the dictionary stack, we can access and print both /a and /b. If we do a get on /d /b we get back the value of /b. But if we do a get on /d /a, we get an undefined error.</p>
<p><strong>Could someone help me understand why /a is not defined/visable using  'get' on dictionary /d, why it does not show up when printing /d and why it is accessible/defined when we load /d onto the dictionary stack?</strong></p>
<p>The definition of the 'def' operator is pretty straightforward:</p>
<blockquote>
<p>def - associates key with value in the current dictionary—the one on the top of the dic-
tionary stack (see Section 3.4, “Stacks”). If key is already present in the current
dictionary, def simply replaces its value; otherwise, def creates a new entry for key
and stores value with it. - p.568 Postscript Language Reference 3rd edition</p>
</blockquote>
<p>In this case, I see the currentdict at the time of defining /a as being /d. But 'get' can't see it. However, it is in the dictionary as when you load the dictionary onto the dictionary stack, it is defined.</p>
<pre><code>/d &lt;&lt;
        /a 22 def
        /b 33 
    &gt;&gt; def % Define dictionary 'd'

d ===      % Print out contents of d; Prints /b 33 but no /a

d begin    % Push d onto the dictionary stack
a =        % Prints value of d/a '22'
b =        % Prints value of d/b '33'
end        % Pop d off of the dictionary stack

d /b get =  % Prints value of d/b '33'
d /a get =  % Error /undefine. Cannot find /a in d
</code></pre>
<p>Output (using ghostscript):</p>
<pre><code>$ gs -q -dALLOWPSTRANSPARENCY -dBATCH -dNOPAUSE -dQUIET -dNOSAFER     -sDEVICE=pdfwrite  -o tmp_test.pdf tmp_test.ps
&lt;&lt; /b 33 &gt;&gt;
22
33
33
Error: /undefined in --get--
Operand stack:
   --dict:1/1(L)--   a
Execution stack:
   %interp_exit   .runexec2   --nostringval--   --nostringval--   --nostringval--   2   %stopped_push   --nostringval--   --nostringval--   --nostringval--   false   1   %stopped_push   1990   1   3   %oparray_pop   1989   1   3   %oparray_pop   1977   1   3   %oparray_pop   1833   1   3   %oparray_pop   --nostringval--   %errorexec_pop   .runexec2   --nostringval--   --nostringval--   --nostringval--   2   %stopped_push   --nostringval--
Dictionary stack:
   --dict:795/1123(ro)(G)--   --dict:0/20(G)--   --dict:77/200(L)--
Current allocation mode is local
Current file position is 317
GPL Ghostscript 10.01.2: Unrecoverable error, exit code 1
$
</code></pre>
","2024-12-22 20:42:37","2","Question"
"79298698","79297682","","<p>Godot automatically loads the file as type <code>JSON</code> if the resource is set up that way (open the .tres file in an external editor, there’s some additional metadata that tells Godot it’s Json). See the docs on <code>JSON</code> here: <a href=""https://docs.godotengine.org/en/stable/classes/class_json.html"" rel=""nofollow noreferrer"">https://docs.godotengine.org/en/stable/classes/class_json.html</a>.</p>
<p><code>preload()</code> will throw an error if the file is not valid.</p>
<p>To parse the Json, access its <code>data</code> property or call <code>get_data()</code>:</p>
<pre><code>extends Node

var card_data: Dictionary = {}

func _ready():
    var parsed_json = preload(&quot;res://singletons/database/card_details.tres&quot;).data

    # The parsed Json could be anything: Dictionary, Array,
    # a single string, number or bool. So we keep the default
    # value if it isn’t what we expected.
    if parsed_json is Dictionary:
        card_data = parsed_json
</code></pre>
<p>You can also load naked Json files without the resource metadata. There are two ways to deserialize a Json string:</p>
<ol>
<li><code>JSON.parse_string(json_string)</code><br />
This is static and returns <code>null</code> if parsing fails, otherwise returns the parsed data.</li>
<li><code>my_json.parse(json_string)</code><br />
This is not static, so you need to new up a <code>JSON</code> instance first. It returns an <code>Error</code> and puts the parsed data into the <code>JSON</code> instance’s <code>data</code> property.
<pre><code>var my_json = JSON.new()
var error = my_json.parse(json_string)
if error == OK:
    var data_received = my_json.data
</code></pre>
As you can see, this second option is a little annoying.</li>
</ol>
","2024-12-21 00:58:38","1","Answer"
"79297682","","How do I convert JSON object to Godot Native dictionary?","<p>I have a JSON object which contains all cards.</p>
<p>I have saved this as a .tres resource however when I try to use this object Godot throws me an error saying cannot assign JSON object to Dictionary.</p>
<pre><code>    extends Node


    var card_data: Dictionary = {}


    func _ready() -&gt; void:
        card_data = preload(&quot;res://singletons/database/card_details.tres&quot;)



    func get_random_card(category: String) -&gt; Dictionary:
        var cards_in_category: Array = card_data[category]
        var random_key: int = randi() % cards_in_category.size()
        return cards_in_category[random_key]
</code></pre>
<p>I had thought that if you save a JSON object as a resource Godot will automatically convert that to a dictionary but clearly this is not the case. How do I convert the JSON object so that it is fit for use in Godot?</p>
","2024-12-20 15:22:04","1","Question"
"79296584","79296505","","<p>Couple of things:</p>
<ol>
<li><p><code>jinja2.Environment().from_string(&quot;{{ foo }} - {{ foobar }} - {{ something }}&quot;)</code> this expression is currently getting ignored. I'm assuming this is supposed to be assigned to <code>new_message_template</code></p>
</li>
<li><p>You are doing in place mutations on the dictionary. Why? Just create a new list of transformed dicts.</p>
</li>
<li><p>Jinja 2 template rendering is I/O bound making it a good candidate for thread based concurrency. Threading is good for I/O bound tasks because python threads run concurrently while waiting for I/O operations to complete. You can use <code>ThreadPoolExecutor</code></p>
</li>
</ol>
<pre><code>import jinja2
from concurrent.futures import ThreadPoolExecutor

new_message_template = jinja2.Environment().from_string(&quot;{{ foo }} - {{ foobar }} - {{ something }}&quot;)

def process_item(item):
    rendered_value = new_message_template.render(**item)
    return {&quot;new_key&quot;: rendered_value}

def process_data(data):
    with ThreadPoolExecutor() as executor:
        result = list(executor.map(process_item, data))
    return result

# Example data
my_list = [
    {&quot;foo&quot;: &quot;value1&quot;, &quot;foobar&quot;: &quot;value2&quot;, &quot;something&quot;: &quot;value3&quot;},
    {&quot;foo&quot;: &quot;hello&quot;, &quot;foobar&quot;: &quot;world&quot;, &quot;something&quot;: &quot;!&quot;}
]

new_list = process_data(my_list)

print(new_list)
</code></pre>
","2024-12-20 08:21:12","3","Answer"
"79296505","","Optimized way to replace a large list of dicts","<p>Let's say I have a (large) list of (large) dicts, for instance:</p>
<pre class=""lang-json prettyprint-override""><code>my_list = [
    {
        &quot;foo&quot;: &quot;bar&quot;,
        &quot;foobar&quot;: &quot;barfoo&quot;,
        &quot;something&quot;: 1,
        &quot;useless_bool&quot;: True
    },
    {
        &quot;foo&quot;: &quot;rab&quot;,
        &quot;foobar&quot;: &quot;oofrab&quot;,
        &quot;something&quot;: 1,
        &quot;useless_str&quot;: &quot;different_value&quot;
    },
    ...
]
</code></pre>
<p>Where this list contains <strong>thousands</strong> of dicts, and where each dicts can have <strong>hundreds</strong> of keys. Also I have a Jinja template, for instance:</p>
<pre class=""lang-py prettyprint-override""><code>jinja_template = jinja2.Environment().from_string(
    &quot;{{ foo }} - {{ foobar }} - {{ something }}&quot;
)
</code></pre>
<p>For each dict in my list, I want add a new key containing the rendered Jinja template (using other existing keys), and remove all other keys. To end with something like:</p>
<pre class=""lang-json prettyprint-override""><code>[
    {
        &quot;new_key&quot;: &quot;bar - barfoo - 1&quot;
    },
    {
        &quot;new_key&quot;: &quot;rab - oofrab - different_value&quot;
    },
    ...
]
</code></pre>
<p>So far I made a (dumb) loop to do so:</p>
<pre class=""lang-py prettyprint-override""><code>import jinja2

new_message_template = jinja2.Environment().from_string(&quot;{{ foo }} - {{ foobar }} - {{ something }}&quot;)

for item in my_list:
    # Render the new value
    rendered_value = new_message_template.render(**item)
    # Remove all existing keys
    item.clear()
    # Set the new key/value
    item[&quot;new_key&quot;] = rendered_value
</code></pre>
<p>This works.</p>
<p><strong>But considering this list contains thousands of dicts, with each having hundreds of keys</strong>, is there a more optimized way to perform this operation, in term of performances and execution time ?</p>
","2024-12-20 07:48:32","0","Question"
"79295861","79278373","","<p>We can simplify the code:</p>
<pre><code>from collections import defaultdict

data = {'1': {'2', '3'}, '2': {'3', '4'}, '3': {'2', '4'}}

references = defaultdict(set)

for key, values in data.items():
    for value in values:
        references[value].add(key)

    dummy = references[key]

print(dict(references))
</code></pre>
<p>The <code>dummy</code> assignment forces the <code>'1': set()</code> entry in the <code>references</code> dictionary.  If you don't need it, leave out the assignment.</p>
<pre><code>% python3 test.py
{'3': {'2', '1'}, '2': {'3', '1'}, '1': set(), '4': {'3', '2'}}
%
</code></pre>
<p>If you really want some sort of gnarly comprehension, you can do:</p>
<pre><code>data = {'1': {'2', '3'}, '2': {'3', '4'}, '3': {'2', '4'}}

references = {
    value: set(key for key in data if value in data[key]) for value in set.union(*data.values())
}

print(references)
</code></pre>
<p>Which gives us:</p>
<pre><code>% python3 test.py
{'3': {'1', '2'}, '2': {'3', '1'}, '4': {'3', '2'}}
%
</code></pre>
","2024-12-19 23:54:06","0","Answer"
"79294697","79294574","","<p>You can create a Series from your dictionary, then <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.unstack.html"" rel=""nofollow noreferrer""><code>unstack</code></a> to DataFrame, <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reindex.html"" rel=""nofollow noreferrer""><code>reindex</code></a>/<a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame..html"" rel=""nofollow noreferrer""><code>set_axis</code></a>, perform your operation and <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.join.html"" rel=""nofollow noreferrer""><code>join</code></a> with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.add_suffix.html"" rel=""nofollow noreferrer""><code>add_suffix</code></a>:</p>
<pre><code>def split(k):
    x, y = k.split('_')
    return (int(y), x)

# ensure using NaNs for missing values, not strings
df = df.replace('Unk', pd.NA).convert_dtypes()

# reshape to match the original DataFrame
tmp = (pd.Series({split(k): v for k, v in dic.items()})
         .unstack()
         .reindex(df.index.year)  # match years in df.index
         .set_axis(df.index)      # restore full dates
      )

# divide, add_suffix, join
out = df.join(df.div(tmp).add_suffix('1'))
# or
# out = df.join(tmp.rdiv(df), rsuffix='1')
</code></pre>
<p>Output:</p>
<pre><code>               A   B        A1        B1
2019-12-31     1   3      0.01     0.015
2020-12-30     2  20  0.016667  0.133333
2020-12-31  &lt;NA&gt;  50      &lt;NA&gt;  0.333333
</code></pre>
<p>Intermediate <code>tmp</code>:</p>
<pre><code>              A    B
2019-12-31  100  200
2020-12-30  120  150
2020-12-31  120  150
</code></pre>
<h4>Variant</h4>
<p>Here we rather create a <code>tmp</code> with only the years, and use an intermediate <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename.html"" rel=""nofollow noreferrer""><code>rename</code></a> step to perform the alignment:</p>
<pre><code>def split(k):
    x, y = k.split('_')
    return (int(y), x)

df = df.replace('Unk', pd.NA).convert_dtypes()

tmp = (pd.Series({split(k): v for k, v in dic.items()})
         .unstack()
      )

out = df.join(df.rename(lambda x: x.year).div(tmp)
                .add_suffix('1').set_axis(df.index)
             )
</code></pre>
<p>Intermediate <code>tmp</code>:</p>
<pre><code>        A    B
2019  100  200
2020  120  150
</code></pre>
","2024-12-19 14:56:05","3","Answer"
"79294692","79294574","","<p>One solution with apply() which runs a given function on each row:</p>
<pre><code>df = df.replace(&quot;Unk&quot;, np.nan)
df[&quot;A1&quot;] = df.apply(lambda row: round(row[&quot;A&quot;] / dic[&quot;A_&quot; + str(row.name)[:4]], 3) , axis=1)
df[&quot;B1&quot;] = df.apply(lambda row: round(row[&quot;B&quot;] / dic[&quot;B_&quot; + str(row.name)[:4]], 3) , axis=1)
display(df)
</code></pre>
<p><a href=""https://i.sstatic.net/vT1O1T5o.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/vT1O1T5o.png"" alt=""enter image description here"" /></a></p>
<p>PS: row is a series and row.name is actually the index of the dataframe so the date.</p>
","2024-12-19 14:54:05","2","Answer"
"79294574","","In Pandas, how to reference and use a value from a dictionary based on column AND index values in a dataframe?","<p>I've data about how my times people are sick in certain locations (location A and B) at certain times (index of dates). I need to divide each value by the population in that location (column) AND at that time (index), which references a separate dictionary.</p>
<p>Eg dataframe:</p>
<pre><code>import pandas as pd
data = [{'A': 1, 'B': 3}, {'A': 2, 'B': 20}, {'A': &quot;Unk&quot;, 'B': 50}]
df = pd.DataFrame(data, index=[pd.to_datetime(&quot;2019-12-31&quot;)
                               , pd.to_datetime(&quot;2020-12-30&quot;)
                               , pd.to_datetime(&quot;2020-12-31&quot;)])
Out:
            A   B
2019-12-31  1   3
2020-12-30  2   20
2021-12-31  Unk 50
</code></pre>
<p>Population dictionary (location_year):</p>
<pre><code>dic = {&quot;A_2019&quot;: 100, &quot;B_2019&quot;: 200, &quot;A_2020&quot;: 120, &quot;B_2020&quot;: 150}
</code></pre>
<p>While it's not necessary to have the output in the same df, the output I'm trying to achieve would be:</p>
<pre><code>            A   B    A1     B1
2019-12-31  1   3   0.01    0.015
2020-12-30  2   20  0.017   0.133
2021-12-31  Unk 50  nan     0.333
</code></pre>
<p>I've tried lots of different approaches, but almost always get an unhashable type error.</p>
<pre><code>for col in df.columns:
     df[col + &quot;1&quot;] = df[col]/dic[col + &quot;_&quot; + df.index.strftime(&quot;%Y&quot;)]
Out: `TypeError: unhashable type: 'Index
</code></pre>
<p>I guess I don't understand how pandas is parsing the df.index value to the dictionary(?). Can this be fixed, or is another approach necessary?</p>
","2024-12-19 14:10:46","2","Question"
"79292648","79286206","","<p>Dart's type inference is strong; the <code>Map</code> s type will be inferred by its entries.</p>
<pre class=""lang-dart prettyprint-override""><code>final map = {
  'one': true,
};
</code></pre>
<p>is the same as</p>
<pre class=""lang-dart prettyprint-override""><code>final Map&lt;String, bool&gt; map = {
  'one': true,
};
</code></pre>
<p>You don't get a compile error for the <code>bar</code> function because technically, the map's type of <code>Map&lt;String, bool&gt;</code> compiles with the parameter's type of <code>Map&lt;String, Object&gt;</code>.</p>
<p>In Dart, as <a href=""https://api.flutter.dev/flutter/dart-core/Object-class.html"" rel=""nofollow noreferrer"">everything is of type <code>Object</code> (except <code>null</code>)</a>.</p>
<pre class=""lang-dart prettyprint-override""><code>final one = true;
print(one is Object); // true
</code></pre>
<p>If you would like to allow <code>dynamic</code> values on your map, you can go about it a couple different ways.</p>
<ol>
<li>(Recommended) Supply type arguments to the map</li>
</ol>
<pre class=""lang-dart prettyprint-override""><code>final map = &lt;String, dynamic&gt;{
  'one': true,
};
</code></pre>
<ol start=""2"">
<li>Add a second entry that differs from the first entries type</li>
</ol>
<pre class=""lang-dart prettyprint-override""><code>final map = {
  'one': true,
  'two': 'hello world',
};
</code></pre>
<p><strong>Caution:</strong> This way only works because you are providing multiple <code>value</code>s of different types.</p>
<p>If you provided multiple entries of the same types, the map's inferred type wouldn't change</p>
<pre class=""lang-dart prettyprint-override""><code>// type: Map&lt;String, bool&gt;
final map = {
  'one': true,
  'two': false,
};
</code></pre>
","2024-12-18 22:21:25","0","Answer"
"79286206","","How should I pass a map subtype into a function?","<pre><code>  void foo() {
    final fooMap = {
      'one': true,
    };
    bar(fooMap);
  }

  void bar(Map&lt;String, Object&gt; barMap) {
    barMap['two'] = 'Hello World';
  }
</code></pre>
<p>In the above code, I get the error:</p>
<p><code>DartError: TypeError: &quot;Hello World&quot;: type 'String' is not a subtype of type 'bool'</code></p>
<p>As I understand it, this is because <code>Map&lt;String, bool&gt;</code> is not a subtype of <code>Map&lt;String, Object&gt;</code>. If my understanding is correct, I don't know why my IDE doesn't tell me not to do that.</p>
<p>In <code>foo()</code>, if I change <code>final fooMap...</code> to <code>Map&lt;String, Object&gt; fooMap...</code>, then everything works just fine. But again, I feel like the IDE should catch it, to let me know about this.</p>
<p>In <code>bar()</code>, if I copy the map into a new <code>Map&lt;String, Object&gt;</code>, it also works.</p>
<p>My question is, how should I handle this? Is there a strongly typed option here? I prefer to catch things like this at compile time, not runtime.</p>
","2024-12-16 22:20:09","0","Question"
"79282963","79278373","","<p>Maybe somebody can get it to work in a &quot;pythonic&quot; way with a dictionary comprehension, but I couldn't with the repeats in the values.</p>
<p>No obvious way of getting the &quot;1&quot;, since it doesn't appear in the original values. Also, no particular order guaranteed. (In fact, my code seems to give different orders in the sets every time I run it.)</p>
<pre><code>def invert( d ):
    tcid = dict()
    for _, s in d.items():
        for x in s: tcid[x] = set()
    for k, s in d.items():
        for x in s: tcid[x].add( k )
    return tcid

d = {&quot;1&quot;: {&quot;2&quot;, &quot;3&quot;}, &quot;2&quot;: {&quot;3&quot;, &quot;4&quot;}, &quot;3&quot;: {&quot;2&quot;, &quot;4&quot;}}
e = invert( d )
print( d )
print( e )
</code></pre>
<p>Output (for example; the order within a printed set can change):</p>
<pre><code>{'1': {'2', '3'}, '2': {'3', '4'}, '3': {'2', '4'}}
{'2': {'3', '1'}, '3': {'2', '1'}, '4': {'2', '3'}}
</code></pre>
","2024-12-15 18:52:34","1","Answer"
"79280520","79276328","","<p>you could use <code>AutoFilter()</code> method and then loop through filtered cells only</p>
<pre><code>Function ListLength(dataRange As Range, filter1 As String, filter2 As String, filter3 As String) As Long

    With dataRange

        .AutoFilter 4, &quot;PK-1&quot;
        .AutoFilter 1, &quot;DRY&quot;
        .AutoFilter 14, &quot;Yes&quot;

        Dim d As Scripting.Dictionary
            Set d = New Scripting.Dictionary

            Dim c As Range
                For Each c In .Columns(2).Resize(.Rows.Count - 1).Offset(1).SpecialCells(xlCellTypeVisible)
                    d(c.Value2) = 1
                Next
                
                .Parent.AutoFilterMode = False

    End With

        ListLength = d.Count
            
End Function
</code></pre>
<p>as you can see you can pass the entire range instead of splitting it into those 4 sub ranges</p>
<p>and the calling could be like:</p>
<pre><code>Sub main()
    With Worksheets(sheet)
        With .Range(&quot;H1:U&quot; &amp; .Cells(.Rows.Count, &quot;H&quot;).End(xlUp).Row)
            Worksheets(pSheet).Range(&quot;T4&quot;).Value = ListLength(.Cells, &quot;PK-1&quot;, &quot;DRY&quot;, &quot;Yes&quot;)
        End With
    End With
End Sub
</code></pre>
<hr />
<p>Or you can also use the <code>RemoveDuplicates()</code> method and avoid the <code>Dictionary</code> object</p>
<pre><code>Function ListLength2(dataRange As Range, filter1 As String, filter2 As String, filter3 As String) As Long

    With dataRange
        
        Dim vals As Variant
            vals = .Value 'save the range values since some of them will be possibily deleted after RemoveDuplicate() method
            
        .AutoFilter 4, &quot;PK-1&quot;
        .AutoFilter 1, &quot;DRY&quot;
        .AutoFilter 14, &quot;Yes&quot;
        
        .RemoveDuplicates Array(2), xlYes
                
        ListLength2 = WorksheetFunction.CountA(.Columns(2)) - 1 ' count remaining values in column 2 of the range, header excluded
        
        .Parent.AutoFilterMode = False
        
        .Value = vals ' put range original values back

    End With
            
End Function
</code></pre>
","2024-12-14 11:10:49","0","Answer"
"79279724","79278796","","<p>From your description in &quot;Details of what I'm doing&quot;, I guess you're looking to map index with a dict.</p>
<pre><code>import pandas as pd
import numpy as np
cols = list('abcde')
df = pd.DataFrame(np.zeros((3, len(cols))), columns=cols)

map_dict = {0:1, 1:2, 2:3}
df.loc[:,'b':'e'] = np.array(df.index.map(map_dict)).reshape(3,1)
df
</code></pre>
<pre><code>    a   b   c   d   e
0   0.0 1.0 1.0 1.0 1.0
1   0.0 2.0 2.0 2.0 2.0
2   0.0 3.0 3.0 3.0 3.0
</code></pre>
","2024-12-13 22:27:03","1","Answer"
"79278845","79278796","","<p>Pandas requires index alignment. You should either provide an array/list of the exact size of the slice, or a DataFrame/Series.</p>
<p>In your case you could use:</p>
<pre><code>df2.loc[:, :] = pd.DataFrame({0: 1, 1: 2}, index=df2.columns).T
</code></pre>
<p>Output:</p>
<pre><code>   a  b  c
0  1  1  1
1  2  2  2
</code></pre>
","2024-12-13 15:37:55","1","Answer"
"79278796","","Update Pandas DataFrame slice row-wise using dictionary","<p><strong>Question</strong></p>
<p>I am updating the values in a <em>slice</em> of a <code>pandas.DataFrame</code> by row such that each row of the slice has unique value. I am using pandas version 2.2.3.</p>
<p>I have found an approach that <em>seems</em> to work by using a dictionary of the form <code>{row_index: row_value}</code> (see <em>Minimal working example 1</em>).</p>
<p>I would like to understand:</p>
<ul>
<li>if / why / how the approach in <em>MWE 1</em> works and if it is a reasonable way of solving the problem.</li>
<li>if there could be any unexpected behaviour by using this approach</li>
<li>why the approach in <em>MWE 2</em> does <em>not</em> work / raises error</li>
<li>if there are any other more appropriate methods to achieve this.</li>
</ul>
<p>I can't find any relevant information about this approach on SO or elsewhere.</p>
<p>My exact use case is slightly different to <em>MWE 1</em>, details of the differences are listed at the bottom, in case they are relevant.</p>
<hr />
<p><strong>Minimal working example 1</strong> (works)</p>
<p>Here it seems that dictionary <em>values</em> are indeed mapped to the row corresponding to each dictionary <em>key</em></p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; df = pd.DataFrame.from_dict({'a': [None, None], 'b': [None, None], 'c': [None, None]})
&gt;&gt;&gt; df.loc[df.index, df.columns] = {0: 1, 1: 2}
&gt;&gt;&gt; df
    a   b   c
0   1   1   1
1   2   2   2
</code></pre>
<p><strong>Minimal working example 2</strong> (raises error)</p>
<p>Here, just by selecting the entire dataframe in a different way, an error is raised.</p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; df2 = pd.DataFrame.from_dict({'a': [None, None], 'b': [None, None], 'c': [None, None]})
&gt;&gt;&gt; df2.loc[:, :] = {0: 1, 1: 2}
ValueError: setting an array element with a sequence.
</code></pre>
<hr />
<p><strong>Similar question on SO</strong></p>
<p><a href=""https://stackoverflow.com/a/38383334/8303090"">This answer</a> to a similar question explains why a dictionary's <em>keys</em> appear in a row when doing <code>df.iloc[0] = {'a': 1, 'b': 2, 'c': 3}</code> which is more confusing yet.</p>
<hr />
<p><strong>Details of what I'm doing</strong></p>
<p>My exact use case differs slightly to <em>MWE 1</em> in that I have a larger dataframe with some contiguous <code>NaN</code> values, so I am updating that slice/subset of the dataframe with <code>df.loc[df_index_subset, df_columns_subset]</code> instead of  selecting the entire dataframe with <code>df.loc[df.index, df.columns]</code>.</p>
<p>However, the behaviour is the same as in <em>Minimal working example 1</em>, it fills the slice of the dataframe by row according to the dictionary's key-value pairs.</p>
","2024-12-13 15:23:41","1","Question"
"79278373","","Python reverse dictionary key value reference relationships","<p>If I have a following dictionary:</p>
<pre><code>{&quot;1&quot;: {&quot;2&quot;, &quot;3&quot;}, &quot;2&quot;: {&quot;3&quot;, &quot;4&quot;}, &quot;3&quot;: {&quot;2&quot;, &quot;4&quot;}}
</code></pre>
<p>In this dictionary, the key references the values in the set.</p>
<p>How do I construct a new dictionary which defines the references to the values above:</p>
<pre><code>{&quot;1&quot;: {}, &quot;2&quot;: {&quot;1&quot;, &quot;3&quot;}, &quot;3&quot;: {&quot;1&quot;, &quot;2&quot;}, &quot;4&quot;: {&quot;2&quot;, &quot;3&quot;}}
</code></pre>
<p>This is what I currently do:</p>
<pre><code>    for k,v in data.items():
        if len(v) &gt; 0:
            for p in v:
                references[p].add(k)
        else:
            for p,v in references.items():
                v.add(k)
</code></pre>
<p>Any better / optimized /pythonic way of doing it?</p>
","2024-12-13 12:46:38","-4","Question"
"79276590","79276328","","<p>I found the problem...obvious and blatant oversight!
I forgot to declare Item as Range!</p>
","2024-12-12 21:04:43","1","Answer"
"79276439","79276328","","<p>I got your code working following the changes outlined in my comments, but this slightly different approach is more flexible and easier to call I think:</p>
<pre><code>Option Explicit

Sub tester()
    
    Dim ws As Worksheet, lastRow As Long
    
    lastRow = 13 'for example
    Set ws = ThisWorkbook.Worksheets(&quot;Data&quot;)
    Debug.Print CountUniques(ws.Range(&quot;I2:I&quot; &amp; lastRow), &quot;K&quot;, &quot;PK-1&quot;, &quot;H&quot;, &quot;DRY&quot;, &quot;U&quot;, &quot;Yes&quot;)

End Sub

' `ValuesRange` contains the values for which you want the unique count
' `Filters` is an alternating list of column indexes (numeric or letter) and values to test for
Function CountUniques(ValuesRange As Range, ParamArray Filters()) As Long
    Dim c As Range, v, itemList As Scripting.Dictionary, rw As Range, i As Long
    
    Set itemList = New Scripting.Dictionary
    
    For Each c In ValuesRange.Cells
        v = c.Value
        If Len(v) &gt; 0 Then
            Set rw = c.EntireRow
            For i = 0 To UBound(Filters) Step 2 'loop over Filters (if any provided)
                If rw.Columns(Filters(i)) &lt;&gt; Filters(i + 1) Then GoTo skip
            Next i
            If Not itemList.Exists(v) Then itemList.Add v, 0
        End If 'value to check
skip:
    Next c
    CountUniques = itemList.count
End Function
</code></pre>
","2024-12-12 20:03:01","0","Answer"
"79276328","","Excel VBA Dictionary Not Filling Corectly","<p>I need to find the number of occurrences in a column where criteria in three other columns (same row) are met. There are also a lot of duplicates I need to exclude.  This is why I am using a dictionary. All of the passed ranges (columns) are the same length, vary up 30,000 rows, and exclude the header.  The Filters I am passing are the criteria and are supplied when calling the function. There are two sheets - sheet and pSheet. I am expecting a result from the function, but it constantly returns nothing.  There should be multiple items in the dictionary.
<a href=""https://i.sstatic.net/ByiweVzu.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ByiweVzu.png"" alt=""Sample Data"" /></a></p>
<p>Hopefully, I have supplied enough information so someone can point out my mistake.  Thanks in advance!</p>
<p>Setting the ranges:</p>
<pre><code>Set columnH = Worksheets(sheet).Range(&quot;H2:H&quot; &amp; lastRow)     'Department Column
Set columnI = Worksheets(sheet).Range(&quot;I2:I&quot; &amp; lastRow)     'Item # Column
Set columnK = Worksheets(sheet).Range(&quot;K2:K&quot; &amp; lastRow)     'CS or PK Column
Set columnU = Worksheets(sheet).Range(&quot;U2:U&quot; &amp; lastRow)     'UPC Exists Column
</code></pre>
<p>Calling the function:</p>
<pre><code>Sheets(pSheet).Range(&quot;T4&quot;) = ListLength(columnI, columnK, columnH, columnU, &quot;PK-1&quot;, &quot;DRY&quot;, &quot;Yes&quot;) 'Searches for Items that are PK, in DRY department, and have a UPC
</code></pre>
<p>The function:</p>
<pre><code>Function ListLength(Range1, Range2, Range3, Range4, Filter1, Filter2, Filter3) As Long

Dim i As Long
Dim itemList As Scripting.Dictionary
Set itemList = New Scripting.Dictionary

i = 0

For Each Item In Range1
    If Range2(i) = Filter1 Then
        If Range3(i) = Filter2 Then
            If Range4(i) = Filter3 Then
                If Not itemList.Exists(Item) Then
                    itemList.Add Item.Value, 0
                End If
            End If
        End If
    End If
    i = i + 1
Next Item
                
ListLength = itemList.Count
            
End Function
</code></pre>
","2024-12-12 19:15:18","1","Question"
"79271321","78188936","","<p>In the documentation of the <a href=""https://github.com/Igor-Vladyka/leaflet.browser.print?tab=readme-ov-file#header--footer-options"" rel=""nofollow noreferrer"">leaflet browser print</a>, if we look at the header/footer object we can see that in the text field we can pass both text and HTML code.</p>
<p>Therefore, if you insert HTML code there with the image, you will be able to visualize it later in the header.</p>
<p>For example:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>L.control.browserPrint({
    title: '...',
    documentTitle: '...',
    printModes: [
       L.BrowserPrint.Mode.Auto(""A4"", { title: ""Auto"", **header:{ enabled: true, text: '&lt;img src=""assets/image.png""&gt;', size: ""25mm"", overTheMap: false, backgroundColo:'#f0f' } }),
    ],
}).addTo(map);</code></pre>
</div>
</div>
</p>
","2024-12-11 10:23:15","0","Answer"
"79269769","79269716","","<p>This is python, not javascript.</p>
<pre><code>class Pathway(dict):
    def __init__(self, hidden, travelType):
        self.dict = {
            self.hidden : hidden,
            self.travelType : travelType
        }
</code></pre>
<p><a href=""https://peps.python.org/pep-0008/#naming-conventions"" rel=""nofollow noreferrer"">PEP 8</a>
asks you to instead name it <code>travel_type</code>.</p>
<p>It's not <em>strictly</em> necessary to define all attributes in
the <code>__init__()</code> constructor, but it's good practice, it's considered polite.
Here, you're attempting to dereference <code>self.hidden</code> before
you have assigned anything to it.</p>
<p>A typical ctor would look like:</p>
<pre><code>    def __init__(self, hidden, travel_type):
        self.hidden = hidden
        self.travel_type = travel_type
</code></pre>
<p>After that it's perfectly fine to dereference <code>self.hidden</code>.
You can even put it in a <code>dict</code> if you like.
It's unclear why that would be desirable, though.
I recommend you settle on object attributes, or settle on dicts,
without trying to mix them.
Storing the same thing in two places tends to lead to maintenance trouble
later on.</p>
<hr />
<p>A <a href=""https://docs.python.org/3/library/dataclasses.html"" rel=""nofollow noreferrer"">@dataclass</a>
decorator can save you the trouble of writing a ctor:</p>
<pre><code>from dataclasses import dataclass

@dataclass
class Pathway:
    hidden: bool
    travel_type: str
</code></pre>
","2024-12-10 20:50:36","1","Answer"
"79269716","","AttributeError: 'Pathway' object has no attribute 'hidden'","<p>I am attempting to create a nested dictionary 'world'. Due to the planned size and complexity I am hoping to automate the creation a bit. However, when I attempt to run it, I get &quot;AttributeError: 'Pathway' object has no attribute 'hidden'&quot;. The intended structure of the dictionary is as follows</p>
<p>**world</p>
<ol>
<li>village
a. rooms
i. villageEntrance
1. hidden : false
2. pathways: [p1,etc]
ii. etc
b. alignment : good
c. etc</li>
<li>void
a. rooms
i. voidRoom
1. hidden : false
2. pathways: [p1]
b. alignment : neutral
c. etc**</li>
</ol>
<pre><code>class Pathway(dict):
    def __init__(self, hidden, travelType):
        self.dict = {
            self.hidden : hidden,
            self.travelType : travelType
        }

class Room(dict):
    def __init__(self, hidden, pathways):
        self.dict = {
            self.hidden : hidden,
            self.pathways : pathways
        }

class Location(dict):
   def __init__(self, rooms, alignment):
      self.dict = {
          self.alignment : alignment,
          self.rooms : rooms
      }

p1 = Pathway(True, &quot;teleport&quot;)

voidRoom = Room(True, [p1])
villageEntrance = Room(False, [p1])

void = Location([voidRoom], &quot;neutral&quot;)
village = Location([villageEntrance], &quot;good&quot;)

world = {
    &quot;void&quot; : void,
    &quot;village&quot; : village
}

def locationDataRetrieval(path):
    val = world.get(path)
    return val

print(world)
</code></pre>
<p>I looked up proper syntax for dictionaries and as far as I can see I have it correct. I also attempted removing the pathway class but the error moved on to the next class.</p>
","2024-12-10 20:30:07","1","Question"
"79268872","79268783","","<p>I don't know the complexity of your project. If you are going to store more data, it may be more correct/effective to use a database. If you have a more limited dataset, i think there may be two solutions, .yaml or json.</p>
<p>json</p>
<pre><code>#rooms.py
{
 &quot;room1&quot;: {
    &quot;id&quot;: 1,
    &quot;description&quot;: &quot;Dark Hole&quot;,
    &quot;connections&quot;: [&quot;room2&quot;, &quot;room3&quot;]
},
&quot;room2&quot;: {
    &quot;id&quot;: 2,
    &quot;description&quot;: &quot;Large Hall&quot;,
    &quot;connections&quot;: [&quot;room1&quot;]
}
}

  # main.py
 import json

 with open('rooms.json', 'r') as file:
    rooms = json.load(file)
</code></pre>
<p>.yaml</p>
<pre><code>#rooms.yaml
room1:
  id: 1
  description: Dark Hole
  connections: 
     - room2
     - room3

# main.py 
import yaml

with open('rooms.yaml', 'r') as file:
   rooms = yaml.safe_load(file)
</code></pre>
","2024-12-10 15:47:05","3","Answer"
"79268783","","Good way to store data for my programs to reference (Python)?","<p>I am creating a game with multiple &quot;rooms&quot; and each &quot;room&quot; has numerous data values associated with it (id number, description, rooms it connects to, etc). I was originally thinking of creating a dictionary with all the data in its own script that i can import when needed. However, it has occurred to me that rebuilding the dictionary each time the main script has to reference room information would severely impact performance. Is there a more efficient way to store this information? All of it should remain the same at init, as the ones that will change throughout the game will be stored in the player save file instead.</p>
<p>I made a system where the script saves player data to an xml file, but it's been a huge pain and I am hoping I do not have to do it again.</p>
<p>Edit 1: Been attempting to make the dictionary, trying to automate it as much as I can given that there will eventually be much more data in it. It's also not quite operational right now but thats okay.</p>
<pre><code># travelTypes = set([&quot;teleport&quot;, &quot;walk&quot;, &quot;fly&quot;, &quot;ride&quot;])
# alignments = set([&quot;allied&quot;, &quot;neutral&quot;, &quot;enemy&quot;])

class Location(dict):
   def __init__(self, rooms, alignment):
      self._mydict = {
          self.alignment : alignment,
          self.rooms : rooms
      }

class Room(dict):
    def __init__(self, hidden, pathways):
        self._mydict = {
            self.hidden : hidden,
            self.pathways : pathways
        }

class Pathway(dict):
    def __init__(self, hidden, travelType):
        self._mydict = {
            self.hidden : hidden,
            self.travelType : travelType
        }

p1 = Pathway(True, &quot;teleport&quot;)

voidRoom = Room(True, [p1])
villageEntrance = Room(False, [p1])

void = Location([voidRoom], &quot;neutral&quot;)
village = Location([villageEntrance], &quot;good&quot;)

world = {
    &quot;void&quot; : void,
    &quot;village&quot; : village
}

def locationDataRetrieval(path):
    val = world.get(path)
    return val

print(world)
</code></pre>
<p>Edit 2: I am simply editing the code as I figure it out, don't mind me it's the first time I've worked with dictionaries to this extent.</p>
","2024-12-10 15:19:46","-1","Question"
"79268677","79268617","","<blockquote>
<p>if I want to Add a new object, it first calculate a hashcode of the key and then compares it against already exiting.</p>
</blockquote>
<p>No. It does not have to compare with existing keys. If it had to look at keys, insertion could not be O(1), because time would increase as the number of keys increased (not O(N), because it could use more efficient search algorithms, but also not O(1)).</p>
<p>Instead, the hash value also determines the specific storage location within the dictionary, so the dictionary can set the element value directly in the correct location without checking other hashes at all<sup>*</sup>, and so maintain O(1) insertion. If there is already an existing element stored at this location, depending on your platform/implementation it will either overwrite or throw an exception (C# will <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.add?view=net-9.0#exceptions"" rel=""nofollow noreferrer"">throw an ArgumentException</a>)</p>
<blockquote>
<p>What I can't get is how can it be O(1) if to calculate it we still need to iterate through all the characters?</p>
</blockquote>
<p>Talking about hashcode calculation. From the Dictionary's perspective, this is irrelevant. The dictionary only sees and references the hash. It's not it's job to account for the time to produce the hash, which, depending on the type, may also be O(1) or may be something much worse. Strings do need to check characters, and will be O(n) for hash calculation, but the Dictionary gets to <em>assume the hash</em>.</p>
<p>The Dictionary is only concerned with complexity increase as the number of elements in the dictionary goes up, where an element is a string-as-a-single-unit rather than the individual characters. The complexity of the individual elements is up to their type, and a Dicationary can use <em>anything</em> as a key — not just a string — such that it would be silly to try to talk about Dictionary insertion time if that were part of the conversation, since we'd always have to revert to the worst possible type imaginable.</p>
<hr />
<p><sup>* Dictionary types are <em>time-efficient</em>, but sometimes space <strong>inefficient</strong>... but only the for the references rather than the entire objects, and thanks to math not as much as you might expect.</sup></p>
","2024-12-10 14:50:56","3","Answer"
"79268657","79268617","","<p>I think you are mixing up the complexities regarding the insertion into the dictionary and the hash calculation of the key of the dictionary.</p>
<p><code>String.GetHashCode()</code> is O(n) in regards to the length of the string (hash code calculation), but a O(1) step in regards to the overall insertion operation into the dictionary, since you do not have to iterate over the elements of the dictionary.</p>
<p>You wrote <code>&quot;...and then compares it against already existing&quot;</code>, there is no need to do that, you would override an existing value anyway. Once the hash is calculated, the key and value can simply be inserted into the dictionary at O(1).</p>
<p>(As pointed out in the comments, one exception is if the <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.add?view=net-9.0#remarks"" rel=""noreferrer"">capacity of the dictionary increases</a>, then the internal array must be re-allocated and the insertion becomes an O(n) operation.)</p>
","2024-12-10 14:45:19","7","Answer"
"79268617","","Why does String.GetHashCode have O(1) complexity","<p>I want to use string as a key type in a Dictionary. Like <code>Dictionary&lt;string, string&gt;</code>.</p>
<p>As I understand, if I want to Add a new object, it first calculate a hashcode of the key. So the complexity of Add method boils down to a complexity of <code>String.GetHashCode()</code> method.</p>
<p>What I can't get is how can it be O(1) if to calculate it we still need to iterate through all the characters?</p>
<p><a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.add?view=net-9.0"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.add?view=net-9.0</a></p>
<p>In short, my question is around: does adding a very long string work as quick as adding an empty string, another words does time to insert an element depends on the length of the inserted key (string type)?</p>
","2024-12-10 14:32:26","1","Question"
"79262724","79262686","","<p>A function <code>adjustM</code> with type <code>(a -&gt; m a) -&gt; k -&gt; (Map k a) -&gt; m (Map k a)</code> can be defined on top of the already existing function <a href=""https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#v:alterF"" rel=""nofollow noreferrer""><code>alterF :: (Functor f, Ord k) =&gt; (Maybe a -&gt; f (Maybe a)) -&gt; k -&gt; Map k a -&gt; f (Map k a)</code></a>.</p>
<p><code>alterF</code> is more general because, besides allowing for effects, it also lets you remove the targeted value, or insert it when the key doesn't already exist. (That's what those <code>Maybe</code>s are for in its signature).</p>
<pre><code>adjustM :: (Ord k, Applicative m) =&gt; (a -&gt; m a) -&gt; k -&gt; Map k a -&gt; m (Map k a)
adjustM f = Map.alterF (\ma -&gt; case ma of
   -- No value? We do nothing.
   Nothing -&gt; pure Nothing
   -- There's a value? We transform it.
   Just v -&gt; Just &lt;$&gt; f v)
</code></pre>
<p>Or, more succinctly,</p>
<pre><code>adjustM :: (Ord k, Applicative m) =&gt; (a -&gt; m a) -&gt; k -&gt; Map k a -&gt; m (Map k a)
adjustM f = Map.alterF (traverse f)
</code></pre>
","2024-12-08 15:08:32","9","Answer"
"79262704","79262686","","<p>We can implement this by using <code>insert</code> instead:</p>
<pre class=""lang-hs prettyprint-override""><code>updateM :: (Ord k, Applicative m) =&gt; (a -&gt; m a) -&gt; k -&gt; Map k a -&gt; m (Map k a)
updateM f k map = case (map !? k) of
  Just v -&gt; <b>flip (insert k) map</b> &lt;$&gt; f v
  _ -&gt; pure map</code></pre>
<p>We thus first check if the key exists, if so run <code>f v</code> and then use that to insert the new value in the <code>map</code>.</p>
<p>This generates the expected result:</p>
<pre><code>ghci&gt; updateM (divide 3) &quot;A&quot; $ Data.Map.fromList [(&quot;A&quot;,3),(&quot;B&quot;,0)]
Right (fromList [(&quot;A&quot;,1),(&quot;B&quot;,0)])
ghci&gt; updateM (divide 3) &quot;B&quot; $ Data.Map.fromList [(&quot;A&quot;,3),(&quot;B&quot;,0)]
Left &quot;Error with 0&quot;
</code></pre>
","2024-12-08 14:58:56","2","Answer"
"79262686","","How to convert Map.adjust to monadic?","<p>In the code it works well as below</p>
<pre><code>divide :: Int -&gt; Int -&gt; Either String Int
divide a 0 = Left &quot;Error with 0&quot;
divide a b = Right (a `div` b)
</code></pre>
<p>The code to be changed</p>
<pre><code>Map.adjust (divide 3) &quot;A&quot; $ Map.fromList [(&quot;A&quot;,3),(&quot;B&quot;,0)]
</code></pre>
<p>The expected result should be :</p>
<pre><code>Map.adjust (divide 3) &quot;A&quot; $ Map.fromList [(&quot;A&quot;,3),(&quot;B&quot;,0)] 
=&gt;  Right $ Map.fromList [(&quot;A&quot;,1),(&quot;B&quot;,0)]   

Map.adjust (divide 3) &quot;B&quot; $ Map.fromList [(&quot;A&quot;,3),(&quot;B&quot;,0)]
=&gt;  Left &quot;Error with 0&quot;
</code></pre>
<p>Or in general how to build a function like:</p>
<pre><code>Map.adjust:: (a -&gt; m a) -&gt; k -&gt; (Map k a) -&gt; m (Map k a)
</code></pre>
<p>Thank you very much !</p>
","2024-12-08 14:46:08","1","Question"
"79261894","79261826","","<p>You have missed some important thing, when converting an existing <code>List</code> to <code>Map</code>, each item is associated to auto-incremented integer <code>key</code> so that your list will become like the following:</p>
<pre><code>{
  1 :{
      'Sales': [12.0, 14.5, 15.6, 12.1, 15.2, 17.6, 12.8, 24.0, 35.4, 12.9]
    },

  2 :{
      'Cost': [9.0, 12.5, 11.6, 7.1, 10.2, 14.6, 8.8, 18.0, 31.4, 10.9]
    },

}
</code></pre>
<p>You have treated the key correctly, but you forgot that the data associated with the key is itself an encapsulated <code>Map</code> (Nested Map), so, it has its own key and value.</p>
<p>so to access that list :</p>
<pre><code>listval = data.value['Sales'];
listval = data.value['Cost'];
</code></pre>
","2024-12-08 05:25:48","0","Answer"
"79261826","","Plotting multi-dimensional array values in Flutter FlCharts","<p>I'm trying to plot the array received from an API into FlCharts but I'm not able to correctly iterate over the second level.</p>
<p>My array is as follows. I'm currently testing with static sample values which I'll replace from actual response later. I have full control over the API that's sending the values so please suggest if I should optimize the array structure.</p>
<pre><code> var listData = [
    {
      'Product01': [12.0, 14.5, 15.6, 12.1, 15.2, 17.6, 12.8, 24.0, 35.4, 12.9]
    },
    {
      'Product02': [9.0, 12.5, 11.6, 7.1, 10.2, 14.6, 8.8, 18.0, 31.4, 10.9]
    },
  ];
</code></pre>
<p>The code I'm trying is as below:</p>
<pre><code>var sections = listData.asMap().entries.map((data) {
      final idx = data.key;
      final listval = data.value;

      return LineChartBarData(
        spots: listval.asMap().entries.map((item) {
          FlSpot(item.key, item.val);
        }).toList(),
        color: chartColors[idx],
        barWidth: 5,
        isCurved: true,
        dotData: FlDotData(show: true),
      );
    }).toList();
</code></pre>
<p>and in the chart view</p>
<pre><code>AspectRatio(
   aspectRatio: 1.30,
         child: LineChart(
                  LineChartData(
                    lineBarsData: sections,
              ),
</code></pre>
<p>The error I get is</p>
<pre><code>lib/modules/home/widgets/yearly_expenses.dart:106:24: Error: The method 'asMap' isn't defined for the class 'Map&lt;String, List&lt;double&gt;&gt;'.
 - 'Map' is from 'dart:core'.
 - 'List' is from 'dart:core'.
Try correcting the name to the name of an existing method, or defining a method named 'asMap'.
        spots: listval.asMap().entries.map((item) {
                       ^^^^^
</code></pre>
<p>I tried several variations (map, forEach) but none seems to work. I'm totally new to Dart coming from PHP. Any help is appreciated. Thanks in advance.</p>
<p><strong>Edit:</strong> I updated my code as below, still get errors.</p>
<pre><code>List sections = listData.asMap().entries.map((data) {
      final idx = data.key;
      final listval = data.value;

      listval.entries.map((entry) {
        final k = entry.key;
        final v = entry.value;

        return LineChartBarData(
          spots: v.asMap().entries.map((data) {
            return FlSpot(data.key, data.value);
          }).toList(),
          color: chartColors[idx],
          barWidth: 5,
          isCurved: true,
          dotData: FlDotData(show: true),
        );
      }).toList();
    }).toList();

</code></pre>
<p>This time the error is</p>
<pre><code>Error: The argument type 'List&lt;dynamic&gt;' can't be assigned to the parameter type 'List&lt;LineChartBarData&gt;'.
 - 'List' is from 'dart:core'.
 - 'LineChartBarData' is from 'package:fl_chart/src/chart/line_chart/line_chart_data.dart' ('.pub-cache/hosted/pub.dev/fl_chart-0.69.0/lib/src/chart/line_chart/line_chart_data.dart').
                    lineBarsData: sections,
                                  ^
</code></pre>
","2024-12-08 03:48:50","1","Question"
"79261781","79261181","","<p>In this case, the object to be mapped is the state name, so the color designation is 'name'. And we also need dictionaries for other than coloring, so we need to create dictionaries for all states.</p>
<pre><code>color_dict = { k:v for k,v in zip(brasil_mapa[['name','color']].to_dict(orient='list')['name'],brasil_mapa[['name','color']].to_dict(orient='list')['color'])}

# Plot the map using Plotly
fig = px.choropleth(
    brasil_mapa,
    geojson=brasil_mapa.geometry.__geo_interface__,  # Using geometry directly
    locations=brasil_mapa.index,
    color='name',
    color_discrete_map=color_dict,  # Explicit color dictionary of all states
    labels={'color': 'State'},
    scope='south america',
    title='Map of Brazilian States with Custom Colors',
    width=1200,
    height=800
)

# Adjusting map visualization
fig.update_geos(fitbounds=&quot;locations&quot;, visible=False)

# Show the plot
fig.show()
</code></pre>
<p><a href=""https://i.sstatic.net/XWWXjC0c.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/XWWXjC0c.png"" alt=""enter image description here"" /></a></p>
","2024-12-08 02:59:57","1","Answer"
"79261181","","Plotly Choropleth Map: Colors Not Mapping Correctly from Color Dictionary","<p>I am trying to create a choropleth map using Plotly with a custom color dictionary, where specific states should be colored red and green. However, when trying to apply these colors, the chart is showing unexpected colors (such as pink and light blue) instead of the colors I defined in the dictionary.</p>
<p>The goal is to ensure that the states defined in the dictionary are colored red or green, while states not in the dictionary should be colored gray.</p>
<p>Code:</p>
<pre><code>import geopandas as gpd
import plotly.express as px

# Path to the shapefile of Brazilian states
shapefile_path = 'brasil_estados.json'

# Load the shapefile using geopandas
brasil_mapa = gpd.read_file(shapefile_path, encoding='utf-8')

# Custom color dictionary (red and green)
color_dict = {
    'Minas Gerais': 'green',
    'Tocantins': 'red',
    'Amapá': 'red',
    'Roraima': 'red',
    'Goiás': 'red',
    'Distrito Federal': 'red'
}

# Map colors according to the dictionary
# If the state is not in the dictionary, it will be colored 'gray'
brasil_mapa['color'] = brasil_mapa['name'].map(color_dict).fillna('gray')

# Plot the map using Plotly
fig = px.choropleth(
    brasil_mapa,
    geojson=brasil_mapa.geometry.__geo_interface__,  # Using geometry directly
    locations=brasil_mapa.index,
    color='color',  # Color of the states based on the dictionary
    color_discrete_map=color_dict,  # Explicit color dictionary
    labels={'color': 'State'},
    scope='south america',
    title='Map of Brazilian States with Custom Colors',
    width=1200,
    height=800
)

# Adjusting map visualization
fig.update_geos(fitbounds=&quot;locations&quot;, visible=False)

# Show the plot
fig.show()

</code></pre>
<p><a href=""https://i.sstatic.net/6I2lUmBM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/6I2lUmBM.png"" alt=""enter image description here"" /></a></p>
","2024-12-07 18:47:39","0","Question"
"79259401","79258572","","<p>You can use <a href=""https://spark.apache.org/docs/latest/api/sql/index.html#filter"" rel=""nofollow noreferrer"">filter</a> function to check <a href=""https://spark.apache.org/docs/latest/api/sql/index.html#map_values"" rel=""nofollow noreferrer"">map_values</a> and find the item beginning with the string <code>state:</code>. this might return an array with 1 or 0 item (based on your description). take the first one and then use a string function (<a href=""https://spark.apache.org/docs/latest/api/sql/index.html#substring_index"" rel=""nofollow noreferrer"">substring_index</a>, <a href=""https://spark.apache.org/docs/latest/api/sql/index.html#right"" rel=""nofollow noreferrer"">right</a>, regexp_replace, split etc) to retrieve the <code>state</code>.</p>
<pre><code>sample_df.withColumn('state_code', F.expr(&quot;&quot;&quot;
   substring_index(
       filter(map_values(geo_data), x-&gt; x rlike '^state: ')[0]
     ,  ': '
     ,  -1
   )
&quot;&quot;&quot;)).show()
+------+----------+--------------------+----------+
|  item|      date|            geo_data|state_code|
+------+----------+--------------------+----------+
|Item A|2024-12-01|{1 -&gt; city: Palo ...|        CA|
|Item B|2024-12-02|{1 -&gt; state: NY, ...|        NY|
|Item B|2024-12-03|{1 -&gt; city: Austi...|        TX|
+------+----------+--------------------+----------+
</code></pre>
","2024-12-06 21:14:05","0","Answer"
"79259106","79258572","","<p>You cannot access the key 'state' because in your test data the keys in geo_data are 1, 2 and 3. You need to transform the values in geo_data first.</p>
<pre><code>from pyspark.sql.functions import udf
@udf(MapType(StringType(), StringType()))
def split_list(list_):
    return {s.split(':')[0]: s.split(':')[1].strip() for s in list_}
    

display(sample_df.withColumn(
    &quot;state_code&quot;, 
    split_list(F.map_values(&quot;geo_data&quot;)).getItem(&quot;state&quot;)
))
</code></pre>
","2024-12-06 19:03:05","0","Answer"
"79258572","","Extract an item by name from an MapType() column in a PySpark column","<p>I have a PySpark dataframe structured like this, where the array is formatted to start with a number: 1: &quot;item / state / zip&quot; most, but not all of the time. Sometimes the order will be different.</p>
<pre><code>data = [
    (&quot;Item A&quot;, &quot;2024-12-01&quot;, {&quot;1&quot;: &quot;city: Palo Alto&quot;, &quot;2&quot;: &quot;state: CA&quot;, &quot;3&quot;: &quot;zip: 94301&quot;}),
    (&quot;Item B&quot;, &quot;2024-12-02&quot;, {&quot;1&quot;: &quot;state: NY&quot;, &quot;2&quot;: &quot;city: New York&quot;, &quot;3&quot;: &quot;zip: 10001&quot;}),
    (&quot;Item B&quot;, &quot;2024-12-03&quot;, {&quot;1&quot;: &quot;city: Austin&quot;, &quot;2&quot;: &quot;state: TX&quot;, &quot;3&quot;: &quot;zip: 73301&quot;})
]

schema = StructType([
    StructField(&quot;item&quot;, StringType(), True),
    StructField(&quot;date&quot;, StringType(), True),
    StructField(&quot;geo_data&quot;, MapType(StringType(), StringType()), True)
])

sample_df = spark.createDataFrame(data, schema)
</code></pre>
<p>I want to extract the &quot;State&quot; value from the <code>geo_data</code> column into a new column using <code>.withcolumn</code> but I'm running into an issue because the array in the <code>geo_data</code> column is not ordered consistently (so state will not always appear as &quot;1&quot; or &quot;2&quot; in the list, and in some rows there is no &quot;state&quot; item in the array. This means I cannot use something simple like:</p>
<pre><code>.withColumn(&quot;state_code&quot;, F.expr(&quot;geo_data[1]&quot;))
</code></pre>
<p>I've also tried to use <code>getItem()</code> and <code>getField()</code> in the following ways:</p>
<pre><code>new_data = sample_df.withColumn(
    &quot;state_code&quot;, 
    F.col(&quot;geo_data&quot;).getField(&quot;state&quot;)
)
</code></pre>
<p>And the result each way are this error:</p>
<pre><code>[DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE] Cannot resolve &quot;geo_data[State]&quot; due to data type mismatch: Parameter 2 requires the &quot;INTEGRAL&quot; type, however &quot;State&quot; has the type &quot;STRING&quot;. SQLSTATE: 42K09
</code></pre>
<p>Looking for a better way to do this. Thanks.</p>
","2024-12-06 15:38:49","0","Question"
"79257504","79235770","","<p>If you can drop dpath, let's write ourself version <code>mget_dict(d, key_path)</code></p>
<pre><code>def mget_dict(d:dict, key_path, val_whnotfound=None):
  &quot;&quot;&quot;
  ref https://g.co/gemini/share/06e7f2ced5d8
  recursively retrieves a value from a nested dictionary.
  &quot;&quot;&quot;
  if not isinstance(key_path, list): return None

  if not key_path: return d

  key = key_path[0]
  if not d.get(key): return val_whnotfound
  else:              return mget_dict(d[key], key_path[1:], val_whnotfound)  # recursively go next level
</code></pre>
","2024-12-06 09:37:31","0","Answer"
"79257035","79256998","","<p>You need to create the popup menu inside <code>openMenuGroup()</code> instead and pass the correct quality to <code>checkQuality()</code>:</p>
<pre class=""lang-py prettyprint-override""><code>from tkinter import *

root = Tk()
root.minsize(200, 200)

dict = {&quot;1&quot;: (&quot;banane 1&quot;, &quot;fresh&quot;), &quot;2&quot;: (&quot;banane 2&quot;, &quot;not fresh&quot;), &quot;3&quot;: (&quot;banane 3&quot;, &quot;rotten&quot;)}

def checkQuality(quality):
    print(quality)

# Right click label
def openMenuGroup(event):
    # create menu here
    menuGroup = Menu(root, tearoff=0)
    # use event.widget to reference the label that trigger this function
    menuGroup.add_command(label=&quot;Check quality&quot;, command=lambda:checkQuality(event.widget.quality))
    menuGroup.add_command(label=&quot;Close&quot;, command=menuGroup.unpost)
    menuGroup.post(event.x_root, event.y_root)

for key, value in dict.items():
    name, quality = value
    lab = Label(text=name)
    lab.quality = quality
    lab.bind(&quot;&lt;Button-3&gt;&quot;, openMenuGroup)
    lab.pack()

mainloop()
</code></pre>
","2024-12-06 06:28:37","1","Answer"
"79256998","","python Get a specific value of a label inside a loop","<p>Simple example of the problem</p>
<pre><code># import * is bad, this is just an example
from tkinter import *

root = Tk()
root.minsize(200, 200)

dict = {&quot;1&quot;: (&quot;banane 1&quot;, &quot;fresh&quot;), &quot;2&quot;: (&quot;banane 2&quot;, &quot;not fresh&quot;), &quot;3&quot;: (&quot;banane 3&quot;, &quot;rotten&quot;)}

# Right click label
def openMenuGroup(self):
   menuGroup.post(self.x_root, self.y_root)
           
def closeMenuGroup():
    menuGroup.unpost()
           
menuGroup = Menu(root, tearoff=0)

for key, value in dict.items():
    name, quality = value
    lab = Label(text=name)
    lab.quality = quality
    lab.bind(&quot;&lt;Button-3&gt;&quot;, openMenuGroup)
    lab.pack()

menuGroup.add_command(label=&quot;Check quality&quot;, command=lambda:checkQuality(lab.quality))
menuGroup.add_command(label=&quot;Close&quot;, command=closeMenuGroup())
        
def checkQuality(self):
   print(self)
   
mainloop()
</code></pre>
<p>When you click on Check quality, it will always return &quot;rotten&quot; (last iteration). How can I get the correct lab.quality for each of those label ?</p>
","2024-12-06 06:11:04","0","Question"
"79253048","79253046","","<p>Welp was searching for an hour but as usual, found the answer right after posting. I need to say .Cast() in the types line,</p>
<pre><code>var types = Enum.GetValues(typeof(MyEnum)).Cast&lt;MyEnum&gt;();
</code></pre>
","2024-12-04 23:59:45","1","Answer"
"79253046","","How can I create a dictionary of all values of an enum in c#?","<p>I wish to create a dictionary with an enum key by looping over all values of the enum, e.g.</p>
<pre><code>public enum MyEnum
{
    First,
    Second,
    Third
}

Dictionary&lt;MyEnum,int&gt; myDict = new Dictionary&lt;MyEnum,int&gt;();
var types = Enum.GetValues(typeof(MyEnum));

int i = 1;

foreach (var val in types)
{
   myDict.Add(val,i);
   i++
}

Console.WriteLine(myDict[MyEnum.Second]);


Expected output:
2
</code></pre>
<p>(Yeah I probably shouldn't iterate and trust the ordering of a foreach like that, just an example)</p>
","2024-12-04 23:56:32","0","Question"
"79252645","79252506","","<p>You can generate two random values for each therapist; one for the value and one for which day to set to zero. Then, use an if-else statement when you create the <code>dict</code> that compares the <code>d</code> value, modulus 7, to see if it is the random day or the following day and, if so, use zero as the value otherwise use the random value:</p>
<pre><code>import random

random_values_for_t = {
    t: (random.randint(1, 4), random.randint(1, 5))
    for t in range(1, 3)
}

max_td = {
    (t, d): (0 if d % 7 in (v[1], (v[1] + 1) % 7) else v[0])
    for t, v in random_values_for_t.items()
    for d in range(1, 15)
}

print(max_td)
</code></pre>
<p>Which may randomly output:</p>
<pre class=""lang-none prettyprint-override""><code>{(1, 1): 4, (1, 2): 4, (1, 3): 0, (1, 4): 0, (1, 5): 4, (1, 6): 4, (1, 7): 4, (1, 8): 4, (1, 9): 4, (1, 10): 0, (1, 11): 0, (1, 12): 4, (1, 13): 4, (1, 14): 4, (2, 1): 0, (2, 2): 0, (2, 3): 1, (2, 4): 1, (2, 5): 1, (2, 6): 1, (2, 7): 1, (2, 8): 0, (2, 9): 0, (2, 10): 1, (2, 11): 1, (2, 12): 1, (2, 13): 1, (2, 14): 1}
</code></pre>
","2024-12-04 20:32:06","0","Answer"
"79252518","79252506","","<p>This does what you describe.  I assume you're trying to assign weekends here, so the series repeats every 7 days.  It would have been better if you had stated that in the question.</p>
<pre><code>import random

T = list(range(1, 3))
D = list(range(1, 15))

random_values_for_t = {t: random.randint(1, 4) for t in T}

max_td = {(t, d): random_values_for_t[t] for t in T for d in D}

# Weekends start at a different day for each therapist.

lastone = -1
for t,d  in max_td:
    if t != lastone:
        choose = random.randrange(0,7)
        lastone = t
    if (d-choose) % 7 &lt; 2:
        max_td[(t,d)] = 0

print(max_td)
</code></pre>
<p>Output:</p>
<pre><code>{(1, 1): 1, (1, 2): 0, (1, 3): 0, (1, 4): 1, (1, 5): 1, (1, 6): 1, (1, 7): 1, (1, 8): 1, (1, 9): 0, (1, 10): 0, (1, 11): 1, (1, 12): 1, (1, 13): 1, (1, 14): 1, (2, 1): 0, (2, 2): 0, (2, 3): 1, (2, 4): 1, (2, 5): 1, (2, 6): 1, (2, 7): 1, (2, 8): 0, (2, 9): 0, (2, 10): 1, (2, 11): 1, (2, 12): 1, (2, 13): 1, (2, 14): 1}

</code></pre>
","2024-12-04 19:36:49","0","Answer"
"79252506","","Rule based dictionary manipulation in python","<p>I have the following code that creates a dict with the keys (t,d). I have the lists T for the therapists and D for the days. Currently the same value for d is assigned for each therapist t. But I want it to be rule-based. So for each t in T, a random day d&lt;6 should be &quot;drawn&quot;. The value there is then replaced by 0. The same game for day d+1. Then the previous value should remain five times, then 0 twice again and then the value five times again. Until the end of Len(D). The pattern does not have to end at the end. How does that work?
This is the code:</p>
<pre><code>import random

T = list(range(1, 3))
D = list(range(1, 15))

random_values_for_t = {t: random.randint(1, 4) for t in T}

Max_td = {(t, d): random_values_for_t[t] for t in T for d in D}

print(Max_td)
</code></pre>
<p>This is the initial list:</p>
<pre><code>{(1, 1): 4, (1, 2): 4, (1, 3): 4, (1, 4): 4, (1, 5): 4, (1, 6): 4, (1, 7): 4, (1, 8): 4, (1, 9): 4, (1, 10): 4, (1, 11): 4, (1, 12): 4, (1, 13): 4, (1, 14): 4}
</code></pre>
<p>Now, for example, d=3 is chosen as the initial value. Then every value for d&lt;3 stays the same and the d and d+1 become zero. Then the next 5 values stay the same and again two become zero and so on until the end of len(D). The list should now look like this.</p>
<pre><code>{(1, 1): 4, (1, 2): 4, (1, 3): 0, (1, 4): 0, (1, 5): 4, (1, 6): 4, (1, 7): 4, (1, 8): 4, (1, 9): 4, (1, 10): 0, (1, 11): 0, (1, 12): 4, (1, 13): 4, (1, 14): 4}
</code></pre>
","2024-12-04 19:31:14","0","Question"
"79239417","79239053","","<p>You can create an open generic type by leaving the type name empty as in <code>GetType(Dictionary(Of , ))</code>.</p>
<pre class=""lang-vb prettyprint-override""><code>Function IsDictionary(value As Object) As Boolean
    Dim valueType = value.GetType()

    If valueType.IsGenericType Then
        Dim genericTypeDef = valueType.GetGenericTypeDefinition()

        Return genericTypeDef Is GetType(Dictionary(Of , ))
    End If

    Return False
End Function
</code></pre>
<p>The test ...</p>
<pre class=""lang-vb prettyprint-override""><code>Dim openGenericType As Type = GetType(Dictionary(Of , ))
Console.WriteLine(openGenericType)
Console.WriteLine()

Dim dict1 As New Dictionary(Of String, Integer) From {{&quot;key1&quot;, 1}, {&quot;key2&quot;, 2}}
Dim dict2 As New Dictionary(Of Integer, String) From {{1, &quot;one&quot;}, {2, &quot;two&quot;}}
Dim notADictionary As New List(Of String) From {&quot;item1&quot;, &quot;item2&quot;}
Console.WriteLine(IsDictionary(dict1))
Console.WriteLine(IsDictionary(dict2))
Console.WriteLine(IsDictionary(notADictionary))
</code></pre>
<p>...prints</p>
<pre class=""lang-none prettyprint-override""><code>System.Collections.Generic.Dictionary`2[TKey,TValue]

True
True
False
</code></pre>
<p>Note that you cannot declare a variable with <code>Dim dict As Dictionary(Of , )</code>, you can only use the open generic type in conjunction with <code>GetType()</code> to get a <code>System.Type</code> object.</p>
<hr />
<p>Note also that you can simplify code like ...</p>
<pre class=""lang-vb prettyprint-override""><code>If &lt;Boolean Expression&gt; Then
    Return True
Else
    Return False
End If
</code></pre>
<p>or</p>
<pre class=""lang-vb prettyprint-override""><code>If &lt;Boolean Expression&gt; Then
    Return True
End If
Return False
</code></pre>
<p>... and instead simply write</p>
<pre class=""lang-vb prettyprint-override""><code>Return &lt;Boolean Expression&gt;
</code></pre>
<p>... because the Boolean expression itself yields the value <code>True</code> or <code>False</code> that you want to return.</p>
<hr />
<p>While ChatGPT might point you into the right direction, it can't reason about the code. Today's AIs guess based on statistics and deliver results they believe are likely. Therefore, the code might be sub-optimal or even false. You are the one who has to contribute the intelligence. You cannot delegate it to the AI.</p>
","2024-11-30 11:25:56","4","Answer"
"79239053","","How do we know that the type of an object is Dictionary (of anything,anything)","<p>I tried this code. ChatGPT suggested that.</p>
<pre><code>Function IsDictionary(value As Object) As Boolean
    ' Get the type of the value
    Dim valueType = value.GetType()

    ' Check if the type is a generic type and if it's a Dictionary
    If valueType.IsGenericType Then
        ' Get the generic type definition
        Dim genericTypeDef = valueType.GetGenericTypeDefinition()

        ' Check if it's a Dictionary(Of TKey, TValue)
        If genericTypeDef Is GetType(Dictionary(Of Object, Object)) Then
            ' It's a Dictionary, but we don't know the types of the keys and values
            Return True
        End If
    End If

    Return False
End Function
</code></pre>
<p>I did a bit testing</p>
<pre><code>    Dim dict1 As New Dictionary(Of String, Integer) From {{&quot;key1&quot;, 1}, {&quot;key2&quot;, 2}}
    Dim dict2 As New Dictionary(Of Integer, String) From {{1, &quot;one&quot;}, {2, &quot;two&quot;}}
    Dim notADictionary As New List(Of String) From {&quot;item1&quot;, &quot;item2&quot;}
    Dim a = False
    a = IsDictionary(dict1)
    a = IsDictionary(dict2)
    a = IsDictionary(notADictionary)
</code></pre>
<p>In all cases a is false.</p>
<p>The issue is that <code>Dictionary(Of Integer, String)</code> is not necessarily the same with <code>Dictionary(Of Object, Object)</code></p>
<p>Chatgpt can't figure this out either.</p>
<p>So I asked here.</p>
<p>Basically it's useful if I want to compare CONTENT of two dictionaries. Each of the dictionary is equal if the content is the same. However, the type of dictionaries may not be exactly the same.</p>
<p>For example, one of them or one of the value of both of them may differ. One maybe dictionary(of string, object) and another will be dictionary(of string, string). As long as they all contain string, I would want to see this as same.</p>
<p>How can I do so in vb.net</p>
<p>In python I can just do <code>dict1 == dict2</code></p>
","2024-11-30 08:04:50","-1","Question"
"79239047","79238886","","<p>I guess use the dictionary key as string <code>Dictionary&lt;string, FileStream&gt;</code>. The key will be <code>FullName</code> of file (full path).
And then use dictionary like this:</p>
<pre><code>Dictionary&lt;string, FileStream&gt; dictionary = new Dictionary&lt;string, FileStream&gt;();
if (dictionary.TryGetValue(fullName, out FileStream fileStram))
{
// use fileStream here
}
</code></pre>
","2024-11-30 07:59:02","0","Answer"
"79238886","","""key not present in the dictionary"" Exception despite actually existing","<p>I have a <code>Dictionary&lt;FileInfo, FileStream&gt;</code></p>
<p>Doing some tests with it. I have a single item in the dictionary. The FileInfo is <code>X:\Thumper\levels\Basics3\sequin.master</code>. But when I try to obtain that entry by passing in <code>LoadedFile</code>, which is also a FileInfo intialized to <code>X:\Thumper\levels\Basics3\sequin.master</code>, I get this exception that the key was not present.</p>
<p>You can clearly see <code>lockedfiles[0]</code> is that file path. So I'm not sure why <code>LoadedFile</code> doesn't match the key.
<a href=""https://i.sstatic.net/e8PmJdYv.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/e8PmJdYv.png"" alt=""enter image description here"" /></a></p>
","2024-11-30 05:34:54","0","Question"
"79238143","79235743","","<p>It took me a minute to clean up your code, and I'm not entirely sure what you're looking for, but I think this might work, or at least get you headed in the correct direction:</p>
<pre><code>import json

data = {
'title': 'Consolidated form',
'question_type': 'year_of_birth_question',
'tags': 'test-form',
'slug': 'test-form',
'version': 'v1.01',
'locale': 'en',
'high_result_page': 'assessment-result-high',
'high_inflection': '50',
'medium_result_page': '0',
'medium_inflection': 'assessment-result-moderate',
'low_result_page': '30',
'skip_threshold': 'assessment-result-low',
'skip_high_result_page': '1',
'generic_error': 'skip-result-page',
'question': 'Oops, something strange happened. Please try again. If this   keeps happening, contact Engineering.',
'explainer': 'What year were you born in',
'error': '',
'min': '',
'max': '',
'answers': '',
'scores': '',
'answer_semantic_ids': '',
'question_semantic_id': '',
'None': ['yob-question']
}
</code></pre>
<h1>Check for the value of 'None' key and its content</h1>
<pre><code>  if 'None' in data and is instance(data['None'], list) and 'yob-question' in data['None']:
    print(&quot;The key 'None' contains 'yob-question'.&quot;)
 else:
    print(&quot;The key 'None' does not contain 'yob-question'.&quot;)
</code></pre>
<h1>Print Dictionary</h1>
<pre><code> print(json.dumps(data, indent=4))
</code></pre>
","2024-11-29 19:10:53","0","Answer"
"79235909","79235770","","<p>The simple way using <code>dpath</code> is as show below where <code>new</code> is used to create or update the path in dict and path representation will be take care using <code>root</code> and zero padded keys are considered as string instead of integer.</p>
<pre><code>import dpath.util

# Initialize an empty dictionary
data = {}

# Adding keys '00', '01', '02' as strings
keys = [&quot;00&quot;, &quot;01&quot;, &quot;02&quot;]
for key in keys:
    dpath.util.new(data, f&quot;root/{key}&quot;, f&quot;value_for_{key}&quot;)

# Display the resulting dictionary
print(data)
</code></pre>
","2024-11-29 05:10:45","1","Answer"
"79235859","79235770","","<p>I traced into the source, and noticed that it calls a Creator, documented in the function as:</p>
<blockquote>
<p>creator allows you to pass in a creator method that is<br />
responsible for creating missing keys at arbitrary levels of<br />
the path (see the help for dpath.path.set)</p>
</blockquote>
<p>I copied _default_creator from dpath.segments, and just eliminated the code that treats int values as a list index. Here's the quick and dirty version:</p>
<pre><code>import dpath
from dpath.segments import extend
from typing import Sequence, MutableSequence

def my_creator(current, segments, i, hints):
    segment = segments[i]
    length = len(segments)

    if isinstance(current, Sequence):
        segment = int(segment)

    if isinstance(current, MutableSequence):
        extend(current, segment)

    # Infer the type from the hints provided.
    if i &lt; len(hints):
        current[segment] = hints[i][1]()
    else:
        # deleted the array stuff here
        current[segment] = {}

d = dict()
dpath.new(d, r'a/bb/00/c', '00val', creator=my_creator)
print(d)
</code></pre>
<p>output</p>
<blockquote>
<p>{'a': {'bb': {'00': {'c': '00val'}}}}</p>
</blockquote>
","2024-11-29 04:42:41","1","Answer"
"79235770","","Python how to set dict key as 01, 02, 03 ... when using dpath?","<p>Let's say we want to create/maintain a dict with below key structure</p>
<pre><code>{
  &quot;a&quot;: {&quot;bb&quot;: {&quot;01&quot;: &quot;some value 01&quot;, 
               &quot;02&quot;: &quot;some value 02&quot;, 
       } },
}    
</code></pre>
<p>We use <a href=""https://pypi.org/project/dpath/"" rel=""nofollow noreferrer"">dpath</a> .new() as below to do this</p>
<pre><code>import dpath

d=dict()                          ; print(d)  # d={}
dpath.new(d,'a/bb/00/c', '00val') ; print(d)  # d={'a': {'bb': [{'c': '00val'}]}}
#                                         d   # NOTE this will set :bb as a list, and set at bb[00] ie idx=0 of list bb
#                                         d   # what we want instead is d={'a': {'bb': {'00': {'c': '00val'} }}}
#                                         d   # what we want is NOT     d={'a': {'bb': [      {'c': '00val'} ]}}
</code></pre>
<p>So when using <code>00</code> in the path, dpath translate it into list <code>index at 0</code> instead of dict key <code>00</code></p>
<p>The question is how to set key as <code>00</code>? Currently I have to dodge it by setting prefix <code>s</code> ie <code>s00</code> <code>s01</code> <code>s02</code></p>
","2024-11-29 03:32:07","1","Question"
"79235743","","How to get the last value in json array","<p>How can I get the last value in a json array.</p>
<p><strong>row =</strong></p>
<pre><code> {'title': 'Consolidated form', 'question_type': 'year_of_birth_question', 'tags': 'test-form', 'slug': 'test-form', 'version': 'v1.01', 'locale': 'en', 'high_result_page': 'assessment-result-high', 'high_inflection': '50', 'medium_result_page': '0', 'medium_inflection': 'assessment-result-moderate', 'low_result_page': '30', 'skip_threshold': 'assessment-result-low', 'skip_high_result_page': '1', 'generic_error': 'skip-result-page', 'question': 'Oops, something strange happened. Please try again. If this keeps happening, contact Engineering.', 'explainer': 'What year were you born in', 'error': '', 'min': '', 'max': '', 'answers': '', 'scores': '', 'answer_semantic_ids': '', 'question_semantic_id': '', 'None': ['yob-question']}
</code></pre>
<p>My application sometimes fails to retrieve the last key element as seen above so I'd like to be able to get the last value (yob-question) and let the user know that there was no key value retrieved for yob-question.</p>
<p>I'm not looking for a hard coded solution because the last element in the list may not always be <code>yob-question</code>.</p>
<p>Thanks</p>
<p>I tried to print it this way:</p>
<p><code>print(row[-1])</code> but that returns a key error.</p>
","2024-11-29 03:08:05","0","Question"
"79231852","79231381","","<p>I strongly recommend exploring <a href=""https://dataclass-wizard.readthedocs.io/en/latest/"" rel=""nofollow noreferrer""><code>dataclass-wizard</code></a>! This fast, strongly-typed de/serialization library is built on <code>dataclasses</code> and features minimal dependencies. It's well-tested and ready for production use.</p>
<p><em>Disclaimer</em>: I am the author/maintainer of this library.</p>
<h2>Generating Dataclass Schema</h2>
<p>First, install the package:</p>
<pre><code>pip install dataclass-wizard
</code></pre>
<p>Next, use the included <code>wiz</code> CLI utility to generate a schema for your JSON data:</p>
<pre class=""lang-bash prettyprint-override""><code>echo '{
    &quot;GlobalGnbId&quot;: {
        &quot;PlmnIdentity&quot;: {
            &quot;Data&quot;: [
                 19,
                241,
                132
            ]
        },
        &quot;GnbId&quot;: {
            &quot;Value&quot;:   1,
            &quot;Length&quot;: 22
        }
    },
    &quot;OptionalGnbDuId&quot;: 1
}' | wiz gs -x
</code></pre>
<p>That gave me Python <code>dataclass</code> schema to use:</p>
<pre class=""lang-py prettyprint-override""><code>from __future__ import annotations

from dataclasses import dataclass

from dataclass_wizard import JSONWizard


@dataclass
class Data(JSONWizard):
    &quot;&quot;&quot;
    Data dataclass

    &quot;&quot;&quot;
    global_gnb_id: GlobalGnbId
    optional_gnb_du_id: int


@dataclass
class GlobalGnbId:
    &quot;&quot;&quot;
    GlobalGnbId dataclass

    &quot;&quot;&quot;
    plmn_identity: PlmnIdentity
    gnb_id: GnbId


@dataclass
class PlmnIdentity:
    &quot;&quot;&quot;
    PlmnIdentity dataclass

    &quot;&quot;&quot;
    data: list[int]


@dataclass
class GnbId:
    &quot;&quot;&quot;
    GnbId dataclass

    &quot;&quot;&quot;
    value: int
    length: int
</code></pre>
<h2>Load JSON Data to Dataclass</h2>
<p>Now I can proceed to de/serialize the data using the Dataclass Wizard library:</p>
<pre class=""lang-py prettyprint-override""><code>from __future__ import annotations

from dataclasses import dataclass

from dataclass_wizard import JSONWizard


@dataclass
class Data(JSONWizard):
    &quot;&quot;&quot;
    Data dataclass

    &quot;&quot;&quot;
    global_gnb_id: GlobalGnbId
    optional_gnb_du_id: int


@dataclass
class GlobalGnbId:
    &quot;&quot;&quot;
    GlobalGnbId dataclass

    &quot;&quot;&quot;
    plmn_identity: PlmnIdentity
    gnb_id: GnbId


@dataclass
class PlmnIdentity:
    &quot;&quot;&quot;
    PlmnIdentity dataclass

    &quot;&quot;&quot;
    data: list[int]


@dataclass
class GnbId:
    &quot;&quot;&quot;
    GnbId dataclass

    &quot;&quot;&quot;
    value: int
    length: int

d = Data.from_json(&quot;&quot;&quot;
{
    &quot;GlobalGnbId&quot;: {
        &quot;PlmnIdentity&quot;: {
            &quot;Data&quot;: [
                 19,
                241,
                132
            ]
        },
        &quot;GnbId&quot;: {
            &quot;Value&quot;:   1,
            &quot;Length&quot;: 22
        }
    },
    &quot;OptionalGnbDuId&quot;: 1
}
&quot;&quot;&quot;)

print(repr(d))
</code></pre>
<p>Result:</p>
<pre><code>Data(global_gnb_id=GlobalGnbId(plmn_identity=PlmnIdentity(data=[19, 241, 132]), gnb_id=GnbId(value=1, length=22)), optional_gnb_du_id=1)
</code></pre>
<p>As you can see, one of the main benefits is the automatic letter-case transformation. For example, <code>TitleCase</code> in your JSON input is seamlessly mapped to a <code>snake_case</code> field name, following Python's convention.</p>
<p>Hope this helps!</p>
","2024-11-27 20:48:14","1","Answer"
"79231599","79231381","","<p>You can use Python’s dataclasses module alongside libraries like <code>pydantic</code> or <code>dataclasses-json</code> to map JSON to nested Python classes automatically.</p>
<p>Example:</p>
<pre><code>from dataclasses import dataclass
from dataclasses_json import dataclass_json

@dataclass_json
@dataclass
class Entry:
    key: str
    value: str

# Small JSON
json_data = '{&quot;key&quot;: &quot;example_key&quot;, &quot;value&quot;: &quot;example_value&quot;}'

# Deserialize JSON to Python object
entry = Entry.from_json(json_data)

# Access attributes
print(entry.key)   # Output: example_key
print(entry.value) # Output: example_value

# Serialize back to JSON
print(entry.to_json())  # Output: {&quot;key&quot;: &quot;example_key&quot;, &quot;value&quot;: &quot;example_value&quot;}
</code></pre>
","2024-11-27 19:07:17","1","Answer"
"79231381","","Convert JSON to set of nested Python classes","<p>I need to process multiple messages in JSON format. Each message has its own nested structure. I would like to create a Python SDK to process these messages. My idea is to map each JSON structure into a set of nested Python classes. Currently, I'm doing it manually. But it is a tedious task.</p>
<p>Please find an example JSON message below:</p>
<pre><code>{
    &quot;GlobalGnbId&quot;: {
        &quot;PlmnIdentity&quot;: {
            &quot;Data&quot;: [
                 19,
                241,
                132
            ]
        },
        &quot;GnbId&quot;: {
            &quot;Value&quot;:   1,
            &quot;Length&quot;: 22
        }
    },
    &quot;OptionalGnbDuId&quot;: 1
}
</code></pre>
<p>Please find below my own handcrafted set of Python classes to work with this JSON message:</p>
<pre><code>class PlmnIdentity(BaseModel):
    &quot;&quot;&quot;Class for PLMN identity&quot;&quot;&quot;
    Data: list[int]

class GnbId(BaseModel):
    &quot;&quot;&quot;Class for gNodeB ID&quot;&quot;&quot;
    Value:  int
    Length: int

class GlobalGnbId(BaseModel):
    &quot;&quot;&quot;Class for global gNodeB ID&quot;&quot;&quot;
    PlmnIdentity:    PlmnIdentity
    GnbId:           GnbId

class NodeId(BaseModel):
    &quot;&quot;&quot;Class for node ID&quot;&quot;&quot;
    GlobalGnbId:     GlobalGnbId
    OptionalGnbDuId: int
</code></pre>
<p>Finally, please find below a full minimal example:</p>
<pre><code>from pydantic import BaseModel, TypeAdapter

import json

class PlmnIdentity(BaseModel):
    &quot;&quot;&quot;Class for PLMN identity&quot;&quot;&quot;
    Data: list[int]

class GnbId(BaseModel):
    &quot;&quot;&quot;Class for gNodeB ID&quot;&quot;&quot;
    Value:  int
    Length: int

class GlobalGnbId(BaseModel):
    &quot;&quot;&quot;Class for global gNodeB ID&quot;&quot;&quot;
    PlmnIdentity:    PlmnIdentity
    GnbId:           GnbId

class NodeId(BaseModel):
    &quot;&quot;&quot;Class for node ID&quot;&quot;&quot;
    GlobalGnbId:     GlobalGnbId
    OptionalGnbDuId: int

node_id_str = \
&quot;&quot;&quot;
{
    &quot;GlobalGnbId&quot;: {
        &quot;PlmnIdentity&quot;: {
            &quot;Data&quot;: [
                 19,
                241,
                132
            ]
        },
        &quot;GnbId&quot;: {
            &quot;Value&quot;:   1,
            &quot;Length&quot;: 22
        }
    },
    &quot;OptionalGnbDuId&quot;: 1
}
&quot;&quot;&quot;

# NodeId as class
node_id_class = TypeAdapter(NodeId).validate_json(node_id_str)

print(node_id_class)

print(node_id_class.GlobalGnbId)
print(node_id_class.GlobalGnbId.PlmnIdentity)
print(node_id_class.GlobalGnbId.PlmnIdentity.Data)

print(node_id_class.GlobalGnbId.GnbId)
print(node_id_class.GlobalGnbId.GnbId.Value)
print(node_id_class.GlobalGnbId.GnbId.Length)

print(node_id_class.OptionalGnbDuId)

# NodeId as dictionary
node_id_dict = node_id_class.model_dump()

print(node_id_dict)
</code></pre>
<p>My question is there an automatic or semi-automatic way to map a nested JSON message to a set of Python classes?</p>
","2024-11-27 17:51:57","1","Question"
"79228380","79227948","","<h2>Dictionary of Dictionaries</h2>
<p><a href=""https://i.sstatic.net/EDjezpNZ.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/EDjezpNZ.jpg"" alt=""Screenshot of Sample Data"" /></a></p>
<pre class=""lang-vb prettyprint-override""><code>Sub GenerateReport()
    
    Dim wb As Workbook: Set wb = ThisWorkbook ' workbook containing this code
    
    Dim wsKamagi As Worksheet: Set wsKamagi = wb.Sheets(&quot;Kamagi&quot;)
    Dim wsIncomes As Worksheet: Set wsIncomes = wb.Sheets(&quot;Dane wjazdy&quot;)
    
    Dim dict As Object: Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    
    With wsKamagi
        
        Dim LastRow As Long: LastRow = .Cells(.Rows.Count, &quot;A&quot;).End(xlUp).Row
        
        Dim i As Long, cHour As Long, cKamag As String
        
        For i = 2 To LastRow
            cHour = Hour(.Cells(i, &quot;K&quot;).Value)
            If Not dict.Exists(cHour) Then
                Set dict(cHour) = CreateObject(&quot;Scripting.Dictionary&quot;)
            End If
            cKamag = CStr(.Cells(i, &quot;N&quot;).Value)
            dict(cHour)(cKamag) = dict(cHour)(cKamag) + 1
        Next i
    
    End With
    
    Dim oKey As Variant, iKey As Variant
    
    Debug.Print &quot;Hour&quot;, &quot;Kamag&quot;, &quot;Occur.&quot;
    
    For Each oKey In dict.Keys
        Debug.Print &quot;Outer - &quot; &amp; oKey
        For Each iKey In dict(oKey).Keys
            Debug.Print , &quot;Inner &quot; &amp; iKey, dict(oKey)(iKey)
        Next iKey
    Next oKey
                 
    ' ???
    'Po utworzeniu odpowiednich slowników nalezy uzupelnic odpowiednie pola w tabeli, najpierw czyszczac je z poprzednich wersji
    'Dodac przycisk czyszczenia raportów
    'Dodac instrukcje
    'Obsluzyc liczenie wjazdów/wyjazdów z yardu
    
End Sub
</code></pre>
<p><strong>Result</strong></p>
<pre class=""lang-none prettyprint-override""><code>Hour          Kamag         Occur.
Outer - 12
              Inner A        2 
              Inner C        1 
Outer - 13
              Inner B        2 
              Inner A        1 
              Inner C        1 
Outer - 14
              Inner B        1 
              Inner A        1 
              Inner C        1 
</code></pre>
","2024-11-26 21:51:19","1","Answer"
"79228344","79213166","","<p>easier to post fixes than 'comment'</p>
<pre><code>from dataclasses import dataclass
def gs(x):
    normal = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-=()&quot;
    super_s = &quot;ᴬᴮᶜᴰᴱᶠᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾQᴿˢᵀᵁⱽᵂˣʸᶻᵃᵇᶜᵈᵉᶠᵍʰᶦʲᵏˡᵐⁿᵒᵖ۹ʳˢᵗᵘᵛʷˣʸᶻ⁰¹²³⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾&quot;
    res1 = x.maketrans(''.join(normal),''.join(super_s))
    return x.translate(res1)
@dataclass
class Element():
    Name: str
    Symbol: str
    Atomic_Number: int #atomic number
    Atomic_weight: float
    State: str #metal, metalloid, gas or unknown at 0C and Classification
    Melting_point: float #melting point
    Boiling_point: float #boiling point
    Oxidation_states: str #oxidation States (charges)
    Electron_Configuration: str #electron Configuration
    Atomic_radius: int
    Electronegativity: float
    Valance_electrons: int
    def show(Name):
        print(f&quot;Element: {Name}&quot;)

elements = {
    'hydrogen':  Element('Hydrogen', 'H', 1, 1.008, 'Gas (Reactive nonmetal)',-259.1, -252.76, '±1', '1s{}'.format(gs('1')), 37, 2.18, 1),
}

while True:
    selection = input(&quot;Select the element by name: (h:for help, q:to quit) :&quot;).lower()
    if selection in elements:
        elements[selection].show()
    elif 'q' in selection:
        print(&quot;so long and thanks'f for all the fish&quot;)
        break
    elif 'h' in selection:
        hc = input(&quot;Please select the number that corresponds to your problem: \n1. Don't know how to spell the element \n2. Info is incorrect \n3. Cancel \n&quot;)
        if '1' in hc:
            print(&quot;Filler&quot;)
        elif '2' in hc:
            print(&quot;Please go to this google forms to report problem \n(Link)&quot;)
        elif '3' in hc:
            continue
    else:
        print(&quot;Element not found \nType if you need help type 'h'&quot;)
</code></pre>
","2024-11-26 21:35:23","1","Answer"
"79227948","","How to create a dictionary that contains other dictionaries when we don't know their number at the beginning of the program in vba","<p>I have the following code:</p>
<pre><code>Sub Generate_report()
    Dim ws As Worksheet
    Dim kamagiData As Worksheet
    Dim incomesData As Worksheet
    
    Dim i As Long, lst As Long
    Dim currentRow As Long
    Dim currentTime As Variant
    Dim currentKamag As String
    Dim currentHour As Long
    
    Set ws = ActiveSheet
    Set kamagiData = Sheets(&quot;Kamagi&quot;)
    Set incomesData = Sheets(&quot;Dane wjazdy&quot;)
    
    Set hours = CreateObject(&quot;Scripting.Dictionary&quot;)
    Dim kamags As Dictionary
    
    
    With kamagiData
        lst = .Cells(.Rows.count, 1).End(xlUp).Row
        For i = 2 To lst
            Set kamags = New Dictionary
            currentTime = .Cells(i, 11).Value
            currentHour = Hour(currentTime)
            currentKamag = .Cells(i, 14).Value
            If Not hours.exists(currentHour) Then
                hours.Add currentHour, kamags
            End If
            'If Not hours(currentHour).exists(currentKamag) Then
                'hours(currentHour).Add currentKamag, 1
            'Else
                'hours(currentHour).Item(currentKamag) = hours(currentHour).Item(currentKamag) + 1
            'End If
            Debug.Print (currentHour)
            Debug.Print (hours(currentHour))
            Debug.Print (currentKamag)
            'Debug.Print (hours(currentHour).Item(currentKamag))
        Next i
    End With
    
    'Po utworzeniu odpowiednich słowników należy uzupełnić odpowiednie pola w tabeli, najpierw czyszcząc je z poprzednich wersji
    'Dodać przycisk czyszczenia raportów
    'Dodać instrukcję
    'Obsłużyć liczenie wjazdów/wyjazdów z yardu
    
End Sub
</code></pre>
<p>Its operating principle was to be as follows: In a loop, I check the table rows in the Kamagi sheet, extract the time from the date entered in column K, and the driver number, contained in column N. Then I need to create a division thanks to which I will be assigned the number of occurrences of the driver number in a given hour. The idea is to create a dictionary in which the keys will be the extracted hours, and the values ​​will be dictionaries containing driver - number of occurrences pairs. I have no problem creating a dictionary with hours, the problem starts when I try to add a new dictionary as a value to which I could add drivers and increase the counter of their occurrences. I am trying to do it in this line:</p>
<pre><code>If Not hours.exists(currentHour) Then
  hours.Add currentHour, kamags
End If
</code></pre>
<p>Unfortunately, no matter what I try, I keep getting errors of all kinds. I have no idea how to properly initialize the dictionary so that later in the code I can operate on the dictionary element as a separate dictionary. I would be very grateful for any help on this topic.</p>
","2024-11-26 18:56:03","1","Question"
"79225733","79225697","","<p>You should extract the instructor names outside the <code>CoursesCard</code> initializer and pass them as an array of strings.</p>
<pre><code>ForEach(basicCourses) { course in
    let image = images[course.image_ref] ?? Image(&quot;noImage&quot;)
    
    let instructorNames = course.instructors.compactMap { instructorID in
        instructorNamesDictionary[instructorID]?.first ?? &quot;No Instructor&quot;
    }
    
    CoursesCard(
        name: course.Name,
        image: image,
        youtubeLinks: course.youtube_videos,
        description: course.Description,
        instructors: instructorNames,
        labels: course.labels,
        isFree: course.isfree,
        ispro: isPro
    )
}
</code></pre>
","2024-11-26 07:33:57","1","Answer"
"79225697","","Dictionary causes weird errors swift/swiftui","<p>I have a dictionary defined as the following:</p>
<pre><code>@State var instructorNamesDictionary: [String: [String]] = [:]
</code></pre>
<p>Content is added to the dictionary in a <code>.task</code> later:</p>
<pre><code>for course in courses {
    var updatedinstructors: [InstructorModel] = []
    for instructorID in course.instructors {
        let instructor = try await getInstructor(uid: instructorID)
        updatedinstructors.append(contentsOf: instructor)
        
        for names in updatedinstructors {
            instructorNamesDictionary[instructorID] = [names.name]
        }
    }
}
</code></pre>
<p>Afterwards, I try to use this dictionary into a struct called <code>CourseCard</code> that takes in some parameters:</p>
<pre><code>struct CoursesCard: View {
    var name: String
    var image: Image
    var youtubeLinks: [String]
    var description: String
    var instructors: [String]
    var labels: [String]
    var isFree: Bool
    var ispro: Bool

    // Rest of design code

}
</code></pre>
<p>Now when I do a <code>ForEach</code> loop on another array through:</p>
<pre><code>ForEach(basicCourses) { course in
    let image = images[course.image_ref] ?? Image(&quot;noImage&quot;)
    
    CoursesCard(
        name: course.Name,
        image: image,
        youtubeLinks: course.youtube_videos,
        description: course.Description,
        instructors: instructorNamesDictionary[
            ForEach(course.instructors) { instruc in instruc }
        ] ?? [
            &quot;No instructor&quot;
        ],
        labels: course.labels,
        isFree: course.isfree,
        ispro: isPro
    )
}
</code></pre>
<p>This gives me:</p>
<blockquote>
<p>Cannot convert value 'basicCourses' of type '[CourseModel]' to
expected type 'Binding&lt;[CourseModel]&gt;', use wrapper instead</p>
</blockquote>
<p>However if I pass another array, no error is given.</p>
<p>Here is <code>CourseModel</code> and <code>InstructorModel</code> if needed:</p>
<pre><code>struct CourseModel: Decodable,Identifiable {
    let id: String
    let Name: String
    let Description: String
    let image_ref: String
    let youtube_videos: [String]
    let labels: [String]
    let instructors: [String]
    let isfree: Bool

    enum CodingKeys: String, CodingKey {
        case id
        case Name
        case Description
        case image_ref
        case youtube_videos
        case labels
        case instructors
        case isfree
    }
}


struct InstructorModel: Decodable,Identifiable {
    let id: String
    let name: String
    
    enum CodingKeys: String, CodingKey {
        case id
        case name
    }
}
</code></pre>
<p>I tried to change the <code>ForEach</code> loop into:</p>
<pre><code>ForEach($basicCourses) { $course in
    let image = images[course.image_ref] ?? Image(&quot;noImage&quot;)
    
    CoursesCard(
        name: course.Name,
        image: image,
        youtubeLinks: course.youtube_videos,
        description: course.Description,
        instructors: instructorNamesDictionary[
            ForEach(course.instructors) { instruc in instruc }
        ] ?? [
            &quot;No instructor&quot;
        ],
        labels: course.labels,
        isFree: course.isfree,
        ispro: isPro
    )
}
</code></pre>
<p>But that just throws out other errors.</p>
","2024-11-26 07:23:57","1","Question"
"79224476","79224394","","<p>This is a &quot;feature&quot; that has been fixed in Python 3.12.  Prior to 3.12, the parser would look for the matching closing single or double quote that matched the opening quote, and that would be your f string.  So in your case, Python would see <code>f'That drink costs {MENU[&quot;espresso&quot;['</code> as the f-string and be confused.</p>
<p>As of 3.12, (<a href=""https://peps.python.org/pep-0701/"" rel=""nofollow noreferrer"">PEP 701</a>), f-strings got a formal grammar, and it's possible to put expressions inside the <code>{}</code> that include the opening quote.  Unless you  can update to 3.12, you just have to work around this by ensuring that whatever's inside the {} doesn't use the same un-backslashed quotation mark as the opening quotation mark.</p>
<p>But even after 3.12, the code still won't do what you meant.  You'll get a different runtime error, since <code>&quot;expresso&quot;['cost']</code> is treating a string as a dictionary.  Do you mean <code>menu[&quot;expression&quot;]['cost']</code>?</p>
","2024-11-25 20:10:16","0","Answer"
"79224430","79224394","","<p>That access to the dictionary won't work, even outside f-strings. You are indexing into the string (!) &quot;espresso&quot; with the index &quot;cost&quot;.</p>
<p>There are two problems with your code:</p>
<ol>
<li>Just index into the outer dictionary, then index into the inner dictionary. Do not nest the square brackets.</li>
<li>Inside <code>&quot;</code>, you can only use <code>'</code> and vice-versa. (This changes with f-strings in Python 3.12)</li>
</ol>
<pre class=""lang-py prettyprint-override""><code>MENU = dict()
MENU[&quot;espresso&quot;] = dict()
MENU[&quot;espresso&quot;][&quot;cost&quot;] = 17.50
print(MENU['espresso']['cost'])         # without f-string
print(f&quot;{MENU['espresso']['cost']}&quot;)    # with f-string
print(f'{MENU[&quot;espresso&quot;][&quot;cost&quot;]}')    # vice-versa f-string
</code></pre>
","2024-11-25 19:47:23","1","Answer"
"79224394","","Pycharm keeps saying there is an unmatched [ in an f-string, but it is matched","<p>for a class I'm trying to write a python program.  One of the lines tries to use an f string to report the value of a key ('cost') inside of a dictionary ('espresso') that is inside another dictionary ('MENU').  Unfortunately I keep getting:</p>
<pre><code>print(f'That drink costs {MENU[&quot;espresso&quot;['cost']]}.')
                                           ^
</code></pre>
<p>SyntaxError: f-string: unmatched '['</p>
<p>The line of code that is throwing this error is as follows:</p>
<pre><code>print(f'That drink costs {MENU[&quot;espresso&quot;['cost']]}.')
</code></pre>
<p>I'm using Pycharm with Python 3.9.</p>
<p>I thought I understood the basic issue here; pycharm/python is for some reason not built to understand that single and double quotes inside the curly braces of an f-string are not actually the end of the print statement, so it would end the print statement and see the rest of the line as a jumble of characters, and throw a syntax error about them.<br />
However if that were the case, it should be seeing the ']' as unmatched, not the '[' that I expected it to think is inside the print quotes and thus not required to be matched.  But it objects to the bracket that should be seen as inside the single quotes and fine to print either way.
I also see that I am trying to use single quotes for the 'cost' key inside the single quotes of the print statement, but I have to use double quotes for the &quot;espresso&quot; key of the first dictionary.  I'm not aware of any third way to show that I am indicating a key of a dictionary.  Is it impossible to reference a value inside a nested dictionary in an f string?</p>
","2024-11-25 19:34:45","0","Question"
"79218590","79218431","","<p>you need to check if type of key is list or a number and based on that merge or append the values</p>
<p>here is the code</p>
<pre><code>dict1 = {'a': 1, 'b': 2, 'c': 3}
dict2 = {'b': 3, 'c': 4, 'd': 5}
 
from collections import defaultdict

def merge_dicts(dict1, dict2):

    merged_dict = defaultdict(list)

    for d in (dict1, dict2):
        for key, value in d.items():
            if isinstance(value, list):
                merged_dict[key].extend(value)
            else:
                merged_dict[key].append(value)
    return dict(merged_dict)
 
result = merge_dicts(dict1, dict2)
print(result) # {'a': [1], 'c': [3, 4], 'b': [2, 3], 'd': [5]}

</code></pre>
","2024-11-23 18:51:50","1","Answer"
"79218532","79218431","","<p>You might use set arithmetic for detecting which keys are in both dicts and which keys are exactly in one following way and then process each accordingly</p>
<pre><code>import collections
dict1 = {'a': 1, 'b': 2, 'c': 3}
dict2 = {'b': 3, 'c': 4, 'd': 5}
double = set(dict1).intersection(dict2)
single = set(dict1).symmetric_difference(dict2)
merged = {k: collections.ChainMap(dict1, dict2)[k] for k in single} | {k:[dict1[k],dict2[k]] for k in double}
print(merged)  # {'d': 5, 'a': 1, 'c': [3, 4], 'b': [2, 3]}
</code></pre>
<p>Note that <code>|</code> here is one as described <a href=""https://peps.python.org/pep-0584/"" rel=""nofollow noreferrer"">PEP 584</a> and as such requires python3.9 or newer to work. See linked material if you need to port it to older versions.</p>
","2024-11-23 18:20:07","-1","Answer"
"79218457","79218431","","<p>I think that answer would be to create the key, value pair and add it to a new dictionary, this allows to transform the value of the corresponding keys in a list and then just append each element to an empty dictionary, let me know if this answers your question.</p>
<p>Here is an example:</p>
<pre><code>def merge_dictionaries(dict1, dict2):
    merged_dict = {}

# Add all keys from the first dictionary
    for key, value in dict1.items():
        if key in dict2:
# Combine values into a list
            merged_dict[key] = [value] if not isinstance(value, list) else value
            merged_dict[key].append(dict2[key])
        else:
        # Add value as-is
            merged_dict[key] = value

# Add remaining keys from the second dictionary
    for key, value in dict2.items():
        if key not in dict1:
            merged_dict[key] = value

# Flatten lists if necessary
    for key, value in merged_dict.items():
        if isinstance(value, list):
            merged_dict[key] = [v for sublist in value for v in (sublist if isinstance(sublist, list) else [sublist])]

    return merged_dict
</code></pre>
","2024-11-23 17:31:49","0","Answer"
"79218431","","How can I merge two dictionaries in Python without losing any data?","<p>I'm trying to merge two dictionaries in Python, but I'm having trouble ensuring that data from both dictionaries is preserved. If a key exists in both dictionaries, I want to combine their values into a list.</p>
<pre><code>dict1 = {'a': 1, 'b': 2, 'c': 3}
dict2 = {'b': 3, 'c': 4, 'd': 5}

merged_dict = dict1.copy()
for key, value in dict2.items():
    if key in merged_dict:
        merged_dict[key] = [merged_dict[key], value]
    else:
        merged_dict[key] = value

print(merged_dict)
</code></pre>
<p>The output I'm getting is:</p>
<pre><code>{'a': 1, 'b': [2, 3], 'c': [3, 4], 'd': 5}
</code></pre>
<p>This works, but if there are already lists as values, this approach doesn't handle it well. For example, mergin</p>
<pre><code>dict1 = {'a': [1], 'b': 2}
dict2 = {'a': 3, 'b': [4], 'c': 5}
</code></pre>
<p>Desired output:</p>
<pre><code>{'a': [1, 3], 'b': [2, 4], 'c': 5}
</code></pre>
<p>How can I improve my function to handle this situation more generally? Is there a more Pythonic way to merge dictionaries while ensuring all values are combined into lists if keys overlap?</p>
","2024-11-23 17:21:21","-2","Question"
"79217419","79217180","","<p>You should be using a lookup (dictionary) to map the grades to their respective values. Also, if you use <em>collections.defaultdict</em> you'll find the updating of a summary dictionary much easier.</p>
<pre><code>from collections import defaultdict

grade_map = {
    &quot;A&quot;: 100,
    &quot;B&quot;: 89,
    &quot;C&quot;: 79,
    &quot;D&quot;: 74,
    &quot;F&quot;: 69
}

summary = defaultdict(list)

with open(&quot;grade.txt&quot;) as file:
    for line in map(str.strip, file):
        try:
            _, section, grade = line.split(&quot;\t&quot;)
            summary[section].append(grade_map[grade])
        except KeyError:
            print(f&quot;Unknown grade in {line}&quot;)
        except ValueError:
            print(f&quot;Malformed line {line}&quot;)

for section, scores in summary.items():
    average = sum(scores) / len(scores)
    print(f&quot;{section} average: {average:.2f}&quot;)
</code></pre>
","2024-11-23 08:16:55","0","Answer"
"79217180","","How to perform addition to entries in Python dictionary variable?","<p>I need to write a program that reads student grades from a text file. Each line starts with student ID, then a Section Number, then a letter grade (A, B, C, D or F).</p>
<p>My output needs to show the average grade number for each section, and my plan was to use a dictionary to map the grades to section to keep a running total for each section and be divided later by the number of entries in that section.</p>
<p>I am struggling to figure out how to add the current lines grade to the corresponding section in the dictionary</p>
<p>My code is below, as well as this TypeError I am experiencing:</p>
<blockquote>
<p>line 57, in 
TypeError: unsupported operand type(s) for +: 'set' and 'int'</p>
</blockquote>
<p>I have tried reading into a dictionary to key each section number with a running total number grade, which will then be divided by the number of entries to get the average.</p>
<pre><code>`#Open the grades file for reading and create a dictionary to hold section/section grade pairs
file = open(&quot;grades.txt&quot;,'r')
total_section_grades = dict()

#Use for loop to iterate through each line of the grades.txt file
#separating the letter grade with split function
for line in file:
    pupil_ID,section_num,alpha_grade = line.strip().split(&quot;\t&quot;)

    #Default numeric grade to 0 for each line in file
    num_grade = 0
    
    #Conditionals to convert letter grades to numbers
    if alpha_grade == 'A':
        alpha_grade = 100
    elif alpha_grade == 'B':
        alpha_grade = 89
    elif alpha_grade == 'C':
        alpha_grade = 79
    elif alpha_grade == 'D':
        alpha_grade = 74
    elif alpha_grade == 'F':
        alpha_grade = 69
        
    #If section number exists in total_section_grades dictionary then
    #update that section with num_grade variable
    #If section number does not exist then create new section number key and
    #add num_grade to dictionary
    if section_num in total_section_grades:
        total_section_grades[section_num] = total_section_grades[section_num] + num_grade
    else:
        total_section_grades[section_num] = {num_grade}

#Close text file
file.close()

#Calculate average numerical grade for each section
for current_section, grade_sum in total_section_grades.items():
    average = sum(grades_sum)/len(grades_sum)
    print(f&quot;{current_section} average: {average}&quot;)`
</code></pre>
","2024-11-23 05:04:01","-2","Question"
"79215464","79213561","","<p>If you want only the first occurrence of each value be kept, then you can do this:</p>
<pre class=""lang-py prettyprint-override""><code>my_dict = {
    'a': 1,
    'b': 2,
    'c': 1,
    'd': 3
}

seen = set()
result = {k: v for k, v in my_dict.items() if v not in seen and not seen.add(v)}

print(result)
</code></pre>
<p>Output:</p>
<pre class=""lang-py prettyprint-override""><code>{'a': 1, 'b': 2, 'd': 3}
</code></pre>
<p>The code does the work with a time complexity of <code>O(n)</code></p>
","2024-11-22 14:46:33","0","Answer"
"79215417","79213561","","<blockquote>
<p>I want to remove the key-value pairs with duplicate values while
keeping the first occurrence</p>
</blockquote>
<ul>
<li>Using <code>setdefault()</code> method.</li>
</ul>
<p>No need to builtin <code>map()</code> and <code>reverse()</code>.</p>
<p>A simpler method to accomplish this:</p>
<p>Snippet:</p>
<pre><code>my_dict =  {'a': 1, 'b': 2, 'c': 1, 'd': 3} 
res = {}
for key, val in my_dict.items():
    res.setdefault(val, key)

print(dict((v, k) for k, v in res.items()))
</code></pre>
<p>Output:</p>
<pre><code>{'a': 1, 'b': 2, 'd': 3}
</code></pre>
","2024-11-22 14:33:05","0","Answer"
"79214004","79213691","","<p>To be honest, if you wanted to do this I would recommend creating a class-based structure, that will provide a dictionary-like structure for hierarchical constants, and a flat namespace for individual constants.</p>
<p>Constants.py could look something like</p>
<pre><code>class Constants:
def __init__(self):
    # flat - you can also maybe load this from a JSON so you don't touch this often
    self._flat_constants = {
        &quot;power_1&quot;: 10,
        &quot;power_2&quot;: 20,
        &quot;data_rate_1&quot;: 100,
        &quot;data_rate_2&quot;: 200,
    }
    
    # heirachy
    self._nested_constants = {
        &quot;system_1&quot;: {
            &quot;power&quot;: self._flat_constants[&quot;power_1&quot;],
            &quot;data_rate&quot;: self._flat_constants[&quot;data_rate_1&quot;],
        },
        &quot;system_2&quot;: {
            &quot;power&quot;: self._flat_constants[&quot;power_2&quot;],
            &quot;data_rate&quot;: self._flat_constants[&quot;data_rate_2&quot;],
        },
    }

def __getitem__(self, key):
    # First look through the flat ones
    if key in self._flat_constants:
        return self._flat_constants[key]
    
    # Then check nested ones
    if key in self._nested_constants:
        return self._nested_constants[key]
    
    raise KeyError(f&quot;Constant '{key}' not found.&quot;)

def __getattr__(self, name):
    # Allow direct access to flat constants
    if name in self._flat_constants:
        return self._flat_constants[name]
    
    raise AttributeError(f&quot;'Constants' object has no attribute '{name}'&quot;)
</code></pre>
<p>Then you can just use it by initializing wherever you plan to, knowing that you can use the dot to access the flat constants (constants.power_1), and the <code>['system_1]['power']</code> to access the nested ones.</p>
<p>Tip: If you eventually decide to load from a JSON, you should add some logic to raise an exception if duplicates are found in the keys (duplicates are allowed in JSON).</p>
","2024-11-22 07:27:59","1","Answer"
"79213761","79213561","","<p>Since dicts would inherently deduplicate keys, and all the values in your input dict are hashable, you can effectively deduplicate values by making an intermediary dict with values as keys and keys as values. Use the <code>dict.setdefault</code> method to keep only the value of the first occurrence of each distinct key, and then create the final dict from the intermediary dict with key and values swapped back:</p>
<pre><code>my_dict = {'a': 1, 'b': 2, 'c': 1, 'd': 3}
value_keys = {}
for key, value in my_dict.items():
    value_keys.setdefault(value, key)
print(dict(map(reversed, value_keys.items())))
</code></pre>
<p>This outputs:</p>
<pre><code>{'a': 1, 'b': 2, 'd': 3}
</code></pre>
<p>Demo: <a href=""https://ideone.com/YQ5WLp"" rel=""nofollow noreferrer"">https://ideone.com/YQ5WLp</a></p>
","2024-11-22 05:27:04","1","Answer"
"79213691","","How to create a module of constants accessible directly and through a dictionary","<p>I want to create a module called 'constants.py' that contain all the constants specific to my system.</p>
<p>To offer flexibility I would like to be able to access the constants directly like this:</p>
<pre><code>constants.power_1
constants.power_2
constants.data_rate_1
constants.data_rate_2
...
</code></pre>
<p>because it is short, or access the constants through a dictionary like this:</p>
<pre><code>constants['system_1']['power']
constants['system_2']['power']
constants['system_1']['data_rate']
constants['system_2']['data_rate']
...
</code></pre>
<p>because it is useful when sometimes I use a constant inside a loop like this:</p>
<pre><code>systems = ['system_1', 'system_2']
for system in systems:
    power = constants[system]['power']
    var_2 = var_1 * power
</code></pre>
<p>My problem is that I cannot use both methods at the same time.</p>
<p>What I can do:</p>
<p>Option 1. Forget about accessing a constant like <code>constants.power_1</code>, and have only a dictionary like <code>constants['power_1']</code>. So I declare them like this in 'constants.py':</p>
<pre><code>constants['power_1'] = 10
constants['system_1']['power'] = constants['power_1']
</code></pre>
<p>and use them like this:</p>
<pre><code>from constants import *
var_2 = var_1 * constants['power_1']
var_2 = var_1 * constants['system_1']['power']
</code></pre>
<p>Cons:</p>
<ul>
<li>I don't really like the <code>import *</code>, even if I import only one dictionary, I prefer a simple import.</li>
<li>The direct access is 4 characters longer (<code>['']</code>).</li>
</ul>
<p>Option 2. Use an intermediate name for my dictionary. So I declare them like this in 'constants.py':</p>
<pre><code>power_1 = 10
varname['system 1']['power'] = power_1
</code></pre>
<p>and use them like this:</p>
<pre><code>import constants
var_2 = var_1 * constants.power_1
var_2 = var_1 * constants.varname['system 1']['power']
</code></pre>
<p>Cons:</p>
<ul>
<li>I don't find a meaningful name for <code>varname</code>, because it is not necessary (I could put <code>system</code>, but it is redundant).</li>
<li>The long access gets longer.</li>
</ul>
<p>Do you see another way to solve this?</p>
","2024-11-22 04:58:29","1","Question"
"79213561","","How to ensure a unique set of dictionary values in Python by removing duplicate values?","<p>I have a dictionary in Python where some values are repeated across different keys. I want to remove the key-value pairs with duplicate values while keeping the first occurrence. Here's an example of my dictionary:</p>
<pre><code>my_dict = {
    'a': 1,
    'b': 2,
    'c': 1,
    'd': 3
}
</code></pre>
<p>I want the output to be:</p>
<pre><code>{
    'a': 1,
    'b': 2,
    'd': 3
}
</code></pre>
<p>How can I achieve this? What is the most efficient way to do this in Python?</p>
","2024-11-22 03:45:31","-2","Question"
"79213166","","Getting rid of redundant symbols after calling object from python dictionary","<p>When I select an object from the dictionary, it shows up with <code>Element(Name='Hydrogen', Symbol='H', Atomic_Number=1, Atomic_weight=1.008, State='Gas (Reactive nonmetal)', Melting_point=-259.1, Boiling_point=-252.76, Oxidation_states='±1', Electron_Configuration='1s¹', Atomic_radius=37, Electronegativity=2.18, Valance_electrons=1)</code> then below it says <code>Element: None</code>.
Can we eliminate all the extra symbols such as the quote marks, and the Element at the beginning and the end? Another thing I would like to note is, whether it is possible to get rid of the <code>def show():</code> or do I need it based on how my code is setup.</p>
<p>Here is my code. The <code>elements</code> is the dictionary name.</p>
<pre><code>from dataclasses import dataclass
def gs(x):
    normal = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-=()&quot;
    super_s = &quot;ᴬᴮᶜᴰᴱᶠᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾQᴿˢᵀᵁⱽᵂˣʸᶻᵃᵇᶜᵈᵉᶠᵍʰᶦʲᵏˡᵐⁿᵒᵖ۹ʳˢᵗᵘᵛʷˣʸᶻ⁰¹²³⁴⁵⁶⁷⁸⁹⁺⁻⁼⁽⁾&quot;
    res1 = x.maketrans(''.join(normal),''.join(super_s))
    return x.translate(res1)
@dataclass
class Element():
    Name: str
    Symbol: str
    Atomic_Number: int #atomic number
    Atomic_weight: float
    State: str #metal, metalloid, gas or unknown at 0C and Classification
    Melting_point: float #melting point
    Boiling_point: float #boiling point
    Oxidation_states: str #oxidation States (charges)
    Electron_Configuration: str #electron Configuration
    Atomic_radius: int
    Electronegativity: float
    Valance_electrons: int
    def show(Name):
        print(Name)

elements = {
    'hydrogen':  Element('Hydrogen', 'H', 1, 1.008, 'Gas (Reactive nonmetal)',-259.1, -252.76, '±1', '1s{}'.format(gs('1')), 37, 2.18, 1),
}

while True:
    selection = input(&quot;Select the element by name: &quot;)
    if selection in elements:
        print(f&quot;Element: {elements[selection].show()}&quot;)
    elif 'h' in selection:
        hc = input(&quot;Please select the number that corresponds to your problem: \n1. Don't know how to spell the element \n2. Info is incorrect \n3. Cancel \n&quot;)
        if '1' in hc:
            print(&quot;Filler&quot;)
        elif '2' in hc:
            print(&quot;Please go to this google forms to report problem \n(Link)&quot;)
        elif '3' in hc:
            continue
    else:
        print(&quot;Element not found \nType if you need help type 'h'&quot;)
</code></pre>
","2024-11-21 23:06:27","1","Question"
"79213129","","How to create a dictionary with initial values using collection expressions?","<p>C# 12 introduced <a href=""https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12#collection-expressions"" rel=""nofollow noreferrer"">collection expressions</a> and now you can write code like <code>List&lt;int&gt; l = [1, 2, 3];</code>.</p>
<p>When it comes to using them with dictionaries, it seems to work fine when creating an empty one with <code>Dictionary&lt;string, int&gt; d = [];</code>.</p>
<p>However, when it comes to creating one with initial values, none of these seem to compile:</p>
<ul>
<li><code>Dictionary&lt;string, int&gt; d = [{ &quot;a&quot;, 1 }];</code></li>
<li><code>Dictionary&lt;string, int&gt; d = [(&quot;a&quot;, 1)];</code></li>
<li><code>Dictionary&lt;string, int&gt; d = [new KeyValuePair&lt;string, int&gt;(&quot;a&quot;, 1)];</code></li>
</ul>
<p>Is there a way I can create a dictionary containing initial values using collection expressions?</p>
","2024-11-21 22:46:22","3","Question"
"79213130","79213129","","<p><code>Dictionary&lt;string, int&gt; d = [new KeyValuePair&lt;string, int&gt;(&quot;a&quot;, 1)];</code> yields this error message:</p>
<blockquote>
<p>Collection expression type 'Dictionary&lt;string, int&gt;' must have an instance or extension method 'Add' that can be called with a single argument.</p>
</blockquote>
<p>It leads to a solution to make it compile: creating the following extension method</p>
<pre class=""lang-cs prettyprint-override""><code>public static void Add&lt;TKey, TValue&gt;(this Dictionary&lt;TKey, TValue&gt; source, KeyValuePair&lt;TKey, TValue&gt; added)
{
    source.Add(added.Key, added.Value);
}
</code></pre>
<p>Note that this extension method will also enable the usage of spread elements with dictionaries like <code>Dictionary&lt;string, int&gt; d2 = [..d];</code></p>
<hr />
<p>Similarly, based on the above error message, one might expect the same kind of extension method using a tuple (so <code>(TKey Key, TValue Value)</code> instead of <code>KeyValuePair&lt;TKey, TValue&gt;</code>) to enable <code>Dictionary&lt;string, int&gt; d = [(&quot;a&quot;, 1)];</code> but (because Dictionary&lt;TKey, TValue&gt; implements IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; and not IEnumerable&lt;(TKey, TValue)&gt;, more <a href=""https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-12.0/collection-expressions"" rel=""nofollow noreferrer"">here</a>) it will instead yield:</p>
<blockquote>
<p>CS0029 Cannot implicitly convert type '(string, int)' to 'System.Collections.Generic.KeyValuePair&lt;string, int&gt;'</p>
</blockquote>
","2024-11-21 22:46:22","3","Answer"
"79205758","79205631","","<p>From the documentation:<br>
<a href=""https://developers.google.com/maps/faq#transit_directions_countries"" rel=""nofollow noreferrer"">In which countries are transit directions available?</a><br>
The Directions API and Distance Matrix API support all Google Transit partners, <strong>except those in Japan.</strong></p>
<p>(from <a href=""https://issuetracker.google.com/issues/35826181"" rel=""nofollow noreferrer"">this issue</a> in the bug tracker)</p>
","2024-11-20 03:58:47","0","Answer"
"79205631","","Google Maps Direction API Japan - No results returned for transit","<p>I have been working on an application that uses Google Maps Directions API.  I have been successful in getting Driving and Walking directions for Tokyo Japan.  But once I change it to Transit, I get No Route.  I have gone to Google Maps and copied the info from a transit route that it was able to make.</p>
<p>I then went to try out the newer Routes API.  <a href=""https://developers.google.com/maps/documentation/routes/demo"" rel=""nofollow noreferrer"">https://developers.google.com/maps/documentation/routes/demo</a> This doesn't work either even when picking validated addresses.</p>
<p>Am I missing something?  Does Transit just not work for Japan in either API or is there a setting I need to turn on?</p>
","2024-11-20 02:31:29","0","Question"
"79205080","79205060","","<h2>Boxing</h2>
<p><a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/Map.html#put(K,V)"" rel=""nofollow noreferrer""><code>put</code></a> takes an <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/lang/Integer.html"" rel=""nofollow noreferrer""><code>Integer</code></a> as the key. So the primitive numeric literal <code>0</code> in <code>put(0, 10)</code> gets boxed to an <code>Integer</code> object.</p>
<p>But <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/Map.html#containsKey(java.lang.Object)"" rel=""nofollow noreferrer""><code>containsKey</code></a> takes an <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/lang/Object.html"" rel=""nofollow noreferrer""><code>Object</code></a> (<a href=""https://stackoverflow.com/q/18852059/5133585"">see also</a>). So the <code>byte</code> gets boxed to a <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/lang/Byte.html"" rel=""nofollow noreferrer""><code>Byte</code></a> object. This <code>Byte</code> object does not <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/lang/Byte.html#equals(java.lang.Object)"" rel=""nofollow noreferrer""><code>equals</code></a> the <code>Integer</code> object that was put into the map since they are completely different classes. Therefore <code>containsKey</code> returns <code>false</code>.</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: right;"">Primitive type</th>
<th style=""text-align: left;"">Object type, after auto-boxing</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: right;""><code>int</code></td>
<td style=""text-align: left;""><a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/lang/Integer.html"" rel=""nofollow noreferrer""><code>java.lang.Integer</code></a></td>
</tr>
<tr>
<td style=""text-align: right;""><code>byte</code></td>
<td style=""text-align: left;""><a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/lang/Byte.html"" rel=""nofollow noreferrer""><code>java.lang.Byte</code></a></td>
</tr>
</tbody>
</table></div>
<hr />
<p>See <a href=""https://en.wikipedia.org/wiki/Boxing_(computer_programming)#Autoboxing"" rel=""nofollow noreferrer""><em>Auto-boxing</em></a>, at Wikipedia. And <a href=""https://docs.oracle.com/javase/8/docs/technotes/guides/language/autoboxing.html"" rel=""nofollow noreferrer""><em>Autoboxing</em></a> tech note at Oracle.com.</p>
","2024-11-19 21:18:19","7","Answer"
"79205060","","java hashmap : enexpected behaviour for containsKey","<p>Here is a code snippet :</p>
<pre><code>public static void main(String[] args) {
    final byte key = 0;
    Map&lt;Integer, Integer&gt; test = new HashMap&lt;&gt;();
    test.put(0, 10);
    System.out.println(test.containsKey(key));
}
</code></pre>
<p>and I get <code>false</code> printed on console. Only if I cast <code>key</code> to <code>int</code> I get true, like this</p>
<pre><code>System.out.println(test.containsKey((int)key));
</code></pre>
<p>Can someone explain what is going on here?</p>
","2024-11-19 21:11:12","2","Question"
"79201606","79200290","","<p>The OP's original code executes perfectly on my machine.  It is possible that the workbook is corrupt or possibly the cells font color matches it's interior color.</p>
<p>I just wanted to show an alternative way to dump the key/value pairs.</p>
<pre><code>Sub escreverDicionario()
    Dim dict As Object
    Dim wsdash As Worksheet
    Dim linha_inicial As Long
    Dim chave As Variant

    ' Definir a planilha de destino
    Set wsdash = ThisWorkbook.Sheets(&quot;dash&quot;)
    
    ' Criar o dicionário
    Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    
    ' Adicionar dados ao dicionário
    dict.Add &quot;nome1&quot;, &quot;valor1&quot;
    dict.Add &quot;nome2&quot;, &quot;valor2&quot;
    dict.Add &quot;nome3&quot;, &quot;valor3&quot;
    
    With wsdash
        .Cells(1, 20).Resize(dict.Count).Value = WorksheetFunction.Transpose(dict.Keys)
        .Cells(1, 21).Resize(dict.Count).Value = WorksheetFunction.Transpose(dict.Items)
    End With
End Sub
</code></pre>
","2024-11-18 22:23:19","0","Answer"
"79200290","","Why am I facing difficulties with VBA in Excel when writing keys and values from a dictionary?","<p>I want to write the keys and values of a dictionary to cells in an Excel worksheet called dash. However, when I run the code below, it only writes <em>nome1</em> in column 20 without its corresponding value. When I run the code for the second time, it fills in all the data correctly.</p>
<p>What is the reason for this happening, and what would be a possible solution?</p>
<hr />
<pre><code>Sub escreverDicionario()
    Dim dict As Object
    Dim wsdash As Worksheet
    Dim linha_inicial As Long
    Dim chave As Variant

    ' Definir a planilha de destino
    Set wsdash = ThisWorkbook.Sheets(&quot;dash&quot;)
    
    ' Criar o dicionário
    Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    
    ' Adicionar dados ao dicionário
    dict.Add &quot;nome1&quot;, &quot;valor1&quot;
    dict.Add &quot;nome2&quot;, &quot;valor2&quot;
    dict.Add &quot;nome3&quot;, &quot;valor3&quot;
    
    ' Inicializar linha_inicial para 1
    linha_inicial = 1
    
    ' Loop para escrever os dados no Excel
    For Each chave In dict.Keys
        wsdash.Cells(linha_inicial, 20).Value = chave
        wsdash.Cells(linha_inicial, 21).Value = dict(chave)
        
        ' Avançar para a próxima linha
        linha_inicial = linha_inicial + 1
    Next chave
End Sub
</code></pre>
<p>I want it to write correctly from the first execution of the code, or suggest another possible solution.</p>
","2024-11-18 14:17:42","1","Question"
"79194780","79189867","","<p>I think you're looking for</p>
<pre><code>l | difference(l | unique) | unique
</code></pre>
<p>Unfortunately, the filter <a href=""https://docs.ansible.com/ansible/latest/collections/ansible/builtin/difference_filter.html"" rel=""nofollow noreferrer"">difference</a> doesn't work with lists of dictionaries. But, you can write a filter on your own. For example,</p>
<pre class=""lang-py prettyprint-override""><code>shell&gt; cat filter_plugins/duplicates.py 
def duplicates(l):
    return [i for i in l if l.count(i) &gt; 1]


class FilterModule(object):

    def filters(self):
        return {
            'duplicates': duplicates,
        }
</code></pre>
<p>Then, the playbook below</p>
<pre class=""lang-yaml prettyprint-override""><code>- hosts: localhost

  vars:

    l:
      - {a: d, b: e, c: f}
      - {a: ggg, b: hhh, c: iii}
      - {a: jjj, b: kkk, c: lll}
      - {a: d, b: e, c: f}

    result: &quot;{{ l | duplicates | unique }}&quot;

  tasks:

    - debug:
        var: result | to_yaml
</code></pre>
<p>gives probably what you want</p>
<pre class=""lang-yaml prettyprint-override""><code>  result:
    - {a: d, b: e, c: f}
</code></pre>
<hr>
<sup>
<p>If you want to select the exact frequency, create the below filter</p>
<pre class=""lang-py prettyprint-override""><code>shell&gt; cat filter_plugins/dict_counter.py 
def dict_counter(l):
    u = [dict(s) for s in set(frozenset(d.items()) for d in l)]
    return [{'dict': i, 'count': l.count(i)} for i in u]


class FilterModule(object):

    def filters(self):
        return {
            'dict_counter': dict_counter,
        }
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  l | dict_counter:
    - count: 2
      dict: {a: d, b: e, c: f}
    - count: 1
      dict: {a: ggg, b: hhh, c: iii}
    - count: 1
      dict: {a: jjj, b: kkk, c: lll}
</code></pre>
<p>Then, the below declaration gives the same result</p>
<pre class=""lang-yaml prettyprint-override""><code>  result: &quot;{{ l | dict_counter
                | selectattr('count', 'eq', 2)
                | map(attribute='dict') }}&quot;
</code></pre>
</sup>
","2024-11-16 08:41:17","2","Answer"
"79191025","79191017","","<p>You can check for each key of <code>dict_2</code> that its sublist is a subset of the corresponding sublist of <code>dict_1</code>:</p>
<pre><code>def dict_issubset(maybe_subset, maybe_superset):
    return {
        key: set(sublist).issubset(maybe_superset[key])
        for key, sublist in maybe_subset.items()
    }
</code></pre>
<p>so that:</p>
<pre><code>dict_1 = {'V1': ['2024-11-07', '2024-11-08'], 'V2': ['2024-11-07', '2024-11-08']}
dict_2 = {'V1': ['2024-11-08'], 'V2': ['2024-11-07']}
print(dict_issubset(dict_2, dict_1))
</code></pre>
<p>outputs:</p>
<pre><code>{'V1': True, 'V2': True}
</code></pre>
<p>Demo: <a href=""https://ideone.com/wuvTET"" rel=""nofollow noreferrer"">https://ideone.com/wuvTET</a></p>
","2024-11-15 03:29:26","2","Answer"
"79191017","","How to check if one dictionary containing list is a subset of another dictionary with list in python","<p>Hi I have two dictionaries defined which contains lists</p>
<pre><code>dict_1 = {'V1': ['2024-11-07', '2024-11-08'], 'V2': ['2024-11-07', '2024-11-08']}
dict_2 = {'V1': ['2024-11-08'], 'V2': ['2024-11-07']}
</code></pre>
<p>both items (key and val) from dict_2 above are subset of dict_1 so I wanted return true in both cases.</p>
<p>I tried to use <code>res = set(dict_2.items()).issubset(set(dict_1.items()))</code>
However it works if its simple dictionary like</p>
<pre><code>dict_1 = {'abc' : 1, 'pqr' : 2} 
dict_2 = {'abc' : 1} 
</code></pre>
<p>in my case is there any way this can be done?</p>
","2024-11-15 03:17:44","3","Question"
"79189867","","Keep duplicate dictionaries of a list of dictionaries","<p>In my playbook, I have a list of dictionaries. I want to keep only duplicate dictionaries.</p>
<p>Basically it is something like:</p>
<pre><code>{   
   &quot;l&quot;: [
        {
            &quot;a&quot;: &quot;d&quot;,
            &quot;b&quot;: &quot;e&quot;,
            &quot;c&quot;: &quot;f&quot;,
        },
        {
            &quot;a&quot;: &quot;ggg&quot;,
            &quot;b&quot;: &quot;hhh&quot;,
            &quot;c&quot;: &quot;iii&quot;,
        },
        {
            &quot;a&quot;: &quot;jjj&quot;,
            &quot;b&quot;: &quot;kkk&quot;,
            &quot;c&quot;: &quot;lll&quot;,
        },
        {
            &quot;a&quot;: &quot;d&quot;,
            &quot;b&quot;: &quot;e&quot;,            
            &quot;c&quot;: &quot;f&quot;,
        }
        ]
}
</code></pre>
<p>I tried different things but at some point I realized I was perhaps reinventing the wheel. I couldn't find any module though.</p>
<p><strong>EDIT</strong><br />
Here's what I've managed to do with <code>jq</code>, it's not very elegant because I'm reprocessing the list for each element (and I'm also making nulls to filter them afterwards). What reassures me is that gpt hasn't managed to do it at all (despite my insistence). The list is contained in the data object because the filter references that list explicitly.</p>
<pre><code>---
- name: Filter duplicates from a list of dictionaries
  hosts: localhost
  gather_facts: no
  vars:
    jq_filter: '[ .l[] as $item | if ((.l | map(select(. == $item)) | length) &gt; 1) then $item else null end | select (. != null) ] | unique'
    data:
      l:
        - { a: &quot;ddd&quot;, b: &quot;eee&quot;, c: &quot;fff&quot; }
        - { a: &quot;ggg&quot;, b: &quot;hhh&quot;, c: &quot;iii&quot; }
        - { a: &quot;jjj&quot;, b: &quot;kkk&quot;, c: &quot;lll&quot; }
        - { a: &quot;ddd&quot;, b: &quot;eee&quot;, c: &quot;fff&quot; }
        - { a: &quot;jjj&quot;, b: &quot;kkk&quot;, c: &quot;lll&quot; }
  tasks:
    - name: debug list
      debug:
        var: data
    - name: Process list
      shell: echo '{{ data | to_json }}' | jq '{{ jq_filter }}'
      register: shell_output
    - name: get duplicates
      set_fact:
        duplicates: &quot;{{ shell_output.stdout_lines | join | from_json }}&quot;
    - name: debug duplicates
      debug:
        var: duplicates 
</code></pre>
<p><em>I accepted the answer with a custom filter</em></p>
","2024-11-14 17:36:26","2","Question"
"79186095","79186040","","<p>Please note the line with the comment. That will only show if news length is zero (or nullish which shouldn't generally be the case).</p>
<pre><code>{cats.map((item, index) =&gt; {
        let filteredNews = [...news]
          .reverse()
          .filter((noticia) =&gt; noticia.cat === item.slug &amp;&amp; noticia.destaque !== true)
          .slice(0, 4);
        return (
          &lt;section className={`noticias ${item.name}`} key={index}&gt;
            &lt;div className=&quot;container&quot;&gt;
              &lt;div className=&quot;title&quot;&gt;
                &lt;h3&gt;
                  {item.name}
                  &lt;Link to={`/noticias/${item.slug}`}&gt;
                    &lt;p&gt;ver todas&lt;/p&gt;
                  &lt;/Link&gt;
                &lt;/h3&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div className=&quot;blocks&quot;&gt;
              {filteredNews.length ? (
                filteredNews.map((noticia, idx) =&gt; {
                  return &lt;BlockNoticia key={idx} item={noticia} id={idx} /&gt;;
                })
              ) : (
                &lt;p&gt;No news in this category&lt;/p&gt; /**Put any message you wan't here */
              )}
            &lt;/div&gt;
          &lt;/section&gt;
        );
      })}
</code></pre>
","2024-11-13 17:50:51","0","Answer"
"79186040","","Show message when map returns no value","<p>i have 2 arrays categorias and noticias;</p>
<p>categorias is like this:</p>
<pre><code>export const Categorias = [
  {
    id: 1,
    name: &quot;actualidade&quot;,
    slug: &quot;actualidade&quot;,
  },
...
]
</code></pre>
<p>and noticias is something like this:</p>
<pre><code>export const Noticias = [
  {
    id: 1,
    titulo: &quot;titulo da primeira notícia&quot;,
    slug: &quot;titulo-da-primeira-notícia&quot;,
    texto:
      &quot;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc.&quot;,
    img: &quot;https://picsum.photos/id/0/5000/3333&quot;,
    cat: &quot;politica&quot;,
    destaque: true,
  },
...
]
</code></pre>
<p>on the homepage i have this code that shows 4 news per category:</p>
<pre><code>{cats.map((item, index) =&gt; {
        return (
          &lt;section className={`noticias ${item.name}`} key={index}&gt;
            &lt;div className=&quot;container&quot;&gt;
              &lt;div className=&quot;title&quot;&gt;
                &lt;h3&gt;
                  {item.name}
                  &lt;Link to={`/noticias/${item.slug}`}&gt;
                    &lt;p&gt;ver todas&lt;/p&gt;
                  &lt;/Link&gt;
                &lt;/h3&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div className=&quot;blocks&quot;&gt;
              {[...news]
                .reverse()
                .filter(
                  (noticia) =&gt;
                    noticia.cat === item.slug &amp;&amp; noticia.destaque !== true
                )
                .slice(0, 4)
                .map((noticia, idx) =&gt; {
                  return &lt;BlockNoticia key={idx} item={noticia} id={idx} /&gt;;
                })}
            &lt;/div&gt;
          &lt;/section&gt;
        );
      })}
</code></pre>
<p>I have left some categories with no news on purpose so i can show a message when there are none.</p>
<p>This is working fine except when there are no news from a category.</p>
<p>How can i show a message like &quot;there are no news in this category&quot;?</p>
","2024-11-13 17:33:51","0","Question"
"79183599","79112702","","<p>Basically, it looks like functionally thread-safe, but there is one strategic mistake in your code. You should not use the field <code>buses</code> as a lock object. The idiomatic technique is this:</p>
<pre><code>public class EventBusManager {       
    //...
    public EventBus GetIncrementUsage(string roomId) {
        lock (lockObject) {
            //...
            return busUsage.Bus;
        }
    }
    public void DecrementUsage(string roomId) {
        lock (lockObject) {
            //...
        }
    }
    object lockObject = new();
    // System.Threading.Lock lockObject = new(); // for .NET 9 and up
}
</code></pre>
<p>Note that the field <code>lockObject</code> should always be <code>private</code>.</p>
<p>You can find some rationale behind that <a href=""https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/statements/lock"" rel=""nofollow noreferrer"">here</a>. The specifically stated point is that a lock object should be an instance not used for any other purpose.</p>
<p>There is another issue, a minor one: <code>UsageCount</code> should not be <code>public</code>. I understand that it is not <code>private</code> because you want to access it outside <code>BusUsage</code> in the scope of <code>EventBusManager</code>, but for this purpose, <code>internale</code> access would suffice.</p>
","2024-11-13 06:05:19","1","Answer"
"79177596","79177552","","<p>Dictionary keys must be unique so:</p>
<p><code>unique_data = list({entry['FILTER']: entry for entry in data}.values())</code></p>
<p>will remove duplicates and give you a list in the format you need.</p>
","2024-11-11 12:10:03","1","Answer"
"79177552","","Python, filter unique but keep all columns","<p>I am trying to filter out unique matches, on a dict with hash tables in.
I have created a filter column. that is a hash of DST+PORT+PROT+SRC. So I just want to filter on the hash.
e.g</p>
<pre><code>[{'DST': '192.168.171.255',
  'FILTER': 4044338851943978111,
  'PORT': 137,
  'PROTO': 17,
  'SRC': '192.168.171.161'},
 {'DST': '192.168.171.255',
  'FILTER': 4044338851943978111,
  'PORT': 137,
  'PROTO': 17,
  'SRC': '192.168.171.161'},
 {'DST': '192.168.171.255',
  'FILTER': 4044338851943978111,
  'PORT': 137,
  'PROTO': 17,
  'SRC': '192.168.171.161'},
 {'DST': '192.168.171.255',
  'FILTER': 4044338851943978111,
  'PORT': 137,
  'PROTO': 17,
  'SRC': '192.168.171.161'},
 {'DST': '192.168.171.69',
  'FILTER': 1048673258922045509,
  'PORT': 63971,
  'PROTO': 6,
  'SRC': '35.157.63.228'}
]
</code></pre>
<p>I want the output to be</p>
<pre><code>[ {'DST': '192.168.171.255',
  'FILTER': 4044338851943978111,
  'PORT': 137,
  'PROTO': 17,
  'SRC': '192.168.171.161'},
 {'DST': '192.168.171.69',
  'FILTER': 1048673258922045509,
  'PORT': 63971,
  'PROTO': 6,
  'SRC': '35.157.63.228'}
]
</code></pre>
<p>Thanks</p>
","2024-11-11 11:57:03","-1","Question"
"79177132","79177125","","<p>You don't want to loop over your individual dict values, because you'll get them in more or less random order. You also don't want to create a new <code>&lt;tr&gt;</code> for each value in the dict. Just do:</p>
<pre><code>{% for user in mylist %}
    &lt;tr&gt;
        &lt;td&gt;{{ user.id }}&lt;/td&gt;
        &lt;td&gt;{{ user.name }}&lt;/td&gt;
    &lt;/tr&gt;
{% endfor %}
</code></pre>
","2024-11-11 09:44:29","1","Answer"
"79177125","","Django - Unable to convert a list of dictionary to a table","<p>I've a list of dictionary.</p>
<p><code>mylist = [{'id': 1, 'name': 'abc'}, {'id': 2, 'name': 'xyz'}]</code></p>
<p>I'm passing this <code>mylist</code> to an html page.</p>
<p><code>return render(request, &quot;viewdb.html&quot;, {'mylist':mylist})</code></p>
<p>and in <code>viewdb.html</code>, code is as given below.</p>
<pre><code>{% if mylist %}
    &lt;table&gt;
        &lt;tr&gt;
            &lt;th&gt; ID &lt;/th&gt;
            &lt;th&gt; Name &lt;/th&gt;
        &lt;/tr&gt;
    {% for user in mylist %}
        {% for key, value in user.items %}
                &lt;tr&gt;
                    &lt;td&gt; {{ value }}  &lt;/td&gt;
                    &lt;td&gt; {{ value }}  &lt;/td&gt;
                &lt;/tr&gt;
    &lt;/table&gt;
            {% endfor %}
    {% endfor %}
{% endif %}
</code></pre>
<p>I want the table to look like this.</p>
<pre><code>ID  NAME
1   abc
2   xyz
</code></pre>
","2024-11-11 09:42:26","0","Question"
"79172790","79171202","","<p><strong>immediate fix</strong></p>
<p>When you start the loop, you use <code>sample.items()</code> iterator -</p>
<pre><code>{% for k, v in sample.items() recursive %}
               ^^^^^^^^^^^^^^
</code></pre>
<p>When you recur, you are passing the dict itself -</p>
<pre><code>  {%- else %}
    {{ loop(v) }}
            ^
</code></pre>
<p>Simply change this to -</p>
<pre><code>  {%- else %}
    {{ loop(v.items()) }}
            ^^^^^^^^^
</code></pre>
<hr />
<p><strong>naive test</strong></p>
<p>An improvement to the entire loop would be to change the test to <a href=""https://jinja.palletsprojects.com/en/stable/templates/#jinja-tests.mapping"" rel=""nofollow noreferrer"">mapping</a>, instead of string.</p>
<pre><code>{% for k, v in sample.items() recursive %}
- {{ k }}:

  {%- if v is mapping %}
    {{ loop(v.items()) }}

  {%- else %}
    {{ v }}
  
  {%- endif -%}

{%endfor%}
</code></pre>
<p>This ensures that you only recur on dicts. In the original code, the <code>else</code> will recur any non-string input. If the data included a number, you would've encountered a different error.</p>
<hr />
<p><strong>nested input, nested output</strong></p>
<p>Preserving the levels of nesting in the output can be challenging. Consider using the <a href=""https://jinja.palletsprojects.com/en/stable/templates/#for"" rel=""nofollow noreferrer"">loop.depth</a> helper to create the correct whitespace -</p>
<pre><code>{% for k, v in sample.items() recursive %}
{{ &quot;  &quot; * (loop.depth - 1) }}- {{ k }}: 
  {%- if v is mapping %} {{- loop(v.items()) }}
  {%- else %} {{ v }}
  {%- endif -%}
{%endfor%}
</code></pre>
<p>Given <code>sample</code> input -</p>
<pre><code>sample = {
  'a': {
    'b': 1,
    'c': { 'd': 2 },
    'e': 'f',
  },
}
</code></pre>
<p>Output</p>
<pre><code>- a: 
  - c: 
    - d: 2
  - b: 1
  - e: f
</code></pre>
","2024-11-09 12:44:52","1","Answer"
"79171202","","Jinja templating with recursive in dict doesn't works","<p>I'm stuck in a Jinja implementation problem.</p>
<p>Here is my little python script:</p>
<pre><code>path = Path(__file__).parent

env = Environment(
    loader=FileSystemLoader(path / &quot;templates&quot;)
)
template = env.get_template(&quot;template1.rst&quot;)

rendered = template.render(sample={&quot;a&quot;: {&quot;b&quot;: &quot;c&quot;}})
</code></pre>
<p>And here is my template for jinja:</p>
<pre><code>.. toctree::
   :maxdepth: 3

{% for k, v in sample.items() recursive %}
- {{ k }}:

  {%- if v is string %}
    {{ v }}

  {%- else %}
    {{ loop(v) }}
  
  {%- endif -%}

{%endfor%}
</code></pre>
<p>The execution returns this error:</p>
<pre><code>File &quot;/home/jaja/Bureau/coding/bac_a_sable/sphinx_test/templates/template1.rst&quot;, line 5, in top-level template code
    {% for k, v in sample.items() recursive %}
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File &quot;/home/jaja/Bureau/coding/bac_a_sable/sphinx_test/templates/template1.rst&quot;, line 21, in template
    {{ loop(v) }}
^^^^^^^^^^^^^^^^^^
  File &quot;/home/jaja/Bureau/coding/bac_a_sable/sphinx_test/templates/template1.rst&quot;, line 5, in template
    {% for k, v in sample.items() recursive %}
    ^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: not enough values to unpack (expected 2, got 1)
</code></pre>
<p>As the <code>v</code> value of first loop is <code>{&quot;b&quot;: &quot;c&quot;}</code>, it must work, but it doesn't.</p>
<p>Is Jinja unable to recursively loop in dictionaries ?</p>
","2024-11-08 18:39:01","2","Question"
"79167826","79167165","","<p>This parses and casts keys from the &quot;keystring&quot;, and reduces to the final value. This solution doesn't care at all about your delimiters. It just keeps getting word characters <code>[a-zA-Z0-9_]</code>, until it hits something that isn't a word character. This solution also automatically turns integer keys into an int. This means you can't use ints in <code>str</code> format as dictionary keys. ex: <code>{&quot;1&quot;:None}</code>. You can do this, though: <code>{1:None}</code></p>
<h2>solution</h2>
<pre class=""lang-py prettyprint-override""><code>import functools, operator, re
from typing import Any

def find(src:dict, key:str) -&gt; Any:
    # parse and cast keys
    keys = map(lambda x: (str,int)[x.isdigit()](x), re.findall(r'\w+', key))
    
    # reduce to value
    return functools.reduce(operator.getitem, keys, src)
</code></pre>
<h2>usage</h2>
<pre class=""lang-py prettyprint-override""><code>data = {
    &quot;a&quot;: 1,
    &quot;b&quot;: 2,
    &quot;c&quot;: 3,
    &quot;d&quot;: {
        &quot;e&quot;: 4,
        &quot;f&quot;: 5
    },
    &quot;g&quot;: [{
        &quot;h&quot;: 6,
        &quot;i&quot;: 7
    },
    {
        &quot;h&quot;: 8,
        &quot;i&quot;: 9
    }]
}


print(find(data, 'g[1].h')) #8

# keys just need to be separated by non-word characters
# it doesn't matter which characters or the number of them
print(find(data, 'g 1 h')) #8
</code></pre>
","2024-11-07 19:20:17","0","Answer"
"79167454","79167165","","<p>You can iterate over the key path by matching key access (<code>a</code>/<code>.a</code>) or index access (<code>[0]</code>) and then cutting it off for the next iteration.</p>
<pre class=""lang-py prettyprint-override""><code>def find(struct, path, default=None):
    while path != &quot;&quot;:
        # if key and dict structure
        if (m := re.match(r&quot;^\.?([^\.\[]+)&quot;, path)) and isinstance(struct, dict):
            key = m[1]
        # if index and list structure
        elif (m := re.match(r&quot;^\[(\d+)\]&quot;, path)) and isinstance(struct, (list, tuple)):
            key = int(m[1])
        # else invalid and return the default
        else:
            return default

        # if key/index doesn't exit return the default
        try:
            struct = struct[key]
        except (KeyError, IndexError):
            return default

        # cut current path off for next iteration
        path = path[len(m[0]):]

    return struct
</code></pre>
<p>For invalid paths, it returns the default value.</p>
<pre><code>struct = {
    &quot;d&quot;: {
        &quot;e&quot;: 4,
        &quot;f&quot;: 5
    },
    &quot;g&quot;: [
        {
            &quot;h&quot;: 6,
            &quot;i&quot;: 7
        },
        {
            &quot;h&quot;: 8,
            &quot;i&quot;: 9
        },
    ],
    &quot;a&quot;: [
        (1, 2),
        (3, 4),
    ],
}
for path in  [
    &quot;d.e&quot;,
    &quot;g[0].h&quot;,
    &quot;g[1].h&quot;,
    &quot;g[0]h&quot;, # dot after ] is not necessary
    &quot;a[1][1]&quot;,
    &quot;d&quot;,
    &quot;g&quot;,
    &quot;g[7]&quot;,
    &quot;k&quot;,
    &quot;d.z&quot;,
    &quot;d[1]&quot;,
    &quot;g[z]&quot;,
    &quot;[4]&quot;,
    &quot;[d]&quot;,
    &quot;].].s8[3[&quot;,
]:
    print(f&quot;{path}: {find(struct, path)}&quot;)
</code></pre>
<p>Outputs:</p>
<pre class=""lang-none prettyprint-override""><code>d.e: 4
g[0].h: 6
g[1].h: 8
g[0]h: 6
a[1][1]: 4
d: {'e': 4, 'f': 5}
g: [{'h': 6, 'i': 7}, {'h': 8, 'i': 9}]
g[7]: None
k: None
d.z: None
d[1]: None
g[z]: None
[4]: None
[d]: None
].].s8[3[: None
</code></pre>
","2024-11-07 17:11:32","1","Answer"
"79167327","79167165","","<p>The code below works with the following assumptions:</p>
<ul>
<li>Dictionary keys are always separated by dots <code>.</code></li>
<li>Keys provided in brackets <code>[]</code> are always integers. This is true
for all kinds of sequences (lists, tuples, even substrings of strings), but doesn't work with ranges (e.g. <code>[:1]</code>) or multidimensional arrays (e.g. <code>[1, 2]</code>).</li>
</ul>
<pre><code>import re

my_dct = {&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3, &quot;d&quot;: {&quot;e&quot;: 4, &quot;f&quot;: 5 }, &quot;g&quot;: [{&quot;h&quot;: 6, &quot;i&quot;: 7 }, {&quot;h&quot;: 8, &quot;i&quot;: 9}]}

def get(key: str, dct: dict):
    key_parts = []  # Assemble a list of keys, no matter whether for dicts or sequences
    for part in key.split(&quot;.&quot;):  # Split at the dictionary level
        if matched := re.match(r&quot;(.*?)(?:\[(?:[+-]?\d+)\])+&quot;, part):  # Split at the list level if necessary
            key_parts.append(matched.group(1))
            for subpart in re.findall(r&quot;\[([+-]?\d+)\]&quot;, part):  # Append list indices
                key_parts.append(int(subpart))
        else:
            key_parts.append(part)
    result = dct
    while key_parts:  # Consume assembled list of keys
        result = result[key_parts.pop(0)]
    return result
   
print(get(&quot;g[0].h&quot;, my_dct))  # &gt;&gt;&gt; 6
print(get(&quot;a[0][+0][-1].x&quot;, {&quot;a&quot;:[[[{&quot;x&quot;: 1}]]]}))  # &gt;&gt;&gt; 1
</code></pre>
","2024-11-07 16:37:38","2","Answer"
"79167279","79167165","","<p>I've worked out a hacky-way of doing it, taking inspiration from this answer <a href=""https://stackoverflow.com/a/31033676/2915050"">Nested dictionary value from key path</a>. The answer from that post does not handle nested arrays, however, I made a small change to that function to accommodate the use of indexes within a key, e.g. <code>g[0].h</code></p>
<pre><code>def find(element, json):
    keys = element.split('.')
    rv = json
    for key in keys:
        if &quot;[&quot; not in key:
            rv = rv[key]
        else:
            index_split = key.split(&quot;[&quot;)
            bracket_split = index_split[-1].split(&quot;]&quot;)
            index = int(bracket_split[0])
            rv = rv[index_split[0]][index]

    return rv

d = {
    &quot;a&quot;: 1,
    &quot;b&quot;: 2,
    &quot;c&quot;: 3,
    &quot;d&quot;: {
        &quot;e&quot;: 4,
        &quot;f&quot;: 5
    },
    &quot;g&quot;: [{
        &quot;h&quot;: 6,
        &quot;i&quot;: 7
    },
    {
        &quot;h&quot;: 8,
        &quot;i&quot;: 9
    }]
}

print(find(&quot;g[0].h&quot;, d))
#returns 6
</code></pre>
","2024-11-07 16:15:21","0","Answer"
"79167165","","How to use dot and square bracket notation as a string key to access a nested dictionary/list structure","<p>Let's say I have a nested dictionary that looks something like this:</p>
<pre><code>{
    &quot;a&quot;: 1,
    &quot;b&quot;: 2,
    &quot;c&quot;: 3,
    &quot;d&quot;: {
        &quot;e&quot;: 4,
        &quot;f&quot;: 5
    },
    &quot;g&quot;: [{
        &quot;h&quot;: 6,
        &quot;i&quot;: 7
    },
    {
        &quot;h&quot;: 8,
        &quot;i&quot;: 9
    }]
}
</code></pre>
<p>However, I have been provided with a string key in dot notation form. If the key is, for example, <code>key = &quot;d.e&quot;</code>, how can I use this to get the value <code>4</code> from the above dictionary? Similarly, for a nested object which is an array of dicts, I would like to do the same to access <code>g[0].h</code> and <code>g[1].h</code>.</p>
<p>I do not want to convert the dictionary as in <a href=""https://stackoverflow.com/questions/2352181/how-to-use-a-dot-to-access-members-of-dictionary"">How to use a dot &quot;.&quot; to access members of dictionary?</a>, I want to preserve the use of the string as the key to access the objects.</p>
<p>I have tried using the <code>reduce</code> function as in <a href=""https://stackoverflow.com/questions/12414821/checking-a-nested-dictionary-using-a-dot-notation-string-a-b-c-d-e-automatica"">Checking a nested dictionary using a dot notation string &quot;a.b.c.d.e&quot;, automatically create missing levels</a> by OP or <a href=""https://stackoverflow.com/questions/31033549/nested-dictionary-value-from-key-path"">Nested dictionary value from key path</a>, but it does not handle nested arrays.</p>
","2024-11-07 15:35:47","-2","Question"
"79164979","79161746","","<p>If you want to break the reference and ensure that no memory is held by the dictionaries, you can use the <code>deep copy</code> concept.</p>
<p>Try modifying your existing code with the usage of <code>copy.deepcopy()</code> after importing the <code>copy</code> into your python file</p>
<pre><code>import copy
   
#instead of &quot;d&quot;: x[&quot;d&quot;], use

&quot;d&quot;: copy.deepcopy(x[&quot;d&quot;])

#do the same for all the list
</code></pre>
<p>Then you can delete the previous list if you dont want them to retain.</p>
<p>hope it solves the problem.</p>
","2024-11-07 03:59:28","1","Answer"
"79161746","","Copy value from one dictionary to another","<p>I have a situation where I have several very large lists of dictionaries and dictionaries containing vast amounts of data built elsewhere that is delivered in very large json objects. I need to take information from this large data heap and construct a new list of dictionaries containing a subset of data. But the resulting new dictionaries can not have any references to the old dictionaries from where the data was taken.</p>
<p><strong>Example</strong>
consider the following two data sources (very simple example on the real data we are trying to work with):</p>
<pre><code> list_1 = [{ &quot;id&quot;: &quot;12&quot;, &quot;b&quot;: 33,   &quot;d&quot;: &quot;rty&quot; }, 
           { &quot;id&quot;: &quot;22&quot;, &quot;b&quot;: 135,  &quot;d&quot;: &quot;jjj&quot; },
           { &quot;id&quot;: &quot;32&quot;, &quot;b&quot;: 1,    &quot;d&quot;: &quot;trt&quot; },
           { &quot;id&quot;: &quot;42&quot;, &quot;b&quot;: 1355, &quot;d&quot;: &quot;ast&quot; },]

 dict_2 = { &quot;12&quot; : { &quot;id&quot;: &quot;12&quot;, &quot;c&quot;: &quot;ada&quot; },
            &quot;22&quot; : { &quot;id&quot;: &quot;22&quot;, &quot;c&quot;: &quot;pklm&quot; },
            &quot;32&quot; : { &quot;id&quot;: &quot;32&quot;, &quot;c&quot;: &quot;pppf&quot; },  
            &quot;42&quot; : { &quot;id&quot;: &quot;42&quot;, &quot;c&quot;: &quot;eeef&quot; },}  
</code></pre>
<p>we then want to build a new list of dictionaries from this data. The rule is that for each dict in list_a where value b is less then 40 we want to build a new dictionary with the same id and the values c and d and add this new dict to a new list.</p>
<pre><code> newlist = [{ &quot;id&quot;: &quot;12&quot;, &quot;c&quot;: &quot;ada&quot;, &quot;d&quot;: &quot;rty&quot; },
            { &quot;id&quot;: &quot;32&quot;, &quot;c&quot;: &quot;pppf&quot;, &quot;d&quot;: &quot;trt&quot; },  
</code></pre>
<p>if we simply do this:</p>
<pre><code>newlist = []
for x in list_1:
  if x[&quot;b&quot;] &lt; 40:
    dict = {&quot;id&quot;: x[&quot;id&quot;],
            &quot;d&quot;: x[&quot;d&quot;],
            &quot;c&quot;: (dict_2[x[&quot;id&quot;]])[&quot;c&quot;] }
    newlist.append(dict)
</code></pre>
<p>then the dictionaries in newlist will contain references to list_1 and dict_2. Which is all and good when you want to save on memory the classic way i suppose.</p>
<p>But in our case we do not want the references. We need to be able to remove list_1 and dict_2 from memory after newlist has been made so we save in on memory usage that way. Newlist need to continue to exist in memory. List_1 and dict_2 are very very large and the resulting newlist is but a fraction in size.</p>
<p>When we check with the module memory_profiler we see that Python do not release the memory used by list_1 and dict_2 because the values taken from these two sources are then used to set values in newlist and because of this the two sources still need to be in memory because of the references. :/</p>
<p>How can this be done in Python? Can it be done in Python? How can we get a true copy and not a reference to the source? Right now we are leaning towards writing newdict to a file, wipe everything and then reload newdict from the file into memory and continue from there. But that seem like a rather crude solution.</p>
<p>Any ideas?</p>
","2024-11-06 07:55:46","-1","Question"
"79157388","79157376","","<ul>
<li>You can use a simple recursion function to check a value in a nested dict</li>
<li>example code:</li>
</ul>
<pre><code>def value_exists(nested_dict, target_value):
    for key, value in nested_dict.items():
        if isinstance(value, dict):
            if value_exists(value, target_value):
                return True
        elif value == target_value:
            return True
    return False
</code></pre>
<ul>
<li>test code:</li>
</ul>
<pre><code>dictionary = {
    &quot;UID1&quot;: {
        &quot;es&quot;: {
            &quot;lemma&quot;: &quot;caminar&quot;,
            &quot;conjugations&quot;: {
                &quot;present_simple&quot;: {
                    &quot;1ps&quot;: &quot;camino&quot;,
                    &quot;2ps&quot;: &quot;caminas&quot;,
                    &quot;3ps&quot;: &quot;camina&quot;,
                    &quot;1pp&quot;: &quot;caminamos&quot;,
                    &quot;2pp&quot;: &quot;camináis&quot;,
                    &quot;3pp&quot;: &quot;caminan&quot;
                }
            }
        }
    },
    &quot;UID2&quot;: {
        &quot;es&quot;: {
            &quot;lemma&quot;: &quot;cocinar&quot;,
            &quot;conjugations&quot;: {
                &quot;present_simple&quot;: {
                    &quot;1ps&quot;: &quot;cocino&quot;,
                    &quot;2ps&quot;: &quot;cocinas&quot;,
                    &quot;3ps&quot;: &quot;cocina&quot;,
                    &quot;1pp&quot;: &quot;cocinamos&quot;,
                    &quot;2pp&quot;: &quot;cocináis&quot;,
                    &quot;3pp&quot;: &quot;cocinan&quot;
                }
            }
        }
    }
}

print(value_exists(dictionary, &quot;camino&quot;))  # True
print(value_exists(dictionary, &quot;correr&quot;))  # False
</code></pre>
","2024-11-05 00:50:32","1","Answer"
"79157376","","Trying to find if value exists in nested dictionary","<p>I have the following nested dictionary, but I can't figure out how to get a particular nested value:</p>
<pre><code>dictionary = {
    &quot;UID1&quot; : {
        &quot;es&quot; : {
            &quot;lemma&quot; : &quot;caminar&quot;,
            &quot;conjugations&quot; : {
                &quot;present_simple&quot; : {
                    &quot;1ps&quot; : &quot;camino&quot;,
                    &quot;2ps&quot; : &quot;caminas&quot;,
                    &quot;3ps&quot; : &quot;camina&quot;,
                    &quot;1pp&quot; : &quot;caminamos&quot;,
                    &quot;2pp&quot; : &quot;camináis&quot;,
                    &quot;3pp&quot; : &quot;caminan&quot;
                }
            }
        }
    },
    &quot;UID2&quot; : {
        &quot;es&quot; : {
            &quot;lemma&quot; : &quot;cocinar&quot;,
            &quot;conjugations&quot; : {
                &quot;present_simple&quot; : {
                    &quot;1ps&quot; : &quot;cocino&quot;,
                    &quot;2ps&quot; : &quot;cocinas&quot;,
                    &quot;3ps&quot; : &quot;cocina&quot;,
                    &quot;1pp&quot; : &quot;cocinamos&quot;,
                    &quot;2pp&quot; : &quot;cocináis&quot;,
                    &quot;3pp&quot; : &quot;cocinan&quot;
                }
            }
        }
    }
    }

def word_check(word):
    if any (word) in dictionary.values():
        print(&quot;Yes&quot;)
    else:
        print(&quot;No&quot;)

word_check(&quot;camino&quot;)

</code></pre>
<p>But this doesn't work.</p>
<p>I considered a for loop but I couldn't figure out how to get it to go through the nested keys in an agnostic way. Also checked recursive loops but can't figure those out either. I feel like I'm almost there but can't quite put it together...</p>
<p>Something like:</p>
<pre><code>dictionary.values() = primary_key
primary_key.values() = layer_one
layer_one.values() = layer_two
etc.
</code></pre>
<p>But that doesn't seem terribly pythonic...</p>
","2024-11-05 00:42:34","-1","Question"
"79153655","79150856","","<p>Because the usual Julia Dict implements <code>keys</code> via an underlying second hash-map of Dict key to actual hash-key, which the <code>keys</code> function iterates as an iterator encapsulating an iterator, your code is safe.</p>
<p>Note however that if you <em>add</em> an item within your for loop, it is undefined whether the iteration will iterate the new item or not, as that is possibly based on the underlying hash value.</p>
","2024-11-03 21:11:56","1","Answer"
"79152584","79148017","","<p>In C it is possible to create maps using lookup tables.
<br />
Here a example:</p>
<pre class=""lang-c prettyprint-override""><code>#include &lt;stdio.h&gt;

static int parse_numbers[] = {
    ['1'] = 'A',
    ['2'] = 'B',
    ['3'] = 'C'
};

int main(void) {
    printf(&quot;%c\n&quot;, parse_numbers['1']);
    printf(&quot;%c\n&quot;, parse_numbers['2']);
    printf(&quot;%c\n&quot;, parse_numbers['3']);

    return 0;
}
</code></pre>
<p>These are powerful to obtain exactly what you asked for. It works thanks enums.
<br />
In fact, the following syntax produces the same result (discouraged!):</p>
<pre class=""lang-c prettyprint-override""><code>#include &lt;stdio.h&gt;

enum numbers {
    number_1 = 1,
    number_2 = 2,
    number_3 = 3,
};

static int parse_numbers[] = {
    [number_1] = 'A',
    [number_2] = 'B',
    [number_3] = 'C'
};

int main(void) {
    printf(&quot;%c\n&quot;, parse_numbers['1']);
    printf(&quot;%c\n&quot;, parse_numbers['2']);
    printf(&quot;%c\n&quot;, parse_numbers['3']);

    return 0;
}
</code></pre>
<p>This syntax is very reluctant from changes. It is easy to make mistakes changing the enum or the struct. Please, stay away from this, use the first one.</p>
","2024-11-03 11:20:25","1","Answer"
"79151450","79151442","","<p>You can use the <a href=""https://en.cppreference.com/w/cpp/utility/pair/pair"" rel=""nofollow noreferrer""><code>std::pair</code> constructor</a> taking a <a href=""https://en.cppreference.com/w/cpp/utility/piecewise_construct"" rel=""nofollow noreferrer""><code>std::piecewise_construct_t</code></a> for this scenario:</p>
<pre class=""lang-cpp prettyprint-override""><code>m.emplace(std::piecewise_construct,
          std::forward_as_tuple(4),
          std::forward_as_tuple(anInt, aDouble, aString));
</code></pre>
","2024-11-02 19:27:51","4","Answer"
"79151442","","C++ how to use emplace in std::map using forwarding argument","<p>With an <code>std::vector</code> I've managed to use <code>emplace_back</code> by forwarding the arguments, as in this code:</p>
<pre><code>#include&lt;iostream&gt;
#include&lt;map&gt;
#include &lt;string&gt;
#include &lt;utility&gt;
#include &lt;vector&gt;

using namespace std;

struct Complicated
{
  int i;
  double d;
  string s;

 Complicated(int a, double b, std::string c): i{a}, d{b}, s{c}{};
};

int main()
{
  std::vector&lt;Complicated&gt; m;
  int anInt = 4;
  double aDouble = 5.0;
  std::string aString = &quot;C++&quot;;

  m.emplace_back(anInt,aDouble,aString);
  return 0;
}
</code></pre>
<p>Something similar should happen with a map:</p>
<pre><code>  std::map&lt;int, Complicated&gt; m;
  int anInt = 4;
  double aDouble = 5.0;
  std::string aString = &quot;C++&quot;;

  m.emplace(4,anInt,aDouble,aString);
</code></pre>
<p>but I am getting the following error:</p>
<pre><code>emplace_back.cpp:28:39:   required from here
/usr/include/c++/9/ext/new_allocator.h:146:4: error: no matching function for call to ‘std::pair&lt;const int, Complicated&gt;::pair(int, int&amp;, double&amp;, std::__cxx11::basic_string&lt;char&gt;&amp;)’
  146 |  { ::new((void *)__p) _Up(std::forward&lt;_Args&gt;(__args)...); }
  |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</code></pre>
<p>How can I do that?</p>
","2024-11-02 19:19:51","2","Question"
"79151093","79149903","","
<p>The <strong>behavior you're seeing is arguably a <em>bug</em></strong>, present up to at least <a href=""https://github.com/PowerShell/PowerShell/blob/master/README.md"" rel=""nofollow noreferrer""><em>PowerShell (Core) 7</em></a> v7.4.x:</p>
<p><strong>If using index notation works for <em>getting</em> an entry's value (e.g. <code>$dict['a']</code>) it should equally work for <em>setting</em> it (e.g., <code>$dict['a'] = 'y'</code>)</strong>, especially given that both operations work with <em>property</em> notation.</p>
<p>The problem is that the parameterized <code>.Item</code> property that is required for index-notation support is an part of an <em>explicit</em> interface implementation, <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.dictionarybase#explicit-interface-implementations"" rel=""nofollow noreferrer""><code>IDictionary.Item</code></a>, in the base class you derive from, <a href=""https://learn.microsoft.com/en-US/dotnet/api/System.Collections.DictionaryBase"" rel=""nofollow noreferrer""><code>System.Collections.DictionaryBase</code></a>.</p>
<p>While that isn't a problem for <em>getting</em> an entry's value (except in <em>Windows PowerShell</em>, the legacy, ships-with-Windows, Windows-only edition of PowerShell whose latest and <em>last</em> version is 5.1), it unexpectedly fails on <em>setting</em>.<sup>[1]</sup></p>
<p>Given that PowerShell in general surfaces explicit interface implementations as if they were type-native members, the same should apply here.</p>
<p>See <a href=""https://github.com/PowerShell/PowerShell/issues/24537"" rel=""nofollow noreferrer"">GitHub issue #24537</a> for a discussion.</p>
<p><strong>Caveat</strong>:</p>
<ul>
<li>While your <code>class</code> would work as expected <em>from PowerShell</em> once the bug is fixed, thanks to the latter's implicit surfacing of explicit interface implementations, using it from other .NET languages, notably from C#, would require casting each instance to <a href=""https://learn.microsoft.com/en-US/dotnet/api/System.Collections.IDictionary"" rel=""nofollow noreferrer""><code>System.Collections.IDictionary</code></a> in order to access the dictionary functionality.</li>
</ul>
<hr />
<p><strong>Workarounds</strong>:</p>
<ul>
<li><p><em>Either</em>: Call the parameterized <code>.Item</code> property underlying the indexer explicitly, using method syntax, instead of using index notation:</p>
<ul>
<li><p>Note: This workaround is likely unacceptable, because it requires all callers to employ it; also, it is more obscure and cumbersome than using property notation. However, I'm mentioning it for the sake of completeness.</p>
</li>
<li><p>E.g., calling <code>$dict.Item('a') = 'y'</code> (instead of <code>$dict['a'] = 'y'</code>) works.</p>
</li>
</ul>
</li>
<li><p><em>Or</em>: <strong>Define your <code>MyDict</code> class</strong> using <strong>embedded C# code via <a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/add-type"" rel=""nofollow noreferrer""><code>Add-Type</code></a></strong>, which allows you to <strong>surface a <em>type-native</em> indexer (parameterized <code>Item</code> property)</strong> that internally defers to the explicitly interface implementation, as shown below; this will make <em>setting</em> entry values work with index notation too.</p>
<ul>
<li><p>The reason that C# code must be used is that PowerShell's own <a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_Classes"" rel=""nofollow noreferrer""><code>class</code></a> construct doesn't support implementing parameterized properties, as discussed in <a href=""https://stackoverflow.com/a/76240382/1701026"">this conceptually related answer</a>.</p>
</li>
<li><p>Note that C# has syntactic sugar for defining indexers; when you examine an instance of the resulting type via <a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-member"" rel=""nofollow noreferrer""><code>Get-Member</code></a>, you'll see a <code>ParameterizedProperty</code> entry with following definition:</p>
<pre class=""lang-bash prettyprint-override""><code> System.Object Item(System.Object key) {get;set;}
</code></pre>
</li>
</ul>
</li>
</ul>
<pre class=""lang-bash prettyprint-override""><code>Add-Type @'
using System.Collections;

public class MyDict : DictionaryBase {

  // Key-validation method.
  protected override void OnValidate(object key, object value) {
    var validKeyValues = new string[] { &quot;a&quot;, &quot;b&quot;, &quot;c&quot; };
    if (!((IList)validKeyValues).Contains(key)) {
        throw new System.ArgumentException(string.Format(&quot;Key {0} failed validation, must be one of {1}.&quot;, key, string.Join(' ', validKeyValues)));
    }
  }

  // Expose a type-native indexer that defers to the explicit 
  // interface implementation; at the .NET level this turns
  // into a parameterized property named &quot;Item&quot;.
  public object this[object key] {
    get =&gt; ((IDictionary)this)[key];
    set =&gt; ((IDictionary)this)[key] = value;
  }

}
'@

$d = [MyDict]::new()
# This works now, due to a type-native indexer being present.
$d['a'] = 'works'
</code></pre>
<hr />
<p><sup>[1] That is, Windows PowerShell <em>fundamentally</em> doesn't support index notation via parameterized <code>.Item</code> properties that are part of explicit interface implementations only.</sup></p>
","2024-11-02 16:32:47","4","Answer"
"79150955","79150296","","<p>The differences between your desired function and <code>merge</code> appear to be</p>
<p>(1) in case of conflicts, the merged dictionary should contain the value from the <code>left</code> dictionary instead of the value from the <code>right</code> dictionary, and</p>
<p>(2) it should remove the transferred pairs from the input dictionaries.</p>
<p>If the same key appears in both dictionaries, then there is a decision to make.  Your function could either (a) remove the pairs from both dictionaries, or (b) remove only the pair transferred from the <code>left</code> dictionary.</p>
<p>For part 1, your function can call the Julia functions. Either:</p>
<p>1a: Swap the first and second arguments to <code>merge</code>, as in <code>merge(right, left)</code>. Or</p>
<p>1b: Provide <code>mergewith</code> a <code>combine</code> function that selects its first arg, as in <code>mergewith( (a,b)-&gt;a, left, right)</code>.</p>
<p>For part 2, your function can either</p>
<p>2a. use <code>empty!</code> on both inputs as in <code>empty!(left)</code> and <code>empty!(right)</code> (if inputs both should become empty despite conflicts).  Or</p>
<p>2b. use <code>filter!(pair -&gt; pair.first in keys(left), right)</code> and <code>empty!(left)</code> (keep conflicting keys in <code>right</code> if <code>right</code> pairs not transferred to the merged dictionary should remain in <code>right</code>)</p>
<p>(Tip: <code>methodswith(Dict, supertypes=true)</code> lists signatures of methods that accept a <code>Dict</code>, including <code>empty!</code> and <code>filter!</code>.)</p>
<h1>Example</h1>
<pre><code>function mergeAndEmpty!(left::Dict, right::Dict)::Dict
    tmp = merge(right, left)
    empty!(left)
    empty!(right)
    return tmp
end

d1 = Dict(&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2, &quot;c&quot;=&gt;3, &quot;d&quot;=&gt;4)
d2 = Dict(&quot;y&quot;=&gt;10, &quot;z&quot;=&gt;20)

d_out = mergeAndEmpty!(d1, d2)

println(d1) # empty
println(d2) # empty
println(d_out) # contains all 6 elements
</code></pre>
","2024-11-02 15:16:06","1","Answer"
"79150856","","Is it safe to destructively iterate over a dictionary in Julia?","<p>Is it safe to destructively iterate over a dictionary in Julia?</p>
<p>Here is an example</p>
<pre class=""lang-julia prettyprint-override""><code>d = Dict()

for key in keys(d)
    pop!(d, key)
end
</code></pre>
<p>What matters is whether <code>keys(d)</code> returns an iterator or a collection. (I think.)</p>
<pre class=""lang-julia prettyprint-override""><code>julia&gt; typeof(keys(d))
Base.KeySet{String, Dict{String, Int64}}
</code></pre>
<p>According to <a href=""https://docs.julialang.org/en/v1/base/collections/#Base.keys"" rel=""nofollow noreferrer"">this documentation page</a>, it looks like <code>keys()</code> returns an iterator, and therefore presumably <code>KeySet</code> is an iterator?</p>
<p>Does that imply iterating over a dictionary in this way is not a safe operation?</p>
<p>Popping an element from a dictionary is usually an operation which you might expect will invalidate an iterator.</p>
","2024-11-02 14:21:57","2","Question"
"79150528","79150294","","<h2>Solution</h2>
<p>One more <code>product</code> usage (with <code>dicts = dictA, dictB</code>):</p>
<pre class=""lang-py prettyprint-override""><code>from itertools import product

dictComb = dict(zip(
    map(' '.join, product(*dicts)),
    map(sum, product(*map(dict.values, dicts)))
))
</code></pre>
<p><a href=""https://ato.pxeger.com/run?1=VVBLTsMwFBRbn4HFUzZNUKjiRJEQUhekEoIFhzCpo7rUH9kOqKBegCuwyQauwFngNNhOaBJvbL-ZNzPvfXypg91K0f2enW9YbW9gBW9RRWljLCVP0TXkWQrRmnBFNHNfnGVH5JlVYD7U98JKs3VI6Xi37S6QsHvfSUEPtWZGuUqR913GdQWfNFwVQi9EWC-FwJ3RGSbKuZcekcGkwLPqzK7M015vCD5Vw1k5TgSnxHhSnGnhIkfHz9Y2l1c_742WHJil2kq5N8C4ktqC0nLT1haFEdeSPw5Txq9MxSEIJypewGK5k0yk__z4IqwkSdITx7R8AvuKpyyfyb6lpt-Z4ycoSfpE30ozYePRdwV-oQPadf39Bw"" rel=""nofollow noreferrer"">Attempt This Online!</a></p>
<h2>Benchmark</h2>
<p>With 18 dicts of two items each:</p>
<pre><code>0.54 seconds  no_comment
0.70 seconds  no_comment_2
0.57 seconds  no_comment_3
1.37 seconds  Olivier_1
1.63 seconds  Olivier_2
</code></pre>
<p>Benchmark code:</p>
<pre class=""lang-py prettyprint-override""><code>def no_comment(dicts):
    return dict(zip(
        map(' '.join, product(*dicts)),
        map(sum, product(*map(dict.values, dicts)))
    ))

def no_comment_2(dicts):
    result = {}
    for d in dicts:
        result = d.copy() if not result else {
            f'{K} {k}': V + v
            for K, V in result.items()
            for k, v in d.items()
        }
    return result

def no_comment_3(dicts):
    result = {}
    for d in dicts:
        result = d.copy() if not result else {
            f'{K} {k}': V + v
            for k, v in d.items()
            for K, V in result.items()
        }
    return result

def Olivier_1(dicts):
    dictComb = {} 
    for keys in itertools.product(*dicts):
        keyComb = &quot; &quot;.join(keys)
        sum = 0
        for i, key in enumerate(keys):
            sum += dicts[i][key]
        dictComb[keyComb] = sum
    return dictComb

def Olivier_2(dicts):
    dictComb = {} 
    for keys in itertools.product(*dicts):
        keyComb = &quot; &quot;.join(keys)
        dictComb[keyComb] = sum(dicts[i][key] for i, key in enumerate(keys))
    return dictComb

funcs = no_comment, no_comment_2, no_comment_3, Olivier_1, Olivier_2

from itertools import product
import itertools
from timeit import repeat

# Correctness
dictA = {&quot;Beefsteak&quot;: 20, &quot;Campari&quot;: 100}
dictB = {&quot;McIntosh&quot;: 5, &quot;Fuji&quot;: 11, &quot;Honeycrisp&quot;: 32}
dicts = dictA, dictB
want = {
    &quot;Beefsteak McIntosh&quot;: 25, &quot;Beefsteak Fuji&quot;: 31, &quot;Beefsteak Honeycrisp&quot;: 52,
    &quot;Campari McIntosh&quot;: 105, &quot;Campari Fuji&quot;: 111, &quot;Campari Honeycrisp&quot;: 132
}
for f in funcs:
    print(f(dicts) == want, f.__name__)
print()

# Speed
dicts = [dictA] * 18
for _ in range(2):
    for f in funcs:
        t = min(repeat(lambda: f(dicts), number=1))
        print(f'{t:.2f} seconds ', f.__name__)
    print()
</code></pre>
<p><a href=""https://ato.pxeger.com/run?1=zVXNjtMwEL5xyFOMyqHJboiaVCutIvXAroRAK8QBiUtVRWkyYb2t7ch2ikqVJ-GyF3goHoQz_kmTZn8QJ4QviT3fzHzfeGx_-1Hv1S1n9_ffG1W9uvz54leJFTCeFZxSZMovSaFkkHqgh0DVCAZmyf9Kat8umkHz2p_CNLrjhIVQC142GnLmfINwhJMNPYGYFQOLdvm2QRlC5xNYH_3xxnyy5AEj2WwVLODQ2nnFBZRAHEeZ9ol7XBkVvN77ARATVR0NuJUIhx5uQ00PNy0cNu00hU9wDruxVSe6CbVB53IxIqKQSj94BNuEsLOUHiHa06q6KI_0zv8fvc8L-cuKPKv3w5bsCIosHok1_9ecrq1c6PVucC9NEh1dKM63MnrQcEMZNLQLMIGJ7U7feA-MdDNq48w7FUFC42cyIGsoilyh80pHeo3r-cIVfklWSw1Z9YAj9WXHYKWzaIeHp8iYxhVI_nUFnmHqj3T9uS7B07KqhhVSRxuaORwd5NFsHg5NMPwmOorgdBAKhNZcqOP94XXT3u7gilAk6ogVWGOuG-0lXHMhsFAMpfQMz9emrpMrxEoqzDeTFJJZCJPrnNa5IHoaz2atRV5Z5PviHVNc3mrLhca9ae4sSBOevOUM94UgstYr88R5GfU2j7vWrrwvObOH1xZsSAwngRMTebB0OebxaHWU7SJxF-yR92m0eHYxCIKecHyyOIoVzxOv9cxuV2aj7Ra6ZqoF0a9B1bUnLBZgxIRQRVnGcopZFngOE5hSf6wRy74IS1uFFZxBfGmjZ_aWyNln9JOuW59KaoYpGNVt67bR3-Z0XeYpHJnoLmroGsUiDoam7shODyqNkqoFiQVnpYTpmO8ADdzz172Cx9fwNw"" rel=""nofollow noreferrer"">Attempt This Online!</a></p>
<p>(Bah, my <code>no_comment_2</code> and <code>no_comment_3</code> are wrong if a middle dict is empty. Oh well, since they're not better anyway, I'm too lazy to fix that. Keeping them just to show the speed of that approach.)</p>
","2024-11-02 11:18:23","2","Answer"
"79150384","79148017","","<p>Thanks to everyone who answered. I ended up doing like this... I figured the images are hardcoded, so I just hard code identifying which one to display to in a case statement.</p>
<pre><code>switch(wsymbol) {
    case 1: tft.pushImage(ximage + jmp, yimage + twk, 64, 64, wsymbol_0001_sunny);break;
    case 2: tft.pushImage(ximage + jmp, yimage + twk, 64, 64, wsymbol_0002_sunny_intervals);break;
    case 3: tft.pushImage(ximage + jmp, yimage + twk, 64, 64, wsymbol_0003_white_cloud);break;
    case 6: tft.pushImage(ximage + jmp, yimage + twk, 64, 64, wsymbol_0006_mist);break;

    default: tft.pushImage(ximage + jmp, yimage + twk, 64, 64, wsymbol_0999_unknown);
  }
}
</code></pre>
","2024-11-02 09:48:26","0","Answer"
"79150297","79150294","","<p>You can use <a href=""https://docs.python.org/3/library/itertools.html#itertools.product"" rel=""nofollow noreferrer"">itertools.product()</a>
to get all the key combinations:</p>
<pre><code>import itertools

dictA = {&quot;Beefsteak&quot;: 20, &quot;Campari&quot;: 100}
dictB = {&quot;McIntosh&quot;: 5, &quot;Fuji&quot;: 11, &quot;Honeycrisp&quot;: 32}
dicts = [dictA, dictB]

dictComb = {} 
for keys in itertools.product(*dicts):
    keyComb = &quot; &quot;.join(keys)
    sum = 0
    for i, key in enumerate(keys):
        sum += dicts[i][key]
    dictComb[keyComb] = sum

print(dictComb)
</code></pre>
<p>Output:</p>
<pre><code>{'Beefsteak McIntosh': 25, 'Beefsteak Fuji': 31, 'Beefsteak Honeycrisp': 52, 'Campari McIntosh': 105, 'Campari Fuji': 111, 'Campari Honeycrisp': 132}
</code></pre>
<h2>EDIT</h2>
<p>As pointed out by SIGHUP in the comments, here is a better way to do the summation:</p>
<pre><code>dictComb = {} 
for keys in itertools.product(*dicts):
    keyComb = &quot; &quot;.join(keys)
    dictComb[keyComb] = sum(dicts[i][key] for i, key in enumerate(keys))
</code></pre>
","2024-11-02 08:59:05","0","Answer"
"79150296","","How to merge a dictionary in Julia?","<p>I want to write a function in Julia which merges two dictionaries.</p>
<pre><code>function merge(left::Dict, right::Dict)::Dict
</code></pre>
<p>The semantics are as follows:</p>
<ul>
<li>The inputs are <code>left</code> and <code>right</code></li>
<li>Both <code>left</code> and <code>right</code> taken ownership of their data, meaning that they will be modified after the function call and no guarantee about the data they contain should be made</li>
<li>The return value contains the data from both dictionaries</li>
<li>If any key is present in both <code>left</code> and <code>right</code> the value from <code>left</code> is maintained</li>
</ul>
<p>Here's some initial idea about how to approach this problem. (This is pseudocode with notes, not something which will actually compile.)</p>
<pre><code>function mergeDict(left::Dict, right::Dict)::Dict

    # create a new dictionary from `left`
    return_value = left

    # move data from `right` to `left`, &quot;no-clobber&quot;
    for k, v in pop_next!(right)
    # the function `pop_next!` does not exist, no iterator-like `pop!`

    for k in keys(right)
        v = pop!(right, k)
        # does this work as expected? destructive operation while reading keys?
        # `keys()` returns an *iterator*, not a collection! (?)

        if !haskey(left, k)
            push!(left, k, v) # no `push!` function
            left[k] = v # this works instead
        end
    end
    
    # `left` and `right` are not pointers, but &quot;copy-by-value references&quot;
    # just as in Python, so this doesn't work
    left = nothing
    right = nothing

    # we want to invalidate the data, how to do that?
    # this also won't work because `left` references the same data
    # structure as `return_value`
    clear(left)
    clear(right)
end
</code></pre>
<p>You can see I have attempted to write a manual implementation. I am fairly sure Julia will have some useful functions as part of the standard library for implementing this, however being new to Julia I do not know what those might be.</p>
<p>I found the functions <code>merge</code>, <code>mergewith</code>, <code>merge!</code> and <code>mergewith!</code> however none of these appear to have the above described semantics.</p>
","2024-11-02 08:59:02","-1","Question"
"79150294","","From multiple dictionaries, generate all combinations of keys while summing their values","<p>Let's say I have <em>n</em> dictionaries of different sizes, <code>dictA</code>, ..., <code>dictN</code> (<em>n</em> may be as great as 18). They all have strings as their keys and positive numbers as their values. What I need is a dictionary <code>dictComb</code> that has as its keys all combinations of keys from <code>dictA</code> to <code>dictN</code> (one key from each dictionary) with the value of each combination equal to the sum of the constituent keys' values.</p>
<p>Example (<em>n</em>=2):</p>
<pre><code>dictA = {&quot;Beefsteak&quot;: 20, &quot;Campari&quot;: 100}
dictB = {&quot;McIntosh&quot;: 5, &quot;Fuji&quot;: 11, &quot;Honeycrisp&quot;: 32}

dictComb = {
    &quot;Beefsteak McIntosh&quot;: 25, &quot;Beefsteak Fuji&quot;: 31, &quot;Beefsteak Honeycrisp&quot;: 52,
    &quot;Campari McIntosh&quot;: 105, &quot;Campari Fuji&quot;: 111, &quot;Campari Honeycrisp&quot;: 132
}
</code></pre>
<p>I tried something like this:</p>
<pre><code>for (a, b) in zip(dictA, dictB):
     dictComb.update({&quot; &quot;.join([a, b]): sum([dictA[a], dictB[b]])})
</code></pre>
<p>Unfortunately, that gives:</p>
<pre><code>dictComb = {&quot;Beefsteak McIntosh&quot;: 25, &quot;Campari Fuji&quot;: 111}
</code></pre>
","2024-11-02 08:58:25","0","Question"
"79149903","","How to implement a custom dictionary type that self validates its keys","<p>Say I wanted a dictionary type that self-validated its keys, so that only certain string values were allowed.</p>
<p>I tried something like this:</p>
<pre><code>class MyDict : Collections.DictionaryBase, ICloneable {
    [void] OnValidate($key, $value) {
        $validKeyValues = 'a','b','c'
        if ( $key -notin $validKeyValues ) {
            throw &quot;Key $key failed validation, must be one of $validKeyValues.&quot;
        }
    }

    [object] Clone() {
        $clonedDict = [MyDict]::new()
        $this.GetEnumerator() | ForEach-Object { $clonedDict.Add($_.Key, $_.Value) }
        return $clonedDict
    }
}

function StackOverflow {
    param(
        [MyDict]$Dictionary
    )
    $Dictionary
}

$dict = [MyDict]::new()
$dict.a = 'x'

StackOverflow $dict
</code></pre>
<p>This seems to work for member access setting and getting, e.g., <code>$dict.a = 'x'</code> works. However, I can no longer index into the dictionary when setting a new value, so <code>$dict['key'] = 'value'</code> doesn't work, but getting via <code>$dict['a']</code> does work and would return <code>x</code> using the above example.</p>
<p>Not being able to set via indexing seems like it's not a robust implementation, and so I am worried I might be missing out on more details.</p>
<h4>Questions</h4>
<ul>
<li>Is the above approach the closest I could come in PowerShell to creating a custom dictionary type that validates its own keys?</li>
<li>Can I fix the setting via index issue in PowerShell?</li>
<li>Is this overall even a valid approach or are there are other serious drawbacks that I've missed and/or better ways to do this in PowerShell?</li>
</ul>
<p><strong>note</strong> I did try inheriting from the generic <code>Dictionary&lt;TKey,TValue&gt;</code> class instead of <code>DictionaryBase</code>, but this generic class doesn't seem to use <code>OnValidate($key, $value)</code>, so I couldn't implement the self-validation. I've also left out <code>ISerializable</code> and <code>IDeserializationOnCallback</code> to simplify the question's scope.</p>
<p>PowerShell 7.4.5</p>
","2024-11-02 03:23:39","1","Question"
"79148392","79148347","","<p>As spelled in the comments, for instances of a class to be able to work as dictionary keys or set members, it has to implement both <code>__hash__</code> and the <code>__eq__</code> methods.</p>
<p>Just do that, and it will work as you expect.</p>
<pre><code>class foo:

    def __init__(self, name, i, j):
        self.name = name
        self.i = i
        self.j = j

    def __hash__(self):
        return hash((self.name, self.i, self.j))

    def __eq__(self, other):
        if not isinstance(other, type(self)):
            return False
        return self.name == other.name and self.i == other.i and self.j == other.j
</code></pre>
","2024-11-01 14:38:56","0","Answer"
"79148347","","Class as dictionary key not recognizing duplicates","<p>I am wanting to use a class as a dictionary key and have implemented the <code>__hash__</code> function and it appears to work. However, when I have a different instance of a class that has the same hash value, it is not recognized as being contained within the dictionary. MWE:</p>
<pre><code>class foo:
    def __init__(self, name, i, j):
        self.name = name
        self.i = i
        self.j = j

    def __hash__(self):
        return hash((self.name, self.i, self.j))


bar1 = foo('test', 1, 2)
bar2 = foo('test', 1, 2)

my_dict = {bar1: 'bar'}

print(bar1 in my_dict) # True
print(bar2 in my_dict) # False
print(hash(bar1) == hash(bar2)) # True
</code></pre>
<p>Can someone explain this behavior? I expected the hash value to also be used to determine whether an object is contained within the dictionary.</p>
<p>Running on Python 3.12.2 on Windows 10.</p>
","2024-11-01 14:26:09","-4","Question"
"79148264","79148017","","<p>I'm almost tempted not to share this solution, because the best way is to use a <code>struct</code> as mentioned by @White Owl.</p>
<p>If, for whatever reason, you do not want to use a <code>struct</code> to mimic a map, and want to keep the arrays separate yet have a well-defined matching of the images and names, you can use MACROS and XMACROS.</p>
<p>This is more of a fun fact rather than a viable solution.</p>
<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdint.h&gt;

static uint8_t wsymbol_0001_sunny[]            = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
static uint8_t wsymbol_0002_sunny_intervals[]  = { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 };
static uint8_t wsymbol_0003_white_cloud[]      = { 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02 };

#define SYMBOL(N) N

#define SET_SYMBOLS                       \
    SYMBOL(wsymbol_0001_sunny),           \
    SYMBOL(wsymbol_0002_sunny_intervals), \
    SYMBOL(wsymbol_0003_white_cloud)        

static uint8_t* symbol_images[] = { SET_SYMBOLS };

#undef SYMBOL
#define SYMBOL(N) #N

const char* symbol_names[] = { SET_SYMBOLS };

int main(void)
{
    int elem = 1;
    printf(&quot;img: %03x is called: %s\n&quot;,symbol_images[elem][0], symbol_names[elem] );
}
</code></pre>
<p>Online example: <a href=""https://rextester.com/QHPX44645"" rel=""nofollow noreferrer"">https://rextester.com/QHPX44645</a></p>
<p>In this example, the order you define the arrays in the <code>SET_SYMBOLS</code> macro will also determine the order the names are laid out in the array of names.</p>
","2024-11-01 14:00:52","2","Answer"
"79148226","79148017","","<p>The most straight-forward way is to declare two arrays where the indices correspond. For example if you have <code>String* symbols[n] = { &quot;sunny&quot;, ...</code> and some image table of pointers pointing at arrays<br />
<code>static uint8_t* images[n] = { wsymbol_0001_sunny, ...</code> then index 0 ties them together.</p>
<p>Then you could even create an enum to named the shared constants:</p>
<pre class=""lang-c prettyprint-override""><code>typedef enum
{
  WEATHER_SUNNY,
  ...
} weather_index_t;
</code></pre>
<hr />
<p>Another solution is to allocate everything together in structs, then make an array of struct objects. This makes the grouping more intuitive, at the expense of ever so slightly slower access.</p>
<hr />
<p>An advanced version of the array example is to generate the whole lot through X-macros. They are pretty ideal for this kind of setup, where you have similarly named data in various forms.</p>
<p>X macros make the code quite a bit harder to read, but much easier to maintain. You get rid of code repetition and you get a flexible format ideal for compile-time generation/data flash storage. And with the aid of an enum and designated initializers, you can add coupling and automatic sanity checks to ensure data integrity between the various arrays.</p>
<p>For example:</p>
<pre class=""lang-c prettyprint-override""><code>#include &lt;inttypes.h&gt;
#include &lt;stdio.h&gt;

#define WEATHER_LIST(X)    \
/*  str              n */  \
  X(sunny,           0001) \
  X(sunny_intervals, 0002) \
  X(white_cloud,     0003) \

typedef enum
{
  #define WEATHER_ENUM(str, n) str,
  WEATHER_LIST(WEATHER_ENUM)

  WEATHERS_N // total amount of items in the X-macro list
} weather_index_t;

static const char* const weather_str[] =
{
  #define WEATHER_STR(str, n) [str] = &quot;wsymbol_&quot; #n &quot;_&quot; #str,
  WEATHER_LIST(WEATHER_STR)
};
static_assert(sizeof weather_str/sizeof *weather_str == WEATHERS_N,
              &quot;weather_str data size inconsitency vs weather_index_t&quot;);

static const uint8_t weather_image[][3] = 
{
  [sunny]           = {1,2,3},
  [sunny_intervals] = {4,5,6},
  [white_cloud]     = {7,8,9}
};
static_assert(sizeof weather_image/sizeof *weather_image == WEATHERS_N,
              &quot;weather_image data size inconsitency vs weather_index_t&quot;);

int main()
{
  puts(weather_str[sunny]);
  for(size_t i=0; i&lt;WEATHERS_N; i++)
    printf(&quot;%&quot;PRIu8 &quot; &quot;, weather_image[sunny][i]);
}
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>wsymbol_0001_sunny
1 2 3 
</code></pre>
","2024-11-01 13:48:40","2","Answer"
"79148107","79148017","","<p>The common way to do it is by an array of structures</p>
<pre><code>#include &lt;stdint.h&gt;
#include &lt;stddef.h&gt;

static uint8_t wsymbol_0043_mostly_cloudy[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static uint8_t wsymbol_0043_mostly_sunny[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

struct named_array {
   char *name;
   uint8_t *array;
};

struct named_array data[] = {
   { &quot;wsymbol_0001_sunny&quot;, wsymbol_0043_mostly_sunny },
   { &quot;wsymbol_0002_sunny_intervals&quot;, wsymbol_0043_mostly_cloudy },
   { NULL, NULL }
};

uint8_t * find_array(const char *name) {
   int idx=0;
   while(data[idx].name) {
      if (strcmp(data[idx].name, name) == 0) return data[idx].array;
      idx++;
   }
   return NULL;
}
</code></pre>
","2024-11-01 13:11:47","5","Answer"
"79148089","79148017","","<p>There is no support for dictionaries in C, so you'll have to either implement a dictionary yourself or borrow someone else's implementation.</p>
<p>Since the names of the image already have an identifier, you can put the raw image data in an nested array like this:</p>
<pre><code>static uint8_t image_data[][] PROGMEM = {
    {/* wsymbol_0001_sunny */}, 
    {/* wsymbol_0002_sunny_intervals */}, 
    {/* ... */}
}
char *symbols[] = {
    &quot;wsymbol_0001_sunny&quot;,
    &quot;wsymbol_0002_sunny_intervals&quot;,
    &quot;wsymbol_0003_white_cloud&quot;
};
</code></pre>
<p>Then you can access an image by its name like this:</p>
<pre><code>image_data[atoi(symbols[1]+8)-1];
</code></pre>
<p>This will break if the number in the name of the image is not the correct index of the image data. If you want a proper dictionary then you can do it like this: <a href=""https://stackoverflow.com/a/4384446"">https://stackoverflow.com/a/4384446</a></p>
","2024-11-01 13:05:21","2","Answer"
"79148017","","Mapping an array to a name in C","<p>Unsure how to phrase this, but I'll give it a try</p>
<p>I have a set of arrays that I have defined like this, they are C style images.</p>
<pre><code>static uint8_t wsymbol_0043_mostly_cloudy[] PROGMEM  = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
</code></pre>
<p>And a set of names for collection of C style images in an array like this</p>
<pre><code> String* symbols[] = {
&quot;wsymbol_0001_sunny&quot;,
&quot;wsymbol_0002_sunny_intervals&quot;,
&quot;wsymbol_0003_white_cloud&quot;};
</code></pre>
<p>Now using C I want to be able to map the symbols array here to the sets of C style images? But I don't know how I can do so in C.</p>
<p>I need to pass the array wsymbol_0001_sunny[] to a method, not the name wsymbol_0001_sunny?</p>
<p>Is the answer the &quot;map&quot; function in C?</p>
","2024-11-01 12:37:58","1","Question"
"79147014","79146969","","<p>You don't need to create a loop. Square brackets are used to get the value from the dictionary. You can use try-except constructions. If the KeyError occurs in the 'try' block that there is no value for the key, then the code from the 'except' block will be executed</p>
<pre class=""lang-py prettyprint-override""><code>fruits = {&quot;Apple&quot;: 8, &quot;Orange&quot;: 7, &quot;Lemon&quot;: 9, &quot;Lime&quot;: 5, &quot;Banana&quot;: 20}

def fruit_price(fruit: str):
    try: 
        return fruits[fruit]
    except KeyError:
        return fruit + ' is not found'

fruit_price('Lemon')
fruit_price('Melon')
</code></pre>
<pre><code>Output:
9
Melon is not found
</code></pre>
<p>Actually you can just use <code>get()</code> method, if the value for the key doesn't exist, it returns 'None' or whatever you want</p>
<pre class=""lang-py prettyprint-override""><code>fruit1 = 'Lemon'
fruit2 = 'Melon'
# The first argument is a &quot;key&quot;
# The second argument &quot;default&quot; is what the method returns if the value for the key doesn't exist
# It is not necessary to pass the value of the second argument
# Because, by default, the second argument is None
fruits.get(fruit1, fruit1 + ' is not found')
fruits.get(fruit2, fruit2 + ' is not found')
fruits.get(fruit2)
</code></pre>
<pre><code>Output:
9
Melon is not found
None
</code></pre>
","2024-11-01 05:17:03","0","Answer"
"79147011","79146969","","<pre><code>fruits = {&quot;Apple&quot;: 8, &quot;Orange&quot;: 7, &quot;Lemon&quot;: 9, &quot;Lime&quot;: 5, &quot;Banana&quot;: 20}

def fruit_price(x):
    found_fruit = ''
    for fruit in fruits:
        if fruit == x:
            found_fruit = x
    if found_fruit != '':
        return fruits[found_fruit]
    else:
        print('Fruit Not Found')


print(fruit_price('Lemon'))
</code></pre>
<p>the above code can solve your problem.</p>
","2024-11-01 05:15:25","-2","Answer"
"79146969","","func to return value from key in dictionary - python","<p>I want to return the value only when providing the key to a function. Using below, if the key is provided, the linked value should be returned. If the key does not exist, then return 'Fruit Not Found'.</p>
<p>Steps:</p>
<ol>
<li><p>create empty list to append values</p>
</li>
<li><p>iterate key, value from dict</p>
</li>
<li><p>if given parameter is a key, append to list. else return not found</p>
</li>
<li><p>return list value</p>
</li>
</ol>
<p>code:</p>
<pre><code>fruits = {&quot;Apple&quot;: 8, &quot;Orange&quot;: 7, &quot;Lemon&quot;: 9, &quot;Lime&quot;: 5, &quot;Banana&quot;: 20}

def fruit_price(x):

    price = [] 

    for k,v in fruits.items():
    
        if x in k:
            price.append(x)
        else:
            print('Fruit Not Found')

    return price


fruit_price('Lemon')
</code></pre>
<p>Exp output:</p>
<pre><code>9
</code></pre>
","2024-11-01 04:49:09","-4","Question"
"79140306","79138023","","<p>Here's a recursive function that will convert your dictionary to a list of sublists. Note that the sublists are of varying lengths, so you may have some post-treatment to do before making a dataframe out of the list.</p>
<pre><code>def dict_to_lists(my_dict):
    my_list = []
    children = my_dict.get('children')
    if children is None:
        return [[my_dict['id']]]
    for child_dict in children:
        my_list.extend([[my_dict['id']] + child_list for child_list in dict_to_lists(child_dict)])
    return my_list
</code></pre>
<p>On your example dict, it returns:</p>
<pre><code>[
    [0, 4], 
    [0, 1, 2], 
    [0, 1, 6], 
    [0, 1, 7], 
    [0, 1, 8], 
    [0, 3, 5], 
    [0, 9, 10], 
    [0, 9, 11, 12], 
    [0, 9, 11, 13], 
    [0, 9, 11, 14], 
    [0, 9, 11, 15], 
    [0, 16, 17], 
    [0, 16, 18], 
    [0, 16, 19], 
    [0, 16, 20], 
    [0, 16, 21, 22], 
    [0, 16, 21, 23, 24]
]
</code></pre>
","2024-10-30 08:49:00","0","Answer"
"79138023","","Arbitrary depth tree represented by a nested dictionary of lists to pandas DataFrame","<p>I am trying to get a pandas dataframe from a nested dictionary that contains lists of children nodes. The depth and amount of nodes is completely uneven. Here I put an example of the dictionary that I am trying to convert to a Pandas Dataframe. My dictionary is much longer, it has more than 600 nodes but it has the same format as this example.</p>
<pre><code>example_dict = {&quot;id&quot;: 0, &quot;children&quot;:[{&quot;id&quot;:4},
                                 {&quot;id&quot;: 1, &quot;children&quot;:[{&quot;id&quot;:2}, {&quot;id&quot;:6}, {&quot;id&quot;:7}, {&quot;id&quot;:8}]},
                                 {&quot;id&quot;: 3, &quot;children&quot;:[{&quot;id&quot;:5}]},
                                {&quot;id&quot;: 9, &quot;children&quot;:[{&quot;id&quot;:10},
                                                      {&quot;id&quot;: 11, &quot;children&quot;:[{&quot;id&quot;:12},
                                                                             {&quot;id&quot;:13},
                                                                             {&quot;id&quot;:14},
                                                                             {&quot;id&quot;:15}]}]},
                                {&quot;id&quot;: 16, &quot;children&quot;:[{&quot;id&quot;:17},
                                                       {&quot;id&quot;:18},
                                                       {&quot;id&quot;:19},
                                                       {&quot;id&quot;:20},
                                                       {&quot;id&quot;: 21, &quot;children&quot;:[{&quot;id&quot;:22},
                                                                              {&quot;id&quot;: 23, &quot;children&quot;:[{&quot;id&quot;:24}]}]}]}]}
</code></pre>
<p>I want to convert it into a dataframe that looks like this:</p>
<pre><code>|    |   Level 1 |   Level 2 | Level 3   | Level 4   | Level 5   |
|---:|----------:|----------:|:----------|:----------|:----------|
|  0 |         0 |         4 | &lt;NA&gt;      | &lt;NA&gt;      | &lt;NA&gt;      |
|  1 |         0 |         1 | 2         | &lt;NA&gt;      | &lt;NA&gt;      |
|  2 |         0 |         1 | 6         | &lt;NA&gt;      | &lt;NA&gt;      |
|  3 |         0 |         1 | 7         | &lt;NA&gt;      | &lt;NA&gt;      |
|  4 |         0 |         1 | 8         | &lt;NA&gt;      | &lt;NA&gt;      |
|  5 |         0 |         3 | 5         | &lt;NA&gt;      | &lt;NA&gt;      |
|  6 |         0 |         9 | 10        | &lt;NA&gt;      | &lt;NA&gt;      |
|  7 |         0 |         9 | 11        | 12        | &lt;NA&gt;      |
|  8 |         0 |         9 | 11        | 13        | &lt;NA&gt;      |
|  9 |         0 |         9 | 11        | 14        | &lt;NA&gt;      |
| 10 |         0 |         9 | 11        | 15        | &lt;NA&gt;      |
| 11 |         0 |        16 | 17        | &lt;NA&gt;      | &lt;NA&gt;      |
| 12 |         0 |        16 | 18        | &lt;NA&gt;      | &lt;NA&gt;      |
| 13 |         0 |        16 | 19        | &lt;NA&gt;      | &lt;NA&gt;      |
| 14 |         0 |        16 | 20        | &lt;NA&gt;      | &lt;NA&gt;      |
| 15 |         0 |        16 | 21        | 22        | &lt;NA&gt;      |
| 16 |         0 |        16 | 21        | 23        | 24        |
</code></pre>
<p><a href=""https://i.sstatic.net/5tT9k3HO.jpg"" rel=""nofollow noreferrer"">Target Table</a></p>
<p>The number of columns depends on the dictionary so the solution needs to add as many columns as needed.</p>
<p>I tried the solutions here but I could not get a solution.</p>
<p><a href=""https://stackoverflow.com/questions/74475332/any-depth-nested-dict-to-pandas-dataframe"">Any depth nested dict to pandas dataframe</a></p>
","2024-10-29 16:03:43","-2","Question"
"79134614","79134600","","<p>The value of the key <code>year</code> is a list, so you need to index the list.  Just go step-by-step to figure it out:</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; d = {'year':[{'season':['winter',['spring']]}]}
&gt;&gt;&gt; d['year']  # result is list
[{'season': ['winter', ['spring']]}]
&gt;&gt;&gt; d['year'][0]  # result is dict
{'season': ['winter', ['spring']]}
&gt;&gt;&gt; d['year'][0]['season']  # result is list
['winter', ['spring']]
&gt;&gt;&gt; d['year'][0]['season'][1]  # result is another list
['spring']
&gt;&gt;&gt; d['year'][0]['season'][1][0]  # result is string
'spring'
</code></pre>
","2024-10-28 18:04:54","0","Answer"
"79134600","","I work with dictionaries in Python and constantly face such a problem: ""list indices must be integers or slices, not str"" What to do?","<pre><code>&gt;&gt;&gt; d = {'year':[{'season':['winter',['spring']]}]}
&gt;&gt;&gt; d['year']['season']['winter']
Traceback (most recent call last):
  File &quot;&lt;python-input-2&gt;&quot;, line 2, in &lt;module&gt;
    d['year']['season']['winter']
    ~~~~~~~~~^^^^^^^^^^
TypeError: list indices must be integers or slices, not str
</code></pre>
<p>I tried to change the names of the variables, but it didn't do anything. What do I need to do to &quot;pull out&quot; the &quot;spring&quot;?</p>
","2024-10-28 18:01:26","-3","Question"
"79134277","79134103","","<p>You should be able to use generics to create an extension method without worrying about the type of the dictionary's values, so long as the key is an integer.</p>
<pre><code>Imports System
Imports System.Collections.Generic

Module Module1
    Sub Main()
        Dim dict As New Dictionary(Of Integer, Object) From {
            {1, New Object()},
            {2, New Object()},
            {3, New Object()},
            {4, New Object()}
        }

        Console.WriteLine(dict.CommaSeparatedKeys())
    End Sub
End Module

Module DictionaryExtensions
    &lt;System.Runtime.CompilerServices.Extension&gt;
    Public Function CommaSeparatedKeys(Of TValue)(dict As IDictionary(Of Integer, TValue)) As String
        Return String.Join(&quot;,&quot;, dict.Keys)
    End Function
End Module
</code></pre>
<p>Hopefully this will give you what you want though.</p>
<hr />
<h4>CAVEAT</h4>
<p>As I'm not a VB.NET developer the code above was converted from the equivalent C#, below, using <a href=""https://www.codeconvert.ai/csharp-to-vb.net-converter"" rel=""nofollow noreferrer"">https://www.codeconvert.ai/csharp-to-vb.net-converter</a>.</p>
<pre><code>using System;
using System.Collections.Generic;

var dict = new Dictionary&lt;int, object&gt;()
{
    { 1, new { } },
    { 2, new { } },
    { 3, new { } },
    { 4, new { } },
};

Console.WriteLine(dict.CommaSeparatedKeys());

public static class DictionaryExtensions
{
    public static string CommaSeparatedKeys&lt;TValue&gt;(this IDictionary&lt;int, TValue&gt; dict)
    {
        return string.Join(&quot;,&quot;, dict.Keys);
    }
}
</code></pre>
","2024-10-28 16:21:43","2","Answer"
"79134103","","Make a comma-separated string of the keys in a .Net dictionary (no Linq!)","<p>Our 15+ YO VB.net app has a number of <code>Dictionary(Of Integer, &lt;some object type&gt;)</code>. Examples include <code>Dictionary(Of Integer, Accounts)</code> and <code>Dictionary(Of Integer, Users)</code>.</p>
<p>I would like to write a generic helper method to return the keys as a comma-separated string. This seems more difficult than I imagined.</p>
<p>The app is cross-platform and Linq is not available. If it was I would simply pass the result <code>Integer()</code> from <code>ToArray</code> and be done.</p>
<p>My initial thought was to use a method that took <code>Dictionary(Of Integer, Object)</code>, but a <code>Dictionary(Of Integer, Accounts)</code> is not a <code>Dictionary(Of Integer, Object)</code>. I suspect this <em>is</em> the solution, but I simply don't have the correct syntax for the second type?</p>
<p>I also thought that passing the <code>KeyCollection</code> (from <code>.Keys</code>) would work, but that returns a Dictionary of the same type (which I admit to finding surprising) so that doesn't appear to help.</p>
<p>Is there a simple solution here?</p>
","2024-10-28 15:39:18","0","Question"
"79133527","79133458","","<p>One easy option would be to use <a href=""/questions/tagged/pandas"" class=""s-tag post-tag"" title=""show questions tagged &#39;pandas&#39;"" aria-label=""show questions tagged &#39;pandas&#39;"" rel=""tag"" aria-labelledby=""tag-pandas-tooltip-container"" data-tag-menu-origin=""Unknown"">pandas</a>. Although not ideal performance-wise to handle lists, this is easily done with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.map.html"" rel=""nofollow noreferrer""><code>map</code></a>:</p>
<pre><code>import pandas as pd

df = pd.DataFrame(coolant_data).T

avg = df.map(np.mean)

ax = avg.plot.bar()
for c in ax.containers:
    ax.bar_label(c)
</code></pre>
<p>Output:</p>
<p><a href=""https://i.sstatic.net/egHxkfvI.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/egHxkfvI.png"" alt=""enter image description here"" /></a></p>
<p>With error bars:</p>
<pre><code>import pandas as pd
from matplotlib.container import BarContainer

df = pd.DataFrame(coolant_data).T

avg = df.map(np.mean)
std = df.map(np.std)

ax = avg.plot.bar(yerr=std)
for c in ax.containers:
    if isinstance(c, BarContainer):
        ax.bar_label(c)
</code></pre>
<p>Output:</p>
<p><a href=""https://i.sstatic.net/jy2jpzLF.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/jy2jpzLF.png"" alt=""enter image description here"" /></a></p>
<h5>using <a href=""/questions/tagged/seaborn"" class=""s-tag post-tag"" title=""show questions tagged &#39;seaborn&#39;"" aria-label=""show questions tagged &#39;seaborn&#39;"" rel=""tag"" aria-labelledby=""tag-seaborn-tooltip-container"" data-tag-menu-origin=""Unknown"">seaborn</a></h5>
<pre><code>import pandas as pd
import seaborn as sns

df = (pd.DataFrame({(k, f'sample {s}'): l for k, lst in coolant_data.items()
                    for s, l in enumerate(lst, start=1)})
        .rename_axis(columns=['coolant', 'sample'])
        .melt(value_name='hardness')
     )

ax = sns.barplot(df, x='coolant', hue='sample', y='hardness', errorbar='sd')
for c in ax.containers:
    ax.bar_label(c, label_type='center')
</code></pre>
<p>Output:</p>
<p><a href=""https://i.sstatic.net/gYhpRTQI.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/gYhpRTQI.png"" alt=""enter image description here"" /></a></p>
","2024-10-28 13:08:09","2","Answer"
"79133458","","matplotlib barplot with groups using a dictionary of lists of lists","<p>I have some measurements of hardness of steels after quenching in different coolants: Water, Oil and Air (just leaving it to cool down). The measurements are organized as following: A dict, called <code>coolant_data</code>, contains three string:list pairs. Each string is a coolant, and each list is the measurements from a it. Inside each list, there are three lists containing all the measurements from three samples.</p>
<p>I have calculated the means and standard deviations of the measurements from each sample, and placed them in <code>coolant_samples</code> and <code>coolant_samples_stds</code>, accordingly. I want to plot all the data from <code>coolant_samples</code>, with <code>coolant_samples_stds</code> as the errorbars, in a bar chart using plt. So far so easy.</p>
<p>The part I'm having trouble with is this: The columns from each list should be adjecent, in the same group. Meaning, the groups should be organized by coolant, with each group containing three columns for the means of the measurements of the three samples.</p>
<p>So far I have the following code:</p>
<pre class=""lang-py prettyprint-override""><code># Hardness data [HRC]
coolant_data = {
    &quot;Water&quot;: [[27.0, 29.0, 30.0, 28.5, 27.5], [21.5, 29.0, 28.5, 21.0, 30.0], [25.0, 22.0, 28.0, 31.0, 26.0]],
    &quot;Oil&quot;: [[11.5, 10.0, 11.5, 9.5, 4.5], [11.0, 12.0, 12.0, 11.0, 12.0], [9.5, 10.0, 11.0, 10.5, 11.0]],
    &quot;Air&quot;: [[2.5, 3.0, 3.0, 3.5, 1.0], [2.0, 1.5, 3.0, 4.0, 3.5], [2.0, 1.5, 3.0, 2.0, 1.5]]}

# Calculate means and standard deviations
coolant_samples = {coolant: [np.mean(sample) for sample in measurements] for coolant, measurements in coolant_data.items()}
coolant_sample_stds = {coolant: [np.std(sample) for sample in measurements] for coolant, measurements in coolant_data.items()}

# Plot the hardness data as a bar chart with error bars for each sample and the mean
plt.figure()
plt.title(&quot;Hardness of Samples After Quenching in Different Coolants&quot;)
plt.ylabel(&quot;Hardness [HRC]&quot;)
labels = coolant_samples.keys()

# Create the bars with grouped x-axis values
x = range(len(labels))
width = 0.25  # Width of each bar
plt.bar_label(plt.bar([i - width for i in x], coolant_samples['Water'], width, label='Sample 1', yerr=coolant_sample_stds['Water']), padding=3)
plt.bar_label(plt.bar([i for i in x], coolant_samples['Oil'], width, label='Sample 2', yerr=coolant_sample_stds['Oil']), padding=3)
plt.bar_label(plt.bar([i + width for i in x], coolant_samples['Air'], width, label='Sample 3', yerr=coolant_sample_stds['Air']), padding=3)

plt.xticks(x, labels)
plt.ylim(bottom=0, top=35)
plt.legend(loc='upper left', ncols=3)
plt.show()
</code></pre>
<p>And I'm getting this graph:</p>
<p><a href=""https://i.sstatic.net/BKAm3qzu.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/BKAm3qzu.png"" alt=""A bar chart with the data grouped incorrectly"" /></a></p>
<p>As you can see, the columns are groups incorrectly. I would really appreciate help on this.</p>
","2024-10-28 12:46:13","1","Question"
"79129987","79129685","","<pre><code>def myfunc(d={}):
    d.clear()
    d.update(otherd)
</code></pre>
<p>should do the trick. That said, a mutable default argument value is often not a great idea. You probably know that and this is intentional. If not, an alternative could be</p>
<pre><code>import copy


def myfunc(d=None):
    d = d or copy.copy(otherd)  # or copy.deepcopy, if you will.
</code></pre>
","2024-10-27 05:53:26","2","Answer"
"79129685","","How to completely reassign a dictionary that is a default mutable value in the formal parameters of a function in python","<pre class=""lang-py prettyprint-override""><code>def myfunc(l=[]):
    if not l:
        l[:] = otherlist
</code></pre>
<p>The preceding snippet of code completely reassigns list <code>l</code> to whatever list is stored in variable <code>otherlist</code> and maintains that value across function calls of <code>myfunc</code>.</p>
<pre class=""lang-py prettyprint-override""><code>def myfunc(d={}):
    
    d.clear()
    for k, v in otherd.items():
        d[k] = v
</code></pre>
<p>For this example assume dictionary <code>otherd</code> is within the scope of the function call, just not explicitly provided.</p>
<p>Is there a way to completely reassign dictionary <code>d</code> in a simpler way than the direct reassignment in the example provided?</p>
<p>Note:</p>
<p>Default mutable values is a value that is initialized and stored upon the first call of the function. When mutated it maintains that state across function calls, so when accessed it will return its most recent state rather than the initial one.</p>
","2024-10-27 00:17:06","-5","Question"
"79127368","79127320","","<p>If the dictionary is always on last position, you can use <code>pop</code> function:</p>
<pre class=""lang-py prettyprint-override""><code># I am assuming you have a dict response
response = {'rules': [
 {'comment': 'XXX', 'policy': 'deny', 'srcCidr': 'IP', 'destCidr': 'IP'},
 {'comment': 'Remove', 'policy': 'allow', 'srcCidr': 'IP', 'destCidr': 'IP'}
]}

# removes the last item in a list
response['rules'].pop()

print(response)
</code></pre>
<p>If that can be in any position or if you can have multiple dictionaries to delete, maybe you can use a comprehension or <code>filter</code> function to filter the desired dictionaries:</p>
<pre class=""lang-py prettyprint-override""><code>response = {'rules': [
 {'comment': 'XXX', 'policy': 'deny', 'srcCidr': 'IP', 'destCidr': 'IP'},
 {'comment': 'Remove', 'policy': 'allow', 'srcCidr': 'IP', 'destCidr': 'IP'}
]}

key = 'comment'
value = 'Remove'

# Option1 - comprehension
rules = [d for d in response['rules'] if d[key] != value]

# Option2 - filter
rules = list(filter(lambda d: d.get(key) != value, response['rules']))

response['rules'] = rules

print(response)
</code></pre>
","2024-10-25 21:32:05","1","Answer"
"79127351","79127320","","<p>Break down what you need:</p>
<ul>
<li>what do you need to modify?</li>
<li>exactly how do you need to modify it?</li>
</ul>
<p>The data you have is a dictionary (say <code>d</code>), and you know that the part of the dictionary you need to modify is a list, which is the value for key <code>'rules'</code>. You can access that list with <code>d['rules']</code>. And you can access elements of that list with <code>d['rules'][index]</code>.</p>
<p>The list contains dictionaries, but all you need to is remove the last one in the list, so it doesn't really matter what type of object you're removing. You can access the last element in a list, by counting from the rear <code>d['rules'][-1]</code>. Note that Python starts from 0 at the start, but has to start from -1 at the rear (since there's no difference between 0 and -0).</p>
<p>And to remove/unset a variable in Python, you can use <code>del</code>, which also works for removing dictionary entries:</p>
<pre><code>del d['rules'][-1]
</code></pre>
","2024-10-25 21:22:46","1","Answer"
"79127320","","Removing dictionary from dictionary list","<p>I'm writing a script using Meraki's Python Library that uses a for loop to grab a dictionary list of firewall rules which is written to a variable.</p>
<p>From there I'm inserting a dictionary into line 0.</p>
<p>The issue is that there's a dictionary in the list I need to remove. The key number of the rule changes per network because some of them already have rules, but it's always the last item in the list and contains the same info.</p>
<p>It's formatted as the following -</p>
<pre><code>{'rules': [
{'comment': 'XXX', 'policy': 'deny', 'srcCidr': 'IP', 'destCidr': 'IP'},
 {'comment': 'Remove', 'policy': 'allow', 'srcCidr': 'IP', 'destCidr': 'IP'}
]}
</code></pre>
<p>In this example, the second line would need removing, but further down the if loop, the one that would need to be removed may be the 4th item due to other entries preceding it.</p>
<p>I've looked at creating an if statement for it but I have no idea how I would format it.</p>
","2024-10-25 21:10:09","1","Question"
"79118886","78972811","","<p><code>&lt;Dictionary&lt;TKey, TValue&gt;</code> is the generic Dictionary Type. If your target object was a <code>List&lt;Dictionary&lt;TKey, TValue&gt;&gt;</code> then this for-loop statement would indeed work.</p>
<p>In for-loops, you typically want to define the <strong>TYPE</strong> of data you will be looping over within the collection. As for you, your dictionaryObject has mapped types of <em>&lt;int, string&gt;</em>, that is, a dictionary mapping integer key values to string values.</p>
<p>Generally, in C#, when you iterate over a dictionary, the <strong>foreach</strong> loop processes each <em>key-value</em> pair in the dictionary as <strong>KeyValuePair&lt;TKey, TValue&gt;</strong>. This allows you to access both the <strong>key</strong> and the <strong>value</strong> for each entry during iteration. A dictionary is simply, a collection of key-value pairs, and <strong>KeyValuePair&lt;TKey, TValue&gt;</strong> is the <strong>TYPE</strong> of pair within your collection.</p>
","2024-10-23 16:40:13","0","Answer"
"79116312","79106891","","<p>For this <a href=""https://techcommunity.microsoft.com/t5/azure-maps/preview-of-new-azure-maps-elevation-service-rest-apis/m-p/1957321/highlight/false#M47"" rel=""nofollow noreferrer"">doc</a>, the Azure Maps Elevation services and Render V2 DEM tiles will be retired on May 5, 2023.</p>
<p>Refer to this <a href=""https://learn.microsoft.com/en-us/java/api/overview/azure/maps-elevation-readme?view=azure-java-legacy"" rel=""nofollow noreferrer"">doc</a> for the Azure Maps SDK Elevation client <a href=""https://github.com/Azure/azure-sdk-for-java/blob/azure-maps-elevation_1.0.0-beta.2/sdk/maps/azure-maps-elevation/src/samples/java/com/azure/maps/elevation/samples/GetDataForBoundingBox.java"" rel=""nofollow noreferrer"">library</a>.</p>
<blockquote>
<p>So, use the Bing Maps <a href=""https://learn.microsoft.com/bingmaps/rest-services/elevations/get-elevations"" rel=""nofollow noreferrer"">Get Elevations</a> service to replace the <a href=""https://learn.microsoft.com/en-us/rest/api/maps/elevation"" rel=""nofollow noreferrer"">Azure Maps Elevation</a> services. For pricing and licensing options, view the <a href=""https://www.microsoft.com/en-us/maps/licensing/"" rel=""nofollow noreferrer"">Bing Maps licensing</a>.</p>
</blockquote>
<p>The code below is for interacting with the Bing Maps Elevations API. You can use the following URL templates to obtain elevation data for points, paths, or areas.</p>
<pre class=""lang-cs prettyprint-override""><code> private static readonly string BingMapsKey = &quot;Your_Bing_Maps_Key&quot;;
    
    static async Task Main(string[] args)
    {
        
        string points = &quot;35.89431,-110.72522,35.89393,-110.72578&quot;;
        string url = $&quot;http://dev.virtualearth.net/REST/v1/Elevation/List?points={points}&amp;key={BingMapsKey}&quot;;
        
     
        var response = await GetElevationDataAsync(url);
   
        if (response != null &amp;&amp; response.resourceSets.Length &gt; 0)
        {
            var elevations = response.resourceSets[0].resources[0].elevations;
            Console.WriteLine(&quot;Elevations:&quot;);
            foreach (var elevation in elevations)
            {
                Console.WriteLine(elevation);
            }
        }
        else
        {
            Console.WriteLine(&quot;No data found.&quot;);
        }
    }

    private static async Task&lt;ElevationResponse&gt; GetElevationDataAsync(string url)
    {
        using (HttpClient client = new HttpClient())
        {
            try
            {
                HttpResponseMessage response = await client.GetAsync(url);
                if (response.IsSuccessStatusCode)
                {
                    string json = await response.Content.ReadAsStringAsync();
                    return JsonConvert.DeserializeObject&lt;ElevationResponse&gt;(json);
                }
                else
                {
                    Console.WriteLine($&quot;Error: {response.StatusCode}&quot;);
                    return null;
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($&quot;Exception: {ex.Message}&quot;);
                return null;
            }
        }
    }
}


public class ElevationResponse
{
    public ResourceSet[] resourceSets { get; set; }
}

public class ResourceSet
{
    public int estimatedTotal { get; set; }
    public ElevationResource[] resources { get; set; }
}

public class ElevationResource
{
    public int[] elevations { get; set; }
    public int zoomLevel { get; set; }
}


</code></pre>
<p><img src=""https://i.imgur.com/zlYNmFZ.png"" alt=""enter image description here"" /></p>
","2024-10-23 03:37:48","1","Answer"
"79114728","79114550","","<p>In the case there are never falsy values in the dictionary or <code>x</code>, the two options have the same output, but <code>get(x, x)</code> is better than <code>get(x) or x</code> because <code>get(x, x)</code> is simpler, more explicit, more obvious, and more readable (especially for someone who might not know the dict can never contain falsy values). It <em>might</em> also be faster; the two functions involve exactly the same operations except the second one has an extra operation.</p>
<pre><code>import dis
dis.dis(lambda: rebrands.get(&quot;Marathon&quot;, &quot;Marathon&quot;))  # 8 operations
dis.dis(lambda: rebrands.get(&quot;Marathon&quot;) or &quot;Marathon&quot;)) # 9 operations
</code></pre>
","2024-10-22 15:04:55","2","Answer"
"79114600","79114550","","<p>In answer to your original question: <code>or</code> will short-circuit if your value is Falsey, so there are plenty of values where the two statements will behave differently.</p>
<pre class=""lang-py prettyprint-override""><code>my_dict = {
    'foo': 0,
    'bar': &quot;&quot;,
    'baz': [],
}

x = 'foo'
print(repr(my_dict.get(x, x)))
print(repr(my_dict.get(x) or x))
</code></pre>
<p>In answer to your edit, if you can guarantee that your <code>dict</code> is definitely a <code>dict</code>, and that the values in your <code>dict</code> are always Truthy, then the two should behave equivalently.</p>
<p>There may be some performance tradeoffs either way, but I generally don't bother to get hung up on that. If this code ends up in a hot loop, then profile it, write the faster version, then stick a comment nearby explaining that your code's weird because the weird way is faster.</p>
<p>In my opinion the downside of your method is philosophical. To my eyes, <code>.get(x, ...)</code> communicates your intent as &quot;retrieve key <code>x</code>, and if it's not there, default to <code>...</code>&quot;. <code>.get(x) or ...</code> communicates &quot;if it's not there, or is defined as a Falsey value, default to <code>...</code>&quot;. The intent displayed in your question suggests you should use <code>.get(x, x)</code>, but for a simple example like this it hardly matters.</p>
","2024-10-22 14:36:38","5","Answer"
"79114550","","Is `mydict.get(x, x)` eqivalent to `mydict.get(x) or x`?","<p>When using a dictionary to occasionally replace values, are <code>.get(x, x)</code> and <code>.get(x) or x</code> equivalent?</p>
<p>For example:</p>
<pre class=""lang-py prettyprint-override""><code>def current_brand(brand_name):
    rebrands = {
        &quot;Marathon&quot;:    &quot;Snickers&quot;,
        &quot;Opal Fruits&quot;: &quot;Starburst&quot;,
        &quot;Jif&quot;:         &quot;Cif&quot;,
        &quot;Thomson&quot;:     &quot;TUI&quot;,
    }
    
    return rebrands.get(brand_name, brand_name)
    # or
    return rebrands.get(brand_name) or brand_name

    # this is forbidden - cannot use `default` keyword argument here
    return rebrands.get(brand_name, default=brand_name)

assert current_brand(&quot;Jif&quot;) == &quot;Cif&quot;
assert current_brand(&quot;Boots&quot;) == &quot;Boots&quot;
</code></pre>
<p>I think <code>.get(x) or x</code> is clearer, but that's pretty much a matter of opinion, so I'm curious if there's a technical benefit or drawback to one or the other I've not spotted.</p>
<p>Edit: sorry, to be clear, I'm assuming that the dictionary does not contain falsey values as that would't make sense in this context (i.e. in the example above you're not recording that <code>&quot;Somerfield&quot;</code> rebranded as <code>&quot;&quot;</code>)</p>
","2024-10-22 14:27:44","2","Question"
"79114167","79114136","","<p>You're declaring <code>entities</code> outside the loop, so you end up updating the same object over and over again.</p>
<p>However, all of your code simplifies to a couple of list comprehensions:</p>
<pre><code>def strip_if_string(val):
    if isinstance(val, str):
        return val.strip()
    return val


columns = [column[0].lower() for column in cur.description]
entities_list = [dict(zip(columns, (strip_if_string(v) for v in row))) for row in cur.fetchall()]
</code></pre>
","2024-10-22 12:55:33","1","Answer"
"79114136","","Create list of dictionaries from Postgres table","<p>I want to create a list of dictionaries from a postgres table. I use this code:</p>
<pre><code>rows_dict = cur.fetchall() # fetch all rows from the Postgres Database
  
columns = []
entities_list = []
for column in cur.description:
    columns.append(column[0].lower())
entities = {}
for row in rows_dict:
    for i in range(len(row)):
        entities[columns[i]] = row[i]
        if isinstance(row[i], str):
            entities[columns[i]] = row[i].strip()
    print('Output-A:', entities)
    entities_list.append(entities) # add dictionary to the entity_list

print('Output-B:', entities_list) # Here I get a list with x-times the same dictionary... Why?
</code></pre>
<p>Output-A is what I expect at this indent level (and which is correct): multiple dictionaries. With an .append(entities) I want to add these dictionaries to the entity_list. However, the entity_list is populated <strong>multiple times</strong> with the <strong>same</strong> (=last!) dictionary in the loop. I do not understand what is going wrong as the .append(entities) is at the same indent as the Output-A. Any idea what is going wrong there?</p>
","2024-10-22 12:46:55","0","Question"
"79112733","79111944","","<p>You should put <code>var</code> before the <code>Fruits = {}</code>, it should look like this:</p>
<pre><code>    var Fruits = {}
    var NumberOfFruits = 0

    Fruits[&quot;apple&quot;] = {&quot;color&quot;:&quot;red&quot;}
    Fruits[&quot;banana&quot;] = {&quot;color&quot;:&quot;yellow&quot;}
    Fruits[&quot;orange&quot;] = {&quot;color&quot;:&quot;orange&quot;}

    for i in Fruits:
        NumberOfFruits += 1
</code></pre>
<p>Othrewise, this code works perfectly fine</p>
","2024-10-22 06:41:11","1","Answer"
"79112702","","Thread safe Dictionary with items usage count and auto clean","<p>How to implement thread safe auto clean Dictionary?</p>
<p><code>EventBusManager</code> must provide an <code>EventBus</code> instance per roomId.<br />
<code>EventBusManager</code> usage:</p>
<pre class=""lang-cs prettyprint-override""><code>// When user connect to room
var eventBus = evtBusManager.GetIncrementUsage(roomId);

// When user disconnect
evtBusManager.DecrementUsage(roomId);
</code></pre>
<p><code>EventBusManager</code> implementation:</p>
<pre class=""lang-cs prettyprint-override""><code>public class EventBusManager {
    readonly Dictionary&lt;string, BusUsage&gt; buses = [];

    public EventBus GetIncrementUsage(string roomId) {
        lock (buses) {
            if (!buses.TryGetValue(roomId, out var busUsage)) {
                busUsage = new BusUsage(new EventBus());
                buses.Add(roomId, busUsage);
                return busUsage.Bus;
            }

            busUsage.UsageCount++;
            return busUsage.Bus;
        }
    }

    public void DecrementUsage(string roomId) {
        lock (buses) {
            if (!buses.TryGetValue(roomId, out var busUsage))
                return;

            busUsage.UsageCount--;

            if (busUsage.UsageCount == 0)
                buses.Remove(roomId);
        }
    }

    record BusUsage(EventBus Bus) {
        public int UsageCount = 1;
    };
}
</code></pre>
<p>Is the implementation thread safe?</p>
","2024-10-22 06:28:31","2","Question"
"79111944","","I have a problem with a For loop and A Dictionary in Godot 4 where it create an infinit loop","<p>I wanted to add 1 to a variable for every element in a dictionary.</p>
<p>I tried something like this :</p>
<pre><code>Fruits = {}
var NumberOfFruits = 0

Fruits[&quot;apple&quot;] = {&quot;color&quot;:&quot;red&quot;}
Fruits[&quot;banana&quot;] = {&quot;color&quot;:&quot;yellow&quot;}
Fruits[&quot;orange&quot;] = {&quot;color&quot;:&quot;orange&quot;}

for i in Fruits:
    NumberOfFruits += 1
</code></pre>
<p>So thats what I tried and I expected to get : NumberOfFruits = 3</p>
<p>But I got an infinite loop that was counting up FOREVER</p>
","2024-10-21 22:41:26","0","Question"
"79111336","79111323","","<p>Your idea of using a class method to update the enum definition seems fine. Here's an example of how you can achieve this using the <code>StrEnum</code> base class:</p>
<pre><code>from enum import StrEnum
from typing import Mapping

class Colors(StrEnum):
    WHITE = '#ffffff'
    BLACK = '#000000'

    @classmethod
    def from_dict(cls, color_dict: Mapping[str, str]):
        for color_name, hex_code in color_dict.items():
            setattr(cls, color_name.upper(), hex_code)

# Usage
color_dict = {&quot;red&quot;: &quot;#BE3E23&quot;, &quot;green&quot;: &quot;#47735b&quot;}
Colors.from_dict(color_dict)

print(Colors.RED)  # Output: #BE3E23
print(Colors.GREEN)  # Output: #47735b
print(Colors.WHITE)  # Output: #ffffff
print(Colors.BLACK)  # Output: #000000
</code></pre>
<p><strong>Edit:</strong> <em><strong>AS PER THE COMMENTS</strong></em></p>
<p>In Python, Enums are designed to be immutable after they are created, so dynamically adding new members won't update the internal list of members.</p>
<p>To fix this, you'd have to recreate the enum dynamically, but Enums doesn't allow direct modification after definition. Here's a possible solution using metaclass to handle dynamic behavior using a custom class to mimic enum behavior, but it won't be a true Enum in the strict Python sense.</p>
<pre><code>from typing import Mapping

class ColorMeta(type):
    def __getattr__(cls, color_name):
        color_name = color_name.upper()
        if color_name in cls._colors:
            return cls._colors[color_name]
        raise AttributeError(f&quot;{cls.__name__} has no attribute {color_name}&quot;)

class DynamicColors(metaclass=ColorMeta):
    _colors = {
        'WHITE': '#ffffff',
        'BLACK': '#000000'
    }

    @classmethod
    def from_dict(cls, color_dict: Mapping[str, str]):
        for color_name, hex_code in color_dict.items():
            cls._colors[color_name.upper()] = hex_code

    @classmethod
    def list_colors(cls):
        return list(cls._colors.items())

# Usage
color_dict = {&quot;red&quot;: &quot;#BE3E23&quot;, &quot;green&quot;: &quot;#47735b&quot;}
DynamicColors.from_dict(color_dict)

print(DynamicColors.RED)    # Output: #BE3E23
print(DynamicColors.GREEN)  # Output: #47735b
print(DynamicColors.WHITE)  # Output: #ffffff
print(DynamicColors.BLACK)  # Output: #000000

print(DynamicColors.list_colors()) 

# Output: [('WHITE', '#ffffff'), ('BLACK', '#000000'), ('RED', '#BE3E23'), ('GREEN', '#47735b')]
</code></pre>
","2024-10-21 18:33:13","0","Answer"
"79111323","","How to update/create dynamically enums in Python from a dic?","<p>I have a custom enum, but sometimes I want to update it.</p>
<p>See the example below:</p>
<pre class=""lang-none prettyprint-override""><code>from enum import StrEnum

class Colors(StrEnum):
    WHITE = '#ffffff'
    BLACK = '#000000'
</code></pre>
<p>If I have a dict like this: <code>{&quot;red&quot;: &quot;#BE3E23&quot;, &quot;green&quot;: &quot;#47735b&quot;}</code>.</p>
<p>How can I update this enum definition above?</p>
<p>My idea is to create a <code>@classmethod</code> function called <code>from_dict</code> that updates the list.</p>
<p>I'm not sure if I keep the <code>StrEnum</code> inheritance or if I move to a <code>NamedTuple</code> or any other better object to deal with this.</p>
","2024-10-21 18:26:18","0","Question"
"79109418","79108443","","<p>Here's one approach:</p>
<p><strong>Step 1:</strong> convert <code>enc.mapping</code> to <code>df</code></p>
<p>Using <a href=""https://pandas.pydata.org/docs/reference/api/pandas.concat.html"" rel=""nofollow noreferrer""><code>pd.concat</code></a> with <code>names</code> + <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reset_index.html"" rel=""nofollow noreferrer""><code>df.reset_index</code></a> with <code>name</code>:</p>
<pre class=""lang-py prettyprint-override""><code>names = ['group', 'cat_val']

enc_mapping = (pd.concat(enc.mapping, names=names)
               .reset_index(name='value')
               )
</code></pre>
<p>Output:</p>
<pre class=""lang-py prettyprint-override""><code>    group  cat_val     value
0  group1        1  3.072686
1  group1        2  3.427314
2  group1       -1  3.250000
3  group1       -2  3.250000
4  group2        1  2.957256
5  group2        2  3.427314
6  group2        3  3.217473
7  group2       -1  3.250000
8  group2       -2  3.250000
</code></pre>
<p><strong>Step 2:</strong> map based on <code>enc.ordinal_encoder.mapping</code></p>
<pre class=""lang-py prettyprint-override""><code>m = (pd.concat({item['col']: pd.Series(item['mapping'].index, item['mapping']) 
                for item in enc.ordinal_encoder.mapping})
     )

enc_mapping['cat_val'] = enc_mapping.set_index(names).index.map(m)

# alternative:
# enc_mapping['cat_val'] = enc_mapping[names].apply(tuple, axis=1).map(m)
</code></pre>
<p>Output:</p>
<pre class=""lang-py prettyprint-override""><code>    group cat_val     value
0  group1      A1  3.072686
1  group1      B1  3.427314
2  group1     NaN  3.250000
3  group1     NaN  3.250000
4  group2      A2  2.957256
5  group2      B2  3.427314
6  group2      C2  3.217473
7  group2     NaN  3.250000
8  group2     NaN  3.250000
</code></pre>
<p><strong>Explanation / intermediates</strong></p>
<ul>
<li>Use a dict comprehension to get keys from <code>'col'</code> key in each dict in <code>enc.ordinal_encoder.mapping</code> and values from <code>'mapping'</code>, but swapping index and values (cf. <a href=""https://stackoverflow.com/questions/40146472/quickest-way-to-swap-index-with-values"">here</a>). Pass this to <code>pd.concat</code>:</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>m

group1   1     A1
         2     B1
        -2    NaN
group2   1     A2
         2     B2
         3     C2
        -2    NaN
dtype: object
</code></pre>
<ul>
<li>Now, set the index of <code>enc_mapping</code> to <code>names</code> with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.set_index.html"" rel=""nofollow noreferrer""><code>df.set_index</code></a> , apply <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Index.map.html"" rel=""nofollow noreferrer""><code>index.map</code></a> with <code>m</code>, and assign.</li>
</ul>
<hr />
<p>(On step 2: I can imagine that there is an easier way to get the code mappings. Via <code>enc.ordinal_encoder.transform(dfa[cols_a])</code> could be promising.)</p>
","2024-10-21 09:27:07","1","Answer"
"79108443","","flatten dictionary with dataframe value to a dataframe","<p>This encoding process will generate a mapping between each categorical value and its corresponding numeric value:</p>
<pre><code>import category_encoders as ce

cols_a = ['group1', 'group2']
dfa = pd.DataFrame([['A1', 'A2', 1], ['B1', 'B2', 4], ['A1', 'C2', 3], ['B1', 'B2', 5]], columns=['group1', 'group2', 'label'])
enc = ce.TargetEncoder(cols=cols_a)
enc.fit(dfa[cols_a], dfa['label'])

enc.mapping
</code></pre>
<p><a href=""https://i.sstatic.net/foxL7I6t.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/foxL7I6t.png"" alt=""enter image description here"" /></a></p>
<p>Maybe you can ignore the encoding process and just remember the output mapping.</p>
<p>How to flatten this mapping into the expected dataframe below?</p>
<p><a href=""https://i.sstatic.net/v8lZsVzo.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/v8lZsVzo.png"" alt=""enter image description here"" /></a></p>
<p>Follow-up: I eventually want to replace the <strong>'cat_val'</strong> with its original categorical values from the mapping <code>enc.ordinal_encoder.mapping</code>. Is there any easy way to achieve this?</p>
<p>My solution is to group by <strong>'group'</strong> -&gt; find the corresponding dictionary -&gt; replace it with the value from the dictionary.</p>
<p><a href=""https://i.sstatic.net/TZs8D3Jj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/TZs8D3Jj.png"" alt=""enter image description here"" /></a></p>
","2024-10-21 02:59:08","0","Question"
"79106891","","get elevation of a point using Azure maps","<p>I am working on a desktop app and I have been able to bring the map in the WPF window using Azure Maps. I am trying to get the elevation of a given point. I used the API call given in this article: <a href=""https://techcommunity.microsoft.com/t5/azure-maps/preview-of-new-azure-maps-elevation-service-rest-apis/m-p/1957321/highlight/false#M47"" rel=""nofollow noreferrer"">https://techcommunity.microsoft.com/t5/azure-maps/preview-of-new-azure-maps-elevation-service-rest-apis/m-p/1957321/highlight/false#M47</a></p>
<p>But I am getting the error below when I debug the &quot;HttpResponseMessage response&quot; in my code.</p>
<pre><code>response = {StatusCode: 404, ReasonPhrase: 'Not Found', Version: 1.1,.....
</code></pre>
<p>my method goes like below (with the subscription key hidden)</p>
<pre><code>private static string GetElevationFromCoordinates(double latitude, double longitude)
{
    string subscriptionKey = &quot;myHiddenSubscriptionKey&quot;;
    string baseUrl = &quot;https://atlas.microsoft.com/elevation/point/json&quot;;

    string url = $&quot;{baseUrl}?api-version=1.0&amp;subscription-key={subscriptionKey}&amp;query={latitude},{longitude}&quot;;

    using (HttpClient client = new HttpClient())
    {
        HttpResponseMessage response = client.GetAsync(url).Result;
        response.EnsureSuccessStatusCode();

        string responseBody = response.Content.ReadAsStringAsync().Result;

        JObject json = JObject.Parse(responseBody);

        double elevation = json[&quot;data&quot;][&quot;elevationInMeters&quot;].Value&lt;double&gt;();
        return $&quot;Elevation: {elevation} meters&quot;;
    }
}
</code></pre>
","2024-10-20 11:04:05","0","Question"
"79104755","79101513","","<p>I sorted it, my issue was I wasn't indexing the dictionary so used enumerate and map, please see my code for updated version. The original code outputted  9 letters instead of 3. What I did was use the enumerate function and map function.</p>
<pre><code>    # Major systems dictionaries
major_system = {
    0: &quot;s&quot;,
    1: &quot;t&quot;,
    2: &quot;n&quot;,
    3: &quot;m&quot;,
    4: &quot;r&quot;,
    5: &quot;l&quot;,
    6: &quot;g&quot;,
    7: &quot;k&quot;,
    8: &quot;f&quot;,
    9: &quot;b&quot;,
}

major_system_2 = {
    0: &quot;oo&quot;,
    1: &quot;a&quot;,
    2: &quot;e&quot;,
    3: &quot;i&quot;,
    4: &quot;o&quot;,
    5: &quot;u&quot;,
    6: &quot;A&quot;,
    7: &quot;E&quot;,
    8: &quot;I&quot;,
    9: &quot;O&quot;,
}

major_system_3 = {
    0: &quot;s&quot;,
    1: &quot;t&quot;,
    2: &quot;n&quot;,
    3: &quot;m&quot;,
    4: &quot;r&quot;,
    5: &quot;l&quot;,
    6: &quot;g&quot;,
    7: &quot;k&quot;,
    8: &quot;f&quot;,
    9: &quot;b&quot;,
}

# I am going to reverse the dictionary

reversed_dict1 = {value: key for key, value in major_system.items()}

# Reversed major_system_2 and major_system_3 dictionaries
reversed_dict2 = {value: key for key, value in major_system_2.items()}
reversed_dict3 = {value: key for key, value in major_system_3.items()}

# # Print the reversed dictionaries
# print(&quot;Reversed major_system:&quot;, reversed_dict1)
# print(&quot;Reversed major_system_2:&quot;, reversed_dict2)
# print(&quot;Reversed major_system_3:&quot;, reversed_dict3)

new_input = input(&quot;Please enter three letters and numbers or a mixture of them? &quot;)
if len(new_input) != 3:
    print(&quot;Error: please enter 3 numbers, letters or a mixture&quot;)
else:
    numbers_output = []
    letters_output = []

    for idx, item in enumerate(new_input):
        if item.isdigit():
            number = int(item)
            if idx == 0:
                letters_output.append(major_system.get(number, &quot;Invalid&quot;))
            elif idx == 1:
                letters_output.append(major_system_2.get(number, &quot;Invalid&quot;))
            elif idx == 2:
                letters_output.append(major_system_3.get(number, &quot;Invalid&quot;))
        elif item.isalpha():
            if idx == 0:
                numbers_output.append(reversed_dict1.get(item, &quot;Invalid&quot;))
            elif idx == 1:
                numbers_output.append(reversed_dict2.get(item, &quot;Invalid&quot;))
            elif idx == 2:
                numbers_output.append(reversed_dict3.get(item, &quot;Invalid&quot;))

        else:
            print(f&quot;Error: '{item}' is not a valid character.&quot;)
            break

    if letters_output:
        print(f'Letters output: {&quot; &quot;.join(letters_output)}')
    if numbers_output:
        print(f'Numbers output: {&quot;, &quot;.join(map(str, numbers_output))}')
</code></pre>
","2024-10-19 11:03:00","0","Answer"
"79103053","79102890","","<p>This can be achieved by using a lambda expression (<code>e -&gt; String.format(...)</code>) instead of a method reference expression (<code>Map.Entry::getValue</code>).</p>
<pre class=""lang-java prettyprint-override""><code>int size = ...
var a = myHashMap.entrySet()
  .stream()
  .sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))
  .map(e -&gt; String.format(&quot;%s %.3f&quot;, e.getKey(), 100.0 * e.getValue() / size))
  .toList();
</code></pre>
<p>Thanks to <a href=""https://stackoverflow.com/users/5133585/sweeper"">@Sweeper</a> for this approach.
It's always obvious once you've figured out the answer.</p>
","2024-10-18 17:13:29","4","Answer"
"79102890","","Convert a HashMap into a List<String> which joins both key and value using String.format with a Java stream","<p>How to do this:</p>
<pre><code>int size = ...
var a = new ArrayList&lt;String&gt;();
for (Map.Entry&lt;String,Integer&gt; e : myHashMap) {      
  a.add( String.format(&quot;%s %.3f&quot;, e.getKey(), 100.0 * e.getValue() / size));
}
</code></pre>
<p>using <code>Stream</code>?</p>
<pre><code>int size = ...
var a = myHashMap.entrySet()     
  .stream()
  .sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))
  .map(Map.Entry::getValue)
  .toList();
</code></pre>
<p>How to both <code>getValue</code> and <code>getKey</code> and combine them using <code>String.format</code> ?</p>
","2024-10-18 16:23:52","2","Question"
"79102249","","langchain with_structured_output Parsing a dictionary of lists of custom classes","<p>I am trying to use Langchain to Extract Structured Output from Unstructured Texts with LLM Tool-Calling.</p>
<p>I have a code that works:</p>
<pre><code>  import os
  from pydantic import BaseModel, Field
  from langchain_openai import ChatOpenAI

  model = ChatOpenAI(model=&quot;gpt-4o-mini-2024-07-18&quot;, temperature=0.0)

  class A(BaseModel):
    a_1: str
    a_2: str
    r: str

  class B(BaseModel):
    a: str
    b_1: str
    b_2: str
    r: str
  
  class C(BaseModel):
    ccc:List[A]
    ppp: List[B]

  structured_llm = model.with_structured_output(C)

  response = structured_llm.invoke(prompt)
</code></pre>
<p>I want to get &quot;a&quot; as a key in ppp , but code (using Dict) below fails:</p>
<pre><code>  import os
  from pydantic import BaseModel, Field
  from langchain_openai import ChatOpenAI

  model = ChatOpenAI(model=&quot;gpt-4o-mini-2024-07-18&quot;, temperature=0.0)

  class A(BaseModel):
    a_1: str
    a_2: str
    r: str

  class B(BaseModel):
    b_1: str
    b_2: str
    r: str
  
  class C(BaseModel):
    ccc:List[A]
    ppp: Dict[str, List[B]]


  structured_llm = model.with_structured_output(C)

  response = structured_llm.invoke(prompt)

</code></pre>
<p>Error :</p>
<pre><code>ValidationError: 1 validation error for C
ppp
  Field required [type=missing, input_value={'ccc': [{'a_1': 'Price',...tant to Battery Life'}]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
</code></pre>
<p>Any clue how to format it as a Dict?</p>
","2024-10-18 13:16:38","2","Question"
"79101513","","Reversing a dictionary","<p>I am trying to reverse  dictionary when you put in 3 letters or words it outputs the associated value for instance if I put in 123 I should get an output of s, e, m. Or if I input kat I should get an output of 711. It</p>
<p>I am slightly lost though as I am just starting out my journey.</p>
<pre><code># Major systems dictionaries
major_system = {
    0: &quot;s, z&quot;,
    1: &quot;t&quot;,
    2: &quot;n&quot;,
    3: &quot;m&quot;,
    4: &quot;r&quot;,
    5: &quot;l&quot;,
    6: &quot;g j&quot;,
    7: &quot;k&quot;,
    8: &quot;f, th&quot;,
    9: &quot;b&quot;,
}

major_system_2 = {
    0: &quot;oo&quot;,
    1: &quot;a&quot;,
    2: &quot;e&quot;,
    3: &quot;i&quot;,
    4: &quot;o&quot;,
    5: &quot;u&quot;,
    6: &quot;A&quot;,
    7: &quot;E&quot;,
    8: &quot;I&quot;,
    9: &quot;O&quot;,
}

major_system_3 = {
    0: &quot;s, z&quot;,
    1: &quot;t&quot;,
    2: &quot;n&quot;,
    3: &quot;m&quot;,
    4: &quot;r&quot;,
    5: &quot;l&quot;,
    6: &quot;g j&quot;,
    7: &quot;k&quot;,
    8: &quot;f, th&quot;,
    9: &quot;b&quot;,
}

# I am going to get user input of three numbers

reversed_major_system_1 = {value.strip(): key for key, values in major_system.items() for value in values.split(&quot;, &quot;)}
reversed_major_system_2 = {value: key for key, value in major_system_2.items()}
reversed_major_system_3 = {value.strip(): key for key, values in major_system_3.items() for value in values.split(&quot;, &quot;)}



user_input = input(&quot;Please enter 3 numbers or letter without spaces &quot;)


if len(user_input) == 3:
    numbers_output = []
    letters_output = []
    valid_input = True

    for item in user_input:

        if item.isdigit():  # Checks if the character is a number
            number = int(item)

            letter1 = major_system.get(number, &quot;Invalid&quot;)
            letter2 = major_system_2.get(number, &quot;Invalid&quot;)
            letter3 = major_system_3.get(number, &quot;Invalid&quot;)
            
            if letter1 != &quot;Invalid&quot; and letter2 != &quot;Invalid&quot; and letter3 != &quot;Invalid&quot;:
                numbers_output.append(item)
                letters_output.append(letter1.split(&quot;, &quot;)[0])
            else:
                valid_input = False

        elif item.isalpha():
            number1 = reversed_major_system_1.get(item, &quot;Invalid&quot;)
            number2 = reversed_major_system_2.get(item, &quot;Invalid&quot;)
            number3 = reversed_major_system_3.get(item, &quot;Invalid&quot;)
            if number1 != &quot;Invalid&quot;:
                numbers_output.append(str(number1))
            elif number2 != &quot;Invalid&quot;:
                numbers_output.append(str(number2))
            elif number3 != &quot;Invalid&quot;:
                numbers_output.append(str(number3))
           

        else:
            valid_input = False
        letters_output.append(item)

    if valid_input:
        print (f'Input {user_input}')
        if numbers_output:
            print(f'Numbers output: {&quot;, &quot;.join(numbers_output)}')
        if len(letters_output) == 3:  # Ensure only three letters are shown
            print(f'Letters output: {&quot;, &quot;.join(letters_output)}')
        elif letters_output:
            print(&quot;Error: More than three letters found.&quot;)
    else:
        print(&quot;Error: One or more inputs do not have a valid mapping.&quot;)
else:
    print(&quot;Error: please enter exactly 3 characters (numbers or letters) without spaces.&quot;)

</code></pre>
<p>I am getting the following output when I type klm</p>
<pre><code>type herePlease enter 3 numbers or letter without spaces klm
Input klm
Numbers output: 7, 5, 3
Letters output: k, l, m
</code></pre>
<p>and get this when outputting 123</p>
<pre><code>Please enter 3 numbers or letter without spaces 123
Input 123
Numbers output: 1, 2, 3
Error: More than three letters found.
</code></pre>
","2024-10-18 09:45:39","0","Question"
"79100083","79100069","","<p>The Python documentation for <a href=""https://docs.python.org/3/library/stdtypes.html#dict"" rel=""nofollow noreferrer"">dict()</a> will tell us everything we have to know.</p>
<p><code>**</code> notation in python, is called kwarg (for keyword argument). So by calling <code>**d2</code> in a function signature you're specifying Python's unpacking operator for dictionaries and are matching a valid constructor for dictionaries. In other words: <code>**d2</code> means &quot;take all additional named arguments to this function and insert them into this parameter as dictionary entries.&quot;. Look <a href=""https://stackoverflow.com/a/21809162/15131463"">here</a> for more examples of <code>**dictionary</code> and what it means in different use-cases</p>
<p>Note that <code>dict(d1, d2)</code> doesn't work as you can't construct a dictionary with two mapping types in python. But (as pointed out by @phihag), <code>dict(**d1, **d2)</code> will work as multiple kwargs args are supported.</p>
<p>TLDR: Answer resides in the documentation and type supporting :)</p>
","2024-10-17 23:10:30","1","Answer"
"79100077","79100069","","<p>The dict constructor does not take two position arguments, therefore <code>dict(d1, d2)</code> is a type error.</p>
<p><code>**</code> passes the values of the dictionary as <a href=""https://docs.python.org/3/glossary.html#term-argument"" rel=""nofollow noreferrer"">keyword arguments</a>. The <a href=""https://docs.python.org/3/library/stdtypes.html#dict"" rel=""nofollow noreferrer""><code>dict</code> constructor</a> allows passing in a dictionary (or iterable) and keyword arguments.</p>
<p>If d2 is <code>{&quot;three&quot;: 3, &quot;four&quot;: 4}</code>, then <code>dict(d1, **d2)</code> is the same thing as <code>dict(d1, three=3, four=4)</code>.</p>
<p>To combine two dicts, this is all extremely complicated. Much easier is simply</p>
<pre><code>d1 | d2
</code></pre>
","2024-10-17 23:06:49","0","Answer"
"79100069","","What does adding ** do?","<p>I want to add 2 dictionaries together to a 3rd dictionary in python, but using <code>d3 = dict(d1,d2)</code> returns an error because it expected one argument but got 2. I looked it up online and saw that <code>d3 = dict(d1,**d2)</code> fixes this. What does the <code>**</code> do?</p>
<pre><code>d1 = {1:one,2:two}
d2 = {3:three,4:four}
</code></pre>
<p>I tried:</p>
<pre><code>d3 = dict(d1,d2)
</code></pre>
<p>to add the dictionaries together which gave an error. I then tried:</p>
<pre><code>d3 = dict(d1,**d2)
</code></pre>
<p>which worked fine. What did the <code>**</code> change?</p>
","2024-10-17 22:58:36","0","Question"
"79097897","79097761","","<p>One option is to use <code>itertools.groupby</code>.</p>
<pre><code>import itertools

....

# groupby needs sorted data
dict_list.sort(key=lambda x: x[&quot;UserName&quot;])

new_data = []
# Group by user name and email
for a,b in itertools.groupby(dict_list, key=lambda x: (x[&quot;UserName&quot;], x[&quot;Email&quot;])):
    user, email = a
    # Use list comprehension to join all the Locations
    new_data.append({&quot;UserName&quot;: user, &quot;Email&quot;: email, &quot;Location&quot;: [x[&quot;Location&quot;] for x in b]})
</code></pre>
<p>Using some randomly generated data, this produces</p>
<pre class=""lang-none prettyprint-override""><code>[
{'UserName': 'user1', 'Email': 'user1@example.com', 'Location': ['Los Angeles', 'Chicago', 'Philadelphia']}
{'UserName': 'user10', 'Email': 'user10@example.com', 'Location': ['Chicago']}
{'UserName': 'user2', 'Email': 'user2@example.com', 'Location': ['New York', 'Dallas', 'Houston']}
{'UserName': 'user3', 'Email': 'user3@example.com', 'Location': ['New York', 'San Jose']}
{'UserName': 'user4', 'Email': 'user4@example.com', 'Location': ['San Antonio', 'Dallas']}
{'UserName': 'user5', 'Email': 'user5@example.com', 'Location': ['Phoenix']}
{'UserName': 'user6', 'Email': 'user6@example.com', 'Location': ['Chicago', 'Los Angeles']}
{'UserName': 'user7', 'Email': 'user7@example.com', 'Location': ['San Jose', 'Philadelphia']}
{'UserName': 'user9', 'Email': 'user9@example.com', 'Location': ['Houston', 'Los Angeles']}
]
</code></pre>
","2024-10-17 11:38:53","0","Answer"
"79097761","","Creating an excel from a dict while group values","<p>(I'm very new to coding)
I'm trying to create an excel from a list of dictionaries, the excel should contain</p>
<p>name, email, location.</p>
<p>the dictionary has duplicates of names and emails but locations are one time only used.</p>
<p>i want to build an excel where the name and email have their own row but all the location where the names are used are assigned to a single name</p>
<p>the dict items look like this, and i have ~2000 of them.</p>
<pre><code>dict_list=\[{'UserName': 'name', 'Email': 'email@email.com', 'location': 'x'}
</code></pre>
<p>end result should be</p>
<pre><code>name | email@email.com | x ,y,c |
</code></pre>
<p>how should i build a list/dict that i can print to excel.</p>
<p>I've tried playing around with loop in a loop to check all the values against all the values of the second empty list, so if the entry doesn't exist, it copies it from the first one.</p>
<pre><code>filtered_List = []
dict_list=[{'UserName': 'name', 'Email': 'email@email.com', 'location': 'x'}]
for user in dict_list:
    for filtered_users in filtered_List:
        if user['UserName'] == filtered_users['UserName']:
            filtered_users['location'].append(user['location'])
            continue
        else:
            filtered_List.append(user)
            break
</code></pre>
","2024-10-17 11:01:21","0","Question"
"79095643","79095560","","<p>First remove null values:</p>
<pre><code>&gt;&gt;&gt; input_ = {(0, 0): [1, 2], (0, 1): [3, 4]}
&gt;&gt;&gt; d = {k: v for k, v in input_.items() if v}
</code></pre>
<p>Then just zip up elements from the <a href=""https://docs.python.org/3/library/itertools.html#itertools.product"" rel=""nofollow noreferrer"">product</a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; for p in product(*d.values()):
...     print(dict(zip(d, p)))
... 
{(0, 0): 1, (0, 1): 3}
{(0, 0): 1, (0, 1): 4}
{(0, 0): 2, (0, 1): 3}
{(0, 0): 2, (0, 1): 4}
</code></pre>
","2024-10-16 19:58:32","1","Answer"
"79095560","","Technique for traveling through a dictionary","<p>Given a dictionary where the keys hold coordinates and the values hold a list of possible values, how to output a list of <strong>all</strong> the dictionaries that can be created with a single value taken from each list?</p>
<pre><code>input = {(0, 0): [1, 2], (0, 1): [3, 4]}

output = [{(0, 0): 1, (0, 1): 3}, {(0, 0): 1, (0, 1): 4}, {(0, 0): 2, (0, 1): 3}, {(0, 0): 2, (0, 1): 4}]
</code></pre>
<p>Note: The method must be able to handle a dictionary with lists of unequal size and <code>None</code> values (the case where values are <code>None</code> can be skipped), e.g.</p>
<pre><code>{(0, 0): [1, 2], (0, 1): [3, 4], (1, 0): [5, 6, 7], (1, 1): None}
</code></pre>
<p>Sketch of loop | maybe not the right approach?</p>
<pre><code>def loop(input):
    &quot;&quot;&quot;return a lits of dictionaries that store every coordinate/value pair among the dictionary of candidate values&quot;&quot;&quot;
    # initialize a list to hold all the dictionaries
    lst = []
    # initialize dictionary to hold coordinate/value pairs
    dct = {}
    for key, values in input.items(): 
        for v in values:
            # what can I do here? 
            if key not in dct:
                # check dct to enforce uniqueness?
                kv = {key: v}
                dct.update(kv)
    if dct not in lst:
        lst.append(dct)
    return lst
loop(input)
# [{(0, 0): 1, (0, 1): 3}, {(0, 0): 1, (0, 1): 4}, {(0, 0): 2, (0, 1): 3}, {(0, 0): 2, (0, 1): 4}]
</code></pre>
<p>Also, as I travel through the dictionary, how do I make sure that I pick all combinations? How can I enforce an order?</p>
","2024-10-16 19:27:14","0","Question"
"79093939","79093260","","<p><code>filter</code> can filter facts, but can't extract keys. To extract some specific keys you can use pipe with <code>jq</code>, for example:</p>
<pre><code>ansible all -i ostts5istrp01, -m setup -a &quot;filter=ansible_bond0&quot; | jq -r '.ansible_facts.ansible_bond0.active'
</code></pre>
<p>or</p>
<pre><code>ansible all -i ostts5istrp01, -m setup -a &quot;filter=ansible_bond0&quot; | jq -r '.ansible_facts.ansible_bond0.features.esp_hw_offload'
</code></pre>
","2024-10-16 12:03:25","2","Answer"
"79093260","","Ansible - understanding how to display certain parts of the gather facts","<p>I'm struggling to understand how to display only a particular fact from Ansible gather facts data...or how to drill down in dictionary items just to display one item</p>
<p>As an example, I only want this fact &quot;ansible_default_ipv4 . address&quot; to appear at the output:</p>
<pre><code>&quot;address&quot;: &quot;172.22.27.74&quot;
</code></pre>
<p>I tried the following but didn't get the results:</p>
<pre><code>ansible all -i ostts5istrp01, -m setup -a &quot;filter=ansible_default_ipv4.address&quot;
</code></pre>
<p>I can only get the full dictionary when using <code>filter= ansible_default_ipv4</code></p>
<p>So how can I drill down on facts and subfacts to display only one line?</p>
<p>Examples, I would like to extract:</p>
<pre><code>ansible_facts.ansible_bond0.active
</code></pre>
<p>or</p>
<pre><code>ansible_facts.ansible_bond0.features.esp_hw_offload
</code></pre>
<p>How can I do that?</p>
","2024-10-16 08:56:07","2","Question"
"79078016","79077920","","<p>You could take a reference to the items of <code>array1</code> and return items of <code>array2</code> only if a reference to <code>array1</code> exists.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const
    array1 = [['AB2C', 'Red', 113], ['BE4F', 'Green', 164], ['AE3G', 'Blue', 143]],
    array2 = [[143, 'FabricB2', 'W5'], [189, 'FabricC9', 'W4'], [113, 'FabricA3', ' W5'], [143, 'FabricD1', 'W6']],
    references = Object.fromEntries(array1.map(a =&gt; [a[2], a])),
    result = array2.reduce((r, a) =&gt; {
        if (references[a[0]]) r.push([...a, ...references[a[0]]])
        return r;
    }, []);

console.log(result);</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console-wrapper { max-height: 100% !important; top: 0; }</code></pre>
</div>
</div>
</p>
","2024-10-11 11:26:37","0","Answer"
"79077972","79077920","","<p>It's easier to use <code>reduce</code></p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const array1 = [
  ['AB2C', 'Red', 113],
  ['BE4F', 'Green', 164],
  ['AE3G', 'Blue', 143],
]

const array2 = [
  [143, 'FabricB2', 'W5'],
  [189, 'FabricC9', 'W4'],
  [113, 'FabricA3', ' W5'],
  [143, 'FabricD1', 'W6']
];


const result = array2.reduce((result, current) =&gt; {
  const other = array1.find(b =&gt; current[0] === b[2])
  if (other) {
    result.push([...current, ...other])
  }
  return result
}, [])

console.log(result)</code></pre>
</div>
</div>
</p>
","2024-10-11 11:13:37","0","Answer"
"79077968","79077920","","<pre><code>//You can try this :
const resultArr = array1.flatMap(x =&gt; array2
.filter(y=&gt;y[0] === x[2])
.map(y =&gt; [...y,...x])
);
</code></pre>
","2024-10-11 11:12:46","1","Answer"
"79077920","","JavaScript 2D arrays and returning matching rows","<p>I have 2 arrays, each is like a database table row set.</p>
<pre><code>array1 = [
['AB2C', 'Red', 113],
['BE4F', 'Green', 164],
['AE3G', 'Blue', 143],
]

array2 = [
[143, 'FabricB2', 'W5'],
[189, 'FabricC9', 'W4'],
[113, 'FabricA3', ' W5'],
[143, 'FabricD1', 'W6']];
</code></pre>
<p>I want to do a join and find matching rows, returning the matched rows in array2 along with the matched row in array1. The returned matching array should look like this:</p>
<pre><code>[143, 'FabricB2', 'W5',  'AE3G', 'Blue', 143],
[113, 'FabricA3', ' W5', 'AB2C', 'Red', 113],
[143, 'FabricD1', 'W6',  'AE3G', 'Blue', 143]
</code></pre>
<p>I tried to use JavaScript methods map(), filter(), flatMap(), spread operator but can't get the result.
Anyone can help me with this? With the shortest code? The one I have below does not work.</p>
<pre><code>function testArrayFunction() {

array1 = [
['AB2C', 'Red', 113],
['BE4F', 'Green', 164],
['AE3G', 'Blue', 143],

];

array2 = [
[143, 'FabricB2', 'W5'],
[189, 'FabricC9', 'W4'],
[113, 'FabricA3', ' W5'],
[143, 'FabricD1', 'W6']];

var array1Element = 2;
var array2Element = 0;

var res = array1
.map(x =&gt; [  ...  array2
.filter(    y =&gt; y[array2Element] === x[array1Element ] )  ,...x ] );

console.log(res);

}
</code></pre>
<p>Does not give the expected result which is this</p>
<pre><code>[143, 'FabricB2', 'W5', 'AE3G', 'Blue', 143],
[113, 'FabricA3', ' W5', 'AB2C', 'Red', 113],
[143, 'FabricD1', 'W6',  'AE3G', 'Blue', 143]
</code></pre>
<p>Gives this which is not what I want</p>
<pre><code>Info    
[ [ [ 113, 'FabricA3', ' W5' ], 'AB2C', 'Red', 113 ],
[ 'BE4F', 'Green', 164 ],
[ [ 143, 'FabricB2', 'W5' ],
[ 143, 'FabricD1', 'W6' ], 'AE3G', 'Blue', 143 ] ]
</code></pre>
","2024-10-11 11:00:11","-3","Question"
"79076396","79076312","","<p>If you merely try to test if some dictionary passes given the <code>verify_dict</code>:</p>
<pre><code>verify_example = {'id':123, 'equip_150': 'From Template', 'equip_100': 'Unique'}
valid_example = ['Not', 'Unique']

def test_dict(d, v: dict, valid: list) -&gt; bool:
    return d['id'] == v['id'] and v[f'equip_{d[&quot;equip_id&quot;]}'] in valid


patch1_dict = {'id': 123, 'equip_id': 100}
patch2_dict = {'id': 123, 'equip_id': 150}
print(test_dict(patch1_dict, verify_example, valid_example))
print(test_dict(patch2_dict, verify_example, valid_example))
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>True
False
</code></pre>
<p>This works because for:</p>
<pre><code>d['id'] == v['id'] and v[f'equip_{d[&quot;equip_id&quot;]}'] in valid
</code></pre>
<ul>
<li>the IDs have to match <em>and</em></li>
<li><code>f'equip_{d[&quot;equip_id&quot;]}'</code> constructs the needed key like <code>equip_150</code> if <code>d[&quot;equip_id&quot;]</code> is 150</li>
<li><code>v[equip_&lt;n&gt;]</code> has to be in the list of valid strings</li>
</ul>
","2024-10-10 23:07:50","1","Answer"
"79076366","79076312","","<p>There's no need for a loop. You need to construct the appropriate key in <code>verify_dict</code> from the value of <code>equip_id</code> in <code>patch_dict</code>.</p>
<pre><code>def verify(patch_dict, verify_dict, valid_str):
    equip_key = f'equip_{patch_dict[&quot;equip_id&quot;]}'
    return patch_dict['id'] == verify_dict['id'] and verify_dict.get(equip_key) in valid_str

valid_str = ['Not', 'Unique']
patch1_dict = {'id': 123, 'equip_id': 100}
patch2_dict = {'id': 123, 'equip_id': 150}
verify_dict = {'id':123, 'equip_150': 'From Template', 'equip_100': 'Unique'}

print(verify(patch1_dict, verify_dict, valid_str)) # True
print(verify(patch2_dict, verify_dict, valid_str)) # False
</code></pre>
","2024-10-10 22:51:54","2","Answer"
"79076312","","Value from one dictionary matches key of another dictionary","<p>I want to patch a record, but I need to verify whether it will update.
Otherwise, I get an HTTP 403 error.</p>
<p>How do I return the patch dictionary when the verification is true?</p>
<p>Verification has two parts:</p>
<ol>
<li><code>patch_dict['equip_id]</code> is in <code>verify_dict.keys()</code></li>
<li><code>verify_dict</code> value has a <code>valid_str</code></li>
</ol>
<pre><code>valid_str = ['Not', 'Unique']
patch1_dict = {'id': 123, 'equip_id': 100}
patch2_dict = {'id': 123, 'equip_id': 150}
verify_dict = {'id':123, 'equip_150': 'From Template', 'equip_100': 'Unique'}
</code></pre>
<p><code>patch1_dict</code> passes verification, but
<code>patch2_dict</code> will not.</p>
<p>My attempt of creating the dictionary comprehension:</p>
<pre><code>{k:v for (k, v) in patch1_dict.items() if v in verify_dict for sub_v in valid_str}
</code></pre>
","2024-10-10 22:20:55","-3","Question"
"79071720","79068070","","<p>This works for me.  However, there are some caveats.  This will NOT work if the JSON contains any strings with single quotes.  Fixing that, unfortunately, leads to a maze of twisty passages.</p>
<pre><code>import sys
import json
import subprocess

if len(sys.argv) &gt; 1:
    x = json.loads(sys.argv[1])
    print('SUBPROCESS')
    print(sys.argv[1],flush=True)
    print(x)
else:
    s = json.load(open('x.json'))
    cmd = [ 'ssh', 'timr@localhost', 'python', __file__, &quot;'&quot;+json.dumps(s)+&quot;'&quot; ]
    print(&quot;MAIN&quot;)
    subprocess.run(cmd)
</code></pre>
<p>Output:</p>
<pre><code>MAIN
SUBPROCESS
{&quot;id&quot;: &quot;123ab&quot;, &quot;operation&quot;: &quot;foo&quot;, &quot;metadata&quot;: {&quot;source&quot;: &quot;ddb&quot;, &quot;destination&quot;: &quot;s3&quot;}, &quot;data&quot;: &quot;02-02-2024&quot;}
{'id': '123ab', 'operation': 'foo', 'metadata': {'source': 'ddb', 'destination': 's3'}, 'data': '02-02-2024'}
</code></pre>
<p>If you DO have more complicated input, you can feed your text in via stdin:</p>
<pre><code>import sys
import json
import subprocess

if len(sys.argv) &gt; 1:
    print('SUBPROCESS')
    x = sys.stdin.read()
    print('file',x)
    y = json.loads(x)
    print('json',y)
else:
    s = json.load(open('x.json'))
    cmd = [ 'ssh', 'timr@localhost', 'python', __file__, 'x']
    print(&quot;MAIN&quot;)
    subprocess.run(cmd,input=json.dumps(s).encode())
</code></pre>
<p>Output:</p>
<pre><code>SUBPROCESS
file {&quot;id&quot;: &quot;123ab&quot;, &quot;operation&quot;: &quot;foo&quot;, &quot;metadata&quot;: {&quot;source&quot;: &quot;ddb&quot;, &quot;destination&quot;: &quot;s3&quot;}, &quot;data&quot;: &quot;02-02-2024&quot;}
json {'id': '123ab', 'operation': 'foo', 'metadata': {'source': 'ddb', 'destination': 's3'}, 'data': '02-02-2024'}
MAIN
</code></pre>
","2024-10-09 19:05:31","2","Answer"
"79068070","","How to have a Local Python Script Send a Dictionary via SSH to a Remote Python Script","<h2>In theory</h2>
<p>My goal is to have a python script (&quot;s1.py&quot;), which is running locally, initiate a second python script (&quot;s2.py&quot;) via ssh on a remote machine. As part of starting s2.py, s1.py would deliver a python dictionary which s2.py would read into memory and subsequently refer to as part of the work it has to do. The dictionary comes from a local file which I want to have remain locally for security reasons, hence the idea of sending it over the wire and into memory (I could, for example, copy the file to the remote machine to a tmpfs space, read it and immediately shred the tmpfs; this would all happen pretty quickly but I still see it as bad practice if I can send the data without having to send the file).</p>
<p>The approach I've been taking is based on the assumption that I can pass this dictionary, via ssh, as a python object from s1.py to s2.py in the form of a command line item, as well as some other command line flags that are required. Something like:</p>
<pre><code>ssh user@remote python3 s2.py python-dict-obj flag1 flag2
</code></pre>
<p>S2.py would then read in the object (preferably as a dictionary) in some way or other, e.g.</p>
<pre><code>useful_dict = sys.argv[1], var1_flag1=sys.argv[2], var2_flag2=sys.argv[2]
</code></pre>
<h2>In practice</h2>
<p>As I mentioned, the dictionary comes from a local file which can equally be stored in yaml or json (yaml is preferable). Therefore s1.py can create the dictionary using standard python modules:</p>
<pre><code>with open(&quot;local_file&quot;, &quot;r&quot;, encoding=&quot;utf-8&quot;) as read_file:
    dict_from_file = json.load(read_file)

with open(&quot;local_file&quot;, 'r') as stream:
    dict_from_file = yaml.safe_load(stream)
</code></pre>
<p>S1.py then attempts, via ssh, to initiate s2.py and send the dictionary, for example using subprocess module:</p>
<pre><code>subprocess.run(['ssh', 'user@remote', 'python3', '/user/scripts/s2.py', 'dict_from_file', 'flag1', 'flag2'])
</code></pre>
<h2>Problems / Solutions</h2>
<p>Does the problem arise because I'm trying to send a dictionary over ssh? Can &quot;dict_from_file&quot; survive as a python object passing through the subprocess module and being sent to the environment/shell of the remote machine? Same when using Paramiko or Fabric?</p>
<p>To date, anything I have tried seems to have s2.py rejecting the data. This would seem to suggest that it may simply not be possible to pass a dictionary in the way I want to. To be fair, I haven't tried anything more adventurous than having s2.py accept inputs at the command line using the sys module so perhaps there is a way to ingest the data in a different way.</p>
<p>Even if it's not possible to transmit an actual dictionary object over ssh, surely the raw data can be sent in json format? A json string (json.dumps?) perhaps although I don't have experience with this? Then, presumbly s2.py can read the string and reconstruct a dictionary?</p>
<p>Or, is my approch just too naive? Do I need to explore sockets/pipes/multiprocesses to achieve what I'm trying to do. On a basic level I'm just trying to perform some simple (I think) data transmission so I'm hoping that there's a brief, elegant way of doing this. Any and all suggestions are welcome.</p>
","2024-10-08 23:39:46","0","Question"
"79067393","79067338","","<p>You can try using reflection, if those fields are class fields in the same class as the <code>Get</code> method.</p>
<p>Example implementation:</p>
<pre class=""lang-cs prettyprint-override""><code>public class TestArea
{
    public Dictionary&lt;int, Type1&gt; type1 = new Dictionary&lt;int, Type1&gt; { { 1, new Type1() } };
    public Dictionary&lt;int, Type2&gt; type2 = new Dictionary&lt;int, Type2&gt; { { 1, new Type2() } };
    
    public T Get&lt;T&gt;(int ID)
    {
        var dictionaryType = typeof(Dictionary&lt;int, T&gt;);

        var dictionaryProperty = GetType()
            .GetFields()
            .FirstOrDefault(x =&gt; x.FieldType == dictionaryType);

        if (dictionaryProperty is null) throw new Exception(&quot;No dictionary found!&quot;);

        var dictionary = (Dictionary&lt;int, T&gt;)dictionaryProperty.GetValue(this);

        return dictionary[ID];
    }
}
</code></pre>
","2024-10-08 18:41:49","2","Answer"
"79067338","","Return a generic type from various lists","<p>I'm not sure if this is possible or not but I have a couple of dictionaries of different value types.</p>
<pre><code>public Dictionary&lt;int, Type1&gt; type1;
public Dictionary&lt;int, Type2&gt; type2;
</code></pre>
<p>And I want to be able to use generics to grab an object of a specific type.</p>
<pre><code>public T Get&lt;T&gt;(int ID)
{
    // somehow find the correct dictionary and return its value
}
</code></pre>
<p>I could use a switch statement but is there a smarter way?</p>
","2024-10-08 18:27:42","0","Question"
"79054820","79054792","","<p>Yes, you could do this with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.IntervalIndex.html"" rel=""nofollow noreferrer""><code>IntervalIndex</code></a>:</p>
<pre><code>dic = {(0, 2): 'A',
       (2, 3): 'B',
      }
other = 'C'

bins = pd.IntervalIndex.from_tuples(dic)
labels = list(dic.values())

df['newCol'] = (pd.Series(labels, index=bins)
                  .reindex(df['col1']).fillna(other)
                  .tolist()
               )
</code></pre>
<p>But given your example, it seems more straightforward to go with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.cut.html"" rel=""nofollow noreferrer""><code>cut</code></a>:</p>
<pre><code>df['newCol'] = pd.cut(df['col1'], bins=[0, 2, 3, np.inf], labels=['A', 'B', 'C'])
</code></pre>
<p>Output:</p>
<pre><code>   col1 newCol
0     1      A
1     2      A
2     2      A
3     3      B
4     4      C
5     5      C
6     5      C
7     6      C
8     7      C
9     8      C
</code></pre>
<p>If you insist on your original dictionary format, you could convert using:</p>
<pre><code>dic = {'0 &lt;= 2' : &quot;A&quot;,
       '2 &lt;= 3' : &quot;B&quot;,
       'Else' : &quot;C&quot;
}

dic2 = {tuple(map(int, k.split(' &lt;= '))): v for k, v in dic.items()
        if k != 'Else'}
# {(0, 2): 'A', (2, 3): 'B'}
other = dic['Else']
</code></pre>
","2024-10-04 14:57:39","1","Answer"
"79054792","","Apply pandas dictionary with gt/lt conditions as keys","<p>I have created the following pandas dataframe:</p>
<pre><code>ds = {'col1':[1,2,2,3,4,5,5,6,7,8]}

df = pd.DataFrame(data=ds)
</code></pre>
<p>The dataframe looks like this:</p>
<pre><code>print(df)

   col1
0     1
1     2
2     2
3     3
4     4
5     5
6     5
7     6
8     7
9     8
</code></pre>
<p>I have then created a new field, called <code>newCol</code>, which has been defined as follows:</p>
<pre><code>def criteria(row):
    if((row['col1'] &gt; 0) &amp; (row['col1'] &lt;= 2)):
        return &quot;A&quot;
    elif((row['col1'] &gt; 2) &amp; (row['col1'] &lt;= 3)):
        return &quot;B&quot;
    else:
        return &quot;C&quot;
    
df['newCol'] = df.apply(criteria, axis=1)
</code></pre>
<p>The new dataframe looks like this:</p>
<pre><code>print(df)

   col1 newCol
0     1      A
1     2      A
2     2      A
3     3      B
4     4      C
5     5      C
6     5      C
7     6      C
8     7      C
9     8      C
</code></pre>
<p>Is there a possibility to create a dictionary like this:</p>
<pre><code>dict = {
        
        '0 &lt;= 2' : &quot;A&quot;,
        '2 &lt;= 3' : &quot;B&quot;,
        'Else' : &quot;C&quot;

        }
</code></pre>
<p>And then apply it to the dataframe:</p>
<pre><code>df['newCol'] = df['col1'].map(dict)
</code></pre>
<p>?</p>
<p>Can anyone help me please?</p>
","2024-10-04 14:47:44","2","Question"
"79054223","79054022","","<p>In my opinion, when you first read the data and get all_eq_data, it is the dictionary for all the data, with keys such as 'type', 'metadata', 'features', 'bbox' and so on. It does have the key-value pairs in this dictionary. The key-value pairs in this structure is like ('type', a string), ('metadata', a dictionary), ('bbox', a list), ('features', a list)...
So the value of a key not only could be a number, but also could be a string, a list, or a dictionary.</p>
<p>Take the key 'features' as example: when you use all_eq_data['features'] to get all_eq_dicts, the all_eq_dicts is actually the value of the key 'features', which is a list.</p>
<p>You can also try on some other keys to get to understand that. For example, all_eq_data['type'] would receive a class string, all_eq_data['metadata'] would receive a class dictionary...</p>
","2024-10-04 12:20:14","0","Answer"
"79054022","","Dictionaries coming from JSON files","<p>I am trying to understand the structure of a data coming from a json file ( not original GeoJSON) .</p>
<p>The data source is (<a href=""https://earthquake.usgs.gov/earthquakes/feed/v1.0/geojson.php"" rel=""nofollow noreferrer"">https://earthquake.usgs.gov/earthquakes/feed/v1.0/geojson.php</a>)
After uploading the file I see it like this
<a href=""https://i.sstatic.net/7o22V7Je.png"" rel=""nofollow noreferrer"">[snapshot of a json file content in a vs code terminal][1]</a></p>
<p>After reading the file I examine its type</p>
<pre><code>    filename = '1.0_month.json'
    with open (filename)as f:
        all_eq_data = json.load(f)
    print ( type(all_eq_data))
</code></pre>
<p>and it returns class &lt;'dict'&gt;</p>
<p>vs code shows all_eq_data as the consequence of dictionaries {} separated by comma:
{smth},{smth},{...},.....
<a href=""https://i.sstatic.net/gw3xuguI.png"" rel=""nofollow noreferrer"">snapshot of all_eq_data in the terminal</a></p>
<p>So, it doesn't look like typical structure of dictionaries {key:value}, it resembles a list of dictionaries: {key:value},{key:value}......</p>
<p>Moreover, if I ask</p>
<p><code>    all_eq_data.keys())</code></p>
<p>the IDE returns list of keys</p>
<p>dict_keys(['type', 'metadata', 'features', 'bbox']) that are keys of multiple dictionaries that all_eq_data is comprised of.<br />
Then, I put</p>
<p><code>    all_eq_dicts = all_eq_data\['features'\]</code></p>
<p>and receive a class&lt;list&gt; of dictionaries there entries are the values of the 'feature' keys from all the dictionaries that are in all_eq_data.</p>
<p>Could you please explain the structure of this json file ( why it is considered to be a class&lt;dict&gt; while there are no key-value pairs in its structure?  Also, why when asking all_eq_dicts = all_eq_data['features']</p>
<p>I receive a list of a values from every dictionary in the all_eq_data dictionary, but not the single value as it usually happens with this kind of request to a dictionary object?     [1]: <a href=""https://i.sstatic.net/V0NJlW9t.png"" rel=""nofollow noreferrer"">https://i.sstatic.net/V0NJlW9t.png</a>   [2]: <a href=""https://i.sstatic.net/f5tpiVF6.png"" rel=""nofollow noreferrer"">https://i.sstatic.net/f5tpiVF6.png</a></p>
","2024-10-04 11:20:08","-1","Question"
"79052811","79050907","","<p>What if you put both your &quot;Key&quot; and &quot;Value&quot; as the <code>V</code> of a lookup map and use the hash value of your &quot;Key&quot; as a handle for lookup,</p>
<p>that way you can store it in a <code>BTreeMap</code>, and only perform hashing once, which save some computation that might be expensive for large struct.</p>
<p>if you wish to use the large struct somewhere else in your program, you can simply use <code>Rc&lt;RefCell&lt;_&gt;&gt;</code> or <code>Arc&lt;Mutex&lt;_&gt;&gt;</code> as <code>K</code> in <code>LookUpTable</code></p>
<h3>Example</h3>
<pre class=""lang-rust prettyprint-override""><code>#[derive(Hash, Eq, PartialEq, Debug)]
struct Cat {
    pub name: String,
}

use std::collections::BTreeMap;
use std::hash::{DefaultHasher, Hash, Hasher};
use std::marker::PhantomData;
#[derive(Debug)]
pub struct LookUpTable&lt;K: Hash, V&gt; {
    map: BTreeMap&lt;u64, (K, V)&gt;,
    //            ^     ^  ^
    //            |     |  L hold the value
    //            |     L--- hold the key
    //            L--------- hold the handle for looking up
}

impl&lt;K: Hash, V&gt; LookUpTable&lt;K, V&gt; {
    pub fn new() -&gt; Self {
        LookUpTable {
            map: Default::default(),
        }
    }
    pub fn insert(&amp;mut self, key: K, value: V) -&gt; u64 {
        // get the hash value of K(the large struct)
        let handle = {
            let mut s = DefaultHasher::new();
            key.hash(&amp;mut s);
            s.finish()
        };

        // insertion
        self.map.insert(handle, (key, value));

        // return the handle for later use
        handle
    }
    pub fn update(&amp;mut self, handle: u64, new_v: V) {
        self.map.get_mut(&amp;handle).unwrap().1 = new_v;
    }

    pub fn get(&amp;self, handle: u64) -&gt; &amp;(K, V) {
        self.map.get(&amp;handle).unwrap()
    }

    pub fn get_mut(&amp;mut self, handle: u64) -&gt; &amp;mut (K, V) {
        self.map.get_mut(&amp;handle).unwrap()
    }
}

pub fn main() {
    let mut table: LookUpTable&lt;Cat, String&gt; = LookUpTable::new();

    // create a new Cat instance
    let cat_1: Cat = Cat {
        name: &quot;Cat 1&quot;.to_string(),
    };

    // --------------------------------------------------
    println!(&quot;\n\n{}&quot;, &quot;-&quot;.repeat(50));
    println!(&quot;Empty Table&quot;);
    println!(&quot;{:#?}&quot;, table);

    // --------------------------------------------------
    println!(&quot;\n\n{}&quot;, &quot;-&quot;.repeat(50));
    println!(&quot;Insertion&quot;);
    // insert the Cat into the table and get a handle back
    let cat_1_handle: u64 = table.insert(cat_1, &quot;This is a value of cat 1.&quot;.to_string());
    println!(&quot;{:#?}&quot;, table);

    // --------------------------------------------------
    println!(&quot;\n\n{}&quot;, &quot;-&quot;.repeat(50));
    println!(&quot;get()&quot;);
    {
        let (cat_1, value_1): &amp;(Cat, String) = table.get(cat_1_handle);
        println!(&quot;cat 1   : {:?}&quot;, cat_1);
        println!(&quot;value 1 : {:?}&quot;, value_1);
    }

    // --------------------------------------------------
    println!(&quot;\n\n{}&quot;, &quot;-&quot;.repeat(50));
    println!(&quot;update()&quot;);
    table.update(cat_1_handle, &quot;This is a new value of cat 1.&quot;.to_string());
    println!(&quot;{:#?}&quot;, table);

    // --------------------------------------------------
    println!(&quot;\n\n{}&quot;, &quot;-&quot;.repeat(50));
    println!(&quot;get_mut()&quot;);
    {
        let (cat_1, value_1): &amp;mut (Cat, String) = table.get_mut(cat_1_handle);
        cat_1.name.push_str(&quot;: Mister Whisker&quot;);
        value_1.push_str(&quot; Appended string at the end.&quot;);
    }

    println!(&quot;{:#?}&quot;, table);
}
</code></pre>
<h3>Output</h3>
<pre class=""lang-rust prettyprint-override""><code>--------------------------------------------------
Empty Table
LookUpTable {
    map: {},
}


--------------------------------------------------
Insertion
LookUpTable {
    map: {
        16159386690693546360: (
            Cat {
                name: &quot;Cat 1&quot;,
            },
            &quot;This is a value of cat 1.&quot;,
        ),
    },
}


--------------------------------------------------
get()
cat 1   : Cat { name: &quot;Cat 1&quot; }
value 1 : &quot;This is a value of cat 1.&quot;


--------------------------------------------------
update()
LookUpTable {
    map: {
        16159386690693546360: (
            Cat {
                name: &quot;Cat 1&quot;,
            },
            &quot;This is a new value of cat 1.&quot;,
        ),
    },
}


--------------------------------------------------
get_mut()
LookUpTable {
    map: {
        16159386690693546360: (
            Cat {
                name: &quot;Cat 1: Mister Whisker&quot;,
            },
            &quot;This is a new value of cat 1. Appended string at the end.&quot;,
        ),
    },
}
</code></pre>
<h4>Extra</h4>
<p>Since the handle is just <code>u64</code>, to avoid misuse of it you can wrap it around another struct like this:</p>
<pre class=""lang-rust prettyprint-override""><code>pub struct LookUpTableHandle&lt;T&gt; {
    _handle: u64,
    _p: PhantomData&lt;T&gt;,
}

impl&lt;K: Hash, V&gt; LookUpTable&lt;K,V&gt; {
    pub fn insert_key_value(&amp;mut self, key: K, value: V) -&gt; LookUpTableHandle&lt;Self&gt; {
        let _handle = {
            let mut s = DefaultHasher::new();
            key.hash(&amp;mut s);
            s.finish()
        };

        self.map.insert(_handle, (key, value));

        LookUpTableHandle { _handle, _p: PhantomData::default() }
    }
    pub fn get_by_handle(&amp;mut self, handle: &amp;LookUpTableHandle&lt;Self&gt;) -&gt; &amp;(K,V) {
        self.map.get(&amp;handle._handle).unwrap()
    }
}

// usage
{
    let cat_2 = Cat{name: &quot;Cat 2&quot;.to_string()};
    let handle: LookUpTableHandle&lt;LookUpTable&lt;Cat, String&gt;&gt; = table.insert_key_value(cat_2, &quot;Some String&quot;.to_string());
}
</code></pre>
","2024-10-04 04:14:33","-1","Answer"
"79050907","","Trivial ""lookup"" type for struct","<p>I have an expensive struct that I want to use as a key sometimes:</p>
<pre class=""lang-rs prettyprint-override""><code>#[derive(Hash, Eq, PartialEq)]
struct Cat {
    name: String,
    image: Image,
}
</code></pre>
<p>How can I define a simple &quot;lookup&quot; type for this expensive struct - i.e. a struct of references to each field type of the key struct?</p>
<p>This would be useful so I can have <code>HashMap&lt;Cat, V&gt;</code> and <code>find(CatRef) -&gt; &amp;V</code>. <code>find(&amp;Cat)</code> is much worse, e.g. it would require instantiating a <code>String</code> even if there is a free <code>&amp;'static str</code> available.</p>
<p>I could type it out myself like so, but I risk the &quot;owning&quot; type getting out of sync with the &quot;reference&quot; type:</p>
<pre class=""lang-rs prettyprint-override""><code>struct CatRef&lt;'a&gt; {
    name: &amp;'a str,
    image: &amp;'a Image,
}

// Implement Hash, etc. consistently with Cat
</code></pre>
","2024-10-03 14:04:13","1","Question"
"79044761","79044704","","<pre><code>user_data = [{'a': '1', 'b': '3'}, {'a': '2', 'b': '4'}, {'a': '5', 'b': '1'}]
available_times_array = ['12:00', '12:10', '12:20']

for data, time in zip(user_data, available_times_array):
    data['c'] = time

print(user_data)
</code></pre>
","2024-10-01 21:14:15","4","Answer"
"79044759","79044704","","<p>you can try to add a new item to each dictionary using a for loop like this.</p>
<pre><code>for i in range(len(user_data)):
    user_data[i]['c'] = available_times_array[i]
</code></pre>
","2024-10-01 21:13:42","1","Answer"
"79044704","","How to add each item in a list to the end of each dictionary item in a list of dictionarys","<p>I have two arrays, like below:</p>
<pre><code>user_data = [{'a': '1', 'b': '3'}, {'a': '2', 'b': '4'}, {'a': '5', 'b': '1'}]
available_times_array = ['12:00', '12:10', '12:20']
</code></pre>
<p>And I'm waiting to have this result array:</p>
<pre><code>user_data = [
    {'a': '1', 'b': '3', 'c': '12:00'},
    {'a': '2', 'b': '4', 'c': '12:10'},
    {'a': '5', 'b': '1', 'c': '12:20'}]
</code></pre>
","2024-10-01 20:51:03","-7","Question"
"79040666","79040297","","<p>You could take a look at the <a href=""https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/statements/jump-statements#ref-returns"" rel=""nofollow noreferrer""><code>ref return</code></a> statement (support started on C# 7.0), as well as the APIs below:</p>
<ul>
<li><a href=""https://learn.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.collectionsmarshal.getvaluerefornullref"" rel=""nofollow noreferrer""><code>CollectionsMarshal.GetValueRefOrNullRef</code></a> (.NET 6)</li>
<li><a href=""https://learn.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.collectionsmarshal.getvaluereforadddefault"" rel=""nofollow noreferrer""><code>CollectionsMarshal.GetValueRefOrAddDefault</code></a> (.NET 6)</li>
<li><a href=""https://learn.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.unsafe.isnullref"" rel=""nofollow noreferrer""><code>Unsafe.IsNullRef</code></a> (.NET 5)</li>
<li><a href=""https://learn.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.unsafe.nullref"" rel=""nofollow noreferrer""><code>Unsafe.NullRef</code></a> (.NET 5)</li>
</ul>
<p>You could use them like this:</p>
<pre><code>public static ref Test GetTest(int position, out bool exists)
{
    ref Test test = ref CollectionsMarshal.GetValueRefOrNullRef(d, position);
    if (!Unsafe.IsNullRef(ref test))
    {
        exists = true;
        return ref test;
    }
    else
    {
        exists = false;
        return ref Unsafe.NullRef&lt;Test&gt;();
    }
}
</code></pre>
<p>Notice that I switched the position of the <code>bool</code> and <code>Test</code> return values. The <code>ref</code> magic works only with the return value, not with the <code>out</code> parameter.</p>
<p>Usage:</p>
<pre><code>Test t = new Test();
t.A = 10;
d.Add(10, t);

ref Test t1 = ref GetTest(10, out _);
Console.WriteLine(t1.A);

t1.A = 20;

ref Test t2 = ref GetTest(10, out _);
Console.WriteLine(t2.A);
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>10
20
</code></pre>
<p><a href=""https://dotnetfiddle.net/t0uVNq"" rel=""nofollow noreferrer"">Online demo</a>.</p>
","2024-09-30 18:38:08","1","Answer"
"79040412","79040297","","<blockquote>
<p>I could do this...</p>
<p>Tester.d[position].a = 20;</p>
</blockquote>
<p>You couldn't, unless <code>d</code> was an array.</p>
<p><code>Dictionary</code> (like a <code>List</code>) does not have a ref-returning indexer, so you will always have a copy of the struct returned by the indexer and not the actual struct that is stored in the dictionary. As such your modifications won't be reflected back.</p>
<p>Short example:</p>
<pre><code>var arr = new int[] { 3, 4, 5 };
var list = new List&lt;int&gt; { 3, 4, 5 };
var dict = new Dictionary&lt;int, int&gt; { { 3, 4 }};

ref var arrVar = ref arr[0]; // array is ref returning indexer
arrVar = 5;

// list and dictionary are NOT
//ref var dictVar = ref dict[3];
//ref var listVar = ref list[0]; // non ref returning indexer
//listVar = 5;
</code></pre>
","2024-09-30 17:19:55","2","Answer"
"79040349","79040297","","<p>You should not do that. While it is possible to change the value inside of a struct, even if the value is nested in a dictionary (such as in your example), you should try to avoid that and consider structs read-only. If you want to update a value of a dictionary, replace the entire value with a new instance instead of manipulating its contents. Chances are big the behavior is otherwise not what you'd expect.</p>
<p>The performance impact of doing a replacement should be minimal, too. So you can do</p>
<pre class=""lang-cs prettyprint-override""><code>Tester.d[position] = new Test() { a = 20 };
</code></pre>
","2024-09-30 17:02:10","0","Answer"
"79040297","","C# struct with out parameter","<p>This is probably very simple stupid question but I just need some help understanding it.  I'm storing a struct in a dictionary and I want to grab the struct change some values and then have it update automatically in the dictionary but the behavior is weird.</p>
<pre><code>public struct Test
{
    public int a;
}

public class Tester
{
    public static Dictionary&lt;int, Test&gt; d = new Dictionary&lt;int, Test&gt;();

    public static bool GetTest(int position, out Test test)
    {
        if (d.ContainsKey(position)) {
            test = d[position];
            return true;
        } else {
            test = new Test();
            return false;
        }
    }
}
</code></pre>
<blockquote>
<p>When I try grabbing a struct from the dict and change values it doesn't update.</p>
</blockquote>
<pre><code>        Test n = new Test();
        n.a = 10;
        Tester.d.Add(n.a, n);

        Tester.GetTest(10, out Test t1);
        Debug.Log(t1.a);

        t1.a = 20;

        Tester.GetTest(10, out Test t2);
        Debug.Log(t2.a);
</code></pre>
<p>Keeps showing 10.  So when I use the <code>out</code> parameter it makes a copy of the struct in the dict and returns that?  So I need to write an additional line to update the dictionary again right?</p>
<p>What would be a easy way of grabbing a struct and just updating its value in the dictionary without adding additional lines?</p>
<p>EDIT:</p>
<p>I could do this...</p>
<pre><code>Tester.d[position].a = 20;
</code></pre>
<p>But is there a way to do that with a method?  Where I can get the whole struct, edit a value, and it updates in the dictionary automatically?  Sorry for the stupid question, i just dont understand the behaviour.</p>
","2024-09-30 16:47:28","1","Question"
"79038061","79037841","","<p>You can iterate through a union of keys of all the input dicts to sum the values of keys from dicts that have the keys, or recursively aggregate those values if they aren't summable as numbers (which means they are dicts in your case):</p>
<pre><code>from itertools import chain

def add_nested_dicts(*dicts):
    result = {}
    for key in dict.fromkeys(chain.from_iterable(dicts)):
        values = [d[key] for d in dicts if key in d]
        try:
            result[key] = sum(values)
        except TypeError:
            result[key] = add_nested_dicts(*values)
    return result
</code></pre>
<p>so that:</p>
<pre><code>add_nested_dicts(dict1, dict2)
</code></pre>
<p>returns:</p>
<pre><code>{'A': {'a': 2}, 'B': 2, 'C': {'c': 3}, 'D': {'d': {'dd': 8}}}
</code></pre>
<p>Demo: <a href=""https://ideone.com/EsnKCS"" rel=""nofollow noreferrer"">https://ideone.com/EsnKCS</a></p>
","2024-09-30 05:55:30","1","Answer"
"79038055","79037841","","<p>You could try define a <a href=""https://en.wikipedia.org/wiki/Recursion_(computer_science)"" rel=""nofollow noreferrer"">recursive function</a> yourself:</p>
<pre><code>import pprint
from collections.abc import Mapping
from typing import Any


def _pretty_print_labled_mapping(label: str, d: Mapping[Any, Any]) -&gt; None:
  &quot;&quot;&quot;Pretty print a mapping with a label.&quot;&quot;&quot;
  print(f'{label}:')
  pprint.pprint(d, indent=2, width=1)


def merge_mappings(*mappings: Mapping[Any, Any]) -&gt; Mapping[Any, Any]:
  &quot;&quot;&quot;Merges mappings recursively.&quot;&quot;&quot;
  merged = {}
  for m in mappings:
    for key in m:
      if key in merged:
        if isinstance(merged[key], dict) and isinstance(m[key], dict):
          merged[key] = merge_mappings(merged[key], m[key])
        else:
          merged[key] += m[key]
      else:
        merged[key] = m[key]
  return merged


def main() -&gt; None:
  d1 = {'A': {'a': 1}, 'B': 2, 'C': {'c': 3}, 'D': {'d': {'dd': 4}}}
  _pretty_print_labled_mapping('d1', d1)
  d2 = {'A': {'a': 1}, 'D': {'d': {'dd': 4}}}
  _pretty_print_labled_mapping('d2', d2)
  result = merge_mappings(d1, d2)
  _pretty_print_labled_mapping('result', result)


if __name__ == '__main__':
  main()
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>d1:
{ 'A': { 'a': 1},
  'B': 2,
  'C': { 'c': 3},
  'D': { 'd': { 'dd': 4}}}
d2:
{ 'A': { 'a': 1},
  'D': { 'd': { 'dd': 4}}}
result:
{ 'A': { 'a': 2},
  'B': 2,
  'C': { 'c': 3},
  'D': { 'd': { 'dd': 8}}}
</code></pre>
","2024-09-30 05:52:18","1","Answer"
"79037841","","nested dicts processing with irregular nesting hierarchy","<p>How can one process a pair of nested dicts with partial key overlap?</p>
<pre><code>dict1 = {
    'A': {'a': 1},
    'B': 2,
    'C': {'c': 3},
    'D': {'d': {'dd': 4}}
}

dict2 = {
    'A': {'a': 1},
    'D': {'d': {'dd': 4}}
}
</code></pre>
<p>the desired output should be:</p>
<pre><code>dict1 + dict2= {
    'A': {'a': 2},
    'B': 2,
    'C': {'c': 3},
    'D': {'d': {'dd': 8}}
}
</code></pre>
<p>A key-wise addition of flat dicts is straightforward:</p>
<pre><code>{k: dict1[k] + dict2[k] for k, v in dict2.items()}
</code></pre>
<p>How can I do the same with nested dicts?</p>
","2024-09-30 03:37:39","2","Question"
"79036922","79036853","","<p>You can write a recursive function which applies a function to all non-dict values it finds:</p>
<pre><code>def perform_func_on_values(d, func):
    for k,v in d.items():
        if isinstance(v, dict):
            perform_func_on_values(v, func)
        else:
            d[k] = func(v)

dict1 = {
'A': {'a': 1},
'B': 2,
'C': {'c': 3},
'D': {'d': {'dd': 4}}
}

print(dict1)
perform_func_on_values(dict1, lambda val:val*2)
print(dict1)
</code></pre>
<p>Output:</p>
<pre><code>{'A': {'a': 1}, 'B': 2, 'C': {'c': 3}, 'D': {'d': {'dd': 4}}}
{'A': {'a': 2}, 'B': 4, 'C': {'c': 6}, 'D': {'d': {'dd': 8}}}
</code></pre>
<p>See how this is an in-place change.</p>
","2024-09-29 16:54:13","1","Answer"
"79036853","","how to apply function on nested dictionary values","<p>I have a nested <em>dict</em> with different levels of nesting</p>
<pre><code>dict1 = {
    'A': {'a': 1},
    'B': 2,
    'C': {'c': 3},
    'D': {'d': {'dd': 4}}
}
</code></pre>
<p>I want to perform (for instance) key-wise multiplication. With flat dict this is straightforward:</p>
<pre><code>{k: v * 2 for k, v in dict.items()}
</code></pre>
<p>How can I do the same in the above dict?</p>
","2024-09-29 16:29:41","-2","Question"
"79035667","79035623","","<p>if you're pasting the JSON into your script as a string literal, you can paste it as a <a href=""https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals"" rel=""nofollow noreferrer"">raw string literal</a> and then do <code>replace()</code>:</p>
<pre><code>string = r'{&quot;key&quot;:{&quot;keyinner1&quot;:&quot;\&quot;escapeddata\&quot;&quot;,&quot;keyinner2&quot;:&quot;text&quot;}}'
string = string.replace('\\&quot;', '')
</code></pre>
","2024-09-29 05:19:05","1","Answer"
"79035623","","How do I remove escape characters from a JSON value in Python?","<p>I have a big JSON data with one of the keys having escape characters like :</p>
<pre><code>{&quot;key&quot;:{&quot;keyinner1&quot;:&quot;\&quot;escapeddata\&quot;&quot;,&quot;keyinner2&quot;:&quot;text&quot;}}
</code></pre>
<p>I want to convert it to :</p>
<pre><code>{&quot;key&quot;:{&quot;keyinner1&quot;:&quot;escapeddata&quot;,&quot;keyinner2&quot;:&quot;text&quot;}}
</code></pre>
<p>json.loads does not work on this data , i tried using replace function but it does not work as well</p>
","2024-09-29 04:42:57","1","Question"
"79032883","79032473","","<p>Solved::</p>
<pre><code>- name: Generate random password for each user
  set_fact:
    user_passwords: &quot;{{ user_passwords | default({}) | combine({ item.name: lookup('password', '/dev/null chars=ascii_letters,digits length=15') }) }}&quot;
  loop: &quot;{{ user_details }}

- name: Create users
  user:
      name: &quot;{{ item.name }}&quot;
      comment: &quot;{{ item.comment }}&quot;
      groups: &quot;{{ item.groups | join(',') }}&quot;
      uid: &quot;{{ item.uid }}&quot;
      password: &quot;{{ user_passwords[item.name] | password_hash('sha512') }}&quot;
        state: &quot;{{ action | default('present') }}&quot;
  loop: &quot;{{ user_details }}&quot;
</code></pre>
","2024-09-27 20:57:55","0","Answer"
"79032473","","Ansible Generate random passwords for users","<p>So, I have an ansible role  that is executed via AAP (ansible automation platform)</p>
<p>I need to create a couple of users on different machines, each user, to have an automated generated password</p>
<p>playbook is executed on ansible tower with following extra variables::</p>
<pre><code>action: &quot;present&quot;
group_details:
   - name: 'ssh-user'
     gid:  12500

user_details:
      - name: 'admin-ora'
        comment: 'oracle main user'
        groups: [ 'ssh-user']
        uid: 105 
      - name: 'admin-orainst'
        comment: 'oracle install'
        groups: [ 'ssh-user']
        uid: 106
</code></pre>
<p>accounts.yml</p>
<pre><code>---
- set_fact:
    user_details: |
       {{ user_details | map('combine', { &quot;u_pass&quot;: &quot;{{ lookup('password', '/dev/null chars=ascii_letters, digits length=15') }}&quot;}) }}

- name: updated dictionary
  set_fact:
    user_details: &quot;{{ user_details }}&quot;

- debug:
    msg: &quot;{{item.u_pass}}&quot;
  loop: &quot;{{user_details}}&quot;

- block:
   - name: Manage groups
     group:
        name: &quot;{{item.name}}&quot;
        gid: &quot;{{item.gid}}&quot;
        state: present
     loop: &quot;{{ group_details }}&quot;
   - name: Manage users [add account]
     user:
       name: &quot;{{ item.name }}&quot;
       comment: &quot;{{item.comment}}&quot;
       uid: &quot;{{ item.uid }}&quot;
       shell: &quot;{{ item.shell|default('/bin/bash')}}&quot;
       groups: &quot;{{ item.groups }}&quot;
       append: yes
       password: &quot;{{item.u_pass}}&quot;
       state: &quot;{{action}}&quot;
     loop: &quot;{{ user_details }}&quot;
     loop_control:
       label: &quot;{{item.name}}&quot;
 
</code></pre>
<p>However, during execution I get this error::</p>
<pre><code>ok: [linux-test-server02] =&gt; {&quot;ansible_facts&quot;: {&quot;user_details&quot;: [{&quot;comment&quot;: &quot;oracle main user&quot;, &quot;groups&quot;: [&quot;ssh-user&quot;], &quot;name&quot;: &quot;admin-ora&quot;, &quot;u_pass&quot;: &quot;{{ lookup('password', '/dev/null chars=ascii_letters, digits length=15') }}&quot;}, {&quot;comment&quot;: &quot;oracle install&quot;, &quot;groups&quot;: [&quot;ssh-user&quot;], &quot;name&quot;: &quot;admin-orainst&quot;, &quot;u_pass&quot;: &quot;{{ lookup('password', '/dev/null chars=ascii_letters, digits length=15') }}&quot;}]}, &quot;changed&quot;: false}

TASK [accounts : updated dictionary] *******************************************
ok: [linux-test-server02] =&gt; {&quot;ansible_facts&quot;: {&quot;user_details&quot;: [{&quot;comment&quot;: &quot;oracle main user&quot;, &quot;groups&quot;: [&quot;ssh-user&quot;], &quot;name&quot;: &quot;admin-ora&quot;}, {&quot;comment&quot;: &quot;oracle install&quot;, &quot;groups&quot;: [&quot;ssh-user&quot;], &quot;name&quot;: &quot;admin-orainst&quot;}]}, &quot;changed&quot;: false}

   
 TASK [accounts : debug] ********************************************************
    fatal: [linux-test-server02]: FAILED! =&gt; {&quot;msg&quot;: &quot;The task includes an option with an undefined variable.\n The error was: 'dict object' has no attribute 'u_pass'. 'dict object' has no attribute 'u_pass'\n\nThe error appears to be in '/runner/requirements_roles/accounts/tasks/main.yml': line 34, column 6, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n   - debug:\n     ^ here\n&quot;}
</code></pre>
<p>I took this as an inspiration: <a href=""https://stackoverflow.com/questions/68012293/generate-random-passwords-for-users-and-store-them-so-they-can-be-used-later"">Generate random passwords for users and store them so they can be used later</a></p>
<p>But... seems like the code still fail to append the password field to dictionary :(</p>
","2024-09-27 17:56:59","0","Question"
"79029817","79029798","","<p><code>dict.__str__</code> is inherited from <code>object</code>, not implemented by <code>dict</code>. (The implementation is basically <code>return repr(self)</code> - it's not <code>dict</code>-specific.)</p>
<p><code>dict</code> might come before <code>A</code> in <code>B.__mro__</code>, but <code>A</code> comes before <code>object</code>, so <code>A</code>'s <code>__str__</code> implementation is found before <code>object</code>'s implementation.</p>
","2024-09-27 04:26:49","0","Answer"
"79029798","","str() of a dict subclass does not return ""{}"" per the MRO","<p>With a class that inherits from dict, why does str() not use <code>dict.__str__</code> when dict is earlier in the MRO of the class?</p>
<pre><code>Python 3.10.12 (main, Sep 11 2024, 15:47:36) [GCC 11.4.0] on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; class A:
...  def __str__(self):
...   return &quot;A&quot;
...
&gt;&gt;&gt; class B(dict, A):
...  pass
...
&gt;&gt;&gt; B.__mro__
(&lt;class '__main__.B'&gt;, &lt;class 'dict'&gt;, &lt;class '__main__.A'&gt;, &lt;class 'object'&gt;)
&gt;&gt;&gt; str(B())
'A'
&gt;&gt;&gt; str(dict())
'{}'
&gt;&gt;&gt;
</code></pre>
<p>When calling str(B()), why is <code>dict.__str__</code> not called in preference to <code>A.__str__</code> ?</p>
<p>Is it somehow related to dict having a slot_wrapper instead of a function?</p>
<pre><code>&gt;&gt;&gt; dict.__str__
&lt;slot wrapper '__str__' of 'object' objects&gt;
&gt;&gt;&gt; A.__str__
&lt;function A.__str__ at 0x75be4ea8a0e0&gt;
&gt;&gt;&gt; B.__str__
&lt;function A.__str__ at 0x75be4ea8a0e0&gt;
</code></pre>
<p>EDIT re: Sub-Interpreters</p>
<p>In a Python 3.12 sub-interpreter the behavior is different.</p>
<p>This is what started my investigation. A Django application running in Apache with mod_wsgi exposed the difference.</p>
<p>Inspecting <code>dict.__str__</code>:</p>
<p>Python 3.10.12, main AND sub interpreters:</p>
<p><code>&lt;slot wrapper '__str__' of 'object' objects&gt;</code></p>
<p>Python 3.12.3, main interpreter:</p>
<p><code>&lt;slot wrapper '__str__' of 'object' objects&gt;</code></p>
<p>Python 3.12.3, sub interpreter:</p>
<p><code>&lt;slot wrapper '__str__' of 'dict' objects&gt;</code></p>
<p>This added <code>dict.__str__</code> is what was making Django forms display errors as <code>&quot;{}&quot;</code> or <code>&quot;[]&quot;</code>, instead of <code>&quot;&quot;</code>.</p>
<p>The fix was to add this line into the Apache site definition:</p>
<pre><code>WSGIApplicationGroup %{GLOBAL}
</code></pre>
<p>which, per modwsgi documentation:</p>
<pre><code>&gt;&gt; ... forces the WSGI application to run in the main Python interpreter...
</code></pre>
<p>The config was already using the directives:</p>
<p><code>WSGIDaemonProcess</code> <code>WSGIProcessGroup</code> <code>WSGIScriptAlias</code></p>
<p>EDIT</p>
<p>This is a bug in Python 3.12.4 and earlier. See <a href=""https://github.com/python/cpython/issues/117482"" rel=""nofollow noreferrer"">gh-117482</a></p>
","2024-09-27 04:07:42","3","Question"
"79028973","79028828","","<p>Iterating over <code>root/CRM/Header</code> would be more like this:</p>
<pre><code>Dim dict As Object, k

'...
'...

Set dict = jsonFile(&quot;CRM&quot;)(&quot;Header&quot;)
For Each k In dict
    Debug.Print k, dict(k)
Next k
</code></pre>
","2024-09-26 20:09:51","2","Answer"
"79028828","","How to get an item value from JsonObject","<p>I have a couple of json-files which I need to transform into .xml-files. json - structure is given. When I try to read an item value of the jsonbject, I got an error &quot;types incompatible&quot; when depug.print (Debug.Print Item(&quot;GSID&quot;)) respectively when I try to set value to a string variable.</p>
<p>My code:</p>
<pre><code>Dim strFooter, strHeader As String
    Dim fso As FileSystemObject
    Dim strFileContent As String
    Dim strFile, strFilePath, strFilePathInput As String
    Dim srtVat, strCompanyID, strCompanyName As String
    Dim xmlFile As Object
    Dim jsonFileInput As TextStream

Set jsonFileInput = fso.OpenTextFile(strFilePathInput &amp; strFile, ForReading)
strFileContent = jsonFileInput.ReadAll
Set jsonFile = JsonConverter.ParseJson(strFileContent)
For Each Item In jsonFile(&quot;CRM&quot;).Item(&quot;Header&quot;)
    Debug.Print Item(&quot;GSID&quot;)
Next Item
</code></pre>
<p>here is the json</p>
<pre><code>{
    &quot;CRM&quot;: {
        &quot;Header&quot;: {
            &quot;ID&quot;: &quot;08803&quot;,
            &quot;GSID&quot;: &quot;1475&quot;,
            &quot;MessageID&quot;: &quot;0066M00001X3xwvQAB8242&quot;,
            &quot;SenderID&quot;: &quot;Systema&quot;,
            &quot;PayloadVersionID&quot;: &quot;1.0&quot;
        },....
</code></pre>
<p>I need a couple of values out of the json files to write these into a new xml-file.</p>
<p>thanks in advance!</p>
","2024-09-26 19:17:35","1","Question"
"79023133","79022854","","<p>If you insist on keeping your dictionary structure here is one way to do it</p>
<pre><code>let chapterKey = &quot;21&quot;
let sectionKey = &quot;21-52&quot;

if let chapter = ataChapter.first(where: { $0.key[chapterKey] != nil }),
   let section = chapter.value.first(where: { $0.key == sectionKey }) {
    print(chapter.key.values.first!)
    print(section.key, section.value)
}
</code></pre>
<blockquote>
<p>Air Conditioning<br />
21-52 Air cooling system</p>
</blockquote>
<p>If you don't like the forced unwrapping you could include</p>
<pre><code>let chapterTitle = chapter.key.values.first,
</code></pre>
<p>in the if condition and use that variable instead.</p>
<p>Another solution is to use custom types instead of the dictionary construction. For example</p>
<pre><code>struct Section {
    let key: String
    let title: String
}

struct Chapter {
    let key: String
    let title: String
    let sections: [Section]
}
</code></pre>
<p>and then have an array of Chapter. The search code would be pretty similar to what we already have but the advantage of a custom structure is that we can add functionality to it so for instance implement a <code>subscript</code> in Chapter:</p>
<pre><code>subscript(_ sectionKey: String) -&gt; Section? {
    sections.first(where: { $0.key == sectionKey })
}
</code></pre>
<p>If we also use a dictionary instead of an array with the chapter key as key</p>
<pre><code>let chapters: [String: Chapter] = ...
</code></pre>
<p>then the search code could be simplified to</p>
<pre><code>if let chapter = chapters[chapterKey], let section = chapter[sectionKey] {
    print(chapter.title)
    print(section.key, section.title)
}
</code></pre>
","2024-09-25 13:22:26","1","Answer"
"79022854","","Retrieve value from known keys in simple nested Dictionary","<p>I have a dictionary of Strings, like chapters or table of contents for an aircraft manual, like this:</p>
<pre><code>let ataChapter: [[String:String]:Dictionary] = [
    [&quot;21&quot;:&quot;Air Conditioning&quot;] : [
        &quot;21-31&quot;:&quot;Pressure control and monitoring&quot;,
        &quot;21-51&quot;:&quot;Pack flow control&quot;,
        &quot;21-52&quot;:&quot;Air cooling system&quot;,
        &quot;21-55&quot;:&quot;Emergency ram air inlet&quot;,
        &quot;21-61&quot;:&quot;Pack temperature control&quot;,
        &quot;21-63&quot;:&quot;Cockpit and cabin temperature control&quot;],
    [&quot;22&quot;:&quot;Autoflight&quot;] : [
        &quot;22-01&quot;:&quot;Overhead panel&quot;,
        &quot;22-05&quot;:&quot;FMA&quot;,
        &quot;22-10&quot;:&quot;A/P and F/D&quot;,
        &quot;22-30&quot;:&quot;Autothrust&quot;,
        &quot;22-83&quot;:&quot;FMGC&quot;]
]
</code></pre>
<p>First level string pair is the chapter number and title, second level is each chapters code and its associated aircraft system. The dictionary will be quite long (this is just a few rows from it) but the format is the same so I don't see a reason for a <code>struct</code>, given its simple construction.</p>
<p>Now, I will have a known exact system code - something like <code>&quot;21-52-30A&quot;</code> and with that String I need to find and return:</p>
<ol>
<li><p>the chapter name, e.g. &quot;Air Conditioning&quot; (value) from the top level value because the first 2 characters are 21, and</p>
</li>
<li><p>the system name, e.g. &quot;Air cooling system&quot; (value) from the second level because the first 4 characters are &quot;21-52&quot;.</p>
</li>
</ol>
<p><strong>In other words, how do I match the key from the top level to the first 2 characters in my known string, and the key from the second level to the first 4 characters, and return their respective values?</strong></p>
<p>I've done this so far:</p>
<pre><code>for (keys, values) in ataChapter {
    for (item) in keys {
        print(item.value)
    }

    for (chapter) in values {
        print(chapter.value)
    }
}
</code></pre>
<p>I understand the concept of this simple loop, and with it I obviously get all the string values back but I'm a beginner at this stuff and can't figure out the <em>matching</em> part and return <strong>only</strong> the values matching the code in my String.</p>
","2024-09-25 12:18:21","0","Question"
"79020312","79020232","","<p>You could <a href=""https://pandas.pydata.org/docs/reference/api/pandas.cut.html#pandas.cut"" rel=""nofollow noreferrer""><code>cut</code></a> and <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.value_counts.html#pandas.DataFrame.value_counts"" rel=""nofollow noreferrer""><code>value_counts</code></a>:</p>
<pre><code>tmp = df[['x', 'y', 'z']]
bins = np.arange(0, np.ceil(np.max(tmp)/100)*100, 100)

tmp.apply(lambda s: pd.cut(s, bins, labels=bins[1:])).value_counts().to_dict()
</code></pre>
<p>Output:</p>
<pre><code>{(900.0, 100.0, 100.0): 3,
 (600.0, 100.0, 200.0): 1,
 (700.0, 100.0, 100.0): 1,
 (700.0, 100.0, 200.0): 1,
 (800.0, 100.0, 300.0): 1,
 (1000.0, 100.0, 400.0): 1}
</code></pre>
<p>Or round up to the nearest 100 before <code>value_counts</code>:</p>
<pre><code>(np.ceil(df[['x', 'y', 'z']].div(100))
   .mul(100).astype(int)
   .value_counts(sort=False)
   .to_dict()
)
</code></pre>
<p>Output:</p>
<pre><code>{(600, 100, 200): 1,
 (700, 100, 100): 1,
 (700, 100, 200): 1,
 (800, 100, 300): 1,
 (900, 100, 100): 3,
 (1000, 100, 400): 1,
 (1300, 100, 300): 1}
</code></pre>
","2024-09-24 20:48:47","1","Answer"
"79020300","79020232","","<p>Try with a multi-dimensional histogram, via <a href=""https://numpy.org/doc/stable/reference/generated/numpy.histogramdd.html"" rel=""nofollow noreferrer""><code>numpy.histogramdd</code></a>:</p>
<pre><code>cols = df[['x', 'y', 'z']].values

counts, _ = np.histogramdd(cols, bins=[xs, ys, zs])

nonzero_indices = np.argwhere(counts &gt; 0)
counts_nonzero = {}

for idx in nonzero_indices:
    i, j, k = idx
    key = (int(xs[i + 1]), int(ys[j + 1]), int(zs[k + 1]))
    counts_nonzero[key] = int(counts[i, j, k])
    
counts_nonzero
</code></pre>
<p>Ouptut:</p>
<pre><code>{(600, 100, 200): 1,
 (700, 100, 100): 1,
 (700, 100, 200): 1,
 (800, 100, 300): 1,
 (900, 100, 100): 3,
 (1000, 100, 400): 1,
 (1300, 100, 300): 1}
</code></pre>
","2024-09-24 20:42:54","1","Answer"
"79020232","","Assign multi-index variable values based on the number of elements in a dataframe that match a selection criteria","<p>I have a large csv dataset the looks like the following:</p>
<pre><code>id,x,y,z
34295,695.117,74.0177,70.6486
20915,800.784,98.5225,19.3014
30369,870.428,98.742,23.9953
48151,547.681,53.055,174.176
34026,1231.02,73.7678,203.404
34797,782.725,73.9831,218.592
15598,983.502,82.9373,314.081
34076,614.738,86.3301,171.316
20328,889.016,98.9201,13.3068
...
</code></pre>
<p>If I consider each of these lines an element, I would like to have a data structure where I can easily divide space into x,y,z ranges (3-d blocks of space) and determine how many elements are within a given block.</p>
<p>For instance if I divided into cubes of 100 x 100 x 100:</p>
<pre><code>counts[900][100][100] = 3
</code></pre>
<p>because id's 20915, 30369, and 20328 from the excerpt of the csv above are all within the range x = 800-900, y = 0-100, and z = 0-100.</p>
<p>The brute force way to create something like this is to create a multi-level dictionary as follows:</p>
<pre><code>import numpy
import pandas

df = pandas.read_csv(&quot;test.csv&quot;)

xs = numpy.linspace(0, 1300, 14, endpoint=True)
ys = numpy.linspace(0, 1000, 11, endpoint=True)
zs = numpy.linspace(0, 1000, 11, endpoint=True)

c = {}
for x_index, x in enumerate(xs[:-1]):
    c[xs[x_index + 1]] = {}
    for y_index, y in enumerate(ys[:-1]):
        c[xs[x_index + 1]][ys[y_index + 1]] = {}
        for z_index, z in enumerate(zs[:-1]):
            c[xs[x_index + 1]][ys[y_index + 1]][zs[z_index + 1]] = df[(df[&quot;x&quot;] &gt; xs[x_index]) &amp; (df[&quot;x&quot;] &lt;= xs[x_index + 1]) &amp; (df[&quot;y&quot;] &gt; ys[y_index]) &amp; (df[&quot;y&quot;] &lt;= ys[y_index + 1]) &amp; (df[&quot;z&quot;] &gt; zs[z_index]) &amp; (df[&quot;z&quot;] &lt;= zs[z_index + 1])][&quot;id&quot;].count()
            if (c[xs[x_index + 1]][ys[y_index + 1]][zs[z_index + 1]] &gt; 0):
                print(&quot;c[&quot; + str(xs[x_index + 1]) + &quot;][&quot; + str(ys[y_index + 1]) + &quot;][&quot; + str(zs[z_index + 1]) + &quot;] = &quot; + str(c[xs[x_index + 1]][ys[y_index + 1]][zs[z_index + 1]]))
</code></pre>
<p>This gives the expected output of:</p>
<pre><code>c[600.0][100.0][200.0] = 1
c[700.0][100.0][100.0] = 1
c[700.0][100.0][200.0] = 1
c[800.0][100.0][300.0] = 1
c[900.0][100.0][100.0] = 3
c[1000.0][100.0][400.0] = 1
c[1300.0][100.0][300.0] = 1
</code></pre>
<p>But since the actual production CSV file is very large, it is quite slow.
Any suggestions for how to make it fast and a little less clunky?</p>
","2024-09-24 20:18:47","1","Question"
"79018444","79018410","","<p>I would use List Comprehensions</p>
<p>example:</p>
<pre><code>val0 = [v['val0'] for v in nested_dict.values()]
val1 = [v['val1'] for v in nested_dict.values()]
</code></pre>
<p>your full code to test:</p>
<pre><code>from collections import defaultdict
import random
nested_dict = {
    k: {
        'val0': random.sample(range(100), 2),
        'val1': random.sample(range(100), 2),
    }
    for k in 'abcd'
}

dp_dict= defaultdict(list)

for v in nested_dict.values():
    for k, v_nested in v.items():
        dp_dict[k].append(v_nested)
val0 = dp_dict['val0']
val1 = dp_dict['val1']
# List Comprehensions
val3 = [v['val0'] for v in nested_dict.values()]
val4 = [v['val1'] for v in nested_dict.values()]
</code></pre>
<p>List comprehensions offer conciseness, improved readability, faster performance, reduced boilerplate code, and allow inline conditional logic and nested operations.</p>
","2024-09-24 11:42:23","1","Answer"
"79018421","79018410","","<p>you could use a dictionary comprehension combined with list comprehension..</p>
<pre><code>result = {
    key: [v[key] for v in nested_dict.values()]
    for key in next(iter(nested_dict.values()))
}

val0, val1 = result['val0'], result['val1']
</code></pre>
<p>Assumptions</p>
<pre><code>Dict size: 10
Iterations: 1000
Defaultdict: 0.002345 sec
Comprehension: 0.001876 sec(2x fatser)
</code></pre>
","2024-09-24 11:35:34","1","Answer"
"79018410","","How to concatenate nested items in dictionary?","<p>I have a nested dictionary and I want to concatenate the items of the nested dictionaries:</p>
<pre><code>import random
nested_dict = {
    k: {
        'val0': random.sample(range(100), 2),
        'val1': random.sample(range(100), 2),
    }
    for k in 'abcd'
}
</code></pre>
<p>I can make it with a double-loop like this:</p>
<pre><code>from collections import defaultdict

dp_dict= defaultdict(list)

for v in nested_dict.values():
    for k, v_nested in v.items():
        dp_dict[k].append(v_nested)
val0 = dp_dict['val0']
val1 = dp_dict['val1']
</code></pre>
<p>is there a more <em>Pythonic</em>/elegant way to do it?</p>
<p><strong>NB</strong><br />
one solution is to use <em>Pandas</em>, however, this solution is quite ineficcient (X300 slower)</p>
<pre><code>import pandas as pd
val0, val1 = pd.DataFrame(nested_dict).loc[['val0', 'val1']].values
</code></pre>
","2024-09-24 11:34:00","0","Question"
"79010739","79010686","","<p>You could try using the set() function to remove duplicates of a list
after obtaining all posible columns for a table name.</p>
<pre><code>inline_dict = {}
for message in your_data.get('Message'):
    inline_dict.update({message.get('table_name'): inline_dict.get(message.get('table_name'), []) + [message.get('column_name')]})

strings_dict = {}    
for k, v in inline_dict.items():
    strings_dict[k] = ','.join(list(set(v)))
</code></pre>
<p>after this you would end up with a dictionary with table_names as keys and the concatenated column names as the values.</p>
","2024-09-22 01:58:06","0","Answer"
"79010736","79010686","","<p>Since the data format is a list and not directly a dictionary, you'd iterate through the list, collect items into separate lists based on the table_name, and then join those lists into strings.</p>
<pre><code>message = [
    {&quot;table_name&quot;: &quot;sec_sp&quot;, &quot;column_name&quot;: &quot;field_1&quot;},
    {&quot;table_name&quot;: &quot;sec_sp&quot;, &quot;column_name&quot;: &quot;field_2&quot;},
    {&quot;table_name&quot;: &quot;sec_si&quot;, &quot;column_name&quot;: &quot;field_3&quot;},
    {&quot;table_name&quot;: &quot;sec_si&quot;, &quot;column_name&quot;: &quot;field_4&quot;},
    {&quot;table_name&quot;: &quot;sec_sp&quot;, &quot;column_name&quot;: &quot;field_5&quot;},
    {&quot;table_name&quot;: &quot;sec_sc&quot;, &quot;column_name&quot;: &quot;field_6&quot;},
    {&quot;table_name&quot;: &quot;sec_sc&quot;, &quot;column_name&quot;: &quot;field_7&quot;}
]

# Using a dictionary to collect column names for each table
columns_by_table = {}

# Iterate over each entry in the message
for entry in message:
    table = entry[&quot;table_name&quot;]
    column = entry[&quot;column_name&quot;]
    if table not in columns_by_table:
        columns_by_table[table] = []
    # Add the column name to the corresponding table's list
    columns_by_table[table].append(column)

sp_list = &quot;,&quot;.join(columns_by_table.get(&quot;sec_sp&quot;, []))
si_list = &quot;,&quot;.join(columns_by_table.get(&quot;sec_si&quot;, []))
sc_list = &quot;,&quot;.join(columns_by_table.get(&quot;sec_sc&quot;, []))

print(f&quot;sp_list = \&quot;{sp_list}\&quot;&quot;)
print(f&quot;si_list = \&quot;{si_list}\&quot;&quot;)
print(f&quot;sc_list = \&quot;{sc_list}\&quot;&quot;)
</code></pre>
<p>I hope this will help you a little.</p>
","2024-09-22 01:53:07","0","Answer"
"79010686","","How to convert Python Dictionary to simple String values by removing duplicates","<p>I am trying to convert a list of dictionaries to a simple comma-separated string with duplicate keys removed.</p>
<p>here is my dictionary</p>
<pre><code>&quot;Message&quot;: [
    {
        &quot;table_name&quot;: &quot;sec_sp&quot;,
        &quot;column_name&quot;: &quot;field_1&quot;
    },
    {
        &quot;table_name&quot;: &quot;sec_sp&quot;,
        &quot;column_name&quot;: &quot;field_2&quot;
    },
    {
        &quot;table_name&quot;: &quot;sec_si&quot;,
        &quot;column_name&quot;: &quot;field_3&quot;
    },
    {
        &quot;table_name&quot;: &quot;sec_si&quot;,
        &quot;column_name&quot;: &quot;field_4&quot;
    },
    {
        &quot;table_name&quot;: &quot;sec_sp&quot;,
        &quot;column_name&quot;: &quot;field_5&quot;
    },
    {
        &quot;table_name&quot;: &quot;sec_sc&quot;,
        &quot;column_name&quot;: &quot;field_6&quot;
    },
    {
        &quot;table_name&quot;: &quot;sec_sc&quot;,
        &quot;column_name&quot;: &quot;field_7&quot;
    }
]
</code></pre>
<p>I wanted to convert it to below strings.</p>
<pre><code>sp_list = &quot;field_1,field_2,field_5&quot;
si_list = &quot;field_3,field_4&quot;
sc_list = &quot;field_6,field_7&quot;
</code></pre>
<p>I tried separating out to keys and values using below code however not able to remove dupes.</p>
<pre><code>for key, value in Message.items():
</code></pre>
","2024-09-22 01:04:49","1","Question"
"79009750","79009651","","<p>since there is no dict built-in method for that, here is the solution in function format (instead of method format). it has been extended to set/get respective functions, namely <code>fun_setnest</code> and <code>fun_getnest</code>,</p>
<pre class=""lang-py prettyprint-override""><code>def fun_setnest(dic, lis_nestkey, value): 
    d = dic
    for key in lis_nestkey[:-1]:  # traverse to the second last key
        if key not in d:
            d[key] = {}  # create a nested dict if key doesn't exist
        #endif

        d = d[key]  # move deeper into the dict
    #endfor

    d[lis_nestkey[-1]] = value  # set the value for the final key

    return dic
    
#enddef fun_setnest


def fun_getnest(dic, lis_nestkey): 
    d = dic
    for key in lis_nestkey[:-1]:  # traverse to the second last key
        if key not in d:
            d[key] = {}  # create a nested dict if key doesn't exist
        #endif

        d = d[key]  # move deeper into the dict
    #endfor

    return d[lis_nestkey[-1]]  # get the value for the final key
#enddef fun_getnest
</code></pre>
","2024-09-21 14:16:14","0","Answer"
"79009651","","python nested dict multikey method suggestion","<p>apparently, there is no built-in dict method (let's call it <code>.nestkey</code>) for dynamic key addressing in multi-nested dict structures. this can be demanding when dealing with complex dict structures,</p>
<p>e.g., <code>dic_1.nestkey(list_of_keys_A) = value</code>
instead of manually doing <code>dic_1[&quot;key_1&quot;][&quot;subkey_2&quot;][&quot;subsubkey_3&quot;].. = value</code>.</p>
<p>this is not to be confused with level-1 assignment: <code>dic_1[&quot;key_1&quot;] = value_1, dic_2[&quot;key_2&quot;] = value_2, ..</code>.</p>
<p>i know it's generally good practice to avoid nested structures, but when necessary, dynamic addressing is powerful:</p>
<pre class=""lang-py prettyprint-override""><code>list_values = [1, 2, 3]; ii = -1
for list_nestedkeys_i in [list_nestedkeys_A, list_nestedkeys_B, list_nestedkeys_C]:
    ii += 1; dic.nestkey(list_nestedkeys_i) = list_values[ii]
# endfor
</code></pre>
<p>for this purpose, i suggest implementing <code>.nestkey</code> as a built-in <code>dict</code> method. here’s how it could be expressed in method format:</p>
<pre class=""lang-py prettyprint-override""><code>def nestkey(self, keys, value):
    d = self  # the nested dict
    for key in keys[:-1]:  # traverse to the second last key
        if key not in d:
            d[key] = {}  # create a nested dict if key doesn't exist
        # endif
        d = d[key]  # move deeper into the dict
    # endfor
    d[keys[-1]] = value  # set the value for the final key
# enddef
</code></pre>
","2024-09-21 13:19:12","0","Question"
"79003610","79003550","","<p>Firstly commas were missing in &quot;students&quot; after each entry, other things are added as comment in update_students function</p>
<pre><code>students = {
 &quot;student1&quot;: {&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 21, &quot;live&quot;: &quot;UK&quot;},
 &quot;student2&quot;: {&quot;name&quot;: &quot;Steve&quot;, &quot;age&quot;:25, &quot;live&quot;: &quot;USE&quot;},
 &quot;student3&quot;: {&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;:32, &quot;live&quot;: &quot;France &quot;},
 &quot;student4&quot;: {&quot;name&quot;: &quot;Josh&quot;, &quot;age&quot;:31, &quot;live&quot;: &quot;Spain&quot;}     
}
def update_students(students, student_id ,name, age ,live):
    # dict.update() returns None
    # Assuming you want to update values against student_id 
    # which itself is a dict, you can use below line to update that
    # Note that this is not accounting for student_id which doesn't exist
    # beforehand in students dict, so if you pass &quot;student_5&quot;,
    # it will give KeyError
    students[student_id].update({&quot;name&quot;: name,&quot;age&quot;: age, &quot;live&quot;: live})
    # No need for return statement, dictionary is mutable meaning you can 
    # update it in-place
update_students(students,&quot;student2&quot;,&quot;Alex&quot;, &quot;32&quot;, &quot;japan&quot;)

print(students)
</code></pre>
<p>Below function will take care of adding new student_id data as well</p>
<pre><code>def add_or_update_students(students, student_id, name, age, live):
    # check if the key already exists, if yes update
    # otherwise add that key in students dict
    if student_id in students:
       students[student_id].update({&quot;name&quot;: name, &quot;age&quot;: age, &quot;live&quot;: live})
    else:
       students[student_id] = {&quot;name&quot;: name, &quot;age&quot;: age, &quot;live&quot;: live}
</code></pre>
<p>Delete can be performed by the below method</p>
<pre><code>def delete_student_record(students, student_id):
    # check for student_id if it exists
    # if it exists, delete the corresponding dict
    if student_id in students:
       del students[student_id]
</code></pre>
<p>Delete based on name</p>
<pre><code>def delete_by_name(students, name):
    for student in students:
        if students[student][&quot;name&quot;].lower() == name.lower():
           del students[student]
           break
        else:
           # This may be redundant
           continue

delete_by_name(students, &quot;Steve&quot;)
</code></pre>
","2024-09-19 16:39:21","0","Answer"
"79003595","79003550","","<p>when you do <code>dict.update</code> it modify existing dictionary and add key, value pair to it or override existing one, and return None</p>
<pre><code>&gt;&gt;&gt; help(dict.update)
Help on method_descriptor:

update(...) unbound builtins.dict method
    D.update([E, ]**F) -&gt; None.  Update D from dict/iterable E and F.
    If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
    In either case, this is followed by: for k in F:  D[k] = F[k]

</code></pre>
<p>in your code you are performing <code>students[student_id]= students.update({&quot;name&quot; :name,&quot;age&quot;:age, &quot;live&quot;: live})</code>
which tell that you are assigning new value to key <code>student_id</code> and value is output of update on <code>students</code> dictionary. which is wrong.</p>
<p>but you want is for key <code>student_id</code> update/modify existing value (dict here)</p>
<p>for update existing dictionary you do is <code>dictionary[key].update(some_another_dict)</code> and to assign new dict to existing key one use <code>=</code> operation ie <code>dictionary[key] = new_dictonary</code></p>
<p>below is code, which solve your problem by using <code>update</code> operation on existing dictionary key -value</p>
<pre><code>&gt;&gt;&gt; students = {
...  &quot;student1&quot;: {&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 21, &quot;live&quot; :&quot;UK&quot;},
...  &quot;student2&quot;: {&quot;name&quot;:&quot;Steve&quot;, &quot;age&quot;:25, &quot;live&quot;: &quot;USE&quot;},
...  &quot;student3&quot;: {&quot;name&quot;:&quot;Tom&quot;, &quot;age&quot;:32, &quot;live&quot;: &quot;France &quot;},
...  &quot;student4&quot;: {&quot;name&quot;:&quot;Josh&quot;, &quot;age&quot;:31, &quot;live&quot;: &quot;Spain&quot;}}
&gt;&gt;&gt;
&gt;&gt;&gt; def update_students(students, student_id ,name, age ,live):
...     students[student_id].update({&quot;name&quot; :name,&quot;age&quot;:age, &quot;live&quot;: live})
...     return students, student_id ,name,age ,live
...
&gt;&gt;&gt; update_students(students,&quot;student2&quot;,&quot;Alex&quot;, &quot;32&quot;,&quot;japan &quot;)
({'student1': {'name': 'John', 'age': 21, 'live': 'UK'}, 'student2': {'name': 'Alex', 'age': '32', 'live': 'japan '}, 'student3': {'name': 'Tom', 'age': 32, 'live': 'France '}, 'student4': {'name': 'Josh', 'age': 31, 'live': 'Spain'}}, 'student2', 'Alex', '32', 'japan ')
&gt;&gt;&gt;
</code></pre>
","2024-09-19 16:34:15","1","Answer"
"79003580","79003550","","<p>Call <code>.update()</code> on the dictionary stored at <code>students[student_id]</code>, instead of assigning it to the returned value (<code>.update()</code> always returns <code>None</code>).</p>
<p>Code:</p>
<pre class=""lang-py prettyprint-override""><code>students = {
 &quot;student1&quot;: {&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 21, &quot;live&quot; :&quot;UK&quot;},
 &quot;student2&quot;: {&quot;name&quot;:&quot;Steve&quot;, &quot;age&quot;:25, &quot;live&quot;: &quot;USE&quot;},
 &quot;student3&quot;: {&quot;name&quot;:&quot;Tom&quot;, &quot;age&quot;:32, &quot;live&quot;: &quot;France &quot;},
 &quot;student4&quot;: {&quot;name&quot;:&quot;Josh&quot;, &quot;age&quot;:31, &quot;live&quot;: &quot;Spain&quot;}
}
 
def update_students(students, student_id ,name, age ,live):
    students[student_id].update({&quot;name&quot; :name,&quot;age&quot;:age, &quot;live&quot;: live})
    return students, student_id ,name,age ,live
    
update_students(students,&quot;student2&quot;,&quot;Alex&quot;, &quot;32&quot;,&quot;japan &quot;)

print(students)
</code></pre>
<p>Output:</p>
<pre><code>{'student1': {'name': 'John', 'age': 21, 'live': 'UK'}, 'student2': {'name': 'Alex', 'age': '32', 'live': 'japan '}, 'student3': {'name': 'Tom', 'age': 32, 'live': 'France '}, 'student4': {'name': 'Josh', 'age': 31, 'live': 'Spain'}}
</code></pre>
","2024-09-19 16:29:27","1","Answer"
"79003550","","How can I write a function called update that allows me to update something in this dictionary?","<p>I want to create a function called <code>update</code> in Python for a <del>list</del> <em>dictionary</em> but I don't have any idea how to do this.</p>
<p>I tried to do reserch but the most common information shows how to do changes simply by comments, not by function.</p>
<p>My dictionary is here:</p>
<pre class=""lang-python prettyprint-override""><code>students = {
    &quot;student1&quot;: {&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 21, &quot;live&quot; :&quot;UK&quot;}
    &quot;student2&quot;: {&quot;name&quot;:&quot;Steve&quot;, &quot;age&quot;:25, &quot;live&quot;: &quot;USE&quot;}
    &quot;student3&quot;: {&quot;name&quot;:&quot;Tom&quot;, &quot;age&quot;:32, &quot;live&quot;: &quot;France &quot;}
    &quot;student4&quot;: {&quot;name&quot;:&quot;Josh&quot;, &quot;age&quot;:31, &quot;live&quot;: &quot;Spain&quot;}
}
</code></pre>
<p>So far I used this code for update but it's not run at all</p>
<pre class=""lang-python prettyprint-override""><code>def update_students(students, student_id ,name, age ,live):
    students[student_id] = students.update({
        &quot;name&quot;: name,
        &quot;age&quot;: age,
        &quot;live&quot;: live
    })
    return students, student_id ,name,age ,live

update_students(students,&quot;student2&quot;,&quot;Alex&quot;, &quot;32&quot;,&quot;japan &quot;)
print(students)
</code></pre>
<p>but there is no action ... what can I correct please?</p>
","2024-09-19 16:21:14","0","Question"
"79000330","79000157","","<p>This does the transformation with one big assumption that only the columns that are common across <strong>all</strong> the tables will be used for the join and the rest are just values that you want.</p>
<p>The generated sql differs that</p>
<ol>
<li>the table aliases are just t1, t2,t3,..</li>
<li>and that the join conditions are not tuples, just <code>AND</code>s</li>
<li>all the joins are to t1, not the prior table.</li>
</ol>
<p>you could probably fix that up, but i don't think that would make the sqlengine any happier.   Although you'd probably want to replace the t1,t2,t3 with a more predicable alias scheme,depending on what you are doing with the result.  Technically this will be stable since python has ordereddict's by default but that may not work for you in practice.</p>
<pre class=""lang-py prettyprint-override""><code>from pprint import pprint


def transform(input_dict):
    # count the times each column appears
    column_counts = {}
    for columns in input_dict.values():
        for column in columns:
            column_counts[column] = column_counts.get(column, 0) + 1

    # the join columns will be the ones that show up in every table
    matches = [
        column for column, count in column_counts.items() if count == len(input_dict)
    ]

    tables = []
    for table_name, columns in input_dict.items():
        alias = f't{len(tables)+1}'
        filtered_columns = [column for column in columns if column not in matches]
        tables.append((alias, table_name, filtered_columns))
    return tables, matches


def generate_sql(tables, matches):
    select_clause = ', '.join(
        f'{alias}.{column}' for alias, _, columns in tables for column in columns
    )
    from_clause = f'FROM {tables[0][1]} t1'
    join_clauses = []
    for alias, table_name, _ in tables[1:]:
        # Join all tables to the first table (t1)
        join_conditions = ' AND '.join(
            f't1.{match} = {alias}.{match}' for match in matches
        )
        join_clause = f'INNER JOIN {table_name} {alias} ON {join_conditions}'
        join_clauses.append(join_clause)

    return f'SELECT {select_clause} {from_clause}\n ' + '\n '.join(join_clauses)


if __name__ == '__main__':
    input_dict = {
        'sec_identifier': ['ukey', 'date', 'id_1'],
        'sec_profile': ['ukey', 'date', 'amount', 'name'],
        'sec_sch': ['ukey', 'date', 'interest', 'price'],
    }

    tables, matches = transform(input_dict)
    sql_query = generate_sql(tables, matches)

    print('Original Dictionary:')
    pprint(input_dict)
    print('\nTransformed Dictionary:')
    pprint(tables)
    print('\nMatches:')
    pprint(matches)
    print('\nGenerated SQL Query:')
    print(sql_query)
</code></pre>
<p>Returns:</p>
<pre class=""lang-bash prettyprint-override""><code>$ python sqlgen.py 
Original Dictionary:
{'sec_identifier': ['ukey', 'date', 'id_1'],
 'sec_profile': ['ukey', 'date', 'amount', 'name'],
 'sec_sch': ['ukey', 'date', 'interest', 'price']}

Transformed Dictionary:
[('t1', 'sec_identifier', ['id_1']),
 ('t2', 'sec_profile', ['amount', 'name']),
 ('t3', 'sec_sch', ['interest', 'price'])]

Matches:
['ukey', 'date']

Generated SQL Query:
SELECT t1.id_1, t2.amount, t2.name, t3.interest, t3.price FROM sec_identifier t1
 INNER JOIN sec_profile t2 ON t1.ukey = t2.ukey AND t1.date = t2.date
 INNER JOIN sec_sch t3 ON t1.ukey = t3.ukey AND t1.date = t3.date
$
</code></pre>
","2024-09-18 22:23:52","0","Answer"
"79000157","","Creating SELECT query from python dictionary","<p>I have python dictionary with key values as table and columns. In below example, <code>sec_identifier</code>, <code>sec_profile</code> and <code>sec_sch</code> are tables and <code>id_1</code>, <code>amount</code>, <code>name</code>, <code>interest</code> and <code>price</code>, <code>ukey</code>, <code>date</code> are columns.</p>
<pre class=""lang-py prettyprint-override""><code>my_dictionary = {
  &quot;sec_identifier&quot;: [&quot;ukey&quot;, &quot;date&quot;, &quot;id_1&quot;],
  &quot;sec_profile&quot;: [&quot;ukey&quot;, &quot;date&quot;, &quot;amount&quot;, &quot;name&quot;],
  &quot;sec_sch&quot;: [&quot;ukey&quot;, &quot;date&quot;, &quot;interest&quot;,&quot;price&quot;]
}
</code></pre>
<p>I wanted to create <code>SELECT</code> statement dynamically based on dictionary using python code.
<code>ukey</code> and <code>dt</code> are my primary keys. This is what I wanted to create from above dictionary.</p>
<pre class=""lang-sql prettyprint-override""><code>SELECT si.id_1, sp.amount, sp.name, sc.interest, sc.price FROM sec_profile sp
INNER JOIN sec_identifier si ON (sp.ukey, sp.date) = (si.ukey, si.date)
INNER JOIN sec_sch sc ON (sp.ukey, sp.date) = (sc.ukey, sc.date)
</code></pre>
<p><code>INNER JOIN</code> will shrink or grow based on my dictionary tables.</p>
<p>I tried keeping <code>INNER JOIN</code> statements same and just dynamically replace <code>si.id_1</code>, <code>sp.amount</code>, <code>sp.name</code>, <code>sc.interest</code>, <code>sc.price</code> based on my dictionary. However I was not successful to generate entire <code>INNER JOIN</code> dynamically.</p>
","2024-09-18 21:04:39","0","Question"
"78999583","78998501","","<p>If you are dealing with &quot;raw&quot; input such as JSON data, it should not be in a <code>Map</code>.</p>
<p>You can build a &quot;key&quot; to index lookup <code>Map</code> on the side that can be used to speed up index checking.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const input = [
  [""gfg4343434333r"", {
    ""group"": 1,
    ""groupId"": ""ae027a9e56a2""
  }],
  [""5ae027a9e56a2"", {
    ""group"": 2,
    ""groupId"": ""434346456454""
  }],
  [""de027a9e56a2"", {
    ""group"": 3,
    ""groupId"": ""43343vvfbrrt4445""
  }],
]

// Build a lookup map of ""key"" to index
const keyToIndex = input.reduce((m, [k], i) =&gt; m.set(k, i), new Map)

console.log(getPreviousIndex('gfg4343434333r')) // -1
console.log(getPreviousIndex('5ae027a9e56a2'))  //  0
console.log(getPreviousIndex('de027a9e56a2'))   //  1

function getPreviousIndex(key) {
  let previousIndex = keyToIndex.get(key) - 1
  return previousIndex &gt;= 0 ? previousIndex : -1
}</code></pre>
</div>
</div>
</p>
","2024-09-18 17:52:09","0","Answer"
"78998501","","Find index in map object using JavaScript","<p>If we want to find index in array of objects, it's pretty simple. Example below</p>
<pre><code>let a = [
  {prop1:&quot;abc&quot;,prop2:&quot;qwe&quot;},
  {prop1:&quot;bnmb&quot;,prop2:&quot;yutu&quot;},
  {prop1:&quot;zxvz&quot;,prop2:&quot;qwrq&quot;}];
    
let index = a.findIndex(x =&gt; x.prop2 ===&quot;yutu&quot;);

console.log(index);
</code></pre>
<p>I have a map object as shown below</p>
<pre><code>let input = new Map([
    [ 
      &quot;gfg4343434333r&quot;,
      { &quot;group&quot;: 1, &quot;groupId&quot;: &quot;ae027a9e56a2&quot; }
    ],
    [ 
       &quot;5ae027a9e56a2&quot;,
        { &quot;group&quot;: 2, &quot;groupId&quot;: &quot;434346456454&quot; }
    ],
    [ 
        &quot;de027a9e56a2&quot;,
        { &quot;group&quot;: 3, &quot;groupId&quot;: &quot;43343vvfbrrt4445&quot; }
    ],
])
</code></pre>
<p>As you can see this map object has a key value pair. suppose I have a <code>input2</code> as <code>5ae027a9e56a2</code> I need to find out which key matches with this <code>input2</code> and get its position in <code>input</code>. In this case <code>5ae027a9e56a2</code> matches with the 2nd element. Once it matches, I want to know the index so that I can go one level above and gets its previous element value.</p>
<p>How do I find the index in map object and how to get to index-1 in such cases? Can someone please shed some light here.?</p>
","2024-09-18 13:34:09","0","Question"
"78998196","78998085","","<p>You can do this by mapping or updating the translated customers back to their original positions in the dataframe. To handle this for a list of customer entries, you can create a dictionary mapping the original customer names to their translated values, then use this dictionary to update the Dataframe.</p>
<p>Step 1: Create an empty dictionary to store translations.
Step 2: Iterate through the original list of customers.</p>
<ul>
<li>Check if the customer needs translation.</li>
<li>Translate the customer and store it in the dictionary.
Step 3: Use the dictinoary to replace the original entries in the DataFrame by mapping the values back.</li>
</ul>
<p>I will give you the full code for this.</p>
<pre><code># Step 1: Create a dictionary to store translations
translations = {}

# Step 2: Iterate over the original customer list and translate customers
for customer in df['customer']
  if customer_needs_translation(customer): # This is the condition to check if the customer needs translation
      translated_customer = trnaslator.trnaslate(customer).text
      translations[customer] = trnaslated_customer

# Step 3: Use the dictionary to map and replace the translated customers
df['Customer'] = df['Customer'].map(lambda x: translations.get(x,y))
</code></pre>
","2024-09-18 12:23:15","0","Answer"
"78998085","","Iterating and updating a column using a list","<pre><code> originallist = df['Customer'].tolist()
</code></pre>
<p>I have an list of customers. Within these customers, i have some translations to do which i have done. In other words, i iterate through the original list of about 4000 customers, find about 1500 entries that need to be translated and they can be anywhere in that original list/column. I now need to replace/map/update the entries with the updated translated customer.</p>
<pre><code> translated_customer = (translator.translate(customer).text)
</code></pre>
<p>How do I go about this?
If it was one entry, all fine and good, but its because i have a list, its more complicated</p>
<pre><code>Example Column 
these
are
all
good 
words
bien
bonjour
hello
word
</code></pre>
<p>I have the above list, iterate through, find those french words say, translate those words and now i need to update these words by slotting them back into the original list</p>
<pre><code>  Example Column
these
are
all
good 
words
good
hello
hello
word
</code></pre>
<p>ignore duplicates</p>
","2024-09-18 11:58:27","0","Question"
"78993809","78993709","","<p>In general:<br />
The cause for the error is that <code>IDictionary&lt;int, IPerson&gt;</code> and <code>IDictionary&lt;int, Person&gt;</code> are <strong>unrelated types</strong>, and so you cannot cast <code>persons</code> which is a <code>IDictionary&lt;int, Person&gt;</code> to <code>IDictionary&lt;int, IPerson&gt;</code>.</p>
<p>There is also a specific issue here:<br />
At the moment <code>persons</code> is a dictionary holding objects of class <code>Person</code> (or any class derived from it).<br />
But if a cast from <code>IDictionary&lt;int, Person&gt;</code> to <code>IDictionary&lt;int, IPerson&gt;</code> would be allowed, you would then be able to add <code>IPerson</code> derived objects to the dictionary which are <strong>not</strong> <code>Person</code> (nor derived from it).<br />
This would break <code>persons</code> type safety guarantee.</p>
<p>The best solution, if it's applicable for you, it to change <code>persons</code> to be a <code>IDictionary&lt;int, IPerson&gt;</code>. Otherwise you have to create a copy, as you already did.</p>
","2024-09-17 11:22:12","2","Answer"
"78993709","","Implicit casting / polymorphism with a Dictionary in C#","<p>I've got a problem where I am not able to implicitly cast a <code>Dictionairy&lt;int, class&gt;</code> to a <code>Dictionairy&lt;int, interfaceOfClass&gt;</code> where I feel that this should normally be possible with the rules of polymorphism. The workaround I currently have is to do an explicit cast like this <code>class =&gt; class as interfaceOfClass</code>.</p>
<p>I am not sure if I am missing something in my code to make this work or if its a limitation of C#. Below is a concrete example of my problem.</p>
<pre><code>namespace ImplicitCasting;

internal class Program {
    static void Main(string[] args) {
        IDictionary&lt;int, Person&gt; persons = new Dictionary&lt;int, Person&gt; {
            { 0, new Person() { Name = &quot;Person1&quot;, Age = 20 } },
            { 1, new Person() { Name = &quot;Person2&quot;, Age = 30 } },
            { 2, new Person() { Name = &quot;Person3&quot;, Age = 35 } }
        };

        /*
         This doenst work
         Gives error: CS0266    Cannot implicitly convert type
         'System.Collections.Generic.IDictionary&lt;int, ImplicitCasting.Program.Person&gt;' to
         'System.Collections.Generic.IDictionary&lt;int, ImplicitCasting.Program.IPerson&gt;'.
          An explicit conversion exists (are you missing a cast?)
        */
        //IDictionary&lt;int, IPerson&gt; implicitCast = persons;

        // This is what I need to do to make it work
        IDictionary&lt;int, IPerson&gt; explictCast = persons
            .ToDictionary(entry=&gt;entry.Key, entry=&gt;entry.Value as IPerson);

        foreach (var enrty in explictCast) {
            Console.WriteLine($&quot;{enrty.Key}. Person: {enrty.Value.Name}&quot;);
        }
    }

    public interface IPerson {
        string Name { get; set; }
        void DoSomething();
    }

    public class Person : IPerson {
        public string Name { get; set; } = &quot;Test&quot;;
        public int Age { get; set; }
        public void DoSomething() {
            Console.WriteLine($&quot;{Name} doint something&quot;);
        }
    }
}

</code></pre>
","2024-09-17 10:52:16","1","Question"
"78990098","78989221","","<p>I would suggest using a custom class with tags field to search. this approach is extendable for any level required.</p>
<pre><code>static List&lt;MySearchableItem&gt; items = [new MySearchableItem { 

EmployeeName = &quot;Employee1&quot;, Code = &quot;E2&quot;, Tags = [&quot;2024&quot;, &quot;B1&quot;, &quot;C1&quot;, &quot;E1&quot;, &quot;Employee1&quot;] },
new MySearchableItem { EmployeeName = &quot;Employee2&quot;, Code = &quot;E1&quot;, Tags = [&quot;2024&quot;, &quot;B1&quot;, &quot;C1&quot;, &quot;E2&quot;, &quot;Employee2&quot;] }];
public static List&lt;MySearchableItem&gt; Search(params string[] searchStrings)
{
    return items.Where(i =&gt; searchStrings.All(s =&gt; i.Tags.Contains(s))).ToList();
}
 public class MySearchableItem
 {
     public string EmployeeName { get; set; } = default!;
     public string Code { get; set; } = default!;

     public List&lt;string&gt; Tags { get; set; } = [];
 }
</code></pre>
","2024-09-16 12:07:47","1","Answer"
"78989747","78989221","","<p>It is feasible, but if the level you want to query is dynamic, you have to use non-generic types for input and output:</p>
<pre><code>static object? Search(IDictionary d, params object[] keys)
{
    foreach (var key in keys)
    {
        var v = d[key]; // get inner dict recursively
        if (v is IDictionary d2)
            d = d2;
        else
            return v; // single value
    }

    return FlattenDictionary(d); // value collection

    // the return type can be IEnumerable&lt;string&gt;
    static IEnumerable FlattenDictionary(IDictionary d)
    {
        foreach (var v in d.Values)
        {
            if (v is IDictionary d2)
            {
                // get the value of the inner-most dict recursively 
                foreach (var v2 in FlattenDictionary(d2))
                    yield return v2;
            }
            else
                yield return v;
        }
    }
}
</code></pre>
","2024-09-16 10:24:28","1","Answer"
"78989316","78989116","","<p>You can see from your stack trace that the problem happens when you iterate the <code>List&lt;T&gt;</code> during the <code>string.Join</code> call:</p>
<blockquote>
<p>at System.Collections.Generic.List`1.Enumerator.MoveNextRare()<br />
at System.String.Join[T](String separator, IEnumerable`1 values)</p>
</blockquote>
<p><code>List&lt;T&gt;</code> is not thread-safe. From <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1?view=net-8.0#thread-safety"" rel=""nofollow noreferrer"">the documentation</a>:</p>
<blockquote>
<p>It is safe to perform multiple read operations on a <code>List&lt;T&gt;</code>, but issues can occur if the collection is modified while it's being read. To ensure thread safety, lock the collection during a read or write operation. To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization. For collections with built-in synchronization, see the classes in the <code>System.Collections.Concurrent</code> namespace. For an inherently thread-safe alternative, see the <code>ImmutableList&lt;T&gt;</code> class.</p>
</blockquote>
<p>So, how you want to solve this depends on how exactly you're using that list.</p>
<hr />
<p>One solution is to keep using a <code>List&lt;T&gt;</code>, but make sure that you acquire a lock before reading or writing it. You could use the <code>List&lt;T&gt;</code> itself as the lock object, or have a dedicated lock:</p>
<pre><code>public class ListAndLock&lt;T&gt;
{
    public List&lt;T&gt; List { get; } = new();
    public object LockObject { get; } = new();
}
</code></pre>
<p>Then your dictionary becomes:</p>
<pre><code>ImmutableDictionary&lt;string, ListAndLock&lt;int&gt;&gt;
</code></pre>
<p>To add an item to the list, you need to acquire the lock first:</p>
<pre><code>ListAndLock&lt;int&gt; listAndLock = ...;
lock (listAndLock.LockObject)
{
    listAndLock.List.Add(...);
}
</code></pre>
<p>And iterating the list becomes:</p>
<pre><code>string value;
lock (status.Value.LockObject)
{
    value = string.Join(&quot;,&quot;, status.Value.List).TrimEnd();
}
</code></pre>
<hr />
<p>Another option is to reach for a suitable <a href=""https://learn.microsoft.com/en-us/dotnet/standard/collections/thread-safe/#fine-grained-locking-and-lock-free-mechanisms"" rel=""nofollow noreferrer"">thread-safe collection</a>.</p>
<p>For example, if the order of items in your list doesn't actually matter, you could use a <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.concurrent.concurrentbag-1?view=net-8.0"" rel=""nofollow noreferrer""><code>ConcurrentBag&lt;T&gt;</code></a>:</p>
<pre><code>ImmutableDictionary&lt;string, ConcurrentBag&lt;int&gt;&gt;
</code></pre>
<p>It is safe to read from a <code>ConcurrentBag&lt;T&gt;</code> while also adding elements to it.</p>
<p>If order does matter, you could make use of <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.concurrent.concurrentstack-1?view=net-8.0"" rel=""nofollow noreferrer""><code>ConcurrentStack&lt;T&gt;</code></a> or <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.concurrent.concurrentqueue-1?view=net-8.0"" rel=""nofollow noreferrer""><code>ConcurrentQueue&lt;T&gt;</code></a>.</p>
<hr />
<p>Another option is to go down the immutable collections route, and use an <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.immutable.immutablelist-1?view=net-8.0"" rel=""nofollow noreferrer""><code>ImmutableList&lt;T&gt;</code></a>.</p>
<p>This does make adding elements slightly harder, as you need to modify the <code>ImmutableDictionary&lt;T&gt;</code>:</p>
<pre><code>ImmutableDictionary&lt;string, ImmutableList&lt;int&gt;&gt; dict = ...;
var newList = dict[key].Add(...);
dict = dict.SetItem(key, newList);
</code></pre>
<p>... and if multiple threads are doing this to the dictionary at the same time, you need to make sure that modifications made by one of the threads aren't thrown away by the other thread.</p>
","2024-09-16 08:05:10","6","Answer"
"78989221","","How to fetch data from 5-6 levels of nested Dictionary?","<p>I need to fetch data from nested Dictionary IN C#. My Dictionary is like this:</p>
<pre><code>static Dictionary&lt;int, Dictionary&lt;string, Dictionary&lt;string, Dictionary&lt;string, string&gt;&gt;&gt;&gt; allOffset = new();
</code></pre>
<p>I need to fetch data as mentioned below:</p>
<ul>
<li>Get all values without passing any key</li>
<li>Get all values by passing only partial keys</li>
</ul>
<p>Example data,</p>
<pre><code>{
(2024,(&quot;B1&quot;,(&quot;C1&quot;,(&quot;E1&quot;,&quot;Employee1&quot;)))),
(2024,(&quot;B1&quot;,(&quot;C1&quot;,(&quot;E2&quot;,&quot;Employee2&quot;))))
}
</code></pre>
<p>Expected Outputs:</p>
<ol>
<li>Using keys 2024 or 2024, B1, C1</li>
</ol>
<ul>
<li>I should get both records</li>
</ul>
<ol start=""2"">
<li>Using keys 2024, B1, C1, E1</li>
</ol>
<ul>
<li>I should get only first record</li>
</ul>
<ol start=""3"">
<li>If I do not pass any keys</li>
</ol>
<ul>
<li>Then I should get both records</li>
</ul>
<p>If this is not feasible with nested dictionary then I am open for any other type of collection.</p>
<p>I have reviewed <a href=""https://stackoverflow.com/q/1801905/4776259"">how to fetch data from nested Dictionary in c#</a> but it contains only two levels and not sure how to implement for 4/5/6 nested levels.</p>
<p>Update:
Adding code sample to prepare dummy data.</p>
<pre><code>public void FillDumyData()
{
    for (int i = 2022;i&lt;=2024;i++)
    {
        for (int j = 1; j &lt;= 12; j++)
        {
            for(int k = 1;k&lt;=7; k++)
            {
                EmployeeData.Add(i, j.ToString(), k.ToString(),$&quot;{i}-{j}-{k}&quot;);
            }

        }
    }
}
</code></pre>
","2024-09-16 07:35:34","2","Question"
"78989116","","System.InvalidOperationException: Collection was modified; enumeration operation may not execute for ImmutableDictionary","<p>I have a function that is being repeatedly called via a thread. Randomly some times it raises this exception.</p>
<pre><code> System.InvalidOperationException: Collection was modified; enumeration operation may not execute.
   at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)
   at System.Collections.Generic.List`1.Enumerator.MoveNextRare()
   at System.String.Join[T](String separator, IEnumerable`1 values)
   at FormatLoDestStatus(ImmutableDictionary`2 loDestStatus) 
   in C:\Formatter.cs:line 117
</code></pre>
<p>The function that is being called is :</p>
<pre><code>  public string FormatLoDestStatus(ImmutableDictionary&lt;string, List&lt;int&gt;&gt; loDestStatus)
  {
      List&lt;string&gt; result = new List&lt;string&gt;();
      foreach (var status in loDestStatus)
      {
          string value = string.Join(&quot;,&quot;, status.Value).TrimEnd();
          var formatted = $&quot;{status.Key}S{value}&quot;;  // This is place where it gives invalid operation
          if (Regex.IsMatch(formatted, _patternCollection.LoDestStatusPattern)
              &amp;&amp;
              Regex.IsMatch(value, _patternCollection.UnAvailableLevelsPattern))
          {
              result.Add(formatted);
          }
      }

      return string.Join(&quot;:&quot;, result);
  }
</code></pre>
<p>I converted <code>loDestStatus</code> from <code>Dictionary&lt;string, List&lt;int&gt;&gt;</code> to <code>ImmutableDictionary&lt;string, List&lt;int&gt;&gt;</code> but still it randomly gives exception at the line i mentioned in code where i apply <code>string.Join(&quot;,&quot;, status.Value).TrimEnd();</code></p>
<p>What is actually going wrong and how i can solve it ? (My assumption here is if i have <code>ImmutableDictionary</code>, it is thread safe and the original immutable Dictionary <code>loDestStatus </code> shouldn't be changed).</p>
","2024-09-16 07:03:20","4","Question"
"78984281","78984182","","<p>It is a simple error, but it has complications that made it difficult in retrospect. When running the program it seems as though it runs normally, so it is hard to notice what is wrong with the code at first glance, but after analyzing the recursion is without a return statement attached which means that the value returned from the recursion is lost and as no return was given on the last run through the function its value was None. Thank you, Tim Roberts!</p>
","2024-09-14 04:13:16","0","Answer"
"78984182","","Getting a return value of None when it works in all other situations in a function with parameters, variables, lists, etc","<pre><code># Sample Code
import datetime

sample = {
    &quot;Eat&quot;: [
        datetime.datetime(2024, 9, 13, 2, 0),
        datetime.datetime(2024, 9, 13, 3, 0),
        &quot;2024-09-13 20:43:35.440898&quot;,
    ],
    &quot;Sleep&quot;: [
        datetime.datetime(2024, 9, 13, 4, 0),
        datetime.datetime(2024, 9, 13, 20, 0),
        &quot;2024-09-13 20:43:24.354440&quot;,
    ],
}


# This is the entire function that I am using
def SortObjectives(obj):
    temLis = []
    temDic = {}

    for i in obj:
        print(str(obj[i][0].time()))
        temLis.append(obj[i][0].time())

    temLis.sort()
    print(temLis)
    temCou = 0

    # Recursive Function
    def SortObjectivesR(count):
        for i in obj:
            print(count)
            print(str(temLis[count]) + &quot; --From temLis)&quot;)
            if obj[i][0].time() == temLis[count]:
                temDic[i] = obj[i]

                print(len(temDic))
                print(len(obj))

                if len(temDic) == len(obj):
                    print(&quot;Here&quot;)

                    print(temDic)

                    return temDic
                    # Why does this return None when it has a literal value???
                    # Keep in mind that this function only does this when their are two items
                    # in the obj dictionary when their not in order
                    # It works when in order and when in the number of items is &gt; or &lt; then 2

                else:
                    count += 1
                    SortObjectivesR(count)
                    # return temDic - not part of original code

    print(SortObjectivesR(temCou))
    # How I find what it returns
    # Would put in return statement to save lines, but it returns None
    # Under the specific condition mentioned, the alteration of
    # Variables work just fine.

    return temDic


print(SortObjectives(sample))
</code></pre>
<p>I have tried changing the order of the items and number of items and testing it to see if it would recreate the issue. My hope with this was to see if there was a similarity that I could point out, but it is specific too what I have pointed out in the code. I don't get it at all, it makes no sense to me. I also tried returning simple values like just  a string into the return and it ended up as None as well.</p>
<p>Comments You May Skip Over:</p>
<p>Why does this return None when it has a literal value???</p>
<p>Keep in mind that this function only does this when their are two items
in the obj dictionary when their not in order
It works when in order and when in the number of items   is greater or lesser then 2
WOuld put in return statement to save lines, but it returns None
Under the specific condition mentioned, the alteration of
Variables work just fine.</p>
","2024-09-14 02:57:07","-3","Question"
"78979472","78979288","","<blockquote>
<p>We have decided to make the process terminate itself whenever a scenario such as this happens.</p>
</blockquote>
<p>The biggest problem I see with your plan is that many kinds of crash mess with the state of the C/C++ runtime.</p>
<p>This includes things like the ability to <code>malloc</code> or <code>free</code>, the state of the helper thread's memory, etc.</p>
<p>The standard way to isolate some code from another badly behaved code is to put it in a separate process.  This gives it its own memory space, etc.  You can communicate back and forth using various forms of inter process communication - named pipes, files on disk, sockets, etc.</p>
<p>If you do this, then failure of your program can be almost entirely isolated from your watchdog.</p>
<p>I might do it in 3 parts.</p>
<ul>
<li><p>The first part is the worker.  It should regularly give &quot;proof of progress&quot; - proof it is doing work at an acceptable rate.  This proof should be reasonably strong - new tasks being completed for example (and not &quot;we have an integer that code increments every time it does work&quot; with no upper value) - in order to prevent an infinite loop from looking like infinite progress.</p>
</li>
<li><p>An in-process thread that monitors that &quot;proof of progress&quot; and relays it to the watchdog process.  Its only job is to find the proof of progress and send reports to the watchdog.</p>
</li>
</ul>
<p>This task may also check that the watchdog exists; if it does not, it starts it.  (This is to defend slightly against watchdog crashes; but the big benefit is that users of the program don't have to start the watchdog themselves!).</p>
<ul>
<li>A watchdog that listens for regular proofs of progress, and (to some extent) <em>checks them</em>.  Make sure the message isn't just &quot;everything is ok&quot;, because the in-process thread is not to be trusted completely!  When it stops hearing reports of regular proofs of progress, it kills the main process and restarts it.</li>
</ul>
<p>I'd have cleanup of the persistent state after a crash be part of the main program, to keep the watchdog simple.  It listens through some IPC, notices the progress proofs are missing, then restarts the worker process.  This cleanup should be done at <em>startup</em>, not at shutdown (as at shutdown you don't trust your program to be working properly; at startup, you should have more reason to have faith).</p>
<p>I did say 3 parts.  But I would recommend a 4th:</p>
<ul>
<li>Finally, a 4th part; a crash log.  You should capture the state of the worker process when it fails.  Generate a crash log as best you can that allows a developer to debug the state the app was in when it failed.  This will allow you to have some chance of finding the bugs that are causing the problems.</li>
</ul>
<p>You store a bounded number of logs (which should include binary dumps and maybe some information about what data triggered it).  Making this storage bounded is important (the number of systems that died from crash log filling up the disk is going to be large) as you should assume eventually your program will be neglected.  A bounded number of logs (the bound could even be 1, which is better than 0; but you could limit it to a larger number, or even an amount of resources) gives you some hope of actually improving the situation.</p>
<p>And one day some customer may want to pay you to fix a problem caused by these crashes and you'll thank yourself for these logs.</p>
","2024-09-12 18:11:09","3","Answer"
"78979392","78979346","","<p>You're assigning strings to <code>world[y][x]</code> after checking if the prior value was in an interval. Unfortunately, that breaks when you check the next interval. You probably shouldn't be using the same list of lists for both the input and output.</p>
<p>If you had type-checked your code, the type checker would have objected, as you're passing a 2d list of numbers into a function that says it expects <code>list[list[str]]</code>. Some of the function's code expects numbers and other parts assign strings.</p>
<p>If you really do want to transform the list of lists's inner type, you could probably reorder your loops and break out of the loop over the keys if you find one that matches (and perhaps do something else, like raising an exception, if you never find a match).</p>
","2024-09-12 17:47:04","0","Answer"
"78979346","","Iterating through dict and list2d, list_value gets replaced with a str","<p>I am iterating through a dict and after that through a 2d list[list[float|int]
then i am changing the values of the list2d to the corresponding in the dict
randomly a str appears</p>
<p>from the test i did it changes based on the size of the list2d example:</p>
<p>50, 50 = 13, 49</p>
<p>80, 80 = 15, 48</p>
<blockquote>
</blockquote>
<pre><code>terrain_probability_dict: {float | int, str} = {-1: &quot;e&quot;, 0.2 : &quot;o&quot;, 0.5 : &quot;M&quot;, 1 : &quot;#&quot;}
def generate_terrain(world: list[list[float | int]]):

    keys = sorted(terrain_probability_dict.keys())
    for i in range(1, len(keys)):
        for y in range(len(world)):
            for x in range(len(world[0])):
                if keys[i - 1] &lt; world[y][x] &lt;= keys[i]:
                    world[y][x] = terrain_probability_dict[keys[i]]
</code></pre>
<p>how i checked it:</p>
<blockquote>
</blockquote>
<pre><code>for y in range(len(world)):
    for x in range(len(world[0])):
        # Print only if the type of the current value is string

        if isinstance(world[y][x], str):
            print(f&quot;Initial value at world[{y}][{x}]: {world[y][x]} (Type: {type(world[y][x])})&quot;)
        #and
        print(y, x)
</code></pre>
<p>Before the iteration and also the if isinstance code in the iteration
From the prints i got that there is a &quot;M&quot; or &quot;o&quot; in the list when iterating</p>
<p>Why does a index in world change to int in the world</p>
<p>the error after about 15*50 iteration(depending on the list size):</p>
<blockquote>
<pre><code>if keys[i - 1] &lt; current_value &lt;= keys[i]:
</code></pre>
</blockquote>
<pre><code>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: '&lt;' not supported between instances of 'float' and 'str'
</code></pre>
","2024-09-12 17:30:31","-1","Question"
"78979288","","Self-terminating a c++ linux process when it is in a hung/frozen state","<p>We have a process written in C++ running on linux server which reads a query from an input file, runs some calculations/algorithm on it and writes the results back on the command line. It's a multi-threaded so it can receive multiple queries at once and for each query, it spawns a new thread and writes results within the same thread. Owing to the requirement of high availability, scripts do auto-restart the process in case unforeseen crashes happen.</p>
<pre><code>#include &lt;pthread.h&gt; 
#include &lt;iostream&gt;
#include &lt;cstdlib&gt; 

void* func1(void* arg) 
{ 
    Validate();
    Calculate();
    WriteResults();
} 

int main(int argc,char *argv[])
{
    //set signal handlers to handle SIGTERM, SIGKILL etc
    int rc;
    pthread_t ptid;
    //read config
    //...
    //...
    //listen for queries in a while loop
    while(1)
    {
        //read a query from an input file
        //validate it
        rc = pthread_create(&amp;ptid,(pthread_attr_t*)NULL, &amp;func1, (void*)Ptr);
        if(rc == 0)
            pthread_detach(ptid);
    }
}
</code></pre>
<p>A worst case scenario is when the process freezes or goes into a hung state without crashing and cannot take requests any longer. We have decided to make the process terminate itself whenever a scenario such as this happens.
From the high level up, we have decided to spawn a thread as soon as the the program starts which will keep checking a map for active queries and their last active times. If the inactivity exceeds a certain pre-configured time, then terminate the process.</p>
<pre><code>#include &lt;pthread.h&gt; 
#include &lt;iostream&gt;
#include &lt;cstdlib&gt; 
#include &lt;map&gt;

std::map&lt;int id, QueryStruct&gt; activeQueries;

void* func1(void* arg) 
{ 
    Validate();
    Calculate();
    WriteResults();
} 

void* func2(void* arg) 
{ 
    while (true)
    {
       //sleep for 300 seconds
       //check activeQueries in the system and their last activity time
       //if query inactive for more than pre-configured time, terminate the process.
    }
} 

int main(int argc,char *argv[])
{
    //set signal handlers to handle SIGTERM, SIGKILL etc
    int rc;
    pthread_t ptid, ptid2;
    //read config
    //...
    //spawn a new thread which activates every 300 seconds (pre-configured time)
    pthread_create(&amp;ptid2, NULL, &amp;func2, NULL); 
    //listen for queries in a while loop
    while(1)
    {
        //read a query from an input file
        //validate it
        rc = pthread_create(&amp;ptid,(pthread_attr_t*)NULL, &amp;func1, (void*)Ptr);
        if(rc == 0)
            pthread_detach(ptid);
    }
}
</code></pre>
<p>Is there a more standard or better way to implement the same ?
What intricacies do I need to take care of while implementing the same ?</p>
","2024-09-12 17:13:44","-2","Question"
"78979234","78978466","","<p>Like the below solution would be useful:</p>
<pre><code>import requests
import json

ise_url = &quot;your_ise_url_here&quot;
headers = {&quot;Authorization&quot;: &quot;Bearer your_token_here&quot;}
payload = {}

i = 1
res = {&quot;resources&quot;: []}  # Initialize res outside the loop

while True:
  api_url = f'{ise_url}networkdevice?size=100&amp;page={i}'
  response = requests.get(api_url, headers=headers, data=payload)

  if response.status_code == 200:
    devices = json.loads(response.content.decode('utf-8'))
    search_key = 'resources'

  if i == 1:
    counter = devices['total']
    pages = counter // 100
    resto = counter % 100

    res['resources'].extend(devices[search_key])  # Append new data to res['resources']

    i += 1
    print(f&quot;Page: {i}&quot;)

  if resto &gt; 0 and i &gt; (pages + 1):
    break

for j in res['resources']:
  print(f&quot;{j['id']}\t{j['name']}&quot;)
</code></pre>
","2024-09-12 17:00:15","0","Answer"
"78978466","","Python append a dictionary to an already existing one, within in a loop","<p>I have created a Python script (3.9+) to extract some data from an API query result, and to write what I want into a dictionary, and this query needs to iterate through all pages (it can only be done by pagin every 100 elements).
I have the loop working but the problem is that the dictionat is overwritten on every iteration, no matter if I use 'dict.update()' or 'dict |= (append function)'.</p>
<p>This is my current code:</p>
<pre><code>i = 1 
while True:
    api_url = '{0}networkdevice?size=100&amp;page={1}'.format(ise_url,i)

    response = requests.request(&quot;GET&quot;, api_url, headers=headers, data=payload)
    search_key = 'resources'
    
    if response.status_code == 200:
        devices = json.loads(response.content.decode('utf-8'))
        for value in devices:
            for k,v in devices[value].items():
                if i == 1 and k == 'total':
                    counter = int(''.join(map(str, [int(v) for k, v in devices[value].items() if 'total' in k])))
                    pages = counter // 100
                    resto = counter % 100
                    res = dict(filter(lambda item: search_key in item[0], devices[value].items()))
                elif i &gt; 1:
                    # res.update(dict(filter(lambda item: search_key in item[0], devices[value].items())))      #==&gt; NOT WORKING
                    res |= dict(filter(lambda item: search_key in item[0], devices[value].items()))             #==&gt;NOT WORKING

    i += 1
    print(&quot;Page: &quot; + str(i))
    if resto &gt; 0:
        if i &gt; pages+1:
            break

for j in res['resources']:
    print(j['id'] + &quot;\t&quot; + j['name'])
</code></pre>
","2024-09-12 13:45:08","-1","Question"
"78978267","78974887","","<p>Just concat it:</p>
<pre class=""lang-lua prettyprint-override""><code>tabl = {&quot;File&quot;, &quot;Documents&quot;, &quot;txt_page&quot;}
path = table.concat(tabl, &quot;/&quot;)
print(path)  -- &quot;File/Documents/txt_page&quot;
</code></pre>
<p>For Lua table:</p>
<pre><code>local new_txt_Page = 3
local str = &quot;Files['&quot; .. table.concat(tabl, &quot;']['&quot;) .. &quot;'] = &quot; .. new_txt_Page
print (str) -- Files['File']['Documents']['txt_Page'] = 3 
load(str)() -- execute the string
</code></pre>
<p>If your strings have no spaces dashes etc., then you can make it just like:</p>
<pre class=""lang-lua prettyprint-override""><code>str = &quot;Files.&quot;..table.concat(tabl, &quot;.&quot;)..&quot; = &quot;.. new_txt_Page
print (str) -- Files.File.Documents.txt_Page = 3
load(str)()
</code></pre>
","2024-09-12 12:56:46","0","Answer"
"78977154","78975674","","<p>Let's state the problem:</p>
<blockquote>
<p>Given <code>n &gt;= 0</code> and <code>rawData</code> dictionary, we want to obtain <code>n</code>th item from <code>Values</code> when it exists</p>
</blockquote>
<p>If it's your task then Linq can be</p>
<pre><code>var rowData = rawData
  .Values                           // Values, i.e. arrays   
  .Where(array =&gt; array.Length &gt; n) // Which have at least n items
  .Select(array =&gt; array[n])        // Take n-th item
  .ToArray();                       // Materialize as array
</code></pre>
<p>If you want to provide some <code>defaultItem</code> if array is too short:</p>
<pre><code>var rowData = rawData
  .Values                           
  .Select(array =&gt; array.Length &gt;= n ? array[n] : defaultItem)
  .ToArray();                       
</code></pre>
","2024-09-12 08:14:36","0","Answer"
"78976764","78975674","","<p>I think what you're looking for is a simple <code>select</code>:</p>
<pre><code>var nthRow = 1; // or whatever n is
var rowData = rawData.Select(kvp =&gt; kvp.Value[nthRow]).ToArray();
</code></pre>
<p>Please note that <code>nthRow</code> must be inside the bounds of the smallest array in the dictionary, otherwise you'll get an <code>IndexOutOfRangeException</code>.</p>
<p>The following code will produce a <code>float[]</code> with the values <code>[0.2, 1.2, 2.2]</code><sup>*</sup>:</p>
<pre><code>Dictionary&lt;int, float[]&gt; rawData = new () {
    {1, [0.0f, 0.1f, 0.2f, 0.3f]},
    {2, [1.0f, 1.1f, 1.2f, 1.3f]},
    {3, [2.0f, 2.1f, 2.2f, 2.3f]},
};

var nthRow = 2;
var rowData = rawData.Select(kvp =&gt; kvp.Value[nthRow]).ToArray();
</code></pre>
<p><sup>*</sup>Please note, however, that a <code>Dictionary&lt;TKey, TValue&gt;</code> is an unordered collection, where the only guarantee for order is that an iteration of its <code>Keys</code> will always be in the same order as an iteration of its <code>Values</code> - so the order of the values inside the final <code>float[]</code> array is not guaranteed.</p>
","2024-09-12 06:37:26","1","Answer"
"78975674","","How can I get item [n] from every array in a dictionary?","<p>I've got a data structure <code>Dictionary&lt;int, float[]&gt;</code> and I want to generate a float[] which is the nth entry from each float[].  I can do this in code:</p>
<pre><code>float[] rowData = new float[rawData.Count];
for (int row = 0; row &lt; numRows; row++)
{
    int col = 0;
    foreach (var key in keys)
        rowData[col++] = rawData[key][row];
</code></pre>
<p>Is there a clever way to do this using Linq so I don't need the &quot;foreach&quot;?</p>
","2024-09-11 20:53:32","-5","Question"
"78975215","78974887","","<p>If you mean that the names of the fields in the second table are taken from the first table, then so:</p>
<pre><code>--directory
local dir = {
[1] = &quot;File&quot;,
[2] = &quot;Documents&quot;,
[3] = &quot;txt_Page&quot;,
}

--Table for directory
local t= {
Files = {
    File = {
        Documents = {
            txt_Page = &quot;new&quot;
            }
        }
    }
    }

print (t.Files[dir[1]][dir[2]][dir[3]]t)
</code></pre>
<p>out:</p>
<pre><code>new
</code></pre>
","2024-09-11 18:15:28","0","Answer"
"78975179","78975082","","<p>In comments pmf has already provided a <a href=""https://stackoverflow.com/questions/78975082/why-indirect-variable-reference-not-work-in-bash-dictionary#comment139247196_78975082"">working function</a> using an indirect reference.</p>
<p>If running <code>bash 4.3+</code> another option would be a <code>nameref</code>, eg:</p>
<pre><code>get_val() {
    local -n _var=&quot;$1&quot;          # -n == nameref
    echo &quot;${_var[$2]}&quot;
}

### or as a one-liner:

get_val() { local -n _var=&quot;$1&quot;; echo &quot;${_var[$2]}&quot;; }
</code></pre>
<p>Taking for a test drive:</p>
<pre><code>$ get_val a_dict aa
valueA

$ get_val b_dict bb
valueB

$ get_val b_dict xyz
                          # blank output

$ get_val c_dict xyz
                          # blank output
</code></pre>
","2024-09-11 18:03:24","5","Answer"
"78975082","","why indirect variable reference not work in bash dictionary","<p>I know it( <strong>!</strong> indirect variable reference <code>${!parameter}</code>) will work in the general variable, but I need to use it in dictionary, and it doesn't work. Could somebody know the reason and how to achieve it?</p>
<p>I only konw the dictionary name and the key name, how to get the value in the dictionary?</p>
<pre><code>#!/bin/bash
declare -A a_dict
a_dict=(
    ['aa']='valueA'
    ['ab']='valueB'
)

declare -A b_dict
b_dict=(
    ['ba']='valueA'
    ['bb']='valueB'
)

indirect_var(){
    name=$1
    key=$2
    echo ${!name[$key]}
}

indirect_var a_dict aa
</code></pre>
","2024-09-11 17:35:50","4","Question"
"78974887","","Edit table data through a directory in lua","<p>I have a table and a directory :</p>
<pre><code>--directory
{
[1] = &quot;File&quot;
[2] = &quot;Documents&quot;
[3] = &quot;txt_Page&quot;
}

--Table for directory
{
Files = {
    File = {
        Documents = {
            txt_Page = &quot;new&quot;
            }
        }
    }
}
</code></pre>
<p>I want to edit the <code>txt_page</code> through the directory and return the newly edited files table but I've tried methods and I can't seem to find it.</p>
","2024-09-11 16:39:59","1","Question"
"78972861","78972811","","<p>Regarding:</p>
<pre><code>foreach(int item in items)
</code></pre>
<p>Assuming <code>items</code> is e.g. a <code>List&lt;int&gt;</code> (or similar), it makes sense to use <code>int item</code> in a for-each loop, because each entry in the collection is an <code>int</code>.</p>
<p>But in this line:</p>
<pre><code>foreach(Dictionary&lt;TKey,TValue&gt; item in dictionaryobject)
</code></pre>
<p>Assuming <code>dictionaryobject</code> is a <code>Dictionary</code>, each element is <strong>not</strong> a <code>Dictionary&lt;TKey,TValue&gt;</code>.</p>
<p>Therefore the 2 lines are not correlated.</p>
<p>The correlative version is indeed:</p>
<pre><code>foreach(KeyValuePair&lt;int,string&gt; item in dictionaryobject)
</code></pre>
<p>Because each element in a <code>Dictionary</code> is a <code>KeyValuePair&lt;int,string&gt;</code>.</p>
","2024-09-11 08:54:19","2","Answer"
"78972845","78972811","","<blockquote>
<p>Why must I use KeyValuePair instead of the Dictionary?</p>
</blockquote>
<p>Because <code>KeyValuePair&lt;TKey, TValue&gt;</code> is what the enumerator of <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.getenumerator?view=net-8.0"" rel=""nofollow noreferrer""><code>GetEnumerator</code></a> yields for each item in the dictionary. A <code>Dictionary&lt;TKey, TValue&gt;</code> implements <code>IEnumerable(Of KeyValuePair(Of TKey, TValue))</code> and that interface needs to be implemented for <code>foreach</code>, so <code>GetEnumerator</code> is called when you use a <code>foreach</code>. See: <a href=""https://learn.microsoft.com/en-us/troubleshoot/developer/visualstudio/csharp/language-compilers/make-class-foreach-statement#ienumerable-interface"" rel=""nofollow noreferrer"">Make a Visual C# class usable in a foreach statement</a></p>
<p>If you have a <code>List&lt;int&gt;</code> each <code>int</code> is enumerated, but in case of a dictionary you want the pair of key and value.</p>
","2024-09-11 08:48:39","2","Answer"
"78972828","78972811","","<p>Your dictionary is <code>dictionaryobject</code>. when iterating over it, each iteration provides a pair of key and value, not another dictionary - hence, the <code>KeyValuePair&lt;int,string&gt;</code>.</p>
","2024-09-11 08:44:57","1","Answer"
"78972811","","Using foreach loop on Dictionary<>","<p>When I was trying to use foreach loop with classes or a value type I was doing it like that</p>
<pre class=""lang-cs prettyprint-override""><code>foreach(int item in items)
{
   //rest of the code
}
</code></pre>
<p>However when I tried to loop the Dictionary like that</p>
<pre class=""lang-cs prettyprint-override""><code>foreach(Dictionary&lt;TKey,TValue&gt; item in dictionaryobject)
{
    //compile error
}
</code></pre>
<p>I got a compile error so I must use <code>KeyValuePair&lt;int, string&gt;</code></p>
<pre><code>foreach(KeyValuePair&lt;int,string&gt; item in dictionaryobject)
{
    //code
}
</code></pre>
<p>Why must I use <code>KeyValuePair</code> instead of the Dictionary?</p>
","2024-09-11 08:40:45","0","Question"
"78971656","78971626","","<blockquote>
<p>Can I be sure that the loop will iterate over the elements in the same
order as they were defined initially or I have to specify order to be
sure?</p>
</blockquote>
<p>The simplest answer is Yes, according to the documentation below</p>
<p>In Python 3.7 and later:
See Ref <a href=""https://docs.python.org/3/library/stdtypes.html#dict-views"" rel=""nofollow noreferrer"">docs</a></p>
<blockquote>
<p>Changed in version 3.7: Dictionary order is guaranteed to be insertion
order.</p>
</blockquote>
<p>Code tested using <code>pyenv shell 3.7.17</code></p>
<pre><code>&gt;&gt;&gt; my_dict = {
    &quot;p1&quot;: [1, 2, 3],
    &quot;r1&quot;: [4, 5, 6],
    &quot;o1&quot;: [7, 8, 9],
    &quot;y1&quot;: [10, 11, 12],
    &quot;w1&quot;: [13, 14, 15]
}
&gt;&gt;&gt; result = [my_dict[key][1] for key in my_dict] 
&gt;&gt;&gt; print(result)
[2, 5, 8, 11, 14]
&gt;&gt;&gt; 
</code></pre>
","2024-09-11 00:03:40","0","Answer"
"78971626","","Python: will for loop over dict preserve the order in specific case","<p>I have created a dict with predifined keys, where the keys are strings and the values are arrays.
Example:</p>
<pre><code>dict = {
    &quot;p1&quot;: [1,2,3],
    &quot;r1&quot;: [1,2,3],
    &quot;o1&quot;: [1,2,3],
    &quot;y1&quot;: [1,2,3],
    &quot;w1&quot;: [1,2,3]
}
</code></pre>
<p>Then I have logic to manipulate the values of the value arrays(increase/decrease some of the numbers).
At the end I'm using for cycle to iterate over the dict like that:</p>
<pre><code>[dict[f][1] for f in dict]
</code></pre>
<p>In this case I'm not changing the structure and I'm not adding any new elements in the dict.
The question is: Can I be sure that the loop will iterate over the elements in the same order as they were defined initially or I have to specify order to be sure?</p>
","2024-09-10 23:38:27","1","Question"
"78971521","78971477","","<p>Though it may be excessively &quot;clever&quot; this transformation can be accomplished with dictionary comprehensions. The nested loop structures seen in <a href=""https://stackoverflow.com/a/78971484/15261315"">mrconcerned's answer</a> can be seen replicated in the comprehensions, but because side-effects are eschewed, there is less room for the dictionaries to be unintentionally modified in some way by a mistake.</p>
<pre><code>{
  **{
    f&quot;{id}.ip&quot;: entry['ip'] 
    for entry in variables 
    for id in entry['id']
  },
  **{
    f&quot;{id}.name&quot;: entry['name'] 
    for entry in variables 
    for id in entry['id']
  }
}
</code></pre>
<p>Resulting value:</p>
<pre><code>{
  'alpha.ip': '10.10.10.10', 
  'beta.ip': '10.10.10.20', 
  'gamma.ip': '10.10.10.20', 
  'alpha.name': 'primary', 
  'beta.name': 'secondary', 
  'gamma.name': 'secondary'
}
</code></pre>
<p>This does require multiple passes over the <code>variables</code> data, but that is already present in the original approach using <code>dict.update</code>.</p>
","2024-09-10 22:37:56","1","Answer"
"78971484","78971477","","<p>You need to iterate through the <code>variables</code> list and, for each entry, loop through its <code>id</code> list. For each <code>id</code>, you will then generate two key-value pairs: one for the <code>IP</code> and one for the <code>name</code>.</p>
<pre><code>variables = [
    {'id': ['alpha'], 'ip': '10.10.10.10', 'name': 'primary'},
    {'id': ['beta', 'gamma'], 'ip': '10.10.10.20', 'name': 'secondary'}
]

result = {}

for var in variables:
    for id_value in var['id']:
        result[f&quot;{id_value}.ip&quot;] = var['ip']
        result[f&quot;{id_value}.name&quot;] = var['name']

print(result)
</code></pre>
<p>which derives:</p>
<pre><code>{
    'alpha.ip': '10.10.10.10',
    'alpha.name': 'primary',
    'beta.ip': '10.10.10.20',
    'beta.name': 'secondary',
    'gamma.ip': '10.10.10.20',
    'gamma.name': 'secondary'
}
</code></pre>
","2024-09-10 22:20:38","1","Answer"
"78971477","","Transform a list of dictionaries, based on key list","<p>In Python 3.9, I have a list of dictionaries:</p>
<pre><code>variables = [
    {'id': ['alpha'], 'ip': '10.10.10.10', 'name': 'primary'},
    {'id': ['beta', 'gamma'], 'ip': '10.10.10.20', 'name': 'secondary'}
]
</code></pre>
<p>My goal is to transform it into this dictionary format:</p>
<pre><code>result = {
    'alpha.ip': '10.10.10.10',
    'alpha.name': 'primary',
    'beta.ip': '10.10.10.20',
    'beta.name': 'secondary',
    'gamma.ip': '10.10.10.20',
    'gamma.name': 'secondary'
}
</code></pre>
<p>I have a difficult time drafting the <code>id</code> loop logic, which will produce the correct result.</p>
","2024-09-10 22:15:31","-2","Question"
"78965240","78964253","","<p>You can look into <a href=""https://docs.scala-lang.org/scala3/book/ca-type-classes.html"" rel=""nofollow noreferrer"">type classes</a>. Check the <a href=""https://docs.scala-lang.org/scala3/book/ca-type-classes.html#the-type-class"" rel=""nofollow noreferrer"">example</a> for <code>Show</code> type class, representing &quot;anything that can be shown&quot;. It's the same in your case, except you want &quot;anything that can be mapped&quot;. You would then implement a type class instance for your desired type (in your example <code>List</code>) and provide it using the <code>implicit</code>/<code>given</code> mechanism (depending on Scala 2 vs Scala 3).</p>
<p>Functor is a functional programming construct coming from category theory, and in simple and concrete terms, it's exactly that - a representation of &quot;something that can be mapped&quot;. It is usually found in functional programming Scala libraries such as Cats, Zio, ex-twitter's Algebrid etc, and it is implemented via described type class mechanism. There are many kinds of collections that can implement the Functor type class - most collections (such as <code>List</code>), but also e.g. <code>Option</code>, even effect types such as <code>Future</code> / <code>IO</code> / <code>Task</code> etc.</p>
<p>However, native Scala doesn't use the Functor approach; it simply implements <code>map</code> directly in the collections hierarchy, which in case of <code>List</code> would be in <a href=""https://docs.scala-lang.org/overviews/collections/trait-traversable.html"" rel=""nofollow noreferrer"">Traversable</a> (iirc).</p>
<p>Of course, it doesn't make sense to add (another) <code>map</code> to a <code>List</code>, but I'm assuming you're asking for learning purposes. You could practice by adding another map-like method to <code>List</code> (e.g. <code>myMap</code>). In that case you can define your own type class (e.g. <code>Mappable</code>) and provide an instance/implementation of that type class for <code>List</code>. Another interesting practice would be to define a custom collection (e.g. <code>MyList</code>) and write a Functor instance for it, so that you can do <code>myList.map(someFunction)</code>.</p>
","2024-09-09 11:30:02","2","Answer"
"78964253","","Scala - List(""a"",""b"").map(fn) versus map(fn, List(""a"",""b"")","<p>From Scala's site, there is an example of reimplementing method map for List, and the usage of it is as below</p>
<p>Case 1</p>
<pre><code>def strlen(s: String): Int = s.length
map(strlen, List(&quot;a&quot;, &quot;bb&quot;, &quot;ccc&quot;))   // List(1, 2, 3)
</code></pre>
<p>From native support of scala, calling map on List would be as below:</p>
<p>Case 1</p>
<pre><code>List(&quot;a&quot;,&quot;b&quot;).map(x =&gt; x.length)
</code></pre>
<p>How to write map that could be called like the native way?</p>
<p>Specifically, I want to clarify about this: within the example of scala (Case 1), the implementation utilize Functor. But, from source code on github of scala, the implemention does not utilize Functor.</p>
","2024-09-09 07:04:06","0","Question"
"78963689","78963669","","<p>How about this:</p>
<pre><code>list1 = [{&quot;month&quot;: &quot;Jan&quot;, &quot;amount&quot;:1}, {&quot;month&quot;: &quot;Feb&quot;, &quot;amount&quot;:4}]
list2 = [{&quot;month&quot;: &quot;Jan&quot;, &quot;amount&quot;:2}, {&quot;month&quot;: &quot;Feb&quot;, &quot;amount&quot;:4}]

count = dict()

for lst in list1 + list2:
    m = lst.get('month')
    if m not in count:
        count[m] = 0
    count[m] += int(lst.get('amount', 0))

target = [{'month': m, 'amount': c} for m, c in count.items()]
</code></pre>
","2024-09-09 02:20:10","0","Answer"
"78963687","78963669","","<p>This implements what I auggested above:</p>
<pre><code>from collections import defaultdict

list1 = [{&quot;month&quot;: &quot;Jan&quot;, &quot;amount&quot;:1}, {&quot;month&quot;: &quot;Feb&quot;, &quot;amount&quot;:4}]
list2 = [{&quot;month&quot;: &quot;Jan&quot;, &quot;amount&quot;:2}, {&quot;month&quot;: &quot;Feb&quot;, &quot;amount&quot;:4}]
months = defaultdict(int)
for l in (list1,list2):
    for d in l:
        months[d['month']] += d['amount']

print(months)
target = [{'month':k,'amount':v} for k,v in months.items()]
print(target)
</code></pre>
<p>Output:</p>
<pre><code>defaultdict(&lt;class 'int'&gt;, {'Jan': 3, 'Feb': 8})
[{'month': 'Jan', 'amount': 3}, {'month': 'Feb', 'amount': 8}]
</code></pre>
<p>I used a defaultdict for simplicity, but a normal dictionary would also work with the usual <code>if d['month'] not in months:</code> protection.</p>
","2024-09-09 02:19:33","-1","Answer"
"78963669","","How to create a new list of dicts based on 2 lists with added value of both lists of dicts that have the same key","<p>I have two list of dict:</p>
<pre><code>list1 = [{&quot;month&quot;: &quot;Jan&quot;, &quot;amount&quot;:1}, {&quot;month&quot;: &quot;Feb&quot;, &quot;amount&quot;:4}]
list2 = [{&quot;month&quot;: &quot;Jan&quot;, &quot;amount&quot;:2}, {&quot;month&quot;: &quot;Feb&quot;, &quot;amount&quot;:4}]
</code></pre>
<p>how can I create a new list of dict with the same keys and add the values of the &quot;amount&quot; of each dict that has the same &quot;month&quot;?</p>
<pre><code>target = [{&quot;month&quot;: &quot;Jan&quot;, &quot;amount&quot;:3}, {&quot;month&quot;: &quot;Feb&quot;, &quot;amount&quot;: 8}]
</code></pre>
","2024-09-09 02:10:28","-2","Question"
"78963081","78963070","","<blockquote>
<p>and that in this case the key is an object and not a string?</p>
</blockquote>
<p>Yes and yes.</p>
<blockquote>
<p>is the value another dict object?</p>
</blockquote>
<p>Yes.</p>
","2024-09-08 18:41:32","0","Answer"
"78963070","","Python dict question get() function dumps","<p>I have a Python dict question where I struggle with using the typical tutorials I can find. In my debugger I see the following dict (call it <code>instance_dict</code> in my code)</p>
<pre><code>{
&lt;segment_display.displayScore1&gt;: {'show_43.segment_display_player.displayScore1': True},
&lt;segment_display.displayScore2&gt;: {'show_43.segment_display_player.displayScore2': True},
&lt;segment_display.displayPlayer&gt;: {'show_43.segment_display_player.displayPlayer': True},
&lt;segment_display.displayScore3&gt;: {'show_43.segment_display_player.displayScore3': True},
&lt;segment_display.displayScore4&gt;: {'show_43.segment_display_player.displayScore4': True},
&lt;segment_display.displayBall&gt;: {'show_43.segment_display_player.displayBall': True},
&lt;segment_display.neoSegTopLine&gt;: {},
&lt;segment_display.neoSegBottomLine&gt;: {}
}
</code></pre>
<p>Am I reading it correctly that for example <code>&lt;segment_display.displayScore1&gt;</code> is the key, and that in this case the key is an object and not a string?</p>
<p>If that is correct, how do I understand the value <code>{'show_43.segment_display_player.displayScore1': True}</code> is the value another dict object?</p>
<p>Now I run a for loop <code>for a in instance_dict.items():</code></p>
<p>Now I want to get the value for each item. I thought I can do</p>
<p><code>instance_dict.get(a)</code> in my for loop to get the value -but that dumps. Of course I could do <code>for a, b in ....</code> But why is my code dumping?</p>
","2024-09-08 18:35:14","-2","Question"
"78962315","78961979","","<p>You can just override :</p>
<pre><code>type Override&lt;T, U extends { [K in keyof T]?: any }&gt; = {
  [K in keyof T]: T[K] extends U[K] ? T[K] : U[K]
}

interface First {
  key1: string;
  key2: string;
}

interface Second extends First {
  key1: number;
  key3: string
}

type Third = Override&lt;First, {key1:number}&gt;

var myOverride:Third = {
  key1: 5,
  key2: 'six'
}
</code></pre>
","2024-09-08 12:02:40","0","Answer"
"78961979","","How to extend an interface but limit the keys to a specific list","<p>In typescript, how can I extend an existing interface but limit the use to the same keys?</p>
<p>Existing interface:</p>
<pre><code>interface First {
  key1: string;
  key2: string;
}

interface Second extends First {
  key1: number;
  key3: string &lt;&lt;&lt; this must be prevented and generate error!
}
</code></pre>
<p>The example is intentionally reduced to understand the topic, obviously the application is for much more complex interfaces.</p>
<p>In all the tests I've done, when I extend an interface I can always add any kind of new key.</p>
","2024-09-08 09:15:22","-1","Question"
"78959882","78959790","","<p>You have a list of dictionaries that you need to enumerate. You can do this with a simple <em>for</em> loop.</p>
<p>You can simplify the handling of your desired result by utilising <em>collections.defaultdict</em> as follows:</p>
<pre><code>from collections import defaultdict

a = [
    {&quot;name&quot;: &quot;Mike&quot;, &quot;score&quot;: 10},
    {&quot;name&quot;: &quot;Mike&quot;, &quot;score&quot;: 8},
    {&quot;name&quot;: &quot;Mike&quot;, &quot;score&quot;: 6},
    {&quot;name&quot;: &quot;John&quot;, &quot;score&quot;: 7},
    {&quot;name&quot;: &quot;John&quot;, &quot;score&quot;: 8},
    {&quot;name&quot;: &quot;John&quot;, &quot;score&quot;: 5},
    {&quot;name&quot;: &quot;John&quot;, &quot;score&quot;: 8},
    {&quot;name&quot;: &quot;Tom&quot;, &quot;score&quot;: 8},
    {&quot;name&quot;: &quot;Tom&quot;, &quot;score&quot;: 9},
]

result = defaultdict(int)

for d in a:
    result[d[&quot;name&quot;]] += d[&quot;score&quot;]

print(dict(result))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'Mike': 24, 'John': 28, 'Tom': 17}
</code></pre>
","2024-09-07 10:05:30","0","Answer"
"78959815","78959790","","<p>You have a list of dictionaries. When you perform <code>for key, value in a:</code>, you are unpacking the keys of each dictionary into <code>key</code> and <code>value</code>, which results in <code>key</code> and <code>value</code> being the 'name' and 'score' strings, respectively.</p>
<p>What you need to do instead is iterate through each item of the list, then get the 'name' and 'score' of each item and add them to the new dictionary:</p>
<pre class=""lang-py prettyprint-override""><code>s = {}
for item in a:
    key = item['name']
    value = item['score']
    if key not in s:
        s[key] = 0
    s[key] += value
print(s)
</code></pre>
<p>result:</p>
<pre class=""lang-py prettyprint-override""><code>{'Mike': 24, 'John': 28, 'Tom': 17}
</code></pre>
","2024-09-07 09:31:22","1","Answer"
"78959790","","Find the total score of each players","<p>I have to find each player's scores:</p>
<pre><code>a=[
    {'name': 'Mike', 'score': 10},
    {'name': 'Mike', 'score': 8},
    {'name': 'Mike', 'score': 6},
    {'name': 'John', 'score': 7},
    {'name': 'John', 'score': 8},
    {'name': 'John', 'score': 5},
    {'name': 'John', 'score': 8},
    {'name': 'Tom', 'score': 8},
    {'name': 'Tom', 'score': 9}
]

s={}
for key,value in a:
    if key not in s:
        s[key]=0
    elif key in s:
        s[key]+=value
print(s)
</code></pre>
<p>But I didn't get the exact output as a dictionary. Instead, I got an error:</p>
<pre class=""lang-none prettyprint-override""><code>    s[key]+=value
TypeError: unsupported operand type(s) for +=: 'int' and 'str'
</code></pre>
","2024-09-07 09:19:31","-4","Question"
"78959427","78959225","","<p>You will need to write your dictionaries as per the correct syntax and then 'outer merge' the DataFrames. You can then write the output to excel.</p>
<pre><code>import pandas as pd

#Write your dictionaries
DictionaryA = { 
    'PO Number': ['PO_1111', 'PO_2222'],
    'Name': ['John Doe', 'Jane Doe']
     } 

DictionaryB = { 
    'PO Number': ['PO_1111', 'PO_2222', 'PO_2222'],
    'sku': ['sku_A', 'sku_A', 'sku_B'],
    'Qty': [1 , 1, 3]
    } 

#Convert dictionaries to DataFrames
tableA = pd.DataFrame(DictionaryA)
tableB = pd.DataFrame(DictionaryB)

#Outer merge the DataFrames
ds = tableA.merge(tableB, how='outer', on='PO Number')

#Output to excel
ds.to_excel('output.xlsx')
</code></pre>
<p><a href=""https://i.sstatic.net/mNJ1fXDs.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/mNJ1fXDs.png"" alt=""OutputTable"" /></a></p>
","2024-09-07 05:38:41","1","Answer"
"78959225","","Write two dictionaries into excel rows","<p>I have 2 dictionaries.I want to combine the datas from each dictionary and write into an excel table.</p>
<p>Dictionary A contains PO numbers (Key) and Customer Name (value)
Dictionary B contains PO numbers (Key) and Sku number (Sub key) and quantity (value).
For Dictionary B, sometimes, there could be more than one Sku numbers/quantity from each PO.</p>
<pre><code>DictionaryA = { {PO_1111: John Doe}, {PO_2222: Jane Doe} } 

DictionaryB = { PO_1111: { {sku_A: 1} }, PO_2222: {{sku_A: 1}, {sku_B: 3} } 
</code></pre>
<p><img src=""https://i.sstatic.net/3G0VDu9l.jpg"" alt=""expected result"" /></p>
","2024-09-07 02:38:38","-1","Question"
"78957560","78957510","","<p>Your filtering function looks mostly correct, but there're some issues.</p>
<ol>
<li>you should add the missing return some() callback.</li>
<li>you should add a null-safe check for appErrorSummaryKeyword.</li>
</ol>
<p>Here's updated code.</p>
<pre><code>const searchException = () =&gt; {
  return new Map(
    Array.from(input).filter(([key, value]) =&gt; {
      const matchInvocations = value.invocations.some((invocation) =&gt; 
        invocation?.radar?.includes(filterFailureInput)
      );

      const matchErrorSummary =
        value?.testErrorSummary?.toLowerCase().includes(filterFailureInput.toLowerCase()) ||
        value?.appErrorSummaryKeyword?.toLowerCase()?.includes(filterFailureInput.toLowerCase());

      return matchInvocations || matchErrorSummary;
    })
  );
};
</code></pre>
","2024-09-06 14:20:12","2","Answer"
"78957510","","filter map objects using javascript","<p>I have a map object with key value pair as shown below</p>
<pre><code>const input = new Map([
    [
      0,
      {
        testErrorSummary: &quot;ServiceC\nV4/\n\tcom.dmv.smp&quot;,
        appErrorSummary: '{&quot;handler&quot;:null,&quot;sourcetype&quot;:null}',
        invocations: [
          { radar: &quot;&quot;, testCaseMilestone: &quot;1G05&quot; },
          { radar: &quot;3450&quot;, testCaseMilestone: &quot;1G15&quot; },
        ],
      },
    ],
    [
      1,
      {
        testErrorSummary: 'java: \nEx:\n &lt;&quot;()&quot;&gt;\n &lt;&quot; &quot;code&quot;: &quot;403&quot;&quot;&gt;',
        appErrorSummary: '{&quot;handler&quot;:null,&quot;sourcetype&quot;:null}',
        invocations: [
          { radar: &quot;1532&quot;, testCaseMilestone: &quot;1G12&quot; },
          { radar: &quot;1954&quot;, testCaseMilestone: &quot;1G24&quot; },
        ],
      },
    ],
    [
      2,
      {
        testErrorSummary: &quot;com.dmv: Timeout while waiting.&quot;,
        appErrorSummaryKeyword: 'Cannot invoke &quot;com.dmv.getEcid()&quot;',
        hasRadarHistory: false,
        invocations: [
          { radar: &quot;3444&quot;, testCaseMilestone: &quot;1G45&quot; },
          { radar: &quot;&quot;, testCaseMilestone: &quot;1G90&quot; },
        ],
      },
    ],
  ]);
</code></pre>
<p>I have a search input where i enter the string. Based on this string value, i want to filter this above map object. Suppose user enters &quot;50&quot;. So i need to check for properties <code>testErrorSummary</code>, <code>appErrorSummary</code> and <code>radar</code> and return only those mapped objects which matches with user entries.</p>
<p>So in this case, user enters 50, i am expecting the below result because those get matched with <code>radar</code> having 50 in it. So <code>filterFailureInput = 50</code></p>
<p>Expected output</p>
<pre><code>new Map([
    [
      0,
      {
        testErrorSummary: &quot;ServiceC\nV4/\n\tcom.dmv.smp&quot;,
        appErrorSummary: '{&quot;handler&quot;:null,&quot;sourcetype&quot;:null}',
        invocations: [
          { radar: &quot;&quot;, testCaseMilestone: &quot;1G05&quot; },
          { radar: &quot;3450&quot;, testCaseMilestone: &quot;1G15&quot; },
        ],
      },
    ],
  ]);
</code></pre>
<p>In order to achieve this way of filtering, i am doing the following but i dont get the expected filter results. Can someone let me know where i am going wrong with this.</p>
<pre><code>const searchException = () =&gt; {
        return new Map(
          Array.from(input).filter(([key, value]) =&gt; {
            const matchInvocations = value.invocations.some(
              (invocation) =&gt; {
                (invocation?.radar &amp;&amp;
                  invocation?.radar.includes(filterFailureInput)) ||
                (value?.testErrorSummary?.toLowerCase()
                    .includes(filterFailureInput.toLowerCase())) ||
                (value?.appErrorSummaryKeyword?.toLowerCase()
                    .includes(filterFailureInput.toLowerCase()))
          });
            return matchInvocations;
          })
        );
      };

const expectedOutput = searchException();

</code></pre>
","2024-09-06 14:07:34","0","Question"
"78953579","78953504","","<p>You should do :</p>
<pre><code>if s in AS and AS[s][0] == 0: 
</code></pre>
<p>instead of</p>
<pre><code>if s in AS and AS[s]['used'] == 0: 
</code></pre>
<p>By doing <code>AS[s]</code> you access the value of the dict associated with the key <code>s</code>. The value is a tuple, you cannot acces a tuple value by label, you have to use an index to access a tuple value. Here the index of the data you're looking for is <code>0</code>.</p>
","2024-09-05 14:34:09","1","Answer"
"78953526","78953504","","<p>In your T() function, you return a dictionary where the values are tuples, not dictionaries. When you try to access AS[s]['used'], you're attempting to use string indexing on a tuple, which is not possible - hence the error &quot;tuple indices must be integers or slices, not str&quot;.</p>
<p>here is a slightly modified version of the code snippet.</p>
<pre class=""lang-py prettyprint-override""><code>def T():
    AS = {&quot;fen&quot;: {'used': 0, 'to_end': None, 'depth': 1, 'type': 'normal'}}
    return {fen: data for fen, data in AS.items() if data['to_end'] is not None}

s = &quot;fen&quot;
AS = T()

if s in AS and AS[s]['used'] == 0:   
    print(AS)
</code></pre>
<p>I also changed the condition <code>if data['to_end'] is not True</code> to <code>if data['to_end'] is not None</code>. This is because in your original dictionary, 'to_end' was set to None, not True. You can change this if you want to.</p>
","2024-09-05 14:20:03","2","Answer"
"78953504","","a problem with a dictionary in Python:naive approach doesn't work","<p>I have a problem with accessing an dictionary AS item like this:</p>
<pre><code>def T():
    AS = {&quot;fen&quot;: {'used': 0, 'to_end': None, 'depth': 1, 'type': 'normal'}}
    return {fen: (data['to_end'], data['type']) for fen, data in AS.items() if data['to_end'] is not True}
s = &quot;fen&quot;
AS = T()

if s in AS and AS[s]['used'] == 0:   
    print(AS)
</code></pre>
<p><strong>gives this error :</strong></p>
<pre><code>---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[37], line 7
      4 s = &quot;fen&quot;
      5 AS = T()
----&gt; 7 if s in AS and AS[s]['used'] == 0:   
      8     # Tisk hodnot
      9     print(AS)

TypeError: tuple indices must be integers or slices, not str
</code></pre>
<p><strong>I know a workaround but I wish to grasp in detail why this approach fails.</strong> (and how to fix it with a minimum amount of effort)</p>
","2024-09-05 14:15:30","-2","Question"
"78950780","78946519","","<p>Well, that is a pure Python question and has nothing to do with the framework itself. In any case, the only way I can think of is to gather metadata and use it build a new object. Something around this:</p>
<pre class=""lang-py prettyprint-override""><code>data = { your_current_data }
&quot;&quot;&quot;
Access current data directly
and assign possible values to the new object.
&quot;&quot;&quot;
new_data = {
    &quot;start&quot;: data.pop(&quot;start&quot;),
    &quot;length&quot;: data.pop(&quot;length&quot;),
    &quot;search_value&quot;: data.pop(&quot;search[value]&quot;),
    &quot;search_regex&quot;: data.pop(&quot;search[regex]&quot;),
    &quot;draw&quot;: data.pop(&quot;draw&quot;),
    &quot;columns&quot;: [],
    &quot;orders&quot;: [],
}

&quot;&quot;&quot;
Find metadata to build the new object.
1) columns: number of columns -&gt; [0,1,2]
2) orders: number of orders -&gt; [0]
3) keys_data: a matrix containing all keys 
   obtained by destructuring the original one -&gt; 
[ 
  [k1, k2, k3...], 
  [...], 
    .
    .
]
&quot;&quot;&quot;
columns = []
orders = []
keys_data = []

for key, value in data.items():
    keys = key.split(&quot;[&quot;)
    keys = [key.replace(&quot;]&quot;, &quot;&quot;) for key in keys]
    keys.append(value)
    keys_data.append(keys)
    if keys[0] == &quot;columns&quot;:
        if not keys[1] in columns:
            columns.append(keys[1])
    if keys[0] == &quot;order&quot;:
        if not keys[1] in orders:
            orders.append(keys[1])
    else:
        pass

&quot;&quot;&quot;
Use columns and orders to loop through the matrix
and find it respective data to build a new object
to be appended to the new_data list.
&quot;&quot;&quot;
for number in columns:
    obj = {&quot;number&quot;: number}

    for keys in keys_data:
        if keys[0] == &quot;columns&quot; and keys[1] == number:
            obj.update({f&quot;{keys[-2]}&quot;: keys[-1]})
        else:
            pass

    new_data[&quot;columns&quot;].append(obj)

for number in orders:
    obj = {&quot;number&quot;: number}

    for keys in keys_data:
        if keys[0] == &quot;order&quot; and keys[1] == number:
            obj.update({f&quot;{keys[-2]}&quot;: keys[-1]})
        else:
            pass

    new_data[&quot;orders&quot;].append(obj)
</code></pre>
<p>If you want the new_data, columns and orders objects to contain keys called <code>search_value</code> and <code>search_regex</code> you need to adapt the code further by checking the keys list length.</p>
","2024-09-04 22:38:50","0","Answer"
"78947881","78947749","","<p>The most straightforward way is to put the work done in the inner loop inside a function:</p>
<pre><code>def transform(line):
    for key, value in patterns.items():
        line = re.compile(value, flags=re.IGNORECASE).sub(key, line)
    return line

result = [transform(line) for line in file]
</code></pre>
<p>If you want everything in one self-contained nested list comprehension ... well, you really shouldn't. The inner loop is done <em>for side effects</em>. List comprehensions are for expressing mapping/filtering operations. Not for side effects. Now, it has become possible to use list comprehensions with an accumulator variable, like you are doing in your inner loop, using <em>assignment expressions</em>. But they are purposefully limited in where they can occur (precisely to nip these sorts of shenanigans in the bud). This makes turning this into a pure list comprehension really ugly (it would be ugly anyway)! Here is one way:</p>
<pre><code>result = [
    ((acc:=line) and [(acc:=re.compile(value, flags=re.IGNORECASE).sub(key, line)) for  key, value in patterns.items()])[-1] 
    for line in lines
]
</code></pre>
<p>It's horrible (and thats even without handling the case where <code>line</code> is an empty string).</p>
<p>And note, as always when using a list comprehension for side effects, this needlessly builds a list, in this case, only to extract the last item from it.</p>
<p>Perhaps, you'd think you could do a more straightfoward transliteration by doing something like:</p>
<pre><code>result = [
    [(line:=re.compile(value, flags=re.IGNORECASE).sub(key, line)) for key, value in patterns.items()][-1]
    for line in lines
]
</code></pre>
<p>But the above is a syntax error:</p>
<pre><code>SyntaxError: assignment expression cannot rebind comprehension iteration variable 'line'
</code></pre>
<p>So you have to jump through even more hoops because assignment expressions are prohibited from rebinding an iteration variable. You can read more about the motivations for prohibiting that <a href=""https://peps.python.org/pep-0572/#scope-of-the-target"" rel=""nofollow noreferrer"">here</a></p>
","2024-09-04 09:25:17","0","Answer"
"78947749","","Sumarize double for loop into list comprehension","<p>I've been trying to translate these two for loops into list comprehension:</p>
<pre><code>with open(sourceFile, 'r+t') as file:
        for line in file:
            for key, value in patterns.items():
                line = re.compile(value, flags=re.IGNORECASE).sub(key, line)
            targetList.append(line)
</code></pre>
<p>I would like to end up with something like this:</p>
<pre><code>return [[re.compile(value, flags=re.IGNORECASE).sub(key, line) for key, value in patterns.items()] for line in file]
</code></pre>
","2024-09-04 08:55:04","-3","Question"
"78946519","","How to convert query string parameters from Datatables.js, like columns[0][name] into an object in Python/Django?","<p>I'm using DataTables.js and trying to hook up server-side processing. I'm using Django on the server.</p>
<p>Currently, the data to Django looks like:</p>
<pre><code>{'draw': '1',
 'columns[0][data]': '0',
 'columns[0][name]': 'Brand',
 'columns[0][searchable]': 'true',
 'columns[0][orderable]': 'true',
 'columns[0][search][value]': '',
 'columns[0][search][regex]': 'false',
 'columns[1][data]': '1',
 'columns[1][name]': 'Sku',
 'columns[1][searchable]': 'true',
 'columns[1][orderable]': 'true',
 'columns[1][search][value]': '',
 'columns[1][search][regex]': 'false',
 'columns[2][data]': '2',
 'columns[2][name]': 'Name',
 'columns[2][searchable]': 'true',
 'columns[2][orderable]': 'true',
 'columns[2][search][value]': '',
 'columns[2][search][regex]': 'false',
 'order[0][column]': '0',
 'order[0][dir]': 'asc',
 'order[0][name]': 'Brand',
 'start': '0',
 'length': '10',
 'search[value]': '',
 'search[regex]': 'false',
 '_': '1725412765180'}
</code></pre>
<p>(as a dictionary)</p>
<p>However, there's a variable number of columns and order values that might come through. So I'd like to convert all of this into a few key variables:</p>
<ol>
<li>start</li>
<li>length</li>
<li>search value</li>
<li>search regex</li>
<li>draw</li>
<li>array/list of column objects</li>
<li>array/list of order objects</li>
</ol>
<p>But I don't know a lot of python</p>
","2024-09-04 01:28:49","0","Question"
"78933486","78933445","","<p>You have a few errors in your code
you can try something like this</p>
<pre><code>import os
from tkinter import filedialog as fd

def select_study_file():
    study = fd.askopenfilename(initialdir=&quot;.&quot;, title=&quot;Select Study case&quot;)
    return os.path.basename(study)

study_file = select_study_file()
config_dic = {&quot;study_case&quot;: study_file}

print(config_dic)  
</code></pre>
","2024-08-30 19:26:43","2","Answer"
"78933445","","Using the name of file select by user into a dictionary in python","<p>I have a basic code, and essentially what I am trying to do is ask user to select a file. The goal is to save the name of that file as a &quot;value&quot;, and use it into a dictionary.</p>
<p>The code is below:</p>
<pre><code>from tkinter import filedialog as fd

def select_study_file():
    study = fd.askopenfilename(initialdir=cur_dir, title='Select Study case')
    study = os.path.basename(study)
select_study_file()

config_dic = {&quot;study_case&quot; : study}
</code></pre>
<p>The expected output is:</p>
<p><code>config_dic = {&quot;study_case&quot; : &quot;Name_of_the_file_selecte</code>d}</p>
","2024-08-30 19:11:23","0","Question"
"78929155","78929139","","<p>With the current code, <code>winner_bid</code> is a local variable inside <code>find_highest_bidder</code> that is updated as the loop goes, but you never do anything with it.</p>
<p>Since you're referencing it in <code>game_continue</code> it seems like you meant to have it as a global variable. That would work, but it's not the best practice. A more robust approach would be to return the entry of the highest bid and entry:</p>
<pre><code>def find_highest_bidder():
    winner_bid = None
    highest_bid = 0
    for key in empty_dictionary:
        if empty_dictionary[key] &gt; highest_bid:
            highest_bid = empty_dictionary[key]
            winner_bid = key
    return (winner_bid, highest_bid)
</code></pre>
<p>and then use them in <code>game_continue</code>:</p>
<pre class=""lang-py prettyprint-override""><code>winner_bid, highest_bid = find_highest_bidder()
</code></pre>
<p>Having said that, you don't really need the <code>find_highest_bidder</code> function. You can use Python's built-in max over the bids' items:</p>
<pre class=""lang-py prettyprint-override""><code>winner_bid, highest_bid = max(bids.items(), key=lambda x: x[1])
</code></pre>
","2024-08-29 18:12:03","3","Answer"
"78929146","78929139","","<p>PyCharm is correct.  You're assigning a value to <code>winner_bid</code>, but it's local to the function and not used anywhere else within the function.  If you were to get past that and try to print it from outside the function, it would be undefined.</p>
<p>Notice that your &quot;correct solution&quot; prints the results from within the function.</p>
","2024-08-29 18:09:08","1","Answer"
"78929139","","Finding the highest key and value in a dictionary","<p>I'm doing a task for a Python course, a 'blind auction', where each user inputs their name and bid into an empty dictionary.</p>
<p>The idea is then that you loop through the dictionary, and find the highest key and value (the 'winner' and 'bid')</p>
<p>Apparently, according to the course, you're supposed to do this using a function, which I don't quite understand, as I would simply do the for loop. I tried to do it, but it won't find the winner.</p>
<p>This is the code:
The 'winner_bid' in pycharm says: Local variable 'winner_bid' value is not used</p>
<pre><code>empty_dictionary = {}
game_continue = True

def find_highest_bidder():
    winner_bid = None
    highest_bid = 0
    for key in empty_dictionary:
        if empty_dictionary[key] &gt; highest_bid:
            highest_bid = empty_dictionary[key]
            winner_bid = key

while game_continue:
    name = input(&quot;What is your name?\n&quot;)
    bid = int(input(&quot;What is your price?\n&quot;))
    empty_dictionary[name] = bid

    continue_input = input(&quot;Are there any more bidders? Type 'yes' or 'no'\n&quot;).lower()
    if continue_input == &quot;no&quot;:
        game_continue = False
        find_highest_bidder()
        print(f&quot;The winner is {winner_bid} with a bid of {highest_bid}&quot;)
    else:
        print(&quot;\n&quot; * 20)
</code></pre>
<p>The following is the correct solution for context:</p>
<pre><code>def find_highest_bidder(bidding_record):
    highest_bid = 0
    winner = &quot;&quot;
    for bidder in bidding_record:
        bid_amount = bidding_record[bidder]
        if bid_amount &gt; highest_bid:
            highest_bid = bid_amount
            winner = bidder
    print(f&quot;The winner is {winner} with a bid of ${highest_bid}&quot;)


bids = {}
continue_bidding = True
while continue_bidding:
    name = input(&quot;What is your name?: &quot;)
    price = int(input(&quot;What is your bid?: $&quot;))
    bids[name] = price
    should_continue = input(&quot;Are there any other bidders? Type 'yes or 'no'.\n&quot;)
    if should_continue == &quot;no&quot;:
        continue_bidding = False
        find_highest_bidder(bids)
    elif should_continue == &quot;yes&quot;:
        print(&quot;\n&quot; * 20)
</code></pre>
","2024-08-29 18:07:17","0","Question"
"78921618","78921518","","<p>in VBA &quot;Scripting.Dictionary.keys&quot; property retune an array but you cant directly access an element of this array using the &quot;dict.Keys(0)&quot; , because 'keys' return's  a variant containing an array and you need to explicitly reference that array</p>
<pre><code>Dim tmp AS String

tmp = dict.Keys()(0)
</code></pre>
","2024-08-28 05:13:31","3","Answer"
"78921518","","How to assign value of dictionary key directly to another variable?","<p>I have a <code>Scripting.Dictionary</code> from which I wish to assign the value of the first key (ie the 0th element in the <code>.Keys</code> array) to aother variable.</p>
<p>I have been unable to do this without first assigning the value of the <code>Keys</code> array to another variable and then accessing the element from that other variable.</p>
<p>How can I do this in one step?</p>
<pre><code>Dim dict As Object
Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)

dict.Add Key:=&quot;a&quot;, Item:=&quot;A&quot;
dict.Add Key:=&quot;b&quot;, Item:=&quot;B&quot;
dict.Add Key:=&quot;c&quot;, Item:=&quot;C&quot;
dict.Add Key:=&quot;d&quot;, Item:=&quot;D&quot;

Dim tmp1
Dim tmp2 As String
tmp1 = dict.Keys
tmp2 = tmp1(0) 'This works


Dim tmp As String
tmp = dict.Keys(0) 'This does not work
</code></pre>
","2024-08-28 04:20:18","1","Question"
"78921375","78921307","","<p>The issue is probably because the <code>DictWriter</code> class does not include columns that are not specified in the <code>fieldnames</code> parameter.</p>
<p>Try doing this, perhaps to <code>fieldnames</code>:</p>
<pre class=""lang-py prettyprint-override""><code>fieldnames = ['Id', 'FirstName', 'LastName', 'MiddleName', 'Email']     
</code></pre>
","2024-08-28 02:53:55","4","Answer"
"78921307","","python dictionary update add","<p>I am not able to update the dictionary in python</p>
<pre><code>with open ('people.csv','r') as csv_file:
    csv_reader = csv.DictReader(csv_file)

    with open('new_people.csv', 'w',newline='') as new_file:
        fieldnames = ['Id','FirstName','LastName','MiddleName']
        csv_writer = csv.DictWriter (new_file, fieldnames=fieldnames, extrasaction = 'ignore',delimiter =',')
        csv_writer.writeheader()

        for line in csv_reader:
            line['Email'] = 'null'
            
            csv_writer.writerow(line)
</code></pre>
<p>when I open the new_people.csv I only see the ID, F/L/M names, but not the email column. please help</p>
<p>I tried to add the email key to the line before writing out the file</p>
","2024-08-28 02:15:18","1","Question"
"78917959","78917869","","<p>Short version:</p>
<pre class=""lang-cs prettyprint-override""><code>var s = string.Join(',',
    from row in data
    orderby row.Key
    select row.Key + &quot;:&quot; + string.Join(',', row.Value));
Console.WriteLine(s);
</code></pre>
<p>However, all of the <code>Join</code> / <code>Concat</code> options here would be &quot;pretty&quot; but inefficient, in that it would create multiple intermediate values - specifically, for each key, additionally:</p>
<ul>
<li>a string of the comma-separated values, i.e. <code>&quot;1,2,3,4&quot;</code></li>
<li>a string of that string composed with the key, i.e. <code>&quot;abc1:1,2,3,4&quot;</code></li>
</ul>
<p>which then need to be collected.</p>
<p>IMO, <em>just do it manually</em>:</p>
<pre class=""lang-cs prettyprint-override""><code>Dictionary&lt;string, List&lt;int&gt;&gt; data = new()
{
    [&quot;abc1&quot;] = [1, 2, 3, 4],
    [&quot;abc2&quot;] = [1, 3, 8],
    [&quot;abc3&quot;] = [3, 1, 7],
};

// TODO: possible check for `data.Count == 0`, i.e. `return &quot;&quot;;`
var sb = new StringBuilder();
bool firstKey = true;
foreach (var (key, list) in data) // possible OrderBy(x =&gt; x.Key) here
{
    if (firstKey)
    {
        firstKey = false;
    }
    else
    {
        sb.Append(',');
    }
    sb.Append(key).Append(':');
    bool firstVal = true;
    foreach (var val in list)
    {
        if (firstVal)
        {
            firstVal = false;
        }
        else
        {
            sb.Append(',');
        }
        sb.Append(val);
    }
}
var s = sb.ToString();
Console.WriteLine(s);
</code></pre>
<p>Also note that dictionaries are by nature unordered, so the <em>keys</em> might not appear in the order you expect; the <em>values within each key</em>, however, will remain ordered.</p>
","2024-08-27 08:53:35","1","Answer"
"78917912","78917869","","<p>Output like yours happens, when you invoke <code>ToString</code> method on collections (dictionary in your case). Below you can find correct code and compare to it:</p>
<pre class=""lang-cs prettyprint-override""><code>var dict = new Dictionary&lt;string, List&lt;int&gt;&gt;()
{
    [&quot;abc1&quot;] = [1,2,3,4],
    [&quot;abc3&quot;] = [3,1,7],
    [&quot;abc2&quot;] = [1,3,8],
};

var result = string.Join(
    &quot;, &quot;, 
    dict
        .OrderBy(x =&gt; x.Key)
        .Select(x =&gt; $&quot;{x.Key}:{string.Join(&quot;,&quot;, x.Value)}&quot;));
</code></pre>
<p>Here you can find <a href=""https://dotnetfiddle.net/AqtGI5"" rel=""nofollow noreferrer"">working example</a>.</p>
","2024-08-27 08:42:54","0","Answer"
"78917869","","Apply string. join on Dictionary<string, List<int>>","<p>I have situation where i have a dictionary of type <code>Dictionary&lt;string, List&lt;int&gt;&gt;</code> . I would like to apply sting.Join to it, I would like to have data displayed like:</p>
<pre><code>&quot;abc1:1,2,3,4,abc2:1,3,8,abc3:3,1,7&quot; 
</code></pre>
<p>what i tried is this :</p>
<pre><code>$&quot;{string.Join(&quot;, &quot;, iformation.OrderBy(x =&gt; x.Key).Select(x =&gt; x.Key + &quot;: &quot; + string.Join(&quot;,&quot;, x.Value.ToArray())))}&quot;;
</code></pre>
<p>The output was :</p>
<pre><code>System.Collections.Generic.Dictionary`2+KeyCollection[System.String,System.Collections.Generic.List`1[System.Int32]]:
</code></pre>
<p>can somebody help me with what i want to achieve ?</p>
","2024-08-27 08:32:59","-2","Question"
"78916556","78916535","","<p>You don't provide a lot of context, so assumptions have to be made:</p>
<ul>
<li>you mention a list, so there may be more than 2 dictionaries</li>
<li>you provide two identically structured dictionaries, so we may assume that is a rule for all dictionaries</li>
</ul>
<p>Under those assumptions, the solution is quite straightforward:</p>
<pre><code>dict1 = {&quot;num&quot;: {&quot;a&quot;: 1, &quot;b&quot;: 2}, &quot;fruit&quot;: &quot;banana&quot;}
dict2 = {&quot;num&quot;: {&quot;a&quot;: 3, &quot;b&quot;: 4}, &quot;fruit&quot;: &quot;apple&quot;}


def merge_dicts(ds: list[dict]) -&gt; dict:
    return {
        k: (
            merge_dicts([d[k] for d in ds]) if isinstance(v, dict)
            else [d[k] for d in ds]
        ) for k, v in ds[0].items()
    }


merged_dict = merge_dicts([dict1, dict2])
print(merged_dict)
</code></pre>
<p>Note: <code>for k, v in ds[0].items()</code> only loops over the items of the first dictionary in the list, since the assumption is that all dictionaries are structured the same (when it comes to dictionary values vs. other types) and have the same keys.</p>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>{'num': {'a': [1, 3], 'b': [2, 4]}, 'fruit': ['banana', 'apple']}
</code></pre>
","2024-08-26 23:09:04","0","Answer"
"78916535","","How to do item-wise concatenation of dictionaries","<p>Suppose I have two dictionaries with the same structure (unknown a-priori):</p>
<pre><code>dict1 = {&quot;num&quot;: {&quot;a&quot;: 1, &quot;b&quot;: 2}, &quot;fruit&quot;: &quot;banana&quot;}
dict2 = {&quot;num&quot;: {&quot;a&quot;: 3, &quot;b&quot;: 4}, &quot;fruit&quot;: &quot;apple&quot;}
</code></pre>
<p>How can I merge a list of such dictionaries into a single dict like</p>
<pre><code>merged_dict = {&quot;num&quot;: {&quot;a&quot;: [1, 3], &quot;b&quot;: [2, 4]}, &quot;fruit&quot;: [&quot;banana&quot;, &quot;apple&quot;]}
</code></pre>
","2024-08-26 22:59:21","-2","Question"
"78915257","78907646","","<p>I discovered that using a nested loop configuration is the best approach to handle this situation.</p>
<p>I implemented the following solution:</p>
<p>Outer Loop: I use include_tasks to call another task file and loop over each switch.</p>
<p>Inner Loop: In the inner loop, I calculate the length of the list and then iterate over the list elements.</p>
<p>This approach was inspired by this YouTube video [Using Nested Loops In Ansible], which was very helpful in solving the issue.</p>
<p><a href=""https://www.youtube.com/watch?v=89Yhc4P_Ggc&amp;lc=Ugx48QKBqkZWx1zWN9B4AaABAg.A7_XCM8LlODA7a3V9_r4_L"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=89Yhc4P_Ggc&amp;lc=Ugx48QKBqkZWx1zWN9B4AaABAg.A7_XCM8LlODA7a3V9_r4_L</a></p>
<pre><code>  outer loop task:
- name: Include task for nested loop
  include_tasks: ./inner_loop.yml
  loop: &quot;{{ cdp_lldp_by_switch | dict2items }}&quot;
  loop_control:
    loop_var: current_switch


  inner loop task:
- name: Set port list length
  set_fact:
    port_len: &quot;{{ current_switch.value | length | default(0) }}&quot;

- name: Print out inner loop
  debug:
    msg: &quot;{{ current_switch.value[item].value.lldp.systemName | default('none') }}:{{ current_switch.value[item].value.lldp.sourcePort | default('none') }}&quot;
  loop: &quot;{{ range(0, port_len | int) }}&quot;
  loop_control:
    loop_var: item
</code></pre>
","2024-08-26 15:37:19","-1","Answer"
"78907646","","How to Iterate Over Nested Lists of Varying Length in Ansible Loop?","<p>When trying to iterate over this data from an ansible debug output I'm only able to iterate over the first element of the index which is zero 0.  I would like to iterate over all of the elements.  Below is a sample of the output coming out of ansible and below the output is the ansible tasks I'm working with.</p>
<pre><code>{
    &quot;ansible_loop_var&quot;: &quot;item&quot;,
    &quot;item&quot;: {
        &quot;key&quot;: &quot;SwitchName&quot;,
        &quot;value&quot;: [
            {
                &quot;key&quot;: &quot;1&quot;,
                &quot;value&quot;: {
                    &quot;cdp&quot;: {
                        &quot;address&quot;: &quot;192.168.16.225&quot;,
                        &quot;deviceId&quot;: &quot;482ef8200&quot;,
                        &quot;portId&quot;: &quot;Port C9300&quot;,
                        &quot;sourcePort&quot;: &quot;1&quot;
                    },
                    &quot;lldp&quot;: {
                        &quot;managementAddress&quot;: &quot;192.168.16.225&quot;,
                        &quot;portId&quot;: &quot;2&quot;,
                        &quot;sourcePort&quot;: &quot;1&quot;,
                        &quot;systemName&quot;: &quot;**LAB-Remote-1**&quot;
                    }
                }
            },
            {
                &quot;key&quot;: &quot;4&quot;,
                &quot;value&quot;: {
                    &quot;cdp&quot;: {
                        &quot;address&quot;: &quot;10.22.89.16&quot;,
                        &quot;deviceId&quot;: &quot;12efa487400&quot;,
                        &quot;portId&quot;: &quot;Port 1&quot;,
                        &quot;sourcePort&quot;: &quot;4&quot;
                    },
                    &quot;lldp&quot;: {
                        &quot;managementAddress&quot;: &quot;10.22.89.16&quot;,
                        &quot;portId&quot;: &quot;1&quot;,
                        &quot;sourcePort&quot;: &quot;4&quot;,
                        &quot;systemName&quot;: &quot;C9300&quot;
                    }
                }
            },
            {
                &quot;key&quot;: &quot;5&quot;,
                &quot;value&quot;: {
                    &quot;cdp&quot;: {
                        &quot;address&quot;: &quot;172.16.254.56&quot;,
                        &quot;deviceId&quot;: &quot;f43fc84af710&quot;,
                        &quot;portId&quot;: &quot;Port 1&quot;,
                        &quot;sourcePort&quot;: &quot;5&quot;
                    },
                    &quot;lldp&quot;: {
                        &quot;managementAddress&quot;: &quot;172.16.254.56&quot;,
                        &quot;portId&quot;: &quot;1&quot;,
                        &quot;sourcePort&quot;: &quot;5&quot;
                    }
                }
            },
            {
                &quot;key&quot;: &quot;6&quot;,
                &quot;value&quot;: {
                    &quot;cdp&quot;: {
                        &quot;address&quot;: &quot;10.254.255.216&quot;,
                        &quot;deviceId&quot;: &quot;4835187cff00&quot;,
                        &quot;portId&quot;: &quot;Port 50&quot;,
                        &quot;sourcePort&quot;: &quot;6&quot;
                    },
                    &quot;lldp&quot;: {
                        &quot;managementAddress&quot;: &quot;10.254.255.216&quot;,
                        &quot;portId&quot;: &quot;50&quot;,
                        &quot;sourcePort&quot;: &quot;6&quot;
                    }
                }
            }
        ]
    }
}
</code></pre>
<p>Here is the code that I'm using looks like and in my task example I'm printing the 0 index of the list, and it returns the data fine, but I want to print all elements of the list, and the list size will vary.</p>
<pre><code>- name: print out lldp port data
  debug:
    var: item.value.0.value.lldp.systemName
  loop: &quot;{{cdp_lldp_by_switch | dict2items}}&quot;
</code></pre>
<p>This task will print out <strong>LAB-Remote-1</strong> since its 0 in the list.</p>
","2024-08-23 21:50:25","-2","Question"
"78904471","78904263","","<p>Here is another option that can be used if the values can be sorted.</p>
<pre class=""lang-py prettyprint-override""><code>import itertools

def group_by_value(b):
    return [
        (value, list(keys))
        for value, keys in itertools.groupby(sorted(b.keys(), key=b.get), key=b.get)
    ]
</code></pre>
<p>However, this is an <code>O(n log n)</code> solution because it needs to sort the dictionary values. If the values are hashable, I would prefer Derek Roberts's solution (which should be <code>O(n)</code>).</p>
","2024-08-23 05:52:57","1","Answer"
"78904411","78904263","","<p>Why not go for <code>defaultdict</code> it is proven to be quite efficient and faster and you dont have to worry about getting errors such as the famous <code>KeyError</code>..</p>
<p>Ref: <a href=""https://stackoverflow.com/questions/12555967/is-the-defaultdict-in-pythons-collections-module-really-faster-than-using-setde"">Stackoverflow_old_question</a></p>
<p>I am not sure but python lawyers might have me for this and also <code>tuple</code> my guess is that your <code>b1, b2, b3</code> needs to be immutable, I would go for this implementation which provides readability</p>
<pre><code>from collections import defaultdict

b = {
    'a1': ['b1', 'b2', 'b3'],
    'a2': ['b1', 'b2', 'b3'],
    'a3': ['b4', 'b5', 'b6'],
    'a4': ['b4', 'b5', 'b6']
}

# group keys with collections
group_keys = defaultdict(list)

for k, v in b.items():
    group_keys[tuple(v)].append(k)

# make use of packing
ans = [(v, [*k]) for k, v in group_keys.items()]

print(ans)


</code></pre>
<p>clean result:</p>
<pre><code>[(['a1', 'a2'], ['b1', 'b2', 'b3']), (['a3', 'a4'], ['b4', 'b5', 'b6'])]

</code></pre>
<p>Bench mark testing:</p>
<pre><code>Average Execution Time for the code above:    1.921582967042923e-06 seconds
Average Execution Time for large dataset:     0.01955163748934865 seconds
Average Execution Time for larger dataset:    2.0231823625043033 seconds

</code></pre>
<p>Taking advise from @nocomment:</p>
<p>If you are using python --version : 3.12, this should also work nicely</p>
<pre><code>for k, v in b.items():
    group_keys[*v].append(k)

# make use of packing
ans = [(v, [*k]) for k, v in group_keys.items()]

print(ans)
</code></pre>
","2024-08-23 05:31:22","1","Answer"
"78904284","78904263","","<p>In general, grouping keys by values can be efficiently done by creating a reverse mapping with values as keys and keys as values.</p>
<p>However, since dict keys must be hashable, certain transformations have to be made if some dict values are not readily hashable. In the particular case of your sample input, all the dict values are lists of strings so while they aren't hashable, they can easily be made hashable by converting the lists to tuples.</p>
<p>But in many real-world cases where dict values are of more complex data structures and can't be made hashable easily, a more generic approach would be to serialize the values with <a href=""https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled"" rel=""nofollow noreferrer""><code>pickle</code></a> or the more powerful third-party package <a href=""https://pypi.org/project/dill/"" rel=""nofollow noreferrer""><code>dill</code></a>:</p>
<pre><code>import pickle

dupes = {}
for key, value in b.items():
    dupes.setdefault(pickle.dumps(value), []).append(key)
print([(keys, pickle.loads(value)) for value, keys in dupes.items()])
</code></pre>
<p>This outputs:</p>
<pre><code>[(['a1', 'a2'], ['b1', 'b2', 'b3']), (['a3', 'a4'], ['b4', 'b5', 'b6'])]
</code></pre>
<p>Demo <a href=""https://ato.pxeger.com/run?1=fZBNCsIwEIVxm1PMLgnEQP1DBU9SukhNisH-hCYRRHoSN270UJ5Gk1RwIWYxZPjmzRve9WHO7tC1t9vdu2q6fk42JezggkWGt5DjMsMMcDmLdY4LhiA8LGb_8TzhRQTLWFdfePETJzogpBvT9Q6M3h9rhZD0Rtlw1YCqroejOjM4idor0C2UXDvVWEK3UR5nuVVOqkr42pG0hEvfGEuiijLIC8qFMaqV5L2NItPr1pE8NJaNvrzuhPxIKATn-GfhABusk9doX9CU4BjkJ9AX"" rel=""nofollow noreferrer"">here</a></p>
<p>In the event where dict values are not all picklable and can be compared to only on equality, you would have to settle with the less efficient equality tests like your code already does, although you can at least minimize the number of comparisons needed by instead iteratively appending key with a matching value to an existing key list or creating a new key list when a match is not found:</p>
<pre><code>dupes = []
for key, value in b.items():
    for keys, dupe in dupes:
        if value == dupe:
            keys.append(key)
            break
    else:
        dupes.append(([key], value))
print(dupes)
</code></pre>
<p>which produces the same output.</p>
<p>Demo <a href=""https://ato.pxeger.com/run?1=fZBLCoMwEIbpNqeYXQxYwUdLEbxBbyAuEoxUtDH4KEjpSbpx0x6qp6kZlVooncUQ8v0fM8z9qfv2VKlheHRttj28NkcBEVwpd2kIMRUutYEKD7tPE5uAKcq9_9ifcIBgh32_wsFPPNEbIWmnZTOuESckq2ooZG_DhZedhFyBcPJWnhuLhZifA40NxjIBtCdoKs9mN4oQfYgpozpca6lSa3yzLyhqyQv8kWWzEnHCYlnx6CXzgowRXeeqtTDCpqPOt11u_AY"" rel=""nofollow noreferrer"">here</a></p>
","2024-08-23 04:17:42","0","Answer"
"78904263","","Better way to get list of keys which has the same value from a output dict","<p>I'm trying to get all keys from a python dict which has the same value. as part of this, I have made the below attempt and it works. but checking if there is a neater way to do this.
I have gone through the thread <a href=""https://stackoverflow.com/questions/42438808/finding-all-the-keys-with-the-same-value-in-a-python-dictionary"">Finding all the keys with the same value in a Python dictionary</a></p>
<pre><code>b = {'a1': ['b1', 'b2', 'b3'],
     'a2': ['b1', 'b2', 'b3'],
     'a3': ['b4', 'b5', 'b6'],
     'a4': ['b4', 'b5', 'b6']
     }
c = []
for i in b.values():
    if i not in c:
        c.append(i)

f = list()
for i in c:
    print(i)
    e = [k for k, v in b.items() if v == i]
    print(e)
    f.append((i, e))
print(f)

</code></pre>
<p>This gives the output as:</p>
<p><code>[(['a1', 'a2'], ['b1', 'b2', 'b3']), (['a3', 'a4'], ['b4', 'b5', 'b6'])]</code></p>
","2024-08-23 04:05:34","2","Question"
"78902533","78893444","","<p>The solution below will update a dictionary in the following circumstances -</p>
<ul>
<li>The whole key exists, e.g. <code>master_config = {'a': {'aa': 'AAA'}}</code> and <code>settings = ['a.aa=AAA']</code>.</li>
<li>The key partially exists, e.g. <code>master_config = {'b': 'BBB'}</code> and <code>settings = ['a.aa=AAA']</code>.</li>
<li>The key does not exist at all, e.g. <code>master_config = {}</code> and <code>settings = ['c.cc=CCC']</code>.</li>
</ul>
<p>Note that settings are read in order, so if the key in <code>settings[0]</code> is overwritten by the key in <code>settings[1]</code>, it will be the key/value defined as <code>settings[1]</code> that will appear in the dictionary.</p>
<pre class=""lang-py prettyprint-override""><code>def update_dict_value(obj: any, keys: list, value: any=None) -&gt; None:
    '''Update the value of a key in a dictionary.

    :param obj: The dictionary object to update.
    :param keys: A list elements that make up the key. For elements
    that do not exist or are not a dict, an empty dict will be created.
    :param value: The value to apply to the key in the dict.
    '''

    if not isinstance(obj, dict):
        raise TypeError(&quot;Object to update must be &lt;class 'dict'&gt;.&quot;)

    # If there is only one key in `keys`, simply set the `value`.
    if len(keys) == 1:
        obj[keys[0]] = value

    # Otherwiase we're dealing with nested keys.
    else:
        # Ensure the key is a dictionary. It may not be if -
        #  - This is a new key `obj`.
        #  - The key exists in `obj`, but is not a dictionay.
        if obj.get(keys[0]) is None or not isinstance(obj[keys[0]], dict):
            obj[keys[0]] = {}

        # Recursivly call this function.
        update_dict_value(obj[keys[0]], keys[1:], value)

master_config = {'a': {'aa': 'AAA'}, 'b': 'BB'}
settings = ['a.aa=AAA', 'b.bb=BBB', 'c.cc=CCC']

for setting in settings:
    k, v = setting.split('=', 1)
    ks = k.split('.')
    update_dict_value(master_config, ks, v)

print(master_config)
</code></pre>
","2024-08-22 16:10:57","1","Answer"
"78899710","78899645","","<p>Something like this perhaps...</p>
<pre class=""lang-python prettyprint-override""><code>keys = []
values = []
for item in text.split(&quot;\n&quot;):
    if item.endswith(':'):
        keys.append(item[:-1])
        values.append([])
    else:
        values[-1].append(item)
d = dict(zip(keys, values))
print(d)
</code></pre>
<p>Output</p>
<pre class=""lang-none prettyprint-override""><code>{'Text1': ['Text'], 'Text2': ['Text', 'Text'], 'Text3': ['Text']}
</code></pre>
<p>If you don't like the lists of strings in the output, you can replace the last line with:</p>
<pre><code>d = {key: ' '.join(values) for key, values in zip(keys, values)}
</code></pre>
<p>Output</p>
<pre class=""lang-none prettyprint-override""><code>{'Text1': 'Text', 'Text2': 'Text Text', 'Text3': 'Text'}
</code></pre>
","2024-08-22 03:41:38","0","Answer"
"78899694","78899645","","<p>Just take it in steps.</p>
<p>Break up the string:</p>
<pre><code>text = 'Text1:/nText/nText2:/nText/nText/nText3:/nText'
parts = text.split('/n')  # assuming `/n` was not a typo
</code></pre>
<p>The parts ending in <code>:</code> will be a new key, anything else gets added together as the value of the current key:</p>
<pre><code>current_key = None
d = {}
for p in parts:
    if p[-1] == ':':
        current_key = p[:-1]
        d[current_key] = ''
    else:
        if current_key is None:
            raise Exception('The first part of text should be a key!')
        # add the first part, or any following part with a space before it
        d[current_key] += p if not d[current_key] else f' {p}'
</code></pre>
<p>That gets you what you're asking for:</p>
<pre><code>print(d)
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>{'Text1': 'Text', 'Text2': 'Text Text', 'Text3': 'Text'}
</code></pre>
<p>There are shorter solutions, but perhaps not as readable. You could also take the above and spell it out a bit more, but I figured this struck a balance.</p>
<p>This example creates a dictionary, but of course the data type of <code>d</code> is not the key thing here.</p>
<p>If you're looking for something a bit more concise (but harder to understand):</p>
<pre><code>text = 'Text1:/nText/nText2:/nText/nText/nText3:/nText'

parts = text.split('/n')
inds = [i for i, s in enumerate(parts) if s.endswith(':')] + [len(parts)]

result = {parts[i][:-1]: ' '.join(parts[i+1:j] for i, j in zip(inds, inds[1:])}
print(result)
</code></pre>
<p>This splits the text into parts like the first example, but then finds the indices of all the parts that end in <code>':'</code> and constructs the dictionary by taking each element at such an index (except for the colon) as a key and everything up to the next index joined into a value. The <code>zip()</code> pairs each index with the next and the last with the length of <code>parts</code>, which is why it was added to the list of indices.</p>
","2024-08-22 03:31:41","1","Answer"
"78899645","","Split a string with multiple required delimiters","<p>I have the following string</p>
<pre><code>Text1:/nText/nText2:/nText/nText/nText3:/nText
</code></pre>
<p>I'm trying to split it into a dictionary where any line with a &quot;:&quot; is key and anything without that is in value.</p>
<p>IE..</p>
<pre><code>{&quot;Text1&quot;:&quot;Text&quot;,&quot;Text2&quot;:&quot;Text Text&quot;,&quot;Text3&quot;:&quot;Text&quot;}
</code></pre>
<p>I thought maybe I could split every /n into a dictionary with <code>enumerate</code> but that didn't work in a way that I could match <code>k:v</code> (in the example above it became offset.</p>
<p>This is specifically what I had tried:</p>
<pre><code>infodict = {k+1: v for k, v in enumerate(infostr.split(&quot;:&quot;))}
</code></pre>
<p>In my head this is like the opposite of splitting on multiple delimiters, there are two required delimiters <code>/n</code> and <code>:</code> and both must be present for the <code>split()</code>.</p>
<p>Downstream this data gets added into a larger dataframe, so if there is a different data structure that is more pythonic I don't need to put this into a dictionary in particular.</p>
","2024-08-22 03:03:01","-4","Question"
"78893486","78893444","","<p>Work backwards to create the nested dict and then update your <code>master_config</code></p>
<pre><code>k = 'a'
v = 'ddd'

ks = k.split('.')[::-1]

master_config = {}

if len(ks) == 1:
    master_config[k] = v
else:
    nested_dict = {ks[0]: v}
    for x in ks[1:]:
        nested_dict = {x: nested_dict}
    
    master_config.update(nested_dict)
</code></pre>
<p>Edit: New solution using a recursive function to deal with key collisions. It will attempt to update the deepest key that stores a dictionary. If the key does not exist or the value is not a dictionary, it will overwrite instead.</p>
<pre><code>k = 'foo.buzz'
v = 'fizz'

ks = k.split('.')

master_config = {'foo': {'bar': 'fizz'}}

def update(config, *args):
    if len(args) == 2:
        k, v = args
        config[k] = v
    else:
        k, *args = args
        if k not in config or not isinstance(config[k], dict):
            config[k] = {}

        return update(config[k], *args)

update(master_config, *(ks + [v]))
</code></pre>
","2024-08-20 16:19:22","1","Answer"
"78893444","","Translate a python string such as 'a.b.c=v' into a dictionary","<p>How can I read a 'key=value' strings such as <code>['foo=bar', 'a.b.c=ddd']</code> and translate them in to a dictionary? The dictionary should either be updated if the key already exists, or have the new key added if it doesn't.</p>
<p>The example given in the paragraph above should translate to the following...</p>
<pre class=""lang-py prettyprint-override""><code>{'foo': 'bar', 'a': {'b': {'c': 'ddd'}}}
</code></pre>
<p>But it is instead translates to this incorrect dictionary...</p>
<pre class=""lang-py prettyprint-override""><code>{'foo': 'bar', 'a': {}, 'b': {}, 'c': 'ddd'}
</code></pre>
<p>How can I fix the code in the example under the comment 'Set the master config value for the current setting'?</p>
<h4>Example Code</h4>
<pre class=""lang-py prettyprint-override""><code>### For context - in reality I use an argument parser with two args.
###   --config-file - Path to a YAML configuration file. If present,
###     this file will be read into Python as a dictionary called
###     `master_config`. If not, an empty dictionary of the same name
###     will be created.
###   --configs - Single 'key=value' settings that will be read into
###     `master_config` and either override settings defined in the
###     YAML configuration file, or set a value.

master_config = {'foo': 'baz'}
configs = ['foo=bar', 'a.b.c=ddd']

for config in configs:

    # Split the setting into key and value.
    k, v = config.split('=', 1)

    # Split the key, if it's nested.
    ks = k.split('.')

    # Set the master config value for the current setting.
    l = len(ks)
    for i, x in enumerate(ks):
        if i != l-1:
            if not master_config.get(x):
                master_config[x] = {}
        else:
            master_config[x] = v

print(master_config)
</code></pre>
","2024-08-20 16:08:38","-1","Question"
"78890646","78890580","","<p>Try this example code to access the keys and values of your construct:</p>
<pre><code>if let index = bookOptions.firstIndex(where: { $0[&quot;synopsis&quot;] != nil })  {
     print(bookOptions[index])
     print(bookOptions[index].keys)
     print(bookOptions[index].values)
 }
</code></pre>
<p>Or:</p>
<pre><code>if let index = bookOptions.firstIndex(where: { $0[&quot;synopsis&quot;] != nil }),
    let test = bookOptions[index].first {
    print(test)
    print(test.key)
    print(test.value)
}
</code></pre>
","2024-08-20 04:41:02","0","Answer"
"78890580","","Trying to pass array of dictionaries from one view to second view swift","<p>Trying to pass array of dictionaries from view A to second view B in swift.</p>
<p>In view A, using a hidden navigation link in the view to push view B and send arrayMergeT100 to view B</p>
<pre><code>@State var arrayMergeT100 = [[String:Any]]()

NavigationLink(destination:ShowBookChoices(bookOptions: self.$arrayMergeT100),
           isActive: self.$pushActive) {
             EmptyView()
        }.hidden()
</code></pre>
<p>View B, trying to access values for key &quot;synopsis&quot; and getting two errors on this line &quot;if let index = bookOptions.index(forKey: &quot;synopsis&quot;)  {&quot;.  Error 1- Incorrect argument label in call (have 'forKey:', expected 'where:') and Error 2-Cannot convert value of type 'String' to expected argument type '([String : Any]) throws -&gt; Bool'.   Changing forKey: to where: does not make Error2 go away</p>
<pre><code>struct ShowBlindDateChoices: View {
    @Binding public var bookOptions: [[String:Any]]
    var body: some View {
                VStack{
                    if let index = bookOptions.index(forKey: &quot;synopsis&quot;)  {
                        let _ = print(bookOptions[index].key, &quot;:&quot;, bookOptions[index].value)
                    }
</code></pre>
","2024-08-20 04:03:25","0","Question"
"78886548","78885148","","<p>I'm sure there are many ways to solve this. One way is iterate over the data printing out the number of entries for the  page size (e.g. 10) and then wait for user key press. Then only exit the loop once the data is exhausted.</p>
<p>I've created the following example which generates data of random length for testing purposes:</p>
<pre class=""lang-py prettyprint-override""><code>import random
start = 1
# Generate content of fixed length for testing
# length = 20
# Generate content of variable length for testing
length = random.randint(5, 40)
data = range(start, start + length)

print(f&quot;Created data {len(data)} long\n&quot;)

PAGE_SIZE = 10

def pages_needed(data_len):
    max_page = data_len // PAGE_SIZE
    if data_len % PAGE_SIZE &gt; 0:
        max_page += 1
    return max_page


page_number = 0
data_available = len(data) &gt; 0


while data_available:
    page_start = page_number * PAGE_SIZE
    page_end = min((page_number * PAGE_SIZE) + PAGE_SIZE, len(data))
    total_pages = pages_needed(len(data))
    for entry in data[page_start:page_end]:
        print(f&quot;\t{entry}&quot;)
    page_number += 1
    if page_number &gt;= total_pages:
        data_available = False
    else:
        input(&quot;Press &lt;return&gt; for the next page of data&quot;)

</code></pre>
<p>Which gave me the following output:</p>
<pre class=""lang-none prettyprint-override""><code>Created data 17 long

    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
Press &lt;return&gt; for the next page of data
    11
    12
    13
    14
    15
    16
    17
</code></pre>
","2024-08-19 06:26:33","0","Answer"
"78885148","","Python iterate every 10 items on button press","<p>I'm struggling trying to iterate every 10 items</p>
<p>So if the list is bellow 10 items it goes perfectly well of curse</p>
<p>If the list is bigger then for every y pressed I want to show the next 10 items like a next page button and also not blowing at the end if I try to get the last 10 items and there's only 5 left</p>
<p>typing y to do next page and any other key previous page</p>
<p>Also note that this is not the real problem. The real one I'm facing is within curses module but I tried to simplify and even that I can't</p>
<pre><code>display = 0
list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

while True:
    # tried this but I need button press
    
    # for i in range(0, len(list), 10):
    #     print(*list[i:i+10])
        

    if len(list) &lt;= 10:
        for i in list:
            print(i)
    else:
        for i in range((display * 10), ((display * 10) + 10) ):
            print(list[i])
            
    np = input()
    if np == 'y':
        display += 1
        # here something that would prevent the next page when there is no more items
    else:
        if display == 0:
            display = 0
        else:
            display -= 1
</code></pre>
","2024-08-18 16:40:19","-1","Question"
"78883563","78883514","","<p>If the key is always 3 bytes, it seems like a <a href=""https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-tuples"" rel=""nofollow noreferrer""><code>ValueTuple</code></a> is appropriate.</p>
<pre><code>Dictionary&lt;(byte, byte, byte), object&gt; table;
</code></pre>
<pre><code>table.Add((1,2,3), new object());
</code></pre>
<p>Unlike a <code>byte[]</code>, <code>ValueTuple</code> is a value type, so it won't cause additional heap allocations when you access the dictionary.</p>
<p>You can also pack the 3 bytes inside an <code>int</code> with bit shifts. This might be faster than a value tuple.</p>
<pre><code>byte b1 = ...;
byte b2 = ...;
byte b3 = ...;
int key = (b1 &lt;&lt; 16) | (b2 &lt;&lt; 8) | b3;

Dictionary&lt;int, object&gt; table = new();
table.Add(key, new object());
</code></pre>
","2024-08-18 01:13:00","4","Answer"
"78883514","","What is the most efficient way to key a xyz pair in a C# dictionary?","<p>I have a bunch of objects with xyz pairs (bytes) that I need to add to a dictionary.  It's in the tens of thousands and I'm not sure what the most efficient way would be to go about it.</p>
<p>Would something like this work?</p>
<pre><code>Dictionary&lt;int, Object&gt; table;

table.Add(new byte[3]{ x, y, z }.GetHashCode(), object);
</code></pre>
<p>Or would it be better to use a byte[3] and an equality comparer?</p>
","2024-08-18 00:25:04","1","Question"
"78883008","78874563","","<p>There are several ways to achieve this, I would like to show you 2 different ones, as both have advantages and disadvantages.</p>
<p>Your initial data</p>
<pre class=""lang-yaml prettyprint-override""><code>vars:
  dependencies:
    - Name: 'SqlServer'
      Source: 'psgallery'
      Type: 'psmodule'
    - Name: 'SqlServerDsc'
      Source: 'psgallery'
      Type: 'dscmodule'
    - Name: 'AWSPowershell.NetCore'
      Source: 'psgallery'
      Type: 'psmodule'
    - Name: 'ComputerManagementDsc'
      Source: 'psgallery'
      Type: 'dscmodule'
    - Name: mssql_2022_standard_en
      Source: 'S3'
      Type: 'iso'
      Bucket: 'repository'
    - Name: 'AnotherDependency_notFromS3'
      Source: 'psgallery'
      Type: 'dscmodule'

  service_secrets:
    Access_key_id: abc
    Access_key_secret: defghi
    Bucket: repository
    Endpoint: https://s3.abc.com
</code></pre>
<h2>Variant 1 - split by Source, enrich and recombine</h2>
<p>Can be implemented in a single task without having to prepare the data in a separate task. First, your <code>dependencies</code> list is split into elements <code>Source == 'S3'</code> yes or no.</p>
<p>The splitting works with the <a href=""https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.rejectattr"" rel=""nofollow noreferrer""><code>rejectattr()</code></a> or <a href=""https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.selectattr"" rel=""nofollow noreferrer""><code>selectattr()</code></a> functions. The elements whose attribute <code>Source == 'S3'</code> are either rejected or filtered out (selected).</p>
<p>For all elements whose source is S3, the service_secrets are added. The service_secrets are added using <a href=""https://jinja.palletsprojects.com/en/3.1.x/templates/#jinja-filters.map"" rel=""nofollow noreferrer""><code>map()</code></a>, whereby a <a href=""https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_filters.html#combining-hashes-dictionaries"" rel=""nofollow noreferrer""><code>combine(service_secrets)</code></a> is performed for each element in the list.</p>
<p>The two separate lists are then appended together again.</p>
<p>I see this as the Ansible way to implement this. The disadvantage is that your <code>dependencies</code> list may then have a different sort order than at the beginning. Compare the sort order of both results. However, if the order does not matter, I would recommend this method.</p>
<p><strong>Task code</strong></p>
<pre class=""lang-yaml prettyprint-override""><code>- name: Variant 1 - split by Source, enrich and recombine
  debug:
    msg: &quot;{{ dependencies_not_s3 + dependencies_s3 }}&quot;
  vars:
    dependencies_not_s3: &quot;{{ dependencies | rejectattr('Source', 'eq', 'S3') }}&quot;
    dependencies_s3: &quot;{{ dependencies | selectattr('Source', 'eq', 'S3') | map('combine', service_secrets) }}&quot;
</code></pre>
<p><strong>Result</strong></p>
<pre><code>TASK [Variant 1 - split by Source, enrich and recombine] ************
ok: [localhost] =&gt; {
    &quot;msg&quot;: [
        {
            &quot;Name&quot;: &quot;SqlServer&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;psmodule&quot;
        },
        {
            &quot;Name&quot;: &quot;SqlServerDsc&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;dscmodule&quot;
        },
        {
            &quot;Name&quot;: &quot;AWSPowershell.NetCore&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;psmodule&quot;
        },
        {
            &quot;Name&quot;: &quot;ComputerManagementDsc&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;dscmodule&quot;
        },
        {
            &quot;Name&quot;: &quot;AnotherDependency_notFromS3&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;dscmodule&quot;
        },
        {
            &quot;Access_key_id&quot;: &quot;abc&quot;,
            &quot;Access_key_secret&quot;: &quot;defghi&quot;,
            &quot;Bucket&quot;: &quot;repository&quot;,
            &quot;Endpoint&quot;: &quot;https://s3.abc.com&quot;,
            &quot;Name&quot;: &quot;mssql_2022_standard_en&quot;,
            &quot;Source&quot;: &quot;S3&quot;,
            &quot;Type&quot;: &quot;iso&quot;
        }
    ]
}
</code></pre>
<h2>Variant 2 - iterate over dependencies</h2>
<p>In the second variant, you iterate over the <code>dependencies</code> list as the initial set and create a new list using the <a href=""https://docs.ansible.com/ansible/latest/collections/ansible/builtin/set_fact_module.html"" rel=""nofollow noreferrer""><code>set_fact</code> module</a>. Depending on the source, the new item is first enriched with the service_secrets.</p>
<p>An iteration step of a task is required for each entry in the <code>dependencies</code> list, but this ensures that the original sort order of the <code>dependencies</code> list is retained.</p>
<p>Be careful if you do this several times for different dependencies lists that you start with an empty new variable.</p>
<p><strong>Task code</strong></p>
<pre class=""lang-yaml prettyprint-override""><code>- name: Variant 2 - iterate over dependencies
  set_fact:
    extended_dependencies: &quot;{{ (extended_dependencies | default([])) + [new_item] }}&quot;
  vars:
    new_item: &quot;{{ item | combine(service_secrets) if item.Source == 'S3' else item }}&quot;
  with_items: &quot;{{ dependencies }}&quot;

- name: Print result from Variant 2
  debug:
    var: extended_dependencies
</code></pre>
<p><strong>Result</strong></p>
<pre><code>TASK [Variant 2 - iterate over dependencies] **************************************************************************
ok: [localhost] =&gt; (item={'Name': 'SqlServer', 'Source': 'psgallery', 'Type': 'psmodule'})
ok: [localhost] =&gt; (item={'Name': 'SqlServerDsc', 'Source': 'psgallery', 'Type': 'dscmodule'})
ok: [localhost] =&gt; (item={'Name': 'AWSPowershell.NetCore', 'Source': 'psgallery', 'Type': 'psmodule'})
ok: [localhost] =&gt; (item={'Name': 'ComputerManagementDsc', 'Source': 'psgallery', 'Type': 'dscmodule'})
ok: [localhost] =&gt; (item={'Name': 'mssql_2022_standard_en', 'Source': 'S3', 'Type': 'iso', 'Bucket': 'repository'})
ok: [localhost] =&gt; (item={'Name': 'AnotherDependency_notFromS3', 'Source': 'psgallery', 'Type': 'dscmodule'})

TASK [Print result from Variant 2] ************************************************************************************
ok: [localhost] =&gt; {
    &quot;extended_dependencies&quot;: [
        {
            &quot;Name&quot;: &quot;SqlServer&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;psmodule&quot;
        },
        {
            &quot;Name&quot;: &quot;SqlServerDsc&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;dscmodule&quot;
        },
        {
            &quot;Name&quot;: &quot;AWSPowershell.NetCore&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;psmodule&quot;
        },
        {
            &quot;Name&quot;: &quot;ComputerManagementDsc&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;dscmodule&quot;
        },
        {
            &quot;Access_key_id&quot;: &quot;abc&quot;,
            &quot;Access_key_secret&quot;: &quot;defghi&quot;,
            &quot;Bucket&quot;: &quot;repository&quot;,
            &quot;Endpoint&quot;: &quot;https://s3.abc.com&quot;,
            &quot;Name&quot;: &quot;mssql_2022_standard_en&quot;,
            &quot;Source&quot;: &quot;S3&quot;,
            &quot;Type&quot;: &quot;iso&quot;
        },
        {
            &quot;Name&quot;: &quot;AnotherDependency_notFromS3&quot;,
            &quot;Source&quot;: &quot;psgallery&quot;,
            &quot;Type&quot;: &quot;dscmodule&quot;
        }
    ]
}
</code></pre>
","2024-08-17 18:34:41","2","Answer"
"78881244","78881241","","<p>You could use an <a href=""https://peps.python.org/pep-0274/"" rel=""nofollow noreferrer"">dictionary comprehension</a> with an <a href=""https://docs.python.org/3/library/collections.html#collections.OrderedDict"" rel=""nofollow noreferrer""><code>OrderedDict</code></a>:</p>
<pre><code>#!/usr/bin/env python

from collections import OrderedDict

old = {2024: {
  'Jul': ['Rate', 'Hours', 'Cost'],
  'Jan': ['Rate', 'Hours', 'Cost'],
  'Feb': ['Rate', 'Hours', 'Cost'],
  'Mar': ['Rate', 'Hours', 'Cost'],
  'Apr': ['Rate', 'Hours', 'Cost'],
  'May': ['Rate', 'Hours', 'Cost'],
  'Jun': ['Rate', 'Hours', 'Cost']}}

year = 2024
ordered_months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']

new = {year: OrderedDict({month: old[year][month] for month in ordered_months})}

print(new)
</code></pre>
<pre><code>% ./so78881244.py
{2024: OrderedDict([('Jan', ['Rate', 'Hours', 'Cost']), ('Feb', ['Rate', 'Hours', 'Cost']), ('Mar', ['Rate', 'Hours', 'Cost']), ('Apr', ['Rate', 'Hours', 'Cost']), ('May', ['Rate', 'Hours', 'Cost']), ('Jun', ['Rate', 'Hours', 'Cost']), ('Jul', ['Rate', 'Hours', 'Cost'])])}
</code></pre>
<p>Perhaps keep in mind that objects/dictionaries are inherently unordered, until you manually apply an order on the keys you are reading from.</p>
","2024-08-17 02:08:14","2","Answer"
"78881241","","How to sort a nested dictionary (having a list) in python?","<p>I am stuck with nested dictionary sorting. How to sort the following dictionary in the chronological order?</p>
<pre><code>{2024: {
  'Jul': ['Rate', 'Hours', 'Cost']
  'Jan': ['Rate', 'Hours', 'Cost'],
  'Feb': ['Rate', 'Hours', 'Cost'],
  'Mar': ['Rate', 'Hours', 'Cost'],
  'Apr': ['Rate', 'Hours', 'Cost'],
  'May': ['Rate', 'Hours', 'Cost'],
  'Jun': ['Rate', 'Hours', 'Cost']}}
</code></pre>
<p>The output should be as below:</p>
<pre><code>{2024: {
  'Jan': ['Rate', 'Hours', 'Cost'],
  'Feb': ['Rate', 'Hours', 'Cost'],
  'Mar': ['Rate', 'Hours', 'Cost'],
  'Apr': ['Rate', 'Hours', 'Cost'],
  'May': ['Rate', 'Hours', 'Cost'],
  'Jun': ['Rate', 'Hours', 'Cost'],
  'Jul': ['Rate', 'Hours', 'Cost']}}
</code></pre>
<p>Through internet search I could only find one level of nesting.</p>
","2024-08-17 02:03:01","0","Question"
"78877076","78876452","","<ol>
<li><p><code>collection.find()</code> returns a cursor object containing documents.
Please note: each document has fields and values. for instance if you want to get all the field,value dict of first object, you need to call collection.find()[0] which returns a <code>dict</code></p>
<pre><code>dct = collection.find()[0]
print(dct)
# Output:    {'a':1, 'b':2}
</code></pre>
</li>
<li><p>By using <code> return json.loads(dumps(collection.find()))</code> you are converting the <code>dict</code> to json string and in turn converting into a <code>dict</code>.</p>
</li>
</ol>
<p>What I mean to say is get specific document and return the values. For eg.,</p>
<pre><code>@app.route('/data')
def get_data():
    cursor = collection.find()

    # access document with specific index or specific _id or query. I used index 0
    dct = cursor[0] 

    # values = [x for x in dct.values()]
    # Edited as you want specific value
    val = dct['count_testing']
    return val
</code></pre>
","2024-08-15 22:35:45","2","Answer"
"78876521","78876452","","<p>The best way to do it would be on the Python side IMO. Put data in a variable, run a list comprehension on it, return the output. Like:</p>
<pre><code>def get_data():
    data = list(collection.find()) 
    filtered_data = [item['count_testing'] for item in data if 'count_testing' in item]
    return jsonify(filtered_data)
</code></pre>
","2024-08-15 19:01:00","1","Answer"
"78876509","78876452","","<p>You can simply index the object to only return the value you're interested in:</p>
<pre><code>@app.route('/data')
def get_data():
    return str(json.loads(json.dumps(collection.find()))[0][&quot;count_testing&quot;])
</code></pre>
","2024-08-15 18:56:54","0","Answer"
"78876452","","is there a way to only select the value from a dictionary from a json file?","<p>i have a website which im hosting with flask and using mongodb to store data. i am using htmx to reset the data, but i am running into a problem; when the data resets, it shows the entire dictionary, when i only want the value from the dictionary. it seems like it would be an easy fix, but because i am so new to htmx i have no idea what to do.</p>
<p>heres my current flask setup:</p>
<pre><code>@app.route('/data')
def get_data():
    return json.loads(dumps(collection.find()))
</code></pre>
<p>and my html:</p>
<pre><code>&lt;h1&gt;MongoDB Data Test&lt;/h1&gt;
&lt;div id=&quot;data-container&quot; 
   hx-get=&quot;/data&quot; 
   hx-trigger=&quot;load, every 3s&quot; 
   hx-target=&quot;#data-container&quot; 
   hx-swap=&quot;innerHTML&quot;&gt;
   &lt;!-- Data will be injected here --&gt;
   &lt;span&gt;&lt;/span&gt;
&lt;/div&gt;
</code></pre>
<p>this is what is shown on the website:
<code>[ { &quot;_id&quot;: { &quot;$oid&quot;: &quot;id&quot; }, &quot;count_testing&quot;: 15 } ]</code>
i only want the count_testing value (i.e. 15), not the entire dictionary to be shown on the website.</p>
","2024-08-15 18:42:54","0","Question"
"78875141","78875128","","<p>You need to <a href=""https://pandas.pydata.org/docs/reference/api/pandas.concat.html"" rel=""nofollow noreferrer""><code>concat</code></a>, then <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reset_index.html"" rel=""nofollow noreferrer""><code>reset_index</code></a>:</p>
<pre><code>dic = {'Sonic': sonic_df, 'Tails': tails_df}

out = (pd.concat(dic, names=['Subject']).reset_index(0)
         .reset_index(drop=True) # optional
      )
</code></pre>
<p>Output:</p>
<pre><code>  Subject  mean  median  stdev  min  max  count
0   Sonic     1       3      7    9   22     11
1   Tails     3       5     11   22   33     14
</code></pre>
","2024-08-15 12:42:48","3","Answer"
"78875128","","How to merge dictionary of dataframes and make key values a column in merged dataframe","<p>I have a dictionary of about 600 dataframes for connectome metrics for those 600 participants. I'm making a dummy dictionary though for conciseness. The dataframes all have 1 row. Ignore the fact that the actual meaning of &quot;mean&quot; as the column names are not what is of the row samples I give below, they're just the column names of all the dataframes I want to merge. Each of the keys are unique.</p>
<p>Two example dataframes would look like this:</p>
<pre><code>Key = &quot;Sonic&quot;
Value_df = 

mean   median   stdev   min   max   count
1      3        7       9     22     11

Key = &quot;Tails&quot;
Value_df = 

mean   median   stdev   min   max   count
3      5        11      22    33     14

</code></pre>
<p>where...</p>
<p><code>{&quot;Sonic&quot;:Dataframe, &quot;Tails&quot;:Dataframe}</code></p>
<p>How do I merge the dictionary's dataframe and make the key values its own column in the final dataframe?</p>
<pre><code>Subject   mean   median   stdev   min   max   count
Sonic     1      3        7       9     22     11
Tails     3      5        11      22    33     14
</code></pre>
<p>I've tried <code>from_dict</code> and I didn't have any luck.</p>
","2024-08-15 12:38:55","1","Question"
"78874563","","Ansible: Combining dict into specific list item, nested in a dict","<p>I have defined a main playbook, which calls another preparation playbook via import_playbook.</p>
<p>The preparation playbook returns credentials for an S3 repository, var is called &quot;service_secrets&quot; at the moment, which is a dict (see below). This dict needs to be appended into the last item of product.dependencies. The indicator to pick the specific listitem could be just &quot;Source=S3&quot;.</p>
<pre><code>---
- name: 'Preparation'
  ansible.builtin.import_playbook: 'playbook_preparation.yml'
  vars:
    product:
      name: 'mssql'
      dependencies:
        - Name: 'SqlServer'
          Source: 'psgallery'
          Type: 'psmodule'
        - Name: 'SqlServerDsc'
          Source: 'psgallery'
          Type: 'dscmodule'
        - Name: 'AWSPowershell.NetCore'
          Source: 'psgallery'
          Type: 'psmodule'
        - Name: 'ComputerManagementDsc'
          Source: 'psgallery'
          Type: 'dscmodule'
        - Name: &gt;-
            {{
              [&quot;mssql&quot;, ci.attributes.input_parameters.mssql.version,
              ci.attributes.input_parameters.mssql.edition,
              ci.attributes.input_parameters.mssql.language]
              | join(&quot;_&quot;)
            }}
          Source: 'S3'
          Type: 'iso'
          Bucket: 'repository'
</code></pre>
<p>The new fact &quot;service_secrets&quot; looks something like this:</p>
<pre><code>        &quot;service_secrets&quot;: {
            &quot;Access_key_id&quot;: &quot;abc&quot;,
            &quot;Access_key_secret&quot;: &quot;defghi&quot;,
            &quot;Bucket&quot;: &quot;repository&quot;,
            &quot;Endpoint&quot;: &quot;https://s3.abc.com&quot;
        }
</code></pre>
<p>I tried to fiddle around with combine(), but i could not get the service_secrets into the last listitem.</p>
<pre><code>    - name: DEBUG
      debug:
        msg: '{{ product | combine({&quot;dependencies&quot;: [service_secrets]}, list_merge=&quot;append&quot;) }}'
      loop: '{{ product.dependencies }}'
      when: 'item.Source == &quot;S3&quot;'
</code></pre>
<p>This will result in:</p>
<pre><code>ok: [localhost] =&gt; (item={'Name': 'mssql_2022_standard_en', 'Source': 'S3', 'Type': 'iso', 'Bucket': 'repository'}) =&gt; {
    &quot;msg&quot;: {
        &quot;dependencies&quot;: [
            {
                &quot;Name&quot;: &quot;SqlServer&quot;,
                &quot;Source&quot;: &quot;psgallery&quot;,
                &quot;Type&quot;: &quot;psmodule&quot;
            },
            {
                &quot;Name&quot;: &quot;SqlServerDsc&quot;,
                &quot;Source&quot;: &quot;psgallery&quot;,
                &quot;Type&quot;: &quot;dscmodule&quot;
            },
            {
                &quot;Name&quot;: &quot;AWSPowershell.NetCore&quot;,
                &quot;Source&quot;: &quot;psgallery&quot;,
                &quot;Type&quot;: &quot;psmodule&quot;
            },
            {
                &quot;Name&quot;: &quot;ComputerManagementDsc&quot;,
                &quot;Source&quot;: &quot;psgallery&quot;,
                &quot;Type&quot;: &quot;dscmodule&quot;
            },
            {
                &quot;Bucket&quot;: &quot;repository&quot;,
                &quot;Name&quot;: &quot;mssql_2022_standard_en&quot;,
                &quot;Source&quot;: &quot;S3&quot;,
                &quot;Type&quot;: &quot;iso&quot;
            },
            {
                &quot;Access_key_id&quot;: &quot;abc&quot;,
                &quot;Access_key_secret&quot;: &quot;defgh&quot;,
                &quot;Bucket&quot;: &quot;repository&quot;,
                &quot;Endpoint&quot;: &quot;https://s3.abc.com&quot;
            }
        ],
        &quot;name&quot;: &quot;mssql&quot;
    }
}
</code></pre>
<p>To make it more clear: The last two listitems of product.dependencies should be one item.</p>
","2024-08-15 09:56:30","0","Question"
"78871652","78871211","","<p>If I understand your problem correctly, what you need is an infinitely iterable <a href=""https://docs.python.org/3/reference/expressions.html#yield-expressions"" rel=""nofollow noreferrer"">generator function</a>:</p>
<pre class=""lang-py prettyprint-override""><code>def endless_generator(iterable):
    while True:
        for i in iterable:
            yield i
</code></pre>
<p>What this generator function does is simply to infinitely iterate through whatever iterable you pass to it.</p>
<p>You can use the generator function in your code like this</p>
<pre class=""lang-py prettyprint-override""><code>a = {'mon': 10, 'tue': 13, 'wed': 6, 'thu': 24, 'fri': 15}
g = endless_generator(a)
while True:
    # some conditions to break the outer loop
    for v in g:  # iterate through g instead of a
        # some conditions to break the inner loop
        print(v)
</code></pre>
","2024-08-14 15:00:55","3","Answer"
"78871337","78871211","","<p>Your code iterates over the <strong>keys</strong> of the <code>dict</code>, not it's values. This solutions shows how to iterate over the <code>dict</code> <strong>keys</strong>, like you showed in the example code. This should be sufficient for what you need, though there are probably faster solutions.</p>
<pre><code>a = {'mon': 10, 'tue': 13, 'wed': 6, 'thu': 24, 'fri': 15}

# your start index
pos = 0
# get a list of the dict keys
a_keys = list(a) 
# get the length of the list
length = len(a_keys)

while True:
    # your outer break conditions
    while True:
        # your inner break conditions
        v = a_keys[pos]
        print(v)
        # increase position by one
        pos += 1
        # return to start when at the end
        if pos % length == 0: pos = 0         
</code></pre>
<p>If you actually want to iterate over the values instead, just replace <code>v = a_keys[pos]</code> with <code>v = a[a_keys[pos]]</code>.</p>
","2024-08-14 13:54:44","1","Answer"
"78871300","78871211","","<p>You can explicitly create and access an iterator.  For example:</p>
<pre><code>a = {'mon': 10, 'tue': 13, 'wed': 6, 'thu': 24, 'fri': 15}

t = iter(a)
active = True
while active:
    while True:
        try:
            v = next(t)
        except StopIteration:
            print(&quot;done&quot;)
            active = False
            break
        print(v)
        # The following condition can be anything you want
        if v == 'wed':
            print(&quot;breaking&quot;)
            break
</code></pre>
<p>In this example, the inner loop breaks when <code>'wed'</code> is encountered, but of course this can be changed to any desired condition.</p>
<p>Calling <code>next(t)</code> will give you the next value of the iterator.  When the end is reached, a <code>StopIteration</code> exception is raised.  The above code fragment produces:</p>
<pre><code>mon
tue
wed
breaking
thu
fri
done
</code></pre>
<p>It basically allows the iterator to run independently from the outer loop.</p>
<p>If you want to restart the iterator from the beginning when the end is reached, you can just create a new iterator with <code>t = iter(a)</code> when the end is reached.  In that case, you don't need the <code>active</code> flag.  You can just follow it with <code>v = next(a)</code>.  If the dictionary is empty, this will raise a <code>StopIteration</code> exception, so you'd need to decide what you want to do if that happens.</p>
","2024-08-14 13:45:36","1","Answer"
"78871249","78871088","","<p>This is due to closing <code>wb</code>, not due to using a <code>Dictionary</code> or <code>Collection</code>. A <code>Worksheet</code> can't exist without a parent <code>Workbook</code>.</p>
<p>A simple example:</p>
<pre><code>Sub Test()
    Dim wb As Workbook
    Set wb = Workbooks.Add
    
    Dim ws As Worksheet
    Set ws = wb.Worksheets(1)
    Debug.Print TypeName(ws) ' Worksheet
    
    wb.Close False
    Debug.Print TypeName(ws) ' Object
End Sub
</code></pre>
","2024-08-14 13:37:08","3","Answer"
"78871211","","Continuously iterate through a dict","<p>If we have a <code>dict</code> we can easily iterate through its values:</p>
<pre><code>a = {'mon': 10, 'tue': 13, 'wed': 6, 'thu': 24, 'fri': 15}
for v in a:
    print(v)
</code></pre>
<p>I also have a nested loop like this:</p>
<pre><code>while True:
    # some conditions to break the outer loop
    for v in a:
        # some conditions to break the inner loop
        print(v)
</code></pre>
<p>Every time it runs a cycle in the outer loop, it starts again from the &quot;first&quot; <code>dict</code> element (I'm aware dictionaries are not ordered, but if they are not modified the cycles should be the same).</p>
<p>Instead, I want it continues from the last key, and if it ends, starts again from the beginning.</p>
<p>Example:</p>
<pre><code>1st outer cycle: 'mon', 'tue' (then breaks then inner cycle)
2nd outer cycle: 'wed' (then breaks then inner cycle)
3rd outer cycle: 'thu', 'fri', 'mon' (then breaks then inner cycle)
4th outer cycle: 'tue', 'wed' (then breaks then inner cycle)
breaks the outer cycle
</code></pre>
<p>My attempt was to save the last key and skip the previous ones, but is not straightforward and I have to restart the cycle if it ends before I have iterated through all keys.</p>
<p>Is there a simple way in Python to achieve this?</p>
","2024-08-14 13:28:24","-1","Question"
"78871088","","Save a Worksheet as an Object Attribute","<p>I have an <code>Employee</code> class with properties <code>Name</code> and <code>Worksheet</code> for the purpose of compiling Employees Overtime sheets. The following code iterates through a folder, creates an Employee and adds it to a Dictionary. My problem is that once we're out of the Loop, the Worksheet becomes a generic Object, so I can't do any operation on it!</p>
<pre><code>Sub ImportEmployeeFilesTest()
    Dim FolderPath As String
    Dim FileName As String
    Dim wb As Workbook
    Dim employee As EmployeeObject
    Dim EmployeesDict As Object
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    FolderPath = &quot;C:\Users\0000\Desktop\VSCode\data\&quot;
    FileName = Dir(FolderPath &amp; &quot;*_PunchClock.xlsm&quot;)
    
    Set EmployeesDict = CreateObject(&quot;Scripting.Dictionary&quot;)

    Do While FileName &lt;&gt; &quot;&quot;
        Set wb = Workbooks.Open(FolderPath &amp; FileName)
        
        Set employee = New EmployeeObject

        employee.SetWorksheet wb.Sheets(1)
        EmployeesDict.Add employee.Name, employee
        
        MsgBox TypeName(EmployeesDict(employee.Name).EmployeeWorksheet) ' This prints Worksheet
    
        wb.Close False
        FileName = Dir
    Loop
    MsgBox TypeName(EmployeesDict(&quot;Spiderman&quot;).EmployeeWorksheet) ' This prints Object
        
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
End Sub
</code></pre>
<p>EmployeeObject.cls</p>
<pre><code>Option Explicit

Public Name As String
Public EmployeeWorksheet As Worksheet

Private Sub Class_Initialize()

End Sub

Public Sub SetWorksheet(ws As Worksheet)
    Set EmployeeWorksheet = ws
    Me.SetName
End Sub

Public Sub SetName()
    If Not EmployeeWorksheet Is Nothing Then
        Me.Name = EmployeeWorksheet.Range(&quot;A2&quot;).Value
    Else
        Err.Raise vbObjectError + 1000, &quot;Employee.SetName&quot;, &quot;Worksheet is not set!&quot;
    End If
End Sub
</code></pre>
<p>I have no idea why this happens and couldn't find anyone with the same problem on forums! I have tried using a Collection instead of Dictionary, but I get the same exact results... Please Help!</p>
","2024-08-14 13:02:38","1","Question"
"78869996","78869800","","<p>As explained in <a href=""https://stackoverflow.com/a/78869847/25539767"">this answer</a> , &quot;python won't raise type errors at runtime based on type hints&quot;.</p>
<p><strong>mypy</strong> could be used to statically type check your program.
Note that this approach works in such a straightforward example, but could fail when types are not explicitly declared with types annotations.</p>
<p>For instance, using mypy on this program would pass:</p>
<pre><code>from typing_extensions import TypedDict

def return_str():
    return &quot;test&quot;

class Person(TypedDict):
    name: str
    age: int
    is_employee: bool
    
person: Person = {
    &quot;name&quot;: &quot;Baber&quot;,
    &quot;age&quot;: return_str(),
    &quot;is_employee&quot;: True 
}

print(person['age'])
</code></pre>
<p>An alternative to the solution of mypy, would be to use the module <strong>pydantic</strong>:</p>
<pre><code>import pydantic

def return_str():
    return &quot;test&quot;

class Person(pydantic.BaseModel):
    name: str
    age: int
    is_employee: bool
    
person = Person.model_validate({
    &quot;name&quot;: &quot;Baber&quot;,
    &quot;age&quot;: return_str(),  # error
    &quot;is_employee&quot;: True 
})

print(person.age)
</code></pre>
<p>Pydantic will perform runtime checks, even when type annotations are not given, and will return an error of the form:</p>
<blockquote>
<p>return cls.<strong>pydantic_validator</strong>.validate_python(
pydantic_core._pydantic_core.ValidationError: 1 validation error for
Person age   Input should be a valid integer, unable to parse string
as an integer [type=int_parsing, input_value='test', input_type=str]</p>
</blockquote>
<p>Note that runtime checks have to reach the error to report it. Hence, you should respect the fail-fast principle and check data as soon as possible. This has to be used when static type checkers as mypy cannot verify the types of data retrieved from other files or APIs for instance.</p>
","2024-08-14 08:58:58","2","Answer"
"78869847","78869800","","<p>if you want to catch type errors like assigning a string to an integer field, you need to use a type checker like <code>mypy</code> because python won't raise type errors at runtime based on type hints. You need tools like <code>mypy</code> for static type checking.</p>
<p>first install mypy</p>
<pre><code>pip install mypy
</code></pre>
<p>then run</p>
<pre><code>  mypy filename.py
</code></pre>
<p>then you'll start seeing the errors like this</p>
<pre><code>filename.py:8: error: Incompatible types (expression has type &quot;str&quot;, TypedDict item &quot;age&quot; has type &quot;int&quot;)
Found 1 error in 1 file (checked 1 source file)
</code></pre>
","2024-08-14 08:22:07","1","Answer"
"78869800","","TypedDict from typing_extensions is not working","<pre><code>from typing_extensions import TypedDict

class Person(TypedDict):
    name: str
    age: int
    is_employee: bool
    
person: Person = {
    &quot;name&quot;: &quot;Baber&quot;,
    &quot;age&quot;: &quot;ten year&quot;,  #as i assagin &quot;string&quot; datatype to age instead of &quot;int&quot; but it does not show any error?
    &quot;is_employee&quot;: True 
}

print(person['age'])
</code></pre>
<p>I want this function to show me error due to wrong assignment to integer variable.</p>
","2024-08-14 08:11:53","-2","Question"
"78869295","78869085","","<p>A <a href=""https://docs.python.org/3/library/dataclasses.html"" rel=""nofollow noreferrer"">dataclass</a> might do the trick. You can replace delta with an instance of a single-field dataclass, then fill your dictionary with references to that instance. Your example could be converted to something like this:</p>
<pre class=""lang-py prettyprint-override""><code>from dataclasses import dataclass

@dataclass
class dict_value:
    value: int

delta = dict_value(1)
D = {1:delta, 2:delta, 3:dict_value(1)}
print(D) # {1: dict_value(value=1), 2: dict_value(value=1), 3: dict_value(value=1)}

delta.value = 2
print(D) # {1: dict_value(value=2), 2: dict_value(value=2), 3: dict_value(value=1)}
</code></pre>
","2024-08-14 05:44:33","0","Answer"
"78869085","","Using and changing a variable name for a value in a dict","<p>I've encountered a challenge in doing repeated simulations with a changing parameter value using Python.  I'm looking for a clean way to change the parameter value.</p>
<p>Reducing it to the simplest case, we can assume the parameter is showing up as the value for some specific keys in a dictionary, <code>D</code>, let's say <code>D[1]</code> and <code>D[2]</code> are both <code>delta</code>.  I need to rerun the code with a changed value of <code>delta</code>, but updating <code>D</code> in practice is not as simple in my real context as updating <code>D[1]</code> and <code>D[2]</code>:</p>
<p><strong>Here's the question:</strong></p>
<p>Is there a way to create a dict <code>D</code> with some values equal to a parameter <code>delta</code> so that if I change <code>delta</code> later, the corresponding values in <code>D</code> are automatically updated?  Basically I'm sort of trying to set the value of <code>D</code> to be passed by reference.</p>
<hr />
<p>More context:</p>
<p>Right now I have something like:</p>
<pre><code>delta = 1
D = {1:delta, 2:delta, 3:1}  #the real process of creating `D` is computationally slow.
#... some arbitrary code here, some of which I can't modify that needs D[1] to behave like a number.

delta = 2
D = {1:delta, 2:delta, 3:1} 
#... equivalent code here
</code></pre>
<p>I can't really wrap this in a for loop because I'm actually doing this in a Jupyter notebook and I want to include a markdown cell describing the outputs each time I change delta.  Also creating <code>D</code> is pretty involved.</p>
<p>My best solution right now is to track which keys correspond to delta in a separate list and then go through and update all of them.  This process will be a touch messy and might cause confusion for some users who will not be all that familiar with python.</p>
<p>I don't think it is possible to do what I'm asking, but if so it would make my life much easier.</p>
","2024-08-14 04:01:35","1","Question"
"78859672","78858332","","<p>I think you're looking for <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.IntervalIndex.html#pandas-intervalindex"" rel=""nofollow noreferrer""><code>IntervalIndex</code></a> + <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.cut.html#pandas-cut"" rel=""nofollow noreferrer""><code>pd.cut</code></a>:</p>
<pre class=""lang-py prettyprint-override""><code>bins = pd.IntervalIndex.from_breaks(
    [1, 16, 20, 32, 40],
    closed=&quot;left&quot;,
)

df[&quot;ATS&quot;] = np.nan
mtr = df.TYP == &quot;MTR&quot;

df.loc[mtr, &quot;ATS&quot;] = [i.right for i in pd.cut(df.loc[mtr, &quot;CL&quot;] * 2.5, bins)]
df.loc[df.TYP == &quot;LTG&quot;, &quot;ATS&quot;] = 16
df.loc[df.TYP == &quot;CO&quot;, &quot;ATS&quot;] = 20
df.loc[tmp, &quot;ATS&quot;] = df.loc[(tmp := df.ATS.isna()), &quot;CL&quot;] * 2.5

print(df)
</code></pre>
<p>Prints:</p>
<pre class=""lang-none prettyprint-override""><code>      CL  TYP    ATS
0  0.027  LTG  16.00
1  0.350   CO  20.00
2  1.150  MTR  16.00
3  3.500  ACU   8.75
</code></pre>
","2024-08-12 00:33:07","0","Answer"
"78859421","78859406","","<p>Why are you iterating over all key-value pairs in <code>dataset</code>? If you do that, you will potentially try to treat items in <code>image_data</code> or <code>label_data</code> as paths to files, which is obviously incorrect. It seems like you want to have two primary for-loops. One for images, one for labels:</p>
<pre class=""lang-py prettyprint-override""><code>for path in self.dataset[&quot;image_path&quot;]:
    with open(path, &quot;rb&quot;) as file:                    
        image_rgb = Image.open(file).convert(&quot;RGB&quot;)
        image_tensor = self.processor(images=image_rgb, return_tensors=&quot;pt&quot;).pixel_values.squeeze(0)
        self.dataset[&quot;image_data&quot;].append(image_tensor)

for path in self.dataset[&quot;label_path&quot;]:                  
        # Add stuff to label_data
        self.dataset[&quot;label_data&quot;].append(...)

print(f&quot;Length of image_data: {len(self.dataset['image_data'])}&quot;)
print(f&quot;Length of label_data: {len(self.dataset['label_data'])}&quot;)
</code></pre>
","2024-08-11 21:11:19","1","Answer"
"78859406","","For loop not looping in dictionary of lists","<p>I'm trying to tokenize some images to train a HuggingFace model. In the process, I dowloaded and stored locally the images. The path to each of these images has been stored in a dictionary of lists, in which the key &quot;image_path&quot; contains a list of paths (strings) such as &quot;.\my\path\to.jpeg&quot;. The next step is to use these paths one at a time to process these images.</p>
<p>When I'm trying to loop into the dictionary and the lists, nothing seems to happen. The only error I get is from my try-exception which gives me <code>error found : image_data</code>. Here's the dict:</p>
<pre><code>dataset = {
            &quot;image_path&quot;: [&quot;.\my\path\to.jpeg&quot;, &quot;.\my\path\to2.jpeg&quot;], # just for the example, the path to local repo containing to.jpeg
            &quot;label_path&quot;: [],
            &quot;image_data&quot;: [],
            &quot;label_data&quot;: []
        }
</code></pre>
<p>Here's my code:</p>
<pre><code>def images_to_tensor():
        &quot;&quot;&quot;
        Convert images data to pytorch tensor by converting them to RGB values and then tensors using model processor.
        
        Parameters:
        None

        Returns:
        None
        &quot;&quot;&quot;
        
        processor = DonutProcessor.from_pretrained(&quot;naver-clova-ix/donut-base&quot;)

        try:
            for key, value_list in dataset.items():
                for value in value_list:
                    if key == &quot;image_path&quot;:
                        with open(value, &quot;rb&quot;) as file:                    
                            image_rgb = Image.open(file).convert(&quot;RGB&quot;)
                            image_tensor = processor(images=image_rgb, return_tensors=&quot;pt&quot;).pixel_values.squeeze(0)
                            
                            dataset[&quot;image_data&quot;].append(image_tensor)
       
            print(f&quot;dataset length image_data : {len(dataset[&quot;image_data&quot;])}&quot;)
        
        except Exception as e:
            print(f&quot;error found: {e}&quot;)
        
        return None
</code></pre>
<p>I also tried with a list of dictionaries but got the same problem, sadly ChatGPT solutions didn't help. They included
<code>for idx, data_dict in enumerate(self.dataset):</code>
and</p>
<pre><code>for dict_item in dataset:
        print(&quot;Inside the loop!&quot;)
        print(f&quot;dict image_path value: {dict_item[&quot;image_path&quot;]}&quot;)
        with open(dict_item[&quot;image_path&quot;], &quot;rb&quot;) as file:
</code></pre>
","2024-08-11 21:04:41","0","Question"
"78858440","78858332","","<p><code>a in k</code> won't return the desired result if <code>a</code> is a fraction. Testing for membership in a range acts like the range is a list of integers, it doesn't just check that the number is between the start and end.</p>
<p>As suggested in the comments, it would be better to change your dictionary to a list. And instead of ranges, use start/end values that you can compare with explicitly.</p>
<p>And since the desired value is always the end of the range, there's no need to include that explicitly.</p>
<pre><code>CB = [(1,16),
      (17,20),
      (21,32),
      (33,40)]
</code></pre>
<p>Then in your function you can use:</p>
<pre><code>    elif y == 'MTR':
        val = 2.5 * x
        return next((end for start, end in CB if start &lt;= val &lt; end+1), 0)
</code></pre>
<p>Note also that I use <code>end+1</code>. Otherwise, if <code>val</code> is something like <code>16.5</code> it won't fall in any of the ranges.</p>
","2024-08-11 13:30:25","0","Answer"
"78858332","","Dictionary mapping via range, use value as output","<p>Hope you can accomodate my question this is all about dictionary key range.</p>
<p>Here's my dictionary pattern</p>
<pre><code>CB = {range(1,16):16,
      range(17,20):20,
      range(21,32):32,
      range(33,40):40}
</code></pre>
<p>This is my dataframe</p>
<pre><code>data = {'CL':[0.027, 0.350, 1.15, 3.5],
        'TYP':['LTG', 'CO', 'MTR', 'ACU'],
        'ATS':[0, 0, 0, 0]
       }
df = pd.DataFrame(data)
</code></pre>
<p>I want to update the ATS side that will be base on the dictionary above using the lambda below:</p>
<pre><code>def ATS_szng(x,y):
    if y == 'LTG':
        return 16
    elif y == 'CO':
        return 20
    elif y == 'MTR':
        val = 2.5 * x
        z = lambda a: next((v for k,v in CB.items() if a in k), 0)
        return z(val)
    else:
        val = x * 2.5

df['AT'] = df.apply(lambda row:ATS_szng(row['CL'], row['TYP']), axis =1)
</code></pre>
<p>I got this answer of 0, but the answer I needed should be base on the above CB dictionary</p>
<p><a href=""https://i.sstatic.net/GJv28yQE.jpg"" rel=""nofollow noreferrer"">enter image description here</a></p>
<p>To know the answer using dictionary range key with the output values.</p>
","2024-08-11 12:32:14","1","Question"
"78850055","78846318","","<p>You can do that using this code snippet below:</p>
<pre><code>import numpy as np
import torch


dic_items = {1: &quot;A&quot;, 2: &quot;B&quot;, 3: &quot;C&quot;}
tensor_nos = torch.tensor([[1, 2, 3], [3, 2, 1]])
tensor_numpy = tensor_nos.numpy()
vectorize_map = np.vectorize(dic_items.get)(tensor_numpy)

results = vectorize_map.tolist()

# Print the result
print(results)
</code></pre>
","2024-08-08 19:07:48","0","Answer"
"78850045","78846318","","<pre><code># Define the dictionary and tensor
Dict = {1: 'A', 2: 'B', 3: 'C'}
ex = torch.tensor([[1,2,3],[3,2,1]])

# Map the dictionary to the tensor
mapped_result = [[Dict[item.item()] for item in row] for row in ex]

# Convert to a string tensor if you want a list of lists
print(mapped_result)
</code></pre>
<p>Convert the list of lists back to a tensor if needed (as strings are not natively supported in PyTorch tensors, you might need to use a different structure like a list of lists or NumPy array if you want to store strings). But if you check the data type, it gives you dtype('U1') when using numpy array.</p>
","2024-08-08 19:04:46","0","Answer"
"78850034","78840310","","<p>I can't reply to comments as my rep is not high enough, but for the problem of getting the widgets to go label button label button in sequence. You can just make two lists of labels and buttons and then start packing or gridding them.</p>
<p>For example:</p>
<pre><code>label_dict = json.loads(&lt;filepath&gt;)
label_list = label_dict.values() 

# do the same thing for buttons if you get it from a json 
button_list = ... 

# assuming the two lists are of the same length 
for i in range(len(label_list)): 
    l = Label(&lt;parent&gt;, text = label_list[i]) 
    l.pack() 
    # if you don't have a list for button you can just make them here
    b = Button(&lt;parent&gt;, text = button_list[i]) 
    b.pack() 
</code></pre>
<p>Do not that if you do use a for loop to make a bunch of widget and wish to bind them somehow, you need to specify the widget in the bind method in the loop.
i.e.</p>
<pre><code>for ...: # some for loop, didn't specify anything 
    w = &lt;Some Widget&gt;
    w.bind(&quot;&lt;Some Event&gt;&quot;, lambda e, w=w: &lt;some function/code that modifies or uses w&gt;)
</code></pre>
","2024-08-08 19:01:18","1","Answer"
"78849045","78840310","","<p>Not sure if I understood this correctly but if you have 10 items and try to put it in a grid of 2 rows then you want it to create 5 columns of 2 rows(?). I can't tell what you are trying to achieve exactly as I don't know the specification of the two json dictionaries. But assuming that if L = the number of column labels and R = the number of rows then L*R &lt;= number of keys in the input dictionary then I would do something like:</p>
<pre><code>from tkinter import * 
from tkinter.ttk import * # overrides default widgets 
import json

def BuildApplication(Frame):
    def __init__(self, parent, label_path, entry_path, rows): 
        Frame.__init__(self, parent)
        self.rows = rows 
    
        label_dict = json.loads(label_path)
        entry_dict = json.loads(entry_path) 

        self.grid_rowconfigure(list(range(rows)), weight=1, uniform=&quot;rows&quot;)
        self.grid_columnconfigure(list(range(len(label_dict))), weight=1, uniform=&quot;cols&quot;)
        col_ind = 0 
        for lk in label_dict.keys(): 
            l = Label(self, text=label_dict[lk], font=&lt;whatever font&gt;)
            l.grid(column=col_ind, row=0, sticky=&quot;nsew&quot;) 
            
            row_ind = 0
            for ek in entry_dict.leys(): 
                e = Entry(self) 
                e.insert(0, entry_dict[ek]) 
                e.grid(column=col_ind, row=row_ind, sticky=&quot;nsew&quot;)
                row_ind += 1 
            col_ind += 1 
</code></pre>
<p>I think that covers what you want(?). I don't know where you wanted the buttons so I didn't add that to the code. I personally recommend grid over pack if you are dealing with a lot of widgets as it is easier to manage placement.</p>
<p>I did not run this code btw, just typed it straight into stackoverflow.</p>
","2024-08-08 14:40:11","0","Answer"
"78847770","78847748","","<p>Pyright assumes that the dictionary keys are strings, which are iterable.</p>
<p>Tuple unpacking is a valid operation on iterables (even though it can still fail if the number of values is wrong).</p>
<p>If you change one of the keys to an integer (which is not iterable), you will get the error you expected.</p>
","2024-08-08 10:04:42","4","Answer"
"78847748","","Why does pyright strict mode not flag ""for k, v in dict"" without ""items()"" as an error?","<p>I have the following code in <code>test.py</code>:</p>
<pre><code>my_dict = {&quot;a&quot;: 1, &quot;b&quot;: 3}
for k, v in my_dict:
   print(k)
   print(v)
</code></pre>
<p>When I run <code>pyright pytest.py</code> this is not flagged as an error, even though in my understanding there is enough information to know that <code>my_dict.__iter__</code> returns <code>Iterable[keys]</code> and the type checker must be able to infer that the tuple unpacking would fail.</p>
","2024-08-08 09:59:53","0","Question"
"78847374","78847252","","<p>Here's a reminder that it's important to actually use your data structures correctly...</p>
<p><code>currencyDict.Items</code> returns an array; so <code>currencyDict.Items.Count</code> won't work. To get the number of items in the dictionary you have to simply do <code>currencyDict.Count</code>, or, alternatively, <code>ubound(currencyDict.Items) - lbound(currencyDict.Items) + 1</code>. Thanks for the solution, Nathan.</p>
","2024-08-08 08:40:18","0","Answer"
"78847252","","VB Scripting.Dictionary object is visible in Locals window, but cannot be accessed in watches, immediate or macro","<p>I have been working on this the entire morning and it's really starting to drive me nuts. I have written a function which goes through the row header column of a <code>PivotTable</code> object to find all currencies listed. The function is meant to populate a <code>Scripting.Dictionary</code> with the name of the currency and the address of the cell to the left of it (note that, as far as I understand it, I cannot just use a list of the <code>PivotItems</code>, because some of them are going to be invisible due to the filters set on the <code>PivotTable</code>). This dictionary is then returned for some further work (I have also tried passing in an empty dictionary as an argument and populating it; hence using a subroutine instead of a function. The result was the same however). This is my code:</p>
<pre class=""lang-vb prettyprint-override""><code>Public Function WriteCurrencyDict(PTable As PivotTable) As Scripting.Dictionary
    Dim ws As Worksheet: Set ws = ActiveSheet

    Dim PTableRange As Range: Set PTableRange = PTable.TableRange1
    Dim PField As PivotField: Set PField = PTable.PivotFields(&quot;CURRENCY&quot;)
    Dim PItem As PivotItem
    
    Dim currencyDict As New Scripting.Dictionary
    
    Dim rowHeadersCol As Integer: rowHeadersCol = PTable.TableRange1.Column
    Dim firstDataFieldRow As Integer: firstDataFieldRow = PTable.DataBodyRange.row
    Dim numberOfDataRows As Integer: numberOfDataRows = PTable.DataBodyRange.rows.Count
    
    Dim i As Integer
    
    For Each PItem In PField.PivotItems
        For i = 1 To numberOfDataRows
            If ws.Cells(firstDataFieldRow + i - 1, rowHeadersCol).Value = PItem.Name Then
                currencyDict.Add PItem.Name, ws.Cells(firstDataFieldRow + i - 1, rowHeadersCol - 1).Address(True, True)
                Exit For
            End If
        Next i
    Next PItem
    
    Set WriteCurrencyDict = currencyDict
End Function
</code></pre>
<p>I then call this function elsewhere:</p>
<pre class=""lang-vb prettyprint-override""><code>Dim currencyDict As Scripting.Dictionary
Set currencyDict = CurrencyHandler.WriteCurrencyDict(PTable)
Dim numberOfCurrencies as Integer: numberOfCurrencies = currencyDict.Items.Count
</code></pre>
<p>Now here is my error: I cannot access <code>currencyDict</code>, because I keep getting <code>run-time error 424: object required</code>. What is interesting is that the 'Locals' window is clearly showing my <code>currencyDict</code> object along with the items it contains. However, neither the watches window, nor the immediate window, nor the macro code can actually access this object. What is going on here? Am I misunderstanding something fundamental about the <code>Scripting.Dictionary</code> class?</p>
","2024-08-08 08:15:57","0","Question"
"78846318","","How can I change the values in the tensor using dictionary?","<p>when I have a tensor and dictionary as below, how can I map the dictionary to the tensor?<br />
For example,</p>
<pre class=""lang-py prettyprint-override""><code>Dict = {1: 'A', 2: 'B', 3: 'C'}

ex = torch.tensor([[1,2,3],[3,2,1]])

# Expected result
#tensor([[A, B, C],
#        [C, B, A]])
</code></pre>
<p>I tried this <a href=""https://discuss.pytorch.org/t/mapping-values-in-a-tensor/117731"" rel=""nofollow noreferrer"">code</a> and <code>torch.where</code>, but it didn't work well.</p>
","2024-08-08 02:30:15","0","Question"
"78845814","78845737","","<p>To get <code>Scenario</code> into the result, use <code>tree.tag</code> as the key in the outermost dictionary when calling the function.</p>
<p>To handle nodes with no text, add the <code>#text</code> key to the dictionary in a separate statement, so it can be conditional.</p>
<pre><code>def format_xml_to_dictionary(element: ElementTree.Element):
    '''
    Format xml to dictionary

    :param element: Tree element
    :return: Dictionary formatted result
    '''
    try:
        result = {
            **element.attrib,
            **{i.tag: format_xml_to_dictionary(i) for i in element}
        }
        if element.text:
            result['#text'] = element.text.strip()
        return result
    except ElementTree.ParseError as e:
        raise e

if __name__ == '__main__':
    tree = ElementTree.parse('Scenario.xml').getroot()
    scenario = {
        tree.tag: format_xml_to_dictionary(tree)
    }
    pprint(scenario)
</code></pre>
","2024-08-07 21:54:05","3","Answer"
"78845737","","Convert XML file into dictionary, with ElementTree","<p>I have an XML configuration file used by legacy software, which I cannot change or format. The goal is to use Python 3.9 and transform the XML file into a dictionary, using only <code>xml.etree.ElementTree</code> library.</p>
<p>I was originally looking at this <a href=""https://stackoverflow.com/a/68082847/14684366"">reply</a>, which produces almost the expected results.</p>
<p><code>Scenario.xml</code> file contents:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;Scenario Name=&quot;{{ env_name }}&quot;&gt;
    &lt;Gateways&gt;
        &lt;Alpha Host=&quot;{{ host.alpha_name }}&quot; Order=&quot;1&quot;&gt;
           &lt;Config&gt;{{ CONFIG_DIR }}/alpha.xml&lt;/Config&gt;
           &lt;Arguments&gt;-t1 -t2&lt;/Arguments&gt;
        &lt;/Alpha&gt;
        &lt;Beta Host=&quot;{{ host.beta_name }}&quot; Order=&quot;2&quot;&gt;
           &lt;Config&gt;{{ CONFIG_DIR }}/beta.xml&lt;/Config&gt;
           &lt;Arguments&gt;-t1&lt;/Arguments&gt;
        &lt;/Beta&gt;
        &lt;Gamma Host=&quot;{{ host.gamma_name }}&quot; Order=&quot;3&quot;&gt;
           &lt;Config&gt;{{ CONFIG_DIR }}/gamma.xml&lt;/Config&gt;
           &lt;Arguments&gt;-t2&lt;/Arguments&gt;
           &lt;!--&lt;Data Count=&quot;58&quot; /&gt;--&gt;
        &lt;/Gamma&gt;
    &lt;/Gateways&gt;
&lt;/Scenario&gt;
</code></pre>
<p>Python code to convert XML file to dictionary:</p>
<pre><code>from pprint import pprint
from xml.etree import ElementTree


def format_xml_to_dictionary(element: ElementTree.Element):
    '''
    Format xml to dictionary

    :param element: Tree element
    :return: Dictionary formatted result
    '''
    try:
        return {
            **element.attrib,
            '#text': element.text.strip(),
            **{i.tag: format_xml_to_dictionary(i) for i in element}
        }
    except ElementTree.ParseError as e:
        raise e

if __name__ == '__main__':
    tree = ElementTree.parse('Scenario.xml').getroot()
    scenario = format_xml_to_dictionary(tree)
    pprint(scenario)
</code></pre>
<p>Functional code output with <code>&lt;!--&lt;Data Count=&quot;58&quot; /&gt;--&gt;</code> commented:</p>
<pre><code>$ python test.py
{'#text': '',
 'Gateways': {'#text': '',
              'Alpha': {'#text': '',
                        'Arguments': {'#text': '-t1 -t2'},
                        'Config': {'#text': '{{ CONFIG_DIR }}/alpha.xml'},
                        'Host': '{{ host.alpha_name }}',
                        'Order': '1'},
              'Beta': {'#text': '',
                       'Arguments': {'#text': '-t1'},
                       'Config': {'#text': '{{ CONFIG_DIR }}/beta.xml'},
                       'Host': '{{ host.beta_name }}',
                       'Order': '2'},
              'Gamma': {'#text': '',
                        'Arguments': {'#text': '-t2'},
                        'Config': {'#text': '{{ CONFIG_DIR }}/gamma.xml'},
                        'Host': '{{ host.gamma_name }}',
                        'Order': '3'}},
 'Name': '{{ env_name }}'}
</code></pre>
<p>I'm trying to address two issues:</p>
<ol>
<li><code>Scenario</code> is missing from dictionary keys, because root node is already the <code>Scenario</code> tag, I'm not sure what I need to do, in order to make it part of dictionary</li>
<li>If I uncomment <code>&lt;Data Count=&quot;58&quot; /&gt;</code>, I get the following error:</li>
</ol>
<pre><code>AttributeError: 'NoneType' object has no attribute 'strip'
</code></pre>
<p>I'm not sure what type of if/else condition I need to implement, I tried something like that, but it is setting all <code>#text</code> values to <code>''</code> instead of stripping them:</p>
<pre><code>'#text': element.text.strip() if isinstance(
    element.text, ElementTree.Element
) else '',
</code></pre>
","2024-08-07 21:27:05","2","Question"
"78845542","78845504","","<p>It would help if you tried this,</p>
<pre class=""lang-py prettyprint-override""><code>if len(data) &gt; 0:
    for item in data:
        post_obj.append(
            {
                &quot;cityName&quot;: item[&quot;place&quot;],
                &quot;displayOrder&quot;: item[&quot;seq&quot;]
            }
        )
else:
    post_obj.append({&quot;areas&quot;: []})

print(post_obj)
</code></pre>
<p>Here is the output,
<a href=""https://i.sstatic.net/AJaGA3F8.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/AJaGA3F8.png"" alt=""output"" /></a></p>
","2024-08-07 20:25:40","1","Answer"
"78845533","78845504","","<p>small typo in code, you need to append to list, so use &quot;+=&quot; instead of just &quot;=&quot; and you code should run fine.</p>
<pre><code>post_obj = []
if len(data) &gt; 0:
    for id in data:
        post_obj += [
            {
                &quot;city&quot;: id[&quot;place&quot;],
                &quot;display&quot;: id[&quot;seq&quot;]
            }
        ]
else:
    post_obj[&quot;areas&quot;] += []
</code></pre>
","2024-08-07 20:22:33","0","Answer"
"78845532","78845504","","<p>You can use a <a href=""https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions"" rel=""nofollow noreferrer"">list comprehension</a> like this:</p>
<pre class=""lang-py prettyprint-override""><code>data = [
    {'place': 'San Jose', 'seq': 1},
    {'place': 'San Diego', 'seq': 2},
    {'place': 'San Fransisco', 'seq': 3}
]

post_obj = [{'cityName': item['place'], 'displayOrder': item['seq']} for item in data]

print(post_obj)
[{'cityName': 'San Jose', 'displayOrder': 1}, {'cityName': 'San Diego', 'displayOrder': 2}, {'cityName': 'San Fransisco', 'displayOrder': 3}]
</code></pre>
","2024-08-07 20:22:14","5","Answer"
"78845515","78845504","","<p>You are overwriting your list instead of appending to it, thus only leaving the last item in the list. Try this instead:</p>
<pre><code>post_obj = []
if len(data) &gt; 0:
    for id in data:
        post_obj.append(
            {
                &quot;cityName&quot;: id[&quot;place&quot;],
                &quot;displayOrder&quot;: id[&quot;seq&quot;]
            }
        )
else:
    post_obj.append({&quot;areas&quot;: []})
</code></pre>
","2024-08-07 20:17:30","1","Answer"
"78845504","","How to iterate and get all the values of a dictionary into another list of dictionary with different keys","<p>I am trying to iterate through a list of dictionaries and fetch the values of 2 keys and write the values to another list of dictionaries which has another key. The below is the output list that I am trying to write to.</p>
<pre><code>post_obj = [
    {
        &quot;city&quot;: place[&quot;place&quot;],
        &quot;display&quot;: place[&quot;seq&quot;]
    }
]
</code></pre>
<p>Input:</p>
<pre><code>data = [
    {'place': 'San Jose', 'seq': 1},
    {'place': 'San Diego', 'seq': 2},
    {'place': 'San Fransisco', 'seq': 3}
]
</code></pre>
<p>Code:</p>
<pre><code>post_obj = []
if len(data) &gt; 0:
    for id in data:
        post_obj = [
            {
                &quot;city&quot;: id[&quot;place&quot;],
                &quot;display&quot;: id[&quot;seq&quot;]
            }
        ]
else:
    post_obj[&quot;areas&quot;] = []
</code></pre>
<p>Output:</p>
<pre><code>[{'cityName': 'Inline', 'displayOrder': 3}]
</code></pre>
<p>Expected Output:</p>
<pre><code>[{'cityName': 'San Jose', 'displayOrder': 1}, {'cityName': 'San Diego', 'displayOrder': 2}, {'cityName': 'San Fransisco', 'displayOrder': 3}]
</code></pre>
<p>I don't know what I'm missing but I'm unable to get the first 2 cities in the list. Any help or input is appreciated. Thank you!</p>
","2024-08-07 20:13:33","0","Question"
"78843249","78834354","","<p>You can create a template function, which returns n/a if key does not exist.</p>
<pre><code>funcMap := template.FuncMap{
    &quot;GetValue&quot;: func(m map[string]int, key string) string {
        if value, ok := m[key]; ok {
            return fmt.Sprintf(&quot;%d&quot;, value)
        }
        return &quot;n/a&quot;
    },
}
</code></pre>
<p>In you template you can call GetValue function.
For example -</p>
<pre><code> tmpl := `{{- $key1 := &quot;one&quot; -}}
            {{- $key2 := &quot;four&quot; -}}
            Value for '{{ $key1 }}': {{ GetValue . $key1 }} \n
            Value for '{{ $key2 }}': {{ GetValue . $key2 }}`
</code></pre>
<p>Output is</p>
<pre><code>Value for 'one': 1 /n
Value for 'four': n/a
</code></pre>
","2024-08-07 10:45:11","0","Answer"
"78840310","","Tkinter Iterating through two dictionaries and creating a grid","<p>I have a Python application that builds itself using a JSON file, for customization purposes. But, I realized that I have no way of dealing with overflow, and now that it has a lot of stuff it either overflows to the sides or to the bottom.
This is the code that works for small amounts of widgets, but can't adapt.</p>
<pre><code>def BuildApplication():
    for key in jsonValueDict:
        key = ttk.Label(topContainer, text=&quot;Insira a coluna &quot; + jsonValueDict[key])
        key.pack()
        for key in jsonInputDict:
            key = ttk.Entry(topContainer)
            key.pack()
            break
    btnSubmit = ttk.Button(midContainer, text=&quot;Finalizar&quot;, command=Submit)
    btnSubmit.pack()
    btnExport = ttk.Button(midContainer, text=&quot;Exportar&quot;, command=Export)
    btnExport.pack()
    print(&quot;Finished loading.&quot;)
</code></pre>
<p>I saw some people talking about using &quot;for x in range&quot; loops but I can't since it's based on a dictionary and it can have multiple sizes. I tried using modulus to change it every x amount of widgets, but since I have a label and an input it doesn't work.</p>
<p>I tried using 'counter' variables that increased during iteration, but it either just created a downward stair or just completely messed up the buttons.
I need this to become a grid, &quot;after x amount of widgets, move to the side and start counting again&quot;</p>
","2024-08-06 17:15:53","-1","Question"
"78836700","78836662","","<p>Here is a method using &quot;element-wise&quot; calculation for a new column in a dataframe.</p>
<p>First, the syntax <code>data_array['imt']</code> is creating a new column.
Then, the value for each row in 'imt' column is being calculated on the right of the equals sign. The technique is called &quot;element-wise&quot; calculation.</p>
<pre><code>import pandas as pd

data = [{'nama': 'Senpai', 'tinggi': 1.55, 'berat': 63.41},
 {'nama': 'Yui Rio', 'tinggi': 1.53, 'berat': 61.17},
 {'nama': 'Yuna Hina', 'tinggi': 1.62, 'berat': 70.98},
 {'nama': 'Koharu Hinata', 'tinggi': 1.77, 'berat': 53.45},
 {'nama': 'Mei Mio', 'tinggi': 1.58, 'berat': 67.81},
 {'nama': 'Saki Miyu', 'tinggi': 1.57, 'berat': 68.12},
 {'nama': 'Kokona Haruka', 'tinggi': 1.76, 'berat': 61.96},
 {'nama': 'Haruto Yuto', 'tinggi': 1.52, 'berat': 64.89},
 {'nama': 'Sota Yuki', 'tinggi': 1.62, 'berat': 56.73},
 {'nama': 'Hayato Haruki', 'tinggi': 1.68, 'berat': 69.07},
 {'nama': 'Ryusei Koki', 'tinggi': 1.66, 'berat': 53.02},
 {'nama': 'Sora Sosuke', 'tinggi': 1.5, 'berat': 55.89},
 {'nama': 'Riku Soma', 'tinggi': 1.62, 'berat': 78.24}]

# create dataframe
data_array = pd.DataFrame(data)

# create new column and add values
data_array['imt'] = data_array['berat'] / (data_array['tinggi'] ** 2)

print(data_array)
</code></pre>
<p>I see you had a for-each loop to print the values of each row. You can use a loop to calculate new values too. Like this:</p>
<pre><code>for row in data:
    bmi = row['berat'] / (row['tinggi']**2)
    row['imt'] = round(bmi, 2)
data_array = pd.DataFrame(data)
</code></pre>
","2024-08-05 23:07:36","0","Answer"
"78836662","","How to Add New Column in Dictionary?","<p>Based on the data below, I want to calculate the BMI Index for each row and the average for the total row.  The BMI Index formula is 'berat' / 'tinggi'.
<a href=""https://i.sstatic.net/O9S4EDf1.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<pre><code>data = [{'nama': 'Senpai', 'tinggi': 1.55, 'berat': 63.41},
 {'nama': 'Yui Rio', 'tinggi': 1.53, 'berat': 61.17},
 {'nama': 'Yuna Hina', 'tinggi': 1.62, 'berat': 70.98},
 {'nama': 'Koharu Hinata', 'tinggi': 1.77, 'berat': 53.45},
 {'nama': 'Mei Mio', 'tinggi': 1.58, 'berat': 67.81},
 {'nama': 'Saki Miyu', 'tinggi': 1.57, 'berat': 68.12},
 {'nama': 'Kokona Haruka', 'tinggi': 1.76, 'berat': 61.96},
 {'nama': 'Haruto Yuto', 'tinggi': 1.52, 'berat': 64.89},
 {'nama': 'Sota Yuki', 'tinggi': 1.62, 'berat': 56.73},
 {'nama': 'Hayato Haruki', 'tinggi': 1.68, 'berat': 69.07},
 {'nama': 'Ryusei Koki', 'tinggi': 1.66, 'berat': 53.02},
 {'nama': 'Sora Sosuke', 'tinggi': 1.5, 'berat': 55.89},
 {'nama': 'Riku Soma', 'tinggi': 1.62, 'berat': 78.24}]
</code></pre>
<p>The expected result should be shown in the BMI index on the right of the key 'berat'. The expected result should be like this:
<a href=""https://i.sstatic.net/KnFD3PrG.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<p>I'm trying to calculate the BMI index first and then join the data. But it didn't work. Here's my code:</p>
<pre><code>data_array = pd.DataFrame(data)

# for i in data_array:
#     print(i)

imt = data_array['berat']/data_array['tinggi']
tes = list(imt)

join_list = data + tes
join_list_array = pd.DataFrame(join_list)
print(join_list_array)
</code></pre>
<p>Do you have any thoughts about it? I'm sorry, but I'm still learning about Data Wrangling. I appreciate any help you can provide.</p>
","2024-08-05 22:44:17","0","Question"
"78834354","","How do I differentiate a missing value from 0 in a map with Go's text/template?","<p>In Go I have a <code>map[string]int</code>. I want to display values from this map through a Template from the <code>text/template</code> package. If the map doesn't contain a specific value, I want to display &quot;n/a&quot; instead. This is what I have tried:</p>
<pre><code>{{with index $.MyMap .MyKey}}{{.}}{{else}}n/a{{end}}
</code></pre>
<p>Unfortunately this doesn't work if the map contains a value for my key, but the value is 0. Then &quot;n/a&quot; is also displayed. How can I make sure that &quot;n/a&quot; is only displayed, if the map didn't contain the requested value?</p>
","2024-08-05 12:03:12","1","Question"
"78829989","78829918","","<p>You can use <code>not</code>, which is probably a bit more readable:</p>
<pre><code>{% for k,v in dict %}
  {{ k }}={{ v }}
  {% if not forloop.last %}
    &amp;amp;
  {% endif %}
{% endfor %}</code></pre>
<p>But it looks to me you are formatting a <a href=""https://en.wikipedia.org/wiki/Query_string"" rel=""nofollow noreferrer""><em>query string</em> <sup>[wiki]</sup></a>? I would <em>strongly</em> suggest not to format that manually, and also not use template logic, since Django's template engine is not very fast.</p>
<p>Use Django's <a href=""https://docs.djangoproject.com/en/stable/ref/request-response/#django.http.QueryDict"" rel=""nofollow noreferrer""><strong><code>QueryDict</code></strong> <sup>[Django-doc]</sup></a> instead. Indeed, in the view, we can make a <code>QueryDict</code> from a dict with:</p>
<pre class=""lang-py prettyprint-override""><code>from django.http import QueryDict

qd = QueryDict(mutable=True)
qd<b>.update(<em>my_dict</em>)</b></code></pre>
<p>and render it in the template as:</p>
<pre><code>{{ qd.<b>urlencode</b> }}</code></pre>
","2024-08-03 23:27:33","1","Answer"
"78829982","78829918","","<p>Just found it! Silly me, Seems like Django <a href=""https://docs.djangoproject.com/en/4.2/ref/templates/builtins/#for"" rel=""nofollow noreferrer"">already provides a pretty neat built-in forloop object</a> for templates that works like a charm!</p>
<p>Will drop it here for anyone who might have the same problem</p>
<pre><code>{% for k,v in dict %}
 k=v
 {% if forloop.last != True %}
 &amp;amp;
 {% endif %}
{% endfor %}
</code></pre>
","2024-08-03 23:19:53","1","Answer"
"78829974","78829873","","<p>You needed to specify if the same key existed anywhere in <code>s</code> otherwise you could be overwriting an earlier value. Also in Dafny maps are immutable object so you can't update <code>m</code>, but you can reassign <code>r</code> to a new value.</p>
<pre><code>predicate distinct(s: seq&lt;(bool, string, int)&gt;) {
    forall x,y :: x != y &amp;&amp; 0 &lt;= x &lt;= y &lt; |s| ==&gt; s[x].1 != s[y].1
}

method updateMapIterative(s: seq&lt;(bool, string, int)&gt;, m: map&lt;string, int&gt;) returns (r: map&lt;string, int&gt;)
  requires forall t: (bool, string, int) :: t in s ==&gt; t.1 in m
  requires distinct(s)
  ensures forall k :: k in m &lt;==&gt; k in r
  ensures forall t: (bool, string, int) :: t in s &amp;&amp; t.0 ==&gt; r[t.1] == t.2 
{

  r := m;
  var i := 0;

  while i &lt; |s|
    decreases |s|-i
    invariant 0 &lt;= i &lt;= |s|
    invariant forall t: (bool, string, int) :: t in s[0..i] ==&gt; t.1 in r
    invariant forall k :: k in m &lt;==&gt; k in r
    invariant forall t: (bool, string, int) :: t in s[0..i] &amp;&amp; t.0 ==&gt; r[t.1] == t.2
  {
    assert s[i].1 in r;
    r:= updateMap(s[i], r); //assumed that you meant r instead of m
    i := i + 1;
  }
}
</code></pre>
","2024-08-03 23:16:06","0","Answer"
"78829918","","Is there any way to know when I'm passed the last item while iterating through a dictionary in django template?","<p>I'm trying to create a text representation of a JSONField that has some data structured as an array of dictionaries like this:</p>
<pre><code>[
 {
  &quot;key1&quot;:&quot;value1&quot;,
  &quot;key2&quot;:&quot;value2&quot;
 },
 {
  &quot;key3&quot;:&quot;value3&quot;,
  &quot;key4&quot;:&quot;value4&quot;,
  &quot;key5&quot;:&quot;value5&quot;
 }
]
</code></pre>
<p>My goal is to represent this data in the Django template like this:</p>
<blockquote>
<p><strong>(</strong> key1=value1 <strong>&amp;</strong> key2=value2 <strong>)</strong> <strong>||</strong> <strong>(</strong> key3=value3 <strong>&amp;</strong> key4=value4 <strong>&amp;</strong> key5=value5 <strong>)</strong></p>
</blockquote>
<p>Now I'd iterate through the array and see if I'm not hitting the last dictionary so I can add an <strong>||</strong> between the condition representation text since it's already an array list like:</p>
<pre><code>{% for dict in data %}
 // Do stuff with dict
 {% if data|last != dict %}
  ||
 {% endif %}
{% endfor %}
</code></pre>
<p>However, since a dictionary doesn't have a <strong>last</strong> thing, I'm having a hard time to iterate through the &quot;key,value&quot; when I'm doing stuff with each dictionary object when I've got to append an &quot;&amp;&quot; only if I'm not hitting the end of this dict items.</p>
<pre><code>{% for k,v in dict %}
 k=v
 // append &quot;&amp;&quot; if this is not the last key being iterated?
{% endfor %}
</code></pre>
<p>Any suggestions/workarounds/ideas would be much appreciated :)</p>
","2024-08-03 22:39:37","2","Question"
"78829873","","Verify sequence of map modifications in dafny","<p>I'm writing a function in dafny to verify a series of updates in a map in an iterative method, however, dafny cannot prove those changes in the map.</p>
<p>This is the code:</p>
<pre><code>function updateMap(t: (bool, string, int), m: map&lt;string, int&gt;): map&lt;string, int&gt;
  requires t.1 in m
  ensures forall k :: k in m &lt;==&gt; k in updateMap(t, m)
  ensures t.0 ==&gt; updateMap(t, m)[t.1] == t.2
{
  if t.0 then m[t.1:=t.2] else m
}

method updateMapIterative(s: seq&lt;(bool, string, int)&gt;, m: map&lt;string, int&gt;) returns (r: map&lt;string, int&gt;)
  requires forall t: (bool, string, int) :: t in s ==&gt; t.1 in m
  ensures forall k :: k in m &lt;==&gt; k in r
  ensures forall t: (bool, string, int) :: t in s &amp;&amp; t.0 ==&gt; r[t.1] == t.2 //Can't prove this
{

  r := m;
  var i := 0;

  while i &lt; |s|
    decreases |s|-i
    invariant 0 &lt;= i &lt;= |s|
    invariant forall t: (bool, string, int) :: t in s[0..i] ==&gt; t.1 in r
    invariant forall k :: k in m &lt;==&gt; k in r
    invariant forall t: (bool, string, int) :: t in s[0..i] &amp;&amp; t.0 ==&gt; r[t.1] == t.2 //Can't prove this invariant
  {
    assert s[i].1 in m;
    r:= updateMap(s[i], m);
    assert s[i].0 ==&gt; r[s[i].1] == s[i].2;
    i := i + 1;
    assert s[i-1].1 in m;
    assert s[i-1].0 ==&gt; r[s[i-1].1] == s[i-1].2;
  }
}
</code></pre>
<p>But dafny cannot prove last invariant and I don't know how solve it (all the asserts are proved correctly but yet dafny can't solve the invariant).
Can someone help me?
Thank you!</p>
","2024-08-03 22:04:29","0","Question"
"78826706","78826641","","<p>You can do this with a single lookup by doing the lookup and using one of the insert member functions that take a &quot;hint&quot; iterator:</p>
<pre class=""lang-cpp prettyprint-override""><code>auto it = map.lower_bound(key);
if (it == map.end() || map.key_comp()(key, it-&gt;first)) {
  it = map.emplace_hint(it, std::piecewise_construct, std::forward_as_tuple(key), std::forwrad_as_tuple());
  // Since this will be constructed directly before the hint, lookup isn't done again
}
// `it` points to the existing element or the newly constructed element
// The element is only constructed if it didn't already exist
</code></pre>
","2024-08-02 17:58:55","4","Answer"
"78826642","78826641","","<p>Transparent maps allow not only keep a key from being materialized, also the second (value) component passed to <code>insert</code> need not be exactly the <code>mapped_type</code> of the map. You can pass any type convertible to the the <code>mapped_type</code>. That way, you can pass a cheap proxy object that creates the value on-demand.</p>
<pre class=""lang-cpp prettyprint-override""><code>template&lt;typename T&gt;
struct mapped_proxy
{
    operator T() const { return T{}; }
};

auto it = map.insert(std::pair&lt;KK, mapped_proxy&lt;T&gt;&gt;{ key, {} }).first
</code></pre>
","2024-08-02 17:40:04","0","Answer"
"78826641","","How to insert a key if not present to a transparently compared map?","<p>I have a <code>std::map&lt;K, T, std::less&lt;&gt;&gt;</code> and a “key” of type <code>KK</code> which is order-compatible with <code>K</code>. If the key is present, I want to return the corresponding value. If the key is not present, I want to materialize a real key (of type <code>K</code>) and insert a key–value pair with default constructed <code>T</code> into the map.</p>
<p>(My question targets C++14, but borrowing from C++17, you can think of <code>K = std::string</code> and <code>KK = std::string_view</code>, and <code>T = int</code>).</p>
<p>It seems there are two sub-optimal solutions:
This:</p>
<pre class=""lang-cpp prettyprint-override""><code>auto it = map.insert(std::pair&lt;KK, T&gt;{ key, T{} }).first
</code></pre>
<p>Is sub-optimal because it requires materializing a <code>T</code> value even if it’s not needed.</p>
<p>Or:</p>
<pre class=""lang-cpp prettyprint-override""><code>auto it = map.find(key);
if (it == map.end()) it = map.insert(std::pair&lt;KK, T&gt;{ key, T{} }).first;
</code></pre>
<p>Is sub-optimal because of a double lookup.</p>
","2024-08-02 17:40:04","1","Question"
"78825871","78825804","","<p>To remove the dictionary with the lowest 'body.position[1]' value from the list, you can use <code>min</code>:</p>
<pre class=""lang-py prettyprint-override""><code>min_dict = min(balls, key=lambda x: x['body'].position[1])
balls.remove(min_dict)
</code></pre>
","2024-08-02 14:04:23","3","Answer"
"78825804","","Removing specific value from list, Python","<p>I have a list with dictionaries. Each of them contains an object. What is the proper way to remove one specific dictionary, with its object's lowest attribute value?</p>
<pre><code>balls = [{'body': Body(), 'color': (6, 208, 1, 255), 'rad': 10}, ...]
</code></pre>
<p>The way I did that:</p>
<pre><code>searcher = balls.copy()
searcher.sort(key=lambda x: x['body'].position[1])
balls.remove(searcher[0])
</code></pre>
<p>I wonder if there is faster and more &quot;pythonic&quot; way.</p>
","2024-08-02 13:46:15","-1","Question"
"78822916","78821897","","<p>This is not how you pass down props to components. First, you should name your props:</p>
<pre><code>const GameMap = function({ tiles }: { tiles: GameMapTiles }) {
  return (
    &lt;div className=&quot;something&quot;&gt;
      {tiles.map()} // ...
    &lt;/div&gt;
  );
};
</code></pre>
<p>The typescript syntax is a bit awkward here, but you really do need to write the variable name <code>tiles</code> twice (or not, but you'd lose the benefit of destructuring). Then you can pass down props like this:</p>
<pre><code>export default function Home() {
  const normalGameMap: GameMapTiles = [{ resource: &quot;wood&quot;, number: 2 }];

  return (
    &lt;main&gt;
      &lt;GameMap tiles={normalGameMap} /&gt;
    &lt;/main&gt;
  );
}
</code></pre>
","2024-08-01 20:21:55","0","Answer"
"78821897","","Mapping props in react components not working","<p>I am creating a game in react and I am having trouble mapping some props.</p>
<p>I am getting the error props is not a function and I am unable to cycle through the game map tiles. I have a suspicion my types might be incorrect this is my first time working with with typescript.</p>
<p>here is my page.tsx</p>
<pre><code>import { GameMapTiles } from &quot;@/components/new-types&quot;;

export default function Home() {
  const normalGameMap: GameMapTiles = [{ resource: &quot;wood&quot;, number: 2 }];

  return (
    &lt;main&gt;
      &lt;GameMap {...normalGameMap} /&gt;
    &lt;/main&gt;
  );
}

</code></pre>
<p>Here is my component GameMap</p>
<pre><code>const GameMap = (props: GameMapTiles) =&gt; {
  return (
    &lt;div className=&quot;somthing&quot;&gt;
      {props.map(([key, tile], count) =&gt; (
        &lt;div className=&quot;Sometile&quot; key={count} /&gt;
      ))}
      {console.log(props)}
    &lt;/div&gt;
  );
};
export default GameMap;
</code></pre>
<p>Here are the types that I have created</p>
<pre><code>export type Resource = &quot;wood&quot; | &quot;brick&quot; | &quot;sheep&quot; | &quot;wheat&quot; | &quot;ore&quot;;

export type TileData = {
  resource: Resource;
  number: number;
};
export type GameMapTiles = TileData[];
</code></pre>
","2024-08-01 15:49:43","0","Question"
"78819316","78818923","","<p>Try something like this in your google map widget add <strong>polygones</strong></p>
<pre><code>SizedBox(
  height: 308,
  child: ClipRRect(
    borderRadius: const BorderRadius.only(
      bottomLeft: Radius.circular(20),
      bottomRight: Radius.circular(20),
    ),
    child: !isMapLoading
        ? GoogleMap(
            buildingsEnabled: true,
            compassEnabled: false,
            indoorViewEnabled: false,
            mapToolbarEnabled: true,
            tiltGesturesEnabled: false,
            trafficEnabled: false,
            rotateGesturesEnabled: false,
            liteModeEnabled: false,
            zoomControlsEnabled: true,
            zoomGesturesEnabled: true,
            myLocationButtonEnabled: false,
            myLocationEnabled: true,
            polygons: polygone,
            gestureRecognizers: {
              Factory&lt;OneSequenceGestureRecognizer&gt;(
                  () =&gt; EagerGestureRecognizer()),
            },
            mapType: MapType.normal,
            initialCameraPosition: CameraPosition(
              target: pointerPos!,
              zoom: zoomLevel,
            ),
            onCameraMove: (position) {
              pointerPos = position.target;
            },
            onCameraIdle: () async {
              await Future.delayed(
                  const Duration(milliseconds: 300));
              widget.onDragEnd.call(pointerPos!);
            },
            onMapCreated:
                (GoogleMapController gmController) async {
              controller = gmController;

              /// MAPS DELVERIES REGION SETTING
              polygone.add(
                Polygon(
                  fillColor: Colors.black.withOpacity(
                      map_settings.kMapAreaOpacity),
                  polygonId:
                      const PolygonId('Left_Side_Map_Polygone'),
                  points: map_settings.halfBackgroundLeft,
                  holes: [map_settings.deliveriesRegion],
                  visible: true,
                  geodesic: false,
                  strokeWidth: 0,
                ),
              );

              polygone.add(
                Polygon(
                  fillColor: Colors.black.withOpacity(
                      map_settings.kMapAreaOpacity),
                  polygonId: const PolygonId(
                      'Right_Side_Map_Polygone'),
                  points: map_settings.halfBackgroundRight,
                  visible: true,
                  geodesic: false,
                  strokeWidth: 0,
                ),
              );

              polygone.add(
                Polygon(
                  fillColor: Colors.transparent,
                  strokeColor: kNeutral700,
                  polygonId:
                      const PolygonId('Deliveries Region'),
                  points: map_settings.deliveriesRegion,
                  visible: true,
                  geodesic: false,
                  strokeWidth: 1,
                ),
              );

              setState(() {});
            },
          )
        : const SizedBox.shrink(),
  ),
),
</code></pre>
<p>and the data would be something like this:</p>
<pre><code>List&lt;LatLng&gt; deliveriesRegion = const [
  LatLng(25.4993491, 51.5486277),
  LatLng(25.5043070, 51.5074290),
  LatLng(25.5092648, 51.4758433),
  LatLng(25.5092648, 51.4511241),
  LatLng(25.5080254, 51.4154185),
  LatLng(25.4981095, 51.3906993),
  LatLng(25.4857136, 51.3714732),
  LatLng(25.4695969, 51.3426341),
  LatLng(25.4522381, 51.3151683),
  LatLng(25.4199937, 51.2877024),
  LatLng(25.3927032, 51.2725962),
  LatLng(25.3554789, 51.2506236),
  LatLng(25.3306564, 51.2423838),
  LatLng(25.3095532, 51.2423838),
  LatLng(25.2834795, 51.2396372),
  LatLng(25.2636101, 51.2410105),
  LatLng(25.2362843, 51.2465037),
  LatLng(25.2139223, 51.2465037),
  LatLng(25.1816144, 51.2506236),
  LatLng(25.1555132, 51.2616099),
  LatLng(25.1231898, 51.2643565),
  LatLng(25.0883704, 51.2753428),
  LatLng(25.0622493, 51.3192881),
  LatLng(25.0597613, 51.3467539),
  LatLng(25.0585173, 51.3769663),
  LatLng(25.0622493, 51.4318980),
  LatLng(25.0709569, 51.4593638),
  LatLng(25.0759325, 51.4923228),
  LatLng(25.0858829, 51.5390147),
  LatLng(25.0921015, 51.5802134),
  LatLng(25.1020506, 51.6035594),
  LatLng(25.1256765, 51.6461314),
  LatLng(25.1927989, 51.6543711),
  LatLng(25.2673359, 51.6461314),
  LatLng(25.2872047, 51.6310252),
  LatLng(25.3318976, 51.6241587),
  LatLng(25.3864999, 51.6090525),
  LatLng(25.4286757, 51.5966929),
  LatLng(25.4596779, 51.5788401),
  LatLng(25.4993491, 51.5486277),
];

/// HALF BACKGROUND RIGHT
List&lt;LatLng&gt; halfBackgroundRight = const [
  LatLng(-89.9, 0),
  LatLng(89.9, 0),
  LatLng(89.9, -179.999),
  LatLng(-89.9, -179.999),
];

/// HALF BACKGROUND LEFT
List&lt;LatLng&gt; halfBackgroundLeft = const [
  LatLng(-89, 0),
  LatLng(89, 0),
  LatLng(89, 179.999),
  LatLng(-89, 179.999),
];
</code></pre>
<p>The result will look something like this:</p>
<p><a href=""https://i.sstatic.net/3GyYYvJl.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/3GyYYvJl.png"" alt=""Google map with boundaries"" /></a></p>
","2024-08-01 05:54:33","0","Answer"
"78818923","","How can I display and edit a boundary map?","<p>I'm developing a project for mobile and web in Flutter. I'd like to display a map from a tiling sevice API such that it had the same funcionality of e.g. Google Maps where you load the data that the user is seeing (showing details when they zoom in etc).</p>
<p>But I'm only interested in the data of the boundaries of regions such as countries and cities (and their identification/name). This is because I'd like to fill the region with e.g. a color.</p>
<p>I'm not sure if filling is possible, or if I'd have to fetch the data, create a custom layer and display on top of it. Or if there are better approaches.</p>
<p>Is this possible with a free provider? Can somebody give me some direction?</p>
<p>Thank you very much!</p>
<p>I've started playing around with 'flutter_map' package, but the only thing I could think of was to draw Polygons.</p>
","2024-08-01 02:38:46","0","Question"
"78816331","78816286","","<p>You can create the 2 columns directly, as specified:</p>
<pre class=""lang-py prettyprint-override""><code>df = pl.DataFrame({
    &quot;type&quot;: mapping.keys(), 
    &quot;mapping&quot;: mapping.values()
})
</code></pre>
<pre><code>shape: (3, 2)
┌───────┬───────────┐
│ type  ┆ mapping   │
│ ---   ┆ ---       │
│ str   ┆ struct[2] │
╞═══════╪═══════════╡
│ CASH  ┆ {1,&quot;E&quot;}   │
│ ITEM  ┆ {-9,&quot;A&quot;}  │
│ CHECK ┆ {46,&quot;A&quot;}  │
└───────┴───────────┘
</code></pre>
","2024-07-31 12:29:43","2","Answer"
"78816329","78816286","","<p>Standard <a href=""https://docs.pola.rs/api/python/stable/reference/dataframe/index.html"" rel=""nofollow noreferrer""><code>DataFrame</code></a> constructor accepts dictionary. Just specify column names and use <a href=""https://docs.python.org/3/library/stdtypes.html#dict.keys"" rel=""nofollow noreferrer""><code>dict.keys()</code></a> and <a href=""https://docs.python.org/3/library/stdtypes.html#dict.values"" rel=""nofollow noreferrer""><code>dict.values()</code></a> as data.</p>
<pre class=""lang-py prettyprint-override""><code>pl.DataFrame({
    &quot;type&quot;: mapping.keys(),
    &quot;mapping&quot;: mapping.values()
})

┌───────┬───────────┐
│ type  ┆ mapping   │
│ ---   ┆ ---       │
│ str   ┆ struct[2] │
╞═══════╪═══════════╡
│ CASH  ┆ {1,&quot;E&quot;}   │
│ ITEM  ┆ {-9,&quot;A&quot;}  │
│ CHECK ┆ {46,&quot;A&quot;}  │
└───────┴───────────┘
</code></pre>
","2024-07-31 12:29:40","1","Answer"
"78816286","","Create polars dataframe from dict (with keys & values being their own columns)","<p>I have the following code</p>
<pre class=""lang-py prettyprint-override""><code>import polars as pl

mapping = {
    'CASH':  {'qty':  1, 'origin': 'E'},
    'ITEM':  {'qty': -9, 'origin': 'A'},
    'CHECK': {'qty': 46, 'origin': 'A'},
}

df = pl.DataFrame([{'type': k} | v for k, v in mapping.items()])\
         .with_columns(pl.struct(['qty', 'origin']).alias('mapping'))\
         .select(pl.col(['type', 'mapping']))
</code></pre>
<p>So the <strong>keys</strong> of the dict should become a new column called <code>type</code> and the <strong>values</strong> of the dict should be in their own <code>mapping</code> column. My above implementation works, and <code>df</code> looks like this:</p>
<pre><code>shape: (3, 2)
┌───────┬───────────┐
│ type  ┆ mapping   │
│ ---   ┆ ---       │
│ str   ┆ struct[2] │
╞═══════╪═══════════╡
│ CASH  ┆ {1,&quot;E&quot;}   │
│ ITEM  ┆ {-9,&quot;A&quot;}  │
│ CHECK ┆ {46,&quot;A&quot;}  │
└───────┴───────────┘
</code></pre>
<p>But my implementation is very long and does not look very efficient. Is there a more idiomatic polars way to create this dataframe?</p>
","2024-07-31 12:18:14","2","Question"
"78815956","78815926","","<p>Just to be clear, polars doesn't drop the keys, it just implicitly converts python dictionaries to <a href=""https://docs.pola.rs/user-guide/expressions/structs/"" rel=""nofollow noreferrer""><code>Struct</code></a></p>
<p>You can easily check it by using, for example, <a href=""https://docs.pola.rs/api/python/stable/reference/dataframe/api/polars.DataFrame.unnest.html"" rel=""nofollow noreferrer""><code>unnest()</code></a>:</p>
<pre class=""lang-py prettyprint-override""><code>res = df.with_columns(pl.col('type').replace_strict(mapping).alias('mapped'))

┌───────┬───────┬───────────┐
│ label ┆ type  ┆ mapped    │
│ ---   ┆ ---   ┆ ---       │
│ str   ┆ str   ┆ struct[2] │
╞═══════╪═══════╪═══════════╡
│ AA    ┆ CASH  ┆ {1,&quot;E&quot;}   │
│ BB    ┆ ITEM  ┆ {-9,&quot;A&quot;}  │
│ AA    ┆ CHECK ┆ {46,&quot;A&quot;}  │
│ CC    ┆ CHECK ┆ {46,&quot;A&quot;}  │
└───────┴───────┴───────────┘

res.unnest('mapped')

┌───────┬───────┬─────┬────────┐
│ label ┆ type  ┆ qty ┆ origin │
│ ---   ┆ ---   ┆ --- ┆ ---    │
│ str   ┆ str   ┆ i64 ┆ str    │
╞═══════╪═══════╪═════╪════════╡
│ AA    ┆ CASH  ┆ 1   ┆ E      │
│ BB    ┆ ITEM  ┆ -9  ┆ A      │
│ AA    ┆ CHECK ┆ 46  ┆ A      │
│ CC    ┆ CHECK ┆ 46  ┆ A      │
└───────┴───────┴─────┴────────┘
</code></pre>
<p>All the key names are there, you just don't see it in the text representation. So question is - do you actually need data in the column to be python dictionaries? It'd be much easier to work with native polars struct.</p>
","2024-07-31 11:09:35","2","Answer"
"78815926","","Apply Python dict to Polars column (using replace_strict)","<p>I have a <code>dict</code> and a polars <code>DataFrame</code> and want to map one column to the values of the dict:</p>
<pre class=""lang-py prettyprint-override""><code>import polars as pl

df = pl.DataFrame({
    'label': ['AA', 'BB', 'AA', 'CC'],
    'type':  ['CASH', 'ITEM', 'CHECK', 'CHECK'],
})

mapping = {
    'CASH':  {'qty':  1, 'origin': 'E'},
    'ITEM':  {'qty': -9, 'origin': 'A'},
    'CHECK': {'qty': 46, 'origin': 'A'},
}
df.with_columns(pl.col('type').replace_strict(mapping).alias('mapped'))
</code></pre>
<p>This outputs</p>
<pre><code>shape: (4, 3)
┌───────┬───────┬───────────┐
│ label ┆ type  ┆ mapped    │
│ ---   ┆ ---   ┆ ---       │
│ str   ┆ str   ┆ struct[2] │
╞═══════╪═══════╪═══════════╡
│ AA    ┆ CASH  ┆ {1,&quot;E&quot;}   │
│ BB    ┆ ITEM  ┆ {-9,&quot;A&quot;}  │
│ AA    ┆ CHECK ┆ {46,&quot;A&quot;}  │
│ CC    ┆ CHECK ┆ {46,&quot;A&quot;}  │
└───────┴───────┴───────────┘
</code></pre>
<p>The problem is, it only takes the values of the dict and entirely drops the keys.</p>
<p>So I tried using <code>replace_strict(mapping, return_dtype=pl.Object)</code>, but this gives error</p>
<pre><code>File site-packages\polars\lazyframe\frame.py:2026,
     in LazyFrame.collect(self, type_coercion, predicate_pushdown, projection_pushdown,
                          simplify_expression, slice_pushdown, comm_subplan_elim, 
                          comm_subexpr_elim, cluster_with_columns, no_optimization,
                          streaming, engine, background, _eager, **_kwargs)
   2024 # Only for testing purposes
   2025 callback = _kwargs.get(&quot;post_opt_callback&quot;, callback)
-&gt; 2026 return wrap_df(ldf.collect(callback))

InvalidOperationError: casting from Int64 to Unknown not supported
</code></pre>
<p>Ultimately, the output I am after is the table below. How do I achieve this?</p>
<pre><code>shape: (4, 3)
┌───────┬───────┬─────────────────────────┐
│ label ┆ type  ┆ mapped                  │
│ ---   ┆ ---   ┆ ---                     │
│ str   ┆ str   ┆ object                  │
╞═══════╪═══════╪═════════════════════════╡
│ AA    ┆ CASH  ┆ {&quot;qty&quot;:1,&quot;origin&quot;:&quot;E&quot;}  │
│ BB    ┆ ITEM  ┆ {&quot;qty&quot;:-9,&quot;origin&quot;:&quot;A&quot;} │
│ AA    ┆ CHECK ┆ {&quot;qty&quot;:46,&quot;origin&quot;:&quot;A&quot;} │
│ CC    ┆ CHECK ┆ {&quot;qty&quot;:46,&quot;origin&quot;:&quot;A&quot;} │
└───────┴───────┴─────────────────────────┘
</code></pre>
<p><em>I am using polars==1.3.0</em></p>
","2024-07-31 11:02:41","3","Question"
"78815819","78815729","","<p>Newtonsoft's JSON &quot;NamingStrategy&quot; property is &quot;taking care&quot; of camel-casing or not the object property names. Please see the following example:
<a href=""https://www.newtonsoft.com/json/help/html/NamingStrategySkipSpecifiedNames.htm"" rel=""nofollow noreferrer"">Configure NamingStrategy property name serialization</a></p>
<p>With Microsoft JSON configuration it's a little bit different:
<a href=""https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/customize-properties?pivots=dotnet-8-0"" rel=""nofollow noreferrer"">How to customize property names and values with System.Text.Json</a></p>
","2024-07-31 10:33:28","1","Answer"
"78815729","","Prevent Dictionary Key from changing the case in the output","<p>I have this code to generate the output shown below, when I debug the code, I can see the <code>&quot;CostLine.ExternalId&quot;</code> but when the result is shown in Postman, the case has changed to <code>&quot;costLine.ExternalId&quot;</code>, Is there any way that we could prevent this?</p>
<p>Code:</p>
<pre><code>rows[row.Id] = new Dictionary&lt;string, List&lt;string&gt;&gt; {
   {
      &quot;CostLine.ExternalId&quot;, [&quot;123456&quot;, &quot;7959587&quot;, &quot;8752296&quot;]
   }
};
</code></pre>
<p>Result:</p>
<pre><code>&quot;rows&quot;: {
            &quot;9335b339-d283-4175-bb4d-53f133fdee46&quot;: {
                &quot;costLine.ExternalId&quot;: [
                    &quot;123456&quot;
                ]
            },
            &quot;c557f6cc-b443-41ac-9214-601b3cb24326&quot;: {
                &quot;costLine.ExternalId&quot;: [
                    &quot;7959587&quot;, &quot;8752296&quot;
                ]
            }
        }
</code></pre>
<p>I have tried <code>StringComparer.InvariantCultureIgnoreCase</code> but does not work. Any help is highly appreciated.</p>
","2024-07-31 10:14:14","0","Question"
"78814082","78813866","","<p>Have you considered using JSON pointers? (<a href=""https://datatracker.ietf.org/doc/html/rfc6901"" rel=""nofollow noreferrer"">RFC 6901</a>). They're like an <a href=""https://en.wikipedia.org/wiki/XPath"" rel=""nofollow noreferrer"">XPath</a> for JSON. There's a library in <a href=""https://pypi.org/project/jsonpointer/"" rel=""nofollow noreferrer"">pip</a>.</p>
<p>So to grab the first error code in an array of error objects you might do something like this:</p>
<pre><code>from jsonpointer import resolve_pointer
error_code = resolve_pointer(json_behemoth, '/long/path/to/errors/0/code', None)
</code></pre>
<p>This library also allows you to <a href=""https://python-json-pointer.readthedocs.io/en/latest/mod-jsonpointer.html#jsonpointer.set_pointer"" rel=""nofollow noreferrer"">change the JSON structure</a>.</p>
","2024-07-31 00:44:40","0","Answer"
"78813912","78813866","","<p>Implement your own <code>dig()</code> function like Ruby's:</p>
<pre><code>def dictdig(d: dict, *keys):
    for k in keys:
        d = d.get(k)
        if not isinstance(d, dict):
            break
    return d

j1 = {'errors': {'code': 404}}
j2 = {'errors': {}}

print(dictdig(j1, 'errors', 'code'))
print(dictdig(j2, 'errors', 'code'))
</code></pre>
","2024-07-30 22:52:46","0","Answer"
"78813900","78813866","","<p>You can either:</p>
<ol>
<li><p>Provide a defaulted argument argument to <code>get</code> to make it work with a single line (at the slight expense of making some empty dictionaries that may not be needed):</p>
<pre><code>if json.get('errors', {}).get('code', 0) != 0:  # != 0 can become &quot;not in (None, 0)&quot; if the actual value might be None
    this_is_bad_throw_error
</code></pre>
</li>
<li><p>Use exception handling to handle <code>KeyError</code>s from all depths:</p>
<pre><code>try:
    if json['errors']['code'] != 0:  # != 0 can become &quot;not in (None, 0)&quot; if the actual value might be None
        this_is_bad_throw_error
except KeyError:
    # Missing errors or code means no error occurred, continue uninterrupted
    pass

</code></pre>
</li>
</ol>
<p>The latter is much cleaner, even if it does require extra indented blocks, and the performance cost is less than you might expect (Python exception handling is not multiple orders of magnitude more expensive than conditional control flow like it often is in languages like C++; there's a cost, especially when the <em>expected</em> case is an exception, but the <em>much</em> simpler code is usually worth it, and in this case, avoiding constructing the empty <code>dict</code>, and avoiding the more expensive general method call dispatch paths in favor of the interpreter special lookup syntax with fast paths, balances things out).</p>
<hr />
<p>If you're feeling ambitious, it's not hard to write a <code>dig</code> function to emulate the Ruby method:</p>
<pre><code>def dig(container, *keys_or_indices):
    result = container
    try:
        for ki in keys_or_indices:
            result = result[ki]
    except LookupError:  # Common parent of KeyError and IndexError, so like dig,
                         # it works with mappings and sequences
        return None
    return result
</code></pre>
<p>and test:</p>
<pre><code>if dig(json, 'errors', 'code') not in (None, 0):
    this_is_bad_throw_error
</code></pre>
<p>but I'd be leery of trying to write Ruby in Python, as you're replacing idioms Python developers will recognize with Rubyisms that are liable to confuse maintainers, increasing their workload for minimal benefit, if any.</p>
","2024-07-30 22:47:59","1","Answer"
"78813866","","How to Traverse a Python Dictionary While Avoiding KeyErrors?","<p>While parsing a large JSON, it's possible that some keys may only exist in certain circumstances, such as when an error is present. It's not uncommon to get a <code>200 OK</code> from the server's API, but then the response you got contains errors that should be checked for.</p>
<p>What's the best way to handle this?</p>
<p>I know that using things like <code>get()</code> are one way to handle KeyErrors.</p>
<pre><code>if json.get('errors') is not None:
    do_something
</code></pre>
<p>But what if we need to keep going? This feels horrible:</p>
<pre><code>if json.get('errors') is not None:
   if json.get('errors').get('code') is not None:
      if json.get('errors').get('code') != 0:
         this_is_bad_throw_error
</code></pre>
<p>Is there a better way? For example, <code>ruby</code> has a <code>dig()</code> method that basically condenses that whole line into <code>x = dig(:errors, :code)</code> and then you just check on <code>x</code> if it's a <code>nil</code> object or not; so 2 lines, instead of 4 (or more if you have to keep going deeper).</p>
<p>I have used <code>try-except</code> before to catch the <code>KeyError</code>, but this isn't an approach I necessarily care for.</p>
<p>I'm not against external libraries, but due to the location of where the code is being run it's <em>extremely</em> beneficial to stick to built-ins.</p>
","2024-07-30 22:31:15","-1","Question"
"78812920","78812801","","<p>You can use an object to map the cases instead of hardcoding them with a switch statement</p>
<pre><code>const categoryMap = {
1: SalePriceCtg,
2: ArticlesCtg,
// add more cases here
};

const wCategory = () =&gt; {
const Component = categoryMap[categoryhovered];
return Component ? &lt;Component /&gt; : &lt;div&gt;smth3&lt;/div&gt;;
};
</code></pre>
","2024-07-30 17:04:38","0","Answer"
"78812831","78812801","","<p>Here is a way to use an object instead of a switch statement:</p>
<pre><code>const wCategory = () =&gt; {
    const categories = {
        1: &lt;SalePriceCtg /&gt;,
        2: &lt;ArticlesCtg /&gt;,
        default: &lt;div&gt;smth3&lt;/div&gt;
    };

    return categories[categoryhovered] || categories.default;
};
</code></pre>
","2024-07-30 16:30:13","2","Answer"
"78812801","","How to use map in this situation instead of switch","<p>i want this to be mapping instead of hard coding the cases</p>
<pre><code>const wCategory = () =&gt; {
        switch (categoryhovered) {
            case 1:
                return &lt;SalePriceCtg /&gt;
            case 2:
                return &lt;ArticlesCtg /&gt;
            default:
                return &lt;div&gt;smth3&lt;/div&gt;
        }
    }
</code></pre>
<p>i cant map the cases so im searching for a better way to do it</p>
","2024-07-30 16:23:15","0","Question"
"78812479","78812036","","<p>Using a variation of <a href=""https://stackoverflow.com/questions/5228158/cartesian-product-of-a-dictionary-of-lists"">Cartesian product of a dictionary of lists</a>, this generates all of the valid dicts, based on the criteria. From here, you can select one by some mechanism of your choosing.</p>
<pre><code>import pandas as pd
import itertools

# Build a DataFrame
data = {'col_a': ['a', 'a', 'b', 'b', 'b', 'b', 'c', 'c', 'c'],
        'col_b': [1, 2, 1, 2, 3, 4, 1, 2, 3]}
df = pd.DataFrame(data)

# Convert the DataFrame to a dict with the col_b values associated with each col_a value
values = {x: df[df.col_a==x].col_b.tolist() for x in df.col_a.unique()}

# Generate the Cartesian product of the possible values
full_list = [(dict(zip(values.keys(), val))) for val in itertools.product(*values.values())]

# Filter down to just the results that don't have any duplicate values
valid_list = [ x for x in full_list if len(set(x.values())) == len(x.values())]
</code></pre>
<p>I'm probably stuffing too much into a single line of code, but the idea here is to create a dict with a list of valid values from each <code>col_a</code> value, then generate a list with the cartesian product of all of those valid values, then use <code>set()</code> to get the unique values in each result to see if they are unique (if not unique, then the length of the set will be less than the length of the list of values).</p>
","2024-07-30 15:09:31","1","Answer"
"78812363","78812036","","<h4>all ordered combination</h4>
<p>Starting from the trivial case. If you have all combinations, as in your example, then you'll need to pick the 1st a, 2nd b, 3rd c, etc.</p>
<pre><code>import numpy as np

N = 3 # number of items per group
a = np.arange(N)

out = df.iloc[a+N*a].set_index('col_a')['col_b'].to_dict()
# {'a': 1, 'b': 2, 'c': 3}
</code></pre>
<h4>generic approach</h4>
<p>If you want a generic approach that will be independent of the combinations and order, you could compute a <a href=""https://pandas.pydata.org/docs/reference/api/pandas.crosstab.html"" rel=""nofollow noreferrer""><code>crosstab</code></a> and perform a <a href=""https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.linear_sum_assignment.html"" rel=""nofollow noreferrer""><code>linear_sum_assignment</code></a>:</p>
<pre><code>from scipy.optimize import linear_sum_assignment

tmp = pd.crosstab(df['col_a'], df['col_b'])
r, c = linear_sum_assignment(tmp, maximize=True)

out = dict(zip(tmp.index[r], tmp.columns[c]))
</code></pre>
<p>Output: <code>{'a': 1, 'b': 2, 'c': 3}</code></p>
<p>This will ensure unique use of col_a and col_b.</p>
<p>Intermediates:</p>
<pre><code># tmp
col_b  1  2  3
col_a         
a      1  1  1
b      1  1  1
c      1  1  1
</code></pre>
<h5>more complex example:</h5>
<pre><code>df = pd.DataFrame({'col_a': ['a', 'b', 'a', 'b', 'b', 'b', 'c', 'c', 'd'],
                   'col_b': [1, 4, 3, 1, 2, 3, 1, 2, 3]})
</code></pre>
<p>Intermediate <code>tmp</code>:</p>
<pre><code>col_b  1  2  3  4
col_a            
a      1  0  1  0
b      1  1  1  1
c      1  1  0  0
d      0  0  1  0
</code></pre>
<p>Output:</p>
<pre><code>{'a': 1, 'b': 4, 'c': 2, 'd': 3}
</code></pre>
","2024-07-30 14:39:07","2","Answer"
"78812149","78812036","","<p>You can easily <strong>convert a DataFrame to a dictionary</strong> by extracting unique values from each column with <code>unique().tolist()</code>, and then pairing them into a dictionary using <code>dict(zip(unique_keys, unique_values))</code>.</p>
<h1>code:</h1>
<pre class=""lang-py prettyprint-override""><code>import pandas as pd

# Just recreate the DataFrame
data = {'col_a': ['a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'c'], 'col_b': [1, 2, 3, 1, 2, 3, 1, 2, 3]}
df = pd.DataFrame(data)

# convert the DataFrame to a dictionary
unique_keys = df['col_a'].unique().tolist()
unique_values = df['col_b'].unique().tolist()
result_dict = dict(zip(unique_keys, unique_values)) # {'a': 1, 'b': 2, 'c': 3}
</code></pre>
","2024-07-30 13:58:54","1","Answer"
"78812125","78812036","","<p>Your question gives me a feeling that you are not sure about the difference between list, tuple and dictionary. Let me remind you that a dictionary is a collection of key-value pairs, <strong>where each key is unique</strong> and associated with a value. Since your database has one-to-many mapping, dictionary is not a suitable option here because it not only disallows duplicate but also overwrites when it finds one.</p>
<p>You can define both columns as a separate lists and then merge them using the append/extend/+ method. Their positions can be easily manageable in this case as there is no issue like overwriting/uniqueness in tuples.</p>
","2024-07-30 13:53:48","-1","Answer"
"78812036","","How to create a dictionary with distinct values from pandas dataframe?","<p>I have a dataframe which looks like this:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>col_a</th>
<th>col_b</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>1</td>
</tr>
<tr>
<td>a</td>
<td>2</td>
</tr>
<tr>
<td>b</td>
<td>1</td>
</tr>
<tr>
<td>b</td>
<td>2</td>
</tr>
<tr>
<td>b</td>
<td>3</td>
</tr>
<tr>
<td>b</td>
<td>4</td>
</tr>
<tr>
<td>c</td>
<td>1</td>
</tr>
<tr>
<td>c</td>
<td>2</td>
</tr>
<tr>
<td>c</td>
<td>3</td>
</tr>
</tbody>
</table></div>
<p>I want to create a dictionary which looks like this (distinct/unique value for every key):</p>
<p>{a:1, b:2, c:3} or {a:2, b:4, c:1} or {a:2, b:1, c:3}, etc.</p>
<p>But with standard df.set_index('col_a')['col_b'].to_dict() I get:</p>
<p>{a:3, b:3, c:3}.</p>
<p>Is there a way to create a dictionary with unique values for every key? Or is there a way to filter dataframe to do the same?</p>
","2024-07-30 13:33:29","0","Question"
"78810421","78791503","","<p>I solved it with a different approach:<br />
Given:</p>
<ul>
<li>a collection of F files, each containing P phrases of W words each; typically F is 300, P=10 on the average and W=5 on the average.</li>
<li>a Dictionary containing N entries; N=1000</li>
</ul>
<p>For each phrase in the files, find the longest 1- to 3-word sub-phrase matching one of the dictionary keys.</p>
<p>Solution:<br />
For each phrase p in F, create a List containing all 1-, 2- and 3-word sub-phrases, ordered by length descending; there will be 3W-3 sub-phrases.<br />
For each sub-phrase in the List, check if it matches a key in the Dictionary.</p>
<p>(In contrast, the brute force approach, for each phrase p in each file, iterates over the dictionary keys, using p.Contains(key) to find a match.)</p>
<p>Performance:
The time spent is linearly proportional to F, P and W and constant for the dictionary lookup.<br />
This is an improvement over the brute force approach, which is proportional to the dictionary size as well.   Thus, the performance gain goes up with the dictionary size.   Additionally, the brute force approach uses string.Contains() which is time consuming as well.
To sum up, the brute force solution is O(N) while the sub-phrase solution is O(1).<br />
I think there is no need to post any code, which is just a simple double loop which builds the sub-phrases list.</p>
","2024-07-30 07:55:35","0","Answer"
"78805194","78805145","","<p><a href=""https://docs.python.org/3/library/collections.html#collections.Counter"" rel=""nofollow noreferrer"">collections Counter</a> makes this very simple since you can add Counter objects together. In other words, this does what you want:</p>
<pre><code>Counter(dictA) + Counter(dictB) + Counter(dictC)
</code></pre>
<p>If you want to generalize, you can use <code>sum()</code> and provide an empty Counter for the start parameter, so make the very succinct:</p>
<pre><code>from collections import Counter

dictA = {'A': 1, 'B': 2, 'C': 3}
dictB = {'C': 1, 'D': 2, 'E': 3}
dictC = {'A': 2, 'C': 4, 'E': 6, 'G': 8}

dicts = [dictA, dictB, dictC]

counts = sum(map(Counter, dicts), Counter())
# Counter({'E': 9, 'C': 8, 'G': 8, 'A': 3, 'B': 2, 'D': 2})
</code></pre>
<p>A counter object acts just like a dictionary, but if you specifically  need a dict, you can just use <code>dict(counts)</code>.</p>
","2024-07-29 02:00:40","0","Answer"
"78805187","78805145","","<p>An easy way using the format you showed, is to collect all the keys then <code>.get()</code> each key with a default of 0 and add into a new dictionary.</p>
<p>Here is that basic structure that shows it in action:</p>
<pre><code>dictA = {'A': 1, 'B': 2, 'C': 3}
dictB = {'C': 1, 'D': 2, 'E': 3}
dictC = {'A': 2, 'C': 4, 'E': 6, 'G': 8}
dict_list = [dictA, dictB, dictC]

# Collect all the keys from each dict
all_keys = set()
for dictx in dict_list:
    all_keys.update(dictx.keys())

# Iterate through each key adding it to the result
resultDict = {}
for key in all_keys:
    # Pre-init with a 0 then grab it or default to 0 from each dict
    resultDict[key] = 0
    for dictx in dict_list:
        resultDict[key] += dictx.get(key, 0)

print(resultDict)
</code></pre>
<p>Here is a sample code condensed to a oneliner:</p>
<pre><code>resultDict = {key: sum([x.get(key, 0) for x in dict_list]) for key in set().union(*(d.keys() for d in dict_list))}
</code></pre>
<p>Mainly inspired by <a href=""https://stackoverflow.com/questions/11399384/"">this answer</a>.</p>
<p>Let me know if you have any questions.</p>
","2024-07-29 01:55:07","0","Answer"
"78805145","","How can I add values in different dictionaries with same keys together?","<p>Let's say I have three different dictionaries:</p>
<pre><code>dictA = {'A': 1, 'B': 2, 'C': 3}
dictB = {'C': 1, 'D': 2, 'E': 3}
dictC = {'A': 2, 'C': 4, 'E': 6, 'G': 8}
</code></pre>
<p>And I want to &quot;add&quot; these dictionaries together, in the <code>dictA+dictB+dictC</code> order. What I mean by that is:</p>
<ul>
<li><p>values with the same keys will be added together (for example <code>'A': 1</code> in dictA and <code>'A': 2</code> in dictB will become <code>'A': 3</code> in the end)</p>
</li>
<li><p>values without a previously existing key will be created (for example during <code>dictB + dictC</code>, the key <code>'G'</code> does not exist, so it will be created)</p>
</li>
</ul>
<p>The result for this example should look something like this:</p>
<pre><code>resultDict = {'A': 3, 'B': 2, 'C': 8, 'D': 2, 'E': 9, 'G': 2,}
</code></pre>
<p>Is there an easy way to do this? The dictionaries I am actually working with are much larger and nested in multiple other dictionaries, so sorry if this example isn't well explaining. I tried fidgeting around with for loops but as I mentioned, the lists I am actually working with are much larger and not that easy to work with.</p>
","2024-07-29 01:20:34","-2","Question"
"78799162","78798885","","<p>As you discovered you cannot put a full <code>if</code>/<code>else</code> block inside of a dictionary block. You can use a <a href=""https://docs.python.org/3/reference/expressions.html#conditional-expressions"" rel=""nofollow noreferrer"">conditional expression</a> (sometimes referred to as a ternary expression).</p>
<p>So while this kind of looks like what you want, it doesn't work:</p>
<pre class=""lang-py prettyprint-override""><code>d = {
    if data['x'] is None:
        'field': 'empty'
    else:
        'field': data['x']['y']
}
</code></pre>
<p>Use the conditional expression instead:</p>
<pre class=""lang-py prettyprint-override""><code>d = {
    'field': data['x']['y'] if data['x'] is not None else 'empty'
}

# or with more error checking for this specific case:
d = {
    'field': data['x']['y'] if 'x' in data and data['x'] is not None else 'empty'
}

</code></pre>
","2024-07-26 16:41:49","1","Answer"
"78798885","","TypeError: 'NoneType' object is not subscriptable while fetching information for rejected reason from jira","<p>for issue in issues:</p>
<pre><code>    fields = issue['fields']
    results.append({
        'key': issue['key'],
        'summary': fields['summary'],
        'description': fields['description'],
        'fix_details': get_custom_field_value(fields, 'customfield_25600'),  # Replace with actual custom field ID
        'url': f&quot;{JIRA_SERVER}/browse/{issue['key']}&quot;,
        'status' : fields['status']['name'],
        'rejected_reason': fields['customfield_19822']['value']
    })
</code></pre>
<p>I have a piece of python code but when I try to execute this, it failed in this block for last row
<code>'rejected_reason': fields['customfield_19822']['value']</code> as there are multiple records for which, this field value is not populated or is <code>None</code>. This code works fine for those records where some valid value for this field is present.</p>
<pre><code>File &quot;c:\projects\LL\Jira_LL\jira_LL.py&quot;, line 84, in query
    'rejected_reason': fields['customfield_19822']['value']
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'NoneType' object is not subscriptable
</code></pre>
<p>I have tried to put if else</p>
<pre><code> 'rejected_reason': fields['customfield_19822']['value']
             if rejected_reason is not None: 
                   rejected_reason={rejected_reason}
             else
                   rejected_reason=NULL
</code></pre>
<p>but this is failing with</p>
<pre><code>     if rejected_reason is not None:
                               ^
SyntaxError: invalid syntax
</code></pre>
","2024-07-26 15:29:38","-1","Question"
"78798038","78797584","","<p>You can recursively <em>traverse</em> your dict and make a <a href=""https://networkx.org/documentation/stable/reference/classes/digraph.html"" rel=""nofollow noreferrer""><code>DiGraph</code></a> from the collected edges :</p>
<pre class=""lang-py prettyprint-override""><code>import networkx as nx

def traverse(data, p=&quot;L0&quot;):
    if isinstance(data, dict):
        for k, v in data.items():
            yield p, k
            yield from traverse(v, k)
    elif p is not None:
        yield p, data

DG = nx.DiGraph(traverse(data)) # or `Graph` to remove the arrows

# requires `pygraphviz`
from IPython.display import Image
Image(nx.nx_agraph.to_agraph(DG).draw(format=&quot;png&quot;, prog=&quot;dot&quot;))
</code></pre>
<p><a href=""https://i.sstatic.net/fouxK16t.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/fouxK16t.png"" alt=""enter image description here"" /></a></p>
","2024-07-26 12:23:54","2","Answer"
"78797729","78797584","","<p>You need to unpack your data into a series of node chains.  Then you can add them to the graph in sequence.</p>
<pre class=""lang-py prettyprint-override""><code>data = {'L1': {'sub L1': 'sub sub L1'},
 'L2': 'sub L2',
 'L3': {'sub L3': {'sub sub L3': 'sub sub sub L3'}}}

def unpack(d, is_root=True):
    if is_root:
        root = []
    r = []
    for k, v in d.items():
        if is_root:
            r = []
            root.append(r)
        r.append(k)
        if isinstance(v, dict):
            r.extend(unpack(v, False))
        else:
            r.append(v)
    return root if is_root else r

node_lists = unpack(data)
node_lists
# returns:
[['L1', 'sub L1', 'sub sub L1'],
 ['L2', 'sub L2'],
 ['L3', 'sub L3', 'sub sub L3', 'sub sub sub L3']]
</code></pre>
<p>For plotting:</p>
<pre class=""lang-py prettyprint-override""><code>g = networkx.DiGraph()
for node_chain in node_lists:
    for a, b in zip(['root'] + node_chain, node_chain):
        g.add_edge(a, b)

pos = networkx.nx_pydot.graphviz_layout(g)
networkx.draw_networkx(g, pos)
networkx.draw_networkx_labels(g, pos)
</code></pre>
","2024-07-26 11:11:03","1","Answer"
"78797584","","Python nested dictionary to Tree","<p>I am trying to display my nested dictionary as a Tree.</p>
<pre><code>data = {&quot;L1&quot; : 
            {&quot;sub L1&quot; : 
                &quot;sub sub L1&quot;}, 
        &quot;L2&quot; :
            &quot;sub L2&quot;, 
        &quot;L3&quot; :
            {&quot;sub L3&quot; :
                {&quot;sub sub L3&quot; :
                    &quot;sub sub sub L3&quot;}}}
</code></pre>
<p>As you can see, it's all text data and there is no real correlation between any of it.</p>
<p>I have tried networkx and dendograms but they seem to be breaking as I have a nested dictionary.</p>
<p>Is there a better way to do this?</p>
","2024-07-26 10:38:50","1","Question"
"78795529","78795256","","<p>I recommend to you debug and put a breakpoint here</p>
<pre><code>v = myMap[str]
</code></pre>
<p>And then check the value of str variable, if it is not &quot;fruit&quot; you found your problem</p>
","2024-07-25 21:40:50","0","Answer"
"78795256","","Using a str variable as a key for a map always returns null","<p>I am trying to use a Map without success.</p>
<p>I have whittled it down to a bare-bones case:</p>
<p>I create a Map with four entries:</p>
<pre><code>(&quot;fruit&quot;, 25)
(&quot;veg&quot;, 30)
(&quot;baked&quot;, 35)
(&quot;flower&quot;, 40)
</code></pre>
<p>I create a variable: <code>str: String</code> for my key. I then assign a value to the variable: <code>var str = &quot;fruit&quot;</code></p>
<p>I try doing <code>v = myMap[str]</code>, and I get null. Same result with <code>myMap.get(str)</code>.</p>
<p>If I try <code>v = myMap[&quot;fruit&quot;]</code>, I get 25. If I try <code>v = myMap.get(&quot;fruit&quot;)</code>, I also get 25.</p>
<p>Any ideas? The actual app has 2500 (key, value) pairs so I really need this to work with a variable holding the key.</p>
","2024-07-25 20:06:24","0","Question"
"78794846","78794766","","<p>The below 1-liner should work.</p>
<pre><code>users = {'first-name': ['Jim', 'John', 'Jane'], 'last-name': ['Boothe', 'Smith', 'Doe'], 'user': ['100', '101', '102']}
expected_payload = [{'first-name': 'Jim', 'last-name': 'Boothe', 'user': '100'}, {'first-name': 'John', 'last-name': 'Smith', 'user': '101'}, {'first-name': 'Jane', 'last-name': 'Doe', 'user': '102'} ]


payload = [dict(zip(users.keys(), xs)) for xs in zip(*users.values())]

assert payload == expected_payload
</code></pre>
","2024-07-25 18:02:56","1","Answer"
"78794807","78794766","","<p>Assuming that all lists are always equal in length:</p>
<pre class=""lang-py prettyprint-override""><code>result = [{key: value[i] for key, value in users.items()} for i in range(len(users[&quot;first-name&quot;]))]
</code></pre>
","2024-07-25 17:51:45","0","Answer"
"78794766","","Take a Python dictionary with values as lists and create a new list of dictionaries each with the initial key and list values","<p>If I have a dictionary with list values:</p>
<pre><code>users = {'first-name': ['Jim', 'John', 'Jane'], 'last-name': ['Boothe', 'Smith', 'Doe'], 'user': ['100', '101', '102']}
</code></pre>
<p>How can I create a new list of dictionaries by separating out each index of the initial dictionary lists with the initial key?</p>
<p>By that, I mean, given the initial dictionary above, I would like to create the following:</p>
<pre><code>payload = [{'first-name': 'Jim&quot;, 'last-name': 'Boothe', 'user': '100'}, {'first-name': 'John', 'last-name': 'Smith', 'user': '101'}, {'first-name': 'Jane', 'last-name': 'Doe', 'user': '102'} ]
</code></pre>
<p>I'm having a hard time wrapping my head around looping through each key's value index and turning it into a new dictionary with the initial key.</p>
<p>I have sorted how to get my first dictionary into my new list, just having issues looping through the rest of the indexes.</p>
<pre><code>users = {'first-name': ['Jim', 'John', 'Jane'], 'last-name': ['Boothe', 'Smith', 'Doe'], 'user': ['100', '101', '102']}

for k in users:
    dict[k] = users[k][0]
    payload = [dict]
print(payload)
</code></pre>
<p>Output:</p>
<pre><code>[{'user': '100', 'first-name': 'Jim', 'last-name': 'Boothe'}]
</code></pre>
<p>But how do I build on this?</p>
","2024-07-25 17:44:20","-1","Question"
"78792533","78787630","","<p>I like @JvdV answer and it's probably the simplest to implement while also being independent of the application.</p>
<p>My answer will focus on improving the speed by using the <code>Like</code> operator and I will provide a comparison with the other answers.</p>
<p>The idea is to iterate all keys with something like:</p>
<pre><code>For Each tkey In Dict
    If tkey Like &quot;*apple*&quot; Then
       ...
    End If
Next tkey
</code></pre>
<p>We will need a support function to adapt patterns if we need case-insensitive comparisons. For example <code>If tkey Like &quot;*apple*&quot; Then</code> is case-sensitive and we need <code>If tkey Like &quot;*[Aa][Pp][Pp][Ll][Ee]*&quot; Then</code> for case-insensitive comparisons.</p>
<p>To adapt patterns, we need the following support function:</p>
<pre><code>Public Function CaseInsensitivePattern(ByRef pattern As String) As String
    Dim chars As Long: chars = Len(pattern)
    Dim i As Long
    Dim j As Long
    Dim chL As String
    Dim chU As String
    '
    If chars = 0 Then Exit Function
    CaseInsensitivePattern = Space$(chars * 4) 'Init Buffer
    '
    j = 1
    For i = 1 To chars
        chL = LCase$(Mid$(pattern, i, 1))
        chU = UCase$(chL)
        If chL = chU Then
            Mid$(CaseInsensitivePattern, j) = chL
            j = j + 1
        Else
            Mid$(CaseInsensitivePattern, j) = &quot;[&quot; &amp; chU &amp; chL &amp; &quot;]&quot;
            j = j + 4
        End If
    Next i
    CaseInsensitivePattern = Left$(CaseInsensitivePattern, j - 1)
End Function
</code></pre>
<p>In order to test this on lots of items, I will use <a href=""https://github.com/cristianbuse/VBA-FastDictionary"" rel=""nofollow noreferrer"">VBA-FastDictionary</a> instead of Scripting.Dictionary. Adding 1 million text keys with Scripting.Dictionary takes about 23 seconds on my computer while Fast Dictionary only takes about 0.65 seconds. There is a <a href=""https://github.com/cristianbuse/VBA-FastDictionary/tree/master/benchmarking"" rel=""nofollow noreferrer"">benchmarking</a> section if you want more details. If you don't mind waiting to add the items then continue to use Scripting.Dictionary.</p>
<p>Here is the comparison:</p>
<pre><code>Sub TestSpeed()
    Dim i As Long
    Const iterations As Long = 1000000
    Dim t As Double
    Dim dict As New Dictionary
    Dim v As Variant
    Dim coll As Collection
    '
    'Add key-item pairs
    For i = 1 To iterations
        dict.Add &quot;Key &quot; &amp; i, i
        If i Mod iterations \ 10 = 0 Then dict.Add &quot;apple &quot; &amp; i, i
    Next i
    Debug.Print &quot;Results in seconds&quot;
    Debug.Print &quot;------------------&quot;
    '
    'Filter solution
    Dim arr As Variant
    t = Timer
    arr = Filter(dict.Keys, &quot;test&quot;, True, vbTextCompare)
    Debug.Print &quot;Filter on Dict.Keys: &quot; &amp; Round(Timer - t, 3)
    '
    'Match solution
    Dim vMatch As Variant
    t = Timer
    vMatch = Application.Match(&quot;*apple*&quot;, dict.Keys, 0)
    Debug.Print &quot;Match on Dict.Keys: &quot; &amp; Round(Timer - t, 3)
    '
    'Pattern match case-sensitive
    Dim pattern As String: pattern = &quot;*apple*&quot;
    Set coll = New Collection
    t = Timer
    For Each v In dict
        If v Like pattern Then coll.Add v
    Next v
    Debug.Print &quot;Pattern match case-sensitive on Dict (implicit keys): &quot; &amp; Round(Timer - t, 3)
    '
    'Pattern match case-insensitive
    Dim patternI As String: patternI = CaseInsensitivePattern(pattern)
    Set coll = New Collection
    t = Timer
    For Each v In dict
        If v Like patternI Then coll.Add v
    Next v
    Debug.Print &quot;Pattern match case-insensitive on Dict (implicit keys): &quot; &amp; Round(Timer - t, 3)
    '
    'Pattern match case-sensitive on keys array
    Set coll = New Collection
    t = Timer
    For Each v In dict.Keys
        If v Like pattern Then coll.Add v
    Next v
    Debug.Print &quot;Pattern match case-sensitive on Dict.Keys: &quot; &amp; Round(Timer - t, 3)
End Sub
</code></pre>
<p>On my VBA7 x64 Win computer I get the following results in the Immediate window:</p>
<pre><code>Results in seconds
------------------
Filter on Dict.Keys: 0.309
Match on Dict.Keys: 0.133
Pattern match case-sensitive on Dict (implicit keys): 0.074
Pattern match case-insensitive on Dict (implicit keys): 0.133
Pattern match case-sensitive on Dict.Keys: 0.098
</code></pre>
<p>Note that the <code>Match</code> approach only returns the first found result while all others return all matches in either an array or a collection result.</p>
","2024-07-25 09:29:50","1","Answer"
"78792037","78791503","","<p>Judging from your requirement the brute-force approach is really not a best way to do it. A much more efficient approach would be to use a &quot;Trie&quot; (prefix tree) type. Using &quot;Trie&quot; can help you efficiently search for the longest matching key in a given phrase.
Just create a &quot;Tire&quot; structure, than insert each key from your &quot;SortedDictionary&quot; into the &quot;Trie&quot;. Each node in the &quot;Trie&quot; structure will represent a character of a key. At the end of each key, store the corresponding value (address).
For the search for longest match you can implement like:
For each phrase, iterate through each substring and search for it in the &quot;Trie&quot; structure. Than just track the longest match found for each phrase.
I believe it what you need.
Take a look here:
<a href=""https://gist.github.com/efruchter/c699a75420363c95b1ad"" rel=""nofollow noreferrer"">A Trie implementation in C#</a>,
<a href=""https://code-maze.com/csharp-using-trie-class-for-efficient-text-pattern-searching/"" rel=""nofollow noreferrer"">Using Trie Class for Efficient Text Pattern Searching in C#</a></p>
<p>I just put some code below. I think in general it does what you need:</p>
<pre><code>public sealed class Trie
{
    private readonly TrieNode _root = new();

    public void Insert(string key, string address)
    {
        var node = _root;
        foreach (var ch in key)
        {
            if (!node.Children.ContainsKey(ch))
            {
                node.Children[ch] = new TrieNode();
            }

            node = node.Children[ch];
        }

        node.Address = address;
    }

    public string SearchLongestMatch(string phrase, out string address)
    {
        address = null;
        var maxLength = 0;
        TrieNode longestMatchNode = null;

        for (var i = 0; i &lt; phrase.Length; i++)
        {
            var node = _root;
            var length = 0;
            for (var j = i; j &lt; phrase.Length; j++)
            {
                var ch = phrase[j];
                if (node.Children.TryGetValue(ch, out var child))
                {
                    node = child;
                    length++;
                    if (length &gt; maxLength)
                    {
                        maxLength = length;
                        longestMatchNode = node;
                    }
                }
                else
                {
                    break;
                }
            }
        }

        if (longestMatchNode != null)
        {
            address = longestMatchNode.Address;
            var index = phrase.IndexOf(longestMatchNode.Address, StringComparison.Ordinal);
            if (index != -1)
            {
                return phrase.Substring(index, maxLength);
            }
        }

        return null;
    }
}
public class TrieNode
{
    public Dictionary&lt;char, TrieNode&gt; Children { get; set; } = new();
    public string Address { get; set; }
}

public sealed class DescendingComparer&lt;T&gt; : IComparer&lt;T&gt; where T : IComparable&lt;T&gt;
{
    public int Compare(T? x, T? y)
    {
        return y.CompareTo(x);
    }
}
public class Program
{
    public static void Main()
    {
        var dict = new SortedDictionary&lt;string, string&gt;(new DescendingComparer&lt;string&gt;())
            { { &quot;red fox&quot;, &quot;address1&quot; }, { &quot;weasel&quot;, &quot;address2&quot; }, { &quot;foxes&quot;, &quot;address3&quot; }, { &quot;fox&quot;, &quot;address4&quot; } };
        var trie = new Trie();
        foreach (var kvp in dict)
        {
            trie.Insert(kvp.Key, kvp.Value);
        }

        var phrases = new List&lt;string&gt; { &quot;today the red fox is home&quot;, &quot;no foxes today&quot; };
        foreach (var phrase in phrases)
        {
            var match = trie.SearchLongestMatch(phrase, out var address);
            Console.WriteLine($&quot;Phrase: \&quot;{phrase}\&quot; - Match: \&quot;{match}\&quot; - Address: \&quot;{address}\&quot;&quot;);
        }
    }
}
</code></pre>
","2024-07-25 07:45:12","0","Answer"
"78791503","","Finding the longest Dictionary.Key match in a phrase","<p>I have a SortedDictionary&lt;string, string&gt;, ordered by key length descending, of the form:</p>
<ul>
<li>red fox - address1</li>
<li>weasel - address2</li>
<li>foxes - address3</li>
<li>fox - address3
etc.<br />
and a list of phrases e.g.<br />
&quot;today the red fox is home&quot;<br />
&quot;no foxes today&quot;<br />
etc</li>
</ul>
<p>I need to find the value of the longest key in the dictionary that matches a substring in a given phrase.
Given that the dictionary has about one thousand entries, is there a better approach than a brute force search?</p>
<p>The examples above should return:<br />
&quot;red fox&quot; - address1<br />
&quot;foxes&quot; - address3<br />
I have the brute force solution of iterating over the Keys, but in view of the number of keys and the need to perform the search in tens of phrases, I'm looking for a cleverer approach.
-1</p>
<p>I did some performance measuring.<br />
With a dictionary of 100 keys, searching for matches in 100 phrases took on the average 65 ms.<br />
If the execution time scales linearly with the dictionary length and with the number of phrases, then the whole process will take about 20 seconds (search time only).<br />
Taking into account the time needed to read the phrases from files and to make use of the matches, it will take probably 3-4 minutes for the whole run.<br />
The user will have to look at some animation for this time, or she could drink a glass of something.<br />
Would this be acceptable?<br />
If yes, the brute force approach is OK.<br />
If not, I am still open to suggestions.</p>
","2024-07-25 04:59:16","0","Question"
"78791267","78791224","","<p>Try using the <a href=""https://docs.swift.org/swift-book/documentation/the-swift-programming-language/properties/"" rel=""nofollow noreferrer""><code>didSet</code></a> observer after encapsulating your dictionaries within a class:</p>
<pre class=""lang-swift prettyprint-override""><code>import Foundation

enum CharacterAttributes: String, Codable {
    case strength
    case constitution
    case dexterity
    case intelligence
}

enum CharacterStats: String, Codable {
    case maxHealthPoint
    case maxTacticPoint
    case maxActionPoint
    case movementSpeed
}

class Character {
    private var _attributes = [CharacterAttributes: Float]() {
        didSet {
            updateStats()
        }
    }
    
    private var _stats = [CharacterStats: Float]()
    
    var attributes: [CharacterAttributes: Float] {
        get { _attributes }
        set {
            _attributes = newValue
            updateStats()
        }
    }
    
    var stats: [CharacterStats: Float] {
        get { _stats }
        set {
            _stats = newValue
        }
    }
    
    init(attributes: [CharacterAttributes: Float]) {
        self._attributes = attributes
        updateStats()
    }
    
    private func updateStats() {
        _stats[.maxHealthPoint] = (_attributes[.constitution] ?? 0) * 100
        _stats[.maxTacticPoint] = ((_attributes[.dexterity] ?? 0) + (_attributes[.intelligence] ?? 0)) * 1.5
        _stats[.maxActionPoint] = (_attributes[.constitution] ?? 0) * 10
        if _stats[.movementSpeed] == nil { // Allow manual setting
            _stats[.movementSpeed] = (_attributes[.dexterity] ?? 0) + 70
        }
    }
}
</code></pre>
<p><strong>Example Usage:</strong></p>
<pre><code>var character = Character(attributes: [.constitution: 5, .dexterity: 3, .intelligence: 2])
print(character.stats)
character.attributes[.constitution] = 7
character.stats[.movementSpeed] = 100
character.attributes[.dexterity] = 4
print(character.stats)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[SwiftPlayground.CharacterStats.maxHealthPoint: 500.0, SwiftPlayground.CharacterStats.maxTacticPoint: 7.5, SwiftPlayground.CharacterStats.maxActionPoint: 50.0, SwiftPlayground.CharacterStats.movementSpeed: 73.0]
[SwiftPlayground.CharacterStats.maxHealthPoint: 700.0, SwiftPlayground.CharacterStats.maxTacticPoint: 9.0, SwiftPlayground.CharacterStats.maxActionPoint: 70.0, SwiftPlayground.CharacterStats.movementSpeed: 100.0]
</code></pre>
","2024-07-25 02:43:34","3","Answer"
"78791224","","Update values in a dictionary based on changes made to another dictionary","<p>I would like to know if there is a way to automatically update the value in a dictionary based on changes made to values in another dictionary.
I have 2 dictionaries as follows:</p>
<pre><code>enum CharacterAttributes: String, Codable  {
    case strength
    case constitution
    case dexterity
    case intelligence
}

enum CharacterStats: String, Codable  {
    case maxHealthPoint
    case maxTacticPoint
    case maxActionPoint
    case movementSpeed
}

var attributes = [CharacterAttributes: Float]()
var stats = [CharacterStats: Float]()
</code></pre>
<p>The logics are:</p>
<pre><code>stats[.maxHealthPoint] = attributes[.constitution] *  100
stats[.maxTacticPoint] = (attributes[.dexterity] +  attributes[.intelligence]) * 1.5
stats[.maxActionPoint] = attributes[.constitution] * 10
stats[.movementSpeed] = attributes[.dexterity] + 70
</code></pre>
<p>What I want to achieve is that whenever a value is changed from attributes dictionary, the corresponding values in stats get updated automatically.
I know for a normal variable I can use didSet keyword, but how to apply the concept to dictionaries?</p>
<p>Thanks in advance for any help.</p>
","2024-07-25 02:15:10","1","Question"
"78787954","78787630","","<p>Sounds like a perfect job for the (relatively unknown) <a href=""https://learn.microsoft.com/en-us/office/vba/language/reference/user-interface-help/filter-function"" rel=""nofollow noreferrer""><code>Filter()</code></a> function.</p>
<pre><code>Sub Test()

Dim Dict As Object: Set Dict = CreateObject(&quot;Scripting.Dictionary&quot;)

Dict.Add &quot;Apples&quot;, &quot;Found You!&quot;
Dict.Add &quot;Banana&quot;, 2
Dict.Add &quot;Cherry&quot;, 3
Dict.Add &quot;Date&quot;, 4
Dict.Add &quot;Elderberry&quot;, 5

r_out = Filter(Dict.Keys, &quot;apple&quot;, 1, 1)
If UBound(r_out) &gt; -1 Then
    'Do something with r_out, which is an array of all matched keys
    'For example, traverse filtered keys and return values:
    For i = 0 To UBound(r_out)
        Debug.Print Dict(r_out(i))
    Next
Else
    'Something if no matches are found
    Debug.Print &quot;Bummer&quot;
End If

End Sub
</code></pre>
<p>4 Parameters:</p>
<ul>
<li>One-dimensional array of strings which <code>Dict.Keys</code> can provide;</li>
<li>A string to search for (case insensitive so don't worry here);</li>
<li>A boolean (or equivalent, 1) to tell the function we want to return values that <strong>include</strong> the string;</li>
<li>An integer 1 (vbTextCompare) to tell the function we want to compare text.</li>
</ul>
<p>I'm unsure what you want to do next...</p>
","2024-07-24 11:05:56","5","Answer"
"78787778","78787630","","<p>The <a href=""https://learn.microsoft.com/en-us/office/vba/language/reference/user-interface-help/keys-method"" rel=""nofollow noreferrer""><code>Dictionary.Keys</code> Method</a> will return an Array that contains all of the Keys.</p>
<p>Excel's <a href=""https://support.microsoft.com/en-us/office/match-function-e8dffd45-c762-47d6-bf89-533f4a37673a"" rel=""nofollow noreferrer""><code>MATCH</code> function</a> allows you to search an Array (and can be called <a href=""https://learn.microsoft.com/en-us/office/vba/api/excel.worksheetfunction.match"" rel=""nofollow noreferrer"">as <code>Application.Match</code></a> in VBA).  This supports Wildcards, and is <em>not</em> Case Sensitive — however, note that it only returns a <em>single</em> result, even if multiple keys in the Dictionary match the pattern.</p>
<p>Combining the two:</p>
<pre><code>Dim vArr AS Variant, vMatch As Variant
vArr = dict.keys
vMatch = Application.Match(&quot;*apple*&quot;, vArr, 0)
If IsError(vMatch) Then
    MsgBox &quot;Key Not Found&quot;, vbCritical
Else
    MsgBox vArr(vMatch-1), vbInformation 'the -1 is because the Array is Zero-Indexed, but Match returns One-Indexed results
End If
</code></pre>
","2024-07-24 10:28:27","3","Answer"
"78787680","78764175","","<blockquote>
<p>error: databricks.sql.exc.ServerOperationError: [PARSE_SYNTAX_ERROR] Syntax error at or near '['. SQLSTATE: 42601 (line 1, pos 159)</p>
</blockquote>
<p>For the databricks sql connector the above error is casuing dure to incorrect syntax.</p>
<p>While inserting Array and Map data to the databricks sql table it should be within round braces. so, the query would look like below:</p>
<pre class=""lang-sql prettyprint-override""><code>INSERT INTO tablename (schema_name, table_name, column_names, choice) VALUES ('schema_name', 'table_name', Array('CustomerId', 'FirstName'), Map('AnomalyDetection', '1'))&quot;
</code></pre>
<p><strong>Query executed successfully:</strong></p>
<p><img src=""https://i.imgur.com/a0q31x2.png"" alt=""enter image description here"" /></p>
<p><strong>Output:</strong></p>
<p><img src=""https://i.imgur.com/tHxRR7c.png"" alt=""enter image description here"" /></p>
","2024-07-24 10:11:02","0","Answer"
"78787630","","Partial exists in dictionary","<p>I m looking for a way to check if a value included in a dictionary, Excel - VBA. However, simple <code>dict.Exists(&quot;&quot;)</code> is not the right approach in this situation because the searching value with not be exactly the same with the value in the dictionary.</p>
<p>For example I m look for the word <code>apple</code> in the dictionary which includeds the phrase <code>fruit apple</code>. So <code>apple</code> included in the dictionary as <code>fruit apple</code>. Case sensitivity much be avoided.</p>
<p>Currently, I looping the dictionary which is time consuming.</p>
<p>Is ther any additions like <code>dict.Exists(&quot;*apple*&quot;)</code></p>
<p>Any ideas?</p>
","2024-07-24 10:00:25","4","Question"
"78785374","78784635","","<p>Use a second dictionary and a list comprehension with <a href=""https://docs.python.org/3/library/functions.html#zip"" rel=""nofollow noreferrer""><code>zip</code></a>:</p>
<pre><code># which item should be picked?
nth = {'YIELD': 1, 'BALANCED': 2, 'GROWTH': 3}

df['TARGET'] = [
    my_dict[a][nth[s]] for s, a in zip(df['STRATEGY'], df['ASSET_CLASS'])
]
</code></pre>
<p>Output:</p>
<pre><code>   STRATEGY ASSET_CLASS  TARGET
0  BALANCED    Corp EUR     8.0
1     YIELD    Corp USD     7.5
2    GROWTH      HG CHF     4.0
</code></pre>
<p>If there is a chance that the lists don't have enough items, you can add a safety check:</p>
<pre><code># let's pick the 5th item for &quot;GROWTH&quot;
nth = {'YIELD': 1, 'BALANCED': 2, 'GROWTH': 5}

df['TARGET'] = [
    d[n] if (n := nth[s]) &lt; len(d := my_dict[a]) else None
    for s, a in zip(df['STRATEGY'], df['ASSET_CLASS'])
]
</code></pre>
<p>Example:</p>
<pre><code>   STRATEGY ASSET_CLASS  TARGET
0  BALANCED    Corp EUR     8.0
1     YIELD    Corp USD     7.5
2    GROWTH      HG CHF     NaN
</code></pre>
","2024-07-23 19:57:50","2","Answer"
"78784705","78784635","","<p>I would implement function based on</p>
<blockquote>
<p>YIELD include all second values, BALANCED all third values and GROWTH
all fourth values,</p>
</blockquote>
<p>to be used with <code>pandas.DataFrame.apply</code> as follows</p>
<pre><code>import pandas as pd


def get_target_value(row):
    if row.STRATEGY == &quot;YIELD&quot;:
        return row.TARGET[1]
    if row.STRATEGY == &quot;BALANCED&quot;:
        return row.TARGET[2]
    if row.STRATEGY == &quot;GROWTH&quot;:
        return row.TARGET[3]


data = [['BALANCED', 'Corp EUR'], ['YIELD', 'Corp USD'], ['GROWTH', 'HG CHF']]
df = pd.DataFrame(data, columns=['STRATEGY', 'ASSET_CLASS'])
my_dict = {'HG CHF': [5, 2, 3, 4],
           'Corp EUR': [4, 6, 8, 7],
           'Corp USD': [9, 7.5, 5.3, 6],
          }
df['TARGET'] = df['ASSET_CLASS'].map(my_dict)
df['TARGET'] = df.apply(get_target_value,axis=1)
print(df)
</code></pre>
<p>gives output</p>
<pre><code>   STRATEGY ASSET_CLASS  TARGET
0  BALANCED    Corp EUR     8.0
1     YIELD    Corp USD     7.5
2    GROWTH      HG CHF     4.0
</code></pre>
<p>Observe there values are less one w.r.t. your description as in <code>python</code> <code>list</code>s indexing starts with 0.</p>
","2024-07-23 16:55:42","0","Answer"
"78784635","","Pandas Map Dictionary with Multiple Values to Dataframe","<p>I have the following dataframe:</p>
<pre><code>data = [['BALANCED', 'Corp EUR'], ['YIELD', 'Corp USD'], ['GROWTH', 'HG CHF']]
df = pd.DataFrame(data, columns=['STRATEGY', 'ASSET_CLASS']
df

    STRATEGY    ASSET_CLASS
0   BALANCED    Corp EUR
1   YIELD       Corp USD
2   GROWTH      HG CHF
</code></pre>
<p>My objective is to assign a specific value from a dictionary with multiple values depending on the value in column &quot;STRATEGY&quot;. The dictionary containing the different asset classes looks as follows:</p>
<pre><code>my_dict = {'HG CHF': [5, 2, 3, 4],
           'Corp EUR': [4, 6, 8, 7],
           'Corp USD': [9, 7.5, 5.3, 6],
          }
my_dict

{'HG CHF': [5, 2, 3, 4],
 'Corp EUR': [4, 6, 8, 7],
 'Corp USD': [9, 7.5, 5.3, 6]}
</code></pre>
<p>In the dictionary, each value depicts a specific strategy. In this case, YIELD include all second values, BALANCED all third values and GROWTH all fourth values, respectively. Essentially, what I'd like to obtain is the following output:</p>
<pre><code>   STRATEGY ASSET_CLASS  TARGET
0  BALANCED    Corp EUR     8.0
1     YIELD    Corp USD     7.5
2    GROWTH      HG CHF     4.0
</code></pre>
<p>How can I correctly tell Python which value in the dictionary to access? Below command maps all values:</p>
<pre><code>df['TARGET'] = df['ASSET_CLASS'].map(my_dict)

   STRATEGY ASSET_CLASS            TARGET
0  BALANCED    Corp EUR      [4, 6, 8, 7]
1     YIELD    Corp USD  [9, 7.5, 5.3, 6]
2    GROWTH      HG CHF      [5, 2, 3, 4]
</code></pre>
<p>Any suggestion is much appreciated!! Thanks a lot in advance!!</p>
","2024-07-23 16:34:35","1","Question"
"78783853","78783405","","<p>I would suggest making use of the nested key in the dictionary, like this:</p>
<pre><code>meal_dict = {}

meal_dict['23-07-2024'] =  {'Smoothie': (245.0, 17.0)}
meal_dict['23-07-2024']['Salad'] = (400.0, 10.0)
</code></pre>
<p>Which outputs:</p>
<pre><code>{'23-07-2024': {'Smoothie': (245.0, 17.0), 'Salad': (400.0, 10.0)}}
</code></pre>
","2024-07-23 13:54:35","1","Answer"
"78783516","78783405","","<p>Try using .update() method, By this if the key(date in your case) exists the new meal will be added without overwriting the existing meal!</p>
","2024-07-23 12:47:44","-2","Answer"
"78783431","78783405","","<p>You can use the if-else statement to check whether the current date is in the dictionary.</p>
<pre class=""lang-py prettyprint-override""><code>date = input(&quot;Enter the date in (Day-Month-Year) format: &quot;)
name = input(&quot;Enter the name of the meal: &quot;)
if date in meal_data: # If date is already in meal_date then set the current_meal to existing meal
    current_meal = meal_data[date]
else: # if not then set it to empty dict
    current_meal = {}

current_meal[name] = (total_calories, total_protein) # Adding new meal to the current_meal
meal_data[date] = current_meal
</code></pre>
<p>OUTPUT</p>
<p><a href=""https://i.sstatic.net/gPZMxhIz.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/gPZMxhIz.png"" alt=""enter image description here"" /></a></p>
","2024-07-23 12:29:57","2","Answer"
"78783405","","Appending multiple dictionaries to specific key of a nested dictionary","<p>I want to append different dictionaries having the key as the <code>meal_name</code> and having <code>total_calories</code> and <code>total_protein</code> as a tuple being the value of the dictionary without overwriting the original dictionaries under the main dictionary having date as the key value.</p>
<p>I tried using the code below to add the new dictionary but it overwrites the previous one.</p>
<pre><code>date = input(&quot;Enter the date in (Day-Month-Year) format: &quot;)
name = input(&quot;Enter the name of the meal: &quot;)
current_meal[name] = (total_calories, total_protein)
meal_data[date] = current_meal
</code></pre>
<p>This is what the dictionary looks like:</p>
<pre><code>{'23-07-2024': {'Smoothie': (245.0, 17.0)}}
</code></pre>
<p>Suppose I want to add a new meal to the existing date without overwriting the Smoothie dictionary. Is this possible.</p>
","2024-07-23 12:24:45","2","Question"
"78779954","78779526","","<p>A short example that causes the dictionary to ignore case,</p>
<pre><code>    Dim dict As New Dictionary(Of String, String)(StringComparer.CurrentCultureIgnoreCase)

    Dim ent As String = &quot;TEST&quot;

    dict.Add(ent, ent)
    If dict.ContainsKey(ent.ToLower) Then
        Debug.WriteLine(&quot;duplicate&quot;) 'here in debugger
    Else
        dict.Add(ent.ToLower, ent)
    End If
</code></pre>
","2024-07-22 17:02:25","1","Answer"
"78779526","","Case insensitivity in vb.net Dictionaries keys","<p>I only recently came across <code>Option Compare Text</code> in a roundabout fashion. We have all sorts of:</p>
<pre><code>soAndSo.Equals(&quot;one&quot;, StringComparison.CurrentCultureIgnoreCase)
</code></pre>
<p>and it seemed the option would be useful. However, many of those comparisons are in the keys of dictionaries, so I did this...</p>
<pre><code>Option Compare Text
'Option Compare Binary
Dim testdict As New Dictionary(Of String, String)
testdict.Add(&quot;OneTwo&quot;, &quot;onetwo&quot;)
testdict.Add(&quot;TwoThree&quot;, &quot;twothree&quot;)
testdict.Add(&quot;ThreeFour&quot;, &quot;threefour&quot;)
If &quot;one&quot; = &quot;One&quot; Then
    Dim y As Integer = 5
End If
If testdict.ContainsKey(&quot;onetwo&quot;) Then
    Dim y As Integer = 5
End If
If testdict.ContainsValue(&quot;OneTwo&quot;) Then
    Dim y As Integer = 5
End If
If testdict.ContainsValue(&quot;onetwo&quot;) Then
    Dim y As Integer = 5
End If
</code></pre>
<p>And that does not work, changing the Option has no effect, neither the dictionary keys or values match. I was surprised by this, as it seems MS is not using their own blessed equality tests.</p>
<p>I know I can make a dictionary with a different comparison operation, but I'm wondering if I've simply missed some equally simple switch? Google says no, but I don't trust google any more.</p>
","2024-07-22 15:22:08","0","Question"
"78776031","78775988","","<pre><code>#Create a list of value of 'Match Full' from live
live_lst = [x[&quot;Match Full&quot;] for x in live] 

for x in pre:
    if x[&quot;Match Full&quot;] not in live_lst:
        print(x[&quot;Match Full&quot;])

#Output : Parma v Fiorentina
</code></pre>
","2024-07-21 18:18:44","2","Answer"
"78776023","78775988","","<p>this should do</p>
<pre><code>def get_set(matches):
    return set([match_['Match Full'] for match_ in matches])
    
pre_set= get_set(pre)
live_set = get_set(live)
print(pre_set-live_set) # {'Parma v Fiorentina'}
</code></pre>
","2024-07-21 18:16:01","1","Answer"
"78775988","","Compare python dictionaries and find missing elements","<p>I'm encountering a problem, I've been trying for days but without getting any results. I would like to compare 2 dictionaries, in one dictionary there are &quot;Pre match&quot; football matches and in the second dictionary there are &quot;Live&quot; football matches.</p>
<p>I would like to compare them with each other and print them if there are no pre-match games live.</p>
<p><strong>EXAMPLE 1</strong></p>
<pre><code>pre = [{
        &quot;Home&quot;: &quot;Genoa&quot;,
        &quot;Away&quot;: &quot;Inter&quot;,
        &quot;Match Full&quot;: &quot;Genoa v Inter&quot;,
        &quot;Start Data&quot;: &quot;19 Lug&quot;,
        &quot;Start Time&quot;: &quot;21:30&quot;
    },
    {
        &quot;Home&quot;: &quot;Parma&quot;,
        &quot;Away&quot;: &quot;Fiorentina&quot;,
        &quot;Match Full&quot;: &quot;Parma v Fiorentina&quot;,
        &quot;Start Data&quot;: &quot;17 Ago&quot;,
        &quot;Start Time&quot;: &quot;18:30&quot;
    }]

live = [{
        &quot;Home&quot;: &quot;Dagon Star United FC&quot;,
        &quot;Away&quot;: &quot;Ispe FC&quot;,
        &quot;Match Full&quot;: &quot;Dagon Star United FC v Ispe FC&quot;
    },
    {
        &quot;Home&quot;: &quot;Genoa&quot;,
        &quot;Away&quot;: &quot;Inter&quot;,
        &quot;Match Full&quot;: &quot;Genoa v Inter&quot;
    }]

check = [[x for x in pre if x['Match Full'] != i['Match Full']] for i in live]

print(check)
</code></pre>
<p>I am not receiving the desired result, I also tried the following code, without receiving the right result.</p>
<p><strong>EXAMPLE 2</strong></p>
<pre><code>pre = [{
        &quot;Home&quot;: &quot;Genoa&quot;,
        &quot;Away&quot;: &quot;Inter&quot;,
        &quot;Match Full&quot;: &quot;Genoa v Inter&quot;,
        &quot;Start Data&quot;: &quot;19 Lug&quot;,
        &quot;Start Time&quot;: &quot;21:30&quot;
    },
    {
        &quot;Home&quot;: &quot;Parma&quot;,
        &quot;Away&quot;: &quot;Fiorentina&quot;,
        &quot;Match Full&quot;: &quot;Parma v Fiorentina&quot;,
        &quot;Start Data&quot;: &quot;17 Ago&quot;,
        &quot;Start Time&quot;: &quot;18:30&quot;
    }]

live = [{
        &quot;Home&quot;: &quot;Dagon Star United FC&quot;,
        &quot;Away&quot;: &quot;Ispe FC&quot;,
        &quot;Match Full&quot;: &quot;Dagon Star United FC v Ispe FC&quot;
    },
    {
        &quot;Home&quot;: &quot;Genoa&quot;,
        &quot;Away&quot;: &quot;Inter&quot;,
        &quot;Match Full&quot;: &quot;Genoa v Inter&quot;
    }]

for x in pre:
    for i in live:
        if x['Match Full'] != i['Match Full']:
            print(x['Match Full'])
</code></pre>
<p>What I'm trying to get is only the missing pre-match in the &quot;live&quot; dict, in this case it should only print &quot;Parma v Fiorentina&quot; as it is missing in the dictionary</p>
<p>Any solution will be appreciated, thank you in advance.</p>
","2024-07-21 18:01:32","-5","Question"
"78772999","78772221","","<p>Like the comments are saying, you are not handling the <code>None</code> within the 4th dictionary. There is no exception set up to deal with getting a <code>None</code> value within a dictionary, just if there is a <code>None</code> value instead of a dictionary. This is a simple fix though. Add another condition at the end of line 3 to make sure <code>val</code> isn't <code>None</code>. Here is the new code written out.</p>
<pre><code>def process_data(data, key):
    return [
        {k: [v for v in val if v &gt; 10] for k, val in item.items() if k == key and val is not None}
        for item in data
        if item is not None
    ]
.
.
.
</code></pre>
","2024-07-20 14:15:33","1","Answer"
"78772221","","Why do I get ""NoneType object is not iterable"" when filtering a list of dictionaries with list comprehension and handling None?","<p>I'm trying to filter a list of dictionaries in Python using list comprehension. I am handling None values, but I keep getting the error &quot;NoneType object is not iterable&quot;. I expected my code to skip None values, but it still throws the error. How can I fix this?</p>
<p>Here is my code to reproduce the problem:</p>
<pre><code>def process_data(data, key):
    return [
        {k: [v for v in val if v &gt; 10] for k, val in item.items() if k == key}
        for item in data
        if item is not None
    ]

data = [
    {'values': [5, 15, 25]},
    None,
    {'values': [8, 12, 20]},
    {'values': None},
    {'values': [7, 14, 21]}
]

filtered_data = process_data(data, 'values')
print(filtered_data)
</code></pre>
","2024-07-20 08:22:04","-4","Question"
"78772204","78772178","","<p>Your <code>config_patterns</code> list contains duplicates. You can verify that by converting the list to a <code>set</code>, which only contains unique records, and printing its size. Note the additional line below <code>print(len(config_patterns))</code>:</p>
<pre class=""lang-py prettyprint-override""><code>config_patterns = ['.//FunctionDef/body//If', './/FunctionDef/body//If[ancestor::If and not(parent::orelse)]', './/FunctionDef[@name=&quot;__init__&quot;]/body/Return', './/FunctionDef//Compare/left[@id=&quot;input_dirs&quot;]/following-sibling::Compare/ops/NotEq | .//FunctionDef//Compare/comparators[@id=&quot;input_dirs&quot;]/following-sibling::Compare/ops/NotEq', './/FunctionDef//Try/ExceptHandler[not(ExceptHandler/type)]', './/FunctionDef//Compare/ops/Is | .//FunctionDef//Compare/ops/Eq', './/FunctionDef[not(args/arg/annotation) or not(returns)]', './/FunctionDef//Call/func/Attribute[@attr=&quot;keys&quot;]', './/FunctionDef/body/Assign/value/Dict/keys/Name[preceding-sibling::Name/@id = @id]', './/FunctionDef[./body/Assert/test/Tuple]', './/FunctionDef/body/For[target/Name/@id = iter/Name/@id]', './/FunctionDef[body//comprehension/target/Name]', './/FunctionDef//FunctionDef/ancestor::*', './/FunctionDef//If/following-sibling::If | .//FunctionDef//If/following-sibling::Elif | .//FunctionDef//If/following-sibling::Else', './/FunctionDef//If/descendant::If', './/FunctionDef//if//For', './/FunctionDef[//(If/following-sibling::For | For/following-sibling::If)]', './/FunctionDef//For[.//For]', './/FunctionDef/body/Assert', './/FunctionDef[starts-with(@name, &quot;test_&quot;)]/body/*', './/FunctionDef/body/* | .//FunctionDef/body/Return', './/FunctionDef[starts-with(@name, &quot;test_&quot;)]//Assert[count(.//Call[func/Name/@id=&quot;test_function&quot;]) &gt; 0]', './/FunctionDef//*[starts-with(., &quot;with open&quot;)]', './/FunctionDef[count(body//Return) &gt; 2]', './/FunctionDef//BinOp[count(descendant::BinOp) &gt; 2]', '//FunctionDef[starts-with(@name, &quot;test_&quot;)]//Assert[count(.//Call[func/Name]) &gt; 0]', './/FunctionDef[count(./body/*) &gt; 50]', './/FunctionDef[count(.//If | .//For | .//While | .//And | .//Or) &gt; 10]', './/FunctionDef[count(./args/args) &gt; 5]', './/Call[count(./func/Attribute) &gt; 3]', './/FunctionDef[count(.//If | .//For | .//While | .//Try) &gt; 3]', './/FunctionDef[count(./body/*) &gt; 100]', './/ExceptHandler[not(./body/*)]', './/Num', './/Global', './/ClassDef[count(./body/*) &gt; 50]', './/FunctionDef[count(./args/args) &gt; 5]', './/FunctionDef[count(./body/*) &gt; 50]', './/Call[count(./func/Attribute) &gt; 3]', './/FunctionDef[count(.//If | .//For | .//While | .//Try) &gt; 3]']

count = 0
predefined_patterns= {}
print(len(config_patterns))
print(len(set(config_patterns)))

for pattern in list(config_patterns):
    predefined_patterns[pattern] = 0
    count += 1

print(f&quot;Number of iterations: {count}&quot;)

print()
i = 0
for key,value in predefined_patterns.items():
    print(f&quot;{i}. {key}:{value}&quot;)
    i = i+1
</code></pre>
<p>This will show that there are only 36 <em>unique</em> entries in the list (of 40 total entries), hence why your dictionary only contains 36 entries.</p>
","2024-07-20 08:11:30","1","Answer"
"78772178","","Dictionary Update Stops at Index 35","<p>I'm trying to iterate through a list (config_patterns) and add each element as a key to a dictionary (predefined_patterns) with a value of 0. There are 40 elements in this list. However, the final dictionary only contains elements up to a specific index 35. The remaining elements in the list are missing from the dictionary.</p>
<p><strong>Expected Behavior:</strong> The predefined_patterns dictionary should contain all elements from config_patterns as keys, each with a value of 0.</p>
<p><strong>Additional Information:</strong></p>
<ul>
<li>I've confirmed that config_patterns is a list of strings (no hashable issues)</li>
<li>I've verfied that the loop iterates through the expected number of elements</li>
<li>No modification are happening to config_patterns within the loop</li>
</ul>
<p><strong>Things I've tried:</strong></p>
<ul>
<li>Using update method instead of direct assignment</li>
<li>Checking for hidden modifications or asynchronous operations</li>
</ul>
","2024-07-20 07:52:32","-5","Question"
"78771682","78771315","","<p>You can use <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.json_normalize.html"" rel=""nofollow noreferrer"">pd.json_normalize()</a></p>
<p>Code:</p>
<pre><code>import json

import pandas as pd


with open(&quot;data.json&quot;) as json_file:
    data = json.load(fp=json_file)

df = pd.json_normalize(data=data,
                       record_path=[&quot;engine&quot;, &quot;data&quot;],
                       meta=[&quot;attributes&quot;, &quot;id&quot;],
                       meta_prefix=&quot;meta_&quot;
                       )
df = (pd
      .concat(objs=[df, df.pop(item=&quot;meta_attributes&quot;).apply(func=pd.Series)], axis=1)
      .rename(columns=lambda x: x.split(&quot;.&quot;)[-1])
      )
print(df)
</code></pre>
<p>Output:</p>
<pre><code>  id    engine horsePower torque meta_id  autoNumber  make model    trim
0   1  5.0l v8         400    410       1           1  Ford  F150  Lariat
1   2  2.7l v6         325    300       1           1  Ford  F150  Lariat
</code></pre>
","2024-07-20 02:15:59","0","Answer"
"78771384","78771315","","<p>I suggest to create two dataframes from the data and then merge it together based on the <code>id</code>, e.g.:</p>
<pre class=""lang-py prettyprint-override""><code>import pandas as pd

data = [
    {
        &quot;id&quot;: 1,
        &quot;attributes&quot;: {
            &quot;autoNumber&quot;: 1,
            &quot;make&quot;: &quot;Ford&quot;,
            &quot;model&quot;: &quot;F150&quot;,
            &quot;trim&quot;: &quot;Lariat&quot;,
        },
        &quot;engine&quot;: {
            &quot;data&quot;: [
                {
                    &quot;id&quot;: 1,
                    &quot;attributes&quot;: {
                        &quot;engine&quot;: &quot;5.0l v8 &quot;,
                        &quot;horsePower&quot;: &quot;400&quot;,
                        &quot;torque&quot;: &quot;410&quot;,
                    },
                },
                {
                    &quot;id&quot;: 2,
                    &quot;attributes&quot;: {
                        &quot;engine&quot;: &quot;2.7l v6 &quot;,
                        &quot;horsePower&quot;: &quot;325&quot;,
                        &quot;torque&quot;: &quot;300&quot;,
                    },
                },
            ]
        },
    }
]

df1 = []
for d in data:
    df1.append({&quot;id&quot;: d[&quot;id&quot;], **d[&quot;attributes&quot;]})

df2 = []
for d in data:
    for engine_data in d[&quot;engine&quot;][&quot;data&quot;]:
        df2.append(
            {
                &quot;id&quot;: d[&quot;id&quot;],
                &quot;attribute_id&quot;: engine_data[&quot;id&quot;],
                **engine_data[&quot;attributes&quot;],
            }
        )

df1 = pd.DataFrame(df1)
df2 = pd.DataFrame(df2)

df_out = df1.merge(df2, on=&quot;id&quot;, how=&quot;outer&quot;)
print(df_out)
</code></pre>
<p>Prints:</p>
<pre class=""lang-none prettyprint-override""><code>   id  autoNumber  make model    trim  attribute_id    engine horsePower torque
0   1           1  Ford  F150  Lariat             1  5.0l v8         400    410
1   1           1  Ford  F150  Lariat             2  2.7l v6         325    300
</code></pre>
","2024-07-19 22:32:25","0","Answer"
"78771315","","Converting JSON list with multiple nested dictionaries to csv or excel","<p>I have a JSON that I download from a website that has multiple nested dictionaries inside the main list. This is a very simplified version of it.</p>
<pre><code>[
    {
        &quot;id&quot;: 1,
        &quot;attributes&quot;: {
            &quot;autoNumber&quot;: 1,
            &quot;make&quot;: &quot;Ford&quot;,
            &quot;model&quot;: &quot;F150&quot;,
            &quot;trim&quot;: &quot;Lariat&quot;
            },
            &quot;engine&quot;: {
                &quot;data&quot;: [
                    {
                        &quot;id&quot;: 1,
                        &quot;attributes&quot;: {
                            &quot;engine&quot;: &quot;5.0l v8 &quot;,
                            &quot;horsePower&quot;: &quot;400&quot;,
                            &quot;torque&quot;: &quot;410&quot;
                        }
                    },
                    {
                        &quot;id&quot;: 2,
                        &quot;attributes&quot;: {
                            &quot;engine&quot;: &quot;2.7l v6 &quot;,
                            &quot;horsePower&quot;: &quot;325&quot;,
                            &quot;torque&quot;: &quot;300&quot;
                        }
                    }
                ]
            }
    }
]
</code></pre>
<p>This is the code I use to convert to xlsx</p>
<pre><code>import json
import pandas as pd

# Load JSON data
with open('data.json') as json_file:
    data = json.load(json_file)

# Normalize JSON data to tabular format
df = pd.json_normalize(data)

df.to_excel('data.xlsx', index=False)
</code></pre>
<p>I want all of the various attributes to be in its own column. The engine data may be zero to two entries and should go into one each. The issue I am having is that it is putting all of the engine data into one column.</p>
<pre><code>column f = [{'id': 1, 'attributes': {'engine': '5.0l v8 ', 'horsePower': '400', 'torque': '410'}}, {'id': 2, 'attributes': {'engine': '2.7l v6 ', 'horsePower': '325', 'torque': '300'}}]
</code></pre>
<p>I tried dataframe explode, but it created additional rows instead of columns.</p>
","2024-07-19 21:48:19","0","Question"
"78769900","78767142","","<p>I agree with @jakevdp that this might not be the best solution. Python is not the quickest when built-ins are looped over.</p>
<blockquote>
<p>Python can do anything... Except for-loops. We use numpy for that.</p>
</blockquote>
<ol>
<li>Maybe a <code>pandas.DataFrame</code> with columns [&quot;x&quot;, &quot;y&quot;, &quot;v&quot;] would be a way to go.</li>
<li>Can you not use <a href=""https://docs.scipy.org/doc/scipy/reference/interpolate.html"" rel=""nofollow noreferrer""><code>scipy.interpolate</code></a>'s functions?</li>
</ol>
","2024-07-19 14:24:37","1","Answer"
"78767387","78767142","","<p>There is no way to use traced JAX values as dictionary keys. The problem is that the key values will not be known until runtime within the XLA compiler, and XLA has no dictionary-like data structure that such lookups can be lowered to.</p>
<p>There are imperfect solutions, such as keeping the dictionary on the host and using something like <a href=""https://jax.readthedocs.io/en/latest/notebooks/external_callbacks.html"" rel=""nofollow noreferrer""><code>io_callback</code></a> to do the dict lookups on host, but this approach comes with performance penalties that will likely make it impractical.</p>
<p>Unfortunately, your best approach for doing this efficiently under JIT would probably be to switch to a different interpolation algorithm that doesn't depend on hash table lookups.</p>
","2024-07-19 03:13:42","2","Answer"
"78767142","","Dictionary indexing with Numpy/Jax","<p>I'm writing an interpolation routine and have a dictionary which stores the function values at the fitting points. Ideally, the dictionary keys would be 2D Numpy arrays of the fitting point coordinates, <code>np.array([x, y])</code>, but since Numpy arrays aren't hashable these are converted to tuples for the keys.</p>
<pre><code># fit_pt_coords: (n_pts, n_dims) array
# fn_vals: (n_pts,) array
def fit(fit_pt_coords, fn_vals):
    pt_map = {tuple(k): v for k, v in zip(fit_pt_coords, fn_vals)}
    ...
</code></pre>
<p>Later in the code I need to get the function values using coordinates as keys in order to do the interpolation fitting. I'd like this to be within <code>@jax.jit</code>ed code, but the coordinate values are of type <code>&lt;class 'jax._src.interpreters.partial_eval.DynamicJaxprTracer'&gt;</code>, which can't be converted to a tuple. I've tried other things, like creating a dictionary key as <code>(x + y, x - y)</code>, but again this requires concrete values, and calling <code>.item()</code> results in an <code>ConcretizationTypeError</code>.</p>
<p>At the moment I've <code>@jax.jit</code>ed all of the code I can, and have just left this code un-jitted. It would be great if I could jit this code as well however. Are there any better ways to do the dictionary indexing (or better Jax-compatible data structures) which would allow all of the code to be jitted? I am new to Jax and still understading how it works, so I'm sure there must be better ways of doing it...</p>
","2024-07-19 00:48:27","2","Question"
"78766854","78766817","","<p>The <code>dict</code> constructor will take a list of tuples where the first item in each tuple is the key and the second is the value. Yours are exactly backward from that. Also, the string you want to use as a key is in a list, which can't be used as a dictionary key and is the source of your error. So, you can write a generator expression to switch them around, extract the actual key from its list, and pass that to <code>dict</code>.</p>
<pre><code>dict((t[1][0], t[0]) for t in address_table3)
</code></pre>
<p>Or unpack the tuple into separate variables and do the same:</p>
<pre><code>dict((k[0], v) for (v, k) in address_table3)
</code></pre>
<p>If there is any possibility that there might be more than one item in the list you're using as a key, you could use <code>str.join</code> to concatenate them all into one string. The example here separates the individual items with newlines, but you could use spaces or any other character(s).</p>
<pre><code>dict(('\n'.join(k), v) for (v, k) in address_table3)
</code></pre>
","2024-07-18 22:11:45","3","Answer"
"78766817","","How to convert a tuple which includes a [string] to a dictionary item","<p>I have this list:</p>
<pre><code>address_table3 = [(1, ['21 South Main']), (2, ['1560 West St']), (3, ['1900 Broadway'])]
</code></pre>
<p>I want to convert it to a dictionary with the address as key and integer as value.</p>
<p>When I try to convert, I get an error:</p>
<pre><code>TypeError: unhashable type: 'list'
</code></pre>
<p>I have tried dict comprehension and other ideas:</p>
<pre><code>{k: v for k, v in zip(address_table3.values(), address_table3.keys())}
</code></pre>
<p>but nothing is working.</p>
","2024-07-18 21:53:17","-4","Question"
"78766302","78766223","","<p>When passing test2 as an argument to your function it is the same object as your global variable. But you create a new variable and overwrite the old one when you assign <code>test2 = copy.deepcopy(test2)</code>. This variable is in a different scope than the global one and no longer the same as the global one. Therefore, it can't be accessed globally.</p>
<p>There are two ways to solve this:</p>
<ol>
<li>You can modify the existing variable:</li>
</ol>
<blockquote>
<p><code>test2[:] = copy.deepcopy(test2)</code><br>
This will only change the contents of the list and not create a new one.</p>
</blockquote>
<ol start=""2"">
<li>You can overwrite test2 in global scope using the <code>global</code> keyword:</li>
</ol>
<blockquote>
<pre class=""lang-py prettyprint-override""><code>def CopyList(test1):
   global test2
   test2 = copy.deepcopy(test1)  
</code></pre>
<p>This will make your <code>test2 = []</code> statement redundant. But you should generally avoid the <code>global</code> keyword, if possible.</p>
</blockquote>
","2024-07-18 19:15:03","0","Answer"
"78766223","","Modify the values in a (global) list of dictionary without reference","<p>I'm new to python - being an educator trying to write to python script to score student's performance downloaded from an online polling platform. I've solved most problems until something like this: I'm trying to copy the values of test1 into test2 without reference and then change the values in test2. I'd like test2 to be available globally for other function calls.</p>
<p>test1=[{'a':1, 'b':2,'c':3},{'a':4, 'b':5,'c':6}]</p>
<p>test2=[]</p>
<p>def CopyList(test1,test2):</p>
<pre><code>import copy

test2 =copy.deepcopy(test1)  

test2[0]['d']= 4

print(test2)
</code></pre>
<p>CopyList(test1,test2)</p>
<p>... [{'a': 1, 'b': 2, 'c': 3, 'd': 4}, {'a': 4, 'b': 5, 'c': 6}]</p>
<p>(so far so good!)</p>
<p>print(test1)</p>
<p>...[{'a': 1, 'b': 2, 'c': 3}, {'a': 4, 'b': 5, 'c': 6}]</p>
<p>(as desired, nice)</p>
<p>print(test2)</p>
<p>..[]</p>
<p>(it appears that the original test2 was not modified?)</p>
<p>I have also tried d.copy() or list slicing ([:]).  These two methods appear to continue to reference back to the original list (test1) that would get modified.  In no case is test2 modified outside of the function.
I have also tried the (for loop) method:</p>
<p>test1=[{'a':1, 'b':2,'c':3},{'a':4, 'b':5,'c':6}]</p>
<p>test2=[]</p>
<p>def CopyList(test1,test2):</p>
<pre><code>ndict=len(test1)

test2.clear()

for i in range(ndict):

    test2.append(test1[i])

test2[0]['d']= 4

print(test2)
</code></pre>
<p>This method produced these results --</p>
<p>print(test1)</p>
<p>[{'a': 1, 'b': 2, 'c': 3, 'd': 4}, {'a': 4, 'b': 5, 'c': 6}]</p>
<p>(how did test1 get modified??)</p>
<p>print(test2)</p>
<p>[{'a': 1, 'b': 2, 'c': 3, 'd': 4}, {'a': 4, 'b': 5, 'c': 6}]</p>
<p>(OK, that is what I wanted)</p>
<p>Any suggestion on how to fix this problem is appreciated.</p>
","2024-07-18 18:52:44","0","Question"
"78765563","78057826","","<p>Generate All Possible Rules: For each frequent itemset, generate all possible rules X→Y where X⊆itemset and Y=itemset∖X.</p>
<pre><code>from itertools import combinations

def generate_association_rules(frequent_itemsets, min_confidence):
    &quot;&quot;&quot;
    Generate all possible association rules from frequent itemsets.
    
    Args:
    frequent_itemsets: dict
        Dictionary with frequent itemsets as keys (frozenset) and their supports as values.
    min_confidence: float
        Minimum confidence threshold for strong association rules.
    
    Returns:
    strong_rules: list of tuples
        List of strong association rules (X -&gt; Y) with confidence greater than min_confidence.
        Each rule is represented as a tuple (X, Y, confidence).
    &quot;&quot;&quot;
    strong_rules = []

    for itemset in frequent_itemsets:
        itemset_support = frequent_itemsets[itemset]
        
        # Generate all non-empty proper subsets of the itemset
        for r in range(1, len(itemset)):
            for subset in combinations(itemset, r):
                subset = frozenset(subset)
                remaining = itemset - subset
                
                # Calculate the confidence of the rule
                subset_support = frequent_itemsets.get(subset, 0)
                if subset_support &gt; 0:
                    confidence = itemset_support / subset_support
                    if confidence &gt;= min_confidence:
                        strong_rules.append((subset, remaining, confidence))
    
    return strong_rules

# Example usage
frequent_itemsets = {
    frozenset(['A']): 3,
    frozenset(['B']): 2,
    frozenset(['C']): 2,
    frozenset(['A', 'B']): 2,
    frozenset(['A', 'C']): 2,
    frozenset(['B', 'C']): 1,
    frozenset(['A', 'B', 'C']): 1
}

min_confidence = 0.5
strong_rules = generate_association_rules(frequent_itemsets, min_confidence)

for rule in strong_rules:
    print(f&quot;Rule: {rule[0]} -&gt; {rule[1]}, Confidence: {rule[2]:.2f}&quot;)
</code></pre>
","2024-07-18 16:11:07","0","Answer"
"78765172","78765119","","<p>the second argument to <code>myquery.execute()</code> should be the values, not the keys. You don't even need a dictionary, use a list that you append to as you add to the query.</p>
<pre><code>connection = pymysql.connect(host=&quot;&quot;, user=&quot;&quot;, passwd=&quot;&quot;, db=&quot;&quot;)
myquery = connection.cursor()

content_id = 1097
page_title = &quot;test page title&quot;

insQuery = 'UPDATE ex_content SET'
insARGSlist = []

if (len(page_title) &gt; 0):
    print(&quot;page_title: &quot;+page_title)
    print(type(page_title))
    pageTitleQuery = &quot; c_title=%s&quot;
    insQuery = insQuery + pageTitleQuery
    insARGSlist.append(page_title)
else:
    print(&quot;page_title is not bigger than 0&quot;)

if (len(page_desc) &gt; 0):
    print(&quot;page_desc: &quot;+page_desc)
    pageDescQuery = &quot;, c_meta_desc=%s&quot;
    insQuery = insQuery + pageDescQuery
    insARGSlist.append(page_desc)
else:
    print(&quot;page_desc is not bigger than 0&quot;)
if (len(page_heading) &gt; 0):
    page_heading = &quot;&quot;
    print(&quot;page_heading: &quot;+page_heading)
    pageHeadingQuery = &quot;, c_heading=%s&quot;
    insQuery = insQuery + pageHeadingQuery
    insARGSlist.append(page_heading)
else:
    print(&quot;page_heading is not bigger than 0&quot;)
if (len(page_link) &gt; 0):
    print(&quot;page_link: &quot;+page_link)
    pageLinkQuery = &quot;, c_link=%s&quot;
    insQuery = insQuery + pageLinkQuery
    insARGSlist.append(page_link)
else:
    print(&quot;page_link is not bigger than 0&quot;)

if content_id:
    print(&quot;content_id: &quot;+str(content_id))
    contentIdQuery = ' WHERE c_id=%s '
    insQuery = insQuery + contentIdQuery
    insARGSlist.append(content_id)

    myquery.execute(insQuery, insARGSlist)
</code></pre>
","2024-07-18 14:49:00","1","Answer"
"78765119","","How to make a flexible argument list for cursor.execute in python3?","<p>In fact, I want to increase and decrease the mysql query items and the values ​​(arguments) according to the status of the variable values.</p>
<p>based on my scenario I need to make a flexible mysql query individual with its arguments.</p>
<pre><code>    connection = pymysql.connect(host=&quot;&quot;, user=&quot;&quot;, passwd=&quot;&quot;, db=&quot;&quot;)
    myquery = connection.cursor()

    insARGS = &quot;&quot;
    content_id = 1097
    page_title = &quot;test page title&quot;

    insQuery = 'UPDATE ex_content SET'
    insARGS = &quot;&quot;
    insARGSdictionary = {}

    if (len(page_title) &gt; 0):
        print(&quot;page_title: &quot;+page_title)
        print(type(page_title))
        pageTitleQuery = &quot; c_title=%s&quot;
        insQuery = insQuery + pageTitleQuery
        insARGS = &quot;page_title&quot;
        insARGSdictionary['page_title'] = page_title
    else:
        print(&quot;page_title is not bigger than 0&quot;)

    if (len(page_desc) &gt; 0):
        print(&quot;page_desc: &quot;+page_desc)
        pageDescQuery = &quot;, c_meta_desc=%s&quot;
        insQuery = insQuery + pageDescQuery
        insARGS = insARGS + &quot;, page_desc&quot;
        insARGSdictionary['page_desc'] = page_desc
    else:
        print(&quot;page_desc is not bigger than 0&quot;)
    if (len(page_heading) &gt; 0):
        page_heading = &quot;&quot;
        print(&quot;page_heading: &quot;+page_heading)
        pageHeadingQuery = &quot;, c_heading=%s&quot;
        insQuery = insQuery + pageHeadingQuery
        insARGS = insARGS + &quot;, page_heading&quot;
        insARGSdictionary['page_heading'] = page_heading
    else:
        print(&quot;page_heading is not bigger than 0&quot;)
    if (len(page_link) &gt; 0):
        print(&quot;page_link: &quot;+page_link)
        pageLinkQuery = &quot;, c_link=%s&quot;
        insQuery = insQuery + pageLinkQuery
        insARGS = insARGS + &quot;, page_link&quot;
        insARGSdictionary['page_link'] = page_link
    else:
        print(&quot;page_link is not bigger than 0&quot;)
    
    if content_id:
        print(&quot;content_id: &quot;+str(content_id))
        contentIdQuery = ' WHERE c_id=%s '
        insQuery = insQuery + contentIdQuery
        insARGS = insARGS + &quot;, content_id&quot;
        insARGSdictionary['content_id'] = content_id

        list_of_dict_keys = list(insARGSdictionary.keys())
        queryArguments = (', '.join(map(str, list_of_dict_keys)))
        myquery.execute(insQuery, (queryArguments))

</code></pre>
<p>Also my data types in queryArguments may be vary (e.g. int or str or etc).
Thank you in advance for the advice</p>
","2024-07-18 14:39:45","0","Question"
"78764175","","Unable to insert array and map data into the databricks table programmatically in python","<p>Trying to insert array and map (dictionary/json) data into Azure databricks table using both SQLAlchemy as well as databricks-sql-connector.</p>
<p>getting differenet error</p>
<pre><code>from sqlalchemy import create_engine, Column, String, text, Integer, JSON, BigInteger, Identity, ARRAY
from sqlalchemy.orm import sessionmaker, declarative_base

payload = {
    &quot;schema_name&quot;: &quot;catalog_schema&quot;,
    &quot;table_name&quot;: &quot;policy11&quot;,
    &quot;column_names&quot;: [&quot;CustomerId&quot;, &quot;FirstName&quot;, &quot;LastName&quot;, &quot;Email&quot;, &quot;DOB&quot;, &quot;Gender&quot;, &quot;AnnualIncome&quot;, &quot;StreetAddress&quot;, &quot;City&quot;, &quot;State&quot;, &quot;Country&quot;, &quot;Zip&quot;, &quot;CreatedDate&quot;, &quot;UpdatedDate&quot;],
    &quot;choice&quot;: {&quot;AnomalyDetection&quot;: &quot;1&quot;, &quot;BusinessContext&quot;: &quot;1&quot;, &quot;DQRules&quot;: &quot;1&quot;, &quot;Standardization&quot;: &quot;0&quot;},
    &quot;standardization&quot;: []
}

Base = declarative_base()

class DataQuality(Base):
    __tablename__ = 'data_quality'

    id = Column(BigInteger, Identity(start=1, increment=1), primary_key=True)
    schema_name = Column(String, nullable=False)
    table_name = Column(String, nullable=False)
    column_names = Column(ARRAY(String))
    choice = Column(JSON())
    standardization = Column(ARRAY(String))

engine = create_engine(
  url = f&quot;databricks://token:{access_token}@{server_hostname}?&quot; +
        f&quot;http_path={http_path}&amp;catalog={catalog}&amp;schema={schema}&quot;
)

Session = sessionmaker(bind=engine)
session = Session()

def insert_data(session, data):
    try:
        
        result = {}
        result[&quot;schema_name&quot;]=data[&quot;schema_name&quot;]
        result[&quot;table_name&quot;]=data[&quot;table_name&quot;]
        result[&quot;column_names&quot;]=data[&quot;column_names&quot;]
        result[&quot;choice&quot;]=str(data[&quot;choice&quot;])
        result[&quot;standardization&quot;]=data.get(&quot;standardization&quot;, [])

        # Add and commit the new record
        dq_config = DataQuality(**result)
        session.add(dq_config)
        session.commit()

    except Exception as e:
        session.rollback()
        print(e)
        
    finally:
        session.close()

insert_data(session, payload)
</code></pre>
<p>Getting following error: (builtins.AttributeError) 'DatabricksDialect' object has no attribute '_json_serializer'</p>
<h1>Also tried using directly using databricks-sql-connector</h1>
<pre><code>connection = sql.connect(server_hostname = server_hostname,
                 http_path       = http_path,
                 access_token    = access_token)
cursor = connection.cursor()


cursor.execute(&quot;INSERT INTO dq_config_driven_execution.dq_configuration_test.data_quality (schema_name, table_name, column_names, choice) VALUES ('schema_name', 'table_name', ['CustomerId', 'FirstName'], {'AnomalyDetection': '1'})&quot;)

cursor.close()
connection.close()
</code></pre>
<p>Getting following error: databricks.sql.exc.ServerOperationError: [PARSE_SYNTAX_ERROR] Syntax error at or near '['. SQLSTATE: 42601 (line 1, pos 159)`</p>
","2024-07-18 11:36:36","2","Question"
"78761528","78761470","","<p>You can first explode the <code>item_properties</code> column and from that column (which is a json) create a dataframe using <code>json_normalize</code> and then concat &quot;item_id&quot; column followed by filtering on <code>property_id</code></p>
<pre><code>t = df.explode(&quot;item_properties&quot;)
out = pd.concat([t[[&quot;item_id&quot;]].reset_index(drop=True), 
                 pd.json_normalize(t[&quot;item_properties&quot;])], axis=1)
out = out[out[&quot;property_id&quot;].eq(2)]
print(out)

   item_id  property_id property_name                        property_value
1        1            2        name_2                    [property_value_1]
3        2            2        name_2  [property_value_1, property_value_2]
5        3            2        name_2  [property_value_1, property_value_2]
</code></pre>
","2024-07-17 20:36:38","1","Answer"
"78761508","78761470","","<p>One way to do it if your item_properties is &quot;ordered and well behaved&quot;:</p>
<pre><code>df['desired_column'] = df['item_properties'].str[1].str['property_value']
</code></pre>
<p>Output:</p>
<pre><code>                         desired_column  
0                    [property_value_1]  
1  [property_value_1, property_value_2]  
2  [property_value_1, property_value_2] 
</code></pre>
","2024-07-17 20:28:41","1","Answer"
"78761470","","Unpack values from column, which consist of list of dictionaries","<p>I have dataframe, which looks like this:</p>
<pre class=""lang-python prettyprint-override""><code>import pandas as pd

df = pd.DataFrame({&quot;item_id&quot;: [1, 2, 3],
                   &quot;item_properties&quot;:[
                                        [{&quot;property_id&quot; : 1,
                                        &quot;property_name&quot;: &quot;name_1&quot;,
                                        &quot;property_value&quot;: ['property_value_1']},
                                        {&quot;property_id&quot; : 2,
                                        &quot;property_name&quot;: &quot;name_2&quot;,
                                        &quot;property_value&quot;: ['property_value_1']},
                                        ],
                                        [{&quot;property_id&quot; : 1,
                                        &quot;property_name&quot;: &quot;name_1&quot;,
                                        &quot;property_value&quot;: ['property_value_1']},
                                        {&quot;property_id&quot; : 2,
                                        &quot;property_name&quot;: &quot;name_2&quot;,
                                        &quot;property_value&quot;: ['property_value_1', 'property_value_2']},
                                        ],
                                        [{&quot;property_id&quot; : 1,
                                        &quot;property_name&quot;: &quot;name_1&quot;,
                                        &quot;property_value&quot;: ['property_value_1', 'property_value_2']},
                                        {&quot;property_id&quot; : 2,
                                        &quot;property_name&quot;: &quot;name_2&quot;,
                                        &quot;property_value&quot;: ['property_value_1', 'property_value_2']},
                                        ],
                                ]
                   })
</code></pre>
<p>I need to extract values from every dictionary in column <code>item_properties</code>, if <code>property_id</code> equals to <code>2</code>.
If there's more, than one element, they need to be separated by <code>;</code>.
My desired df should look like this:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>item_id</th>
<th>desired_column</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>property_value_1</td>
</tr>
<tr>
<td>2</td>
<td>property_value_1;property_value_2</td>
</tr>
<tr>
<td>3</td>
<td>property_value_1;property_value_2</td>
</tr>
</tbody>
</table></div>
<p>What I did:</p>
<pre class=""lang-python prettyprint-override""><code>df['desired_value'] = ''
for i in range(len(df)):
    [df['desired_value'][i]] = [d.get(&quot;property_value&quot;) for d in df['item_properties'][i] if d['property_id'] == 2]
df['desired_value'] = [';'.join(map(str, l)) for l in df['desired_value']]
</code></pre>
<p>But pandas gives me this message:</p>
<pre><code>FutureWarning: ChainedAssignmentError: behaviour will change in pandas 3.0!
You are setting values through chained assignment. Currently this works in certain cases, but when using Copy-on-Write (which will become the default behaviour in pandas 3.0) this will never work to update the original DataFrame or Series, because the intermediate object on which we are setting values will behave as a copy.
A typical example is when you are setting values in a column of a DataFrame, like:

df[&quot;col&quot;][row_indexer] = value

Use df.loc[row_indexer, &quot;col&quot;] = values instead, to perform the assignment in a single step and ensure this keeps updating the original df.

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
</code></pre>
<p>What is right way to do it?</p>
","2024-07-17 20:17:09","1","Question"
"78760672","78760293","","<p>I would <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.explode.html"" rel=""nofollow noreferrer""><code>explode</code></a>, create a mapping Series, and <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.map.html"" rel=""nofollow noreferrer""><code>map</code></a>:</p>
<pre><code>df1['b'] = df1['a'].map(df2.explode('e').set_index('e')['f'])
</code></pre>
<p>Output:</p>
<pre><code>   a  b
0  1  1
1  2  1
2  8  3
</code></pre>
<p>Intermediate mapping Series:</p>
<pre><code>df2.explode('e').set_index('e')['f']

e
1    1
2    1
3    1
4    2
5    2
6    2
7    3
8    3
9    3
Name: f, dtype: int64
</code></pre>
","2024-07-17 16:30:19","1","Answer"
"78760480","78760293","","<p>IIUC, you can create a mask using <code>apply</code> then use that to replace the values in place with <code>loc</code>:</p>
<pre><code>m = df2[&quot;e&quot;].apply(lambda x: df1[&quot;a&quot;].isin(x).any())
df1.loc[m, &quot;b&quot;] = df2[&quot;f&quot;]
</code></pre>
<pre class=""lang-none prettyprint-override""><code>   a  b
0  1  1
1  2   
2  8  3
</code></pre>
","2024-07-17 15:50:54","1","Answer"
"78760293","","find value in column, which contains list and take another value from next column and put it in first table to new column","<p>I have two tables</p>
<pre><code>df1 = pd.DataFrame([{'a': 1}, {'a': 2}, {'a': 8}])
df1['b'] = &quot;&quot;

df2 = pd.DataFrame([{'e': [1,2,3], 'f': 1},{'e': [4,5,6], 'f': 2},{'e': [7,8,9], 'f': 3}])
       e  f
</code></pre>
<p>I would like to insert a value into df1['b'] from df2['f'] based on the condition that value in df['a'] is somewhere in df2['e']</p>
<p>Mostly I would use apply/map
<code>df1['a'].apply(lambda x: function)</code></p>
<p>I can get the specific value I need
<code>df2['f'].loc[df2['e'].apply(lambda y: value_to_look_for in y)].item()</code></p>
<p>but when I put it together
<code>df1['a'].apply(lambda x: (df2['f'].loc[df2['e'].map(lambda y:x in y)].item()))</code></p>
<p>I'm getting an error
&quot;ValueError: can only convert an array of size 1 to a Python scalar&quot;</p>
<p>Can I ask for a solution, what am I missing?</p>
","2024-07-17 15:13:06","2","Question"
"78756683","78756646","","<p><a href=""https://stackoverflow.com/questions/4065976"">This Q&amp;A</a> strongly suggests that <code>locals()</code> within a comprehension expression contains only the variables within the scope of the comprehension expression.  The following confirms this by explicitly showing that <code>locals()</code> contains only the variables used in the comprehension expression:</p>
<pre><code>&gt;&gt;&gt; { ky:locals() for (ky,OldDF1) in OldDFs.items() }

{'df': {'.0': &lt;dict_itemiterator at 0x1ce48fbf040&gt;,
  'ky': 'df',
  'OldDF1':    A  B
  0  2  0
  1  1  2}}
</code></pre>
<p>The numbers within <code>df</code> differ from those in the orignally
posted question because of the random generation.</p>
<p><a href=""https://stackoverflow.com/questions/4065976"">The Q&amp;A</a> also provides work-arounds.</p>
","2024-07-16 20:44:45","0","Answer"
"78756646","","Can't access local dataframe from dictionary comprehension expression","<p>I am using dictionary comprehension to compare each dataframe from within a dictionary to its corresponding dataframe in locals().  For some reason, I am getting a key error when accessing the locals() dataframe from within the dictionary comprehension expression.</p>
<p>Here is the setup:</p>
<pre><code>imort numpy as np
imort pandas as pd
df=pd.DataFrame(np.random.randint(3,size=[2,2]),columns=['A','B'])
   #    A  B
   # 0  1  2
   # 1  2  0

# Create dictionary of datafame(s) (only 1 here)
OldDFs={'df':df}
</code></pre>
<p>Here is the failure when my dictionary comprehension expression refers to a <code>locals()</code> dataframe:</p>
<pre><code>#####################################################
#          This is the &quot;key test expression&quot;
#####################################################
{ ky:locals()[ky] for (ky,OldDF1) in OldDFs.items() }
   # Console message: KeyError 'df'
</code></pre>
<p>The key <code>ky</code> is of the correct type:</p>
<pre><code>{ ky:type(ky) for (ky,OldDF1) in OldDFs.items() } # {'df': str}
</code></pre>
<p>It works <em>outside</em> of dictionary comprehension:</p>
<pre><code>locals()['df'] # Prints &quot;df&quot;
</code></pre>
<p>The dictionary comprehension expression works if I refer to a dictionary other than <code>locals()</code>:</p>
<pre><code>{ ky:OldDFs[ky] for (ky,OldDF1) in OldDFs.items() } # Prints &quot;df&quot;
</code></pre>
<p>What is wrong with the &quot;key test expression&quot; above?</p>
<p><strong>Background:</strong> In the actual situation, OldDFs consists of many dataframes read from a pickle file.  The actual test I want to perform is</p>
<pre><code>{ ky:OldDF1.equals(locals()[ky])
   for (ky,OldDF1) in OldDFs.items() }
</code></pre>
","2024-07-16 20:35:53","1","Question"
"78756427","78756302","","<p>You are pushing an array containing both objects to the final list, which isn't what you are looking for. Instead, you want to combine two objects to a single one. So instead of <code>[...]</code>, you should use <code>{...}</code>.</p>
<p>Before:</p>
<pre class=""lang-js prettyprint-override""><code>finalList.push([
  ...retrieveCondition.conditions,
  ...item.conditions,
]);
</code></pre>
<p>After:</p>
<pre class=""lang-js prettyprint-override""><code>finalList.push({
  ...retrieveCondition.conditions,
  ...item.conditions,
});
</code></pre>
<p>Updated snippet:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const array1 = [
  {
    conditions: [
      {
        name: ""xxx"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A1"",
    },
  },
  {
    conditions: [
      {
        name: ""xxx"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A2"",
    },
  },
  {
    conditions: [
      {
        name: ""xxx"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A3"",
    },
  },
];

const array2 = [
  {
    conditions: [
      {
        name: ""xxx"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A1"",
    },
  },
  {
    conditions: [
      {
        name: ""xxx"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A2"",
    },
  },
  {
    conditions: [
      {
        name: ""xxx"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A3"",
    },
  },
];

const finalList = [];

array1.map((retrieveCondition) =&gt; {
  array2.find((item) =&gt; {
    if (retrieveCondition.customerLOB.code === item.customerLOB.code) {
      finalList.push({
        ...retrieveCondition.conditions,
        ...item.conditions,
      });
    }
  });
});

console.log(finalList);</code></pre>
</div>
</div>
</p>
","2024-07-16 19:31:00","0","Answer"
"78756302","","How to merge two array using .map and .find by avoiding iterating twice","<p>I have two arrays below. I am trying to merge conditions array based on customerLOB.code match. The problem is, I am getting the results added twice because the loop gets iterated twice. How can I avoid this. Any help is much appreciated.</p>
<p>Here based on the customerLOB code , if it matches, I am trying to get a single array which has the list of conditions(array of objects from both arrays). But instead of 3 results , I am getting 6 results.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const array1 = [
  {
    conditions: [
      {
        name: ""xxx"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A1"",
    },
  },
  {
    conditions: [
      {
        name: ""yyy"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A2"",
    },
  },
  {
    conditions: [
      {
        name: ""zzzz"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A3"",
    },
  },
];

const array2 = [
  {
    conditions: [
      {
        name: ""mmmm"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A1"",
    },
  },
  {
    conditions: [
      {
        name: ""nnnn"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A2"",
    },
  },
  {
    conditions: [
      {
        name: ""oooo"",
        id: ""1"",
      },
    ],
    customerLOB: {
      code: ""A3"",
    },
  },
];

const finalList = [];

array1.map((retrieveCondition) =&gt; {
  array2.find((item) =&gt; {
    if (retrieveCondition.customerLOB.code === item.customerLOB.code) {
      finalList.push({
        ...retrieveCondition.conditions,
        ...item.conditions,
      });
    }
  });
});

console.log(finalList);</code></pre>
</div>
</div>
</p>
","2024-07-16 18:58:57","-1","Question"
"78755393","78755276","","<p>A base R option:</p>
<pre><code>df$color &lt;- Reduce(
  \(x, y) ifelse(grepl(pattern = y, x = df$pets, fixed = TRUE), y, x),
  dictionary, 
  init=NA_character_
)

#   id          pets  color
# 1  1     brown dog  brown
# 2  2     black cat  black
# 3  3    orange cat orange
# 4  4    black bird  black
# 5  5 white hamster  white
</code></pre>
<p>Same pattern using a loop:</p>
<pre><code>df$color &lt;- NA_character_
for (y in dictionary) {
  df$color &lt;- ifelse(grepl(pattern = y, x = df$pets, fixed = TRUE), y, df$color) 
}
</code></pre>
","2024-07-16 15:13:44","0","Answer"
"78755308","78755276","","<p>Using the <code>stringr</code> package:</p>
<pre class=""lang-r prettyprint-override""><code>library(stringr)

regex &lt;- str_c(&quot;\\b&quot;, dictionary, &quot;\\b&quot;, collapse = &quot;|&quot;)
df$color &lt;- str_extract(df$pets, regex)
# &quot;brown&quot;  &quot;black&quot;  &quot;orange&quot; &quot;black&quot;  &quot;white&quot; 
</code></pre>
<p>In base R:</p>
<pre class=""lang-r prettyprint-override""><code>regex &lt;- paste0(&quot;.*(&quot;, paste0(&quot;\\b&quot;, dictionary, &quot;\\b&quot;, collapse = &quot;|&quot;), &quot;).*&quot;)

df$color &lt;- sub(regex, &quot;\\1&quot;, df$pets)
# &quot;brown&quot;  &quot;black&quot;  &quot;orange&quot; &quot;black&quot;  &quot;white&quot; 
</code></pre>
<hr />
<p>Both these solutions do the same thing. First construct a regular expression pattern match using <code>dictionary</code>. This regular expression will capture any of the complete words: black, orange, etc.</p>
<p>Due to the use of word boundaries (e.g. <code>\\b</code>) this pattern match will only match these words. For example, if you had <code>white-tailed deer</code>, this would not extract &quot;white&quot;.</p>
<p>If there are multiple colors in the same string (e.g. &quot;black white bear&quot;) then I would recommend using <code>str_extract_all()</code>.</p>
","2024-07-16 14:56:18","2","Answer"
"78755276","","make groups by a dictionary in R","<p>I have the task of identifying the group to which a sentence belongs according to the use of specific words, for example identifying which color has been used to describe an animal. I have a dictionary of the words I want to identify in this way:</p>
<pre><code>df &lt;- data.frame(id = c(1:5), pets = c(&quot;brown dog&quot;, &quot;black cat&quot;, &quot;orange cat&quot;, &quot;black bird&quot;, &quot;white hamster&quot;))

dictionary &lt;- c(&quot;black&quot;, &quot;orange&quot;, &quot;white&quot;, &quot;brown&quot;, &quot;green&quot;, &quot;red&quot;)
</code></pre>
<p>I need to match the pets with the dictionary indicating which categories they are, to my final df be like:</p>
<pre><code>final_df &lt;- data.frame(id = c(1:5), 
pets = c(&quot;brown dog&quot;, &quot;black cat&quot;, &quot;orange cat&quot;, &quot;black bird&quot;, &quot;white hamster&quot;), 
color = c(&quot;brown&quot;, &quot;black&quot;, &quot;orange&quot;, &quot;black&quot;, &quot;white&quot;))
</code></pre>
","2024-07-16 14:47:46","0","Question"
"78754326","78752810","","<p>In the code shown, the dictionary is empty; so it will never find anything. I'm not just being silly here: dictionaries are cheap when fetching by key, but there are additional costs in <em>constructing and populating</em> the dictionary, so a key factor is the timing of that population. If you are going to create a dictionary <em>just for this loop</em>, then is is very complex to answer which is faster - it would depend on the population counts of the two sets of values, etc. Conversely, if you are constructing the lookup <em>anyway</em>, perhaps in a longer-term shared lookup that is used by multiple operations: the O(1) nature of reading the dictionary makes it almost certain to be faster to use the dictionary lookup - and the &quot;almost&quot; caveat in there is simply to guard against pathological &quot;what if&quot; scenarios with extremely silly semantics; basically in any <em>real world</em> scenario you can delete the &quot;almost&quot; with high confidence.</p>
","2024-07-16 11:33:29","2","Answer"
"78754278","78753920","","<p>The simplest solution, IMHO, is this:</p>
<pre><code>ILookup&lt;int, string&gt; lookup =
    check2
        .SelectMany(x =&gt; x.Value, (x, Value) =&gt; (x.Key, Value))
        .ToLookup(x =&gt; x.Value, x =&gt; x.Key);
        
</code></pre>
<p>Then you can get the output you want by this:</p>
<pre><code>List&lt;string&gt; output = lookup[2].ToList();
</code></pre>
<p>That gives:</p>
<pre><code>LD010101 
LD030101 
</code></pre>
<p>If you must have it as a <code>Dictionary&lt;int, List&lt;string&gt;&gt;</code> then this works:</p>
<pre><code>Dictionary&lt;int, List&lt;string&gt;&gt; lookup =
    check2
        .SelectMany(x =&gt; x.Value, (x, Value) =&gt; (x.Key, Value))
        .ToLookup(x =&gt; x.Value, x =&gt; x.Key)
        .ToDictionary(x =&gt; x.Key, x =&gt; x.ToList());
</code></pre>
","2024-07-16 11:24:29","0","Answer"
"78754090","78753920","","<p><strong>Requirement</strong>: given an integer value, give me all keys of the Dictionary that have at least one value equal to this integer value in the list that belongs to this key.</p>
<p><code>Dictionary&lt;TKey, TValue&gt;</code> implements <code>ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;</code>. This means that you can enumerate over the items in the dictionary as if they are a combination of the Key and the Value.
In your case: the string and the list.</p>
<p>So from every &lt;string, list&gt; pair, you only want to keep those that have at least once the given integer value in the list.</p>
<pre><code>int searchValue = ...
Dictionary&lt;string, List&lt;int&gt;&gt; myDictionary = ...

IEnumerable&lt;string&gt; keysWithAtLeastOneSearchValueInTheList = myDictionary
    .Where(keyValuePair =&gt; keyValuePair.Value.Contains(searchValue))
    .Select(keyValuePair =&gt; kayValuePair.Key);
</code></pre>
<p>In words: myDictionary is also an enumerable sequence of KeyValuePairs, where the Key is the string, and the value is the List that belongs to this key. From this enumerable sequence, keep only those KeyValuePairs of which property Value (= the list of integers) contains the searchValue. From the remaining KeyValuePairs select the Key (= string)</p>
","2024-07-16 10:43:45","0","Answer"
"78753983","78753920","","<p>This method is an example, giving the first <code>Dictionary&lt;int, List&lt;string&gt;&gt;</code> and the <code>filter</code> as parameters, and returning a new <code>Dictionary&lt;int, List&lt;string&gt;&gt;</code> that groups the first keys by the filter.</p>
<pre><code>public static Dictionary&lt;int, List&lt;string&gt;&gt; FilterDictionaryByGroup(Dictionary&lt;string, List&lt;int&gt;&gt; inputDict, int filter)
    {
        var grouped = inputDict
            .Where(el =&gt; el.Value.Contains(filter))
            .GroupBy(el =&gt; filter)
            .ToDictionary(g =&gt; g.Key, g =&gt; g.Select(el =&gt; el.Key).ToList());

        return grouped;
    }
</code></pre>
<pre><code>var result = FilterDictionary(check2, filter);
</code></pre>
<p>Bare in mind that this approach handles only dealing with one filter value (in your case <code>2</code> for example), but since you want the return type to be <code>Dictionary&lt;int, List&lt;string&gt;&gt;</code>, you can still adhere to the same approach by adding <code>List&lt;int&gt; filters</code> to the method args instead of a single <code>int</code>, and iterate over them.</p>
<h2>Edit</h2>
<p>The <code>Where</code> clause is self-explanatory, it iterates through each element and &quot;filters&quot; them by returning only the elements where their values List contains the filter (here 2 for example, since that's only what we want).</p>
<p><code>g.Select(el =&gt; el.Key)</code> means &quot;for each element (<code>el</code>) in the group (<code>g</code>), select its key&quot;. This extracts the keys of all the dictionary entries in the group.</p>
<p><code>ToList()</code> converts the selected keys into a list. This is necessary since we want the value of dictionary element to be a <code>List&lt;string&gt;</code> and not the generic <code>IEnumerable&lt;string&gt;</code> that <code>Select</code> returns.</p>
","2024-07-16 10:20:58","2","Answer"
"78753966","78753920","","<p>Use a combination of filtering (e.g. using LINQ's <code>.Where()</code> method) and <code>List.Contains()</code>:</p>
<pre><code>var filter = 2;

var value = check2
    .Where(el =&gt; el.Value.Contains(filter))
    .Select(el =&gt; el.Key)
    .ToList();

var newDict = new Dictionary&lt;int, List&lt;string&gt;&gt; { { filter, value } };
</code></pre>
","2024-07-16 10:17:09","0","Answer"
"78753920","","Apply Group by to dictionary value","<p>I have a Dictionary which key of string type and value of  list of integer type, like this:
<code>Dictionary&lt;string, List&lt;int&gt;&gt;</code>.</p>
<p>Lets say I add elements to it:</p>
<pre><code>Dictionary&lt;string, List&lt;int&gt;&gt; check2 = new Dictionary&lt;string, List&lt;int&gt;&gt;();     
check2.Add(&quot;LD010101&quot;, new List&lt;int&gt; { 1, 2, 3 });
check2.Add(&quot;LD010201&quot;, new List&lt;int&gt; { 1 });
check2.Add(&quot;LD030101&quot;, new List&lt;int&gt; { 2, 3, 4 });
check2.Add(&quot;LD030201&quot;, new List&lt;int&gt; { 1, 3, 4 });
check2.Add(&quot;LD040101&quot;, new List&lt;int&gt; { 5, 1, 4 });
check2.Add(&quot;LD050101&quot;, new List&lt;int&gt; { 1, 3, 4 });
</code></pre>
<p>Now I want to apply group by based on the integer value and filter it. Let's say group by filter is 2. Then the output has to be a dictionary like this <code>Dictionary&lt;int, List&lt;string&gt;&gt;</code>, so with filter 2, the output will be a dictionary like this, and I have to use <code>GroupBy</code> to do this:</p>
<pre><code>key:2, Value: {&quot;LD010101&quot;,&quot;LD030101&quot;}
</code></pre>
","2024-07-16 10:08:10","2","Question"
"78753857","78752810","","<p>As with many things, it depends.</p>
<p>For small collections, say 10 items, a plain loop over an array or list is usually the fastest option. This is because the runtime will likely be dominated by the time to fetch items from memory, and a plain array is about as cache friendly as you can get. LINQ involves some overhead, so is usually best to avoid when trying to get the best performance.</p>
<p>For larger collections a dictionary will be faster since it will scale better. You may also want to consider using a <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1?view=net-8.0"" rel=""nofollow noreferrer"">hashSet</a>, possibly with a custom <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.iequalitycomparer-1?view=net-8.0"" rel=""nofollow noreferrer"">equality comparer</a> for comparing items. Both will have constant time to check if an item exist, compared to the linear time for a regular unsorted array/list.</p>
<p>But in the majority of cases performance is less important than other concerns, like readability. And classes like dictionary, HashSet, or <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.intersect?view=net-8.0"" rel=""nofollow noreferrer"">.Intersect</a> are often more convenient and readable.</p>
<p>If you worry about performance the first step is to measure and/or profile your application. If you run this code once a second and it takes 1us to run it is just not worth spending any time to optimize. Just make sure you have good test environment with representative data sets so you can discover potential scaling problems before they hit production.</p>
","2024-07-16 09:55:44","1","Answer"
"78753783","78752810","","<p>When you are using List.Any - it searches through the collection to find an element. So the complexity of such search is O(n).
If you are using Dictionary, then it uses O(1) search and access time to each specific element - so it will be much faster.</p>
","2024-07-16 09:39:42","0","Answer"
"78752810","","Which is more efficient Dictionary.TryGetValue or List.Any","<p>I have a case where I have to find out if element belongs to a list or not in loop.</p>
<p>The straight forward way to do this is to call the <code>Any</code> method of the list, like this</p>
<pre><code>public class Person
{
    public int Id { get; set;}
    public string Name { get; set;}
}

List&lt;Person&gt; persons = new List&lt;Person&gt;();

foreach(int personId in personIds)
{
    if(persons.Any(x =&gt; x.Id == personId))
    {
       // do something
    }
}
</code></pre>
<p>The other way I have seen developers using is by using <code>Dictionary</code> and calling its <code>TryGetValue</code> method, like this</p>
<pre><code>Dictionary&lt;int, Person&gt; personLookup = new Dictionary&lt;int, Person&gt;();
foreach(int personId in personIds)
{
   if(personLookup.TryGetValue(personId, out var person))
   {
      // do something
   }
}
</code></pre>
<p>Which is more efficient in the two?</p>
","2024-07-16 05:33:25","0","Question"
"78747495","78747435","","<p>If the key &quot;Oopsie&quot; does not exist in the dictionary, the following code will create a new key named &quot;Oopsie&quot; with an empty value.</p>
<pre><code>if (dictVar(&quot;Oopsie&quot;) = 23) then
</code></pre>
<p>Before proceeding with the if statement, use the <code>Exists</code> function to verify the presence of the key in the dictionary object.</p>
<pre class=""lang-vb prettyprint-override""><code>dictVar(&quot;Happy&quot;) = 23
dictVar(&quot;Lucky&quot;) = 666
Const SKEY = &quot;Oopsie&quot;
If dictVar.Exists(SKEY) Then
    If dictVar(SKEY) = 2 then
       {Do Something}
    End If
Else
    MsgBox &quot;the key &quot; &amp; SKEY &amp; &quot; is not exits&quot;
End If
</code></pre>
","2024-07-14 21:50:57","2","Answer"
"78747487","78747435","","<p>I am not sure if this is what you want, but give it a try...</p>
<p>If you want to check if it is empty or not, use the alternative IF statement.</p>
<pre><code>Sub Test()
    Dim dictVar As Object, Key As Variant
    Dim myCheck As Boolean
    
    myCheck = False
    
    Set dictVar = CreateObject(&quot;Scripting.Dictionary&quot;)
    
    dictVar(&quot;Happy&quot;) = 23
    dictVar(&quot;Oopsie&quot;) = 9978
    dictVar(&quot;Lucky&quot;) = 666
    
    For Each Key In dictVar.keys
        If Key = &quot;Oopsie&quot; And dictVar(Key) = 99 Then
'        If Key = &quot;Oopsie&quot; And dictVar(Key) &lt;&gt; &quot;&quot; Then
           myCheck = True
           Exit For
        End If
    Next
    
    MsgBox IIf(myCheck, &quot;OK&quot;, &quot;Not OK&quot;)
End Sub

</code></pre>
","2024-07-14 21:42:49","0","Answer"
"78747435","","Checking for empty dictionary item (not key)","<p>Every now and then an empty item is added to a dictionary when I don't check it the key exists.  I know why it's happening, but I don't know how to check if it has.  For instance, in the code segment below;</p>
<pre><code>dictVar(&quot;Happy&quot;) = 23
dictVar(&quot;Lucky&quot;) = 666
if (dictVar(&quot;Oopsie&quot;) = 23) then
   {Do Something}
end if
</code></pre>
<p>I mistakenly check for &quot;Oopsie&quot; entry.  The dictionary.keys watch list will show the 3 keys, the dictionary.items list shows 23 and 66 respectively for &quot;Happy&quot; and &quot;Lucky&quot;.  &quot;Oopsie&quot; shows &quot;Empty&quot; as the value (no quotes) as the key didn't exist when I referenced it.  No big surprise.<br />
<a href=""https://i.sstatic.net/AI6VUC8J.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/AI6VUC8J.jpg"" alt=""enter image description here"" /></a></p>
<p>I'd like to code an routine to handle this kind of issue, but I can't find anything on how to check the item of a dictionary key for &quot;Empty&quot;.  I have tried &quot;is empty&quot; and &quot;is nothing&quot; - both fail as the item value appears to be inaccessible.</p>
<p>Everything I find online refers to an empty Key, and that it adds if not checking EXISTS first, not nothing on checking the item value itself.</p>
<p>Is there a way to check for this?</p>
","2024-07-14 20:54:09","0","Question"
"78745716","78745344","","<p>The problem with your code is that it can return <code>True</code> while there are still characters to check in <code>ransomdict</code>. This is premature. If you find a letter in <code>ransomdict</code> that occurs enough times in the magazine, this doesn't mean you can stop looking further. You'll first need to check this for all other letters in <code>ransomdict</code> as well.</p>
<p>The only reason to exit the loop early would be when you find a letter that does <em>not</em> occur enough times: then it is right to exit immediately... with <code>False</code>. So the fix is to check the opposite condition (a failure) and return <code>False</code>. Only return <code>True</code> when all tests have been done:</p>
<pre><code>        for k in ransomdict:
            if k in magadict:
                if magadict[k] &lt; ransomdict[k]:  # Opposite condition
                    return False  # Only exit loop when result will be False
            else:
                return False
        return True  # And return True when all letters were verified and OK.
</code></pre>
<p>You already know there is room for optimisation, so I just focused on your question for making your approach work.</p>
","2024-07-14 06:46:35","2","Answer"
"78745406","78745296","","<p>A way to build a multi-level dict like your example:</p>
<p>The idea here is to make a dict constructor from a string</p>
<pre><code>levels = [1, 2, 3, 4, 5, 6]
data = ['PLACEHOLDER']

temp = list()

# For loop must start with the inner levels
for index, level in enumerate(reversed(levels)):
    value = data if index == 0 else list(reversed(levels))[index-1]
    key = level
    temp.append(f'dict([({key},{value})])') if index == 0 else temp.append(f'dict([({key},{temp[index-1]})])')

# Transforms string into dict constructor
final_dict = eval(temp[-1])
final_dict

&gt;&gt;&gt;{1: {2: {3: {4: {5: {6: ['PLACEHOLDER']}}}}}}
    
</code></pre>
<p>Since it constructs a dict from a string, keep in mind that the keys (represented by 'levels') must be integers</p>
<p>But if you still want to make a string key, you may insert the str in the levels list but you must define a same name var  outside:</p>
<pre><code># input:
level1 = 'level1'
key2 = 'level2'
random_name = 'level3'
levels = ['level1', 'key2', 'random_name']
data = ['PLACEHOLDER']
.
.
.
# output
{'level1': {'level2': {'level3': ['PLACEHOLDER']}}}
</code></pre>
<p>This solution is not as concise as yours, but can help if you have more sublevels</p>
","2024-07-14 02:37:55","-2","Answer"
"78745358","78745344","","<h4>Your code is correct. You've only forgotten to write the last <code>return</code> statement properly:</h4>
<pre><code>from collections import defaultdict


class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -&gt; bool:
        ransomdict = defaultdict(int)
        magadict = defaultdict(int)

        for i in ransomNote:
            ransomdict[i] += 1

        for j in magazine:
            magadict[j] += 1

        for k in ransomdict:
            if k not in magadict or magadict[k] &lt; ransomdict[k]:
                return False

        return True

</code></pre>
<p>or simply:</p>
<pre><code>from collections import defaultdict


class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -&gt; bool:
        ransomdict = defaultdict(int)
        magadict = defaultdict(int)

        for i in ransomNote:
            ransomdict[i] += 1

        for j in magazine:
            magadict[j] += 1

        return all(ransomdict[char] &lt;= magadict[char] for char in ransomdict)

</code></pre>
<hr />
<p>You can also use <a href=""https://docs.python.org/3/library/collections.html#collections.Counter"" rel=""nofollow noreferrer""><code>Counter()</code></a> and check <code>Counter(ransomNote) &lt;= Counter(magazine)</code>:</p>
<pre><code>from collections import Counter

class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -&gt; bool:
        return Counter(ransomNote) &lt;= Counter(magazine)
</code></pre>
","2024-07-14 01:46:52","3","Answer"
"78745344","","What is wrong in my solution for Leetcode's RansomNote","<p>I am working on the Leetcode problem <a href=""https://leetcode.com/problems/ransom-note/description/"" rel=""nofollow noreferrer"">383. Ransom Note</a>:</p>
<blockquote>
<p>Given two strings <code>ransomNote</code> and <code>magazine</code>, return <code>true</code> <em>if</em> <code>ransomNote</code> <em>can be constructed by using the letters from</em> <code>magazine</code> <em>and</em> <code>false</code> <em>otherwise</em>.</p>
<p>Each letter in <code>magazine</code> can only be used once in <code>ransomNote</code>.</p>
</blockquote>
<p>My code passes 98 out of 128 testcases. I created two dictionaries with counts of each occurrence, and wrote some code to compare the two counts.</p>
<p>Here is what I have:</p>
<pre><code>class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -&gt; bool:
        ransomdict = {}
        magadict = {}

        for i in ransomNote:
            if i in ransomdict:
                ransomdict[i] +=1
            else:
                ransomdict[i] = 1

        for j in magazine:
            if j in magadict:
                magadict[j] +=1
            else:
                magadict[j] = 1

        print(ransomdict)
        print(magadict)

        for k in ransomdict:
            if k in magadict:
                if magadict[k] &gt;= ransomdict[k]:
                    return True
            else:
                return False
</code></pre>
<p>The following test case is supposed to return <code>False</code>, but it is returning <code>True</code>:</p>
<pre><code>ransomNote = &quot;abb&quot;
magazine = &quot;ab&quot; 
</code></pre>
<p>To debug, I printed <code>ransomdict</code> and <code>magadict</code>, and clearly the counts are right. What is my mistake?</p>
<p>I know this code isn't optimized; I'm just looking for a way to fix what I am missing here and successfully pass all test cases.</p>
","2024-07-14 01:39:05","3","Question"
"78745296","","Best way to build a multilevel dict of dicts","<p>I'm adding entries into a multi-level dict like this...</p>
<pre><code>d = {}

level1 = &quot;some level1 value&quot;
level2 = &quot;some level2 value&quot;
level3 = &quot;some level3 value&quot;
data = &quot;some data&quot;

try:
    d[level1]
except:
    d[level1] = {}

try:
    d[level1][level2]
except:
    d[level1][level2] = {}

d[level1][level2][level3] = data
</code></pre>
<p>Is there a better way to build this dict?</p>
","2024-07-14 00:54:46","0","Question"
"78745163","78744879","","<p>This works for me too:</p>
<pre class=""lang-py prettyprint-override""><code>list_of_tuples = [(key,*dictionary[key]) for key in dictionary]
</code></pre>
","2024-07-13 23:00:58","0","Answer"
"78744890","78744879","","<p>Try</p>
<pre><code>list_of_tuples = [(k, *v) for k, v in dictionary.items()]
</code></pre>
<p><code>*v</code> unpacks <code>v</code>.</p>
","2024-07-13 20:15:28","9","Answer"
"78744879","","A list of tuples from dictionary where values are lists","<p>I need to convert a dictionary in a form <code>{1: ['a', 'b', 'c', 'd'], 2: ['e', 'f', 'g', 'h']}</code> to a list of tuples in a form <code>[(1, 'a', 'b', 'c', 'd'), (2, 'e', 'f', 'g', 'h')]</code>.</p>
<p>When I try that:</p>
<pre><code>dictionary = {1: ['a', 'b', 'c', 'd'], 2: ['e', 'f', 'g', 'h']}

list_of_tuples = [(k, v) for k, v in dictionary.items()]
</code></pre>
<p>I get</p>
<pre><code>list_of_tuples = [(1, ['a', 'b', 'c', 'd']), (2, ['e', 'f', 'g', 'h'])]
</code></pre>
<p>and I need</p>
<pre><code>list_of_tuples = [(1, 'a', 'b', 'c', 'd'), (2, 'e', 'f', 'g', 'h')]
</code></pre>
","2024-07-13 20:11:54","1","Question"
"78741137","78740659","","<pre><code>
import os

def get_folder_contents_with_suffix(folder_paths, suffix):
    
    folders_dict = {}

    # Iterate through the folder paths
    for folder_name, folder_path in folder_paths.items():
        try:
            # List all files in the folder
            files = os.listdir(folder_path)
            # Filter and extract file names without extensions if they have the specified suffix
            file_names = [os.path.splitext(file)[0] for file in files if file.endswith(suffix) and os.path.isfile(os.path.join(folder_path, file))]
            # Add the folder name and its file names to the dictionary
            folders_dict[folder_name] = file_names
        except FileNotFoundError:
            print(f&quot;Error: The folder '{folder_path}' does not exist.&quot;)
        except Exception as e:
            print(f&quot;An error occurred while processing the folder '{folder_path}': {e}&quot;)

    return folders_dict

# Define your folder paths
folder_paths = {
    'appointment': 'temp_folder/stats/appointments/',
    'data_transfer': 'temp_folder/stats/data_transfer/'
}

# Define the suffix to filter files
suffix = '.csv'

# Get the folder contents with the specified suffix
folder_contents = get_folder_contents_with_suffix(folder_paths, suffix)

# Print the resulting dictionary
print(folder_contents)

</code></pre>
","2024-07-12 15:20:21","2","Answer"
"78741076","78740659","","<p>Making some assumptions here.</p>
<ol>
<li>You don't want a recursive search</li>
<li>You're only interested in CSV files</li>
<li>You have a Python list of folder (directory) names that are accessible from your current working directory</li>
</ol>
<p>On that basis it's as simple as:</p>
<pre><code>from pathlib import Path

list_of_folders = [
    Path(&quot;temp_folder/stats/data_transfer&quot;),
    Path(&quot;temp_folder/stats/appointments&quot;),
]

result = {}

for folder in list_of_folders:
    key = folder.name
    for file in folder.glob(&quot;*.csv&quot;):
        result.setdefault(key, []).append(file.stem)

print(result)
</code></pre>
<p>Given the folder hierarchy in the OP and their contents, this would produce:</p>
<pre><code>{'data_transfer': ['united_configs', 'united_history', 'extraction', 'united_sync'], 'appointments': ['appointment_configs', 'united_history', 'appointment_history']}
</code></pre>
","2024-07-12 15:03:51","1","Answer"
"78740760","78740659","","<pre><code>from pathlib import Path

folders_dict = {}
for folder in Path(&quot;.&quot;).glob(&quot;*/&quot;):
    csv_files = list(Path(f&quot;./{folder}&quot;).glob(&quot;**/*.csv&quot;))

    if csv_files:
        folders_dict[str(folder)] = [
            str(file.relative_to(folder).with_suffix(&quot;&quot;)) for file in csv_files
        ]
</code></pre>
","2024-07-12 14:01:53","-1","Answer"
"78740700","78740659","","<p>How about something like this which reads files and put it in an list inside a dict:</p>
<pre><code>import os

folders = {
    'appointment': 'temp_folder/stats/appointments/',
    'data_transfer': 'temp_folder/stats/data_transfer'
}

folder_contents = {}

for folder_name, folder_path in folders.items():
    folder_contents[folder_name] = []
    files = os.listdir(folder_path)
    for file in files:
        name, extension = os.path.splitext(file)
        folder_contents[folder_name].append(name)

print(folder_contents)
</code></pre>
","2024-07-12 13:47:34","1","Answer"
"78740659","","How to create a dictionary with a key and a list of values from multiple folders and files","<p>I have a three folders in GCS and I want to create a dictionary that has the folder name as the key and its contents as the values with without the file_type as the values. How do I do this?</p>
<p>For a bit more clarity, the folders are databases and I run</p>
<pre><code>select * from information_schema
</code></pre>
<p>From there, I break down the files as needed and then place the csv files in the folders.
After the folder and contents are created I send the dictionary to other teams.</p>
<p>Example:
In the following folder I have these files
<code>temp_folder/stats/data_transfer/</code></p>
<pre><code>extraction.csv
united_sync.csv
united_configs.csv
united_history.csv
</code></pre>
<p>In another folder
<code>temp_folder/stats/appointments/</code>
I have the following</p>
<pre><code>appointment_history.csv
appointment_configs.csv
appointment_transactions.csv
</code></pre>
<p>Expected Outcome:</p>
<pre><code>folders_dict = {
    'data_transfer': ['extraction', 'united_sync', 'united_configs', 'united_history'],
    'appointment': ['appointment_history', 'appointment_configs', 'appointment_transactions']
}
</code></pre>
","2024-07-12 13:37:02","-3","Question"
"78739229","78737952","","<p>Try</p>
<pre><code>lapply(seq(lst), \(i) setNames(lst[[i]], c(&quot;x&quot;, &quot;y&quot;, LETTERS[i])))
</code></pre>
","2024-07-12 08:07:23","1","Answer"
"78738005","78737952","","<p>Adapted from [this][1] post</p>
<pre><code> rename_function = function(.x, .y) {
  names(.x)[names(.x) == 'dat'] = .y
  .x
  }

columns &lt;- c(A, B, C)

map2(.x = lst,
     .y = columns,
     ~rename_function(.x, .y)
     )
</code></pre>
","2024-07-11 23:16:33","1","Answer"
"78737991","78737952","","<p>One option could be to use <code>map2()</code> and use non-standard evaluation (<a href=""https://adv-r.hadley.nz/quasiquotation.html"" rel=""nofollow noreferrer"">chapters 19 and 20 of advanced R</a>) to rename the columns, e.g.</p>
<pre class=""lang-r prettyprint-override""><code>library(tidyverse)

df1&lt;- data.frame(x=c(0:10),
                 y=c(10:20),
                 z=c(20:30))
df2&lt;- data.frame(x=c(0:10),
                 y=c(10:20),
                 z=c(20:30))
df3&lt;- data.frame(x=c(0:10),
                 y=c(10:20),
                 z=c(20:30))
lst &lt;- list(df1, df2, df3) 

map2(c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;), lst, \(.x, lst) rename(lst, !!.x := &quot;z&quot;))
#&gt; [[1]]
#&gt;     x  y  A
#&gt; 1   0 10 20
#&gt; 2   1 11 21
#&gt; 3   2 12 22
#&gt; 4   3 13 23
#&gt; 5   4 14 24
#&gt; 6   5 15 25
#&gt; 7   6 16 26
#&gt; 8   7 17 27
#&gt; 9   8 18 28
#&gt; 10  9 19 29
#&gt; 11 10 20 30
#&gt; 
#&gt; [[2]]
#&gt;     x  y  B
#&gt; 1   0 10 20
#&gt; 2   1 11 21
#&gt; 3   2 12 22
#&gt; 4   3 13 23
#&gt; 5   4 14 24
#&gt; 6   5 15 25
#&gt; 7   6 16 26
#&gt; 8   7 17 27
#&gt; 9   8 18 28
#&gt; 10  9 19 29
#&gt; 11 10 20 30
#&gt; 
#&gt; [[3]]
#&gt;     x  y  C
#&gt; 1   0 10 20
#&gt; 2   1 11 21
#&gt; 3   2 12 22
#&gt; 4   3 13 23
#&gt; 5   4 14 24
#&gt; 6   5 15 25
#&gt; 7   6 16 26
#&gt; 8   7 17 27
#&gt; 9   8 18 28
#&gt; 10  9 19 29
#&gt; 11 10 20 30
</code></pre>
<p><sup>Created on 2024-07-12 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.0</a></sup></p>
","2024-07-11 23:09:14","2","Answer"
"78737985","78737952","","<p>If you run lapply over a range of integers <code>1:length(lst)</code> then you can use this to get the required data frame and the nth letter for the rename.</p>
<pre><code>lapply(1:length(lst), \(x) {result &lt;- lst[[x]]; names(result)[3] &lt;- LETTERS[x]; return(result)})
</code></pre>
","2024-07-11 23:08:10","2","Answer"
"78737952","","How can I rename a column in a list of data frames and the name of the column depends on the position of the data frame?","<p>I have a list of three data frames (df1, df2, and df3) each with three columns (x, y, and z). I would like to rename a column (z) for all data frames, but the new name of the column depends on the specific data frame, or its position in the list.</p>
<p>For example, my data look like this:</p>
<pre><code>df1&lt;- data.frame(x=c(0:10),
                 y=c(10:20),
                 z=c(20:30))
df2&lt;- data.frame(x=c(0:10),
                 y=c(10:20),
                 z=c(20:30))
df3&lt;- data.frame(x=c(0:10),
                 y=c(10:20),
                 z=c(20:30))
lst &lt;- list(df1, df2, df3) 
</code></pre>
<p>and I would like the output to look like this:</p>
<pre><code>df1:
| x  | y  | A  |
| -- | -- | -- |
| 0  | 10 | 20 | 
| 1  | 11 | 21 |

df2:
| x  | y  | B  |
| -- | -- | -- |
| 0  | 10 | 20 | 
| 1  | 11 | 21 |

df3:
| x  | y  | C  |
| -- | -- | -- |
| 0  | 10 | 20 | 
| 1  | 11 | 21 |
</code></pre>
<p>I do not want to use a for loop, so I have been attempting to work with lapply() or purrr::map(), but I am not sure I fully understand the structure. Here is code that I have attempted, but it renames all column Z to A</p>
<pre><code>columns &lt;- c(A, B, C)
lapply(lst, function(df, name) {
names(df)[3] &lt;- name
 return(df)}, columns)
</code></pre>
","2024-07-11 22:53:23","1","Question"
"78732020","78732010","","<p>The first parameter of the defaultdict is the default value on missing keys. So if you want two layers of defaulting, you use two layers of defaultdicts:</p>
<pre class=""lang-py prettyprint-override""><code>from collections import defaultdict
my_dict = defaultdict(lambda: defaultdict(list))
my_dict['foo']['bar'].append('1')
</code></pre>
<p><code>my_dict['foo']</code> -&gt; key missing -&gt; calls lambda -&gt; inserts a <code>defaultdict(list)</code> -&gt;</p>
<pre class=""lang-py prettyprint-override""><code>my_dict = defaultdict(..., {
    'foo': defaultdict(list),
})
</code></pre>
<p><code>['bar']</code> -&gt; key missing -&gt; calls <code>list</code> -&gt; inserts an empty list</p>
<pre class=""lang-py prettyprint-override""><code>my_dict = defaultdict(..., {
    'foo': defaultdict(list, {'bar': []}),
})
</code></pre>
<p>and then you append(1) into that</p>
","2024-07-10 17:33:59","1","Answer"
"78732010","","Use of defalut dict such that the default is a dict with an empty list","<p>The main object is a dictionary whose keys are strings, values a 2nd dictionary.<br />
The 2nd dictionary has string keys, and list values.</p>
<p>I want to append a new value to the empty list created using defalutdict()</p>
<p>Here is what I am trying to do:</p>
<pre class=""lang-py prettyprint-override""><code>import collections
my_dict = collections.defaultdict(dict,{'missing_key': [] } )
my_dict['foo']['bar'].append('1')
</code></pre>
<p>And the result produced by Idle u3.10.11:</p>
<pre><code>Traceback (most recent call last):
  File &quot;&lt;pyshell#14&gt;&quot;, line 1, in &lt;module&gt;
    my_dict['foo']['bar'].append('1')
KeyError: 'bar'
</code></pre>
","2024-07-10 17:31:09","0","Question"
"78728827","78720830","","<p><code>exchangeRates.values</code> returns an iterable of every value in the map, giving you the <code>Iterable&lt;double&gt;</code>. Since you have already verified the map contains the target currency, use <code>exchangeRates[target.toUpperCase()]</code> to specifically get the number for that target string.</p>
<p>To summarize:</p>
<p><code>someMap.values</code> returns an iterable of all values in the key/value pairs</p>
<p><code>someMap[key]</code> returns the value associated with that key</p>
","2024-07-10 05:56:48","2","Answer"
"78728203","78728119","","<p>Well, you have two problems. The first is a small syntax problem:</p>
<pre class=""lang-py prettyprint-override""><code>extended_nested_dict.getRequired['person1']
# TypeError: 'method' object is not subscriptable
</code></pre>
<p>Here, you are trying to <em>subscript</em> a method. What you probably meant to do was call get required (which uses parentheses, not square brackets):</p>
<pre><code>extended_nested_dict.getRequired('person1')  # OK
</code></pre>
<p>The other issue, which I believe is the main question you really have is that you are only wrapping the outer-most dictionary, but you also want nested dictionaries to become of type <code>ExtendedDict</code>. To do this, you can implement it in the <code>__init__</code> method. Something like this:</p>
<pre class=""lang-py prettyprint-override""><code>from collections import UserDict

# use UserDict to avoid subclassing issues with the builtin type

class ExtendedDict(UserDict):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        for k, v in self.items():
            if isinstance(v, dict):
                extended_value = ExtendedDict(v)
                self[k] = extended_value
    def getRequired(self, key, default=None):
        ... # same as you had it
</code></pre>
<p>Then you can see the nested dictionaries (no matter how deeply nested) will also become an <code>ExtendedDict</code>:</p>
<pre class=""lang-py prettyprint-override""><code># Create a nested dictionary
nested_dict = {
    'person1': {'name': 'Alice', 'age': 30},
    'person2': {'name': 'Bob', 'age': 25},
    'person3': {'name': 'Charlie', 'age': 40}
}

# Create an instance of ExtendedDict
extended_nested_dict = ExtendedDict(nested_dict)

person = extended_nested_dict.getRequired('person1')
age = person.getRequired('age')
name = person.getRequired('name')
print(f'{name} is {age} years old')

assert type(person) is ExtendedDict  # True
</code></pre>
<p>Some additional tweaking would be needed if you also want this to work within other nested collections, such as lists, tuples, etc.</p>
","2024-07-10 00:43:28","0","Answer"
"78728119","","How to create extended dict Class requiring key/values on get()","<p>I'm trying to build a custom class that will require keys and/or values when getting them from a dict. This is a simple version of what I have written, getRequired and is only checking for keys.</p>
<pre><code>class ExtendedDict(dict):
    def getRequired(self, key, default=None):
        &quot;&quot;&quot;
        Custom get method that raises an error if the key is not found.
        &quot;&quot;&quot;
        if key in self:
            return self[key]
        elif default is not None:
            return default
        else:
            raise KeyError(f&quot;Key '{key}' not found in the dictionary&quot;)

# Create a nested dictionary
nested_dict = {
    'person1': {'name': 'Alice', 'age': 30},
    'person2': {'name': 'Bob', 'age': 25},
    'person3': {'name': 'Charlie', 'age': 40}
}

# Create an instance of ExtendedDict
extended_nested_dict = ExtendedDict(nested_dict)

# Access 'age' for 'person1' using getRequired
try:
    alice_age = extended_nested_dict.getRequired['person1'].getRequired('age')
    print(f&quot;Alice's age: {alice_age}&quot;)
except KeyError as e:
    print(e)
</code></pre>
<p>When attempting this code, an error is thrown.TypeError: 'method' object is not subscriptable When attempting the same code,  to access 'person1' rather than 'age' the value is returned. My understanding is that the error is given because the nested dictionary is not using ExtendedDict but is using the standard dict.</p>
<p>I'm looking for feedback on this, or someone to correct my understanding. Thanks for the help.</p>
","2024-07-09 23:53:03","0","Question"
"78727641","78719624","","<p>I would first suggest using Swift at this point as it's quite a bit more streamlined.</p>
<p>To accomplish this in ObjC, there are two things that need to change; <code>let</code> and <code>=</code> to initialize. Your current Obj3 is this</p>
<pre><code>@objcMembers
class Obj3: Object {
    dynamic var val: String?
    dynamic var valMap: Map&lt;String, String&gt;?
}
</code></pre>
<p>so update it to this (pick either property; non-optional or optional)</p>
<pre><code>@objcMembers
class Obj3: Object {
    dynamic var val: String?
    let valMap = Map&lt;String, String&gt;() //non-optional value
    let valMapOptionalValue = Map&lt;String, String?&gt;() //optional value
}
</code></pre>
<p>which can be initialized thusly</p>
<pre><code>let myObject = Obj3()
myObject.valMap[&quot;testKey&quot;] = &quot;testValue&quot;
myObject.valMapOptionalValue[&quot;Hello&quot;] = &quot;World&quot;

try! realm.write {
    realm.add(myObject)
}
</code></pre>
<p>and then one thing to note about a Map <code>Map&lt;String, String&gt;?</code></p>
<p>Maps work similar to a Dictionary; an element cannot exist without a key. e.g. having an element with a nil key is 'not possible'. So making a Map optional would fall into that same structure; it cannot exist without a key so the element would never be optional.</p>
","2024-07-09 20:34:34","0","Answer"
"78724557","78719582","","<p>Let's simplify and focus on how works the <code>Dictionary</code> as all the <code>DateComponents</code> make things noisy.
You can stop what you're doing, open a Playground and test to ensure your understanding of <code>Dictionary</code> is up to date and correct.</p>
<p>What you're currently doing: Setting the whole value of <code>myDic1</code> each time
ie: Forget about your previous values, now you're just <code>[&quot;Key\(i)&quot;: &quot;Value \(i)&quot;]</code>
So its output will be the last override ie <code>myDic1 = [&quot;Key\(4)&quot;: &quot;Value \(4)&quot;]</code></p>
<pre><code>var myDic1: [String: Any] = [:]
for i in 0...4 {
    myDic1 = [&quot;Key\(i)&quot;: &quot;Value \(i)&quot;]
    print(&quot;Partial1: \(myDic1)&quot;)
}
print(&quot;Final1: \(myDic1)&quot;)
</code></pre>
<p>What you want is to set the value for each new key:</p>
<pre><code>var myDic2: [String: Any] = [:]
for i in 0...4 {
    myDic2[&quot;Key\(i)&quot;] = &quot;Value \(i)&quot;
    print(&quot;Partial1: \(myDic2)&quot;)
}
print(&quot;Final2: \(myDic2)&quot;)
</code></pre>
<p>But for Dictionaries, key are unique. Meaning that if you do:</p>
<pre><code>myDict[key] = Value0
myDict[key] = Value1
</code></pre>
<p>Then, <code>myDict[key]</code> will be <code>Value1</code> (ie, the last one set for <code>key</code>.</p>
<pre><code>var myDic3: [String: Any] = [:]
for i in 0...4 {
    myDic3[&quot;Key\(i)&quot;] = &quot;Value \(i)&quot;
    print(&quot;Partial3: \(myDic3)&quot;)
}
for i in 0...4 {
    myDic3[&quot;Key\(i)&quot;] = &quot;New Value \(i)&quot;
    print(&quot;Partial3: \(myDic3)&quot;)
}
print(&quot;Final3: \(myDic3)&quot;)
</code></pre>
<p>So in your case, if the key <code>DateComponents(calendar: Calendar(identifier: .gregorian), year: yearInt, month: monthInt, day: dayInt)</code> is the same for different employee, you'll get only the last value set. So you need to change your model.
I don't know what you want to do with your model, but <code>var eventDate: [DateComponents: [EventType]]</code> could be a solution, meaning that you can have multiple EventType for a same <code>DateComponents</code>, etc.</p>
<p>So you need to debug and print <code>print(&quot;Partial1: \(myDic1)&quot;)</code> equivalent in your code inside the loop.</p>
","2024-07-09 08:42:32","0","Answer"
"78724271","78720486","","<p>You need to search the multi-word expressions before forming a DFM.</p>
<pre class=""lang-r prettyprint-override""><code>library(&quot;quanteda&quot;)
#&gt; Package version: 4.0.2
#&gt; Unicode version: 15.1
#&gt; ICU version: 74.1
#&gt; Parallel computing: 16 of 16 threads used.
#&gt; See https://quanteda.io for tutorials and examples.
</code></pre>
<pre class=""lang-r prettyprint-override""><code>
data(data_corpus_inaugural)

toks &lt;- data_corpus_inaugural %&gt;% 
  tokens(remove_punct = TRUE,
         remove_symbol = TRUE, 
         padding = TRUE)

dict &lt;- dictionary(list(govt = c(&quot;the house of representatives&quot;, &quot;the senate&quot;, &quot;foreign legislative&quot;),
                         people = c(&quot;fellow citizens&quot;, &quot;men of reflection&quot;),
                         action =c(&quot;total independence&quot;, &quot;unlimited sumission&quot;),
                         course =&quot;no middle course&quot;,
                         energy = c(&quot;apprehension of danger&quot;, &quot;formidable power&quot;)))
</code></pre>
<h3>Count dictionary key</h3>
<pre class=""lang-r prettyprint-override""><code>
dfmt &lt;- dfm(tokens_lookup(toks, dictionary = dict))
dat &lt;- convert(dfmt, to = &quot;data.frame&quot;)
head(dat)
#&gt;            doc_id govt people action course energy
#&gt; 1 1789-Washington    3      2      0      0      0
#&gt; 2 1793-Washington    0      1      0      0      0
#&gt; 3      1797-Adams    0      1      1      1      1
#&gt; 4  1801-Jefferson    0      5      0      0      0
#&gt; 5  1805-Jefferson    0      8      0      0      0
#&gt; 6    1809-Madison    0      0      0      0      0
</code></pre>
<h3>Count phrases</h3>
<pre class=""lang-r prettyprint-override""><code>dfmt2 &lt;- dfm(tokens_compound(toks, dict)) %&gt;% 
  dfm_select(dict)

dat2 &lt;- convert(dfmt2, to = &quot;data.frame&quot;)
head(dat2)
#&gt;            doc_id the_senate the_house_of_representatives fellow_citizens
#&gt; 1 1789-Washington          1                            2               2
#&gt; 2 1793-Washington          0                            0               1
#&gt; 3      1797-Adams          0                            0               0
#&gt; 4  1801-Jefferson          0                            0               5
#&gt; 5  1805-Jefferson          0                            0               8
#&gt; 6    1809-Madison          0                            0               0
#&gt;   no_middle_course total_independence men_of_reflection formidable_power
#&gt; 1                0                  0                 0                0
#&gt; 2                0                  0                 0                0
#&gt; 3                1                  1                 1                1
#&gt; 4                0                  0                 0                0
#&gt; 5                0                  0                 0                0
#&gt; 6                0                  0                 0                0
</code></pre>
<p><sup>Created on 2024-07-09 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","2024-07-09 07:36:23","0","Answer"
"78724032","78722881","","<p>You can get the same output without renaming the columns using <a href=""https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.functions.struct.html"" rel=""nofollow noreferrer""><code>struct</code></a> and <a href=""https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.functions.to_json.html"" rel=""nofollow noreferrer""><code>to_json</code></a>:</p>
<pre class=""lang-py prettyprint-override""><code>from pyspark.sql import SparkSession
from pyspark.sql import functions as F

spark = SparkSession.builder.getOrCreate()

data = [(2, False, 200, &quot;mexican-curp-validation&quot;, 200, None)]
schema = &quot;apiVersion int, expired string, status int, id string, status_1 int, severity string&quot;
df = spark.createDataFrame(data, schema)
df.show(truncate=False)

# +----------+-------+------+-----------------------+--------+--------+
# |apiVersion|expired|status|id                     |status_1|severity|
# +----------+-------+------+-----------------------+--------+--------+
# |2         |false  |200   |mexican-curp-validation|200     |NULL    |
# +----------+-------+------+-----------------------+--------+--------+

cols_list = F.struct(
    F.col(&quot;id&quot;),
    F.col(&quot;status_1&quot;).alias(&quot;status&quot;),
    F.struct(F.col(&quot;severity&quot;)).alias(&quot;error&quot;)
)
df_transformed = df.withColumn(&quot;steps&quot;, F.to_json(cols_list)).drop(&quot;id&quot;, &quot;status_1&quot;, &quot;severity&quot;)
df_transformed.printSchema()
df_transformed.show(truncate=False)

# root
#  |-- apiVersion: integer (nullable = true)
#  |-- expired: string (nullable = true)
#  |-- status: integer (nullable = true)
#  |-- steps: string (nullable = true)

# +----------+-------+------+--------------------------------------------------------+
# |apiVersion|expired|status|steps                                                   |
# +----------+-------+------+--------------------------------------------------------+
# |2         |false  |200   |{&quot;id&quot;:&quot;mexican-curp-validation&quot;,&quot;status&quot;:200,&quot;error&quot;:{}}|
# +----------+-------+------+--------------------------------------------------------+
</code></pre>
<p>The reason you are not seeing <code>severity</code> is because of <code>None</code> - <code>to_json</code> won't include the nulls.</p>
<p>Here's the confirmation that the schema is intact - just convert the None to string for testing:</p>
<pre class=""lang-py prettyprint-override""><code>from pyspark.sql import SparkSession
from pyspark.sql import functions as F

spark = SparkSession.builder.getOrCreate()

data = [(2, False, 200, &quot;mexican-curp-validation&quot;, 200, &quot;None&quot;)]
schema = &quot;apiVersion int, expired string, status int, id string, status_1 int, severity string&quot;
df = spark.createDataFrame(data, schema)

cols_list = F.struct(
    F.col(&quot;id&quot;),
    F.col(&quot;status_1&quot;).alias(&quot;status&quot;),
    F.struct(F.col(&quot;severity&quot;)).alias(&quot;error&quot;)
)
df_transformed = df.withColumn(&quot;steps&quot;, F.to_json(cols_list)).drop(&quot;id&quot;, &quot;status_1&quot;, &quot;severity&quot;)

df_transformed.show(truncate=False)

# +----------+-------+------+-------------------------------------------------------------------------+
# |apiVersion|expired|status|steps                                                                    |
# +----------+-------+------+-------------------------------------------------------------------------+
# |2         |false  |200   |{&quot;id&quot;:&quot;mexican-curp-validation&quot;,&quot;status&quot;:200,&quot;error&quot;:{&quot;severity&quot;:&quot;None&quot;}}|
# +----------+-------+------+-------------------------------------------------------------------------+
</code></pre>
","2024-07-09 06:40:14","1","Answer"
"78723074","78722881","","<p>Special characters in column names can be escaped using back ticks in the name&quot;`&quot; as follows</p>
<pre><code>cols_list = [&quot;`&quot; + name + &quot;`&quot; for name in df1.columns if &quot;.&quot; in name]
</code></pre>
<p>So that when you refer to it inside the <em><strong>to_json</strong></em> function then it will be &quot;<code>step.id</code>&quot; which successfully escapes the &quot;.&quot; character</p>
<p>Be careful when dealing with column names that contain any special characters and I would recommend to avoid it if possible.</p>
","2024-07-08 22:32:15","2","Answer"
"78722881","","Collect values as dictionary in parent column using Pyspark","<p>I have code and data like below:</p>
<pre><code>df_renamed = df.withColumnRenamed(&quot;id&quot;,&quot;steps.id&quot;).withColumnRenamed(&quot;status_1&quot;,&quot;steps.status&quot;).withColumnRenamed(&quot;severity&quot;,&quot;steps.error.severity&quot;)

df_renamed.show(truncate=False)

+----------+-------+------+-----------------------+------------+--------------------+
|apiVersion|expired|status|steps.id               |steps.status|steps.error.severity|
+----------+-------+------+-----------------------+------------+--------------------+
|2         |false  |200   |mexican-curp-validation|200         |null                |
+----------+-------+------+-----------------------+------------+--------------------+  
</code></pre>
<p>Now I want to transform this data as below:</p>
<pre><code>+----------+-------+------+-----------------------+------------+--------------------+
|apiVersion|expired|status|steps                                                    |
+----------+-------+------+-----------------------+------------+--------------------+
|2         |false  |200   |{&quot;id&quot;:&quot;mexican-curp-validation&quot;, &quot;status&quot;:200 ,&quot;error&quot;:{&quot;severity&quot;:null}}               |
+----------+-------+------+-----------------------+------------+--------------------+  
</code></pre>
<p>where it can be seen that based on the dot notation of the column names, JSON struct is formed in the data. For this reason, I used below code:</p>
<pre><code>cols_list = [name for name in df_renamed.columns if &quot;.&quot; in name]
df_new = df_renamed.withColumn(&quot;steps&quot;,F.to_json(F.struct(*cols_list)))
df_new.show()   
</code></pre>
<p>But it gives below error even though the column is present:</p>
<pre><code> df_new = df_renamed.withColumn(&quot;steps&quot;,F.to_json(F.struct(*cols_list)))
  File &quot;/Users/../IdeaProjects/pocs/venvsd/lib/python3.9/site-packages/pyspark/sql/dataframe.py&quot;, line 3036, in withColumn
    return DataFrame(self._jdf.withColumn(colName, col._jc), self.sparkSession)
  File &quot;/Users/../IdeaProjects/pocs/venvsd/lib/python3.9/site-packages/py4j/java_gateway.py&quot;, line 1321, in __call__
    return_value = get_return_value(
  File &quot;/Users/../IdeaProjects/pocs/venvsd/lib/python3.9/site-packages/pyspark/sql/utils.py&quot;, line 196, in deco
    raise converted from None
pyspark.sql.utils.AnalysisException: Column 'steps.id' does not exist. Did you mean one of the following? [steps.id, expired, status, steps.status, apiVersion, steps.error.severity];
'Project [apiVersion#17, expired#18, status#19, steps.id#29, steps.status#37, steps.error.severity#44, to_json(struct(id, 'steps.id, status, 'steps.status, severity, 'steps.error.severity), Some(GMT+05:30)) AS steps#82]
+- Project [apiVersion#17, expired#18, status#19, steps.id#29, steps.status#37, severity#22 AS steps.error.severity#44]
   +- Project [apiVersion#17, expired#18, status#19, steps.id#29, status_1#21 AS steps.status#37, severity#22]
      +- Project [apiVersion#17, expired#18, status#19, id#20 AS steps.id#29, status_1#21, severity#22]
         +- Relation [apiVersion#17,expired#18,status#19,id#20,status_1#21,severity#22] csv
</code></pre>
<p>Where am I going wrong? Any help is much appreciated.</p>
","2024-07-08 21:16:46","3","Question"
"78721396","78721181","","<p>Basically @Im Kumin's answer in a comprehension:</p>
<pre><code>md = list(dict2.items()) # Avoids re-computing this for each string

result = [functools.reduce(lambda s,m:s.replace(m[0],m[1]), [line]+md) for line in ls]
</code></pre>
","2024-07-08 14:24:33","2","Answer"
"78721339","78721181","","<pre><code>ls = ['BLAH a b c A B C D 12 34 56',
    'BLAH d A B 12 45 78',
    'BLAH a/b A B C 12 45 78',
    'BLAH a/ b A  12 45 78',
    'BLAH a b c A B C D 12 34 99']

dict2 = {'a b c':'1','d':'2','a/b':'3','a/ b':'4'}
</code></pre>
<p>original answer:</p>
<pre><code>[[ls[i].replace(k,v) for k,v in dict2.items()][i] for i in range(len(ls)-1)]
</code></pre>
<p>#output</p>
<pre><code>['BLAH 1 A B C D 12 34 56',
 'BLAH 2 A B 12 45 78',
 'BLAH 3 A B C 12 45 78',
 'BLAH 4 A  12 45 78']
</code></pre>
<p>Edit: @Kumin's answer is correct as the last element was missing when using list comprehension:</p>
<pre><code>for s in ls:
    for k, v in dict2.items():
        s = s.replace(k, v)
    print(s)
</code></pre>
<p>#output</p>
<pre><code>BLAH 1 A B C D 12 34 56
BLAH 2 A B 12 45 78
BLAH 3 A B C 12 45 78
BLAH 4 A  12 45 78
BLAH 1 A B C D 12 34 99
</code></pre>
","2024-07-08 14:14:18","0","Answer"
"78721236","78721181","","<p>This way seems to work for me.
Here is an online test: <a href=""https://www.pythonmorsels.com/p/2qmeh/"" rel=""noreferrer"">https://www.pythonmorsels.com/p/2qmeh/</a></p>
<pre><code>result = []
for s in ls:
    for k, v in dict2.items():
        s = s.replace(k, v)
    result.append(s)

print(result)
</code></pre>
","2024-07-08 13:54:51","5","Answer"
"78721181","","Replace subtrings in a list of strings using dictionary in python","<p>I have a list of substrings:</p>
<pre><code>ls = ['BLAH a b c A B C D 12 34 56',
    'BLAH d A B 12 45 78',
    'BLAH a/b A B C 12 45 78',
    'BLAH a/ b A  12 45 78',
    'BLAH a b c A B C D 12 34 99']
</code></pre>
<p>I want to replace the lower case substrings with an identifier:</p>
<pre><code>dict2 = {'a b c':'1','d':'2','a/b':'3','a/ b':'4'}
</code></pre>
<p>I am looping over all the items in the list and trying to perform a replace using:</p>
<pre><code>[[ls[i].replace(k,v) for k,v in dict2.items()][0] for i in range(len(ls))]
</code></pre>
<p>but this does not perform the correct replacement from the dictionary for each element(<code>d</code>, <code>a/b</code>, and <code>a/ b</code> were not replaced), and results in:</p>
<pre><code>['BLAH 1 A B C D 12 34 56', 
'BLAH d A B 12 45 78', 
'BLAH a/b A B C 12 45 78', 
'BLAH a/ b A  12 45 78', 
'BLAH 1 A B C D 12 34 99']
</code></pre>
<p>I would like to end up with:</p>
<pre><code>['BLAH 1 A B C D 12 34 56',
    'BLAH 2 A B 12 45 78',
    'BLAH 3 A B C 12 45 78',
    'BLAH 4 A  12 45 78',
    'BLAH 1 A B C D 12 34 99']
</code></pre>
","2024-07-08 13:40:58","2","Question"
"78721010","78720830","","<p>One solution is to get the element from your map and check if it is <code>null</code>. This works since if you request an element that are not in the map, the <code>[]</code> operator will return <code>null</code>:</p>
<pre class=""lang-dart prettyprint-override""><code>  exchange(double amount, String target) {
    double? exchangeRate = exchangeRates[target.toUpperCase()];
    if (exchangeRate != null) {
      var newAmount = amount * (exchangeRate * 1.0);
    }
  }
</code></pre>
<p>You can also combine this by using a pattern if you are familiar with that syntax:</p>
<pre class=""lang-dart prettyprint-override""><code>  exchange(double amount, String target) {
    if (exchangeRates[target.toUpperCase()] case final exchangeRate?) {
      var newAmount = amount * (exchangeRate * 1.0);
    }
  }
</code></pre>
","2024-07-08 13:02:12","0","Answer"
"78720830","","access target value by providing key Map<>","<pre><code>class CurrencyExchange {
  Map&lt;String, double&gt; exchangeRates = {
    'USD': 1.0,
    'EUR': 0.85,
    'JPY': 110.15,
    'GBP': 0.72,
    'AUD': 1.39,
    'CAD': 1.25,
    'CHF': 0.92,
    'CNY': 6.47,
    'HKD': 7.77,
    'NZD': 1.41,
  };

  exchange(double amount, String target) {
    if (exchangeRates.keys.contains(target.toUpperCase())) {
      // Here i want to access the equivalent value of the above key from Map&lt;String, double&gt; exchangeRates
    }
  }
}
</code></pre>
<p>i have written this line:</p>
<pre><code>var newAmount = amount * (exchangeRates.values * 1.0);  
</code></pre>
<p>but it gives me this error:</p>
<p>The operator '*' isn't defined for the type 'Iterable&lt;double&gt;'</p>
","2024-07-08 12:23:20","0","Question"
"78720486","","Reading output of tokens_compound into a dictionary","<p>I want to use tokens_compound to examine the frequency of phrases in the documents of a corpus. I used the corpus data_corpus_inaugural for illustrative purposes and selected some ngrams to search for. I want to be able to save the output into a csv file. The code below, produces an output file, but no phrase is identified. Advice regarding how to correctly identify the frequency of phrases via a  dictionary are appreciated.</p>
<pre><code>library(&quot;quanteda&quot;)
## Package version: 2.1.2

data(data_corpus_inaugural)

toks &lt;- data_corpus_inaugural %&gt;% 
  tokens(remove_punct = TRUE,
         remove_symbol = TRUE, 
         padding = TRUE) %&gt;% 
  tokens_tolower()

tokens &lt;- dfm(toks)

multiword &lt;- c(&quot;the house of representatives&quot;, &quot;the senate&quot;, &quot;foreign legislative&quot;,&quot;fellow citiznes&quot;, &quot;men of reflection&quot;, &quot;total independence&quot;, &quot;unlimited sumission&quot;,&quot;no middle course&quot;,
                 &quot;apprehension of danger&quot;, &quot;formidable power&quot;)
comp_toks &lt;- tokens_compound(toks, pattern = phrase(multiword))


dictx &lt;- dictionary(list(govt = c(&quot;the_house_of_representatives&quot;, &quot;the_senate&quot;, &quot;foreign_legislative&quot;),
                         people = c(&quot;fellow_citizens&quot;, &quot;men_of_reflection&quot;),
                         action =c(&quot;total_independence&quot;, &quot;unlimited_sumission&quot;),
                         course =&quot;no_middle_course&quot;,
                         energy = c(&quot;apprehension_of_danger&quot;, &quot;formidable_power&quot;)))



test  &lt;-  dfm_lookup(tokens, dictionary = dictx)
test2 &lt;- convert(test , to = &quot;data.frame&quot;)
write.csv (test2, &quot;D:/Test.csv&quot;)
</code></pre>
","2024-07-08 11:06:17","0","Question"
"78719624","","Use Map<String, SomeClass> in RealmSwift?","<p>Code example:</p>
<pre><code>@objcMembers
class Obj1: Object {
    dynamic var obj2: Obj2?
}

@objcMembers
class Obj2: Object {
    dynamic var obj3: Obj3?
}

@objcMembers
class Obj3: Object {
    dynamic var val: String?
    dynamic var valMap: Map&lt;String, String&gt;?
}

try! realm.write {
            let obj1 = Obj1()
            obj1.obj2 = .init()
            obj1.obj2?.obj3 = .init()
            obj1.obj2?.obj3?.val = &quot;test&quot;
            obj1.obj2?.obj3?.valMap = .init()
            obj1.obj2?.obj3?.valMap?[&quot;testKey&quot;] = &quot;testValue&quot;
            realm.add(obj1)
        }

try! RealmManager.shared.realm.write {
            let requestedObj1 = realm.objects(Obj1.self).first!
            ...
}
</code></pre>
<p>I check every value inside requestedObj1 and see each data I've stored previously except of Map object and its values - it just becomes nil after assignment.</p>
<p>Possibly there are similar bugs exist but I can't found it - documentation doesn't show a concrete example of how to use Map and in the same time Map is similar to Swift's map for collections and sequences which make searching almost impossible.</p>
<p>Tried to replace <code>dynamic var valMap</code> with <code>@Persisted var</code>, <code>let</code> and etc. and got random errors which doesn't allow me to use it. In the best case everything works but <code>Map</code> remains nil or empty.</p>
<p>In general how to store dictionaries in RealmSwift? According to documentation RealmSwift supports storing Object subclasses inside Map but there is no concrete example:</p>
<p><a href=""https://www.mongodb.com/docs/realm-sdks/swift/latest/Classes/Map.html"" rel=""nofollow noreferrer"">https://www.mongodb.com/docs/realm-sdks/swift/latest/Classes/Map.html</a></p>
","2024-07-08 07:39:01","0","Question"
"78719582","","Populate the dictionary [DateComponents: EventType], How to add dates to a date dictionary","<p>I would like to get this result:</p>
<pre><code>var eventDate: [DateComponents: EventType] = [
        DateComponents(calendar: Calendar(identifier: .gregorian), year: 2024, month: 7, day: 04): .busy,
        DateComponents(calendar: Calendar(identifier: .gregorian), year: 2024, month: 8, day: 07): .busy,
        DateComponents(calendar: Calendar(identifier: .gregorian), year: 2024, month: 10, day: 16): .busy,
        DateComponents(calendar: Calendar(identifier: .gregorian), year: 2024, month: 12, day: 17): .busy,
        DateComponents(calendar: Calendar(identifier: .gregorian), year: 2025, month: 4, day: 18): .busy,
        DateComponents(calendar: Calendar(identifier: .gregorian), year: 2026, month: 9, day: 26): .busy
    ]
</code></pre>
<p>I'm trying this way but I'm not getting what I want. I don't get the list you see at the beginning.</p>
<pre><code>func dateTimestampDividedInt(date: TimeInterval) -&gt; (year: Int, month: Int, day: Int) {
            let calendar = Calendar.current
            let date = Date(timeIntervalSince1970: date)
            
            let day = calendar.component(.day, from: date)
            let month = calendar.component(.month, from: date)
            let year = calendar.component(.year, from: date)
            
            return (year, month, day)
        }
</code></pre>
<pre><code>for employee in eventArrayIcon {
           
            let timeIntervalDateEndDivided = employee.dateEnd?.dateTimestampDividedInt(date: employee.dateEnd ?? 0.0)

                    let yearInt = timeIntervalDateEndDivided?.year
                    let monthInt = timeIntervalDateEndDivided?.month
                    let dayInt = timeIntervalDateEndDivided?.day
            
            eventDate = [
                DateComponents(calendar: Calendar(identifier: .gregorian), year: yearInt, month: monthInt, day: dayInt): .busy
            ]
            
        }
</code></pre>
","2024-07-08 07:30:39","-3","Question"
"78719566","78719490","","<p>#1 Define your dictionary by comprehension :</p>
<pre><code>keys = ['DO1', 'DO2', ...]
cmds = {key: get_data(key) for key in keys}
</code></pre>
<p>#2 Yes it exists. This is a cleaner way to populate your dictionary as the key name is redundant. You can modify (statically or dynamically) the <code>keys</code> list to change your dictionary.</p>
<p>#3 Also to have the rest of your code a little bit cleaner, you may want to separate your code into different modules and/or objects.</p>
<p>For example you can create a handler, which methods are the explicit name of your cmds (&quot;cmd1&quot;, &quot;cmd2...)</p>
<pre><code>#handler.py
class commandHandler:
    def cmd1(self, pyqt_object, data_string):
        pyqt_object.cmd1_btn.setText(data_string)
    
    def cmd2(self, pyqt_object, data_string):
        pyqt_object.cmd2_drop.setCurrentIndex(int(data_string))

    def cmd3(self, pyqt_object, data_string):
        pass #and so on...
</code></pre>
<p>Meanwhile, in your original file, you can use generically this handler with the getattr function :</p>
<pre><code>#your original file
command_handler = commandHandler()
cmds = ['cmd' + str(i) for i in range(1, N+1)] #N being the number of commands
for cmd in cmds:
    if cmd in data:
        getattr(command_handler, cmd)(self, data[cmd])
</code></pre>
<p>This way, you have a more generic and reusable code. To add a cmd feature you just have to add a method to your handler.</p>
","2024-07-08 07:25:29","1","Answer"
"78719510","78719490","","<p>You can use the dictionary comprehension to do so:</p>
<pre class=""lang-py prettyprint-override""><code>keys = [&quot;DO1&quot;, &quot;DO2&quot;, &quot;DO3&quot;]  # Add more keys if you have 
cmds = {key: get_data(key) for key in keys} 
</code></pre>
<p>If you just want to save the function (not wanted to call it while the dictionary is creating), you can do that too:</p>
<pre class=""lang-py prettyprint-override""><code>keys = [&quot;DO1&quot;, &quot;DO2&quot;, &quot;DO3&quot;]  # Add more keys if you have 
cmds = {key: lambda k=key: get_data(k) for key in keys} 
</code></pre>
","2024-07-08 07:12:13","6","Answer"
"78719490","","Can I reference key name in dict value definition?","<p>Is there a way to reference name of key at definition time of the value of the key? For example:</p>
<pre class=""lang-py prettyprint-override""><code>cmds = {&quot;DO1&quot;: get_data(key), &quot;DO2&quot;: get_data(key), ...}
</code></pre>
<p>If it is available each <code>key</code> will be substituted <code>&quot;DO1&quot;</code>, <code>&quot;DO2&quot;</code>, ...:</p>
<pre class=""lang-py prettyprint-override""><code>print(cmds)
{&quot;DO1&quot;: get_data(&quot;DO1&quot;), &quot;DO2&quot;: get_data(&quot;DO2&quot;), ...}
</code></pre>
<p>How do I achieve this idea? I want to save any function call to dictionary, even conditions.</p>
","2024-07-08 07:04:48","-1","Question"
"78718566","78718333","","<p>Sounds like you want a dictionary of dictionaries; which (I find) comes up quite frequently in team and multi-player scenarios; e.g.</p>
<pre><code>// ... playerDic = new Dictionary&lt;int, Dictionary&lt;string, int&gt;&gt;();
// ... propertyDic = new Dictionary&lt;string, int&gt;();

int player = 1;
string property = &quot;Lives&quot;;

propertyDic[ property ] = 9;
playerDic[ player ] = propertyDic;

// ...
var playerLives = playerDic.Contains( player ) ? 
   playerDic[ player ].Contains( property ) ?
   playerDic[ player ][ property ] : 0;  // or some other default.
</code></pre>
<p>Normally you would &quot;prime&quot; these dictionaries with players (on start and connect) so you wouldn't need to do a &quot;contains player&quot; check everytime.</p>
","2024-07-07 22:15:15","0","Answer"
"78718493","78718333","","<p>+1 that Dictionary no longer looks like an adequate data structure for your needs. You have gone from needing a unique string (essentially indexed value) to a structure where the string can be duplicated. You could just as easily use a <code>List&lt;KeyValuePair&lt;string,int&gt;&gt;</code> now.</p>
<p>However yes you can still check the values of the dictionary:</p>
<pre><code>// Does a string exist: 
var exists = myDictionary.Values.Any(x =&gt; x.Key == myString);

// Values with string: 
var keyValues = myDictionary.Values.Where(x =&gt; x.Key == myString);
</code></pre>
<p>Unless you still have code that indexes the dictionary by the unique ID then there is no point continuing to use a dictionary.</p>
","2024-07-07 21:32:53","1","Answer"
"78718333","","Is there any way to check if a KeyValuePair<string, int> contains a specific Key in a Dictionary in one line?","<p>In my code I have a Dictionary, which at first was just &lt;string, int&gt;. However, I needed a way for two things with the same string to be separate elements in the Dictionary, so I made the Key int and the Value a KeyValuePair&lt;string, int&gt;.</p>
<p><code>Dictionary&lt;int, KeyValuePair&lt;string, int&gt;&gt;()</code></p>
<p>The problem is, I need to check if a specific string exists in the Dictionary, <strong>preferably without the use of a for/foreach loop</strong>. Using Dictionary.ContainsValue I could check for a KeyValuePair, but the int in the KeyValuePair isn't specified and would need to be if I used ContainsValue.</p>
<p><strong>Is there any way to check if the Dictionary contains a KeyValuePair with a specific Key in one line?</strong></p>
<p>If anyone has any other fixes for the problem that'd be great too.</p>
<p>Thanks in advance!</p>
","2024-07-07 20:18:17","-1","Question"
"78716661","78715435","","<p>Toadd another approach, simple regex pattern will also work here:</p>
<p>just use pattern <code>([^/]+)/([^/]+)</code> which uses:</p>
<ul>
<li><code>(...)</code> - capturing group</li>
<li><code>[^/]+</code> - match one or more (<code>+</code> operator) character other from <code>/</code> (negated character class <code>[^/]</code></li>
</ul>
<p>This will match &quot;pairs&quot; of values delimited by <code>/</code>.</p>
<p>Here's C# code example:</p>
<pre><code>var values = Regex
    .Matches(
        &quot;value1/672/value2/32/value3/21413&quot;,
        &quot;([^/]+)/([^/]+)&quot;)
    .ToDictionary(x =&gt; x.Groups[1], x =&gt; x.Groups[2]);
</code></pre>
","2024-07-07 07:16:43","1","Answer"
"78715471","78715435","","<p>If you really want to you can do this with a couple LINQ operators but i don't see a lot of added value there :</p>
<pre><code>var str = &quot;value1/672/value2/32/value3/21413&quot;;

// Array containing [value1, 672, value2, 32, value3, 21413
var arr = str.Split('/');

arr
    // Zip gives you pairs between 2 collections, here i'm zipping arr with itself with first element skipped
    // this gives both the key =&gt; value but also the value=&gt; key pairs
    // so this results in {value1, 672} which we want, but also in {672, value2} which we do not want
    .Zip(arr.Skip(1))
    // Keep only the even indexes to get rid of the pairs we don't want mentioned above
    .Where((item, index) =&gt; index % 2 == 0)
    // Convert those tuples to a dictionary
    .ToDictionary(item =&gt; item.First, item =&gt; item.Second);
</code></pre>
","2024-07-06 17:21:24","0","Answer"
"78715466","78715435","","<p>Assuming the provided string contains the first value as a key and the second is the value in the provided string</p>
<pre><code>value1/672/value2/32/value3/21413
</code></pre>
<p>Here's how you can achieve the above:</p>
<pre><code>using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main()
    {
        string input = &quot;value1/672/value2/32/value3/21413&quot;;
        string[] parts = input.Split('/');
        var dictionary = parts
            .Select((value, index) =&gt; new { value, index })
            .Where(x =&gt; x.index % 2 == 0) // Select only even indexed elements as keys
            .ToDictionary(x =&gt; x.value, x =&gt; parts[x.index + 1]); // Use the next element as value      
        
        foreach (var kvp in dictionary)   // Loop for printing the result only
        {
            Console.WriteLine($&quot;{kvp.Key}: {kvp.Value}&quot;);   // Output the dictionary key and values
        }
    }
}
</code></pre>
<blockquote>
<p>Refer to the working .netfiddle <a href=""https://dotnetfiddle.net/aQ88Pv"" rel=""nofollow noreferrer"">here</a></p>
</blockquote>
","2024-07-06 17:17:33","0","Answer"
"78715435","","Split ""Path Variable"" string in a Dictionary in c#","<p>I want to break the string:</p>
<pre><code>value1/672/value2/32/value3/21413
</code></pre>
<p>In a</p>
<pre><code>Dictionary&lt;string, string&gt;
</code></pre>
<p>How can I do this without the use for a for loop?</p>
","2024-07-06 17:05:21","-3","Question"
"78711452","78710936","","<p>The problem is that you have the variance backwards, it's covariance that you need not contravariance. It's confusing, because delegates make the variance flip around. And in this case, it's impossible to achieve, because the delegate itself needs to be contravariant in order to allow <code>TR</code> to be used as a parameter.</p>
<p>In other words: a variable (or in this case the parameter of <code>Dictionary.Add</code>) of type <code>HandleIntegrationEvent&lt;IBaseEvent&gt;</code> cannot accept a delegate of <code>HandleIntegrationEvent&lt;TR&gt;</code>, but a variable of <code>HandleIntegrationEvent&lt;TR&gt;</code> can accept a <code>HandleIntegrationEvent&lt;IBaseEvent&gt;</code>.</p>
<p>Suppose counter-factually that it were true that it could accept such a delegate. You have a location and a function:</p>
<pre class=""lang-cs prettyprint-override""><code>HandleIntegrationEvent&lt;IBaseEvent&gt; somelocation;

public Task HandleUserCreatedEvent(UserCreatedEvent event)
{
  ..
}
</code></pre>
<p>You take a <code>HandleIntegrationEvent&lt;UserCreatedEvent&gt;</code> and store it there.</p>
<pre class=""lang-cs prettyprint-override""><code>somelocation = HandleUserCreatedEvent;
</code></pre>
<p>Someone now retrieves the delegate, and passes a <em>different</em> type to it</p>
<pre class=""lang-cs prettyprint-override""><code>await somelocation(new SomeOtherEvent());
</code></pre>
<p>OOPS!</p>
<p>So this is not allowed. But because you are storing these delegates in a more generalized <code>Dictionary</code>, you don't have much option other than to do a cast check at runtime, and either throw an exception or return <code>null</code>.</p>
<p>The only thing you can do to prevent such a check is to store the actual event object with the delegate (<em>closing</em> over it in some way) and therefore the delegate itself knows how to handle the call. But it sounds like that isn't going to work for your use case.</p>
","2024-07-05 12:24:55","1","Answer"
"78711323","78710936","","<p>You need to change the dictionary to store <code>Func&lt;IBaseEvent, Task&gt;</code> instead of <code>HandleIntegrationEvent&lt;IBaseEvent&gt;</code>. Then, wrap the listener with a <code>Func&lt;IBaseEvent, Task&gt;</code> to cast the event to the appropriate type when adding to the dictionary.</p>
<p>Updated code:</p>
<pre class=""lang-cs prettyprint-override""><code>private readonly IDictionary&lt;string, Func&lt;IBaseEvent, Task&gt;&gt; _listeners = new Dictionary&lt;string, Func&lt;IBaseEvent, Task&gt;&gt;(); //add using System; if you get an Func&lt;&gt; error

public void RegisterEventListener&lt;TR&gt;(string @event, HandleIntegrationEvent&lt;TR&gt; listener) where TR : IBaseEvent
{
    _listeners.Add(@event, (e) =&gt; listener((TR)e));
}
</code></pre>
<p>EDIT:
Added a type check to ensure the event is of the appropriate type before invoking the listener.</p>
<pre class=""lang-cs prettyprint-override""><code>private readonly IDictionary&lt;string, Func&lt;IBaseEvent, Task&gt;&gt; _listeners = new Dictionary&lt;string, Func&lt;IBaseEvent, Task&gt;&gt;(); //add using System; if you get an Func&lt;&gt; error

public void RegisterEventListener&lt;TR&gt;(string @event, HandleIntegrationEvent&lt;TR&gt; listener) where TR : IBaseEvent
{
    _listeners.Add(@event, async (e) =&gt;
    {
        if (e is TR typedEvent)
        {
            await listener(typedEvent);
        }
    });
}
</code></pre>
","2024-07-05 11:52:43","-1","Answer"
"78710936","","Covariance for value in Dictionary","<p>I'm trying to add a more derived type as value to a dictionary&lt;..., base&gt; but i get the following error:
Cannot convert from <code>HandleIntegrationEvent&lt;TR&gt;</code> to <code>HandleIntegrationEvent&lt;IBaseEvent&gt;</code></p>
<p>Example</p>
<pre><code>using System.Threading.Tasks;
using System.Collections.Generic;

public interface IBaseEvent
{
    string Name { get; }
}

public class UserCreatedEvent: IBaseEvent
{
    public string Name { get; } = &quot;UserCreatedEvent&quot;;
}

public delegate Task HandleIntegrationEvent&lt;in TR&gt;(TR @event) where TR: IBaseEvent;

public class IntegrationBus
{
  private readonly IDictionary&lt;string, HandleIntegrationEvent&lt;IBaseEvent&gt;&gt; _listeners = new Dictionary&lt;string, HandleIntegrationEvent&lt;IBaseEvent&gt;&gt;();

  public void RegisterEventListener&lt;TR&gt;(string @event, HandleIntegrationEvent&lt;TR&gt; listener) where TR: IBaseEvent
  {
   // ERROR: cannot convert from HandleIntegrationEvent&lt;TR&gt; to HandleIntegrationEvent&lt;IBaseEvent&gt;
    _listeners.Add(@event, listener);
  } 
}
</code></pre>
<p>I just can't understand it and have been trying to understand the problem for some time now.
As I understand it, the generic constraint should ensure that an instance has implemented the IBaseEvent interface.</p>
<p>I just have a mental block in the meantime</p>
<p><strong>EDIT</strong>
Found another great post <a href=""https://stackoverflow.com/a/12841831"">https://stackoverflow.com/a/12841831</a> explaining the reason for dictionary covariance &amp; contravariance.
But I'm still a bit confused</p>
","2024-07-05 10:26:50","0","Question"
"78708602","78705285","","<p><strong><em>Figure out how to do a &quot;foreach loop result&quot; in my &quot;Examine the joined string&quot; play ...</em></strong></p>
<p>A minimal example playbook</p>
<pre class=""lang-yaml prettyprint-override""><code>---
- hosts: localhost
  become: false
  gather_facts: false

  vars:

    tf_ETCD:
      1:
        hostname: Etcd01
        ip: 192.0.2.1
      2:
        hostname: Etcd02
        ip: 192.0.2.2

  tasks:

  - debug:
      msg: &quot;{{ tf_ETCD[ansible_loop.index] }}&quot;
    loop: &quot;{{ range(0, tf_ETCD | length, 1) | list }}&quot;
    loop_control:
      extended: true

  - set_fact:
      etcd: &quot;{{ etcd | d('') + tf_ETCD[ansible_loop.index].hostname ~ '=https://' ~ tf_ETCD[ansible_loop.index].ip ~ ':2380,' }}&quot;
    loop: &quot;{{ range(0, tf_ETCD | length, 1) | list }}&quot;
    loop_control:
      extended: true

  - debug:
      msg: &quot;{{ etcd }}&quot;
</code></pre>
<p>will result into an output of</p>
<pre class=""lang-yaml prettyprint-override""><code>TASK [debug] ******************************************************
ok: [localhost] =&gt; (item=0) =&gt;
  msg:
    hostname: Etcd01
    ip: 192.0.2.1
ok: [localhost] =&gt; (item=1) =&gt;
  msg:
    hostname: Etcd02
    ip: 192.0.2.2

TASK [debug] ******************************************************
ok: [localhost] =&gt;
  msg: Etcd01=https://192.0.2.1:2380,Etcd02=https://192.0.2.2:2380,
</code></pre>
<p><strong>Some Hints</strong></p>
<ul>
<li><a href=""https://superuser.com/a/1370152/754490"">How to count the number of elements in an array in Ansible?</a></li>
<li><a href=""https://stackoverflow.com/a/71291296/6771046"">Ansible <code>loop</code> in <code>range</code></a></li>
<li><a href=""https://stackoverflow.com/a/35107741/6771046"">Use a default if a variable is not defined</a></li>
<li><a href=""https://stackoverflow.com/a/76860502/6771046"">Best practice to concatenate strings in Ansible variables: Using one Jinja2 expression or multiple?</a></li>
<li><a href=""https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html#extended-loop-variables"" rel=""nofollow noreferrer"">Extended <code>loop</code> variables</a></li>
</ul>
","2024-07-04 19:02:56","0","Answer"
"78706236","78702250","","<p>Like <a href=""https://stackoverflow.com/questions/78702250/why-does-converting-a-nested-python-dictionary-into-a-pandas-dataframe-result-in#comment138764805_78702250"">user2357112</a> has pointed out, the var.valueLabels looks like a dict, but it isn't one.</p>
<p>I had a quick look in the <a href=""https://www.ibm.com/docs/hu/spss-statistics/saas?topic=python-valuelabels-property"" rel=""nofollow noreferrer"">documentation</a> of this python spss package and it says:</p>
<blockquote>
<p>You can iterate through the set of value labels for a variable using
the data property, as in:</p>
<pre><code>varObj = datasetObj.varlist['origin']
for val, valLab in varObj.valueLabels.data.iteritems():
   print val, valLab
</code></pre>
</blockquote>
<p>So you could try rewriting your code:</p>
<pre><code>data_list = []
for outer_key, inner_dict in nested_dict_variable.items():
    for inner_key, value in inner_dict.data.iteritems():
        data_list.append({'Outer Key': outer_key, 'Inner Key': inner_key, 'Value': value})
</code></pre>
<p>I haven't tried it though. Good luck! ;)</p>
","2024-07-04 09:29:05","1","Answer"
"78705978","78705804","","<p>You can use <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_json.html"" rel=""nofollow noreferrer""><code>pd.read_json</code></a> and some index manipulations:</p>
<pre><code>import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

i = 16

df = (pd.read_json(f'{i}_results.json')[i].explode()
        .rename('value').rename_axis('metric').reset_index()
        .assign(epoch=lambda x: x.groupby('metric').cumcount()+1)
        .pivot(index='epoch', columns='metric', values='value'))

ax = sns.lineplot(df)
plt.show()
</code></pre>
<p>Dataframe:</p>
<pre><code>&gt;&gt;&gt; df
metric   fed_acc    fed_f1 fed_pre fed_recall
epoch                                        
1       0.998104       0.0     0.0        0.0
2       0.998104       0.0     0.0        0.0
3       0.998104       0.0     0.0        0.0
4       0.998139  0.036364     1.0   0.018519
5       0.998139  0.036364     1.0   0.018519
6        0.99835  0.229508     1.0    0.12963
</code></pre>
<p>Output:</p>
<p><a href=""https://i.sstatic.net/CuLKblrk.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/CuLKblrk.png"" alt=""enter image description here"" /></a></p>
","2024-07-04 08:41:52","0","Answer"
"78705885","78705804","","<p>To create multiple line plots using the Seaborn and Matplotlib libraries to visualize data for fed_acc, fed_pre, fed_recall, and fed_f1 across 6 values (x), you can modify and extend your code as follows:</p>
<pre><code>import json
import seaborn as sns
import matplotlib.pyplot as plt

# To read the json file
i = 16

with open(f&quot;{i}_results.json&quot;, &quot;r&quot;) as a_file:
    a_dictionary = json.load(a_file)

# Extract data
mp = a_dictionary[str(i)]

# Define the x values
x = list(range(1, 7))

# Create a line plot for each value (fed_acc, fed_pre, fed_recall, fed_f1)
plt.figure(figsize=(10, 6))
sns.lineplot(x=x, y=mp['fed_acc'], marker='o', color='navy', label='Accuracy')
sns.lineplot(x=x, y=mp['fed_pre'], marker='o', color='green', label='Precision')
sns.lineplot(x=x, y=mp['fed_recall'], marker='o', color='red', label='Recall')
sns.lineplot(x=x, y=mp['fed_f1'], marker='o', color='purple', label='F1 Score')

# Add titles and labels
plt.title('Model Metrics Across 6 Values')
plt.xlabel('X Values')
plt.ylabel('Metrics')
plt.legend()

# Show plot
plt.show()
</code></pre>
","2024-07-04 08:24:14","2","Answer"
"78705804","","Seaborn Code for Plotting Multiple Line Plots","<p>I used read the json file (16_results.json) to read data, I want to creates multiple line plots using the Seaborn and Matplotlib libraries to visualize data for four different values (fed_acc, fed_pre, fed_recall and fed_f1) across 6 values (x).</p>
<p>my code:</p>
<pre><code>import os
import random
from tqdm import tqdm
import pandas as pd
import numpy as np
import torch.nn as nn 
import json
import seaborn as sns
import matplotlib.pyplot as plt

i = 16
# To read the json file
a_file = open(str(i)+&quot;_results.json&quot;, &quot;r&quot;)
a_dictionary = json.load(a_file)

mp = a_dictionary

print((a_dictionary.keys()))


x = [print(i) for i in range(1,7)]

sns.lineplot(x=x, y=mp['16']['fed_acc'],  marker='o',color='navy', label='acc')
</code></pre>
<p>json file (16_results.json)</p>
<pre><code>{&quot;16&quot;: {&quot;fed_acc&quot;: [0.9981039991573329, 0.9981039991573329, 0.9981039991573329, 0.998139110284049, 0.998139110284049, 0.9983497770443454],
 &quot;fed_pre&quot;: [0.0, 0.0, 0.0, 1.0, 1.0, 1.0],
 &quot;fed_recall&quot;: [0.0, 0.0, 0.0, 0.018518518518518517, 0.018518518518518517, 0.12962962962962962],
 &quot;fed_f1&quot;: [0.0, 0.0, 0.0, 0.03636363636363636, 0.03636363636363636, 0.22950819672131148]}}
</code></pre>
<p>but it doesn't work! it return empty figure!</p>
","2024-07-04 08:07:51","0","Question"
"78705285","","How to get a formatted line from a dictionary var?","<p>I'm pretty new to Ansible and I'm not sure how to get it right.</p>
<p>To start with, I have implemented this dictionary var for an exemple. There is 2 values but it could be a greater number:</p>
<pre class=""lang-yaml prettyprint-override""><code>tf_ETCD:
  1:
    hostname: Etcd01
    ip: 192.168.1.141
  2:
    hostname: Etcd02
    ip: 192.168.1.142
</code></pre>
<p>I'd like the result to be formatted like that:</p>
<pre class=""lang-yaml prettyprint-override""><code>{{ tf_ETCD1_Host }}=https://{{ tf_ETCD1_IP }}:2380,{{ tf_ETCD2_Host }}=https://{{ tf_ETCD2_IP }}:2380
</code></pre>
<p>So I kinda get it by looping over the list via this code:</p>
<pre class=""lang-yaml prettyprint-override""><code>    - name: Format each value
      set_fact:
        etcd: &quot;{{ item.value.hostname }}=https://{{ item.value.ip }}:2380,&quot;
      loop: &quot;{{ lookup('ansible.builtin.dict', tf_ETCD) }}&quot;
      register: etcd_query

    - name: Examine the joined string
      debug:
        msg: &quot;{{ etcd_query['results'][0]['ansible_facts']['etcd'] }}{{ etcd_query['results'][1]['ansible_facts']['etcd'] }}&quot;
</code></pre>
<p>The result gave me:</p>
<pre class=""lang-yaml prettyprint-override""><code>TASK [Format each values] **********************************************************************************************
ok: [] =&gt; (item={'key': 1, 'value': {'hostname': 'Etcd01', 'ip': '192.168.1.141'}})
ok: [] =&gt; (item={'key': 2, 'value': {'hostname': 'Etcd02', 'ip': '192.168.1.142'}})

TASK [Examine the joined string] ***************************************************************************************
ok: [] =&gt; {
    &quot;msg&quot;: &quot;Etcd01=https://192.168.1.141:2380,Etcd02=https://192.168.1.142:2380,&quot;
}
</code></pre>
<p>I cannot figure out how to do a &quot;foreach loop result&quot; in my &quot;Examine the joined string&quot; play.</p>
<p>If you can give me a hint or the concept I'm looking for, you'll save my day.</p>
","2024-07-04 06:08:14","1","Question"
"78703204","78703203","","<p>In this case, we need a data structure that will allow us to loop over the different cells and retrieve the corresponding text for each cell.</p>
<p>A good choice for this is a Scripting <a href=""https://learn.microsoft.com/en-us/office/vba/language/reference/user-interface-help/dictionary-object"" rel=""nofollow noreferrer"">Dictionary</a> since it will allow us to store the address of the cell as the <code>key</code> and the text as the <code>value</code> (aka. item).</p>
<p>Note that :</p>
<blockquote>
<p>To use the Dictionary (with early binding) you need to first add the reference:</p>
<p>Go to Tools-&gt;References from the Visual Basic menu. Find &quot;Microsoft
Scripting Runtime&quot; in the list and place a check in the box beside it.</p>
</blockquote>
<p>Read more on how to use Dictionaries <a href=""https://excelmacromastery.com/vba-dictionary/"" rel=""nofollow noreferrer"">here</a>.</p>
<p>Once we have our dictionary, we will be able to wrap the code that need to run for multiple cells around a <code>For Each</code> loop. That will allow to re-use the code with each <code>key</code> (cell address) replacing the <code>TARGET_CELL_ADDRESS</code> constant and the corresponding <code>item</code> to replacing the <code>PLACEHOLDER_TEXT</code> constant.</p>
<pre class=""lang-vb prettyprint-override""><code>
Option Explicit

Const GREY_COLOR = 10921637
Const BLACK_COLOR = 0

'Let's define the dictionary at the worksheet module level, so we can store its values in between each run of Worksheet_SelectionChange
Private CellsDict As Dictionary

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    'Create the dictionary to store the information (if it doesn't already exists)
    If CellsDict Is Nothing Then
        Set CellsDict = New Dictionary
        CellsDict.Add &quot;C9&quot;, &quot;Text for C9&quot;
        CellsDict.Add &quot;C21&quot;, &quot;Text for C21&quot;
        CellsDict.Add &quot;C58&quot;, &quot;Text for C58&quot;
        CellsDict.Add &quot;C96&quot;, &quot;Text for C96&quot;
    End If

    'Now let's loop over each key inside the dict to perform the same changes/checks on each cells listed inside of it.
    Dim Key As Variant
    For Each Key In CellsDict.Keys

        ''''''''''''''''''''''''''
        'Here goes the code that needs to run for each cell address in the dictionary
        ''''''''''''''''''''''''''

        If Replace(Target.AddressLocal, &quot;$&quot;, &quot;&quot;) = Key Then
            'Clear text content
            With Target
                If .Value2 = CellsDict.Item(Key) Then
                    .Value2 = &quot;&quot;
                    .Font.Color = BLACK_COLOR
                End If
            End With
        Else
            'Restore placeholder text if needed
            Dim Rng As Range
            Set Rng = Me.Range(Key)
            With Rng
                If .Value2 = vbNullString Then
                    .Value2 = CellsDict.Item(Key)
                    .Font.Color = GREY_COLOR
                ElseIf .Value2 = CellsDict.Item(Key) Then
                    If .Font.Color &lt;&gt; GREY_COLOR Then
                        .Font.Color = GREY_COLOR
                    End If
                End If
            End With
        End If

        ''''''''''''''''''''''''''

    Next

End Sub

</code></pre>
<p>Note: This code should work well even for a dozen of cells, but would need to be optimized in case the list of cells is a few orders of magnitude bigger.</p>
","2024-07-03 16:16:49","1","Answer"
"78703203","","How to perform a similar action on multiple cells with a varying parameter","<p>I was asked, after providing <a href=""https://stackoverflow.com/a/78698598/5958842"">this answer</a>, how to make the following code work in the case where you have multiple cells (ie. TARGET_CELL_ADDRESS should take multiple values) and each cell has their own parameter (PLACEHOLDER_TEXT in this case).</p>
<pre class=""lang-vb prettyprint-override""><code>
Option Explicit

Const TARGET_CELL_ADDRESS As String = &quot;C2&quot;
Const PLACEHOLDER_TEXT As String = &quot;My placeholder text&quot;

Const GREY_COLOR = 10921637
Const BLACK_COLOR = 0

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If Replace(Target.AddressLocal, &quot;$&quot;, &quot;&quot;) = TARGET_CELL_ADDRESS Then
        'Clear text content
        With Target
            If .Value2 = PLACEHOLDER_TEXT Then
                .Value2 = &quot;&quot;
                .Font.Color = BLACK_COLOR
            End If
        End With
    Else
        'Restore placeholder text if needed
        Dim Rng As Range
        Set Rng = Me.Range(TARGET_CELL_ADDRESS)
        With Rng
            If .Value2 = vbNullString Then
                .Value2 = PLACEHOLDER_TEXT
                .Font.Color = GREY_COLOR
            ElseIf .Value2 = PLACEHOLDER_TEXT Then
                If .Font.Color &lt;&gt; GREY_COLOR Then
                    .Font.Color = GREY_COLOR
                End If
            End If
        End With
    End If
        
End Sub


</code></pre>
<p>I thought it would be better to answer in a seperate question and try to make the title of the question more general. Hopefully, it will make it easier to find the answer to this kind of question.</p>
","2024-07-03 16:16:49","1","Question"
"78702972","78702909","","<p>Since your dictionary keys end with <code>.</code>, you need to add that to the user's input so it will match. <code>choices.get(f'{my_choice}.'))</code></p>
<pre><code>print(f&quot;You have chosen {choices.get(str(my_choice) + '.')}.&quot;)
</code></pre>
<p>Alternately you could just use integers as the keys.</p>
<pre><code>choices = {
    1: 'One',
    2: 'Two',
    3: 'Three',
}
</code></pre>
<p>and then</p>
<pre><code>print(f&quot;You have chosen {choices.get(my_choice)}.&quot;)
</code></pre>
","2024-07-03 15:24:46","0","Answer"
"78702909","","Is there a way to place a dictionary value into a variable defined by the users' input()?","<p>Can someone please help me with the following solution? I’m relatively new to programming and I don’t seem to get what I’m doing wrong.</p>
<p>I have found too many dictionary functions and I am really struggling with this. My code give me Key-Error upon Key-Error and when I finally manage to run the program it returns “None” or 0.</p>
<p>Here is an example of the code.</p>
<pre><code># Dictionary called choices.
choices = {
    '1.': 'One',
    '2.': 'Two',
    '3.': 'Three',
}

# Display the choices to the user.
for k, v in choices.items():
    print(f'{k} {v}')

# Ask the user to make a choice from the dictionary options.
my_choice = int(input('Choose a number 1, 2 or 3: '))

# Make the choice the same as the index[number] of the dictionary
my_choice -= 1


# From here I get stuck
print(f'You have chosen {choices.get(str(my_choice))}.')     # This returns a 0 or None


# The desired output is

You have chosen Two.
</code></pre>
<p>I have tried the following options to assign dictionary items to the my_choice variable:</p>
<pre><code>for loops 
dict.values()
dict .get()
dict.items()
new_choice = str(my_choice)

# The desired output is

You have chosen Two.
</code></pre>
","2024-07-03 15:13:20","0","Question"
"78702250","","Why does converting a nested python dictionary into a pandas dataframe result in ""has no attribute 'items' error?","<p>I have a nested dictionary stored in the variable <code>nested_dict_variable</code>.
The dictionary is retrieved by using <a href=""https://www.ibm.com/docs/en/spss-statistics/28.0.0?topic=python-valuelabels-property"" rel=""nofollow noreferrer"">SPSS valueLabels Property (Python)</a></p>
<p><code>type(nested_dict_variable)</code> results in <code>dict</code>.</p>
<p><code>print(nested_dict_variable)</code> results in <code>{0: {1.0: '1 - low', 2.0: '2', 3.0: '3', 4.0: '4', 5.0: '5 - high', 99.0: &quot;99 - don't know&quot;}, 1: {0.0: '0 - no', 1.0: '1 - yes'}, 2: {1.0: '1 - A', 2.0: '2 - B', 3.0: '3 - C'}}</code></p>
<p>I am trying to convert this nested dictionary into a pandas DataFrame, but receive the following error. I don't understand why this attribute error is raised given that <code>nested_dict_variable</code> is (or seems to be) a dictionary!?</p>
<pre><code>AttributeError                            Traceback (most recent call last)
File c:\mypythonfile.py:38
     36 data_list = []
     37 for outer_key, inner_dict in nested_dict_variable.items():
---&gt; 38     for inner_key, value in inner_dict.items():
     39         data_list.append({'Outer Key': outer_key, 'Inner Key': inner_key, 'Value': value})
     41 df = pd.DataFrame(data_list)

AttributeError: 'ValueLabel' object has no attribute 'items'
</code></pre>
<p>Here is my code:</p>
<pre class=""lang-py prettyprint-override""><code># see: https://www.ibm.com/docs/en/spss-statistics/28.0.0?topic=programs-running-spss-statistics-from-external-python-process#d10392e74
import spss
# import pandas
import pandas as pd

# read spss-data
file = r&quot;C:\SPSS-SampleData1.sav&quot;
spss.Submit(
    f&quot;&quot;&quot;
GET FILE='{file}'.
&quot;&quot;&quot;
)

var_index = []
nested_dict_variable= {}

# initialise the handling of spss commands
spss.StartDataStep()

# access active dataset (the one that was read above)
datasetObj = spss.Dataset()

# get a list of variable objects
varListObj = datasetObj.varlist
for var in varListObj:
    var_index.append(var.index)
    nested_dict_variable[var.index] = var.valueLabels


spss.EndDataStep()


##### CREATE DATAFRAMES #####

# convert nested dictionary to Pandas DataFrame
data_list = []
for outer_key, inner_dict in nested_dict_variable.items():
    for inner_key, value in inner_dict.items():
        data_list.append({'Outer Key': outer_key, 'Inner Key': inner_key, 'Value': value})

df = pd.DataFrame(data_list)



# end spss process
spss.StopSPSS()
</code></pre>
","2024-07-03 12:57:27","0","Question"
"78694574","78694567","","<p>You're creating a separate dictionary for each word in line, not putting them in the same tuple.</p>
<p>You can use the <code>dict.fromkeys()</code> function to create a dictionary whose keys come from a list and all have the same values.</p>
<pre><code>def featureExtraction(clean_tokenized, label):
    return [(dict.fromkeys(tokens, True), label) for tokens in clean_tokenized]
</code></pre>
","2024-07-01 23:42:17","1","Answer"
"78694567","","Function that returns tuples composed of a Python dictionary","<p>I'm trying to create a function that takes a list of tokenized words for a review, and a label and returns a list of tuples composed of a Python dictionary and the label associated.</p>
<p>You can see what I mean more clearly by what the output is supposed to look like below.</p>
<p>Here's the code that I have:</p>
<pre><code>def featureExtraction(clean_tokenized, label):
    features = []
    for line in clean_tokenized:
        for word in line:
            d = dict({word: True})
            d1 = (d, label)
            tup.append(d1)
            
    return features
</code></pre>
<p>Example Input:</p>
<pre><code>[['hate', 'movie'], 
['acting', 'terrible']]
</code></pre>
<p>Expected output:</p>
<pre><code>[
  ({'hate': True, 'movie': True}, 'neg')
  ({'acting': True, 'terrible': True}, 'neg')      
]
</code></pre>
<p>This is what my code is producing:</p>
<pre><code>[({'hate': True}, 'pos'), ({'movie': True}, 'pos'), ({'acting': True}, 'pos'), ({'terrible': True}, 'pos')]
</code></pre>
<p>I would love some assistance with this.</p>
","2024-07-01 23:37:05","1","Question"
"78694387","78689947","","<p>I'm assuming you're getting this as a response from the inference call on Roboflow and you want to use a more JSON-esque approach to things, I used (assuming you set your response to 'model_response'):</p>
<pre><code>json_data_string = model_response.model_dump_json()
results = json.loads(json_data_string)
</code></pre>
<p>Some real good documentation for how it's set up is <a href=""https://inference.roboflow.com/docs/reference/inference/core/entities/responses/inference/#inference.core.entities.responses.inference.FaceDetectionPrediction"" rel=""nofollow noreferrer"">here</a>.</p>
","2024-07-01 22:13:14","2","Answer"
"78693924","78693574","","<p>with <code>groupby</code></p>
<pre><code>from itertools import groupby

sort_func = lambda x: x[2]
master_list = sorted(master_list, key=sort_func)
res = {key: list(group) for (key, group) in groupby(master_list, key=sort_func)}
print(res)
</code></pre>
","2024-07-01 19:14:47","3","Answer"
"78693588","78693574","","<p>You can use the builtin <code>split</code> function to split the input items on <code>_</code> character.</p>
<pre class=""lang-py prettyprint-override""><code>sortd_dict = {}
def add_in_dict(k, v):
    if k not in d:
        sortd_dict[k] = [v]
    else:
        sortd_dict[k].append(v)

for item in master_list:
    add_in_dict(item.split(&quot;_&quot;)[-1], item)
</code></pre>
","2024-07-01 17:53:28","4","Answer"
"78693584","78693574","","<p>Split-off the index &amp; use it to append to the right list:</p>
<pre><code>sortd_dict[item.split('_')[1]].append(item)
</code></pre>
","2024-07-01 17:50:19","2","Answer"
"78693574","","Creating a dictionary from a subset of a list","<p>Suppose I have python list like this:</p>
<pre><code>master_list = ['a_1', 'b_4', 'd_2', 'c_3', 
              'a_2', 'c_1', 'd_4', 'b_3', 
              'd_3', 'c_2', 'a_4', 'b_1', 
              'c_4', 'a_3', 'b_1', 'd_1']
</code></pre>
<p>Each item in the list is a letter, underscore, and number. I want a dictionary to group this items by number in a list like this:</p>
<pre><code> my_dict = {'1': [], '2': [], '3': [], '4':[]}
</code></pre>
<p>While I could use the following to populated my lists inside <code>my_dict</code>, it seems awkward. Is there a more efficient way to achieve this?</p>
<pre><code>for item in master_list:
    if '_1' in item:
        my_dict['1'].append(item)
    elif '_2' in item:
        my_dict['2'].append(item)
    elif '_3' in item:
        my_dict['3'].append(item)
    elif '_4' in item:
        my_dict['4'].append(item)
</code></pre>
","2024-07-01 17:44:50","0","Question"
"78693323","78693106","","<p>Considering that could occur that in mappings more than one name could have the same alias a safe function should raise an error, like</p>
<pre><code>mappings = {
    Name.PAUL: Alias.STARCHILD,
    Name.GENE: Alias.DEMON,
    Name.PETER: Alias.CATMAN,
    Name.ALICE: Alias.DEMON
}

def alias_to_name(alias):
#check if the alias is more than once in the mappings and raise an error
    if list(mappings.values()).count(alias) &gt; 1:
        raise ValueError('Alias is not unique', alias, [name for name, a in mappings.items() if a == alias])
    else:
        return [name for name, a in mappings.items() if a == alias]
</code></pre>
<p>That will output</p>
<p><code>('Alias is not unique', &lt;Alias.DEMON: 2&gt;, [&lt;Name.GENE: 2&gt;, &lt;Name.ALICE: 4&gt;])</code></p>
","2024-07-01 16:25:28","1","Answer"
"78693106","","Converting between two sets of constants","<p>I have two enums <code>NAME</code> and <code>ALIAS</code> which are guaranteed to have the same number of constants, and I need a way to convert each constant from <code>NAME</code> to its corresponding one from <code>ALIAS</code>, and vice-versa. For example:</p>
<pre><code>def name_to_alias(name):
    if name == Name.PAUL:
        return Alias.STARCHILD
    elif name == Name.GENE:
        return Alias.DEMON
    ...

def alias_to_name(alias):
    if alias == Alias.STARCHILD:
        return Name.PAUL
    elif alias == Alias.DEMON:
        return Name.GENE
    ...
</code></pre>
<p>I don't wish to maintain two functions (or dicts) like these. Ideally, I'd have the enum mappings in a single data structure which I can access from both conversion functions.</p>
<p>I'm thinking of something like:</p>
<pre><code>mappings = {
    Name.PAUL: Alias.STARCHILD
    Name.GENE: Alias.DEMON
    ...
}
</code></pre>
<p>This would work for converting from <code>Name</code> to <code>Alias</code>, but the opposite may have issues (what happens if I make a copy-paste error and end up with two dict keys with the same value?). Is there an easy and safe way to achieve this?</p>
","2024-07-01 15:38:27","1","Question"
"78691740","78691438","","<pre><code>#declare variables group1, group2, group3 and their values as key, value pair of a dict 
dct =   {'group1' : {'1': [0, 0], '2': [2, 2], '3': [3, 3], '4': [4, 4], '5': [5, 5]},
         'group2' : {'1': [2, 2], '2': [0, 0], '3': [4, 4], '4': [5, 5], '5': [6, 6]},
         'group3' : {'1': [3, 3], '2': [4, 4], '3': [0, 0], '4': [6, 6], '5': [7, 7]}}

example = ['2', '5', '3', '3', '1', '2']

for x in dct.keys():

    # As the first element of example should be the order(index + 1) of dct
    if example[0] in x:

        # declare the reference dict if the condition fulfilled  
        ref_dct = dct[x]
        break

# values of ref_dct if keys being elements of example. Create as list
ls = [ref_dct[x] for x in example]

print(ls) # Output : [[0, 0], [6, 6], [4, 4], [4, 4], [2, 2], [0, 0]]
</code></pre>
","2024-07-01 10:40:31","0","Answer"
"78691723","78691438","","<p>this should do</p>
<pre><code>result = [group_selection[int(example[0])-1][x] for x in example]
</code></pre>
","2024-07-01 10:38:02","1","Answer"
"78691692","78691438","","<p>I am unsure if I have understand the requirements.</p>
<p>I think this should do the trick:</p>
<pre><code>result = [groups_assigned[int(example[0], 10)][k] for k in example]
</code></pre>
<p>So instead of hard coding the index to <code>1</code> you can read the wanted index from the first element of the iterable (string or list in your case) and convert it to int. This way you have the a zero based index access.</p>
<p>If you change it to</p>
<pre><code>result = [groups_assigned[int(example[0], 10) - 1][k] for k in example]
</code></pre>
<p>You should have what you want. For a list starting with ['1', ...] you have the dict with index 0 for ['2', ...] you have the index 1 and so on.</p>
<p>Of course this way fails if you have only a list with three dicts and you have example lists like ['5', ...], or ['-1', ...]</p>
<p>But this could be easly done</p>
<pre><code>group1 = {&quot;1&quot;: [0, 0], &quot;2&quot;: [2, 2], &quot;3&quot;: [3, 3], &quot;4&quot;: [4, 4], &quot;5&quot;: [5, 5]}
group2 = {&quot;1&quot;: [2, 2], &quot;2&quot;: [0, 0], &quot;3&quot;: [4, 4], &quot;4&quot;: [5, 5], &quot;5&quot;: [6, 6]}
group3 = {&quot;1&quot;: [3, 3], &quot;2&quot;: [4, 4], &quot;3&quot;: [0, 0], &quot;4&quot;: [6, 6], &quot;5&quot;: [7, 7]}

group_selection = [group1, group2, group3]

def assigned_groups(example: list[str]) -&gt; list[list[int]]:
    global group_selection

    # -1 to convert 1 based index to 0 based index
    index = int(example[0], 10) - 1
    if not (0 &lt;= index &lt; len(group_selection)):
        raise ValueError(&quot;first element of example is invalid&quot;)

    return [group_selection[index][k] for k in example]
</code></pre>
","2024-07-01 10:31:19","1","Answer"
"78691438","","Trying to get dict[k] from a dict in a list of dicts for k in list or string","<p>I have a couple dictionaries with differing values for the same keys.
I have a list of these dicts and I want to return the values from only 1 of the dicts based on the matched keys inside a different list or string.
I want it to reflect the dict with a matching list index as the first str in the other list.</p>
<pre><code>group1 = {'1': [0, 0], '2': [2, 2], '3': [3, 3], '4': [4, 4], '5': [5, 5]}
group2 = {'1': [2, 2], '2': [0, 0], '3': [4, 4], '4': [5, 5], '5': [6, 6]}
group3 = {'1': [3, 3], '2': [4, 4], '3': [0, 0], '4': [6, 6], '5': [7, 7]}

group_selection = [group1, group2, group3]

example = ['2', '5', '3', '3', '1', '2']

groups_assigned = [group_selection[k] for k in example]
print(groups_assigned)
# Desired goal is [[0, 0], [6, 6], [4, 4], [4, 4], [2, 2], [0, 0]]   
</code></pre>
<p>So far the only way that has worked is</p>
<pre><code>result = [groups_assigned[1][k] for k in example]
</code></pre>
<p>I want to be select through the list of dicts to get the correct dict.
For the first value in list being '2' it should return the group2 dict values for all remaining string values in list from rest of keys in that dict.
'1' would relate to group1, '2' would relate to group2 for as reference</p>
<p>['1', '2', '4', '5'] = [[0, 0], [2, 2], [4, 4], [5, 5]]
and
['3', '1'] = [[0,0], [3, 3]]</p>
","2024-07-01 09:37:29","-1","Question"
"78691071","78682192","","<p>I finaly found how to do it</p>
<p>the current row item is passed with <strong>Binding .</strong></p>
<pre><code>&lt;!-- RefactorOperations is Dictionary&lt;string, List&lt;RefactorOperation&gt;&gt; --&gt;
&lt;DataGrid x:Name=&quot;modificationsDataGrid&quot; ItemsSource=&quot;{Binding RefactorOperations}&quot;&gt;
  &lt;DataGrid.Columns&gt;

      &lt;DataGridTemplateColumn Width=&quot;auto&quot;&gt;
          &lt;DataGridTemplateColumn.CellTemplate&gt;
              &lt;DataTemplate&gt;
                  &lt;!-- current row DataContext is List&lt;RefactorOperation&gt; --&gt;
                  &lt;custom:RefactorListItemControl KeyValue=&quot;{Binding .}&quot;&gt;&lt;/custom:RefactorListItemControl&gt;
              &lt;/DataTemplate&gt;
          &lt;/DataGridTemplateColumn.CellTemplate&gt;
      &lt;/DataGridTemplateColumn&gt;

  &lt;/DataGrid.Columns&gt;
</code></pre>
  
","2024-07-01 08:07:37","0","Answer"
"78689947","","How to restructure instance segmentation predictions into a custom dictionary format in Python?","<p>I'm performing instance segmentation using a model trained in RoboFlow, for the prediction result I'm getting:</p>
<pre><code>[InstanceSegmentationInferenceResponse(visualization=None, frame_id=None, time=None, image=InferenceResponseImage(width=720, height=1280), predictions=[
InstanceSegmentationPrediction(x=352.0, y=569.0, width=420.0, height=1066.0, confidence=0.9057266712188721, class_name='animal', class_confidence=None, points=[Point(x=244.125, y=36.0), Point(x=243.0, y=38.0), Point(x=241.875, y=38.0), Point(x=237.375, y=46.0), Point(x=236.25, y=46.0), Point(x=232.875, y=52.0), Point(x=232.875, y=54.0), Point(x=193.5, y=128.0),  Point(x=354.375, y=42.0), Point(x=353.25, y=40.0), Point(x=351.0, y=40.0), Point(x=349.875, y=38.0), Point(x=347.625, y=38.0), Point(x=346.5, y=36.0)], class_id=0, detection_id='d5c78348-38e1-4281-aa68-9edcbf2cad9e', parent_id=None),
InstanceSegmentationPrediction(x=367.5, y=536.0, width=43.0, height=38.0, confidence=0.8523976802825928, class_name='moeda', class_confidence=None, points=[Point(x=354.375, y=518.0), Point(x=353.25, y=520.0), Point(x=351.0, y=520.0), Point(x=352.125, y=550.0), Point(x=357.75, y=550.0), Point(x=360.0, y=554.0), Point(x=374.625, y=554.0), Point(x=375.75, y=552.0), Point(x=376.875, y=552.0),Point(x=381.375, y=518.0)], class_id=1, detection_id='c93327f3-afce-4038-932b-1fc623fcc949', parent_id=None)])]
</code></pre>
<p>However, I need to reorganize my data so that it looks like this:</p>
<pre><code>{'predictions': [{'x': 352.0, 'y': 565.0, 'width': 420.0, 'height': 1060.0, 'confidence': 0.9052466154098511, 'class': 'animal', 'points': [{'x': 244.125, 'y': 36.0}, {'x': 243.0, 'y': 38.0}, {'x': 241.875, 'y': 38.0}, {'x': 239.625, 'y': 42.0}, {'x': 238.5, 'y': 42.0}, {'x': 232.875, 'y': 52.0}, {'x': 232.875, 'y': 54.0}, {'x': 229.5, 'y': 60.0}, {'x': 229.5, 'y': 62.0}, {'x': 209.25, }, {'x': 354.375, 'y': 42.0}, {'x': 353.25, 'y': 40.0}, {'x': 351.0, 'y': 40.0}, {'x': 349.875, 'y': 38.0}, {'x': 348.75, 'y': 38.0}, {'x': 347.625, 'y': 36.0}], 
'class_id': 0, 'detection_id': '71c453d6-3654-4a53-a56c-4db6a012cfe8', 
'image_path': '/content/17.jpeg', 'prediction_type': 'InstanceSegmentationModel'}, {'x': 368.0, 'y': 536.0, 'width': 44.0, 'height': 38.0, 'confidence': 0.8534654378890991, 'class': 'moeda', 'points': [{'x': 354.375, 'y': 518.0}, {'x': 353.25, 'y': 520.0}, {'x': 351.0, 'y': 520.0}, {'x': 348.75, 'y': 524.0}, {'x': 347.625, 'y': 524.0}, {'x': 346.5, 'y': 526.0}, {'x': 346.5, 'y': 542.0}, {'x': 348.75, 'y': 542.0}, {'x': 351.0, 'y': 546.0}, {'x': 351.0,  {'x': 387.0, 'y': 530.0}, {'x': 385.875, 'y': 528.0}, {'x': 385.875, 'y': 526.0}, {'x': 384.75, 'y': 524.0}, {'x': 384.75, 'y': 522.0}, {'x': 383.625, 'y': 522.0}, {'x': 381.375, 'y': 518.0}], 'class_id': 1, 'detection_id': 'a37bfa9e-c169-4d4b-b46e-213ad9508d9b', 'image_path': '/content/17.jpeg', 'prediction_type': 'InstanceSegmentationModel'}], 'image': {'width': '720', 'height': '1280'}}
</code></pre>
<p>With this, I can access the points by doing:</p>
<pre><code>    if result['predictions']: 
      points_1 = result['predictions'][1]['points']
      points_o = result['predictions'][0]['points']
</code></pre>
<p>I need to access the points of the first data, I tried to change <code>InstanceSegmentationInferenceResponse</code> to the specific <code>dictionary</code> but I couldn't do it.</p>
","2024-06-30 22:28:46","4","Question"
"78689559","78689540","","<p>You can use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.map.html"" rel=""nofollow noreferrer""><code>map</code></a>:</p>
<pre><code>df[&quot;weight_A&quot;] = df[&quot;A&quot;].map(dict_A) * df[&quot;C&quot;].map(dict_C)
df[&quot;weight_B&quot;] = df[&quot;B&quot;].map(dict_B) * (1 - df[&quot;C&quot;].map(dict_C))
</code></pre>
","2024-06-30 19:10:54","1","Answer"
"78689540","","Creating a column based on column values and dictionaries using vectorization in pandas","<p>I have three columns in a pandas dataframe A, B, and C. I also have 3 dictionaries, dict_A, dict_B, dict_C that have all values of A, B, and C as keys in each respective dataframe. I am trying to create 2 new columns in the dataframe that use the data in these dictionaries as part of a calculation. This is what I tried</p>
<pre><code>df['weight_A'] = (dict_A[df['A']] * dict_C[df['C']])
df['weight_B'] = (dict_B[df['B']] * (1 - dict_C[df['C']]))
</code></pre>
<p>I can't do this because I cannot use the series as a key to the dataframe. I know I can iterate over the rows, but want to do it vectorized.</p>
","2024-06-30 19:04:26","1","Question"
"78689381","78688932","","<p><strong>WARNING: I strongly recommend you not to do it</strong></p>
<p>If you must you can use:</p>
<pre><code>public class MapReplacer {
    public Map&lt;String, Object&gt; replace(Map&lt;String, Object&gt; input) {
        return input.entrySet().stream()
                .collect(Collectors.toMap(
                        Map.Entry::getKey,
                        (e) -&gt; process(e.getKey(), e.getValue())
                ));
    }

    private Object process(String key, Object value) {
        return switch (value) {
            case String s -&gt; processValue(key, s);
            case Map m -&gt; replace(m);
            default -&gt; throw new RuntimeException();
        };
    }

    private String processValue(String key, String s) {
        if (key.equals(&quot;key to replace&quot;)) {
            // Put your replacement logic here
            return &quot;new value&quot;;
        } else {
            return s;
        }
    }
}
</code></pre>
<p>I suggest you to review your approach of data storage. <code>Map</code> of <code>Object</code> is unsafe. Suggest you to use custom classes for your data structures.</p>
","2024-06-30 17:55:37","0","Answer"
"78688932","","change value in inner map with stream","<p>I have this kind of map  Map&lt;String, Object&gt;  , As you can see there is a inner map &quot;token&quot; and inside this map, there is inner map &quot;tokeninfo&quot;:</p>
<pre><code>{
  &quot;id&quot;: &quot;44f79d20f28a2ea505b1&quot;,
  &quot;type&quot;: &quot;ONE&quot;,
  &quot;cardIssued&quot;: &quot;AA&quot;,
  &quot;token&quot;: {
    &quot;token1&quot;: &quot;dummy&quot;,
    &quot;tokenInfo&quot;: {
      &quot;aaa&quot;: &quot;007&quot;
    },
    &quot;payment&quot;: {
      &quot;name&quot;: &quot;test&quot;,
      &quot;paymentType&quot;: {
        &quot;card&quot;: &quot;ONE&quot;
      },
      &quot;paymentAcc&quot;: &quot;123&quot;
    },
  &quot;isDelegated&quot;: false,
  &quot;attemptId&quot;: &quot;981631&quot;
}
</code></pre>
<p>In addition, I have this method :</p>
<pre><code>private static HashMap&lt;String, Object&gt; getReplace(Map&lt;String, Object&gt; message) {
    HashMap&lt;String, Object&gt; message = new HashMap&lt;&gt;(message);

    for (String mapKey : PARAMETERS_FOR_REPLACE) {
        message.computeIfPresent(mapKey,
                (key, value) -&gt; REGEX_ANY_CHAR.matcher(String.valueOf(value)).replaceAll(&quot;$^%%$&quot;));
    }
    return message;
} 
</code></pre>
<p>I need to replace the value of some keys, from the map and inner map. like :
cardIssued ( from the map)
token1 ( from the inner map of the token)
aaa from the inner map of token -&gt; tokeninfo
the value can be in any inner map, not just on the token and tokeninfo</p>
<p>Is there a way to stream all the values to check if it is a map and then call the method and replace it?</p>
<p>final result should be :</p>
<pre><code>    {
  &quot;id&quot;: &quot;44f79d20f28a2ea505b1&quot;,
  &quot;type&quot;: &quot;ONE&quot;,
  &quot;cardIssued&quot;: &quot;$^%%$&quot;,
  &quot;token&quot;: {
    &quot;token1&quot;: &quot;$^%%$&quot;,
    &quot;tokenInfo&quot;: {
      &quot;aaa&quot;: &quot;$^%%$&quot;
    },
    &quot;payment&quot;: {
      &quot;name&quot;: &quot;test&quot;,
      &quot;paymentType&quot;: {
        &quot;card&quot;: &quot;ONE&quot;
      },
      &quot;paymentAcc&quot;: &quot;123&quot;
    },
  &quot;isDelegated&quot;: false,
  &quot;attemptId&quot;: &quot;981631&quot;
}
</code></pre>
<p>if I run this:</p>
<pre><code>  Map&lt;String, Object&gt; newMessage = getReplace(messageMap.entrySet().stream()
            .collect(Collectors.toMap(Map.Entry::getKey, entry -&gt; (Object) entry.getValue())));
</code></pre>
<p>The value will change only in the &quot;top&quot; map.
Is there a way to use stream and do it in all inner and inner &quot;inner&quot; maps?</p>
","2024-06-30 14:57:28","1","Question"
"78684029","78684010","","<p>This should do the trick:</p>
<pre><code>import itertools

def cartesian_product(d):
    return [dict(zip(d, p)) for p in itertools.product(*d.values())]
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; d = {1: ['a', 'b'], 2: ['c', 'd'], 3: ['e', 'f']}
&gt;&gt;&gt; from pprint import pp
&gt;&gt;&gt; pp(cartesian_product(d))
[{1: 'a', 2: 'c', 3: 'e'},
 {1: 'a', 2: 'c', 3: 'f'},
 {1: 'a', 2: 'd', 3: 'e'},
 {1: 'a', 2: 'd', 3: 'f'},
 {1: 'b', 2: 'c', 3: 'e'},
 {1: 'b', 2: 'c', 3: 'f'},
 {1: 'b', 2: 'd', 3: 'e'},
 {1: 'b', 2: 'd', 3: 'f'}]
</code></pre>
","2024-06-28 18:40:48","1","Answer"
"78684010","","Cartesian product of dict of lists in Python","<p>I would like to have a Python function <code>cartesian_product</code> which takes a dictionary of lists as input and returns as output a list containing as elements all possible dictionary which can be formed by taking from each list one element. Here would be an example:</p>
<p>Calling</p>
<pre><code>cartesian_product({1: ['a', 'b'], 2: ['c', 'd'], 3: ['e', 'f']})
</code></pre>
<p>should return</p>
<pre><code>[
  {1: 'a', 2: 'c', 3: 'e'},
  {1: 'a', 2: 'c', 3: 'f'},
  {1: 'a', 2: 'd', 3: 'e'},
  {1: 'a', 2: 'd', 3: 'f'},
  {1: 'b', 2: 'c', 3: 'e'},
  {1: 'b', 2: 'c', 3: 'f'},
  {1: 'b', 2: 'd', 3: 'e'},
  {1: 'b', 2: 'd', 3: 'f'}
]
</code></pre>
","2024-06-28 18:35:00","2","Question"
"78683914","78683884","","<p>Dictionary/List comprehensions are great flexible tools. You were taught this way so that the solution was more flexible and aligns with current coding practices. It's a &quot;skill issue&quot; as they say. There's nothing wrong with either. Always read company coding guidelines where possible.</p>
","2024-06-28 18:06:08","1","Answer"
"78683884","","Is there any benefit of using a dictionary comprehension if an equivalent dict(zip(a, b)) is possible?","<p>Recently I have been working with dictionaries and I was to told to make dictionaries out of two lists like this:</p>
<pre><code>zipped = {key: value for key, value in zip(drinks, caffeine)}
</code></pre>
<p>Later I forgot how to do that and found a different way that seems simpler to me:</p>
<pre><code>zipped = dict(zip(drinks, caffeine))
</code></pre>
<p>Is there something worse about using this second example instead of the first?</p>
","2024-06-28 17:57:16","2","Question"
"78683779","78683709","","<p>Everything is passed by value, the difference is in <em>what we're passing</em>, whether a primitive type (<code>int</code>, <code>double</code>, <code>char</code>, and so on) or a reference type (an <code>Object</code>).</p>
<p>In the first case (primitive types), the value stored in the memory address of a primitive variable represents an <em>&quot;actual value&quot;</em>, like <code>5</code> in the case of an <code>int</code>, and it is copied into the corresponding method's parameter.</p>
<p>In the second case (reference types), the value stored in the memory address of your reference variable is another memory address. Specifically, the memory address of the object pointed by the reference. Therefore, when you're <em>&quot;passing an object to a method&quot;</em>, you're actually copying the memory address contained in your reference variable into the method's parameter. This type of passage is commonly called <em>passing by reference</em>, while in the case of primitive types, it is referred to as <em>passing by value</em>. However, in both cases we're passing the <em>value</em> (the content) of a variable. The distinction is made on what this content represents: a value for the data type or a memory address.</p>
<p>In your case, when you're passing the variable <code>mapThings</code> to the method <code>updateMapThings</code>, you're copying the address contained by <code>mapThings</code> into the first parameter of the method. Like so, both references (the one passed to the method and the method's parameter) are pointing to the same object in the heap memory. Therefore, if you want to update <code>mapThings</code> with the content of two different maps, you can simply invoke the same method a second time with the second source map.</p>
<pre><code>updateMapThings(mapThings, sourceMap);
updateMapThings(mapThings, sourceMap2);
</code></pre>
","2024-06-28 17:30:02","1","Answer"
"78683756","78683709","","<p>Java is pass-by-value, in the sense that if your method tries to assign a new value to an argument passed to it (e.g., <code>mapThings = somethingElse</code>), it won't affect the variable after the method's end.</p>
<p>However, when passing an object (such as a map) to a method, you're passing a reference. This means that if you invoke any methods that alter it, it will remain altered when the method completes.</p>
<p>In short - you can call <code>updateMapThings(mapThings, sourceMap)</code> followed by <code>updateMapThings(mapThings, sourceMap2)</code></p>
","2024-06-28 17:24:39","3","Answer"
"78683709","","Updating a Java Map by different methods","<p>I have a Java Map:</p>
<pre><code>Map&lt;String,String&gt; mapThings = new HashMap&lt;&gt;();
updateMapThings(mapThings, sourceMap); // sourceMap is the original Map which has all the 
                                       // values I want to populate mapThings with.
</code></pre>
<p>So now <code>mapTings</code> is like below</p>
<pre><code>{
    &quot;a&quot; : &quot;A&quot;,
    &quot;b&quot; : &quot;B&quot;,
    &quot;c&quot; : &quot;C&quot;
}
</code></pre>
<p>With a,A,b,B,c,C (all the key/values) populated from <code>sourceMap</code></p>
<p>Now I want to populate <code>mapThings</code> with more key/values from <code>sourceMap2</code>, so <code>mapThings</code> will become</p>
<pre><code>{
    &quot;a&quot; : &quot;A&quot;,
    &quot;b&quot; : &quot;B&quot;,
    &quot;c&quot; : &quot;C&quot;,
    &quot;d&quot; : &quot;D&quot;,
    &quot;e&quot; : &quot;E&quot;,
    &quot;f&quot; : &quot;F&quot;
}
</code></pre>
<p>where d,D,e,E,f,F are all key/values populated from <code>sourceMap2</code>.</p>
<p>Should I call</p>
<pre><code>updateMapThings(mapThings, sourceMap2);
</code></pre>
<p>This is where I get confused whether Java is Pass By Value or Reference. How do I cleanly update the same map with different key/values from more than one source?</p>
","2024-06-28 17:12:44","1","Question"
"78682714","78682170","","<p>As braX wrote, the variable <code>vrnHistory</code> is a local variable in <code>GlobalTest</code> and another local variable in <code>FN_GlobalTest</code>. Those are different variables (with the same name, but that doesn't matter), and both variables live only as long as the routine is executed.</p>
<p>The quick solution is to declare the variable outside of the code of your two routines at the top of the module:</p>
<pre><code>Dim vrnHistory as Object

Public Sub GlobalTest()
    Set vrnHistory = CreateObject(&quot;Scripting.Dictionary&quot;)
    vrnHistory.Add &quot;A1&quot;, &quot;This is dictionary Data for global share&quot;
    FN_GlobalTest
End Sub

Public Function FN_GlobalTest()       
    MsgBox &quot;Within Function called from SUB &quot; &amp; vrnHistory(&quot;A1&quot;)
End Function
</code></pre>
<p>As the variable is Global, it is not destroyed after <code>GlobalTest</code> finishes, and you can use it everywhere in your code. All good. All?</p>
<p>With that setup, you need to ensure that <code>GlobalTest</code> is always called first, but never again. If it is not called first, your dictionary will stay uninitialized (<code>Nothing</code>) and you will get a runtime error. If it is called multiple times, it will create a new dictionary every time (and the content of the previous dictionary is gone forever).</p>
<p>This is one of the reasons that global variables are not really programmers best friends. Especially in larger projects it will get more and more difficult to keep track what happens to them.</p>
<p>So instead of using a global variable, I usually write a simple function. This function uses a <code>static</code> variable. Static variables are not destroyed when the routine ends, but they are still local to the routine. The function will create a new dictionary only if it wasn't created before.</p>
<pre><code>Public Function vrnHistory() 
    Static dict As Object
    If dict Is Nothing Then
        Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    End If
    Set vrnHistory = dict 
End Function
</code></pre>
<p>Now you can access the dictionary in any order.</p>
","2024-06-28 13:18:52","3","Answer"
"78682192","","WPF - passing a Key/Value from a DataGrid to a custom control","<p>I try to provide to RefactorListItemControl the Key/Value of a dictionary stored in RefactorOperations which is displayed in a 1 column DataGrid</p>
<p>In the parent class, the RefactorOperations property is initialized as regular directory like this</p>
<pre><code>RefactorOperations = new Dictionary&lt;string, List&lt;RefactorOperation&gt;&gt;();
... // adding data to it
</code></pre>
<p>I use a DataGrid to display a list of RefactorOperations</p>
<pre><code>&lt;DataGrid ItemsSource=&quot;{Binding RefactorOperations}&quot;&gt;
   &lt;DataGrid.Columns&gt;

     &lt;DataGridTemplateColumn&gt;
         &lt;DataGridTemplateColumn.CellTemplate&gt;
             &lt;DataTemplate&gt;
                  &lt;custom:RefactorListItemControl Data=&quot;{Binding Value}&quot;&gt;&lt;/custom:RefactorListItemControl&gt;
             &lt;/DataTemplate&gt;
         &lt;/DataGridTemplateColumn.CellTemplate&gt;
     &lt;/DataGridTemplateColumn&gt;

 &lt;/DataGrid.Columns&gt;
</code></pre>
   
<p>The RefactorListItemControl  class itself looks like this</p>
<pre><code>public class RefactorListData
{
    public string Filename { get; set; }
    public List&lt;RefactorOperation&gt; Operations { get; set; }
}

public partial class RefactorListItemControl : UserControl
{
    public static readonly DependencyProperty DataProperty = DependencyProperty.Register(&quot;Data&quot;, typeof(RefactorListData), typeof(RefactorListItemControl), new PropertyMetadata(null, OnDataPropertyChanged));

    public RefactorListData Data
    {
        get { return (RefactorListData)GetValue(DataProperty); }
        set { SetValue(DataProperty, value); }
    }
    ...
</code></pre>
<p>I expect the Key/Value of each RefactorOperations items in the DataGrid to be passed to RefactorListItemControl in the Data Property</p>
<p>Thanks for helping me on this one</p>
<p>[edit]</p>
<p>Apparently the Datacontext of RefactorListItemControl is the KeyValue itself, but I want the Data property to hold that KeyValue pair</p>
","2024-06-28 11:29:18","0","Question"
"78682170","","Make dictionary object globally available","<p>I am trying to call a function and reference dictionary data.</p>
<p>How do I declare the vrnHistory dictionary as a global resource?</p>
<p>I stripped the code down but the basics are below.</p>
<p>I want the MsgBox to display the string in A1.</p>
<pre class=""lang-vb prettyprint-override""><code>Public Sub GlobalTest()
    Set vrnHistory = CreateObject(&quot;Scripting.Dictionary&quot;)
    vrnHistory.Add &quot;A1&quot;, &quot;This is dictionary Data for global share&quot;
    FN_GlobalTest
End Sub

Public Function FN_GlobalTest()          
    MsgBox &quot;Within Function called from SUB &quot; &amp; vrnHistory(&quot;A1&quot;)
End Function
</code></pre>
","2024-06-28 11:23:05","1","Question"
"78681052","78680587","","<p>Assuming you want to modify the price based on the &quot;% OFF&quot; (<code>base_price * (1-PERCENT/100</code>) and for example based on the &quot;CASHBACK&quot; (<code>base_price - CASHBACK</code>), you could first <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.extract.html"" rel=""nofollow noreferrer""><code>extract</code></a> each promo, then perform arithmetic:</p>
<pre><code>factor = (df['promo_type'].str.extract(r'(\d+)%', expand=False)
          .astype(float).div(100).rsub(1).fillna(1)
         )

cashback = df['promo_type'].str.extract(r'(\d+)\s*Cashback', expand=False,
                                        flags=re.I).astype(float).fillna(0)

df['revenue'] = df['base_price'].mul(factor).sub(cashback).mul(df['q_bef'])
</code></pre>
<p>Output:</p>
<pre><code>  product_code  base_price    promo_type  q_bef  q_aft   revenue
0          P11         190       50% OFF     34     52    3230.0
1          P03         156       25% OFF    393    322   45981.0
2          P07         300         BOGOF     22     85    6600.0
3          P15        3000  500 Cashback    329   1000  822500.0
4          P05          55       25% OFF    108     93    4455.0
</code></pre>
<p>Then to get the total revenue:</p>
<pre><code>df['revenue'].sum()
# 882766
</code></pre>
<p>Intermediates:</p>
<pre><code># factor
0    0.50
1    0.75
2    1.00
3    1.00
4    0.75
Name: promo_type, dtype: float64

# cashback
0      0.0
1      0.0
2      0.0
3    500.0
4      0.0
Name: promo_type, dtype: float64
</code></pre>
","2024-06-28 07:02:26","0","Answer"
"78680587","","Pandas Dataframe apply function multiple columns","<pre><code>  product_code  base_price    promo_type  q_bef  q_aft
0          P11         190       50% OFF     34     52
1          P03         156       25% OFF    393    322
2          P07         300         BOGOF     22     85
3          P15        3000  500 Cashback    329   1000
4          P05          55       25% OFF    108     93
</code></pre>
<p>Table has data of products and base_price,promo_type,quantity_before_sold and quantity_before_sold
we need to find the  total revenue before applying promo
for eg:sum(base_price*q_bef)</p>
<p>and we need to find the total revenue after promo
for eg:</p>
<p>promo_type=='50% OFF' , base_price/2
promo_type=='25% OFF' , base_price/4
then calculate total revenue with new base_price and q_aft</p>
<p>please let me know how to do in pandas Data frame using differnt functions</p>
<p>Total Revenue before and after</p>
","2024-06-28 03:47:56","0","Question"
"78679931","78673856","","<p>OK, every works, when I just replace <em><strong>$ssl_preread_server_name</strong></em> with <em><strong>$ssl_server_name</strong></em>
Thanks again for the help!</p>
","2024-06-27 21:49:02","1","Answer"
"78677657","78677364","","<pre><code>my_list = [{'name': 'Saeed', 'source_country': 'IR', 'destination_country': 'IT', 'email': 'sample1@gmail.com'},
    {'name': 'Vahid', 'source_country': 'US', 'destination_country': 'DE', 'email': 'sample2@gmail.com'},
    {'name': 'Ali', 'source_country': 'UK', 'destination_country': 'JP', 'email': 'sample3@gmail.com'},
    {'name': 'Joe', 'source_country': 'FR', 'destination_country': 'KR', 'email': 'sample4@gmail.com'}]

with open('output_data.txt', 'a') as fd:
    for d in my_list:
        text = ', '.join([f&quot;{k.replace('_', ' ').title()}: {v}&quot; for k,v in d.items()])
        print(text)
        fd.write(f&quot;&lt;p&gt;{text}&lt;/p&gt;\n&quot;)
</code></pre>
<p>Output:</p>
<pre><code>&lt;p&gt;Name: Saeed, Source Country: IR, Destination Country: IT, Email: sample1@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Vahid, Source Country: US, Destination Country: DE, Email: sample2@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Ali, Source Country: UK, Destination Country: JP, Email: sample3@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Joe, Source Country: FR, Destination Country: KR, Email: sample4@gmail.com&lt;/p&gt;
</code></pre>
<p>Saved in:</p>
<pre><code>output_data.txt
</code></pre>
<p><strong>UPD1: one-liner without save:</strong></p>
<pre><code>html = '\n'.join([f&quot;&lt;p&gt;{', '.join([f&quot;{k.replace('_', ' ').title()}: {v}&quot; for k,v in d.items()])}&lt;/p&gt;&quot; for d in my_list])
print(html)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&lt;p&gt;Name: Saeed, Source Country: IR, Destination Country: IT, Email: sample1@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Vahid, Source Country: US, Destination Country: DE, Email: sample2@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Ali, Source Country: UK, Destination Country: JP, Email: sample3@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Joe, Source Country: FR, Destination Country: KR, Email: sample4@gmail.com&lt;/p&gt;
</code></pre>
","2024-06-27 12:28:12","1","Answer"
"78677364","","How to store all key/values of a dictionary in a single line to store?","<p>This is the sample code:</p>
<pre class=""lang-py prettyprint-override""><code>my_list = [
    {'name': 'Saeed', 'source_country': 'IR', 'destination_country': 'IT', 'email': 'sample1@gmail.com'},
    {'name': 'Vahid', 'source_country': 'US', 'destination_country': 'DE', 'email': 'sample2@gmail.com'},
    {'name': 'Ali', 'source_country': 'UK', 'destination_country': 'JP', 'email': 'sample3@gmail.com'},
    {'name': 'Joe', 'source_country': 'FR', 'destination_country': 'KR', 'email': 'sample4@gmail.com'},
]
html = '\n'.join([f&quot;&lt;p&gt;{b.replace('_', ' ').title()}: {p[b]}&lt;/p&gt;&quot; for p in my_list for b in p])
</code></pre>
<p>This is current output:</p>
<pre><code>&gt;&gt;&gt; print(html)
&lt;p&gt;Name: Saeed&lt;/p&gt;
&lt;p&gt;Source Country: IR&lt;/p&gt;
&lt;p&gt;Destination Country: IT&lt;/p&gt;
&lt;p&gt;Email: sample1@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Vahid&lt;/p&gt;
&lt;p&gt;Source Country: US&lt;/p&gt;
&lt;p&gt;Destination Country: DE&lt;/p&gt;
&lt;p&gt;Email: sample2@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Ali&lt;/p&gt;
&lt;p&gt;Source Country: UK&lt;/p&gt;
&lt;p&gt;Destination Country: JP&lt;/p&gt;
&lt;p&gt;Email: sample3@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Joe&lt;/p&gt;
&lt;p&gt;Source Country: FR&lt;/p&gt;
&lt;p&gt;Destination Country: KR&lt;/p&gt;
&lt;p&gt;Email: sample4@gmail.com&lt;/p&gt;
</code></pre>
<p>I'm going to have this (expected output):</p>
<pre><code>&lt;p&gt;Name: Saeed, Source Country: IR, Destination Country: IT, Email: sample1@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Vahid, Source Country: US, Destination Country: DE, Email: sample2@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Ali, Source Country: UK, Destination Country: JP, Email: sample3@gmail.com&lt;/p&gt;
&lt;p&gt;Name: Joe, Source Country: FR, Destination Country: KR, Email: sample4@gmail.com&lt;/p&gt;
</code></pre>
<p>How can I store and print the expected output?</p>
<p><strong>Edit1</strong></p>
<p>I know this way to save the output, but I don't mean it:</p>
<pre class=""lang-py prettyprint-override""><code>html = '\n'.join([f&quot;&lt;p&gt;Name: {p['name']}, Source Country: {p['source_country']}, Destination Country: {p['destination_country']}, Email: {p['email']}&lt;/p&gt;&quot; for p in my_list])
</code></pre>
","2024-06-27 11:34:42","-1","Question"
"78676200","78667217","","<p>Without using regex, you could have the following:</p>
<pre class=""lang-py prettyprint-override""><code>from typing import Any

def find_epochs_metrics(request_data: dict[str, Any]):
    for k, v in request_data.items():
        if not k.startswith(&quot;epochs-&quot;):
            continue

        k_split = k.split(&quot;-&quot;)
        epoch_n = k_split[1]

        if not epoch_n.isdigit():
            continue

        field_name = k_split[2]

        ...
</code></pre>
<p>You should try to minimize your usage of regex since they are inefficient, and hard to maintain.</p>
","2024-06-27 07:45:29","0","Answer"
"78675851","78673856","","<p>Yeah <code>if</code> is not allowed in stream, got to use maps. Try setting <code>ssl_verify_client optional;</code> and the sniffing the <code>$ssl_client_verify</code> variable for a <code>NONE</code> value. This should work or at least get you close.</p>
<pre class=""lang-ini prettyprint-override""><code>stream {
  map $ssl_preread_server_name $name {
    default           server_one;
    two.example.org   server_two;
  }  
  
  map $ssl_preread_server_name $authen_cert {
    default           &quot;/etc/nginx/public.cert&quot;;
    two.example.org   &quot;None&quot;;
  }  
  map $ssl_client_verify $no_client_cert_sent {
    default           0;
    NONE              1;
  }
  map $ssl_preread_server_name $allow_no_client_cert_server_name {
    default           0;
    two.example.org   1;
  }
  map $no_client_cert_sent$allow_no_client_cert_server_name $proxy {
    default 127.0.0.2:3128; # default proxy along
    # if $ssl_client_verify = NONE &amp;&amp; $ssl_preread_server_name NOT IN allow list
    # then proxy to server that only returns 496 cert required
    10      127.0.0.1:8888; 
  }

  # dead end proxy for clients that sent no cert without being in the allow map
  server {
    listen 127.0.0.1:8888;
    return 469;
  }

  server {
    listen 127.0.0.1:3128 ssl;
    ssl_protocols TLSv1.2 TLSv1.3; 
    ssl_certificate /etc/letsencrypt/live/$name/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$name/privkey.pem;
    ssl_client_certificate $authen_cert ;
    ssl_verify_client optional;
    proxy_pass $proxy;
  }    
}
</code></pre>
","2024-06-27 06:24:33","0","Answer"
"78674957","78674911","","<p>one-liner solution</p>
<pre><code>mydict=dict(zip(mylist[0::2], mylist[1::2]))
</code></pre>
","2024-06-26 22:51:57","1","Answer"
"78674942","78674911","","<p>You need to iterate over your list and skip every other item so that you only grab the cities name as the key, then you can use i+1 to grab the coordinates</p>
<pre><code>cities = [
    'Kaivopuisto', ('24.950292890004903', '60.155444793742276'),
    'Laivasillankatu', ('24.956347471358754', '60.160959093887129'),
    'Kapteeninpuistikko', ('24.944927399779715', '60.158189199971673'), 
    'Viiskulma', ('24.941775800312996', '60.16098589997938'), 
    'Sepankatu', ('24.93628529982675', '60.157948300373846'), 
    'Hietalahdentori', ('24.929709900391629', '60.162225100108344'), 
    'Designmuseo', ('24.945959999554361', '60.163103199952786'),
    'Vanha kirkkopuisto', ('24.939149900447603', '60.165288299815245'), 
    'Erottajan aukio', ('24.944134928883898', '60.166911666939939')
]

# Create an empty dictionary
cities_dict = {}

# Step is 2 so that we skip the coordinates and only grab the cities as the key
for i in range(0, len(cities), 2):
    name = cities[i] 
    coordinates = cities[i+1]  
    cities_dict[name] = coordinates

print(cities_dict)
</code></pre>
","2024-06-26 22:45:54","2","Answer"
"78674911","","How can I take a list of pairs of items (string, tuple) and add (convert) it to a dictionary?","<p>I'm still a beginner at Python. Here is my list:</p>
<pre><code>['Kaivopuisto', ('24.950292890004903', '60.155444793742276'),
 'Laivasillankatu', ('24.956347471358754', '60.160959093887129'),
 'Kapteeninpuistikko', ('24.944927399779715', '60.158189199971673'), 
 'Viiskulma', ('24.941775800312996', '60.16098589997938'), 
 'Sepankatu', ('24.93628529982675', '60.157948300373846'), 
 'Hietalahdentori', ('24.929709900391629', '60.162225100108344'), 
 'Designmuseo', ('24.945959999554361', '60.163103199952786'),
 'Vanha kirkkopuisto', ('24.939149900447603', '60.165288299815245'), 
 'Erottajan aukio', ('24.944134928883898', '60.166911666939939')]
</code></pre>
<p>I need to create a new dictionary with the string (name) as the key and the tuple as the value. For clarification, the string is the name of a city in Finland and the tuple is longitude and latitude for the city. I really could use some guidance please.</p>
<p>I tried list comprehension, I tried a for loop, I tried the update method - I can't get anything to work.</p>
","2024-06-26 22:36:07","-1","Question"
"78674507","78674449","","<p>You could refactor your code by using a list comprehension to compute the conditions and taking advantage of the dictionary keys/values:</p>
<pre><code>def cat_mapper(frame, targ_col, cat_col):
    category_retailers = {'Online Shopping':['amazon','amzn mktp', 'target.com'],
                          'Wholesale Stores': ['costco', 'target'],
                         }
    cond = [frame[targ_col].str.contains('|'.join(val),regex=True,case=False)
            for val in category_retailers.values()]

    frame[cat_col] = np.select(cond, list(category_retailers), frame[cat_col])
    return frame

cat_mapper(df, 'Description', 'Category')
</code></pre>
<p>Output:</p>
<pre><code>             Description          Category
0          amazon 345689   Online Shopping
1  amzn mkpt online 7765               NaN  # not matching because of typo
2            amazon 4444   Online Shopping
3        costco location  Wholesale Stores
4             Wholefoods         Groceries
</code></pre>
<p>Used input:</p>
<pre><code>data_dict = {'Description': ['amazon 345689','amzn mkpt online 7765','amazon 4444','costco location','Wholefoods'],
             'Category':['Nan','Nan','Nan','Nan','Groceries']
          }
df = pd.DataFrame(data=data_dict).replace('Nan', float('nan'))
</code></pre>
","2024-06-26 20:19:39","2","Answer"
"78674449","","Fill Column Values using a dictionary and pattern matching","<p>I am working on categorizing credit card transaction. Right now I am using a dictionary combined with np.select() as follows:</p>
<pre><code>    def cat_mapper(frame, targ_col, cat_col):
    
        category_retailers = {'Online Shopping':['amazon','amzn mktp', 'target.com'],
                              'Wholesale Stores': ['costco', 'target'],
                             }
        cond = [frame[targ_col].str.contains('|'.join(category_retailers['Online Shopping']),regex=True,case=False),
                frame[targ_col].str.contains('|'.join(category_retailers['Wholesale Stores']),regex=True,case=False),
               ]

        choice = ['Online Shopping',
                  'Wholesale Stores'
                 ]
       
        default_cond = frame[cat_col]

        frame[cat_col] = np.select(cond, choice, default_cond)
        return frame
</code></pre>
<p>Where the frame parameter is the dataframe, targ_col parameter is the Description column with the transaction description or name and the cat_col parameter is the category column that will contain the transaction category.</p>
<p>The basic premise is to check the transaction description column for partial matches in the dictionary values, if there is a partial match in the description assign the corresponding dictionary key to the category column.</p>
<p>There are no issues with the functionality of the above block, but there is some redundancy in have to define dictionary values then match the dictionary values to corresponding conditions and choices for np.select.</p>
<p>Is there a way to pattern match the transaction description against a list of values in the dictionary and assign the dictionary key to the category column without using np.select as an intermediary?</p>
<p>I assume I can use a nested loop but even that seems to verbose. Is there a more eloquent way to achieve the same outcome.</p>
<p>sample dataframe:</p>
<pre><code>data_dict = {'Description': ['amazon 345689','amzn mktp online 7765','amazon 4444','costco location','Wholefoods'],
           'Category':['NaN','NaN','NaN','NaN','Groceries']
          }
df = pd.DataFrame(data=data_dict)
</code></pre>
<p>Sample Output:</p>
<pre><code>data_dict = {'Description': ['amazon 345689','amzn mkpt online 7765','amazon 4444','costco location','Wholefoods'],
           'Category':['Online Shopping','Online Shopping','Online Shopping','Online Shopping','Groceries']
          }
df = pd.DataFrame(data=data_dict)
</code></pre>
<p>The above sample output should be reproducible with the below code block and my current np.select() framework.</p>
<pre><code>import pandas as pd
import numpy as np


def cat_mapper(frame, targ_col, cat_col):

    category_retailers = {'Online Shopping':['amazon','amzn mktp', 'target.com'],
                            'Wholesale Stores': ['costco', 'target'],
                            }
    cond = [frame[targ_col].str.contains('|'.join(category_retailers['Online Shopping']),regex=True,case=False),
            frame[targ_col].str.contains('|'.join(category_retailers['Wholesale Stores']),regex=True,case=False),
            ]

    choice = ['Online Shopping',
                'Wholesale Stores',
                ]

    default_cond = frame[cat_col]

    frame[cat_col] = np.select(cond, choice, default_cond)
    return frame

data_dict ={'Description': ['amazon 345689','amzn mktp online 7765','amazon 4444','costco location','Wholefoods'],
           'Category':['NaN','NaN','NaN','NaN','Groceries']
          }


df = pd.DataFrame(data=data_dict)

cat_mapper(df,'Description','Category')
</code></pre>
<p>Thanks in advance and let me know if you need me to provide any additional details</p>
","2024-06-26 20:06:34","1","Question"
"78674415","78674305","","<p>Iterate through the elements of the key tuple, creating the nested dictionaries as needed.</p>
<pre><code>final_dict = {}
for key, value in tuple_dict.items():
    temp_dict = final_dict
    for k in key[:-1]:
        if k not in temp_dict:
            temp_dict[k] = {}
        temp_dict = temp_dict[k]
    temp_dict[key[-1]] = value
</code></pre>
","2024-06-26 19:56:10","6","Answer"
"78674305","","Converting a flat dictionary with tuples as keys to a nested dictionary","<p>I have a dictionary which has tuples for keys which I need to transform to a nested dictionary:</p>
<pre><code>tuple_dict = {(a, b, c): {&quot;f&quot;: 5, &quot;d&quot;: 6, &quot;e&quot;, 4}}
final_dict = {a: {b: {c: {&quot;f&quot;: 5, &quot;d&quot;: 6, &quot;e&quot;, 4}}}}
</code></pre>
<p>I've got the following code which works for up to 7 levels of nesting, but I feel like there's a more elegant solution, maybe using recursion, that would work up to n levels of nesting?</p>
<p>I have another function which is creating an empty &quot;shell&quot; dictionary for this to work, would be nice if I could remove that as well.</p>
<pre><code>for key, value in tuple_dict.items():
    if no_of_keys == 1:
        final_dict[key[0]] = value
    elif no_of_keys == 2:
        final_dict[key[0]][key[1]] = value
    elif no_of_keys == 3:
        final_dict[key[0]][key[1]][key[2]] = value
    elif no_of_keys == 4:
        final_dict[key[0]][key[1]][key[2]][key[3]] = value
    elif no_of_keys == 5:
        final_dict[key[0]][key[1]][key[2]][key[3]][key[4]] = value
    elif no_of_keys == 6:
        final_dict[key[0]][key[1]][key[2]][key[3]][key[4]][key[5]] = value
    elif no_of_keys == 7:
        final_dict[key[0]][key[1]][key[2]][key[3]][key[4]][key[5]][key[6]] = value
    else:
        print(&quot;Cannot have more than 7 keys&quot;)
</code></pre>
","2024-06-26 19:26:15","0","Question"
"78673856","","nginx ""set_verify_client"" does not accept mapped variables","<p>This is a very reduced configuration for nginx, which should use different configurations for TLS connections, based on SNI names.
Some of them need additional client authentication via client certificates.
When I try to configure it, nging -t claims, that the mapped variable is not valid for <em><strong>ssl_verify_client</strong></em>:<br> <code>invalid value &quot;$svc&quot; in /etc/nginx/sites-enabled/default:24</code><br>
The configuration looks like:</p>
<pre><code>stream {
  map $ssl_preread_server_name $name {
    default           server_one;
    two.example.org   server_two;
  }  
  
  map $ssl_preread_server_name $authen_cert {
    default           &quot;/etc/nginx/public.cert&quot;;
    two.example.org   &quot;None&quot;;
  }  
  
  map $ssl_preread_server_name $svc {
    default           &quot;on&quot;;
    two.example.org   &quot;off&quot;;
  }

  server {
    listen 127.0.0.1:3128 ssl;
    ssl_protocols TLSv1.2 TLSv1.3; 
    ssl_certificate /etc/letsencrypt/live/$name/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$name/privkey.pem;
    ssl_client_certificate $authen_cert ;
    #set $svc =&quot;off&quot;;
    ssl_verify_client $svc ;
    proxy_pass 127.0.0.2:3128;
  }    
}
</code></pre>
<p>I tried different names for the variable, guessing that I had an conflict with some predefined stuff, but no matter, how I name this variable, or if I set it explicitly before the statement, the error message is the same.
The position of the map block makes also no difference.
I can map the arguments for all other statements to variables without any problem.
I tried finally also an if-block for both verification related lines, but this also gives an error:<br><code>&quot;if&quot; directive is not allowed here</code><br>
So I am clueless, how I shall configure this.</p>
<p>nginx is: <em><strong>nginx version: nginx/1.22.1</strong></em>
system is: <em><strong>SMP PREEMPT_DYNAMIC Debian 6.1.90-1</strong></em></p>
<p>Thanks for any hints</p>
<p>Thanks to Lana Codes I could overcome the first error, with ssl_verify_client. But after that was fixed, I got the same error message for <em><strong>ssl_client_certificate</strong></em> . I fixed this with setting a fixed path to a file, containing several client certificates, as verification is now optional.
OK, now the configuration test was ok, but I learned, that the mapping itself is not working. If I omit the default, I get no connection at all.</p>
<p>All, what I want to create, is a simple TLS-Termination service, which passes the unencrypted stream to an unencrypted plain tcp application.</p>
<p>I tried with different variations in the configuration:</p>
<ul>
<li>the keyword ssl behind the listen statement<br />
like in the above example:  I see no SNI name recognition in the logs, but an empty map and finally no certificate found, as the variable is unset</li>
<li>without the keyword ssl behind the listen statement<br />
Now I see a SNI recognition, but no map and no signs, that nginx tries to terminate TLS, the connection fails.</li>
<li>I tried to have <em><strong>ssl_pre_read on</strong></em> in the server or the stream block, I tried it in both blocks, all the time the configuration is valid, but not working as expected.</li>
</ul>
","2024-06-26 17:26:40","0","Question"
"78671561","78671514","","<p>You could define a common interface and have a dictionary based on that.</p>
<p>E.g.</p>
<pre><code>interface IMyClass {
  int GetItem(int index);
}

class MyClass1 : IMyClass {
  public int GetItem(int index) {
    // actual code here...
  }
}

Dictionary&lt;int, IMyClass&gt; myClasses = new {
        { 1, new MyClass1() },     
        { 2, new MyClass2() },     
        { 3, new MyClass3() },     
    };
</code></pre>
","2024-06-26 09:35:00","1","Answer"
"78671514","","How can I use a dictionary to swich between classes according to a integer value?","<p>I have a C# application where I have to switch between classes according to the value of an integer variable. I have a string array &quot;myvar&quot; that should get the values from one of the classes (myclass1, myclass2, myclass3....) according to the value of an integer variable (var1). Currently, I am using the following code. I want to shorten my code by using a dictionary. I have once used a dictionary for translating a string variable to a list of strings. But I cannot adapt it to my current use case because here I have to switch between classes. Is it possible to use a dictionary in my case?</p>
<pre><code>myclass1 my_class1 = new myclass1();
myclass2 my_class2 = new myclass2();
myclass3 my_class3 = new myclass3();
//several other classes


int var1 = 0;
string[] myvar= new string[999];


public void my_method()
{
  for(int j = 0; j &lt; 999; j++)
  {
     if (var1==1)
     {
       myvar[j] = my_class1.varlist[j];
     }
     if (var1==2)
     {
       myvar[j] = my_class2.varlist[j];
     }
     if (var1==3)
     {
       myvar[j] = my_class3.varlist[j];
     }
     // same for the rest classes

  }      

}
                            
</code></pre>
","2024-06-26 09:28:01","-1","Question"
"78671094","78670872","","<pre><code>animals &lt;- c(&quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot;)

data_zoo &lt;- data.frame(text = c(&quot;The dog barks&quot;, &quot;Bored catfish&quot;, &quot;Phish&quot;))

data_zoo |&gt;
  dplyr::mutate(animals = +stringr::str_detect(text, paste(animals, collapse = &quot;|&quot;)))

           text animals
1 The dog barks       1
2 Bored catfish       1
3         Phish       0
</code></pre>
","2024-06-26 08:08:00","1","Answer"
"78670872","","How to Create a Binary Variable in R Based on a Specific Dictionary of Terms","<p>I am looking to receive help on creating a binary variable in R based on whether a specific dictionary of terms appears within text data. I currently have a data frame, where one of those columns (text) contains different texts that I'm interested in analyzing. I would like to analyze whether texts surrounding animals appear in those columns (to be coded as 1), or if texts surrounding animals don't appear (coded as 0).</p>
<p>I already created an &quot;animals&quot; dictionary (animals_dict) (which contains three terms &quot;cat, &quot;dog&quot;, and &quot;fish). Essentially, I'd like to create a new variable (data_zoo$animals), which indicates whether any of the texts contained mentions of the animals dictionary (1) or did not (0).</p>
<p>I've tried writing a code, but I keep getting an error. Here's what I have so far:</p>
<pre><code>data_zoo &lt;- mutate(data_zoo, data_zoo$animals = if_else(data_zoo$text==&quot;animals_dict&quot;, 1, 0))
</code></pre>
<p>I would like help with getting the appropriate syntax to create this variable.</p>
","2024-06-26 07:21:29","1","Question"
"78669948","78669934","","<p>Scripting dictionary accepts keys of any type, including Object, so with <code>funds.Add fund, mapping</code> the key you're adding is the Range object itself, not the value of that cell. This is a case where relying on the default property of <code>Value</code> doesn't get you what you expect.</p>
<p>Your inner dictionaries still all point to the same object <code>mapping</code> though, and you clear that every time through the loop, so your inner dictionary is empty.</p>
<p>Make a fresh dictionary each time:</p>
<pre><code>Sub build_dictionary()
    
    Dim funds As Scripting.Dictionary
    Dim fund As Range, fundName As String
    
    Set funds = New Scripting.Dictionary 'funds represents the outer dictionary
    
    For Each fund In Worksheets(&quot;Mapping&quot;).Range(&quot;A2&quot;, Range(&quot;a2&quot;).End(xlDown)).Cells
        fundName = fund.Value
        funds.Add fundName, New Scripting.Dictionary 'create a fresh dict
        With funds(fundName) 'set key value pairs to the inner dictionary
            .Add &quot;portfolio&quot;, fund.Offset(0, 1).Value
            .Add &quot;structure&quot;, fund.Offset(0, 2).Value
            .Add &quot;locationaccount&quot;, fund.Offset(0, 3).Value
        End With
    Next fund
    
    Debug.Print funds(&quot;F1&quot;).Item(&quot;portfolio&quot;) '&gt;&gt; Fund 1
    Debug.Print funds(&quot;F2&quot;).Item(&quot;structure&quot;) '&gt;&gt; Cash
    
End Sub
</code></pre>
","2024-06-26 00:39:39","0","Answer"
"78669934","","VBA - Accessing items in a nested dictionary","<p>I have the following table laid out in an excel worksheet named &quot;Mapping&quot;</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">Funds</th>
<th style=""text-align: left;"">Portfolio</th>
<th style=""text-align: left;"">Structure</th>
<th style=""text-align: left;"">LocationAccount</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">F1</td>
<td style=""text-align: left;"">Fund 1</td>
<td style=""text-align: left;"">Cash</td>
<td style=""text-align: left;"">Acct_1</td>
</tr>
<tr>
<td style=""text-align: left;"">F2</td>
<td style=""text-align: left;"">Fund 2</td>
<td style=""text-align: left;"">Cash</td>
<td style=""text-align: left;"">Acct_2</td>
</tr>
<tr>
<td style=""text-align: left;"">F3</td>
<td style=""text-align: left;"">Fund 3</td>
<td style=""text-align: left;"">Cash</td>
<td style=""text-align: left;"">Acct_3</td>
</tr>
</tbody>
</table></div>
<p>In the below code i am trying to create a dictionary of dictionaries however the last line of code is kicking out an error: 424 Object Required.  How do i access the elements inside the dictionary?</p>
<pre><code>Sub build_dictionary()
    
    
    Dim funds As Scripting.Dictionary
    Dim mapping As Scripting.Dictionary
    Dim fund As Variant
    
    'funds represents the outer dictionary
    Set funds = New Scripting.Dictionary
    
    'mapping represents the inner dictionary
    Set mapping = New Scripting.Dictionary
    
    For Each fund In Worksheets(&quot;Mapping&quot;).Range(&quot;A2&quot;, Range(&quot;a2&quot;).End(xlDown)).Cells
        
        'set key value pairs to the mapping(inner) dictionary
        mapping.Add &quot;portfolio&quot;, fund.Offset(0, 1).Value
        mapping.Add &quot;structure&quot;, fund.Offset(0, 2).Value
        mapping.Add &quot;locationaccount&quot;, fund.Offset(0, 3).Value
        
        'in the outer dictionary set key=fund, item = mapping dictionary
        funds.Add fund, mapping
        
        'remove all key-value pairs of mapping dictionary in preparation of next loop
        mapping.RemoveAll
           
    Next fund
    
    'produces error '424' Object required
    Debug.Print funds(&quot;F1&quot;).Item(&quot;portfolio&quot;)
    

End Sub
</code></pre>
","2024-06-26 00:25:27","0","Question"
"78667760","78667217","","<p>Use <a href=""https://docs.python.org/3/library/re.html#"" rel=""nofollow noreferrer"">regular expressions</a> to check if it's an epoch, and what the epoch number and field name is:</p>
<pre class=""lang-py prettyprint-override""><code>for k, v in my_dict.items():
    if not k.startswith(&quot;epochs-&quot;):
        continue
    match = re.match(r&quot;epochs-(\d+)-(.+)&quot;, k)
    if not match:
       continue
    epoch, field_name = match.groups()
    ...  # rest of your processing
</code></pre>
<hr />
<p>Side note:
The query string looks like it was made from a <a href=""https://docs.djangoproject.com/en/5.0/topics/forms/formsets/"" rel=""nofollow noreferrer"">formset</a>. Why not simply validate the formset and then generate the string from the cleaned data of the individual forms? The forms will be in the right order, and the <code>cleaned_data</code> contains just the bare field names, without any of the prefixes, so you don't have to use a regex. The values will have been validated too.</p>
<p>Maybe something like this:</p>
<pre><code>formset = YourFormsetClass(request.POST)
if formset.is_valid():
    for form in formsets.forms:
        target_raw_string = &quot;&quot;
        for k, v in form.cleaned_data.items():
            if v == '':
                v = '-9999.999900'
            if k == &quot;target_name&quot;:
                target_raw_string  += &quot;,&quot; + v
            else:
                target_raw_string += &quot;,&quot; + v + &quot;,0.000000&quot;
</code></pre>
","2024-06-25 13:48:05","0","Answer"
"78667217","","Multiple request.POST key/values into string via function","<p>I am trying to write values from a request.POST to a string format.
By default, these always start with &quot;epochs-NUMBER-&quot;.
Therefore, I should draw a For loop so that a new line is created for each number.</p>
<p>Edit:
The request originates from a dynamic Django form, which has no static elements (the epochs are dynamic). It's a standard Python POST request. The only thing these elements have in common is that they all start the same way (epochs-number-etc.). The request is processed via string (nmea_sting-Function) into a file using Python.</p>
<p>The complete request looks like that. But I only need the 'epochs-NUMBER-' values</p>
<p><code>csrfmiddlewaretoken=hJmSuP3O6GmtwBeJhfqb99LaCVOKxgngGNIEqoqhQQR7tQELUVGHeXRXxfnRE1Ah&amp;base-TOTAL_FORMS=1&amp;base-INITIAL_FORMS=0&amp;base-MIN_NUM_FORMS=0&amp;base-MAX_NUM_FORMS=1000&amp;base-0-time=25.06.2024+13%3A36%3A00&amp;base-0-show_differences=on&amp;base-0-show_null=1&amp;source=Manual&amp;epochs-TOTAL_FORMS=3&amp;epochs-INITIAL_FORMS=3&amp;epochs-MIN_NUM_FORMS=0&amp;epochs-MAX_NUM_FORMS=1000&amp;unit_selector=m&amp;unit_selector=m&amp;unit_selector=m&amp;unit_selector=m&amp;epochs-0-target_name=250.01.G&amp;epochs-0-easting=55555&amp;epochs-0-northing=5555&amp;epochs-0-height=555&amp;epochs-0-azimuth=&amp;epochs-0-zenithangle=&amp;epochs-0-slope_dist=&amp;epochs-1-target_name=170.01.G&amp;epochs-1-easting=44646&amp;epochs-1-northing=6554&amp;epochs-1-height=544&amp;epochs-1-azimuth=&amp;epochs-1-zenithangle=&amp;epochs-1-slope_dist=&amp;epochs-2-target_name=150.01.G&amp;epochs-2-easting=78979878&amp;epochs-2-northing=4645&amp;epochs-2-height=455&amp;epochs-2-azimuth=&amp;epochs-2-zenithangle=&amp;epochs-2-slope_dist=</code></p>
<p>The request looks like that:
<a href=""https://i.sstatic.net/56NFvJHO.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/56NFvJHO.png"" alt=""Request"" /></a></p>
<p>Edit:
One target is epochs-0-etc, the next is epochs-1-etc. and so on. My solution sadly works only for one target at the moment (epochs-0-etc)</p>
<pre class=""lang-py prettyprint-override""><code>def nmea_string(self, request, target_name):
   my_dict = {}
   keys = []
   values = []
   target_raw_string = (&quot;PTER,&quot; + self.short_name + &quot;_TRG,&quot; + target_name + &quot;,&quot; +
                        self.time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) + &quot;,&quot; + str(self.status_target))
   for key, value in request.POST.items():
       keys.append(key)
       values.append(value)
   for i in range(len(keys)):
       my_dict.update({keys[i]: values[i]})
   
   for k, v in my_dict.items():
       if k.startswith('epochs-0-'):
           if v == '':
               v = '-9999.999900'
           if k.startswith('epochs-0-target_name'):
               target_raw_string += &quot;,&quot; + v
           else:
               target_raw_string += &quot;,&quot; + v + &quot;,0.000000&quot;

   tg_checksum = self.get_checksum(target_raw_string)
   tg_nmea_string = &quot;$&quot; + target_raw_string + &quot;*&quot; + tg_checksum + &quot;\n&quot;

   nmea_string += tg_nmea_string

   return nmea_string
</code></pre>
<p>The end result should look a bit like this:</p>
<pre><code>$PTER,TS_TRG,250.01.G,2024-04-22 23:00:00,129,675666.252000,0.000000,252132.398000,0.000000,412.137000,0.000000,-9999.999900,0.000000,-9999.999900,0.000000,-9999.999900,0.000000*1F
$PTER,TS_TRG,170.01.G,2024-04-22 23:00:00,129,675704.440000,0.000000,252162.055000,0.000000,412.341000,0.000000,-9999.999900,0.000000,-9999.999900,0.000000,-9999.999900,0.000000*1A
</code></pre>
","2024-06-25 12:01:13","-4","Question"
"78663455","78663423","","<p>The error you see is because <code>value</code> is a string and not a dictionary. You can only use integers to slice a string.</p>
<p>For example, if you have <code>x=&quot;hello world&quot;</code>, you can use <code>x[1]</code> to get the second character of the string <code>e</code>. if you use <code>x['value']</code>, you would get the same error.</p>
<p>Double-check your <code>value</code> variable in the code to see what it's returning and if you expect it to be a dictionary, you need to format your original dict in <code>config.py</code> to use a dictionary instead of string</p>
<p>You can use a dictionary like this in your <code>config.py</code>:</p>
<pre><code>{
   YOUR_TENANT: {
      &quot;client_id&quot;: YOUR_CLIENT_ID,
      &quot;client_secret&quot;: YOUR_CLIENT_SECRET
   }
}
</code></pre>
","2024-06-24 15:43:44","0","Answer"
"78663423","","Python Passing values to functions from Nested Dictionary","<p>I'm new to python and playing with Nested dictionary called mydict{} located in a config.py file. i'm trying assign the key, value from nested dictionary using iteration and got the error</p>
<pre><code>    myfunc(key, value['client_id'], value['client_secret'])
TypeError: string indices must be integers
</code></pre>
<p>Basically, i have a dictionary for each client and need to iterate for each.</p>
<pre><code>def myfunc(myval1, myval2, myval3):
    config.ms_auth[TENANT] = myval1
    config.ms_auth[CLIENT_ID] = myval2
    config.ms_auth[CLIENT_SECRET] = myval3;
    &lt;&lt;&lt; piece of logging functions goes here &gt;&gt;&gt;
    with RequestManager(total_indicators, logger) as request_manager:
        logger.info(&quot;Start uploading Data&quot;)
        request_manager.upload_indicators(parsed_indicators)
        logger.info(&quot;Finished uploading indicators&quot;)
        
def main():
    tenants = json.loads(config.mydict)
    for key, value in tenants.items():
       myfunc(key, value['client_id'], value['client_secret'])
</code></pre>
<p>This is the Dictionary  in config.py file</p>
<pre><code>mydict = {
   'tenant': 'abcd',
   'client_id': 'customerid',
   'cleint_secret' : 'password'
}
</code></pre>
<p>any ideas would be highly appreciated..</p>
","2024-06-24 15:37:11","0","Question"
"78662522","78655722","","<p>The error you're getting is due to the fact that you're trying to &quot;spread&quot; a <code>Set&lt;_ExerData&gt;</code> into a <code>List&lt;Widget&gt;</code>, the error you got is pretty clear about that. But what's not clear is where that <code>Set</code> is coming from because you're making a &quot;grammar&quot; mistake, basically, in your Dart code.</p>
<p>The syntax:</p>
<pre><code>[...foo]
</code></pre>
<p>is for spreading the value of a collection <code>foo</code> inside the List being created with square brackets.</p>
<p>Inside a literal List, you can also use &quot;for-collection&quot;s:</p>
<pre><code>void main() {
  const mySet = {'abc', 'def'};
  final list = ['hi', for (final v in mySet) '\n* $v'];
  print(list.join());
}
</code></pre>
<p>This prints:</p>
<pre><code>hi
* abc
* def
</code></pre>
<p>In your code, you're mixing up things... first, you're using both the spread operator and collection-for... but you're also trying to collect Sets in your collection-for, which I believe is a misunderstanding on your part about collection-fors.</p>
<p>This code should illustrate the problem:</p>
<pre class=""lang-dart prettyprint-override""><code>void main() {
  print([for (final v in [1, 2, 3]) { v }]);
}
</code></pre>
<p>This will print:</p>
<pre><code>[{1}, {2}, {3}]
</code></pre>
<p>Each value of the list got wrapped into a <code>Set</code> because <code>collection-for</code> expressions do not take a block, only for-loops do! So curly-braces inside a collection-for are just literal <code>Set</code>s.</p>
<p>In the example above, <code>{1}</code> is a <code>Set</code> containing the element <code>1</code>.</p>
<p>I am not sure why you're mapping over a single-element List as that's just not necessary assuming you only have one element... but if we keep that mapping (assuming you may add more items in the future??) the code should look something like this:</p>
<pre class=""lang-dart prettyprint-override""><code>  final widgets = [
    ...[
      ExerTitle(title, leftEdgeInset, 112),
    ].map((menu) =&gt; _ExerTitle(
          title: menu.title,
          leftEdgeInset: menu.leftEdgeInset,
          time: menu.time,
        )),
    for (int i = 0; i &lt; exerArr.length; i++)
      ...[
        ExerData(exerArr[i], setsArr[i]),
      ].map((menu) =&gt; _ExerData(
            exer: menu.exer,
            sets: menu.sets,
          ))
  ];
</code></pre>
","2024-06-24 12:46:04","0","Answer"
"78659391","78659259","","<p>...I was bored</p>
<pre><code>public static Dictionary&lt;string,Int32&gt;? ReadInputData_3()
{
    const String XLSX_RELATIVE_PATH = @&quot;..\..\..\ModbusTestJig.Helpers\Input_data\Input_data.xlsx&quot;;

    FileInfo xlsxFile = new FileInfo( XLSX_RELATIVE_PATH );
    if( !xlsxFile.Exists )
    {
        _ = MessageBox.Show( &quot;Couldn't find file \&quot;&quot; + xlsxFile.FullName + &quot;\&quot;.&quot;, MessageBoxIcon.Error, etc );
        return null;
    }

    WorkBook workBook = WorkBook.Load();
    if( workBook.WorkSheets.Count &lt; 1 )
    {
         _ = MessageBox.Show( &quot;Workbook doesn't contain any worksheets.&quot;, MessageBoxIcon.Error, etc );
        return null;
    }

    Dictionary&lt;String,Int32&gt; dict = new Dictionary&lt;String,Int32&gt;( StringComparer.Ordinal );

    WorkSheet workSheet = workBook.WorkSheets[0];

    foreach( RangeRowrow in workSheet.Rows )
    {
        Object? col0Value = row.Columns[0].Value; // Assuming key is in the first column (column index 0)
        Object? col1Value = row.Columns[1].Value; // Assuming value is in the second column (column index 1)

        String key      = col0Value?.ToString( CultureInfo.InvariantCulture ).Trim() ?? String.Empty;
        String valueStr = col1Value?.ToString( CultureInfo.InvariantCulture ).Trim() ?? String.Empty;

        if( !String.IsNullOrWhiteSpace( key ) &amp;&amp; Int32.TryParse( valueStr, CultureInfo.InvariantCulture, NumberStyles.Any, out Int32 i32 )
        {
            if( !dict.TryAdd( key, i32 ) )
            {
                _ = MessageBox.Show( &quot;Encountered duplicate key \&quot;&quot; + key + &quot;\&quot;&quot;, MessageBoxIcon.Error, etc );
            }
        }
    }

    return dict;
}

</code></pre>
","2024-06-23 17:30:07","0","Answer"
"78659259","","Having some problem with this int.parse using IronXL","<p>I am using ironxl to import Excel data into a C# dictionary and I am unable to run the script:</p>
<pre><code>public Dictionary&lt;string, int&gt; ReadInputData_3()
{


    // Check if the file exists

    Dictionary&lt;string, int&gt; dataDictionary = new Dictionary&lt;string, int&gt;();
    WorkBook workBook =   WorkBook.Load(&quot;..\\..\\..\\ModbusTestJig.Helpers\\Input_data\\Input_data.xlsx&quot;);
    //WorkSheet workSheet = workBook.WorkSheets.First();
    WorkSheet workSheet = workBook.WorkSheets[0];
    foreach (var row in workSheet.Rows)
    {
        var key = row.Columns[0].Value.ToString(); // Assuming key is in the first column (column index 0)
        var value = row.Columns[1].Value.ToString(); // Assuming value is in the second column (column index 1)

        if (!string.IsNullOrEmpty(key))
        {
            dataDictionary.Add(key,int.Parse(value));
            //dataDictionary[key] = value;
        }
    }


    return dataDictionary;


}
</code></pre>
","2024-06-23 16:29:35","0","Question"
"78655722","","How to dynamically execute list.map inside a Widget (Dart/Flutter)","<p>I'm trying to dynamically add lines to a widget that would change depending on how many elements an array holds.</p>
<p>However, I run into the following error over the second list operator (everything inside the for-loop):
<code>The element type 'Set&lt;_ExerData&gt;' can't be assigned to the list type 'Widget'</code></p>
<p>Does anyone have a solution to this? Here is the block of code it is being executed in:</p>
<pre><code>Flexible(
  child: Column(
    children: [                              
      ...[
        ExerTitle(title, leftEdgeInset, 112),
      ]
        .map((menu) =&gt; _ExerTitle(
          title: menu.title,
          leftEdgeInset: menu.leftEdgeInset,
          time: menu.time,
        )),
              
      for (int i = 0; i &lt; exerArr.length; i++) {
      ...[
        ExerData(exerArr[i], setsArr[i], leftEdgeInset),
      ]
        .map((menu) =&gt; _ExerData(
          exer: menu.exer,
          sets: menu.sets,
          leftEdgeInset: menu.leftEdgeInset,
        )),
      }
    ],
  ),
),
</code></pre>
<p>This block of code is inside a container and should display a data for each iteration from 'ExerData' inside the Column()</p>
","2024-06-22 10:10:00","0","Question"
"78654548","78654463","","<p>If you also want to merge the type assets:</p>
<p>input:</p>
<pre class=""lang-py prettyprint-override""><code>list_of_dicts = [
    {
        &quot;team&quot;: &quot;X&quot;,
        &quot;description&quot;: &quot;A description of X&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEA&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            },
            {
                &quot;type&quot;: &quot;TYPEB&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            },
        ],
    },
    {
        &quot;team&quot;: &quot;X&quot;,
        &quot;description&quot;: &quot;A description of X&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEC&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            }
        ],
    },
    {
        &quot;team&quot;: &quot;Z&quot;,
        &quot;description&quot;: &quot;A description of Z&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEA&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            }
        ],
    },
    {
        &quot;team&quot;: &quot;Z&quot;,
        &quot;description&quot;: &quot;A description of Z&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEA&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_5_id&quot;, &quot;name&quot;: &quot;asset_5_name&quot;},
                        {&quot;id&quot;: &quot;asset_6_id&quot;, &quot;name&quot;: &quot;asset_6_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_7_id&quot;, &quot;name&quot;: &quot;asset_7_name&quot;},
                        {&quot;id&quot;: &quot;asset_8_id&quot;, &quot;name&quot;: &quot;asset_8_name&quot;},
                    ],
                },
            }
        ],
    },
]
</code></pre>
<p>function:</p>
<pre class=""lang-py prettyprint-override""><code>from pprint import pprint as print

def group_assets_by_team_and_type(list_of_dicts: list[dict]):
    &quot;&quot;&quot;
    Groups assets by team and type.

    Args:
        list_of_dicts (list[dict]): A list of dictionaries representing assets.

    Returns:
        list[dict]: A list of dictionaries containing assets grouped by team and type.
    &quot;&quot;&quot;
    assets_by_team: dict[str, dict] = {}
    for item in list_of_dicts:
        team = item[&quot;team&quot;]
        description = item[&quot;description&quot;]
        assets_by_team.setdefault(
            team, {&quot;team&quot;: team, &quot;description&quot;: description, &quot;types&quot;: {}}
        )
        for type_dict in item[&quot;types&quot;]:
            type_name = type_dict[&quot;type&quot;]
            assets_by_team[team][&quot;types&quot;].setdefault(
                type_name, {&quot;high_value&quot;: [], &quot;low_value&quot;: []}
            )
            assets_by_team[team][&quot;types&quot;][type_name][&quot;high_value&quot;].extend(
                type_dict[&quot;assets&quot;][&quot;high_value&quot;]
            )
            assets_by_team[team][&quot;types&quot;][type_name][&quot;low_value&quot;].extend(
                type_dict[&quot;assets&quot;][&quot;low_value&quot;]
            )
    return [
        {
            &quot;team&quot;: item[&quot;team&quot;],
            &quot;description&quot;: item[&quot;description&quot;],
            &quot;types&quot;: [
                {&quot;type&quot;: type_name, &quot;assets&quot;: assets}
                for type_name, assets in item[&quot;types&quot;].items()
            ],
        }
        for item in assets_by_team.values()
    ]

output = group_assets_by_team_and_type(list_of_dicts)
print(output, sort_dicts=False)
</code></pre>
<p>output:</p>
<pre class=""lang-py prettyprint-override""><code>output = [
    {
        &quot;team&quot;: &quot;X&quot;,
        &quot;description&quot;: &quot;A description of X&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEA&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            },
            {
                &quot;type&quot;: &quot;TYPEB&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            },
            {
                &quot;type&quot;: &quot;TYPEC&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            },
        ],
    },
    {
        &quot;team&quot;: &quot;Z&quot;,
        &quot;description&quot;: &quot;A description of Z&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEA&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                        {&quot;id&quot;: &quot;asset_5_id&quot;, &quot;name&quot;: &quot;asset_5_name&quot;},
                        {&quot;id&quot;: &quot;asset_6_id&quot;, &quot;name&quot;: &quot;asset_6_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                        {&quot;id&quot;: &quot;asset_7_id&quot;, &quot;name&quot;: &quot;asset_7_name&quot;},
                        {&quot;id&quot;: &quot;asset_8_id&quot;, &quot;name&quot;: &quot;asset_8_name&quot;},
                    ],
                },
            }
        ],
    },
]
</code></pre>
","2024-06-21 21:54:21","1","Answer"
"78654539","78654354","","<p>Just do something like:</p>
<pre><code>def format_template(cur_cols_dct, col):
    return f&quot;COMMENT IS '{cur_cols_dct[col]}'&quot;

print(format_template(some_dict, some_col))
</code></pre>
","2024-06-21 21:51:13","1","Answer"
"78654534","78654354","","<pre class=""lang-py prettyprint-override""><code>eval(f'f&quot;&quot;&quot;{templ}&quot;&quot;&quot;')
</code></pre>
<p>Or as a function:</p>
<pre class=""lang-py prettyprint-override""><code>def fstr(template):
    return eval(f'f&quot;&quot;&quot;{template}&quot;&quot;&quot;')
</code></pre>
<p>All credit to <a href=""https://stackoverflow.com/a/53671539/7906796"">kadee here</a>.
(The function as written in the answer doesn't work for your f-string containing quotes--it needs the multiline <code>&quot;&quot;&quot;</code> string delimiter. I've submitted an edit to the answer)</p>
","2024-06-21 21:48:08","-2","Answer"
"78654514","78654463","","<p>Create a dictionary whose keys are the team names. Then loop through your list of dictionaries, using this to merge the <code>types</code> lists for the same team.</p>
<pre><code>result_dict = {}

for d in list_of_dicts:
    if d['team'] in result_dict:
        result_dict[d['team']]['types'].extend(d['types'])
    else:
        result_dict[d['team']] = d

list_of_dicts = list(result_dict.values())
</code></pre>
","2024-06-21 21:38:18","2","Answer"
"78654469","78654354","","<p>You're attempting to use str.format as if it were a fully functional template language, which it is not. However, you can perform the details while passing arguments to it.</p>
<pre><code>template = &quot;COMMENT IS '{comment}'&quot;
cur_cols_dct = {'art_id': 'ID of article'}
col = 'art_id'
print(template.format(comment=cur_cols_dct[col]))
</code></pre>
<blockquote>
<p>COMMENT IS 'ID of article'</p>
</blockquote>
<p>Here is the documentation for str.format()<br />
<a href=""https://docs.python.org/3/library/stdtypes.html#str.format"" rel=""nofollow noreferrer"">https://docs.python.org/3/library/stdtypes.html#str.format</a></p>
<p>There is a string.Template class in the standard library, but I've only used django templates in python.</p>
","2024-06-21 21:17:47","1","Answer"
"78654463","","How to combine complex dicts in list of complex dicts where key appears multiple times","<p>I have a list of dicts, where each dict refers to a team and its assets.</p>
<p>e.g.</p>
<pre class=""lang-py prettyprint-override""><code>list_of_dicts = [
    {
        &quot;team&quot;: &quot;X&quot;,
        &quot;description&quot;: &quot;A description of X&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEA&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            },
            {
                &quot;type&quot;: &quot;TYPEB&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            },
        ],
    },
    {
        &quot;team&quot;: &quot;X&quot;,
        &quot;description&quot;: &quot;A description of X&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEC&quot;,
                &quot;assets&quot;: {
                    &quot;high_value&quot;: [
                        {&quot;id&quot;: &quot;asset_1_id&quot;, &quot;name&quot;: &quot;asset_1_name&quot;},
                        {&quot;id&quot;: &quot;asset_2_id&quot;, &quot;name&quot;: &quot;asset_2_name&quot;},
                    ],
                    &quot;low_value&quot;: [
                        {&quot;id&quot;: &quot;asset_3_id&quot;, &quot;name&quot;: &quot;asset_3_name&quot;},
                        {&quot;id&quot;: &quot;asset_4_id&quot;, &quot;name&quot;: &quot;asset_4_name&quot;},
                    ],
                },
            }
        ],
    },
]
</code></pre>
<p>Where here, there are 2 dicts for team X, with different Types (<code>TYPEA</code> and <code>TYPEB</code>, then another with <code>TYPEC</code>), there will also be 2 dicts for Team Y, maybe 3 for team Z etc.</p>
<p>My desired outcome, is to have a list of dicts, where there is only 1 dict for Team X, that has Type A, B and C together.</p>
<p>*Have not listed desired outcome as makes for very long example. Happy to add.</p>
<p>Would look something like:</p>
<pre class=""lang-py prettyprint-override""><code>list_of_dicts = [
    {
        &quot;team&quot;: &quot;X&quot;,
        &quot;description&quot;: &quot;A description of X&quot;,
        &quot;types&quot;: [
            {
                &quot;type&quot;: &quot;TYPEA&quot;,
                &quot;assets&quot;: {...},
            {,
            {
                &quot;type&quot;: &quot;TYPEB&quot;,
                &quot;assets&quot;: {...},
            {,
            {
                &quot;type&quot;: &quot;TYPEC&quot;,
                &quot;assets&quot;: {...},
            {,
        ],
    },
]
</code></pre>
","2024-06-21 21:15:10","1","Question"
"78654354","","Difference between format(**locals()) and f-string when using variable as key for dictionaries","<p>I have a string <code>templ</code> with variable part that I have to convert with local variables. Variable part of string have a dictionary <code>cur_cols_dct</code> from which I want to get a single value. Key of a dictionary is also a variable: <code>col</code></p>
<pre><code>templ = &quot;COMMENT IS '{cur_cols_dct[col]}'&quot; # string with variable part
cur_cols_dct = {'art_id':'ID of article'}  # dictionary
col = 'art_id'                             # variable for dictionary key
</code></pre>
<p>I have to get string with a single value from a dictionary:</p>
<pre><code>COMMENT IS 'ID of article'
</code></pre>
<p>I can use f-string for this goal and it works:</p>
<pre><code>print (f&quot;COMMENT IS '{cur_cols_dct[col]}'&quot;)
</code></pre>
<p>But when I try to use <code>format(locals())</code> it doesn't work, because Python can't recognize that 'col' is not a literal but a variable:</p>
<pre><code>print(templ.format(**locals()))
</code></pre>
<p>I get an error: <code>KeyError: 'col'</code></p>
<p>But I can't use f-string in this case because I define <code>templ</code> before I get <code>cur_cols_dct</code> and <code>col</code> variables.</p>
<p>Is there any way to get value from dictionary when both dictionary and key value are variables by using <code>format(**locals())</code>? Or what can I use instead of format?</p>
","2024-06-21 20:32:32","0","Question"
"78645296","78645263","","<p>You can use <code>[feature['properties']['id'] for feature in gj['features']]</code>:</p>
<h3>Code</h3>
<pre><code>import mapillary as mly

mly.interface.set_access_token('here_is_my_private_token')
gj = mly.interface.get_image_close_to(longitude=11.49385, latitude=48.05053, radius=50)

D = gj.to_dict()

_filter = lambda x: [feature['properties']['id'] for feature in x['features']]

print(_filter(D))

</code></pre>
<h3>Test</h3>
<pre><code>_filter = lambda x: [feature['properties']['id'] for feature in x['features']]


gj = {
    'type': 'FeatureCollection',
    'features': [
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [11.49345874786377, 48.050743224759515]
            },
            'properties': {
                'captured_at': 1560688528671,
                'compass_angle': 219.55442810059,
                'creator_id': 105621578345075,
                'id': 156304466376583,
                'is_pano': False,
                'sequence_id': 'q88pqp6h720xf4tf3x0mut'
            }
        },
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [11.49367868900299, 48.05092969456331]
            },
            'properties': {
                'captured_at': 1560688523518,
                'compass_angle': 218.94528198242,
                'creator_id': 105621578345075,
                'id': 4152401114851048,
                'is_pano': False,
                'sequence_id': 'q88pqp6h720xf4tf3x0mut'
            }
        },
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [11.493721604347229, 48.0509691400122]
            },
            'properties': {
                'captured_at': 1560688522466,
                'compass_angle': 216.1079864502,
                'creator_id': 105621578345075,
                'id': 957272818356791,
                'is_pano': False,
                'sequence_id': 'q88pqp6h720xf4tf3x0mut'
            }
        },
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [11.493549942970276, 48.05081852995386]
            },
            'properties': {
                'captured_at': 1560688526608,
                'compass_angle': 216.87623596191,
                'creator_id': 105621578345075,
                'id': 195685349071104,
                'is_pano': False,
                'sequence_id': 'q88pqp6h720xf4tf3x0mut'
            }
        },
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [11.493507027626038, 48.0507790843896]
            },
            'properties': {
                'captured_at': 1560688527607,
                'compass_angle': 217.21737670898,
                'creator_id': 105621578345075,
                'id': 494493828463470,
                'is_pano': False,
                'sequence_id': 'q88pqp6h720xf4tf3x0mut'
            }
        },
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [11.493635773658752, 48.05089383503807]
            },
            'properties': {
                'captured_at': 1560688524562,
                'compass_angle': 217.47109985352,
                'creator_id': 105621578345075,
                'id': 5440816592658176,
                'is_pano': False,
                'sequence_id': 'q88pqp6h720xf4tf3x0mut'
            }
        },
        {
            'type': 'Feature',
            'geometry': {
                'type': 'Point',
                'coordinates': [11.493603587150574, 48.05086514739992]
            },
            'properties': {
                'captured_at': 1560688525562,
                'compass_angle': 216.0885925293,
                'creator_id': 105621578345075,
                'id': 916290425872451,
                'is_pano': False,
                'sequence_id': 'q88pqp6h720xf4tf3x0mut'
            }
        }
    ]
}

print(_filter(gj))

</code></pre>
<h3>Prints</h3>
<p>[156304466376583, 4152401114851048, 957272818356791, 195685349071104, 494493828463470, 5440816592658176, 916290425872451]</p>
","2024-06-20 02:45:49","0","Answer"
"78645263","","How to access data in a GeoJSON object?","<p>I use the Mapillary API to get images of cities by coordinates. I make an API call to get the image ID's that I want:</p>
<pre><code>import mapillary as mly
mly.interface.set_access_token('here_is_my_private_token')
gj = mly.interface.get_image_close_to(longitude=11.49385, latitude=48.05053, radius=50)

print(gj)
</code></pre>
<p>This creates a GeoJSON object. The print statement for these example coordinates gives me this:</p>
<pre><code>{'type': 'FeatureCollection', 'features': [{'type': Feature, 'geometry': {'type': Point, 'coordinates': [11.49345874786377, 48.050743224759515]}, 'properties': {'captured_at': 1560688528671, 'compass_angle': 219.55442810059, 'creator_id': 105621578345075, 'id': 156304466376583, 'is_pano': False, 'sequence_id': 'q88pqp6h720xf4tf3x0mut'}}, {'type': Feature, 'geometry': {'type': Point, 'coordinates': [11.49367868900299, 48.05092969456331]}, 'properties': {'captured_at': 1560688523518, 'compass_angle': 218.94528198242, 'creator_id': 105621578345075, 'id': 4152401114851048, 'is_pano': False, 'sequence_id': 'q88pqp6h720xf4tf3x0mut'}}, {'type': Feature, 'geometry': {'type': Point, 'coordinates': [11.493721604347229, 48.0509691400122]}, 'properties': {'captured_at': 1560688522466, 'compass_angle': 216.1079864502, 'creator_id': 105621578345075, 'id': 957272818356791, 'is_pano': False, 'sequence_id': 'q88pqp6h720xf4tf3x0mut'}}, {'type': Feature, 'geometry': {'type': Point, 'coordinates': [11.493549942970276, 48.05081852995386]}, 'properties': {'captured_at': 1560688526608, 'compass_angle': 216.87623596191, 'creator_id': 105621578345075, 'id': 195685349071104, 'is_pano': False, 'sequence_id': 'q88pqp6h720xf4tf3x0mut'}}, {'type': Feature, 'geometry': {'type': Point, 'coordinates': [11.493507027626038, 48.0507790843896]}, 'properties': {'captured_at': 1560688527607, 'compass_angle': 217.21737670898, 'creator_id': 105621578345075, 'id': 494493828463470, 'is_pano': False, 'sequence_id': 'q88pqp6h720xf4tf3x0mut'}}, {'type': Feature, 'geometry': {'type': Point, 'coordinates': [11.493635773658752, 48.05089383503807]}, 'properties': {'captured_at': 1560688524562, 'compass_angle': 217.47109985352, 'creator_id': 105621578345075, 'id': 5440816592658176, 'is_pano': False, 'sequence_id': 'q88pqp6h720xf4tf3x0mut'}}, {'type': Feature, 'geometry': {'type': Point, 'coordinates': [11.493603587150574, 48.05086514739992]}, 'properties': {'captured_at': 1560688525562, 'compass_angle': 216.0885925293, 'creator_id': 105621578345075, 'id': 916290425872451, 'is_pano': False, 'sequence_id': 'q88pqp6h720xf4tf3x0mut'}}]}
</code></pre>
<p>I want a list that contains all the values of the key 'id'. The rest of the data is not needed. I thought I'd use nested dictionary logic to get these values:</p>
<pre><code>id = gj['features'][0]['properties']['id']
features = gj['features']
</code></pre>
<p>This throws:</p>
<blockquote>
<p>TypeError: 'GeoJSON' object is not subscriptable</p>
</blockquote>
<p>I tried standard dictionary attributes:</p>
<pre><code>keys = gj.keys()
values = gj.values()
</code></pre>
<p>This throws:</p>
<blockquote>
<p>AttributeError: 'GeoJSON' object has no attribute 'keys', 'values'...</p>
</blockquote>
<p>Apparently a GeoJSON object looks like a dictionary but works differently. How do I get my needed list?</p>
","2024-06-20 02:28:56","1","Question"
"78644770","78644697","","<p>If I understand you want to have key of dictionary which will be month and year. Instead of use key <code>'June24'</code>, use <code>date.today().strftime(&quot;%b%y&quot;)</code>.
But I think much better structure would be</p>
<pre><code>today=date.today()
device[&quot;Log_Cabin&quot;][&quot;year&quot;][today.year][&quot;month&quot;][today.month][&quot;day&quot;][today.day] = value
</code></pre>
","2024-06-19 21:48:08","1","Answer"
"78644697","","Using Nested Objects in Python with objects named after variable (date)","<p>I'm trying to create a short python script to reformat some JSON from a webdevice and create a new JSON file, eventually to put on a webserver for local access on my network. I'm using some beginner python literature and a bit of goggling and so far I have :</p>
<pre class=""lang-py prettyprint-override""><code>import json
from datetime import date
import requests
import os

#create JSON structure as object names device

currentmonth = date.today().strftime(&quot;%Y%m%d&quot;)

device ={} #create empty ojects
month = {}
June24={}
Log_Cabin={}
Monthly_Total={}

month['June24'] = June24
device['Log_Cabin'] = Log_Cabin
Log_Cabin['month'] = month
month['Monthly Total'] = Monthly_Total


#capture JSON from shelly device
url = 'http://192.168.0.241/cm?cmnd=Status%208'
resp = requests.get(url=url)
data = resp.json() 

#assign values to variables
currentenergy = (data['StatusSNS']['ENERGY']['Power'])
totalenergyused = (data['StatusSNS']['ENERGY']['Total'])
filename = date.today().strftime(&quot;%B%y&quot;) + '.json'
key = date.today().strftime(&quot;%Y%m%d&quot;) #establish key as todays date
value = currentenergy # establish value as energyvariable
print(value)

try:
    with open(filename, 'r') as f:
        contents = f.read() or '{}'
    data = json.loads(contents)
except (FileNotFoundError, json.JSONDecodeError) as e:
    print(&quot;Error&quot;)

device[&quot;Log_Cabin&quot;][&quot;month&quot;]['June24'][key] = value
print(value)
with open(filename, 'w+') as f:
        print(json.dumps(device), file=f)
</code></pre>
<p>This will create the basic structure on the file and update 1 value in the June24 part of the nested object. I would though like this part of the JSON object to be named dynamically as the month using datetime.</p>
","2024-06-19 21:22:41","0","Question"
"78644607","78644575","","<p>You may want to consider trying this approach; based on similar cases, it has shown promising results and could potentially resolve the issue you're encountering.</p>
<pre><code>    public static async Task&lt;Dictionary&lt;string, string&gt;&gt; GetFilesAndHashesAsync(string pathToDirectory, IProgress&lt;double&gt;? progress = null)
{
    var filesDictionary = new Dictionary&lt;string, string&gt;();
    using (var sha = SHA256.Create())
    {
        if (!Directory.Exists(pathToDirectory))
        {
            throw new DirectoryNotFoundException($&quot;Directory not found: {pathToDirectory}&quot;);
        }

        var files = Directory.EnumerateFiles(pathToDirectory).ToArray();
        var totalFiles = files.Length;
        double processedFiles = 0;

        foreach (var file in files)
        {
            using (var fileStream = File.OpenRead(file))
            {
                var hashBytes = await sha.ComputeHashAsync(fileStream);
                var hashString = BitConverter.ToString(hashBytes).Replace(&quot;-&quot;, string.Empty);
                filesDictionary.Add(Path.GetFileName(file), hashString);
            }

            processedFiles++;
            progress?.Report(processedFiles / totalFiles * 100);
        }
    }

    return filesDictionary;
}

</code></pre>
","2024-06-19 20:52:50","1","Answer"
"78644575","","How can I get a all the files present in a directory with their hashes as a Dictionary in C#?","<p>I have a directory countaining a lot of files (around 650 files) and i want to get all the files present in this directory with their hash (something like sha256 or sha512) in a Dictionary while seeing the percentage of the operation? Because I assume that it would take some time to hash them.</p>
","2024-06-19 20:44:47","1","Question"
"78643473","78642944","","<p>There are probably many ways of fixing up that counter. Here is one:</p>
<p>We start by ensuring that we run on numpy arrays. See my last side-note at the bottom about this.</p>
<pre class=""lang-py prettyprint-override""><code>z = np.asarray(z)
</code></pre>
<p>We then detect that a wrap-around happened:</p>
<pre class=""lang-py prettyprint-override""><code>wraparound = z[1:] &lt; z[:-1]
</code></pre>
<p>This gives us an array like <code>[false, false, ..., true, false, ..., true, false, ...]</code>. We convert this to an integer array <code>[0, 0, ..., 1, 0, ..., 1, 0, ...]</code>.</p>
<pre class=""lang-py prettyprint-override""><code>wraparound = wraparound.astype(int)
</code></pre>
<p>We can then use <a href=""https://numpy.org/doc/stable/reference/generated/numpy.cumsum.html"" rel=""nofollow noreferrer""><code>np.cumsum</code></a> to accumulate how often a wrap-around happened up to the given index. This gives us an array <code>[0, 0, ..., 1, 1, ... 2, 2, ...]</code>.</p>
<pre class=""lang-py prettyprint-override""><code>wraparound = wraparound.cumsum()
</code></pre>
<p>Now we just need to multiply with 256 and add it to the counter. Note that the <code>wraparound</code> array has one fewer entries than the base counter.</p>
<pre class=""lang-py prettyprint-override""><code>counter = z.astype(int)
counter[1:] += wraparound
</code></pre>
<p>To write it in as few lines as possible:</p>
<pre class=""lang-py prettyprint-override""><code>z = np.asarray(z)
counter = z.astype(int)
counter[1:] += (z[1:] &lt; z[:-1]).astype(int).cumsum() * 256
</code></pre>
<p>Side note: <code>x, y, z = zip(*relevent_data)</code> is very inefficient since it replaces all numpy arrays with basic Python types. Write this instead to get transposed array views: <code>x, y, z = relevent_data.T</code></p>
","2024-06-19 15:41:02","1","Answer"
"78642944","","Continue counting after 8-bit counter is full in dict","<p>Lets start off that this is my first python program, so I will have some misconceptions on how parts of the code work.</p>
<p>Data is extracted from a 8-bit memory, this data is saved in a HDF5 file and I need to work with this HDF5 data. The dictionary I want to work with of this file has 3 keys with each key having multiple values. One of the keys is a counter and when it reached 256, it will reset to 0. This is expected due to the 8-bit memory.</p>
<p>So my challenge is to read the data of this key and when it overflows, then instead of resetting, counting up from the previous value. this is needed to make continues plots with the counter on the x-axis.</p>
<p>My issues starts with how to read out the values of a specific key one-by-one and, when needed, changing it. For the semi-working code(that resets the counter to 0, but does plot it) I used zip() to unpack the dict to a tuple(?). But after this i'm stuck again.</p>
<p>Here is the whole code so far.</p>
<pre><code>import h5py
import matplotlib.pyplot as plt
import numpy as np
from pathlib import Path

measdatapath =  Path(r'C:\Users\...')
title = 'Best_test_data_ever.hdf5'
plotpath = measdatapath / title

data = h5py.File(plotpath, 'r')
list(data.keys())

relevant_data = data['HDF5Data'][:]

# variable z is the counter

x, y, z = zip(*relevent_data)

fig, axs = plt.subplots(2,1, sharex=True)

axs[0].plot(z,x)
axs[0].set_ylabel(&quot;Awesome line&quot;)
axs[0].xaxis.set_label_position('top')
axs[0].set_title(title)


axs[1].plot(z,y)
axs[1].set_ylabel(&quot;Almost as awesome line&quot;)

axs[1].set_xlabel(&quot;Broken counter&quot;)


plt.show()
</code></pre>
<p>to summarize my challenges:</p>
<ul>
<li>How to read the data from a dict or tuple one-by-one and change it if necessary</li>
<li>How to continue counting when the counter reaches 256 instead of resetting</li>
</ul>
<p>Note: above is scrambled code from different sources, I have a limited idea of what I am doing, but eager to learn.</p>
<p>so far I have tried to look up online how to solve this with a tuple or dict, but it didn't help.</p>
<p>Edit: The counting goes from 0 to 255 and then resets to 0. Below the current counting I have from the data:</p>
<blockquote>
<p>(3, 7, 10, 14, 17, 21, 24, 28, 31, 34, 39, 42, 45, 48, 51, 54, 57, 61, 64, 67, 70, 73, 77, 80, 84, 88, 91, 94, 98, 100, 104, 107, 111, 114, 117, 121, 124, 127, 131, 133, 137, 140, 143, 146, 150, 153, 157, 160, 164, 167, 170, 173, 176, 179, 183, 186, 189, 191, 195, 198, 201, 203, 207, 210, 213, 217, 220, 223, 227, 230, 233, 236, 240, 243, 246, 249, 253, 1, 4, 8, 11, 15, 18, 22, 25, 28, 32, 35, 39, 42, 46, 49, 52, 55, 58, 61, 65, 68, 72, 75)</p>
</blockquote>
","2024-06-19 13:54:41","1","Question"
"78641766","78641599","","<pre><code>import pandas as pd

# Read the CSV file into a DataFrame
df = pd.read_csv('data.csv')

# Initialize an empty dictionary to hold the final nested structure
nested_dict = {}

# Group by 'name' and 'columns'
grouped = df.groupby(['name', 'columns'])['tests'].apply(list).reset_index()

# Iterate through the grouped DataFrame to construct the nested dictionary
for _, row in grouped.iterrows():
    name = row['name']
    column = row['columns']
    tests = row['tests']

    # If the name is not in the dictionary, add it with an empty 'columns' list
    if name not in nested_dict:
        nested_dict[name] = {'name': name, 'columns': []}

    # Append the column and its tests to the 'columns' list
    nested_dict[name]['columns'].append({'name': column, 'tests': tests})

# Since we have only one 'name', we extract the value from the nested dictionary
result = nested_dict['ABC_ESTIMATE_REFINED']

print(result)
</code></pre>
","2024-06-19 09:48:41","1","Answer"
"78641688","78641599","","<p>Something like:</p>
<pre><code>g = df.groupby([&quot;name&quot;, &quot;columns&quot;]).agg({&quot;tests&quot;: list})\
      .reset_index().rename(columns={&quot;name&quot;: &quot;index&quot;, &quot;columns&quot;: &quot;name&quot;})\
      .set_index(&quot;index&quot;)

result = {
    &quot;name&quot;: g.index[0],
    &quot;columns&quot;: g.to_dict(orient=&quot;records&quot;)
}
</code></pre>
<p>Seems to do the job for the expected output in your OP.</p>
<p>Indeed if there is multiple modalities of <code>name</code> you will have to store it as a list of dictionary instead:</p>
<pre><code>df = pd.read_csv(io.StringIO(&quot;&quot;&quot;name,columns,tests
ABC_ESTIMATE_REFINED,cntquota,dbt_expectations.expect_column_to_exist
ABC_ESTIMATE_REFINED,cntquota,not_null
ABC_ESTIMATE_REFINED,is_purged,dbt_expectations.expect_column_to_exist
ABC_ESTIMATE_REFINED,is_purged,not_null
ABC_ESTIMATE_REFINED2,cntquota,dbt_expectations.expect_column_to_exist
ABC_ESTIMATE_REFINED2,cntquota,not_null
ABC_ESTIMATE_REFINED2,is_purged,dbt_expectations.expect_column_to_exist
ABC_ESTIMATE_REFINED2,is_purged,not_null&quot;&quot;&quot;))

g = df.groupby([&quot;name&quot;, &quot;columns&quot;]).agg({&quot;tests&quot;: list})\
      .reset_index().rename(columns={&quot;name&quot;: &quot;index&quot;, &quot;columns&quot;: &quot;name&quot;})\
      .set_index(&quot;index&quot;)

result = []
for key in g.index.unique():
    result.append({
        &quot;name&quot;: key,
        &quot;columns&quot;: g.loc[key,:].to_dict(orient=&quot;records&quot;)
    })
</code></pre>
<p>Which will render:</p>
<pre><code>[{'name': 'ABC_ESTIMATE_REFINED',
  'columns': [{'name': 'cntquota',
    'tests': ['dbt_expectations.expect_column_to_exist', 'not_null']},
   {'name': 'is_purged',
    'tests': ['dbt_expectations.expect_column_to_exist', 'not_null']}]},
 {'name': 'ABC_ESTIMATE_REFINED2',
  'columns': [{'name': 'cntquota',
    'tests': ['dbt_expectations.expect_column_to_exist', 'not_null']},
   {'name': 'is_purged',
    'tests': ['dbt_expectations.expect_column_to_exist', 'not_null']}]}]
</code></pre>
","2024-06-19 09:36:19","2","Answer"
"78641613","78641599","","<p>IIUC, you can use nested <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html"" rel=""nofollow noreferrer""><code>groupby</code></a> calls:</p>
<pre><code>out = [{'name': k1, 'columns': [{'name': k2, 'tests': g2['tests'].tolist()}
                                for k2, g2 in g1.groupby('columns')]}
       for k1, g1 in df.groupby('name')]
</code></pre>
<p>Since the processing occurs by pairs or columns, you could also imagine a recursive approach:</p>
<pre><code>def group(df, keys):
    if len(keys) &gt; 1:
        key1, key2 = keys[:2]
        return [{key1: k, key2: group(g, keys[1:])}
                for k, g in df.groupby(key1)]
    else:
        return df[keys[0]].tolist()

out = group(df, ['name', 'columns', 'tests'])
</code></pre>
<p>Output:</p>
<pre><code>[{'name': 'ABC_ESTIMATE_REFINED',
  'columns': [{'name': 'cntquota',
               'tests': ['dbt_expectations.expect_column_to_exist', 'not_null']},
              {'name': 'is_purged',
               'tests': ['dbt_expectations.expect_column_to_exist', 'not_null']}],
 }]
</code></pre>
<p>Demo of the recursive approach with a different order of the keys:</p>
<pre><code>group(df, ['name', 'tests', 'columns'])

[{'name': 'ABC_ESTIMATE_REFINED',
  'tests': [{'tests': 'dbt_expectations.expect_column_to_exist',
             'columns': ['cntquota', 'is_purged']},
            {'tests': 'not_null', 'columns': ['cntquota', 'is_purged']}],
}]
</code></pre>
","2024-06-19 09:23:26","2","Answer"
"78641599","","CSV data format to nested dictionary","<p>I have below csv format. I want it to convert some nested dict.</p>
<pre><code>name,columns,tests
ABC_ESTIMATE_REFINED,cntquota,dbt_expectations.expect_column_to_exist
ABC_ESTIMATE_REFINED,cntquota,not_null
ABC_ESTIMATE_REFINED,is_purged,dbt_expectations.expect_column_to_exist
ABC_ESTIMATE_REFINED,is_purged,not_null
</code></pre>
<p>Expected Output</p>
<pre><code>{
    &quot;name&quot;: &quot;ABC_ESTIMATE_REFINED&quot;,
    &quot;columns&quot;: [
        {
            &quot;name&quot;: &quot;cntquota&quot;,
            &quot;tests&quot;: [
                &quot;dbt_expectations.expect_column_to_exist&quot;,
                &quot;not_null&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;is_purged&quot;,
            &quot;tests&quot;: [
                &quot;dbt_expectations.expect_column_to_exist&quot;,
                &quot;not_null&quot;
            ]
        }
    ]
}
</code></pre>
<p>my attempt is below , but not reaching even close to it.</p>
<pre><code>df=pd.read_csv('data.csv')
print(df)
nested_dict = df.groupby(['name','columns']).apply(lambda x: x[['tests']].to_dict(orient='records')).to_dict()
 
print(nested_dict)
</code></pre>
","2024-06-19 09:19:29","0","Question"
"78640067","78639247","","<p>It depends on how the parquet file is read and what is meant by &quot;find the values&quot;. Generally, a <code>Table</code>'s columns are <code>ChunkedArray</code>s, where each chunk is an <code>Array</code>, in this case a <code>DictionaryArray</code>. <code>ChunkedArray</code>s can be combined to get an <code>Array</code>.</p>
<pre class=""lang-py prettyprint-override""><code>import pyarrow as pa

column = table['dummy_column']
isinstance(column, pa.ChunkedArray)
array = column.combine_chunks()
isinstance(array, pa.DictionaryArray)

array.dictionary  # set of potential values
array.unique().dictionary_decode()  # set of actual values
</code></pre>
<p>The <a href=""https://arrow.apache.org/docs/python/generated/pyarrow.dataset.Dataset.html#pyarrow.dataset.Dataset.to_batches"" rel=""nofollow noreferrer"">dataset api</a> can read in batches, getting the values of each array iteratively.</p>
<pre class=""lang-py prettyprint-override""><code>pa.chunked_array(batch['dummy_column'].unique() for batch in ds.dataset(...).to_batches(columns=['dummy_column'])).unique()
</code></pre>
<p>Each <code>DictionaryArray</code> has its own dictionary. They are often the same dictionary, but not guaranteed; depends on how the dataset was written. In your case, you may be able to read just the first array's dictionary.</p>
","2024-06-19 00:18:35","1","Answer"
"78639332","78635537","","<p>I think it would be wise to check if there are enough resources to fulfill the order before cutting any resource. We can do this with help of a function, that returns <code>None</code> if the user choice cannot be processed (i.e. not enough resources), or a dictionary with the updated quantities of the components used to complete the order:</p>
<pre><code>def reduce_resources(choice, menu, resources):
    '''Return a dictionary of reduced resource items required 
    to fulfill the choice, or None if there are insufficient resources
    '''
    reduced = {}
    for item, amount in menu[choice]['ingredients'].items():
        if amount &gt; resources.get(item, 0):    # use get() in case if the required item isn't represented in resources
            return None
        reduced[item] = resources[item] - amount
    return reduced
</code></pre>
<p>So the order processing might look like this:</p>
<pre><code>print('Choose from:', ', '.join(MENU))
while True:
    choice = input('&gt; ')
    if choice in MENU: 
        break
reduced = reduce_resources(choice, MENU, resources)
if reduced:
    resources.update(reduced)
else:
    print('Not enough resources to process', choice)
print(f'Current amount of resources:')
print('\n'.join(f'{item}: {amount}' 
                for item, amount in resources.items()))
</code></pre>
","2024-06-18 19:36:27","-1","Answer"
"78639247","","How to get the values of a dictionary type from a parquet file using pyarrow?","<p>I have a parquet file which I am reading with pyarrow.</p>
<pre><code>In [83]: pq.read_schema('dummy_file.parquet').field('dummy_column').type
Out[83]: DictionaryType(dictionary&lt;values=string, indices=int32, ordered=0&gt;)
</code></pre>
<p>It says it is a column of dictionary type which is similar to a sql enum or pandas category type. Now I want to find the values present in the dictionary type, how do I do that?</p>
<p>It says in <a href=""https://arrow.apache.org/docs/python/generated/pyarrow.DictionaryType.html#pyarrow.DictionaryType.value_type"" rel=""nofollow noreferrer"">here</a> that:</p>
<blockquote>
<p>The dictionary values are found in an instance of DictionaryArray.</p>
</blockquote>
<p>But how do I get this <code>DictionaryArray</code>?</p>
<hr />
","2024-06-18 19:15:17","1","Question"
"78638444","78637317","","<p>Assuming that each table only has one row per <code>ID</code>, you can create a <code>MapType</code> column for each of the table's fields using <a href=""https://spark.apache.org/docs/3.1.1/api/python/reference/api/pyspark.sql.functions.create_map.html"" rel=""nofollow noreferrer"">create_map</a>, then inner join the two tables. Here is a smaller example:</p>
<pre><code>table1 = spark.createDataFrame(
    [(&quot;1&quot;, 34, 45), (&quot;2&quot;, 78, 89)], 
    [&quot;ID&quot;,&quot;col1&quot;,&quot;col2&quot;]
)

table2 = spark.createDataFrame(
    [(&quot;1&quot;, 43, 54), (&quot;2&quot;, 11, 12)], 
    [&quot;ID&quot;,&quot;col1&quot;,&quot;col2&quot;]
)

table1 = table1.withColumn(&quot;table1_cols&quot;, F.create_map(
    F.lit(&quot;col1&quot;), F.col(&quot;col1&quot;), F.lit(&quot;col2&quot;), F.col(&quot;col2&quot;)
)
table2 = table2.withColumn(&quot;table2_cols&quot;, F.create_map(
    F.lit(&quot;col1&quot;), F.col(&quot;col1&quot;), F.lit(&quot;col2&quot;), F.col(&quot;col2&quot;)
)

table1.join(table2, on=[&quot;ID&quot;], how='inner').select(
    'ID','table1_cols','table2_cols'
)
</code></pre>
<p>Here is the resulting table and schema:</p>
<pre><code>+---+------------------------+------------------------+
|ID |table1_cols             |table2_cols             |
+---+------------------------+------------------------+
|1  |{col1 -&gt; 34, col2 -&gt; 45}|{col1 -&gt; 43, col2 -&gt; 54}|
|2  |{col1 -&gt; 78, col2 -&gt; 89}|{col1 -&gt; 11, col2 -&gt; 12}|
+---+------------------------+------------------------+

root
 |-- ID: string (nullable = true)
 |-- table1_cols: map (nullable = false)
 |    |-- key: string
 |    |-- value: long (valueContainsNull = true)
 |-- table2_cols: map (nullable = false)
 |    |-- key: string
 |    |-- value: long (valueContainsNull = true)
</code></pre>
","2024-06-18 15:46:56","3","Answer"
"78637911","78636597","","<p>If you use <code>Newtonsoft</code>, you can use the <code>JsonExtensionData</code> attribute.
See: <a href=""https://www.newtonsoft.com/json/help/html/SerializationAttributes.htm#JsonExtensionDataAttribute"" rel=""nofollow noreferrer"">JsonExtensionDataAttribute</a></p>
<p><em>The JsonExtensionDataAttribute instructs the JsonSerializer to deserialize properties with no matching field or property on the type into the specified collection. During serialization the values in this collection are written back to the instance's JSON object.</em></p>
<p>For example:</p>
<pre><code>public class Tram
{
    [JsonExtensionData]
    public Dictionary&lt;string, object&gt; LTRAMT { get; set; }

    [JsonProperty(&quot;OTHER&quot;)]
    public string Other { get; set; }
}
</code></pre>
<p>Note: You must use a <code>Dictionary&lt;string, object&gt;</code> not <code>Dictionary&lt;string, string&gt;</code></p>
","2024-06-18 13:56:22","0","Answer"
"78637317","","Is there a way to store a dictionary as a column value in pyspark?","<p>I have two spark dfs containing different number of columns with the 1st column being the ID (for both). I want to have the column values for each ID as a dictionary (the visual would make better sense of what I am trying to achieve)</p>
<p>what I have:</p>
<p><a href=""https://i.sstatic.net/JFds9Z2C.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/JFds9Z2C.png"" alt="""" /></a></p>
<p>The result I am trying to get</p>
<p><a href=""https://i.sstatic.net/cWWdIMDg.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/cWWdIMDg.png"" alt="""" /></a></p>
<p>What I tried but couldn't get the result:
=&gt; [row.asDict() for row in df.collect()] to get a list of dictionaries but could not find a way to add each as column value.</p>
<p>PS: I understand my question could be XYProblem but, since, I do not know all the concepts available in pyspark/python, this is the best way I could think of to present the issue.</p>
","2024-06-18 12:07:35","2","Question"
"78636597","","Map fields dynamically in c#.Need an alternative to Reflection","<p>I have below fields in my class</p>
<pre><code> [JsonProperty(&quot;LTR-AMT-1&quot;)]
 public string? LTRAMT1 { get; set; }
 [JsonProperty(&quot;LTR-AMT-2&quot;)]
 public string? LTRAMT2 { get; set; }
 [JsonProperty(&quot;LTR-AMT-3&quot;)]
 public string? LTRAMT3 { get; set; }
 [JsonProperty(&quot;LTR-AMT-4&quot;)]
 public string? LTRAMT4 { get; set; }
 [JsonProperty(&quot;LTR-AMT-5&quot;)]
 public string? LTRAMT5 { get; set; }
 [JsonProperty(&quot;LTR-AMT-6&quot;)]
 public string? LTRAMT6 { get; set; }
 [JsonProperty(&quot;LTR-AMT-7&quot;)]
 public string? LTRAMT7 { get; set; }
 [JsonProperty(&quot;LTR-AMT-8&quot;)]
 public string? LTRAMT8 { get; set; }
 [JsonProperty(&quot;LTR-AMT-9&quot;)]
 public string? LTRAMT9 { get; set; }
 [JsonProperty(&quot;LTR-AMT-10&quot;)]
 public string? LTRAMT10 { get; set; }
 [JsonProperty(&quot;LTR-AMT-11&quot;)]
 public string? LTRAMT11 { get; set; }
 [JsonProperty(&quot;LTR-AMT-12&quot;)]
 public string? LTRAMT12 { get; set; }
 [JsonProperty(&quot;LTR-AMT-13&quot;)]
 public string? LTRAMT13 { get; set; }
 [JsonProperty(&quot;LTR-AMT-14&quot;)]
 public string? LTRAMT14 { get; set; }
 [JsonProperty(&quot;LTR-AMT-15&quot;)]
 public string? LTRAMT15 { get; set; }
 [JsonProperty(&quot;LTR-AMT-16&quot;)]
 public string? LTRAMT16 { get; set; }
 [JsonProperty(&quot;LTR-AMT-17&quot;)]
 public string? LTRAMT17 { get; set; }
 [JsonProperty(&quot;LTR-AMT-18&quot;)]
 public string? LTRAMT18 { get; set; }
 [JsonProperty(&quot;LTR-AMT-19&quot;)]
 public string? LTRAMT19 { get; set; }
 [JsonProperty(&quot;LTR-AMT-20&quot;)]
 public string? LTRAMT20 { get; set; }
//using dictionary
//public Dictionary&lt;string, string&gt; LTRAMT { get; set; }
</code></pre>
<p>i dont get these fields in order in request body.based on position i have to map it respective LTRAMT fields
i have below method to do that</p>
<pre><code> public static string LtrAmounts(List&lt;Amounts&gt; amounts, int i)
 {
     var filter = amounts.FirstOrDefault(x =&gt; x.position == i);
     return filter != null ? filter.value.ToString() : &quot;&quot;;
 }
</code></pre>
<p>Request Body:</p>
<pre><code>&quot;amounts&quot;: [
                    {
                        &quot;value&quot;: 0,
                        &quot;position&quot;: 1
                    },
                    {
                        &quot;value&quot;: 1624.96,
                        &quot;position&quot;: 2
                    },
                    {
                        &quot;value&quot;: 9901010,
                        &quot;position&quot;: 4
                    },
                    {
                        &quot;value&quot;: 35776,
                        &quot;position&quot;: 20
                    }
                ]
</code></pre>
<p>I tried using reflection it is working fine but response time is more.</p>
<pre><code> for (int i = 1; i &lt;= 20; i++)
 {
     ltr.GetType().GetProperty($&quot;LTRAMT{i}&quot;).SetValue(ltr, amounts != null ? LtrAmounts(amounts, i) : &quot;&quot;);
 }
</code></pre>
<p>Also tried dictionary</p>
<pre><code>  private static Dictionary&lt;string, string&gt; AssignKeyAndValues(List&lt;Amounts&gt; amounts)
  {
      Dictionary&lt;string, string&gt; keyValuePairs = new Dictionary&lt;string, string&gt;();

     for (int i = 1; i &lt;= 20; i++)
     {
          string key = &quot;LTRAMT&quot; + i;
          string value = LtrAmounts(amounts, i);
          keyValuePairs[key] = value;
      }

      return keyValuePairs;
  }
</code></pre>
<p>But in the response i am getting parent object under that i have fields which is not my requirement</p>
<pre><code>{
&quot;LTRAMT&quot;:
{
&quot;LTRAMT1&quot;:&quot;0&quot;,
&quot;LTRAMT2&quot;:&quot;1624.96&quot;,
&quot;LTRAMT3:&quot;&quot;,
&quot;LTRAMT4&quot;:&quot;9901010&quot;
.........
&quot;LTRAMT20&quot;:&quot;35776&quot;

}
}
</code></pre>
<p>I don't want to sent parent LTRAMT in response.
Need help to complete this requirement.Any other suggestion will also be helpful
Thanks in Advance.</p>
","2024-06-18 09:37:45","0","Question"
"78635620","78635537","","<p>Here's an approach:</p>
<ul>
<li><p>ask the user for the drink they want</p>
</li>
<li><p>use the drink they chose and the Python <code>in</code> operator to check if that drink is in the <code>MENU</code> dictionary</p>
</li>
<li><p>if the drink <em>is</em> in the <code>MENU</code> dictionary then use the drink choice as the key to the <code>MENU</code> to lookup the recipe (ingredients and quantity) for
their drink (<em>eg.</em> <code>MENU[choice]['ingredients']</code>)</p>
</li>
<li><p>go through each of the ingredients and quantites in the recipe and subtract that quantity from the same ingredient in the <code>resources</code> dictionary</p>
<pre><code>  MENU = {
      &quot;espresso&quot;: {
          &quot;ingredients&quot;: {
              &quot;water&quot;: 50,
              &quot;coffee&quot;: 18,
          },
          &quot;cost&quot;: 1.5,
      },
      &quot;latte&quot;: {
          &quot;ingredients&quot;: {
              &quot;water&quot;: 200,
              &quot;milk&quot;: 150,
              &quot;coffee&quot;: 24,
          },
          &quot;cost&quot;: 2.5,
      },
      &quot;cappuccino&quot;: {
          &quot;ingredients&quot;: {
              &quot;water&quot;: 250,
              &quot;milk&quot;: 100,
              &quot;coffee&quot;: 24,
          },
          &quot;cost&quot;: 3.0,
      }
  }

  resources = {
      &quot;water&quot;:  3000,
      &quot;milk&quot;:   2000,
      &quot;coffee&quot;: 1000,
  }

  # go into a 'forever' loop and prompt the user for their drink choice

  while True:
      choice = input(&quot;choice: &quot;)

      # if input line has a 'q' in it then quit (break out of loop)
      if 'q' in choice:
          print(&quot;all done&quot;)
          break

      # if input line is not a known drink then prompt to try again
      if choice not in MENU:
          print(&quot;don't have that on the menu try again&quot;)
          continue

      # if we get here we know its a known drink so get the recipe
      # for the chosen drink and assign it to the the recipe dictionary
      recipe = MENU[choice]['ingredients']

      # now go through the recipe for the chosen drink and 
      # for each ingredient subtract the quantity of that
      # ingredient used from the resources dictionary

      for ingredient, quantity in recipe.items():
          resources[ingredient] -= quantity

      # report the drink was made
      print (&quot;made you a&quot;, choice)

      # report the remaining resources after the drink was made
      print (&quot;remaining resources are:&quot;)
      for ingredient, quantity in resources.items():
          print(f&quot;{ingredient:6} {quantity:6}&quot;)
</code></pre>
</li>
</ul>
<pre>choice: latte
made you a latte
remaining resources are:
water    2800
milk     1850
coffee    976

choice: latte
made you a latte
remaining resources are:
water    2600
milk     1700
coffee    952

choice: espresso
made you a espresso
remaining resources are:
water    2550
milk     1700
coffee    934

choice: q
all done
</pre>
","2024-06-18 05:33:31","0","Answer"
"78635537","","Substract values dictionary from another dictionary's values","<p>I have a coffee machine that gives a user 3 options to choose from: espresso, latte, cappuccino. The ingredients and cost of the chosen item are stored in a dictionary in the variable MENU. After the user has chosen his coffee I need to be able to print a report which tells me how much resources are left in the machine, the resources being water, milk, coffee. How can I subtract the ingredients (ingredients chosen coffee) from the resources variable and get the remaining resources printed in a report?</p>
<pre class=""lang-py prettyprint-override""><code>MENU = {
    &quot;espresso&quot;: {
        &quot;ingredients&quot;: {
            &quot;water&quot;: 50,
            &quot;coffee&quot;: 18,
        },
        &quot;cost&quot;: 1.5,
    },
    &quot;latte&quot;: {
        &quot;ingredients&quot;: {
            &quot;water&quot;: 200,
            &quot;milk&quot;: 150,
            &quot;coffee&quot;: 24,
        },
        &quot;cost&quot;: 2.5,
    },
    &quot;cappuccino&quot;: {
        &quot;ingredients&quot;: {
            &quot;water&quot;: 250,
            &quot;milk&quot;: 100,
            &quot;coffee&quot;: 24,
        },
        &quot;cost&quot;: 3.0,
    }
}

resources = {
    &quot;water&quot;: 300,
    &quot;milk&quot;: 200,
    &quot;coffee&quot;: 100,
}
</code></pre>
<p>From previous lessons, I learned that I need to format the data from the dictionary so that it becomes usable in the code. But I'm at a very beginner level and I'm stuck after formatting the data.</p>
<pre class=""lang-py prettyprint-override""><code>def format_data(choice):
    &quot;&quot;&quot;Format ingredients into printable format: water, milk, coffee, cost&quot;&quot;&quot;
    water = MENU[user_choice]['ingredients'][&quot;water&quot;]
    milk = MENU[user_choice]['ingredients'][&quot;milk&quot;]
    coffee = MENU[user_choice]['ingredients'][&quot;coffee&quot;]
    cost = MENU[user_choice]['ingredients'][&quot;cost&quot;]

user_choice = input(&quot;What would you like? (espresso/latte/cappuccino&quot;).lower()
</code></pre>
","2024-06-18 04:54:58","2","Question"
"78634565","78634536","","<p>Easier would be just to use <code>get</code>:</p>
<pre class=""lang-py prettyprint-override""><code>[client for client in Clients['data'] if client.get('name', '').startswith('Ma')]
</code></pre>
","2024-06-17 20:31:51","1","Answer"
"78634553","78634536","","<p>Based on @Michael Cao's comment, this should work:</p>
<pre><code>[client for client in Clients['data'] if 'name' in client and client['name'].startswith('Ma')]
</code></pre>
","2024-06-17 20:29:20","1","Answer"
"78634536","","Filtering dictionary elements by few initial values","<p>I have the following data structure:</p>
<pre><code>Clients= {
      &quot;data&quot;: [
        {
          &quot;nClients&quot;: 3
        },
        {
          &quot;name&quot;: &quot;Mark&quot;,
          &quot;roll_no&quot;: 1,
          &quot;branch&quot;: &quot;c&quot;
        },
        {
          &quot;name&quot;: &quot;Cris&quot;,
          &quot;roll_no&quot;: 3,
          &quot;branch&quot;: &quot;it3&quot;          
        },
        {
          &quot;name&quot;: &quot;Mark&quot;,
          &quot;roll_no&quot;: 2,
          &quot;branch&quot;: &quot;it2&quot;
        }
      ]
    }
</code></pre>
<p>I am trying to figure out a function that filters out the names given few initial letters, for example <code>myFunction('Ma')</code> that would give:</p>
<pre><code>{
 &quot;name&quot;: &quot;Mark&quot;,
 &quot;roll_no&quot;: 1,
 &quot;branch&quot;: &quot;c&quot;
 },
 {
  &quot;name&quot;: &quot;Mark&quot;,
  &quot;roll_no&quot;: 2,
  &quot;branch&quot;: &quot;it2&quot;
  }
</code></pre>
<p>I am trying this kind of syntax:  <code>[client for client in Clients['data'] if 'name' in client and Clients['name'].startswith('Ma')]</code>.
However, I get the following error: <code>KeyError: 'name'</code>.</p>
<p>What am I doing wrong?</p>
<p>Thank you!</p>
","2024-06-17 20:22:45","0","Question"
"78630747","78630415","","<p>You could also do it like this:</p>
<pre><code>n = 3
dict_items = list(data.items())[-n:]
new_dict_ = dict(last_n_items)
</code></pre>
<p>or:</p>
<pre><code>n = 3
n_items = deque(data.items(), maxlen=n)
new_dict_ = dict(last_n_items)
</code></pre>
","2024-06-17 02:52:44","0","Answer"
"78630611","78630415","","<p>@juanpa.arrivillaga's answer is good but the result needs to be reversed again to be equivalent to <code>list(dict_)[-n:]</code>.</p>
<p>You can use a <code>collections.deque</code> with its <a href=""https://docs.python.org/3/library/collections.html#collections.deque.extendleft"" rel=""nofollow noreferrer""><code>extendleft</code></a> method instead to store the result so that the resulting sequence would be in the expected order:</p>
<pre><code>from itertools import islice
from collections import deque

last_n_items = deque()
last_n_items.extendleft(islice(reversed(dict_.items()), n))
</code></pre>
","2024-06-17 01:21:13","0","Answer"
"78630482","78630415","","<p>On modern versions of Python, you want something like:</p>
<pre><code>from itertools import islice
last_n_items = list(islice(reversed(my_dict.items()), n))
</code></pre>
<p>You may want to reverse that one more time at the end.</p>
","2024-06-16 23:37:48","1","Answer"
"78630415","","How to get last N items from dict?","<p>I have a dict like this:</p>
<pre><code>dict_ = {
   'abc': 1,
   'bcd': 2,
   'cde': 3,
   'def': 4
}
</code></pre>
<p>I need to iterate only last <code>N</code> items in dict with <code>for k, v in dict.items()</code>, how to do that? If that was list, I could do <code>dict_[-N:]</code>, what about dict? Speed is important, so option about iterating all list in for loop with <code>continue</code> is not good.</p>
","2024-06-16 22:41:32","-3","Question"
"78628050","78628020","","<p>The best practice for this would be wrapping up the code within a <strong>function</strong>. Infact whenever you find some part of code is repeating multiple times, you are supposed to put it into a function.</p>
<p>Here's how to do it:</p>
<pre><code>def update_inventory(key, option, quantity):
  quantity_value = float(re.findall(r&quot;[0-9]+(?:\.[0-9]*)?&quot;, inventory_list[key]) [0])
  quantity_measurement = ''.join(re.findall(r'(?i)[A-Z]', str(inventory_list[key])))
  if option==&quot;1&quot;:
   quantity_value += quantity
  elif option==&quot;2&quot;:
    quantity_value -= quantity
  inventory_list[key] = str(quantity_value) + str(quantity_measurement)
  return inventory_list

#now you can update the inventory_list by calling the function 
update_inventory(2, &quot;1&quot;, 9)
update_inventory(1, &quot;2&quot;, 4)
</code></pre>
","2024-06-16 00:59:41","0","Answer"
"78628042","78628020","","<p>You can create a method to perform this task and use one pattern to make it more efficient:</p>
<pre><code>(?i)([0-9]+(?:\.[0-9]+)?)\s*:?\s*([\w]+)\s*
</code></pre>
<h3>Code</h3>
<pre><code>import re

def modify_inventory(inventories, key, quant, opts):
    print(inventories[key])
    q, m = re.findall(r&quot;(?i)([0-9]+(?:\.[0-9]+)?)\s*:?\s*([\w]+)\s*&quot;, inventories[key])[0]
    q = float(q)
    q = q + quant if opts == &quot;1&quot; else q - quant if opts == &quot;2&quot; else q
    inventories[key] = f&quot;{q} {m}&quot;
    return inventories


inventories = {
    'item1': '10.5 : potato',
    'item2': '20 : egg',
    'item3': '19.0 : chicken'
}

print(modify_inventory(inventories, 'item3', 3, '1'))
print(modify_inventory(inventories, 'item2', 3, '2'))

</code></pre>
<h3>Prints</h3>
<pre><code>19.0 : chicken
{'item1': '10.5 : potato', 'item2': '20 : egg', 'item3': '22.0 chicken'}
20 : egg
{'item1': '10.5 : potato', 'item2': '17.0 egg', 'item3': '22.0 chicken'}
</code></pre>
","2024-06-16 00:52:06","0","Answer"
"78628033","78628020","","<p>The following should function using the <a href=""https://docs.python.org/3/library/operator.html"" rel=""nofollow noreferrer"">operator module</a>. <a href=""https://stackoverflow.com/questions/19171969/python-is-it-possible-to-set-a-variable-to-an-operator"">Here's more about it</a>.</p>
<pre><code>import operator
import re

def code_snippet(modify_options, inventory_list, key, quantity):
    if modify_options == &quot;1&quot;:
        option = operator.add
    elif modify_options == &quot;2&quot;:
        option = operator.sub

    quantity_value = option(float(re.findall(r&quot;[0-9]+(?:\.[0-9]*)?&quot;, inventory_list[key])[0]), quantity)
    quantity_measurement = ''.join(re.findall(r'(?i)[A-Z]', str(inventory_list[key])))
    inventory_list[key] = str(quantity_value) + str(quantity_measurement)
    return inventory_list
</code></pre>
","2024-06-16 00:43:56","0","Answer"
"78628026","78628020","","<p>You can refactor it in a couple steps. First, move the common statements outside of the if/else blocks.</p>
<pre><code>if modify_options in {&quot;1&quot;, &quot;2&quot;}:
    if modify_options == &quot;1&quot;:
        quantity_value = float(re.findall(r&quot;[0-9]+(?:\.[0-9]*)?&quot;, inventory_list[key])[0]) + quantity
    elif modify_options == &quot;2&quot;:
        quantity_value = float(re.findall(r&quot;[0-9]+(?:\.[0-9]*)?&quot;, inventory_list[key])[0]) - quantity

    quantity_measurement = ''.join(re.findall(r'(?i)[A-Z]', str(inventory_list[key])))
    inventory_list[key] = str(quantity_value) + str(quantity_measurement)
    return inventory_list
</code></pre>
<p>Then you can move the common bit of the <code>quantity_value</code> statement up and only do the addition or subtraction inside the if/else.</p>
<pre><code>if modify_options in {&quot;1&quot;, &quot;2&quot;}:
    quantity_value = float(re.findall(r&quot;[0-9]+(?:\.[0-9]*)?&quot;, inventory_list[key])[0])
    if modify_options == &quot;1&quot;:
        quantity_value += quantity
    elif modify_options == &quot;2&quot;:
        quantity_value -= quantity

    quantity_measurement = ''.join(re.findall(r'(?i)[A-Z]', str(inventory_list[key])))
    inventory_list[key] = str(quantity_value) + str(quantity_measurement)
    return inventory_list
</code></pre>
","2024-06-16 00:39:24","1","Answer"
"78628020","","How can I rewrite this so that it does not repeat?","<p>I'm looking for suggestions on how I could rewrite this so that the code isn't repeating. It's suppose to separate the float(digits) from the string(alphabetical characters) within a dictionary's value, and subtract or add a user's numerical input to the float. Afterwards, it rejoins the digits and the letters, converts them back into a string and stores the value.</p>
<p>An example of what it should do is take &quot;19.0: chicken&quot; from  the dictionary, split it, add 3  from the user's input, and return &quot;22.0 chicken&quot; to the dictionary.</p>
<pre><code>if modify_options == &quot;1&quot;:
    quantity_value = float(re.findall(r&quot;[0-9]+(?:\.[0-9]*)?&quot;, inventory_list[key]) [0]) + quantity
    quantity_measurement = ''.join(re.findall(r'(?i)[A-Z]', str(inventory_list[key])))
    inventory_list[key] = str(quantity_value) + str(quantity_measurement)
    return inventory_list

elif modify_options == &quot;2&quot;:
    quantity_value = float(re.findall(r&quot;[0-9]+(?:\.[0-9]*)?&quot;, inventory_list[key])[0]) - quantity
    quantity_measurement = ''.join(re.findall(r'(?i)[A-Z]', str(inventory_list[key])))
    inventory_list[key] = str(quantity_value) + str(quantity_measurement)
    return inventory_list
</code></pre>
","2024-06-16 00:32:28","2","Question"
"78626419","78626109","","<p>For the sake of closure, here is the corrected code:</p>
<pre class=""lang-py prettyprint-override""><code>from dataclasses import make_dataclass, field, asdict

# the dict
stock_price = {'lastPrice': 129.1,
    'open': 126.57,
    'close': 0,
    'intraDayHighLow': {'min': 126.4, 'max': 129.55, 'value': 129.1},
    'weekHighLow': {'min': 49.7, 'minDate': '26-Jun-2023', 
       'max': 142.9,
       'maxDate': '30-Apr-2024',
        'value': 129.1},
    }

# dynamic dataclass constructor
def create_dataclass_from_dict(data_dict: dict, class_name:str):

    fields = []
    
    for key, value in data_dict.items():
        if isinstance(value, dict):
            nested_class_name = key.capitalize()
            nested_class = create_dataclass_from_dict(value, class_name=nested_class_name)
            fields.append((key, nested_class, field(default_factory=nested_class)))
        else:
            fields.append((key, type(value), field(default=value)))
    
    return make_dataclass(class_name, fields)

# instantiate
Stock = create_dataclass_from_dict(stock_price, 'Stock')
my_stock = Stock()

# check nested
print(my_stock.weekHighLow.minDate) # works '26-Jun-2023'

# Reconstruct to dict
print(asdict(my_stock))

</code></pre>
","2024-06-15 11:02:15","0","Answer"
"78626166","78626109","","<h3>Creating the dataclass, why is <code>__dict__</code> empty</h3>
<blockquote>
<pre><code>type(class_name, (), fields)
</code></pre>
</blockquote>
<p>This creates a class which has <code>fields</code> as <em>class attributes</em>. They will be present in <code>Stock.__dict__</code>, but not in <code>my_stock.__dict__</code> for any <em>instance</em> <code>my_stock</code> of <code>Stock</code>.</p>
<blockquote>
<pre><code>my_stock.weekHighLow.minDate 
</code></pre>
</blockquote>
<p>This works, because if an attribute is not found in an instance of a class, it is looked up in the class object next.</p>
<p>Using <code>dataclass()</code> with a class created like this will not actually create the <em>dataclass fields</em>.</p>
<p>For example, <code>dataclass(&quot;Stock&quot;, (), {&quot;last_price&quot;: 129.1})</code> is like writing</p>
<pre><code>@dataclass
class Stock:
    last_price = 129.1
</code></pre>
<p>but a dataclass field requires a type annotation, like</p>
<pre><code>@dataclass
class Stock:
    last_price: float = 129.1
</code></pre>
<p>which would create a field called <code>last_price</code> with a default value <code>129.1</code>.</p>
<p>To create a dataclass dynamically, use <a href=""https://docs.python.org/3/library/dataclasses.html#dataclasses.make_dataclass"" rel=""nofollow noreferrer""><code>dataclasses.make_dataclass</code></a> instead.</p>
<p>In your case, you would have to replace</p>
<blockquote>
<pre><code>fields = {}
# ...
fields[key] = nested_class
# ...
fields[key] = value
# ...
return dataclass(type(class_name, (), fields))
</code></pre>
</blockquote>
<p>by</p>
<pre><code>fields = []
# ...
fields.append((key, nested_class, field(default_factory=nested_class)))
# ...
fields.append((key, type(value), field(default=value)))
# ...
return make_dataclass(class_name, fields)
</code></pre>
<p>(using <code>dataclasses.field</code> as <code>field</code>)</p>
<h3>Converting a dataclass instance to a dictionary</h3>
<p>To convert a dataclass instance (assuming the dataclass has been created properly) to a dictionary, you should use <a href=""https://docs.python.org/3/library/dataclasses.html#dataclasses.asdict"" rel=""nofollow noreferrer""><code>dataclasses.asdict</code></a>, not rely on the <code>__dict__</code> attribute.</p>
<p>This is explained in more detail in <a href=""https://stackoverflow.com/a/75597746/"">this answer</a>.</p>
","2024-06-15 09:16:09","2","Answer"
"78626109","","Converting dict to dataclass type dynamically, and an instance back to a dict, results in empty dict","<p>Have a nested dictionary.</p>
<pre class=""lang-py prettyprint-override""><code>stock_price = {'lastPrice': 129.1,
    'open': 126.57,
    'close': 0,
    'intraDayHighLow': {'min': 126.4, 'max': 129.55, 'value': 129.1},
    'weekHighLow': {'min': 49.7, 'minDate': '26-Jun-2023', 
       'max': 142.9,
       'maxDate': '30-Apr-2024',
        'value': 129.1},
    }
</code></pre>
<p>...which is converted to a dataclass, as follows.</p>
<pre class=""lang-py prettyprint-override""><code>from dataclasses import dataclass
def create_dataclass_from_dict(data_dict: dict, class_name:str):

    fields = {}
    
    for key, value in data_dict.items():
        if isinstance(value, dict):
            nested_class_name = key.capitalize()
            nested_class = create_dataclass_from_dict(value, class_name=nested_class_name)
            fields[key] = nested_class
        else:
            fields[key] = value
    
    return dataclass(type(class_name, (), fields))
</code></pre>
<p>....but when I see the dict of the instance, it shows an empty dictionary...</p>
<pre><code>Stock = create_dataclass_from_dict(stock_price, 'Stock')

my_stock = Stock()
my_stock.weekHighLow.minDate # gives '26-Jun-2023' as intended. Want this!!

my_stock.__dict__ # gives {}
</code></pre>
<p>...and so not able to convert it back to a dictionary using the following code:</p>
<pre class=""lang-py prettyprint-override""><code>import json
def to_dict(obj):
    return json.loads(json.dumps(obj, default=lambda o: o.__dict__))

to_dict(my_stock) # gives {}
</code></pre>
<p>Where am I going wrong? Why is the <code>.__dict__</code> empty?</p>
","2024-06-15 08:52:40","1","Question"
"78625601","78625241","","<p>Based on the <a href=""https://wiki.warthunder.com/Block_file_(.BLK)"" rel=""nofollow noreferrer"">documentation available</a> and the example you gave, a plain Python parser for .blk file from the War Thunder game might look like this:</p>
<pre><code>EXAMPLE = &quot;&quot;&quot;
areas{
  spawn_zone{
    type:t=&quot;Sphere&quot;
    tm:m=[[9.7053, 0, 0] [0, 9.7053, 0] [0, 0, 9.7053] [2881.52, 75.8896, 182.321]]
    objLayer:i=0
    height:r=0.25
    line{ line:p4=115, +10000, 117, 0; move:b=no; thousandth:b=yes; }
  }
}
&quot;&quot;&quot;


def parse_blk(data: str, start: int = 0) -&gt; (dict, int):
    from enum import Enum
    from itertools import islice
    from re import findall

    class States(Enum):
        ID_NEXT = 1
        ID = 2
        BLOCK_NEXT = 3
        TYPE_NEXT = 4
        TYPE = 5
        EQUALS_NEXT = 6
        VALUE_NEXT = 7
        VALUE = 8

    def unexpected():
        raise SyntaxError(f'Unexpected character #{i}: {ch}')

    def matrix(m: str) -&gt; list | float:
        m = m.strip()

        if not m.startswith('[') or not m.endswith(']'):
            xs = m.split(',')
            if len(xs) &gt; 1:
                return [matrix(v) for v in xs]
            try:
                v = float(m)
                return v
            except ValueError:
                raise SyntaxError(f'Invalid matrix format {s}')

        m = m[1:-1]
        return [matrix(v) for v in findall(r'\[([^]]+)]', m)]

    state = States.ID_NEXT
    s = ''
    _id = ''
    _type = ''
    result = {}
    enum_data = iter(enumerate(data))
    next(islice(enum_data, start, start), None)
    for i, ch in enum_data:
        match state:
            case States.ID_NEXT:
                if ch.isalpha() or ch == '_':
                    s = ch
                    state = States.ID
                elif ch.isspace():
                    pass
                elif ch == '}':
                    return result, i
                else:
                    unexpected()
            case States.ID:
                if ch == ':':
                    _id = s
                    state = States.TYPE_NEXT
                elif ch.isspace():
                    _id = s
                    state = States.BLOCK_NEXT
                elif ch.isalpha() or ch == '_':
                    s += ch
                elif ch == '{':
                    _id = s
                    result[_id], n = parse_blk(data, i + 1)
                    next(islice(enum_data, n, n), None)
                    state = States.ID_NEXT
                else:
                    unexpected()
            case States.BLOCK_NEXT:
                if ch == '{':
                    result[_id], n = parse_blk(data, i + 1)
                    next(islice(enum_data, n, n), None)
                    state = States.ID_NEXT
                elif ch.isspace():
                    pass
                else:
                    unexpected()
            case States.TYPE_NEXT:
                if ch.isalpha():
                    s = ch
                    state = States.TYPE
                elif ch.isspace():
                    pass
                else:
                    unexpected()
            case States.TYPE:
                if ch.isalnum():
                    s += ch
                elif ch == '=':
                    _type = s
                    if _type not in ['i', 'r', 't', 'b', 'm', 'p2', 'p3', 'p4']:
                        raise ValueError(f'Unknown type {_type}')
                    state = States.VALUE_NEXT
                elif ch.isspace():
                    _type = s
                    state = States.EQUALS_NEXT
                else:
                    unexpected()
            case States.EQUALS_NEXT:
                if ch == '=':
                    state = States.VALUE_NEXT
                elif ch.isspace():
                    pass
                else:
                    unexpected()
            case States.VALUE_NEXT:
                if ch.isalnum() or ch in '&quot;[+-':
                    s = ch
                    state = States.VALUE
                elif ch.isspace():
                    pass
                else:
                    unexpected()
            case States.VALUE:
                if ch in [';', '\n']:
                    state = States.ID_NEXT
                    result[_id] = s
                    match _type:
                        case 'i':
                            result[_id] = int(s)
                        case 'r':
                            result[_id] = float(s)
                        case 't':
                            result[_id] = s
                        case 'b':
                            if s not in ['yes', 'true', 'no', 'false']:
                                raise ValueError(f'Unknown boolean value {s}')
                            result[_id] = s in ['yes', 'true']
                        case 'm':
                            result[_id] = matrix(s)
                        case 'p2' | 'p3' | 'p4':
                            result[_id] = tuple(float(v) for v in s.split(','))
                            if (r := len(result[_id])) != (e := int(_type[1])):
                                raise ValueError(
                                    f'Expected {e} values, got {r}')
                        case '_':
                            raise SyntaxError(f'Unknown type {_type}')
                elif ch.isalnum() or ch.isspace() or ch in '_&quot;[].,+-':
                    s += ch
                elif ch == '}':
                    result[_id] = s
                    return result, i
                else:
                    unexpected()
            case _:
                raise SyntaxError(f'Unknown state {state}')
    return result, len(data)


# the function returns both the dictionary and the number of characters parsed
parsed, _ = parse_blk(EXAMPLE)
print(parsed)
print(parsed['areas']['spawn_zone']['type'])
</code></pre>
<p>The output:</p>
<pre class=""lang-none prettyprint-override""><code>{'areas': {'spawn_zone': {'type': '&quot;Sphere&quot;', 'tm': [[9.7053, 0.0, 0.0], [0.0, 9.7053, 0.0], [0.0, 0.0, 9.7053], [2881.52, 75.8896, 182.321]], 'objLayer': 0, 'height': 0.25, 'line': {'line': (115.0, 10000.0, 117.0, 0.0), 'move': False, 'thousandth': True}}}}
&quot;Sphere&quot;
</code></pre>
<p>Note that I added some data to the example to show the other types documented for the format - I know you don't need all of them, but someone else may be looking to read .blk files from War Thunder with Python as well.</p>
<p>Note that I named <code>_id</code> and <code>_type</code> with an underscore because using <code>id</code> and <code>type</code> would shadow keywords, but I feel those are the appropriate names to use here, so I used the underscore versions. You could name them <code>key</code> and <code>t</code>, if you don't like that.</p>
<p>And in case you're wondering - an LLM like ChatGPT doesn't do great on parsing a file like this, although it would allow you to solve the specific problem you wanted solved quite well. But I do use GitHub CoPilot in my editor, so writing a parser like this is actually not a lot of work - it pretty much writes itself if you guide it in the right direction.</p>
","2024-06-15 04:11:38","2","Answer"
"78625241","","How to parse a .blk text file into a dictionary?","<p>I have a readable <a href=""https://wiki.warthunder.com/Block_file_(.BLK)"" rel=""nofollow noreferrer"">block file (.blk)</a> that is converted to a .txt file (from <a href=""https://en.wikipedia.org/wiki/War_Thunder"" rel=""nofollow noreferrer"">War Thunder</a>). I'd like to parse the contents so that they are easy to access in my Python script.</p>
<p>Here's a snippet from such a block file:</p>
<pre class=""lang-cpp prettyprint-override""><code>areas{
  spawn_zone{
    type:t=&quot;Sphere&quot;
    tm:m=[[9.70537, 0, 0] [0, 9.70537, 0] [0, 0, 9.70537] [2881.52, 75.8896, 182.321]]
    objLayer:i=0

    props{}
  }
}
</code></pre>
<p>How can I parse it so that I can access the different parts in my script? The goal is to be able to type something along the lines of <code>areas.spawn_zone.type</code> and it would return <code>&quot;Sphere&quot;</code>.</p>
<p>A block file has <em>a lot</em> of clauses but they are identifiable by name (<code>areas{...}</code>, <code>units{...}</code> etc.), so it needs to account for that.</p>
","2024-06-14 23:01:32","0","Question"
"78624932","78624798","","<p>If you want all values, iterate over them as a hierarchy.</p>
<pre><code>for products in MENU:
    for key,value in MENU[products][&quot;ingredients&quot;].items():
        print(value)
</code></pre>
<p><a href=""https://www.geeksforgeeks.org/python-dictionary/"" rel=""nofollow noreferrer"">Check out this explanation about dictionaries in python with examples</a></p>
","2024-06-14 20:44:23","1","Answer"
"78624856","78624798","","<p>As @John commented:</p>
<p>You need to get familiarized yourself with <a href=""https://docs.python.org/3/tutorial/datastructures.html#dictionaries"" rel=""nofollow noreferrer"">dictionary</a>:</p>
<pre><code>for key,value in MENU[&quot;product_2&quot;][&quot;ingredients&quot;].items():
  print(value)
</code></pre>
<p>or</p>
<pre><code>for x in MENU[&quot;product_2&quot;][&quot;ingredients&quot;].values():
  print(x)
</code></pre>
<p>Output</p>
<pre><code>200
150
24
</code></pre>
<p>If you just need a list:</p>
<pre><code>list(MENU[&quot;product_2&quot;][&quot;ingredients&quot;].values())
#[200, 150, 24]
</code></pre>
","2024-06-14 20:20:35","0","Answer"
"78624802","78624798","","<p>You need to get the value from the iterated dictionary keys:</p>
<pre class=""lang-py prettyprint-override""><code>for ingredient in MENU:
   print(MENU[ingredient][&quot;ingredients&quot;].values())
</code></pre>
<p>Or if you just want from <code>product_2</code>:</p>
<pre class=""lang-py prettyprint-override""><code>print(MENU[&quot;product_2&quot;][&quot;ingredients&quot;].values())
</code></pre>
<p>If you want the keys:</p>
<pre class=""lang-py prettyprint-override""><code>print(list(MENU[&quot;product_2&quot;][&quot;ingredients&quot;]))
</code></pre>
<p>Or:</p>
<pre class=""lang-py prettyprint-override""><code>print(MENU[&quot;product_2&quot;][&quot;ingredients&quot;].keys())
</code></pre>
","2024-06-14 20:04:00","1","Answer"
"78624798","","How to iterate through a dictionary to get values on the lowest level?","<p>Please help me understand how to extract the value of each ingredient for each product and do something with it. But for starters I just want to print them all one by one.</p>
<pre><code>MENU = {
    &quot;product_1&quot;: {
        &quot;ingredients&quot;: {
            &quot;ingredient_1&quot;: 50,
            &quot;ingredient_2&quot;: 18
        },
        &quot;cost&quot;: 1.5
    },
    &quot;product_2&quot;: {
        &quot;ingredients&quot;: {
            &quot;ingredient_1&quot;: 200,
            &quot;ingredient_2&quot;: 150,
            &quot;ingredient_3&quot;: 24
        },
        &quot;cost&quot;: 2.5
    }
}
</code></pre>
<p>I started with this code:</p>
<pre><code>for ingredient in MENU:
   print(MENU[&quot;product_2&quot;][&quot;ingredients&quot;])
</code></pre>
<p>but this prints out all 3 ingredients with their values for product_2 3 times. I need it to print out 200, 150, 24</p>
","2024-06-14 20:02:27","1","Question"
"78624727","78624692","","<p>The error message you are getting is a <code>TypeError: list indices must be integers or slices, not str</code>. This is due to trying to access a list as if it were a dictionary. In the API response, <code>choice['hits']</code> is a <a href=""https://developer.edamam.com/edamam-docs-recipe-api-v1"" rel=""nofollow noreferrer"">list of recipe hits</a>, <strong>not a single recipe object</strong>. Each item in this list is a dictionary representing a recipe, which includes another dictionary accessed by the key <code>'recipe'</code>.</p>
<p>Instead, you would need to first select an item from the hits list before you can access its <code>'recipe'</code> dictionary, like so:</p>
<pre class=""lang-py prettyprint-override""><code>ingredients = choice['hits'][0]['recipe']['ingredientLines']
</code></pre>
","2024-06-14 19:41:08","0","Answer"
"78624692","","Printing a list from a dictionary in an api: string error","<p>I've written a function to search for a recipe in an API and print the ingredients(code below).  I get an error message (see ## in text for problematic line) saying that list indices must be integers or slices, not str.  The examples I have been given seem to use strings, so I'm not sure why it won't work in my code.  Any help greatly appreciated!
Sophie</p>
<pre><code>def get_chosen_recipe():
    chosen_recipe = input(&quot;What recipe do you want to cook? &quot;)
    app_id = &quot;&lt;my app id&gt;&quot;
    app_key = &quot;&lt;my app key&gt;&quot;
    url = 'https://api.edamam.com/search?q={}&amp;app_id={}&amp;app_key={}'.format(chosen_recipe, app_id, app_key)
    response = requests.get(url)
    response.raise_for_status() # Raises error code if unsuccessful http request
    choice = response.json()
    ingredients = choice['hits']['recipe']['ingredientLines'] ## THIS LINE CAUSES THE ERROR
    if chosen_recipe:
        return pprint(ingredients)
    else:
        return print(&quot;No ingredients found. Please try a different recipe.&quot;)
</code></pre>
","2024-06-14 19:30:41","-1","Question"
"78624406","78624362","","<p>I've separated the &quot;read the data&quot; part from the &quot;run the quiz&quot; part, so you can reuse it.  I've also used a <code>collections.Counter</code> to create the counts you want.</p>
<pre><code>import collections
import random 

def ingest():
    countries = collections.Counter()
    for line in open('goals.txt'):
        data = line.split(';')
        countries[data[1]] += 1

    return countries


def Quiz(countries):
    # randomly pick two countries from the world cup
    # ask the user to guess which country scored more goals in 2018 world cup


    # Randomly generating the countries
    names = list(countries)
    country_1 = random.choice(names)
    country_2 = random.choice(names)
    if country_1 == country_2:
        country_2 = random.choice(names)

    print(&quot;Which country scored more goals in the 2018 world cup?&quot;)
    print(country_1)
    print(&quot;OR&quot;)
    print(country_2)
    userInput = input(&quot;Answer: &quot;).title()

c = ingest()
Quiz(c)
</code></pre>
","2024-06-14 18:10:04","3","Answer"
"78624394","78624362","","<p>you will need a dictionary that will store number of goals and a list that will store list of countries. Please use code below as a guidance.</p>
<pre><code>import random 


# goals by country
goals = {}

# open file inside `with` context
with open(&quot;Goals.txt&quot;, &quot;r&quot;) as file:
    for line in file:
        data = line.split(&quot;;&quot;)
        country = data[1]
        if country not in goals:
            # country not seen yet. This will create a dictionary key
            goals[country] = 0
        
        # add a goal to the country
        goals[country] += 1
# stores all contries in a list   
countries = list(goals.keys())


def Quiz(goals = goals, countries = countries):    
    # randomly pick two countries from the world cup
    # ask the user to guess which country scored more goals in 2018 world cup

    # Randomly generating the countries
    country_1 = random.choice(countries)
    country_2 = random.choice(countries)

    # use `while` instead of `if`. It will iterate until it will get a different country
    while country_1 == country_2:
        country_2 =  random.choice(countries)
     
    # get the winner given two selected countries
    if goals[country_2] &gt; goals[country_1]:
        win_country = country_2
    elif goals[country_2] &lt; goals[country_1]:
        win_country = country_1
    else:
        win_country = &quot;same number of goals&quot;



    print(&quot;Which country scored more goals in the 2018 world cup?&quot;)
    print(country_1)
    print(&quot;OR&quot;)
    print(country_2)
    userInput = input(&quot;Answer: &quot;).title()
    print(&quot;Correct answer: &quot;, win_country)

Quiz()
</code></pre>
","2024-06-14 18:07:09","1","Answer"
"78624362","","2018 world cup goals scored by country python dict","<p>I have a .txt file with all goals scored in the 2018 world cup, there are 169 lines in this file structured as:</p>
<p>playername;country;minute;</p>
<p>EG:</p>
<pre><code>Gazinsky;Russia;12;
Cheryshev;Russia;43;
Cheryshev;Russia;91;
Dzyuba;Russia;71;
Golovin;Russia;94;
Gimenez;Uruguay;89;
Cheryshev;Russia;59;
Dzyuba;Russia;62;
OG;Russia;47;
Salah;Egypt;73;
</code></pre>
<p>(The minute is the minute the goal was scored)</p>
<p>I want to create a Quiz() function that iterates over each line in this .txt file and adds each country to a python dictionary, and adds the number of goals scored for each country: for example</p>
<pre><code>{Russia: 11},
{England: 12},
{Croatia: 14},
etc.
</code></pre>
<p>(the number of goals scored is simply the number of times they appear in the .txt file.)</p>
<p>I would then choose two random countries and ask the user to guess which country scored more goals in the world cup.</p>
<p>Here is the code I have so far:</p>
<pre><code>import random 

def Quiz():
    # randomly pick two countries from the world cup
    # ask the user to guess which country scored more goals in 2018 world cup


    countries = []
    file = open(&quot;Goals.txt&quot;, &quot;r&quot;)

    for line in file:
        data = line.split(&quot;;&quot;)
        country = data[1]
        countries.append(country)
    file.close()

    # Randomly generating the countries
    countries = list(dict.fromkeys(countries))
    country_1 = random.choice(countries)
    country_2 = random.choice(countries)
    if country_1 == country_2:
        country_2 = random.random(countries)

    print(&quot;Which country scored more goals in the 2018 world cup?&quot;)
    print(country_1)
    print(&quot;OR&quot;)
    print(country_2)
    userInput = input(&quot;Answer: &quot;).title()

</code></pre>
<p>I need help with creating this dictionary, and then using the users input to work out if they were correct or not. Any help massively appreciated!</p>
","2024-06-14 17:57:01","-1","Question"
"78624253","78624061","","<p>Here is an approach which do not use any library and also easy to understand:</p>
<pre class=""lang-py prettyprint-override""><code>def construct(events: list[Event]) -&gt; list:
    out = []
    for event in events:
        out.append(event.start)
        out.append(event.end)
    return out
</code></pre>
","2024-06-14 17:24:04","-1","Answer"
"78624207","78624061","","<p>Yes, we can use <code>map</code> and <code>lambda</code> along side the <a href=""https://docs.python.org/3/library/itertools.html"" rel=""nofollow noreferrer""><code>itertools</code></a> library that comes built in with Python to do this.</p>
<pre><code>from itertools import chain

def construct(input_list: list[Event]) -&gt; list[datetime]:
    return list(chain.from_iterable(map(lambda x: [x.start.strftime('%Y-%m-%d'), x.end.strftime('%Y-%m-%d')], input_list)))
</code></pre>
<p>We just need to provide construct with a list of your event class like:</p>
<pre><code>event_a = Event(start=datetime(2024, 6, 14), end=datetime(2024, 6, 15))
event_b = Event(start=datetime(2024, 7, 14), end=datetime(2024, 7, 15))

input_list = [event_a, event_b]
output_list = construct(input_list)
</code></pre>
<p>and output list should be a flattened array of dates in the form</p>
<pre><code>['2024-06-14', '2024-06-15', '2024-07-14', '2024-07-15']
</code></pre>
","2024-06-14 17:08:05","-1","Answer"
"78624172","78624061","","<p>If you're willing to use a package, you can look at <a href=""https://more-itertools.readthedocs.io/en/latest/api.html#more_itertools.collapse"" rel=""nofollow noreferrer""><code>more_itertools.collapse</code></a>! Then your could would look like</p>
<pre class=""lang-py prettyprint-override""><code>output_list = more_itertools.collapse(map(lambda x: (x.start, x.end), input_list))
</code></pre>
<p>Credit to <a href=""https://stackoverflow.com/questions/952914/how-do-i-make-a-flat-list-out-of-a-list-of-lists/40938883#40938883"">this SO answer</a></p>
","2024-06-14 16:56:55","0","Answer"
"78624168","78624061","","<p>The combination of <a href=""https://docs.python.org/3/library/operator.html#operator.attrgetter"" rel=""nofollow noreferrer""><code>operator.attrgetter</code></a> and <a href=""https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable"" rel=""nofollow noreferrer""><code>itertools.chain.from_iterable</code></a> can do the job. Since it doesn't call a pure python function in a loop(like lambda), it may be faster I guess:</p>
<pre class=""lang-py prettyprint-override""><code>from datetime import datetime
from itertools import chain
from operator import attrgetter


class Event:
    def __init__(self, start, end):
        self.start = start
        self.end = end


def construct(input_list: list[Event]) -&gt; list[datetime]:
    f = attrgetter(&quot;start&quot;, &quot;end&quot;)
    return list(chain.from_iterable(map(f, input_list)))


event_a = Event(start=&quot;2024-06-14&quot;, end=&quot;2024-06-15&quot;)
event_b = Event(start=&quot;2024-07-14&quot;, end=&quot;2024-07-15&quot;)

print(construct([event_a, event_b]))
</code></pre>
<p><strong>Note</strong>: You can also use &quot;<em>slots</em>&quot; for the <code>Event</code> objects. The attribute access would be faster.</p>
","2024-06-14 16:56:01","0","Answer"
"78624061","","How to use Python map to produce multiple values for each original input","<p>I have a list of data structure that looks like this:</p>
<pre><code>Class Event:
   start: datetime
   end: datetime
</code></pre>
<p>Take a <code>list[Event]</code>, I want to produce a new list that have two entries for each original <code>Event</code>:</p>
<pre><code>event_a = Event(start=2024-06-14, end=2024-06-15)
event_b = Event(start=2024-07-14, end=2024-07-15)

input_list = [event_a, event_b]

# construct new list here
def construct(input_list: list[Event]) -&gt; list[datetime]:
   ...

output_list = construct(input_list)

# expected output is
# [2024-06-14, 2024-06-15, 2024-07-14, 2024-07-15]
</code></pre>
<p>I know I can do it with list comprehension and I'm wondering can I do it efficiently with a map.</p>
<p>I've tried:</p>
<pre><code>output_list = map(lambda x: (x.start, x.end), input_list)
</code></pre>
<p>but this returns</p>
<pre class=""lang-none prettyprint-override""><code>[(2024-06-14, 2024-06-15), (2024-07-14, 2024-07-15)]
</code></pre>
<p>Is there a way I can tweak the map lambda that directly return a flatten list instead?</p>
","2024-06-14 16:25:15","3","Question"
"78623178","78623140","","<p>You can use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.from_dict.html"" rel=""nofollow noreferrer""><code>pd.DataFrame.from_dict</code></a> with <code>orient='index'</code>:</p>
<pre class=""lang-py prettyprint-override""><code>out = pd.DataFrame.from_dict({k: v[1] for k, v in data1.items()}, orient='index')
</code></pre>
<p>Output:</p>
<pre class=""lang-py prettyprint-override""><code>           G         C         L         U         J         W        O1  \
AI  0.000000  0.316667  0.333333  0.000000  0.000000  0.000000  0.333333   
CY  0.010417  0.000000  0.468750  0.000000  0.010417  0.000000  0.416667   
PY  0.000000  0.000000  0.422764  0.008130  0.000000  0.000000  0.455285   
SR  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000   
CV  0.030228  0.095702  0.178702  0.059039  0.016678  0.000834  0.466975   
BS  0.024576  0.103390  0.085763  0.377966  0.016949  0.000000  0.218644   
RD  0.041667  0.000000  0.291667  0.000000  0.000000  0.000000  0.583333   

          O2        T1        T2         N         B    R         D    M  
AI  0.016667  0.000000  0.000000  0.000000  0.000000  0.0  0.000000  0.0  
CY  0.020833  0.000000  0.072917  0.000000  0.000000  0.0  0.000000  0.0  
PY  0.040650  0.000000  0.048780  0.020325  0.004065  0.0  0.000000  0.0  
SR  1.000000  0.000000  0.000000  0.000000  0.000000  0.0  0.000000  0.0  
CV  0.031936  0.000000  0.082382  0.020847  0.008339  0.0  0.008339  0.0  
BS  0.072712  0.050847  0.013559  0.016949  0.001695  0.0  0.016949  0.0  
RD  0.041667  0.000000  0.000000  0.041667  0.000000  0.0  0.000000  0.0  
</code></pre>
","2024-06-14 13:15:03","1","Answer"
"78623140","","Create a dataframe from a dictionary of lists (which contain a dictionary)","<p>I have a dictionary:</p>
<pre><code>data1 = {
    'AI': [3, {'G': 0.0, 'C': 0.31666666666666665, 'L': 0.3333333333333333, 'U': 0.0, 'J': 0.0, 'W': 0.0, 'O1': 0.3333333333333333, 'O2': 0.016666666666666666, 'T1': 0.0, 'T2': 0.0, 'N': 0.0, 'B': 0.0, 'R': 0.0, 'D': 0.0, 'M': 0.0}, [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]],
    'CY': [96, {'G': 0.010416666666666666, 'C': 0.0, 'L': 0.46875, 'U': 0.0, 'J': 0.010416666666666666, 'W': 0.0, 'O1': 0.41666666666666663, 'O2': 0.020833333333333332, 'T1': 0.0, 'T2': 0.07291666666666666, 'N': 0.0, 'B': 0.0, 'R': 0.0, 'D': 0.0, 'M': 0.0}, [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]],
    'PY': [127, {'G': 0.0, 'C': 0.0, 'L': 0.42276422764227645, 'U': 0.008130081300813009, 'J': 0.0, 'W': 0.0, 'O1': 0.4552845528455285, 'O2': 0.04065040650406505, 'T1': 0.0, 'T2': 0.04878048780487805, 'N': 0.020325203252032523, 'B': 0.0040650406504065045, 'R': 0.0, 'D': 0.0, 'M': 0.0}, [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]],
    'SR': [1, {'G': 0.0, 'C': 0.0, 'L': 0.0, 'U': 0.0, 'J': 0.0, 'W': 0.0, 'O1': 0.0, 'O2': 1.0, 'T1': 0.0, 'T2': 0.0, 'N': 0.0, 'B': 0.0, 'R': 0.0, 'D': 0.0, 'M': 0.0}, [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]],
    'CV': [119, {'G': 0.03022827836191888, 'C': 0.09570154943733565, 'L': 0.1787022898077257, 'U': 0.059038954704106396, 'J': 0.01667767082036904, 'W': 0.0008338835410184519, 'O1': 0.46697478297033307, 'O2': 0.03193607185392467, 'T1': 0.0, 'T2': 0.08238175915743774, 'N': 0.0208470885254613, 'B': 0.00833883541018452, 'R': 0.0, 'D': 0.00833883541018452, 'M': 0.0}, [0.33216690905268464, 0.3354010574206815, 0.3324320335266338]],
    'BS': [65, {'G': 0.024576271186440683, 'C': 0.1033898305084746, 'L': 0.08576271186440679, 'U': 0.37796610169491535, 'J': 0.016949152542372885, 'W': 0.0, 'O1': 0.21864406779661022, 'O2': 0.07271186440677968, 'T1': 0.050847457627118654, 'T2': 0.013559322033898308, 'N': 0.016949152542372885, 'B': 0.0016949152542372885, 'R': 0.0, 'D': 0.016949152542372885, 'M': 0.0}, [0.3346524499339513, 0.3346524499339513, 0.33069510013209746]],
    'RD': [24, {'G': 0.041666666666666664, 'C': 0.0, 'L': 0.29166666666666663, 'U': 0.0, 'J': 0.0, 'W': 0.0, 'O1': 0.5833333333333333, 'O2': 0.041666666666666664, 'T1': 0.0, 'T2': 0.0, 'N': 0.041666666666666664, 'B': 0.0, 'R': 0.0, 'D': 0.0, 'M': 0.0}, [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]]
}
</code></pre>
<p>The form is:</p>
<pre><code>d1 = {
    A1: [n1, {B1: m1, B2: m2, ...}, [p1, q1, r1]],
    ...
}
</code></pre>
<p>I want to create a dataframe that contains the top level keys (A's) of the dictionary as rows (so they form the first column of the dataframe), and the inner level keys (B's) as the columns. The B keys do not vary from entry to entry. The values m should be the cell values.</p>
<p>What is the most pythonic way to accomplish this?</p>
<p>I have read <a href=""https://stackoverflow.com/questions/61261544/create-a-pandas-dataframe-from-a-dictionary-of-dictionaries"">Create a pandas dataframe from a dictionary of dictionaries</a>, but the dictionary here is nested inside a list, while that is a simple dictionary of dictionaries. Not comparable.</p>
","2024-06-14 13:06:18","-1","Question"
"78622738","78622682","","<p>If you have pandas you could do something like this:</p>
<pre class=""lang-py prettyprint-override""><code>df = pd.read_csv('oldFile.csv')
df.rename(columns={'oldHeader1': 'newHeader1'}, inplace=True)
df.to_csv('newFile.csv', index=False)
</code></pre>
<p>Or just do following:</p>
<pre class=""lang-py prettyprint-override""><code>import csv


header_map = {
    &quot;oldHeader1&quot;: &quot;newHeader1&quot;,
    &quot;oldHeader2&quot;: &quot;newHeader2&quot;,
    &quot;oldHeader3&quot;: &quot;newHeader3&quot;,
}

with open('test.csv', mode='r', newline='', encoding='utf-8') as infile, \
        open('renamed_test.csv', mode='w', newline='', encoding='utf-8') as outfile:

    reader = csv.reader(infile)
    writer = csv.writer(outfile)

    headers = next(reader)

    headers = [header_map[header] for header in headers if header_map.get(header) is not None]

    writer.writerow(headers)

    for row in reader:
        writer.writerow(row)
</code></pre>
","2024-06-14 11:40:51","0","Answer"
"78622682","","Change fieldnames of a csv.DictReader in Python","<p>I have a CSV file as follows.</p>
<p><strong>oldFile.csv content:</strong></p>
<pre><code>oldHeader1,oldHeader2,oldHeader3
data01,data02,data03
data11,data12,data13
data21,data22,data23
</code></pre>
<p>and I want to rename the headers with new ones. Here's the code I use to do this:</p>
<pre><code>import csv

with open(&quot;oldFile.csv&quot;, &quot;r&quot;) as input:
    reader = csv.DictReader(input, delimiter=&quot;,&quot;)
    reader.fieldnames = [&quot;newHeader1&quot;, &quot;newHeader2&quot;, &quot;newHeader3&quot;]
    rows = list(reader)
    with open(&quot;newFile.csv&quot;, &quot;w&quot;, newline=&quot;&quot;) as output:
        writer = csv.DictWriter(output, fieldnames=reader.fieldnames, delimiter=&quot;,&quot;)
        writer.writeheader()
        for row in rows:
            writer.writerow(row)
</code></pre>
<p>The problem is that it doesn't change the headers, but adds new ones.</p>
<p><strong>newFile.csv content:</strong></p>
<pre><code>newHeader1,newHeader2,newHeader3
oldHeader1,oldHeader2,oldHeader3
data01,data02,data03
data11,data12,data13
data21,data22,data23
</code></pre>
<p>However, the first line of the oldFile.csv is recognized as header, the code:</p>
<pre><code>import csv

with open(&quot;oldFile.csv&quot;, &quot;r&quot;) as input:
    reader = csv.DictReader(input, delimiter=&quot;,&quot;)
    print(reader.fieldnames)
</code></pre>
<p>shows:</p>
<pre><code>['oldHeader1', 'oldHeader2', 'oldHeader3']
</code></pre>
<p>I don't understand why these values are not overwritten but remain when writing.</p>
<p>I could delete the first line e.g. replacing <code>rows = list(reader)</code> with <code>rows = list(reader)[1:]</code>, but referring to other stackoverflow questions (e.g. <a href=""https://stackoverflow.com/a/17039719/3442166"">here</a> or <a href=""https://stackoverflow.com/a/71951562/3442166"">here</a>) I have the impression that it should work without and that I'm doing something wrong.</p>
<p>What's the proper way to achieve this?</p>
","2024-06-14 11:27:56","0","Question"
"78622563","78617660","","<pre><code>data = {
    'id': [2, 3, 4, 56],
    'title': ['xyz', 'ghy', None, 'ghy'],
    'url': ['www.xyz.com', None, None, 'www.ghy.com'],
    'timed': ['2024-02-01T00:00:00Z', '2024-03-05T00:00:00Z', '2024-04-05T00:00:00Z', '2024-05-05T00:00:00Z']
}

df = pd.DataFrame(data)
aa = df.dropna(subset = df.columns).to_dict(orient='records')

for row_dict in aa:
    print(row_dict)

{'id': 2, 'title': 'xyz', 'url': 'www.xyz.com', 'timed': '2024-02-01T00:00:00Z'}
{'id': 56, 'title': 'ghy', 'url': 'www.ghy.com', 'timed': '2024-05-05T00:00:00Z'}
</code></pre>
","2024-06-14 10:58:41","0","Answer"
"78617845","78616735","","<p>Starting from Python 3.7, the standard dict maintains the order of items based on the insertion order. If your version is less than 3.7 you can use <code>OrderedDict</code> from <code>collections</code> to get expected result.</p>
","2024-06-13 12:26:33","1","Answer"
"78617833","78617660","","<p>python
dict_list = [{k: v for k, v in row.items() if v is not None and not
pd.isna(v)} for index, row in df.iterrows()]</p>
<p>print(dict_list)</p>
","2024-06-13 12:23:53","2","Answer"
"78617748","78617660","","<p>You can use the <code>to_dict()</code> method and use <code>'records'</code> as the orientation and filter the output using list and dict comprehensions.</p>
<pre><code>import pandas as pd

# recreate the dataframe
df = pd.DataFrame({
 'id': [2, 3, 4, 56],
 'title': ['xyz', 'ghy', pd.NA, 'ghy'],
 'url': ['www.xyz.com', pd.NA, pd.NA, 'www.ghy.com'],
 'timed': ['2024-02-01T00:00:00Z', '2024-03-05T00:00:00Z', '2024-04-05T00:00:00Z', '2024-05-05T00:00:00Z']
})


# iterate over each dictionary/row and remove the NA values.
[{k: v for k,v in d.items() if not pd.isna(v)} for d in df.to_dict('records')]

# returns:
[{'id': 2, 'title': 'xyz', 'url': 'www.xyz.com', 'timed': '2024-02-01T00:00:00Z'},
 {'id': 3, 'title': 'ghy', 'timed': '2024-03-05T00:00:00Z'},
 {'id': 4, 'timed': '2024-04-05T00:00:00Z'},
 {'id': 56, 'title': 'ghy', 'url': 'www.ghy.com', 'timed': '2024-05-05T00:00:00Z'}]
</code></pre>
","2024-06-13 12:06:37","3","Answer"
"78617680","78617660","","<p>You can use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.agg.html"" rel=""nofollow noreferrer""><code>agg</code></a> combined with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.dropna.html"" rel=""nofollow noreferrer""><code>dropna</code></a> and <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.to_dict.html"" rel=""nofollow noreferrer""><code>to_dict</code></a>:</p>
<pre><code>out = df.agg(lambda x: x.dropna().to_dict(), axis=1).tolist()
</code></pre>
<p>Or, probably more efficient, using the underlying <a href=""/questions/tagged/numpy"" class=""s-tag post-tag"" title=""show questions tagged &#39;numpy&#39;"" aria-label=""show questions tagged &#39;numpy&#39;"" rel=""tag"" aria-labelledby=""tag-numpy-tooltip-container"" data-tag-menu-origin=""Unknown"">numpy</a> array, a list comprehension, <a href=""https://docs.python.org/3/library/functions.html#func-dict"" rel=""nofollow noreferrer""><code>dict</code></a> and <a href=""https://docs.python.org/3/library/functions.html#zip"" rel=""nofollow noreferrer""><code>zip</code></a>:</p>
<pre><code>out = [dict(zip(df.columns[(m:=pd.notna(a))], a[m])) for a in df.values]

# or for older python versions (&lt;3.8)
out = [dict(zip(df.columns[m], a[m])) for a in df.values for m in [pd.notna(a)]]
</code></pre>
<p>Output:</p>
<pre><code>[{'id': 2, 'title': 'xyz', 'url': 'www.xyz.com', 'timed': '2024-02-01T00:00:00Z'},
 {'id': 3, 'title': 'ghy', 'timed': '2024-03-05T00:00:00Z'},
 {'id': 4, 'timed': '2024-04-05T00:00:00Z'},
 {'id': 56, 'title': 'ghy', 'url': 'www.ghy.com', 'timed': '2024-05-05T00:00:00Z'}]
</code></pre>
","2024-06-13 11:52:59","4","Answer"
"78617660","","converting a dataframe to dictionary in python?","<p>I have a dataframe like below:</p>
<pre><code>id|title|url|timed
2|xyz|www.xyz.com|2024-02-01T00:00:00Z|
3|ghy|NaN|2024-03-05T00:00:00Z|
4|None|NaN|2024-04-05T00:00:00Z|
56|ghy|www.ghy.com|2024-05-05T00:00:00Z|
</code></pre>
<p>Expected output from this dataframe to dictionary, avoiding the None and NaN from creating as a new key value in this dicts -</p>
<pre><code>{&quot;id&quot;:&quot;2&quot;,&quot;title&quot;:&quot;xyz&quot;,&quot;url&quot;:&quot;www.xyz.com&quot;,&quot;timed&quot;:&quot;2024-02-01T00:00:00Z&quot;}
{&quot;id&quot;:&quot;3&quot;,&quot;title&quot;:&quot;ghy&quot;,&quot;timed&quot;:&quot;2024-03-05T00:00:00Z&quot;}
{&quot;id&quot;:&quot;4&quot;,&quot;timed&quot;:&quot;2024-04-05T00:00:00Z&quot;}
{&quot;id&quot;:&quot;56&quot;,&quot;title&quot;:&quot;ghy&quot;,&quot;url&quot;:&quot;www.ghy.com&quot;,&quot;timed&quot;:&quot;2024-05-05T00:00:00Z&quot;}
</code></pre>
<p>Any help would be appreciated.</p>
","2024-06-13 11:48:56","2","Question"
"78616735","","Why is this returning two orders of values? Why are the keys also in random and different orders?","<p><a href=""https://i.sstatic.net/9nF91q5K.png"" rel=""nofollow noreferrer"">This image contains all the details needed to understand this q</a></p>
<pre><code>s = 'paper'
t = 'title'
</code></pre>
<p>And a simple dic storing char counts fails to return the values and keys in the same order. Why?</p>
<p>I expected them to return the same order of values (based on when they were added to the respective dicts).</p>
","2024-06-13 08:36:13","-4","Question"
"78615721","78609535","","<p>A simple way to do this (but not the most efficient) would be to:</p>
<ol>
<li>make a copy of the original list</li>
<li>loop through the keys of the dictionary</li>
<li>if a key exists in the new list, remove the items specified in the value from the new list.</li>
</ol>
<p>We can split the value on the comma character to create a mini-list to iterate over for removal of items (note that it would be easier if you used a <code>Dictionary&lt;string, List&lt;string&gt;&gt;</code> instead):</p>
<pre><code>// Make a copy of the original list
var new_list = list.ToList();

// Loop through the dictionary
foreach (var item in dict)
{
    // If our new list contains a key
    if (new_list.Contains(item.Key))
    {
        // Loop through the values associated with 
        // that key and remove them from the list
        foreach(var value in item.Value.Split(',').Select(i =&gt; i.Trim()))
        {
            new_list.Remove(value);
        }
    }
}

// Display results
Console.WriteLine(string.Join(&quot;\n&quot;, new_list));
</code></pre>
<p><a href=""https://i.sstatic.net/nDcDuVPN.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/nDcDuVPN.png"" alt=""enter image description here"" /></a></p>
<hr />
<p>EDIT:
A more efficient way would probably be to create a list of items to exclude first, by searching for the dictionary keys in the list as we did before, but collecting all the values in a separate list, and then we can use the <code>Except</code> method to remove the items (which has the added benefit [to some] of being done in one line):</p>
<pre><code>var new_list = list.Except(dict
    .Where(item =&gt; list.Contains(item.Key))
    .SelectMany(item =&gt; item.Value.Split(',').Select(i =&gt; i.Trim())))
    .ToList(); // Call ToList() if you need a List and not just an IEnumerable
</code></pre>
","2024-06-13 03:37:45","1","Answer"
"78609535","","If an element exist in a list, ignore other similar elements in c#","<p>I have got a string list with generated programmatically like this:</p>
<pre><code>var list = new List&lt;string&gt;
{
    &quot;anonim&quot;,
    &quot;anonim şirket&quot;,
    &quot;anonim şirketler&quot;,
    &quot;tapu&quot;,
    &quot;tapu senedi&quot;,
    &quot;tapu kütüğü&quot;,
    &quot;yaptırım&quot;,
    &quot;müeyyide&quot;,
    &quot;işçi&quot;,
    &quot;işçi alacakları&quot;,
    &quot;işçi hakları&quot;,
    &quot;işçi lehine yorum ilkesi&quot;,
    &quot;işçilik sözleşmesi&quot;,
    &quot;limited şirket&quot;,
    &quot;sınırlı ayni hak&quot;,
    &quot;telif hakkı&quot;,
    &quot;unutulma hakkı&quot;,
    &quot;yolsuz tescil&quot;,
    &quot;zamanaşımı&quot;
};
</code></pre>
<p>It contains many repeated similar elements. So I thinked that ignore these with the help of dictinary. If dictionary key exists in the list, I want to ignore elements separated by commas in the dictionary value. Here is the dictionary:</p>
<pre><code>var dict = new Dictionary&lt;string, string&gt;
{
    {&quot;anonim şirket&quot;, &quot;anonim, anonim şirketler&quot;}, 
    {&quot;tapu senedi&quot;, &quot;tapu, tapu kütüğü&quot;}, 
    {&quot;yaptırım&quot;, &quot;müeyyide&quot;}, 
    {&quot;işçi hakları&quot;, &quot;işçi, işçi alacakları, işçi lehine yorum ilkesi, işçilik sözleşmesi&quot;}
};
</code></pre>
<p>So the final list I want to get is as follows:</p>
<pre><code>var new_list = new List&lt;string&gt;()
{
    &quot;anonim şirket&quot;,
    &quot;tapu senedi&quot;,
    &quot;yaptırım&quot;,
    &quot;işçi hakları&quot;,
    &quot;limited şirket&quot;,
    &quot;sınırlı ayni hak&quot;,
    &quot;telif hakkı&quot;,
    &quot;unutulma hakkı&quot;,
    &quot;yolsuz tescil&quot;,
    &quot;zamanaşımı&quot;
};
</code></pre>
<p>I don't know how to do this. I thought of writing a foreach loop like below. But I don't know what to write in foreach loop.</p>
<pre><code>var newList = new List&lt;string&gt;();
foreach (var l in list)
{
    // WHAT MUST I DO IN HERE?
}
</code></pre>
","2024-06-11 20:00:35","-3","Question"
"78605617","78605604","","<p>You can flatten nested lists in lambda function with <a href=""https://docs.python.org/3/library/itertools.html#itertools.chain"" rel=""nofollow noreferrer""><code>itertools.chain</code></a> and last convert <code>Series</code> by <a href=""http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.to_dict.html"" rel=""nofollow noreferrer""><code>Series.to_dict</code></a>:</p>
<pre><code>import ast, itertools

#if necessary
#df['col1'] = df['col1'].apply(ast.literal_eval)

d = df.groupby('id')['col1'].apply(lambda x: list(itertools.chain(*x))).to_dict()
print (d)
{'a': ['val1', 'val2'], 'b': ['val2', 'val3'], 'c': ['val1', 'val5', 'val6']}
</code></pre>
<p>Or with list comprehension:</p>
<pre><code>d = df.groupby('id')['col1'].apply(lambda x: [z for y in x for z in y]).to_dict()
</code></pre>
<p>Or with <a href=""http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html"" rel=""nofollow noreferrer""><code>DataFrame.explode</code></a> if performance is not important:</p>
<pre><code>d = df.explode('col1').groupby('id')['col1'].apply(list).to_dict()
</code></pre>
","2024-06-11 05:55:24","0","Answer"
"78605604","","Convert a dataframe with lists to a dictionary","<p>I have a dataframe that contains a identifier and list in each cell. The idea is to create a dictionary in which the keys are the identifiers and the values are a list with the elements that appears in the dataframe. Identifiers may repeat with different lists so they must be combined for the dictionary. Eg.</p>
<pre><code>   id    col1          
0  a  ['val1', 'val2']
1  b  ['val2', 'val3']
2  c  ['val1']
3  c  ['val5', 'val6']
</code></pre>
<p>Desired:</p>
<pre><code>{'a': ['val1', 'val2'], 'b': ['val2', 'val3'], 'c': ['val1', 'val5', 'val6']}
</code></pre>
<p>How to do that?</p>
","2024-06-11 05:52:50","0","Question"
"78600231","78552645","","<p>Updating to the latest Eclipse version solved the problem.</p>
<p>Updating MinGW didn't fix it.</p>
<p>(Information provided just in case someone experiences the same issue on similar versions)</p>
","2024-06-10 02:06:40","0","Answer"
"78597683","78597611","","<p>We could also do it in simple unnecessary long steps (deliberately for educational purpose):</p>
<pre class=""lang-py prettyprint-override""><code>from decimal import Decimal
import re

# pattern to split numeric and unit

pattern = r'(\d+\.?\d*)'
    

user_has = {'water': '16oz'}

# unpacks assumption: single value and unit
# e.g. 2.5km, 24mm, 7oz etc

_, numeric, units = re.split(pattern, user_has['water'])


# cast string numeric to Decimal due to floating issues 🙀: just being over careful 
numeric_ = Decimal(numeric)

# now we can add from user input
# say user input '1.5'
results = numeric_ + Decimal('1.5')

# upadte user_has
user_has['water'] = f'{float(results)}{units}'

print(user_has)
</code></pre>
<p>re split generates a list <code>['', numeric, unit]</code>, so we unpack only the last two.</p>
<p>Happy coding</p>
","2024-06-09 05:36:26","0","Answer"
"78597636","78597611","","<p>You can use <code>[0-9]+(?:\.[0-9]*)?</code> pattern for the number and <code>(?i)[A-Z]</code> pattern for the letters:</p>
<pre><code>import re


def _update(d, key):
    val = d[key]
    digits = float(re.findall(r'[0-9]+(?:\.[0-9]*)?', val)[0])
    letters = ''.join(re.findall(r'(?i)[A-Z]', val))
    get_num = float(input(&quot;Enter an amount like 1.3: &quot;))
    d[key] = str(digits + get_num) + letters
    return d


print(_update({'water': '16oz'}, 'water'))

</code></pre>
<h3>Prints</h3>
<p>{'water': '17.3oz'}</p>
","2024-06-09 05:14:28","0","Answer"
"78597611","","seperating dictionary values by digits and letters","<p>I'm trying to figure out how to take a dictionary value that contains digits and letters, split the digits from the letters, convert the digits to a float,  prompt the user for numerical input, add the users input to the digits in the value, then return the sum and the letters as a string to the  dictionary.</p>
<p>for example,
user_has = {'water': '16oz}</p>
<p>split 16oz into 16 and 'oz', add the users input of 1.3, then return '17.3oz' to the dictionary as the key's value.</p>
<p>I've tried several different methods that Ive found online, none seem to work for what Im trying to do though.</p>
","2024-06-09 04:57:42","-1","Question"
"78596799","78596451","","<p>Well, this does not pertain to multimap but it should work.</p>
<p>Just iterate over the existing map, adding the entry, followed by attempting to remove the value as a key.  Non duplicates will be preserved and order does not matter.</p>
<p><strong>Generate some data</strong></p>
<pre><code>Map&lt;String,String&gt; map = new HashMap&lt;&gt;();

for (int i = 1; i &lt;= 8; i+=2) {
    String key = &quot;URL&quot;+i;
    String value = &quot;URL&quot; + (i+1);
    map.put(key, value);
    map.put(value,key);
}
map.put(&quot;URL9&quot;,&quot;URL10&quot;);
</code></pre>
<p><strong>Create a new filtered map</strong></p>
<pre><code>Map&lt;String,String&gt; result = new HashMap&lt;&gt;();
for (Entry&lt;String,String&gt; e : map.entrySet()) {
    result.put(e.getKey(), e.getValue());
    result.remove(e.getValue());
}

result.entrySet().stream().forEach(System.out::println);
</code></pre>
<p><strong>prints</strong></p>
<pre><code>URL5=URL6
URL3=URL4
URL1=URL2
URL9=URL10
URL7=URL8
</code></pre>
","2024-06-08 19:54:18","0","Answer"
"78596655","78596451","","<p>Create an intermediate set to store already seen key value pairs and use it when filtering by taking advantage of the fact that <code>set.add</code> returns false when you try to add already existing elements:</p>
<pre><code>import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.ImmutableListMultimap;
import com.google.common.collect.Multimap;

public class Example {
    
    public static void main(String[] args) throws InterruptedException {
        Multimap&lt;String, String&gt; ourToolMappings = ArrayListMultimap.create();

        ourToolMappings.put(&quot;URL1&quot;, &quot;URL2&quot;);
        ourToolMappings.put(&quot;URL2&quot;, &quot;URL1&quot;);
        ourToolMappings.put(&quot;URL4&quot;, &quot;URL3&quot;);
        ourToolMappings.put(&quot;URL3&quot;, &quot;URL4&quot;);

        System.out.println(ourToolMappings);

        Set&lt;Map.Entry&lt;String,String&gt;&gt; set = new HashSet&lt;&gt;(ourToolMappings.size());

        Multimap&lt;String, String&gt; filtered =
                ourToolMappings.entries()
                               .stream()
                               .filter(x -&gt; set.add(Map.entry(x.getKey(), x.getValue())) &amp;&amp;
                                            set.add(Map.entry(x.getValue(), x.getKey())))
                               .collect(ImmutableListMultimap.toImmutableListMultimap(
                                       Map.Entry::getKey, Map.Entry::getValue));

        System.out.println(filtered);
    }
}
</code></pre>
","2024-06-08 18:52:56","2","Answer"
"78596451","","Filter entries in Multimap to remove duplicates","<p>I have a <a href=""https://en.m.wikipedia.org/wiki/Google_Guava"" rel=""nofollow noreferrer""><em>Google Guava</em></a> <a href=""https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/collect/Multimap.html"" rel=""nofollow noreferrer""><code>MultiMap</code></a>, namely  <a href=""https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/collect/ArrayListMultimap.html"" rel=""nofollow noreferrer""><code>com.google.common.collect.ArrayListMultimap</code></a>, in Java that has a lot of entries. The entries are string, like this:</p>
<pre class=""lang-none prettyprint-override""><code>URL1=URL2
URL2=URL1
URL4=URL3
URL3=URL4
</code></pre>
<p>As you can see, I have entries that where the key is value and the value is they. For example I have:</p>
<pre class=""lang-none prettyprint-override""><code>URL1=URL2
URL2=URL1
</code></pre>
<p>However my goal is to eliminate those &quot;duplicates&quot; and have just one result, for example:
<code>*URL1=URL2*</code>. How can I achieve that?</p>
<p>The MultiMap looks like this:
<code>Multimap&lt;String, String&gt; ourToolMappings = of.finalMappings();</code></p>
","2024-06-08 17:24:44","0","Question"
"78595546","78593258","","<p>If you are looking for <code>dicts</code>, it will be better to use <a href=""https://docs.python.org/3/reference/compound_stmts.html#the-with-statement"" rel=""nofollow noreferrer""><code>with</code></a> <a href=""https://docs.python.org/3/library/functions.html#open"" rel=""nofollow noreferrer""><code>open</code></a>. Something like this (with comments):</p>
<pre class=""lang-py prettyprint-override""><code># `dict` to populate
dicts = {}

# using `io.StringIO` for `open('file.txt')` to get a file-like object
with StringIO(txt) as f:
    
    # use a `Flag` to know when to start
    flag = False
    
    # loop through `f`
    for line in f:
        
        # skip empty lines
        if not line in ['\n', '\r\n']:
            
            # new dict entry
            if line.strip().startswith('Summary'):
                
                # use first elem of split as `key` in `dicts`
                key = line.split(':', 1)[0]

                # initialize nested dict
                dicts[key] = {}
                
                # set `flag` to `True` at first found 'Summary`
                if not flag:
                    flag = True
            elif flag:
                # update nested dict (`key`) with `key:value` pairs
                dicts[key].update([[x.strip() for x in line.split(':', 1)]])
</code></pre>
<p>Output:</p>
<pre class=""lang-py prettyprint-override""><code>{'Summary1': {'Num of CLASS 1 NECESSARY found': '8',
  'Num of Shorts found in the path': '1110',
  'Num of Lengths found in the path': '1313'},
 'Summary2': {'Num of CLASS 1 NECESSARY found': '10',
  'Num of Shorts found in the path': '1114',
  'Num of Lengths found in the path': '4567'}}
</code></pre>
<p>If you know in which line the first 'Summary' starts, you could lose the <code>Flag</code> and skip the first lines. E.g., with <a href=""https://docs.python.org/3/library/itertools.html#itertools.islice"" rel=""nofollow noreferrer""><code>itertools.islice</code></a> (cf. <a href=""https://stackoverflow.com/q/9578580/18470692"">here</a>):</p>
<pre class=""lang-py prettyprint-override""><code>dicts = {}

from itertools import islice

# first `n` lines to skip
n = 7

with StringIO(txt) as f:
    for line in islice(f, n, None):
        if not line in ['\n', '\r\n']:
            if line.strip().startswith('Summary'):
                key = line.split(':', 1)[0]
                dicts[key] = {}
            else:
                dicts[key].update([[x.strip() for x in line.split(':', 1)]])

# same output
</code></pre>
<hr />
<p>Of course, you <em>could</em> do this with <code>pandas</code> as well:</p>
<p><strong>Step 1:</strong></p>
<ul>
<li>Use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html"" rel=""nofollow noreferrer""><code>pd.read_csv</code></a>; <code>names</code> will set column labels, <code>skipinitialspace=True</code> will strip whitespace.</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>df = pd.read_csv(StringIO(txt), 
                 sep=':', 
                 header=None,
                 skipinitialspace=True,
                 names=['keys', 'values'])
</code></pre>
<p><strong>Step 2</strong></p>
<ul>
<li>Add a new column (here with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.assign.html"" rel=""nofollow noreferrer""><code>df.assign</code></a>) and populate it with the values from <code>df['keys']</code> if they start with 'Summary' and forward fill blanks: <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.where.html"" rel=""nofollow noreferrer""><code>Series.where</code></a>, <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.startswith.html"" rel=""nofollow noreferrer""><code>Series.str.startswith</code></a>, <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.ffill.html"" rel=""nofollow noreferrer""><code>Series.ffill</code></a>.</li>
<li>Now, use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html"" rel=""nofollow noreferrer""><code>df.dropna</code></a> on the subset <code>['values', 'main_keys']</code>. I.e.:
<ul>
<li><code>NaNs</code> in <code>df['values']</code> will occur only on dict separator lines (like 'Summary1:').</li>
<li><code>NaNs</code> in <code>df['main_keys']</code> will occur only in the 'Parameter' part.</li>
</ul>
</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>df = (df.assign(main_keys =
                df['keys'].where(
                    df['keys'].str.startswith('Summary'))
                .ffill()
                )
      .dropna(subset=['values', 'main_keys'], ignore_index=True)
      )
</code></pre>
<p>We now have this output:</p>
<pre class=""lang-py prettyprint-override""><code>                               keys values main_keys
0    Num of CLASS 1 NECESSARY found      8  Summary1
1   Num of Shorts found in the path   1110  Summary1
2  Num of Lengths found in the path   1313  Summary1
3    Num of CLASS 1 NECESSARY found     10  Summary2
4   Num of Shorts found in the path   1114  Summary2
5  Num of Lengths found in the path   4567  Summary2
</code></pre>
<p>If this were your end goal, using <code>pandas</code> would make sense to me. But if you need the <code>dicts</code>, that requires yet another step:</p>
<p><strong>Step 3:</strong></p>
<ul>
<li>Use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html"" rel=""nofollow noreferrer""><code>df.groupby</code></a> and <a href=""https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.apply.html"" rel=""nofollow noreferrer""><code>groupby.apply</code></a> with a custom lambda function (cf. <a href=""https://stackoverflow.com/a/48208375/18470692"">this SO post</a>):</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>dicts = (df.groupby('main_keys')[['keys', 'values']]
       .apply(lambda x: dict(zip(x['keys'],x['values'])))
       .to_dict())

# same output
</code></pre>
<hr />
<p><strong>Setup used</strong></p>
<pre class=""lang-py prettyprint-override""><code>import pandas as pd
from io import StringIO

txt = &quot;&quot;&quot;Parameters selected:

Fix Path Until: 6/9/2024
train End: 11/6/2024
Min. Float Days: 0
Options: True, False, Nav

Summary1:

Num of CLASS 1 NECESSARY found: 8
Num of Shorts found in the path: 1110
Num of Lengths found in the path: 1313

Summary2:

Num of CLASS 1 NECESSARY found: 10
Num of Shorts found in the path: 1114
Num of Lengths found in the path:4567&quot;&quot;&quot;
</code></pre>
","2024-06-08 11:31:12","1","Answer"
"78593258","","Unordered txt file contents: How to design in proper dictionary","<p>I have txt file and it's contents are unordered like below sample.  I must select first row because it has train run exact time.</p>
<p>my txt file has couple of summary 1, 2 and so on. hence, keys are same but values are different so I need to have summary1 one dict and summary2 another dict and so on. for remaining summary</p>
<p>The train ran in 6 minutes 25 seconds</p>
<pre><code>Parameters selected:

Fix Path Until: 6/9/2024
train End: 11/6/2024
Min. Float Days: 0
Options: True, False, Nav

Summary1:

Num of CLASS 1 NECESSARY found: 8
Num of Shorts found in the path: 1110
Num of Lengths found in the path: 1313

Summary2:

Num of CLASS 1 NECESSARY found: 10
Num of Shorts found in the path: 1114
Num of Lengths found in the path:4567
</code></pre>
<p>I used pd.read_table and try to convert txt to proper data frame but no luck.</p>
<pre><code>summary1 = dict()
result = []
a= pd.read_table('F.txt',header=None, delimiter=None)[0].to_list()
if 'summary1:' in a:
for x in a:
    print(x)
</code></pre>
<pre><code>Expectation is couple of dictionaries I'd like to convert from the txt file  
summary1: {'Num of CLASS 1 NECESSARY found': '8','Num of Shorts found in the path:': '1110','Num of Lengths found in the path': '1313'}

summary2: {'Num of CLASS 1 NECESSARY found': '10','Num of Shorts found in the path:': '1114','Num of Lengths found in the path': '4567'}
</code></pre>
","2024-06-07 17:07:58","0","Question"
"78589896","78588268","","<p>Thank you so much for such a rich post.  It is fantastic that you included everything needed to tinker with a solution.  Your well described input data definitely made me want to spend time examining.</p>
<p>This is one possible solution:</p>
<pre><code>WITH
  sequences AS (
    SELECT 0 as primary_key, 0 AS key1, 1 AS key2, 3 AS value1, 4 AS value2 UNION ALL
    SELECT 0, 1, 0, 8, 5 UNION ALL
    SELECT 0, 1, 1, 1, 2 UNION ALL
    SELECT 1, 2, 1, 1, 1 UNION ALL
    SELECT 1, 2, 3, 4, 4
  ),
  agg AS (
  SELECT
    primary_key,
    key1,
    key2,
    ARRAY_AGG((SELECT AS STRUCT f.* EXCEPT (key1, key2))) AS agg
  FROM sequences AS f
  GROUP BY
    primary_key,
    key1,
    key2
)
SELECT primary_key,
  JSON_ARRAY(
    JSON_OBJECT(CAST(key1 AS STRING), 
      JSON_OBJECT(CAST(key2 AS STRING),agg.agg[0])
    )
  ) AS result FROM agg
</code></pre>
<p>In this example, I am using the JSON functions as described in the BigQuery documentation (<a href=""https://cloud.google.com/bigquery/docs/reference/standard-sql/json_functions#json_array"" rel=""nofollow noreferrer"">ref</a>).  The solution uses the <code>JSON_ARRAY</code> function to create an array and then the elements of the array are nested <code>JSON_OBJECT</code> instances using the data from the query as the values.</p>
","2024-06-07 04:06:47","1","Answer"
"78588268","","Storing JSON data in Bigquery as nested dictionary","<p>Consider some data:</p>
<pre><code>WITH
  sequences AS (
    SELECT 0 as primary_key, 0 AS key1, 1 AS key2, 3 AS value1, 4 AS value2 UNION ALL
    SELECT 0, 1, 0, 8, 5 UNION ALL
    SELECT 0, 1, 1, 1, 2 UNION ALL
    SELECT 1, 2, 1, 1, 1 UNION ALL
    SELECT 1, 2, 3, 4, 4
  ),
  agg AS (
  SELECT
    primary_key,
    key1,
    key2,
    ARRAY_AGG((SELECT AS STRUCT f.* EXCEPT (key1, key2))) AS agg
  FROM sequences AS f
  GROUP BY
    primary_key,
    key1,
    key2
)
SELECT
  a.primary_key,
  a.key1,
  a.key2,
  ANY_VALUE(TO_JSON_STRING((agg))) AS result
FROM
  agg AS a
GROUP BY
  a.primary_key,
  a.key1,
  a.key2
</code></pre>
<p>This gives me data in format of:
<a href=""https://i.sstatic.net/7VGTgLeK.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/7VGTgLeK.png"" alt=""enter image description here"" /></a></p>
<p>However for future faster retrieval; I would like to get data in format of:
<a href=""https://i.sstatic.net/UtxdXhED.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/UtxdXhED.png"" alt=""enter image description here"" /></a></p>
<p>Any pointer on how I can make this happen?</p>
","2024-06-06 17:36:34","0","Question"
"78575938","78575501","","<p>Note that the default value for a nullable type is <code>null</code> and <code>null</code> propagates. I.e., <code>null + x == null</code>.</p>
<p>You can use the null-coalescing operator <code>??</code> to convert a null value to a desired value.</p>
<p>I.e., <code>(null ?? n) + x == n + x</code></p>
<pre class=""lang-cs prettyprint-override""><code>var yr = yearlyResults[co];
yr.OptTotalDos = (yr.OptTotalDos ?? 0f) + (float)optResultYear.OptTotalDos;
yr.OptDos1 = (yr.OptDos1 ?? 0f) + (float)optResultYear.OptDos1;
yr.OptDos2 = (yr.OptDos2 ?? 0f) + (float)optResultYear.OptDos2;
yr.OptCost = (yr.OptCost ?? 0f) + (float)optResultYear.OptCost;
yr.OptProductie = (yr.OptProductie ?? 0f) + (float)optResultYear.OptProductie;

var yrCOo2 = yearlyResultsCO2[co];
yrCOo2.OptConcLp = (yrCOo2.OptConcLp ?? 0f) + (float)optResultYear.OptConcLp;
yrCOo2.Datum = date;
</code></pre>
<p>I assume that the dictionary entries are of a class type (i.e., a reference type). Then you can access the dictionary only once by assigning the entries to a temporary variable: <code>var yr = yearlyResults[co];</code>.</p>
<p>You must be careful with structs, since the dictionary will return you a copy of it instead of a reference. If it was a struct you would have to insert it to the dictionary again at the end: <code>yearlyResults[co] = yr;</code></p>
","2024-06-04 14:07:24","1","Answer"
"78575729","78575501","","<p>The solution was that adding a <code>NULL</code> value with an actual value turns into a <code>NULL</code> value. Therefore,</p>
<pre><code>var yr = yearlyResults[co];

yr.OptTotalDos = (yr.OptTotalDos ?? 0f) + (float)optResultYear.OptTotalDos;  
</code></pre>
<p>Adding the <code>yr.OptTotalDos ?? 0f</code> ensured that if the value is <code>NULL</code> then the value would be changed to <code>0</code>, causing it to continue calculating.</p>
","2024-06-04 13:29:59","1","Answer"
"78575501","","Summing dictionary values in C#","<p>I'm trying to sum some values over a year. My code runs per day, so I need to sum these values after the calculations. The goal is then to export them back to SQL. I've already set up a table and I did manage to export some values to the table, but only the daily values and not the yearly yet.</p>
<pre><code>// YEAR OVERVIEW
OptResultDataYear optResultDataYear = new OptResultDataYear();

// Variations in price
List&lt;float&gt; varprijs = new List&lt;float&gt; { 0.06f, 0.08f, 0.10f, 0.12f, 0.14f, 0.16f, 0.18f };

// Create dictionaries for storing the values
Dictionary&lt;float, OptResultYear&gt; yearlyResults = varPrijs.ToDictionary(co =&gt; co, co =&gt; new OptResultYear { AfdelingId = afd.AfdelingsId, variatiePrijs = co });

// SQL output
OptResultYear optResultYear= new OptResultYear();

for (DateTime date = startYear; date &lt; endYear; date = date.AddDays(1))
{
    foreach (float co in varprijs)
    {
        // Calculate the optimal results with the varPrijs
        ResultScenDay optResultvar = await DayCalc.RunOcapOptimaalDayAsync(afd.AfdelingsId, date, 3600, (int)ScenarioType.Optimal, co, null); // per dag met uurdata.

       // Analyze the code
       optResultYear = analysePeriode.FillOptResultYear(afd.AfdelingsId, kenm.TeeltOppHa, date, optResultvar, co, null);

      // Collect the required values
      yearlyResults[co].OptTotalDos += (float)optResultYear.OptTotalDos;
      yearlyResults[co].OptDos1 += (float)optResultYear.OptDos1;
      yearlyResults[co].OptDos2 += (float)optResultYear.OptDos2;
      yearlyResults[co].OptCost += (float)optResultYear.OptCost;
      yearlyResults[co].OptProductie += (float)optResultYear.OptProductie;
      yearlyResultsCO2[co].OptConcLp += (float)optResultYear.OptConcLp;

      // Set the date for the last entry
      yearlyResultsCO2[co].Datum = date;
   }
}
</code></pre>
<p>The values on the right (the optResultYear.) do have values, and they are calculated as required. However, When adding them to my dictionary I only get NULL values.</p>
<p>Does anyone know how to resolve this or know a better option?</p>
","2024-06-04 12:48:42","0","Question"
"78575236","78575125","","<p>Here is one way to do it.  You are probably worrying about speed prematurely. Wait until the program is done before worrying about performance.  If your approach works, stick with it.</p>
<p>You didn't specify:</p>
<ul>
<li>returning a list or array so I chose array.</li>
<li>converting to an int or leave as a string so I left as a string.</li>
<li>your example implied &quot;feedback&quot; is always at the beginning of the key. If not, please provide a more diverse example.</li>
</ul>
<p>Procedure.</p>
<ul>
<li>stream entrySet</li>
<li>filter on the key and value</li>
<li>extract the number and return in an array.</li>
</ul>
<pre><code>String[] results = requestParam.entrySet().stream()
            .filter(e -&gt; e.getKey().startsWith(&quot;feedback&quot;)
                        &amp;&amp; (Boolean) e.getValue())
            .map(e -&gt; e.getKey().split(&quot;\\.&quot;)[1])
            .toArray(String[]::new);

System.out.println(Arrays.toString(results));
</code></pre>
<p>prints</p>
<pre><code>[2, 1, 4, 5]

</code></pre>
","2024-06-04 11:52:56","4","Answer"
"78575173","78575125","","<p>Using Stream API.</p>
<pre><code>var feedBackNos = results
            .entrySet()
            .stream()
            .filter(entry -&gt; entry.getKey().startsWith(&quot;feedback&quot;) &amp;&amp;
                    entry.getValue() instanceof Boolean)
            .map(mapEntry -&gt; mapEntry.getKey().split(&quot;.//&quot;)[1]).toList();
</code></pre>
","2024-06-04 11:42:17","1","Answer"
"78575139","78575125","","<p>With a HashMap, you can do it easily, but not efficiently. Let me put everyone else's answer into a single one with all the mistakes corrected.</p>
<pre><code>private final String FEEDBACK_PREFIX = &quot;feedback.&quot;;

...

List&lt;String&gt; results = requestParam.entrySet().stream()
    .filter(e -&gt; e.getKey().startsWith(FEEDBACK_PREFIX))
    .filter(e -&gt; Boolean.TRUE.equals(e.getValue()))
    .map(e -&gt; e.getKey())
    .map(k -&gt; k.substring(FEEDBACK_PREFIX.length())
    .toList();
</code></pre>
<p>Use a constant to describe your prefix with an undestandable name. This provides us a quick access to the prefix length when we need it in substring.</p>
<p>Use <code>startsWith()</code> instead of contains because it guards against keys that have &quot;feedback&quot; elsewhere in the string. You may not have it now, but you may have later, this is called <em>defensive programming</em>.</p>
<p>Use the whole &quot;feedback.&quot; as the prefix, with the dot. This is again defensive programming that guards against mistakes where there is a &quot;feedback&quot; prefix that does not match the pattern.</p>
<p>Filter boolean values using Boolean.TRUE.equals as it does the instanceof test internally.</p>
<p>Put each logical and to a separate <code>filter</code> to make the code more readable. Same with <code>map</code>.</p>
<p>Use substring instead of split + array indexing, because at this point the prefix is irrelevant with regards to the result and substring is more efficient.</p>
","2024-06-04 11:36:35","2","Answer"
"78575125","","Java grab all key value pairs from a Map that contains a substring of a word within a key","<p>I have the following Map.</p>
<pre><code>    Map&lt;String, Object&gt; requestParam = new HashMap&lt;&gt;();

    requestParam.put(&quot;name&quot;, &quot;testing123&quot;);
    requestParam.put(&quot;phoneNumber&quot;, &quot;1231231234&quot;);
    requestParam.put(&quot;feedback.1&quot;, true);
    requestParam.put(&quot;feedback.2&quot;, true);
    requestParam.put(&quot;feedback.3&quot;, false);
    requestParam.put(&quot;feedback.4&quot;, true);
    requestParam.put(&quot;feedback.5&quot;, true);
    requestParam.put(&quot;feedback.6&quot;, false);
</code></pre>
<p>I need to go thorugh this Map and find all of the keys with the &quot;feedback&quot; name in them, and then pull out the number next to it where the value is true.</p>
<p>For example, my final result should contain.
[1, 2, 4, 5]</p>
<p>Can I do this easily?</p>
<p>I found a solution doing it like this:</p>
<pre><code>    for (Map.Entry&lt;String, Object&gt; e : requestParam.entrySet()) {
        if (e.getKey().startsWith(&quot;feedback&quot;)) {
            String[] splitKey = e.getKey().split(&quot;\\.&quot;);
            boolean value = (boolean) e.getValue();
            if (value) {
                System.out.println(splitKey[1]);
            }

        }
    }
</code></pre>
<p>Is there a better way? The requestParam map could contain hundreds of entries...</p>
<p>NEW CHANGE:</p>
<pre><code>    var feedBackNos = requestParam
            .entrySet()
            .stream()
            .filter(entry -&gt; entry.getKey().startsWith(&quot;feedback.&quot;))
            .filter(entry -&gt; (entry.getValue() instanceof Boolean &amp;&amp; (Boolean) entry.getValue()))
            .map(mapEntry -&gt; mapEntry.getKey().substring(9));


    feedBackNos.forEach(s -&gt; System.out.println(s));
</code></pre>
","2024-06-04 11:32:04","0","Question"
"78574869","78574808","","<p>You might create DataFrame from single 2D <code>numpy.array</code>, I would flatten 2D array, then stack them, then transpose, then make DataFrame. Simplified example</p>
<pre><code>import numpy as np
import pandas as pd
arr1 = np.array([1,2,3])  # shape (3,)
arr2 = np.array([[4],[5],[6]])  # shape (3,1)
arr_together = np.vstack([arr1, arr2.flatten()])  # shape (2,3)
df = pd.DataFrame(arr_together.T, columns=[&quot;col1&quot;,&quot;col2&quot;])
print(df)
</code></pre>
<p>gives output</p>
<pre><code>   col1  col2
0     1     4
1     2     5
2     3     6
</code></pre>
<p>Observe that values in col1 are from arr1, whilst values in col2 are from arr2.</p>
","2024-06-04 10:40:10","1","Answer"
"78574808","","resizing two arrays to be used in a DataFrame","<p>I'm trying to create a pandas DataFrame from a dictionary. We know that to do so, all the dictionary elements must be of the same dimension. The dictionary is composed of two ndarrays; one with the shape of (325,) and the other one with the shape of (325,1). I'm looking for a way to reshape either one of them so that the DataFrame can be created. Thanks in advance.</p>
<p>When I run the code the following error is encountered:</p>
<pre><code>    raise ValueError(&quot;Per-column arrays must each be 1-dimensional&quot;)
ValueError: Per-column arrays must each be 1-dimensional
</code></pre>
<p>The following picture shows the dictionary details:
<a href=""https://i.sstatic.net/pd2Djefg.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/pd2Djefg.png"" alt=""Dictionary details"" /></a></p>
","2024-06-04 10:28:27","0","Question"
"78574397","78574298","","<p>If your dictionary doesn't contain any lists (as is the case in the sample data) you can use a very simple recursive approach.</p>
<p>The following code will recurse through nested dictionaries looking for keys that contain the substring &quot;mp4&quot; <strong>and</strong> if the associated value is 1 then 1 will be added to a list (for no apparent reason):</p>
<pre><code>def find_mp4(d, count):
    for k, v in d.items():
        if isinstance(v, dict):
            find_mp4(v, count)
        else:
            if &quot;mp4&quot; in k and v == 1:
                count.append(1)
    return count

print(find_mp4(flag_dict, []))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
</code></pre>
<p><strong>Afterthought:</strong></p>
<p>It may be that the intention is to count the number of keys containing the substring &quot;mp4&quot; that also have a value of 1.</p>
<p>If that's the case then:</p>
<pre><code>def find_mp4(d):
    def _find(d, c):
        for k, v in d.items():
            if isinstance(v, dict):
                c = _find(v, c)
            else:
                if &quot;mp4&quot; in k and v == 1:
                    c += 1
        return c
    return _find(d, 0)

print(find_mp4(flag_dict))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>11
</code></pre>
","2024-06-04 09:10:24","0","Answer"
"78574298","","How can i optimize or reduce for loop for this nested python dictionary?","<p>I have this nested dictionary in python</p>
<pre><code>flag_dict = {
    'modl1': {
        'slide1': {
            'screens': {
                'screen1': {
                    'mp4_1': 1,
                    'mp4_2': 0,
                    'mp4_3': 1
                }
            }
        },
        'slide2': {
            'screens': {
                'screen1': {
                    'mp4_1': 0,
                    'mp4_2': 1,
                    'mp4_3': 0
                },
                'screen2': {
                    'mp4_1': 1,
                    'mp4_2': 0,
                    'mp4_3': 1
                }
            }
        }
    },
    'modl2': {
        'slide1': {
            'screens': {
                'screen1': {
                    'mp4_1': 1,
                    'mp4_2': 1,
                    'mp4_3': 0
                }
            }
        },
        'slide2': {
            'screens': {
                'screen1': {
                    'mp4_1': 0,
                    'mp4_2': 1,
                    'mp4_3': 1
                },
                'screen2': {
                    'mp4_1': 1,
                    'mp4_2': 0,
                    'mp4_3': 1
                }
            }
        }
    }
}


</code></pre>
<p>I tried this approach to get inner part of dictionary and update count</p>
<pre><code>count = []
for modl1, mv in flag_dict.items():
    # docs on isinstance vs type https://switowski.com/blog/type-vs-isinstance/
    if isinstance(mv, dict):
        for slide1, sv in mv.items():

            for screen1, scv in sv['screens'].items():

                key_lis = []
                for key, val in scv.items():

                    if 'mp4' in key:
                        key_lis.append(key)
                for i in key_lis:
                    if scv[i] == 1:
                        count.append(scv[i])
print(count)
</code></pre>
<p>I would like to know if i can minimize for loops in my code so a part of code efficiency could be enhanced. As I searched online regarding certain post and answers but still cannot have concrete solution to this any help will be useful.</p>
","2024-06-04 08:47:13","0","Question"
"78574136","78574047","","<p>You can initialize and access each sub-dict with the <code>setdefault</code> method of the object's attribute dict:</p>
<pre><code>class Container:
    def add_value(self, variable, key, value):
        vars(self).setdefault(variable, {})[key] = value
</code></pre>
","2024-06-04 08:12:49","2","Answer"
"78574047","","Python setattr and getattr: best practice with flexible, mutable object variables","<p>I have a class that holds an unspecified number of dicts as variables. I want to provide methods that allow the user to easily append to any of the dicts while naming the corresponding variable, without having to check whether the variable was already created. Example for my goal:</p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; c = Container()
&gt;&gt;&gt; c.add_value(variable=&quot;first_dict&quot;, key=&quot;foo&quot;, value=1)
&gt;&gt;&gt; c.add_value(variable=&quot;first_dict&quot;, key=&quot;bar&quot;, value=2)
&gt;&gt;&gt; c.add_value(variable=&quot;second_dict&quot;, key=&quot;foo&quot;, value=2)
&gt;&gt;&gt; print(c.first_dict)
{&quot;foo&quot;:1, &quot;bar&quot;:2)
&gt;&gt;&gt; print(c.second_dict)
{&quot;foo&quot;:2)
</code></pre>
<p>Currently, this is my solution:</p>
<pre class=""lang-py prettyprint-override""><code>class Container():
    def __init__(self):
        pass

    def add_value(self, variable: str, key: Any, value: Any):
        x = getattr(self, variable, {})
        x[key] = value
        setattr(self, variable, x)
</code></pre>
<p>My concern is that accessing the attribute via <code>getattr</code>, then mutating it and setting it back via <code>setattr</code> introduces overhead that is not necessary.</p>
<p>Is there a better way to write the <code>Container.add_value()</code>-method? Should I approach the whole problem differently?</p>
","2024-06-04 07:55:43","2","Question"
"78573939","78573117","","<p>I assume that you are using the <em>JSON Converter for VBA</em> from here: <a href=""https://github.com/VBA-tools/VBA-JSON"" rel=""nofollow noreferrer"">https://github.com/VBA-tools/VBA-JSON</a></p>
<p>This tool converts JSON-strings into data structures. A JSON is build by 2 different structures:</p>
<ul>
<li><p>A list of Key-Value pairs.  Those lists are often named <strong>&quot;objects&quot;</strong>, with key = property <em>name</em> and value = property <em>value</em>. Lot's of programming languages can create objects on the fly from a JSON but not VBA - there are no dynamic classes in VBA.<br />
The JSON Converter creates a Dictionary out of it, you can access a property by its name (=key) to get its value.<br />
Objects in JSON start with an <code>{</code></p>
</li>
<li><p>A list of values. Those lists are often named <strong>&quot;array&quot;</strong>. A value cannot be addresses by its name (it has no name), but by it's index.<br />
The JSON Converter creates a Collection out of it, you can access a property by its index to get its value. (<em>Why not an array?</em> Because in VBA you need to dimension an array before you can store data into it. It is possible to resize it late, but that's a costly operation.)<br />
Lists in JSON start with an <code>[</code></p>
</li>
</ul>
<p>In your structure, you have</p>
<p> The root object, containing an object with 1 property <code>Building</code>.<br />
  This property itself is an Object with 2 properties (<code>Count</code> and <code>Items</code>).<br />
   <code>Items</code> is an array (it starts with <code>[</code>). Probably the property <code>Count</code> tells that this array contains 2 entries.<br />
    Every entry in that array contains again an object, containing a property <code>name</code>.</p>
<p>Now all you have to do in your 2nd function is to handle the fact that you might not only have <code>Dictionaries</code>, but also <code>Collections</code>. You can do this simply by declaring <code>Dim ThisDictionary As Object</code> (but I would suggest to change the name):</p>
<pre><code>Public Function GetJSONValue2(ParamArray Keys() As Variant) As Variant
    Dim I As long, N As Long
    Dim json As Object
    
    Set json = JSONDictionary
    N = UBound(Keys)
    
    For I = 0 To N - 1
        Debug.Print TypeName(json)
        Set json = json(Keys(I))
    Next I
    
    GetJSONValue2 = json(Keys(N))
End Function
</code></pre>
","2024-06-04 07:32:24","1","Answer"
"78573117","","How do I acess Excel VBA Dictionary Items with a User-defined function/ParamArray?","<p>I have an Excel spreadsheet which creates reports based on contents of a JSON file. In the root of the object structure of the JSON is an object called &quot;Buildings&quot;. It has two properties, &quot;Count&quot; and an Array of objects called &quot;Items&quot;. One of the fields of those objects is a field called &quot;Names&quot;. Ex:</p>
<pre><code>&quot;Buildings&quot;: {
  &quot;Count&quot;: 2,
  &quot;Items&quot;: [
    {
       &quot;Name&quot;: &quot;Building 1&quot;,
       .
       .
       .
    }
  ]
.
.
.
}
</code></pre>
<p>The JSON is loaded into a Dictionary called JSONDictionary using a parser I got from GitHub. I am trying to build an Excel VBA User-Defined Function which uses the JSONDictionary object to walk the nodes of the JSON structure by accepting a parameter array containing the key values in order and returns a variant containing the value of the terminal node. I have written two functions below, GetJSONValue1 and GetJSONValue2. GetJSONValue1 one works correctly but is not a very good solution for more general cases. GetJSONValue2 performs a similar function, but parses the dictionary one key at a time and is a more general approach.</p>
<pre><code>Public Function GetJSONValue(ParamArray Keys() As Variant) As Variant

Dim N%

N = UBound(Keys)

Select Case N
Case 0
  GetJSONValue = JSONDictionary(Keys(0))
Case 1
  GetJSONValue = JSONDictionary(Keys(0))(Keys(1))
Case 2
  GetJSONValue = JSONDictionary(Keys(0))(Keys(1))(Keys(2))
Case 3
  GetJSONValue = JSONDictionary(Keys(0))(Keys(1))(Keys(2))(Keys(3))
Case 4
  GetJSONValue = JSONDictionary(Keys(0))(Keys(1))(Keys(2))(Keys(3))(Keys(4))
End Select

End Function

</code></pre>
<pre><code>Public Function GetJSONValue2(ParamArray Keys() As Variant) As Variant

Dim I%, N%
Dim ThisDictionary As Dictionary

Set ThisDictionary = JSONDictionary
N = UBound(Keys)

For I = 0 To N - 1
  Set ThisDictionary = ThisDictionary(Keys(I))
Next I

GetJSONValue2 = ThisDictionary(Keys(N))

End Function
</code></pre>
<p>In the spreadsheet, the formula GetJSONValue1(&quot;Buildings&quot;,&quot;Items&quot;,1,&quot;Name&quot;) returns &quot;Building 1&quot; as expected. GetJSONValue2(&quot;Buildings&quot;,&quot;Count&quot;) yields a correct result as well. But GetJSONValue2(&quot;Buildings&quot;,&quot;Items&quot;,1,&quot;Name&quot;) returns a #VALUE error. When I step through it, the formula terminates when I try to access JSONDictionary(&quot;Items&quot;). No exception is raised.</p>
<p>What am I doing wrong? TIA.</p>
","2024-06-04 02:15:07","0","Question"
"78570072","78569973","","<p>Mixing your split entries into the end of the list of lines isn't helpful. All you need to do is split each line, which gives you two values. Use one value for the key, the other for the value in your dict. That's all:</p>
<pre><code>D = {}

with open('world_series.txt', 'r') as file:
    for line in file:
        year, team = line.split(' ', 1)
        D[year] = team
</code></pre>
","2024-06-03 11:46:15","0","Answer"
"78569973","","Is there a way to take a lists first element of a list and make it the first items key and second element make it the first items value in python","<p>I have come across a small problem when working on a particular programming exercise
In this exercise I am supposed to get data from a file which contains world series winning teams</p>
<p>example something like this:</p>
<pre><code>1903 Boston Americans
1904 No World Series Held
1905 New York Giants
1906 Chicago White Sox
1907 Chicago Cubs
</code></pre>
<p>i thought of making it to a list first and then converting to a dictionary
something like this</p>
<p>This is how I created the list</p>
<pre><code>with open('world_series.txt','r') as file:
winners=file.read()
line=winners.split('\n')
winner_list=[]
for i in line:
    parts=i.split(' ',1)
    winner_list.extend(parts)
print(winner_list)
</code></pre>
<pre><code>D={1903 : 'Boston Americans',................}
</code></pre>
<p>so on and so forth</p>
<p>I dont know how to do it, if this method isn't a suitable method please do write a another suitable methods.</p>
","2024-06-03 11:22:20","-1","Question"
"78567607","78567402","","<p>Dict values view comparison doesn't look at order. In fact, it doesn't even look at the values. In fact, it doesn't even look at the dict in any way!</p>
<p>Trying to implement values view comparison as order-insensitive would have had major efficiency issues, as values aren't required to be comparable or hashable. Trying to implement values view comparison as caring about order would have been inconsistent and not very useful, especially back when these views were first implemented, when dicts didn't preserve order.</p>
<p>Instead, values views don't implement an <code>==</code> comparison. Dict values views just inherit <code>object.__eq__</code>. Two dict values views are equal if and only if they are, in fact, the exact same object. So you get results like</p>
<pre><code>In [1]: x = {}

In [2]: x.values() == x.values()
Out[2]: False

In [3]: y = x.values()

In [4]: y == y
Out[4]: True
</code></pre>
<p>Your <code>sorted</code> calls produce lists, not dict values views. Lists perform <code>==</code> comparisons differently.</p>
","2024-06-02 20:28:14","0","Answer"
"78567583","78567402","","<p>I understand that your question is highly logical.</p>
<p>But there is also another logic that dictionary is meant to mention which key refers to which value. That is it focuses on key, value pair but not the sequence(index). list and tuple are the only representations of sequence and value.</p>
<p>Both the logic are correct. So  According to me, apart from logic, a programming language should have all the options we want to execute. For instance if you want to check the sequence as well, you can any way use..</p>
<pre><code>print(list(map1.keys()) == list(map2.keys())) #Output: False
</code></pre>
<p>But if you try..</p>
<pre><code>print(list(map1.values()) == list(map2.values())) #Output: True
</code></pre>
<p>Because the output is [1,3] in both the <code>list(map1.values()</code> and <code>list(map1.values()</code>. Again it is logical.</p>
<p>Let us assume why dict should not focus on the sequence.
When you're declaring variables say <code>a=5; b=3</code>, If you change the order and declare <code>b=3; a=5</code>, Is it wrong? When the sequence doesn't matter here, thse sequence should not matter in dict as well. Again, It is logical.</p>
<p>Only thing, you should be able to do whatever you want to do in a good programming language. That's it.</p>
<pre><code>print(map1==map2) #Output: False
print(map1.keys() == map2.keys()) #Output: True
print(map1.values() == map2.values()) #Output: False
print(list(map1.keys()) == list(map2.keys())) #Output: False
print(list(map1.values()) == list(map2.values())) #Output: True
</code></pre>
<p>Note: In plain english, a list refers also to the sequence in which the things are listed. So, In the nomenclature itself, there is a logic. 😊</p>
","2024-06-02 20:13:08","0","Answer"
"78567445","78567402","","<p>When you compare two dictionaries, it only checks that the keys/value pairs are the same, the order is irrelevant (prior to Python 3.7 dictionaries didn't even preserve order, so it didn't make sense to refer to their order).</p>
<p>So when testing whether two dictionaries have the same keys, the same logic implies that the order of keys is irrelevant.</p>
<p>But that logic does not extend to values, because values are only equivalent if each they're associated with corresponding keys.</p>
<p>If in your application you just want to compare the values regardless of the keys and order, you can do that with your <code>sorted(d.values())</code> comparison. That converts the values to a list and puts them in consistent order, ignoring the keys. This is an unusual use case, so it's not the default behavior.</p>
","2024-06-02 19:02:46","0","Answer"
"78567402","","Why does a dict_keys object ignore the order in checking equality, but not the dict_values object?","<p><a href=""https://i.sstatic.net/OX2wbu18.png"" rel=""nofollow noreferrer"">Code Snippet</a></p>
<p><strong>Code:</strong></p>
<pre><code>from collections import Counter

s1 = &quot;yxxx&quot;
s2 = &quot;xyyy&quot;

map1 = Counter(s1)
map2 = Counter(s2)

print(map1.keys())
print(map2.keys())

print(&quot;Are map1's keys and map2's keys equal:&quot;, map1.keys() == map2.keys())

print()
print(map1.values())
print(map2.values())
print(&quot;Are map1's values and map2's values equal:&quot;, map1.values() == map2.values())
print(&quot;Are SORTED map1's values and map2's values equal:&quot;, sorted(map1.values()) == sorted(map2.values()))
</code></pre>
<p><strong>Results:</strong></p>
<pre><code>dict_keys(['y', 'x'])
dict_keys(['x', 'y'])
Are map1's keys and map2's keys equal: True

dict_values([1, 3])
dict_values([1, 3])
Are map1's values and map2's values equal: False
Are SORTED map1's values and map2's values equal: True
</code></pre>
<p>I understand that the return type of <code>keys()</code> function similar to a set-like view, so when evaluating equality the order wouldn't matter, but how about <code>values()</code>? Even though the values in <code>map1</code> and <code>map2</code> are the same, the value returned is still <code>False</code>. But why does calling <code>sorted()</code> return <code>True</code> although the order of the values remain unchanged?</p>
","2024-06-02 18:43:21","1","Question"
"78566129","78565591","","<p>Short answer: You can't directly load a <code>jsonb</code> field into a <code>MapType</code> in Pyspark.</p>
<p>Here's why:</p>
<p>When you read data from a database using PySpark's JDBC data source, PySpark relies on the metadata provided by the JDBC driver to infer the data types of the columns. The JDBC driver maps database data types to Java data types, which are then mapped to PySpark data types. In the case of Postgres <code>jsonb</code> data type, the postgres JDBC driver maps it to a Java <code>String</code> type. PySpark, when interacting with the JDBC driver, receives the <code>jsonb</code> data as a string and infers it as a <code>StringType</code> in the schema. PySpark does not have a built-in understanding of the specific structure within the <code>jsonb</code> data.</p>
<p>Is there a workaround?
Yes, you can achieve your goal in two steps: 1- read the <code>jsonb</code> data as string and 2- use <code>from_json</code> to convert it to <code>MapType</code>. Here's how you can do it:</p>
<pre><code>from pyspark.sql.types import StructType, StructField, StringType, MapType, IntegerType, DecimalType
from pyspark.sql.functions import from_json, col

json_schema = MapType(StringType(),IntegerType()))

schema = StructType([
    StructField('product_id', StringType(), True),
    StructField('description', StringType(), True),
    StructField('attributes', MapType(StringType(), IntegerType(), True), True),
    StructField('tax_rate', DecimalType(), True),
    StructField('attributes_json', StringType(), True)  # Add a temporary field to hold the jsonb data
])

df = spark.read \
    .format(&quot;jdbc&quot;) \
    .option(&quot;url&quot;, &quot;jdbc:postgresql://localhost:5432/postgres&quot;) \
    .option(&quot;dbtable&quot;, &quot;products&quot;) \
    .option(&quot;user&quot;, &quot;user1&quot;) \
    .option(&quot;password&quot;, &quot;password&quot;) \
    .option(&quot;driver&quot;, &quot;org.postgresql.Driver&quot;) \
    .option(&quot;schema&quot;, schema) \
    .load()

# Convert the jsonb column to a MapType
df = df.withColumn(&quot;attributes&quot;, from_json(col(&quot;attributes_json&quot;), json_schema)) \
        .drop(&quot;attributes_json&quot;)
</code></pre>
","2024-06-02 10:39:36","1","Answer"
"78565921","78565137","","<p>Your input file appears to contain a string representation of a Python dictionary. Note: It is <strong>not</strong> JSON</p>
<p>The <em>ast</em> module offers a simple mechanism for decoding such a file.</p>
<p>You can the use the <em>json</em> module to help with formatting the output file.</p>
<pre><code>from ast import literal_eval
import json
from pathlib import Path

INPUT_FILE = Path(&quot;maindictionary.txt&quot;)
OUTPUT_FILE = Path(&quot;inverteddictionary.txt&quot;)

with INPUT_FILE.open() as fd:
    maindictionary: dict[str, list[str]] = literal_eval(fd.read())

    inverted_dictionary: dict[str, list[str]] = {}

    for k, v in maindictionary.items():
        for _v in v:
            inverted_dictionary.setdefault(_v, []).append(k)
    
    with OUTPUT_FILE.open(&quot;w&quot;) as output:
        output.write(json.dumps(inverted_dictionary, indent=2))
</code></pre>
","2024-06-02 09:02:12","0","Answer"
"78565591","","Load jsonb data from postgresql to pyspark and store it in MapType","<p><a href=""https://i.sstatic.net/pBQDA1Cf.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/pBQDA1Cf.png"" alt=""Products table"" /></a></p>
<p><a href=""https://i.sstatic.net/LMfzRjdr.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/LMfzRjdr.png"" alt=""Products table data"" /></a></p>
<p>Products tables create and insert scripts:</p>
<pre><code>create table products (product_id varchar, description varchar, attributes jsonb, tax_rate decimal);

insert into products values ('P1', 'Detergent', '{&quot;cost&quot;: 45.50, &quot;size&quot;: &quot;10g&quot;}', 5.0 );
insert into products values ('P2',  'Bread',    '{&quot;cost&quot;: 45.5, &quot;size&quot;: &quot;200g&quot;}',3.5);
</code></pre>
<p>I am trying to store jsonb data from postgresql to maptype data/dictionary format in PySpark, then extract 'cost' and 'size' from 'attributes' column into seperate columns. But PySpark is reading jsonb data as string.</p>
<p><strong>PySpark code to read data from Postgresql:</strong></p>
<pre><code>import pyspark
from pyspark.sql import SparkSession
from pyspark.sql.functions import col
from pyspark.sql.types import StructType, StructField, StringType, IntegerType, MapType, DecimalType

spark = SparkSession \
    .builder \
    .appName(&quot;Python Spark SQL basic example&quot;) \
    .config(&quot;spark.jars&quot;, &quot;C:\\Users\\nupsingh\\Documents\\Jars\\postgresql-42.7.3.jar&quot;) \
    .getOrCreate()

schema = StructType([

    StructField('product_id',
                StringType(), True),

    StructField('description',
                StringType(), True),

    StructField('attributes',
                MapType(StringType(),IntegerType()),False),

    StructField('tax_rate',
                DecimalType(), True)
])

df = spark.read \
    .format(&quot;jdbc&quot;) \
    .option(&quot;url&quot;, &quot;jdbc:postgresql://localhost:5432/postgres&quot;) \
    .option(&quot;dbtable&quot;, &quot;products&quot;) \
    .option(&quot;user&quot;, &quot;user1&quot;) \
    .option(&quot;password&quot;, &quot;password&quot;) \
    .option(&quot;driver&quot;, &quot;org.postgresql.Driver&quot;) \
    .option(&quot;schema&quot;, schema) \
    .load()

df.show()

df.printSchema()

attributes_col = df.select(&quot;attributes&quot;)

attributes_col.show()

products_df = attributes_col.withColumn(&quot;cost&quot;,
                   col(&quot;attributes&quot;)[&quot;cost&quot;]).withColumn(
    &quot;size&quot;, col(&quot;attributes&quot;)[&quot;size&quot;])

products_df.show()
</code></pre>
","2024-06-02 06:01:50","2","Question"
"78565137","",".txt file being created, but file is blank without invert_dictionary contents (python)","<p><strong>Task:</strong> Write a program to read dictionary items from a file and then write the inverted dictionary to a file.</p>
<p><strong>Problem:</strong> The new output_file is created, but it's created blank. I've read a few forums and tried to make some changes (like adding a .close(), but this seems to have mixed reviews when already using with), so I've taken that bit out. Unsure where to go next to improve my code and get the right result! New to coding.</p>
<ul>
<li>tried adding .close() to the code, then removed</li>
<li>tried modifying the contents of input_file, adding curly brackets, making list items strings, etc. -- unsure what is correct here, does it have to be a properly formatted list?</li>
<li>added if line.count section with continue</li>
</ul>
<p>Current contents of maindictionary.txt</p>
<pre><code>{
   'Art': ['Pocahontas', 'Jasmine', 'Tiana'],
   'Computer Science': ['Rapunzel', 'Cinderella', 'Jasmine', 'Moana'],
   'English': ['Aurora', 'Rapunzel', 'Mulan', 'Tiana', 'Pocahontas'],
   'Geography': ['Belle', 'Cinderella', 'Ariel', 'Thumbelina'],
   'History': ['Cinderella', 'Ariel', 'Thumbelina', 'Aurora'],
   'Physical Education': ['Aurora', 'Mulan', 'Belle', 'Ariel'],
   'Mathematics': ['Jasmine', 'Aurora', 'Rapunzel', 'Moana'],
   'Science': ['Moana', 'Tiana', 'Pocahontas', 'Thumbelina', 'Belle']
}
</code></pre>
<p>Current code</p>
<pre><code>    # indicate the file paths for the two files
    input_file = &quot;/Python/maindictionary.txt&quot;
    output_file = &quot;/Python/inverteddictionary.txt&quot;

    # read the original dictionary from a file
    def read_dictionary(input_file):
        main_dictionary = {}
        with open(input_file, 'r') as file:
            for line in file:
                if line.count(',') != 1:
                    continue
                key, value = line.strip().split(',')
                main_dictionary[key.strip()] = value.strip()
        return main_dictionary

    # invert the dictionary
    def invert_dictionary(main_dictionary):
        inverted_dictionary = {}
        for key, value in main_dictionary.items():
            if value not in inverted_dictionary:
                inverted_dictionary[value] = [key]
            else:
                inverted_dictionary[value].append(key)
        return inverted_dictionary

    # write the inverted dictionary to a different file
    def write_inverted_dictionary(inverted_dictionary, output_file):
        with open(output_file, 'a') as file:
            for key, value in inverted_dictionary.items():
                file.write(f&quot;{key}: {', '.join(value)}\n&quot;)

    # read the main dictionary from the file
    main_dictionary = read_dictionary(input_file)

    # invert the main dictionary, like in programming assignment 7
    inverted_dictionary = invert_dictionary(main_dictionary)

    # write the inverted dictionary to a new file
    write_inverted_dictionary(inverted_dictionary, output_file)
</code></pre>
","2024-06-01 23:37:36","0","Question"
"78556457","78552280","","<p>This is most likely happening because you have a different MeCab dictionary than what node-mecab-async is expecting. If you run</p>
<pre class=""lang-bash prettyprint-override""><code>echo いつもニコニコあなたの隣に這い寄る混沌ニャルラトホテプです！ | mecab
</code></pre>
<p>what do you get? I'm guessing it'll have a lot of <code>?</code> question marks like is output by your script.</p>
<p>You can get information on what dictionary MeCab is using by running <code>mecab -D</code>, and you can select which MeCab dictionary to use by <code>mecab -d /path/to/dictionary/directory</code>. Each dictionary has its own output format, so you need to ensure MeCab is using the same dictionary that your tooling expects.</p>
<p>node-mecab-async seems to expect IPAdic. After I followed the installation directions here <a href=""https://github.com/neologd/mecab-ipadic-neologd"" rel=""nofollow noreferrer"">https://github.com/neologd/mecab-ipadic-neologd</a> I ran the following command to confirm it's what node-mecab-async expects:</p>
<pre><code>$ echo いつもニコニコあなたの隣に這い寄る混沌ニャルラトホテプです！ | mecab -d /opt/homebrew/lib/mecab/dic/mecab-ipadic-neologd
いつも 副詞,一般,*,*,*,*,いつも,イツモ,イツモ
ニコニコ    副詞,助詞類接続,*,*,*,*,ニコニコ,ニコニコ,ニコニコ
あなた 名詞,代名詞,一般,*,*,*,あなた,アナタ,アナタ
の   助詞,連体化,*,*,*,*,の,ノ,ノ
隣   名詞,一般,*,*,*,*,隣,トナリ,トナリ
に   助詞,格助詞,一般,*,*,*,に,ニ,ニ
這い  動詞,自立,*,*,五段・ワ行促音便,連用形,這う,ハイ,ハイ
寄る  動詞,自立,*,*,五段・ラ行,基本形,寄る,ヨル,ヨル
混沌  名詞,一般,*,*,*,*,混沌,コントン,コントン
ニャルラトホテプ    名詞,固有名詞,一般,*,*,*,ニャルラトホテプ,ニャルラトホテプ,ニャルラトホテプ
です  助動詞,*,*,*,特殊・デス,基本形,です,デス,デス
！   記号,一般,*,*,*,*,！,！,！
EOS
</code></pre>
<p>Having confirmed that the raw MeCab output is what I expect, I tweaked the node-mecab-async command to use this dictionary:</p>
<pre class=""lang-js prettyprint-override""><code>var MeCab = new require(&quot;mecab-async&quot;),
  mecab = new MeCab();
mecab.command =
  &quot;/opt/homebrew/bin/mecab -d /opt/homebrew/lib/mecab/dic/mecab-ipadic-neologd&quot;;

mecab.parse(
  &quot;いつもニコニコあなたの隣に這い寄る混沌ニャルラトホテプです！&quot;,
  function (err, result) {
    if (err) throw err;
    console.log(result);
  }
);
</code></pre>
<p>This outputs:</p>
<pre><code>[
  [
    'いつも', '副詞',
    '一般',   '*',
    '*',      '*',
    '*',      'いつも',
    'イツモ', 'イツモ'
  ],
  [
    'ニコニコ',   '副詞',
    '助詞類接続', '*',
    '*',          '*',
    '*',          'ニコニコ',
    'ニコニコ',   'ニコニコ'
  ],
  [
    'あなた', '名詞',
    '代名詞', '一般',
    '*',      '*',
    '*',      'あなた',
    'アナタ', 'アナタ'
  ],
  [
    'の',     '助詞',
    '連体化', '*',
    '*',      '*',
    '*',      'の',
    'ノ',     'ノ'
  ],
  [
    '隣',     '名詞',
    '一般',   '*',
    '*',      '*',
    '*',      '隣',
    'トナリ', 'トナリ'
  ],
  [
    'に',     '助詞',
    '格助詞', '一般',
    '*',      '*',
    '*',      'に',
    'ニ',     'ニ'
  ],
  [ '這い', '動詞', '自立', '*', '*', '五段・ワ行促音便', '連用形', '這う', 'ハイ', 'ハイ' ],
  [
    '寄る',   '動詞',
    '自立',   '*',
    '*',      '五段・ラ行',
    '基本形', '寄る',
    'ヨル',   'ヨル'
  ],
  [
    '混沌',     '名詞',
    '一般',     '*',
    '*',        '*',
    '*',        '混沌',
    'コントン', 'コントン'
  ],
  [
    'ニャルラトホテプ',
    '名詞',
    '固有名詞',
    '一般',
    '*',
    '*',
    '*',
    'ニャルラトホテプ',
    'ニャルラトホテプ',
    'ニャルラトホテプ'
  ],
  [
    'です',   '助動詞',
    '*',      '*',
    '*',      '特殊・デス',
    '基本形', 'です',
    'デス',   'デス'
  ],
  [
    '！', '記号', '一般',
    '*',  '*',    '*',
    '*',  '！',   '！',
    '！'
  ]
]
</code></pre>
<p>which I think is what we expect.</p>
<p>So tldr,</p>
<ol>
<li>Install IPADic or it's modern equivalent, <a href=""https://github.com/neologd/mecab-ipadic-neologd"" rel=""nofollow noreferrer"">https://github.com/neologd/mecab-ipadic-neologd</a></li>
<li>If you use mecab-ipadic-neologd then tweak your <code>mecab.command</code> as above: <code>mecab.command = &quot;/path/to/mecab -d /path/to/mecab-ipadic-neologd&quot;</code></li>
</ol>
<p>(Tip. I'm on macOS and unfortunately <code>brew install mecab-ipadic</code> does't seem to work: I get garbled output. Maybe it's not a UTF-8-compatible dictionary? So I recommend mecab-ipadic-neologd.)</p>
<p>(Shameless promotion. If you try Unidic and you decide you like that dictionary—I've been using Unidic with MeCab for a while and have a pretty complete Node wrapper for it. It's part of a larger package but I think this file should be pretty stand-alone: <a href=""https://github.com/fasiha/curtiz-japanese-nlp/blob/master/mecabUnidic.ts"" rel=""nofollow noreferrer"">https://github.com/fasiha/curtiz-japanese-nlp/blob/master/mecabUnidic.ts</a>)</p>
","2024-05-30 17:26:24","0","Answer"
"78553364","78553217","","<p>You can use <code>transform_values</code> (see the <a href=""https://prestodb.io/docs/current/functions/map.html"" rel=""nofollow noreferrer"">map functions</a> documentation for more details):</p>
<pre class=""lang-sql prettyprint-override""><code>-- sample data
WITH dataset(profiles) AS (
   values (MAP(ARRAY[1], ARRAY[ARRAY[1, 2]])),
          (MAP(ARRAY[2], ARRAY[ARRAY[3, 4]]))
)

-- query
select transform_values(profiles, (k, v) -&gt; element_at(v, 1))
from dataset;
</code></pre>
<p>Output:</p>
<pre><code> _col0
-------
 {1=1}
 {2=3}
</code></pre>
","2024-05-30 07:01:47","1","Answer"
"78553217","","Picking just a single value from Map of Arrays in SQL","<p>This is SQL query.</p>
<p>Let's assume that you have column having the data type map of arrays</p>
<pre><code>    profiles     map(int, array(int))
</code></pre>
<p>so in the table, you see</p>
<pre><code>    profiles     
    {1: [1, 2]}
    {2: [3, 4]}
    {3: [10]}
    {4: []}
</code></pre>
<p>Let's assume that you just wanna pick the first value from each (none if empty), so in the above case</p>
<pre><code>    profiles     
    {1: 1}
    {2: 3}
    {3: 10}
    {4: NULL}
</code></pre>
<p>and the new data type would be</p>
<pre><code>   profiles  map(int, int)
</code></pre>
<p>is there a way to do this?</p>
","2024-05-30 06:27:20","0","Question"
"78552645","","Eclipse 2023-09 indexer failing to validate ""map"" template arguments using MinGW (MYSYS64-11.2.0 version) but compiling/linking properly","<p>The project was moved from Eclipse 2020-12 to Eclipse 2023-09 and the indexer works fine in the 2020 version. It compiles in both versions.</p>
<p>All the other standard containers (vector, list, etc) are properly recognized by the indexer with the only exception of the &quot;map&quot; template.
The  include works and std::map is properly referenced to &quot;stl_map.h&quot; when asked but any declaration of a map has always &quot;Invalid template arguments&quot; and map members are not recognized.</p>
<p>At first glance the configuration is the same between both projects and the Preprocessor Include Paths are checked and equal. The problem persists in newly created projects.</p>
<p>The dialect in both cases is: c++2a</p>
<p>Does the Eclipse 2023 indexer need a newer MinGW version?</p>
","2024-05-30 02:33:02","0","Question"
"78552280","","MeCab doesnt seem to return correct response","<p>So i just installed MeCab and tried to run it in node.</p>
<p>i took example from this url <a href=""https://github.com/hecomi/node-mecab-async#readme"" rel=""nofollow noreferrer"">https://github.com/hecomi/node-mecab-async#readme</a> to check if i installed it properly but i guess something went wrong.</p>
<p>i tried to run the example from documentation</p>
<pre><code>var MeCab = new require('mecab-async')
  , mecab = new MeCab()
;
mecab.parse('いつもニコニコあなたの隣に這い寄る混沌ニャルラトホテプです！', function(err, result) {
    if (err) throw err;
    console.log(result);
});
</code></pre>
<p>the result should be</p>
<pre><code>[ [ 'いつも', '副詞', '一般', '*', '*', '*', '*', 'いつも', 'イツモ', 'イツモ' ],
  [ 'ニコニコ', '副詞', '助詞類接続', '*', '*', '*', '*', 'ニコニコ', 'ニコニコ', 'ニコニコ' ],
  [ 'あなた', '名詞', '代名詞', '一般', '*', '*', '*', 'あなた', 'アナタ', 'アナタ' ],
  [ 'の', '助詞', '連体化', '*', '*', '*', '*', 'の', 'ノ', 'ノ' ],
  [ '隣', '名詞', '一般', '*', '*', '*', '*', '隣', 'トナリ', 'トナリ' ],
  [ 'に', '助詞', '格助詞', '一般', '*', '*', '*', 'に', 'ニ', 'ニ' ],
  [ '這い', '動詞', '自立', '*', '*', '五段・ワ行促音便', '連用形', '這う', 'ハイ', 'ハイ' ],
  [ '寄る', '動詞', '自立', '*', '*', '五段・ラ行', '基本形', '寄る', 'ヨル', 'ヨル' ],
  [ '混沌', '名詞', '一般', '*', '*', '*', '*', '混沌', 'コントン', 'コントン' ],
  [ 'ニャルラトホテプ', '名詞', '一般', '*', '*', '*', '*', '*' ],
  [ 'です', '助動詞', '*', '*', '*', '特殊・デス', '基本形', 'です', 'デス', 'デス' ],
  [ '！', '記号', '一般', '*', '*', '*', '*', '！', '！', '！' ] ]
</code></pre>
<p>but what i get is</p>
<pre><code>[
  [ '?', '名詞', 'サ変接続', '*', '*', '*', '*', '*\r' ],
  [ '?', '名詞', 'サ変接続', '*', '*', '*', '*', '*\r' ],
  [ '?', '名詞', 'サ変接続', '*', '*', '*', '*', '*\r' ],
  [ '?', '名詞', 'サ変接続', '*', '*', '*', '*', '*\r' ],
  [ '?', '名詞', 'サ変接続', '*', '*', '*', '*', '*\r' ],
  [
    '????????????????????????!',
    '名詞',
    'サ変接続',
    '*',
    '*',
    '*',
    '*',
    '*\r'
  ]
]
</code></pre>
<p>does anyone have any idea what i might be doing wrong here?</p>
","2024-05-29 23:10:08","1","Question"
"78551088","78550446","","<p>By default, signals use referential equality (=== comparison). In <code>this.messages.update</code> you are returning the same <code>Map</code>, so in the equality check the &quot;old&quot; value of <code>Map</code> and the &quot;new&quot; value of <code>Map</code> are the same reference.</p>
<p>So you need to return a new <code>Map</code> for your code to work. Also you don't really need <code>msgMap.set(queue, messages)</code>, because you have already added values to <code>messages</code>, and so you are setting the same reference of <code>messages</code>.</p>
<p>The final code looks like this:</p>
<pre><code>messages = signal(new Map&lt;string, Object&gt;());

queryForMessagesInQueue(queue) {
  this.httpClient.get('...').subscribe((newMessages) =&gt; {
    const messages = this.messages().get(queue) || {};
    const addedMessages = newMessages.filter((newMsg) =&gt; !!messages[newMsg.id]);
    if (addedMessages.length) {
      addedMessages.forEach((addedMsg) =&gt; messages[addedMsg.id] = addedMsg);
      this.message.update((msgMap) =&gt; new Map(msgMap));
    }
  });
}
</code></pre>
<p>I would also change <code>Object</code> to <code>Record&lt;string, Message&gt;</code> or index signature <code>{ [messageId: string]: Message }</code>.</p>
","2024-05-29 17:22:47","3","Answer"
"78550446","","Can I use Angular Signals to store a Map?","<p>I'm starting to use Angular new Signals API. But I've been told that we need to treat data as inmutable when using signals.</p>
<p>And I'm not sure if I can do something like this with JS Maps:</p>
<pre class=""lang-js prettyprint-override""><code>// code in my service.

// I'm using this Map to save the messages in a object and get the messages by queue name.
messages = signal(new Map&lt;string, Object&gt;());

queryForMessagesInQueue(queue) {
  this.httpClient.get('...').subscribe((newMessagesArray) =&gt; {
    const messages = this.messages().get(queue) || {};
    // validate if newMessages already exists in the message object
    let addedMessages = 0;
    newMessagesArray.forEach((newMsg) =&gt; {
      const messageExists = !!messages[newMsg.id]

      if (messageExists == false) {
        messages[newMsg.id] = newMsg;
        addedMessages++;
      }
    });

    if (addedMessages !== 0) {
      this.messages.update((msgMap) =&gt; msgMap.set(queue, messages));
    }
  });
}
</code></pre>
<p>Then, in my components I'm doing something like this:</p>
<pre class=""lang-js prettyprint-override""><code>export class MyComponent {
   private service = inject(MyService)

   messages = service.messages; // this is the service signal.
}
</code></pre>
<p>Am I using it correctly?</p>
<p>Can signals be used with data structures like JS Maps?
Will change detection work correctly?</p>
<p>Thanks in advance.</p>
","2024-05-29 15:05:10","2","Question"
"78547019","78546850","","<p>To accompany each model with specialized keyword arguments when passing a collection of models as an argument to a function, the most natural data structure for the models would be an iterable of tuple of model and kwargs so that the function can iteratively unpack each model with its accompanying kwargs:</p>
<pre><code>from typing import Iterable, Any

def compare_models(dataframe: DataFrame, models: Iterable[tuple[Model, dict[str, Any]]):
    results = {}
    for model, kwargs in models:
        x = model()
        x.train(dataframe, **kwargs)
        results.update({model: vars(x)})
    return results
</code></pre>
<p>so you can call it with something like:</p>
<pre><code>compare_models(df, [
    (Model1, dict(foo='Foo', bar=1)),
    (Model2, dict()),
    (Model3, dict(baz='Baz'))
])
</code></pre>
","2024-05-29 02:00:25","1","Answer"
"78546850","","How do I loop in python and dynamically create instances of objects that may require different arguments?","<p>I have various subclasses of statistical models in my repo that typically take similar arguments but some may require special arguments. I'm writing a function to create, train, and score each model and then compare their accuracy. That leads to two linked questions:</p>
<ol>
<li>What is the best data structure to use to loop through models; and</li>
<li>How would I pass the specific special arguments if/when they occur? I think this is a case for kwargs but am still fairly new to implementing kwargs.</li>
</ol>
<p>My current planned architecture is:</p>
<pre class=""lang-py prettyprint-override""><code>def compare_models(dataframe, models):
    results = {}
    for model in models:
        x = ModelClass() #need to select the right model class based on the 
                          #item in models
        x.train(dataframe, &lt;any special arguments&gt;)
        results.update({model: [&lt;x attributes&gt;]})
     
    return results
</code></pre>
","2024-05-29 00:08:23","1","Question"
"78541622","78541519","","<pre class=""lang-py prettyprint-override""><code>my_dict = {&quot;a&quot;: 100, &quot;b&quot;: 1000, &quot;c&quot;: 500}
# Use dictionary comprehension to increase each value by 2%
my_dict = {key: value * 1.02 for key, value in my_dict.items()}
print(my_dict)
</code></pre>
<p>Or use the Pandas library:</p>
<pre class=""lang-py prettyprint-override""><code>import pandas as pd

my_dict = {&quot;a&quot;: 100, &quot;b&quot;: 1000, &quot;c&quot;: 500}
df = pd.DataFrame(list(my_dict.items()), columns=['key', 'value'])

# Increase each value by 2%
df['value'] *= 1.02

my_dict = pd.Series(df.value.values, index=df.key).to_dict()
print(my_dict)
</code></pre>
","2024-05-28 01:40:11","1","Answer"
"78541519","","How could I change all values in a dictionary by a percentage?","<p>Is there a easy way to change every dictionary value by a percentage or do I have to loop through them all and change them by a percentage lets say 2%. So the first one that is 100 would change to 102% but the second that's 1000 would change by 20 so 1020.</p>
","2024-05-28 00:30:41","0","Question"
"78539419","78525287","","<p>It took me some time to get this right, but check this out.</p>
<pre><code>def flat(out, *kvs):
    match kvs:
        case []: yield out
        case (k, []), *kvs: yield from flat(out, *kvs)
        case (k, list(l)), *kvs: 
            for v in l: yield from flat(out, (k, v), *kvs)
        case (_, dict(d)), *kvs: yield from flat(out, *d.items(), *kvs)
        case (k, v), *kvs: yield from flat([*out, (k, v)], *kvs)
        case _: raise ValueError(&quot;Invalid&quot;)
</code></pre>
<p>That is all you need! This implementation makes extensive use of recursion, <a href=""https://peps.python.org/pep-0636/"" rel=""nofollow noreferrer"">pattern mathcing</a> and <a href=""https://wiki.python.org/moin/Generators"" rel=""nofollow noreferrer"">generators</a>.</p>
<p>You can try it out like this:</p>
<pre><code>x = map(dict, flat([], (..., test_dict)))
print(*x, sep='\n')

# {'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'HOUSE', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'NEAR MARKET', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'AP', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'NEAR PARK', 'phones': '123456', 'gender': 'MASC'}
</code></pre>
<p>With your second input data, result would be as below:</p>
<pre><code># {'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'HOUSE', 'category': 'G123', 'products': 'test1', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'HOUSE', 'category': 'G123', 'products': 'test2', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'NEAR MARKET', 'category': 'G123', 'products': 'test1', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'NEAR MARKET', 'category': 'G123', 'products': 'test2', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'AP', 'category': 'G123', 'products': 'test1', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'AP', 'category': 'G123', 'products': 'test2', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'NEAR PARK', 'category': 'G123', 'products': 'test1', 'phones': '123456', 'gender': 'MASC'}
# {'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'NEAR PARK', 'category': 'G123', 'products': 'test2', 'phones': '123456', 'gender': 'MASC'}
</code></pre>
<p><strong>Edit</strong>: Mapped the key-value pairs into dicts as per requirements, made the code neatier.</p>
","2024-05-27 13:39:27","3","Answer"
"78533666","78533442","","<p>The <code>map</code> function is intended to be used with (typed) datasets.</p>
<p>You could use</p>
<pre class=""lang-scala prettyprint-override""><code>val mapped1: Dataset[Int] = statesDf.map(r =&gt; r.getInt(0) * 2)
</code></pre>
<p>or</p>
<pre class=""lang-scala prettyprint-override""><code>case class MyClass(id: Integer)
val mapped2: Dataset[MyClass] = statesDf.map(r =&gt; MyClass(r.getInt((0)*2)))
</code></pre>
<p><a href=""https://github.com/apache/spark/blob/branch-3.3/sql/core/src/main/scala/org/apache/spark/sql/SQLImplicits.scala"" rel=""nofollow noreferrer"">The implicit encoders</a> work mostly for primitives, their sequences and product types.</p>
","2024-05-25 20:41:38","1","Answer"
"78533442","","Spark: No implicits found for parameter evidence","<p>I have the following Spark code on Scala:</p>
<pre><code>  def main(args: Array[String]): Unit = {
       val spark = SparkSession.builder.master(&quot;local&quot;).getOrCreate()
       import spark.implicits._

    val scheme = new StructType()
        .add(new StructField(&quot;state_id&quot;, IntegerType, true))
        .add(new StructField(&quot;state&quot;, StringType, true))
         .add(new StructField(&quot;recommendation&quot;, StringType, true))

  val statesDf: DataFrame = spark.read
        .format(&quot;jdbc&quot;)
        .schema(scheme)
        .option(&quot;driver&quot;, &quot;org.postgresql.Driver&quot;)
        .option(&quot;url&quot;, &quot;jdbc:postgresql://localhost:5432/postgres&quot;)
        .option(&quot;dbtable&quot;, &quot;public.states&quot;)
        .option(&quot;user&quot;, &quot;postgres&quot;)
        .option(&quot;password&quot;, &quot;postgres&quot;)
        .load()

   statesDf.map(r =&gt; Row(r.getInt(0) * 2)).show()

  }
</code></pre>
<p>And I receive the error near &quot;map&quot;-function:</p>
<pre><code> No implicits found for parameter evidence$6: Encoder[Row]  
</code></pre>
<p>I expected &quot;import spark.implicits._&quot; was enough for prevent this problem, but I was wrong</p>
","2024-05-25 19:01:33","1","Question"
"78531820","78531630","","<p>If you simplify your headers to <strong>only</strong> contain Authorization you can do this:</p>
<pre><code>import requests
import json

headers = {
    &quot;Authorization&quot;: &quot;Bearer 2|NaXRu9JnMpSdb8l86BkJxj6gzKJofnhmExwr8EWkQtHoattDAGimsSYhpM22a61e1crjTjfIGTKfhzxA&quot;
}

url = &quot;https://extranet-lv.bwfbadminton.com/api/vue-current-live&quot;
js = {&quot;drawCount&quot;: &quot;0&quot;}

with requests.post(url, json=js, headers=headers) as response:
    response.raise_for_status()
    print(json.dumps(response.json(), indent=2))
</code></pre>
","2024-05-25 08:10:32","0","Answer"
"78531804","78531630","","<p>This has little to do with Unicode. You’re simply looking at binary gibberish as text. Why do you get binary gibberish instead of the expected JSON? Likely because you claim to be ready to accept binary gibberish:</p>
<pre><code>'Accept-Encoding': 'gzip, deflate, br'
</code></pre>
<p>The server is likely compressing the response as gzip or such, because you’re claiming to be okay with it. But actually you’re not, so remove that line from your request headers.</p>
","2024-05-25 08:04:26","1","Answer"
"78531654","78531630","","<p>I got the result <code>Response content is not valid JSON:</code> error. You may inspect the result as follow:</p>
<pre><code>def get_tid() -&gt; str:
    URL = 'https://extranet-lv.bwfbadminton.com/api/vue-current-live'
    
    try:
        r = requests.post(URL, headers=headers, json={'drawCount': '0'})
        r.raise_for_status()  # Check if the request was successful
    except requests.exceptions.HTTPError as http_err:
        print(f&quot;HTTP error occurred: {http_err}&quot;)
        return
    except Exception as err:
        print(f&quot;Other error occurred: {err}&quot;)
        return
    
    try:
        text = r.json()  # Attempt to parse the JSON response
        print(text)
    except requests.exceptions.JSONDecodeError:
        print(&quot;Response content is not valid JSON:&quot;)
        print(r.text)  # Print the raw response text for debugging
</code></pre>
","2024-05-25 07:03:12","-2","Answer"
"78531630","","How to transform unicoded output of requests to dictionary","<p>I have the following code</p>
<pre><code>import requests


headers = {
    'Host': 'extranet-lv.bwfbadminton.com',
    'Content-Length': '0',
    'Sec-Ch-Ua': '&quot;Chromium&quot;;v=&quot;123&quot;, &quot;Not:A-Brand&quot;;v=&quot;8&quot;',
    'Accept': 'application/json, text/plain, */*',
    'Content-Type': 'application/json;charset=UTF-8',
    'Sec-Ch-Ua-Mobile': '?0',
    'Authorization': 'Bearer 2|NaXRu9JnMpSdb8l86BkJxj6gzKJofnhmExwr8EWkQtHoattDAGimsSYhpM22a61e1crjTjfIGTKfhzxA',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.6312.122 Safari/537.36',
    'Sec-Ch-Ua-Platform': '&quot;macOS&quot;',
    'Origin': 'https://match-centre.bwfbadminton.com',
    'Sec-Fetch-Site': 'same-site',
    'Sec-Fetch-Mode': 'cors',
    'Sec-Fetch-Dest': 'empty',
    'Referer': 'https://match-centre.bwfbadminton.com/',
    'Accept-Encoding': 'gzip, deflate, br',
    'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8',
    'Priority': 'u=1, i'
}


def get_tid() -&gt; str:
    URL = f'https://extranet-lv.bwfbadminton.com/api/vue-current-live'

    r = requests.post(URL, headers=headers, json={'drawCount': '0'})

    if r.status_code == 200:
        encoded_r = r.text.encode('utf-8')
</code></pre>
<p>The output should look as follows:</p>
<pre><code>{&quot;results&quot;:[{&quot;id&quot;:4746,&quot;code&quot;:&quot;DAC5B0C1-A817-4281-B3C6-F2F3DA65FD2B&quot;,&quot;name&quot;:&quot;PERODUA Malaysia Masters 2024&quot;, ...}
</code></pre>
<p>If I'm not mistaken, the output of <code>r.text</code> consists of unicode characters:</p>
<p><a href=""https://i.sstatic.net/HLo7CqOy.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/HLo7CqOy.png"" alt=""enter image description here"" /></a></p>
<p>How do I transform this to the desired dictionary?</p>
","2024-05-25 06:53:18","0","Question"
"78528178","78525287","","<blockquote>
<p>In which part of my recursion am I going wrong, so it doesn't generate my desired output?</p>
</blockquote>
<p>One could say it goes wrong where it appends a result before all keys are known without ever fixing this result. However, I don't see a way of correcting this without substantial changes to the given code.</p>
<pre><code>def get_list_values(lista, key_name):
    results = []
    for l in lista:
        if isinstance(l, dict):
            results += search_values(l)
        else:
            results += [{key_name: l}]
    return results

def search_values(dicionario):
    results = [{}]
    for k, v in dicionario.items():
      results_metodo = []
      for r in results: # multiply current results by new values
        if isinstance(v, list):
            for d in get_list_values(v, k): results_metodo += [dict(r, **d)]
        elif isinstance(v, dict):
            for d in search_values(v): results_metodo += [dict(r, **d)]
        else:
            results_metodo += [dict(r, **{k: v})]
      results = results_metodo
    return results 

for r in search_values(test_dict): print(r)
</code></pre>
","2024-05-24 11:12:22","2","Answer"
"78525287","","Flat a python dict containing lists","<p>I am trying to normalize a dictionary containing some lists. As an MVCE (Minimal, Verifiable, Complete Example), consider the following dictionary:</p>
<pre class=""lang-py prettyprint-override""><code>test_dict = {
    'name' : 'john',
    'age' : 20,
    'addresses' : [
        {
            'street': 'XXX',
            'number': 123,
            'complement' : [
                'HOUSE',
                'NEAR MARKET'
            ]
        },
        {
            'street': 'YYY',
            'number': 456,
            'complement' : [
                'AP',
                'NEAR PARK'
            ]
        },
    ],
    'phones' : [
        '123456'
    ],
    'gender' : 'MASC'
}
</code></pre>
<p>I want each list found in the dictionary to generate a line, so my desired output is:</p>
<pre><code>{'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'HOUSE', 'phones': '123456', 'gender' : 'MASC'}
{'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'NEAR MARKET', 'phones': '123456', 'gender' : 'MASC'}
{'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'AP', 'phones': '123456', 'gender' : 'MASC'}
{'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'NEAR PARK', 'phones': '123456', 'gender' : 'MASC'}
</code></pre>
<p>However, when I run my code, I am not able to iterate over more than one list. My intention was to develop a recursive function, so I wouldn't have to worry about a dictionary with more complex structures (a dictionary with more lists inside dictionaries, etc.). However, when I run my code, the output I get is:</p>
<pre><code>{'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'HOUSE'}
{'name': 'john', 'age': 20, 'street': 'XXX', 'number': 123, 'complement': 'NEAR MARKET'}
{'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'AP'}
{'name': 'john', 'age': 20, 'street': 'YYY', 'number': 456, 'complement': 'NEAR PARK'}
{'name': 'john', 'age': 20, 'phones': '123456'}
</code></pre>
<p>My python code (MVCE):</p>
<pre class=""lang-py prettyprint-override""><code>def get_list_values(lista, dicionario, key_name, results):
    if len(lista) &gt; 0:
        for l in lista:
            if isinstance(l, dict):
                search_values(l, dicionario.copy(), results)
            else:
                dicionario_metodo = dicionario.copy()
                dicionario_metodo[key_name] = l
                results.append(dicionario_metodo)

def search_values(dicionario, test, results):
    for k, v in dicionario.items():
        if isinstance(v, list):
            get_list_values(v, test, k, results )
        else: 
            test[k] = v
    if not any(isinstance(v, list) for v in dicionario.values()):
        results.append(test.copy())
    return results 


test = {}
results = []
for r in search_values(test_dict, test, results):
    print(r)
</code></pre>
<p>In which part of my recursion am I going wrong, so it doesn't generate my desired output?</p>
<hr />
<p>Edit 1:</p>
<pre><code>test_dict = {
    'name' : 'john',
    'age' : 20,
    'addresses' : [
        {
            'street': 'XXX',
            'number': 123,
            'complement' : [
                'HOUSE',
                'NEAR MARKET'
            ]
        },
        {
            'street': 'YYY',
            'number': 456,
            'complement' : [
                'AP',
                'NEAR PARK'
            ]
        },
    ],
    'type' : {
        'category': 'G123',
        'products': [
            'test1',
            'test2'
        ]
    },
    'phones' : [
        '123456'
    ],
    'gender' : 'MASC'
}
</code></pre>
","2024-05-23 19:50:24","2","Question"
"78520288","78520256","","<p>Try:</p>
<pre class=""lang-py prettyprint-override""><code>from functools import reduce
from operator import or_

out = df.groupby(&quot;mystring&quot;, as_index=False)[&quot;mydict&quot;].agg(lambda x: reduce(or_, x))

print(out)
</code></pre>
<p>Prints:</p>
<pre class=""lang-none prettyprint-override""><code>  mystring                                mydict
0        a  {'key1': 'value1', 'key2': 'value2'}
1        b                    {'key3': 'value3'}
</code></pre>
<hr />
<p>Or:</p>
<pre class=""lang-py prettyprint-override""><code>out = df.groupby(&quot;mystring&quot;, as_index=False)[&quot;mydict&quot;].agg(
    lambda x: reduce(dict.__or__, x)
)
</code></pre>
<hr />
<p>Or:</p>
<pre class=""lang-py prettyprint-override""><code>out = df.groupby(&quot;mystring&quot;, as_index=False)[&quot;mydict&quot;].agg(
    lambda x: reduce(lambda a, b: {**a, **b}, x)
)
print(out)
</code></pre>
<hr />
<p>Or:</p>
<pre class=""lang-py prettyprint-override""><code>out = df.groupby(&quot;mystring&quot;, as_index=False)[&quot;mydict&quot;].agg(
    lambda x: reduce(lambda a, b: dict(**a, **b), x)
)
print(out)
</code></pre>
","2024-05-22 22:44:17","1","Answer"
"78520256","","How to merge dictionaries contained in a Pandas dataframe as a groupby operation","<p>Let us consider a pandas dataframe <code>df</code> containing dictionaries in one of its columns (column <code>mydict</code>):</p>
<blockquote>
<pre><code>      mystring    mydict 
0     a           {'key1': 'value1'} 
1     a           {'key2': 'value2'}
2     b           {'key2': 'value2'}
</code></pre>
</blockquote>
<p>I would like to &quot;merge&quot; the dictionaries as part of a groupby operation, <em>e.g.</em> <code>df.groupby('mystring')['mydict'].apply(lambda x: merge_dictionaries(x))</code>.</p>
<p>The expected output for <code>mystring</code> 'a' would be: <code>{'key1': 'value1', 'key2': 'value2'}</code></p>
<p>The usual way of combining dictionaries is to <em>update</em> an existing dictionary (<code>dict1.update(dict2)</code>), so I am not sure how to implement this here.</p>
<p>Here is the code snippet to create the dataframe used in this example:</p>
<pre><code>mycolumns = ['mystring', 'mydict']
df = pd.DataFrame(columns = mycolumns)
df = df.append(pd.DataFrame(['a', {'key1':'value1'}],mycolumns).T)
df = df.append(pd.DataFrame(['a', {'key2':'value2'}],mycolumns).T)
df = df.append(pd.DataFrame(['b', {'key3':'value3'}],mycolumns).T)
df = df.reset_index(drop=True)
</code></pre>
<p><strong>EDIT:</strong> a way to achieve a similar result without using groupby would be to iterate over the <code>mystring</code> and then update the dictionary:</p>
<pre><code>merged_dict = {}
for mystring in df.mystring.unique():
    for mydict in df[df.mystring==mystring]['mydict']:
        print(mydict)
        merged_dict.update(mydict)
</code></pre>
<p><strong>EDIT 2</strong>: <code>append</code> is no longer available in pandas 2.0.1. Here is the alternate snippet to create the example dataframe using <code>concat</code>:</p>
<pre><code>mycolumns = ['mystring', 'mydict']
df = pd.DataFrame(columns = mycolumns)
df = pd.concat([df, pd.DataFrame(['a', {'key1':'value1'}],mycolumns).T])
df = pd.concat([df, pd.DataFrame(['a', {'key2':'value2'}],mycolumns).T])
df = pd.concat([df, pd.DataFrame(['b', {'key3':'value3'}],mycolumns).T])
df = df.reset_index(drop=True)
</code></pre>
","2024-05-22 22:34:06","1","Question"
"78511945","78511108","","<p>You can shorten it up a bit using <code>setdefault</code>, but you are not going to get speed ups from using numpy or pandas because you still need to perform the grouping operations and move the data back into native Python objects.</p>
<pre class=""lang-py prettyprint-override""><code>def indices_dict(l):
    d = {}
    for i, e in enumerate(l):
        d.setdefault(e, []).append(i)
    return d
</code></pre>
","2024-05-21 12:39:02","2","Answer"
"78511943","78511108","","<p>As for me current code is OK and it doesn't need optimizations.</p>
<p>You can only remove <code>dict()</code> because <code>d</code> is already a <code>dict</code></p>
<pre><code>def indices_dict(l):
    d = {}
    for i, e in enumerate(l):
        if not e in d:
            d[e] = []
        d[e].append(i)
    return d
</code></pre>
<p>If you want to learn something new then you can use special dictionary with default value - <code>collections.defaultdict</code> - and then you can use <code>list</code> as default value to skip <code>if</code>. But this will need <code>dict()</code> at the end to convert <code>defaultdict</code> to normal <code>dict</code></p>
<pre><code>import collections
 
def indices_dict(l):
    d = collections.defaultdict(list)
    for i, e in enumerate(l):
        d[e].append(i)
    return dict(d)
</code></pre>
","2024-05-21 12:38:27","2","Answer"
"78511108","","Python dict of indices from list","<p>I have a list of N pairs of integers [(int1, int2), (int3, int4) ...], (or any immutable objects that can be used as dict keys). The list contains ~sqrt(N) unique items.
I want a dict where each element is a unique element of the input list, and each value is a list of indices of the element in the list.
eg</p>
<pre><code>l = [(1,2),(1,2),(1,3),(1,4),(5,2)]
d = {(1, 2): [0, 1], (1, 3): [2], (1, 4): [3], (5, 2): [4]}
</code></pre>
<p>I can build this dictionary in the following way</p>
<pre><code>def indices_dict(l):
    d = {}
    for i, e in enumerate(l):
        if not e in d:
            d[e] = []
        d[e].append(i)
    return dict(d)
</code></pre>
<p>But I seems like looping over all the elements if not optimal.
How could I make this faster by using more builtin python or numpy functions ?</p>
","2024-05-21 10:09:03","0","Question"
"78509318","78508769","","<p>Given the variables</p>
<pre class=""lang-yaml prettyprint-override""><code>  host_port: 80
  instance_running:
    instance_ids:
      - i-05a765076f4cbf03b
      - i-096b8a656d875f38a
      - i-0b5156565ac17c9e4
      - i-0865656657565edd5
</code></pre>
<p>There are many options on how to create <em>targets</em></p>
<pre class=""lang-yaml prettyprint-override""><code>  targets:
  - Id: i-05a765076f4cbf03b
    Port: 80
  - Id: i-096b8a656d875f38a
    Port: 80
  - Id: i-0b5156565ac17c9e4
    Port: 80
  - Id: i-0865656657565edd5
    Port: 80
</code></pre>
<ul>
<li>You can use either the filter <a href=""https://docs.ansible.com/ansible/latest/collections/community/general/docsite/filter_guide_abstract_informations_dictionaries.html#dictionaries"" rel=""nofollow noreferrer"">community.general.dict_kv</a></li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  ids: &quot;{{ instance_running.instance_ids |
           map('community.general.dict_kv', 'Id') }}&quot;
</code></pre>
<p>, or <a href=""https://docs.ansible.com/ansible/latest/collections/community/general/json_query_filter.html"" rel=""nofollow noreferrer"">community.general.json_query</a></p>
<pre class=""lang-yaml prettyprint-override""><code>  ids: &quot;{{ instance_running.instance_ids |
           community.general.json_query('[].{Id: @}') }}&quot;
</code></pre>
<p>to create a list of dictionaries</p>
<pre class=""lang-yaml prettyprint-override""><code>  ids:
  - Id: i-05a765076f4cbf03b
  - Id: i-096b8a656d875f38a
  - Id: i-0b5156565ac17c9e4
  - Id: i-0865656657565edd5
</code></pre>
<ul>
<li>Then, create a <em>product</em> of the lists and <em>combine</em> the items</li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  targets: &quot;{{ ids |
               product([{'Port': host_port}]) |
               map('combine') }}&quot;
</code></pre>
<ul>
<li>The next option is the filter <a href=""https://docs.ansible.com/ansible/latest/collections/community/general/docsite/filter_guide_abstract_informations_dictionaries.html"" rel=""nofollow noreferrer"">community.general.dict</a></li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  targets: &quot;{{ instance_running.instance_ids |
               product([host_port]) |
               map('zip', ['Id', 'Port']) |
               map('map', 'reverse') |
               map('community.general.dict') }}&quot;
</code></pre>
<ul>
<li>But, the easiest option is to create the below query</li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  _query: '[].{Id: @, Port: `{{ host_port }}`}'
  targets: &quot;{{ instance_running.instance_ids |
               community.general.json_query(_query) }}&quot;
</code></pre>
<hr>
<sup>
<p>Example of a complete playbook for testing</p>
<pre class=""lang-yaml prettyprint-override""><code>- hosts: all

  vars:

    host_port: 80
    instance_running:
      instance_ids:
        - i-05a765076f4cbf03b
        - i-096b8a656d875f38a
        - i-0b5156565ac17c9e4
        - i-0865656657565edd5

    ids1: &quot;{{ instance_running.instance_ids |
              map('community.general.dict_kv', 'Id') }}&quot;
    ids2: &quot;{{ instance_running.instance_ids |
              community.general.json_query('[].{Id: @}') }}&quot;
    target1: &quot;{{ ids1 |
                 product([{'Port': host_port}]) |
                 map('combine') }}&quot;
    target2: &quot;{{ instance_running.instance_ids |
                 product([host_port]) |
                 map('zip', ['Id', 'Port']) |
                 map('map', 'reverse') |
                 map('community.general.dict') }}&quot;
    _query: '[].{Id: @, Port: `{{ host_port }}`}'
    target3: &quot;{{ instance_running.instance_ids |
                 community.general.json_query(_query) }}&quot;

  tasks:

    - debug:
        var: ids1
    - debug:
        var: ids2

    - debug:
        var: target1
    - debug:
        var: target2
    - debug:
        var: target3
</code></pre>
</sup>
","2024-05-21 01:42:33","2","Answer"
"78508885","78508769","","<p>The simplest solution seems to be just to construct a list of dicts in a loop:</p>
<pre class=""lang-yaml prettyprint-override""><code>---
- name: Assign the variable
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    instance_running:
      instance_ids: [
        &quot;i-05a765076f4cbf03b&quot;,
        &quot;i-096b8a656d875f38a&quot;,
        &quot;i-0b5156565ac17c9e4&quot;,
        &quot;i-0865656657565edd5&quot;
      ]
    host_port: 22
  tasks:
    - name: Generate the list of dicts
      set_fact:
        targets: &quot;{{ targets | default([]) + [{ 'id': item, 'port': host_port }] }}&quot;
      loop: &quot;{{ instance_running.instance_ids }}&quot;

    - name: Show the result
      debug:
        var: targets
</code></pre>
<p>The result would be as follows:</p>
<pre class=""lang-yaml prettyprint-override""><code>TASK [Show the result] *****************************************************************
ok: [localhost] =&gt; 
  targets:
  - id: i-05a765076f4cbf03b
    port: 22
  - id: i-096b8a656d875f38a
    port: 22
  - id: i-0b5156565ac17c9e4
    port: 22
  - id: i-0865656657565edd5
    port: 22
</code></pre>
","2024-05-20 21:50:34","1","Answer"
"78508769","","How to convert an Ansible list to a list of dictionaries adding the same key:value per item","<p>So I have a list of AWS Instance IDs:</p>
<pre><code>ok: [localhost] =&gt; {
    &quot;instance_running.instance_ids&quot;: [
        &quot;i-05a765076f4cbf03b&quot;,
        &quot;i-096b8a656d875f38a&quot;,
        &quot;i-0b5156565ac17c9e4&quot;,
        &quot;i-0865656657565edd5&quot;
    ]
}
</code></pre>
<p>And I want to assign it to a dict variable to use in the <code>targets</code> parameter. The port is the same for all the ids and is another variable:</p>
<pre class=""lang-yaml prettyprint-override""><code>targets:
  - Id: &quot;{{ instance_id }}&quot;
    Port: &quot;{{ host_port }}&quot;
</code></pre>
<p>I am confused by the <code>map</code> function and the <code>community.general.dict</code></p>
","2024-05-20 21:02:29","1","Question"
"78502169","78501972","","<p>I am not sure I understood correctly, but it seems you want to fill in the values in the column <code>Score</code> based on a lookup-table <code>d</code> matching the score from the previous row.</p>
<p>If that is the case, it could be very simple and no lambdas or applies are needed. Just change your lookup table to a dict, iterate over your data and fill in your value on each row using the previous row index.</p>
<pre><code>d = {
    ('Won', 0, 'Five_Zero'): &quot;Five_Five&quot;,
    ('Won', 1, 'Five_Zero'): &quot;Three_Zero&quot;,
    ('Lost', 0, 'Five_Zero'): &quot;Three_Zero&quot;,
    ('Lost', 1, 'Five_Zero'): &quot;Five_Five&quot;,
    ('Won', 0, 'Five_Five'): &quot;Five_Three&quot;,
    ('Lost', 0, 'Five_Five'): &quot;Three_Five&quot;,
    ('Won', 1, 'Five_Five'): &quot;Three_Five&quot;,
    ('Lost', 1, 'Five_Five'): &quot;Five_Three&quot;,
}

for i in range(len(touch3.Seconds)):
    if touch3.Score[i] not in ([&quot;Five_Zero&quot;, &quot;Zero_Five&quot;]):
       touch3.Score[i] = d.get((touch3.WonLost[i], touch3.OnServeCorrected[i], touch3.Score[i-1]),&quot;_&quot;)
</code></pre>
<p><a href=""https://i.sstatic.net/JpxCBHD2.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/JpxCBHD2.png"" alt=""enter image description here"" /></a></p>
","2024-05-19 09:53:01","1","Answer"
"78501972","","Iteratively source a value from a dictionary","<p>I have a data set where I know a limited number of values and based on other values in a data set I can figure out what the subsequent values are.  I could do this with a huge if function, but I know long ago someone (in a job with code I no longer have access to) showed me how to source these values from a dictionary using lambda and apply.</p>
<p>I need to create this iteratively because whilst I can figure out a value post &quot;Five_Zero&quot;, after that I have nothing to go on and need the prior value to know the next.</p>
<p>This is what my starting data looks like.<br />
<a href=""https://i.sstatic.net/b1aItGUr.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/b1aItGUr.png"" alt=""enter image description here"" /></a></p>
<p>I need to use a combination of WonLost, OnServeCorrected, and Score_Shift and source that from a list of possibles and return a value.  This returns an error.  I do not use lambda a lot and do not understand it well - I have not been able to find examples of how to replicate this.</p>
<p>This is the error I've received:<br />
Traceback (most recent call last):
File &quot;mappingapplying.py&quot;, line 30, in 
touch3[&quot;Score&quot;][i] = touch3.var.apply(lambda x:x[d])
AttributeError: 'function' object has no attribute 'apply'</p>
<p>Indenting may be off as the code didn't copy cleanly.</p>
<pre><code>import pandas as pd
import numpy as np


data = [[1, &quot;Won&quot;, 1, &quot;Five&quot;, &quot;Zero&quot;],
    [2, &quot;Lost&quot;, 1, &quot;&quot;,&quot;&quot;],
    [3, &quot;Lost&quot;, 1, &quot;&quot;,&quot;&quot;],
    [4, &quot;Lost&quot;, 0, &quot;Five&quot;,&quot;Zero&quot;],
    [5, &quot;Lost&quot;, 0, &quot;&quot;,&quot;&quot;],
    [6, &quot;Won&quot;, 0, &quot;&quot;,&quot;&quot;]]
touch3 = pd.DataFrame(data, columns = [&quot;Seconds&quot;, &quot;WonLost&quot;, &quot;OnServeCorrected&quot;, &quot;S_Score&quot;, &quot;R_Score&quot;])
touch3[&quot;Score&quot;] = touch3.S_Score + &quot;_&quot; + touch3.R_Score
touch3[&quot;Score_Shift&quot;] = touch3.Score.shift(1)


d = [['Won_0_Five_Zero', &quot;Five_Five&quot;],
 ['Won_1_Five_Zero', &quot;Three_Zero&quot;],
 ['Lost_0_Five_Zero', &quot;Three_Zero&quot;],
 ['Lost_1_Five_Zero', &quot;Five_Five&quot;],
 ['Won_0_Five_Five', &quot;Five_Three&quot;], 
 ['Lost_0_Five_Five', &quot;Three_Five&quot;], 
 ['Won_1_Five_Five', &quot;Three_Five&quot;], 
 ['Lost_1_Five_Five', &quot;Five_Three&quot;]]

for i in range(len(touch3.Seconds)):
    if touch3.Score[i] not in ([&quot;Five_Zero&quot;, &quot;Zero_Five&quot;]):
       touch3[&quot;var&quot;] = touch3.WonLost[i] + &quot;_&quot; + str(touch3.OnServeCorrected[i]) + &quot;_&quot; + touch3.Score_Shift[i]
    
       touch3[&quot;Score&quot;][i] = touch3.var.apply(lambda x:x[d])
else:
    touch3.Score[i] = touch3.Score[i]
</code></pre>
<p>Expected output should be:
<a href=""https://i.sstatic.net/z1XAbVQ5.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/z1XAbVQ5.png"" alt=""enter image description here"" /></a></p>
","2024-05-19 08:16:28","0","Question"
"78499344","78482552","","<h2>MVVM</h2>
<p>In modern programming, there is a tendency to separate the data (= Model), from how the data is presented to the operator (= View). This has the advantages that the Model can be reused for other Views. You can also unit test the Model without a View, and if you want to change the View, for instance show the data in a graph, instead of a table, the model doesn't have to be changed much. If you want to change the Model, for instance read the data from a database instead of from a CSV-file, the View doesn't have to change.</p>
<p>To connect the Model to the View, an adapter class is needed, quite often called the ViewModel class. Together they form the abbreviation MVVM. Consider to read some background information about this.</p>
<h2>Back to your question</h2>
<p>When using DataGridViews, people often tend to fiddle directly with the contents of the cells. It is way more easier to follow the MVVM pattern.</p>
<p>Class <code>Forms.DataGridView</code> supports MVVM using property <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridview.datasource?view=windowsdesktop-8.0"" rel=""nofollow noreferrer"">DataGridView.DataSource</a></p>
<p>Before I show you how this is done, let's get the access to your data straight.</p>
<p>So you have separated your data from the Form: your Form  has an object of your Model, and a property to get the data that must be displayed. Something like this:</p>
<pre><code>private IMyModel MyModel {get;}   // TODO: implement, not part of the question

private IDictionary&lt;string, object&gt; DictionaryToDisplay =&gt;
    this.MyModel. ...  // get the dictionary filled with the data that must be displayed
</code></pre>
<p>Alas, you didn't write what kind of things you want to display, but let's assume you want to display Products with a unique string Identifier, something like this:</p>
<pre><code>class Product
{
    public string Id {get; set;}
    public string Name {get; set;}
    public decimal Price {get; set;}
    public int Stock {get; set;}
}
</code></pre>
<p>So your Forms needs a property that converts the dictionary into a sequence of Products:</p>
<pre><code>IEnumerable&lt;Product&gt; ProductsToDisplay =&gt; this.DictionaryToDisplay
    .Select(keyValuePair =&gt; new Product
    {
        Id = keyValuePair.Key,
        Name = keyValuePair.Value ...   // access the property that contains the Name
        Price = keyValuePair.Price ... 
        // etc.
    }
</code></pre>
<p>Quite often the ViewModel is fairly small, and thus these properties are part of the Form. However, to make unit testing easier, it would be better to create a separate class for this. Use Dependency Injection to make it possible to change the Model without changing the ViewModel.</p>
<pre><code>class MyViewModel
{
    public IMyModel MyModel {get; set;}

    public IEnumerable&lt;Product&gt; ProductsToDisplay =&gt; ... // see above

    private IDictionary&lt;string, object&gt; DictionaryToDisplay =&gt; ...
}
</code></pre>
<p>And in the constructor of your form:</p>
<pre><code>MyForm()
{
    IMyModel myModel = new ...     // Create a new Model
    this.MyViewModel = new MyViewModel() {MyModel = myModel};

    InitializeComponent();
    ... // etc
}
</code></pre>
<p>Ok, so now you have your Model and ViewModel. Available, tested and thus correct.</p>
<h2>Show the data</h2>
<p>Using Visual Studio Designer you have added a DataGridView to your form, and created columns for the properties that you want to show in the DataGridView.</p>
<p>In the constructor define which Column should show what property:</p>
<pre><code>InitializeComponent();

this.ColumnId.DataPropertyName = nameof(Product.Id);
this.ColumnName.DataPropertyName = nameof(Product.Name);
this.ColumnPrice.DataPropertyName = nameof(Product.Price);
...
</code></pre>
<p>You can also do this in Visual Studio Designer. The disadvantage about this is, that the DataPropertyName is stored in strings. If later you decide to change the name of the properties, then the compiler won't complain if you forgot to change the DataPropertyName as well. The constructor method makes sure that you won't forget this.</p>
<p>To access the displayed Products is a one liner property:</p>
<pre><code>BindingList&lt;Product&gt; DisplayedProducts
{
    get =&gt; (BindingList&lt;Product&gt;)this.DataGridView1.DataSource;
    set =&gt; this.DataGridView1.DataSource;
}
</code></pre>
<p>Now to initially fill your DataGridView with the products, during event Form Load is also a one liner</p>
<pre><code>void FillDataGridView()
{
    this.DisplayedProducts = new BindingList&lt;Product&gt;
        (this.MyViewModel.ProductsToDisplay.ToList());
}
</code></pre>
<p>Suppose that the operator can edit the displayed Products, and press the button <code>Apply Now</code> when finished:</p>
<pre><code>void OnButtonApplyNow_Clicked(object sender, ...)
{
    this.UpdateEditedProducts();
}

void UpdateEditedProducts()
{
    ICollection&lt;Product&gt; displayedProducts = this.DisplayedProducts;

    // TODO: use Linq and compare with original products to find which
    // Products are added / removed / changed, and act accordingly
}
</code></pre>
<p>I separated the method from the event handler, so you can reuse <code>UpdateEditedProducts</code>, for instance after a click in a menu item, or after opening a file, or handling a dialog box.</p>
<p>By the way, did you notice, that using MVVM, most procedures in your Form are very small, seldom more than one or two lines?</p>
<p>By adding a mock ViewModel you can even continue developing the Form without actual data.</p>
<h2>Some nice procedures</h2>
<p>Using DataGridView.DataSource makes it also easy to access the current product and all selected products</p>
<pre><code>Product CurrentProduct =&gt; (Product)this.DataGridView1.CurrentRow.DataBoundItem;

IEnumerable&lt;Product&gt; SelectedProducts =&gt; this.DataGridView1.SelectedRows
    .Cast&lt;DataGridViewRow&gt;
    .Select(row =&gt; row.DataBoundItem)
    .Cast&lt;Product&gt;();
</code></pre>
<p>Note: again: one liner methods! Easy to read, easy to understand, easy to test, reause, change</p>
","2024-05-18 10:01:36","2","Answer"
"78498218","78498123","","<p>You can use a conditional to check whether or not the last name for that person is &quot;Geller&quot; like this:</p>
<pre class=""lang-py prettyprint-override""><code>for i in friends:
    if friends[i]['last name'] == 'Geller':
        print(friends[i]['description'])
</code></pre>
<p>This will print out the 'description' of all the friends whose last names are 'Geller'.</p>
","2024-05-17 23:01:51","1","Answer"
"78498123","","printing particular value from a nested dictionary-Python","<p>I would like to print the descriptions of the friends whose last names are &quot;Geller&quot; from a nested dictionary:</p>
<pre><code>friends={
    &quot;Rachel&quot;:{
        &quot;job&quot;:&quot;fashion&quot;,
        &quot;last name&quot;:&quot;Green&quot;,
        &quot;description&quot;:&quot; brave for starting life over&quot;,
    },
    &quot;Monica&quot;:{
        &quot;job&quot;:&quot;culinary&quot;,
        &quot;last name&quot;:&quot;Geller&quot;,
        &quot;description&quot;:&quot;likes things clean&quot;,
    },
    &quot;Phoebe&quot;:{
        &quot;job&quot;:&quot;musician/masseuse&quot;,
        &quot;last name&quot;:&quot;Buffay&quot;,
        &quot;description&quot;:&quot;somewhat of a question mark&quot;,
    },
     &quot;Chandler&quot;:{
        &quot;job&quot;:&quot;statistical analysis and data reconfiguration&quot;,
        &quot;last name&quot;:&quot;Bing&quot;,
        &quot;description&quot;:&quot;the funny one&quot;,
    },
     &quot;Joey&quot;:{
        &quot;job&quot;:&quot;actor&quot;,
        &quot;last name&quot;:&quot;Tribbiani&quot;,
        &quot;description&quot;:&quot;italian american actor, born in queens, 7 sisters, only boy, NY Knicks rule&quot;,
    },
     &quot;Ross&quot;:{
        &quot;job&quot;:&quot;dinosaurs&quot;,
        &quot;last name&quot;:&quot;Geller&quot;,
        &quot;description&quot;:&quot;3 divorces&quot;,
    },
}
</code></pre>
<p>so far i tried saving the results from the below loop into a variable but only managed to print the names</p>
<pre><code>for i in friends:
    print(friends[i][&quot;description&quot;])
</code></pre>
<p>the loop prints all of the descriptions but i only need to print one description</p>
","2024-05-17 22:21:30","2","Question"
"78497800","78497744","","<p>You can avoid the keys of the <a href=""https://docs.python.org/3/tutorial/datastructures.html#dictionaries"" rel=""nofollow noreferrer"">dictionary</a> altogether, and just focus on the <a href=""https://docs.python.org/3/library/stdtypes.html#dict.values"" rel=""nofollow noreferrer"">values</a>, like so:</p>
<pre><code>for friend_info in friends.values():
    print(friend_info[&quot;description&quot;])
</code></pre>
<hr />
<p>Note that your original code for printing first names:</p>
<pre><code>friends_keys=[]
for friend in friends:
    friends_keys.append(friend)

print(friends_keys)
</code></pre>
<p>could be simplified to this:</p>
<pre><code>for first_name in friends.keys():
    print(first_name)
</code></pre>
<p>or even shorter:</p>
<pre><code>for first_name in friends:
    print(first_name)
</code></pre>
","2024-05-17 20:20:04","0","Answer"
"78497766","78497744","","<p>In Python, you should use the dictionary key to access its value. Here's the corrected code:</p>
<pre><code>for i in friends:
    print(friends[i][&quot;description&quot;])
</code></pre>
<p>So, to access the value (which is another dictionary), you should use friends[i]. Then, to access the &quot;description&quot; within that dictionary, you use [&quot;description&quot;].</p>
","2024-05-17 20:10:54","1","Answer"
"78497744","","select particular values from nested dictionary-Python","<p>I new at learning Python... I would like to print the description value for each friend:</p>
<pre><code>friends={
    &quot;Rachel&quot;:{
        &quot;job&quot;:&quot;fashion&quot;,
        &quot;last name&quot;:&quot;Green&quot;,
        &quot;description&quot;:&quot;brave for starting life over&quot;,
},
    &quot;Monica&quot;:{
        &quot;job&quot;:&quot;culinary&quot;,
        &quot;last name&quot;:&quot;Geller&quot;,
        &quot;description&quot;:&quot;likes things clean&quot;,
},
    &quot;Phoebe&quot;:{
        &quot;job&quot;:&quot;musician/masseuse&quot;,
        &quot;last name&quot;:&quot;Buffay&quot;,
        &quot;description&quot;:&quot;somewhat of a question mark&quot;,
},
    &quot;Chandler&quot;:{
        &quot;job&quot;:&quot;statistical analysis and data reconfiguration&quot;,
        &quot;last name&quot;:&quot;Bing&quot;,
        &quot;description&quot;:&quot;the funny one&quot;,
},
    &quot;Joey&quot;:{
        &quot;job&quot;:&quot;actor&quot;,
        &quot;last name&quot;:&quot;Tribbiani&quot;,
        &quot;description&quot;:&quot;italian american actor, born in queens, 7 sisters, only boy, NY Knicks rule&quot;,
},
    &quot;Ross&quot;:{
        &quot;job&quot;:&quot;dinosaurs&quot;,
        &quot;last name&quot;:&quot;Geller&quot;,
        &quot;description&quot;:&quot;academia, being a good father, not knowing when to shut up; 3 divorces&quot;,
},
}
</code></pre>
<p>I tried this but it printed the names:</p>
<pre><code>friends_keys=[]
for friend in friends:
    friends_keys.append(friend)

print(friends_keys)
</code></pre>
<p>What I was expecting is:</p>
<pre><code>brave for starting life over
likes things clean
somewhat of a question mark
the funny one
italian american actor, born in queens, 7 sisters, only boy, NY Knicks rule
academia, being a good father, not knowing when to shut up; 3 divorces
</code></pre>
","2024-05-17 20:06:08","1","Question"
"78494289","78494262","","<p>You can use <code>any</code> with a generator expression that iterates over the possible keys and tests if the dict has any of the keys:</p>
<pre><code>if any(key in my_dict for key in ('some_key', 'other_key', 'some_other_key')):
    continue
</code></pre>
<p>Alternatively, you can use <a href=""https://docs.python.org/3/library/stdtypes.html#frozenset.isdisjoint"" rel=""nofollow noreferrer""><code>set.isdisjoint</code></a> to test if the set of keys is disjoint with the dict keys:</p>
<pre><code>if not {'some_key', 'other_key', 'some_other_key'}.isdisjoint(my_dict):
    continue
</code></pre>
<p>And as @deceze points out, you can also simply test if the set of keys intersects with the set of dict keys, which looks more readable:</p>
<pre><code>if {'some_key', 'other_key', 'some_other_key'}.intersection(my_dict):
    continue
</code></pre>
<p>But be aware that unlike <code>set.isdisjoint</code>, <code>set.intersection</code> creates a new set and does not short-circuit on the first match, so is more expensive both time and space-wise.</p>
","2024-05-17 08:03:47","4","Answer"
"78494262","","Skipping dictionaries that contain certain keys","<p>I'm looking for a good way to skip dictionaries that contain certain keys among multiple dictionaries that are different.</p>
<p>Right now I'm chaining <code>.get()</code> methods on a dictionary object and continuing on whatever matches, which is working but its kinda messy.</p>
<p>I'm doing something like:</p>
<pre><code>...
if my_dict.get('some_key', my_dict.get('other_key', my_dict.get('some_other_key'))):
    continue

</code></pre>
","2024-05-17 07:56:43","2","Question"
"78491266","78491248","","<p>This is just wrong syntax. You shouldn't be using any semicolons (<code>;</code>) here; use colons (<code>:</code>) to separate a key from its value, and commas (<code>,</code>) to separate key/value pairs.</p>
<pre><code>playerEquipped = {
    &quot;weapon&quot; : &quot;starter sword&quot;,
    &quot;charm&quot; : &quot;no&quot;,  #  this final comma is optional and usually omitted
}
</code></pre>
<p>The error message stems from the fact that you can use semicolons to separate simple statements, and a <em>set</em> assignment like</p>
<pre><code>playerEquipped = { &quot;weapon&quot; }
</code></pre>
<p>could be followed by a semicolon. At the point of your first semicolon, the parser cannot tell if you are defining a set or a dictionary (the prefix <code>{ &quot;weapon&quot;</code> could start either), so it arbitrarily assumes you are defining a set.</p>
","2024-05-16 16:13:36","3","Answer"
"78491248","","Python returning non-sensical errors","<p>Python seems to be returning errors that do not seem to make sense. might not be advanced enough to understand what's going on, but it seems as if this is experiencing some major issue. I cannot tell what it is however, because the errors do not make any sense. Here's the code snippet (line 18 starts at player equipped):</p>
<pre><code>playerEquipped = {
    &quot;weapon&quot; ; &quot;starter sword&quot;;
    &quot;charm&quot; : &quot;no&quot;;
}
</code></pre>
<p>Specifically, it was returning errors about the code not having the curly brace being closed, and that it requires an expression, even though most tutorials on dictionaries never show anything related to expressions being called after said dictionary. You can see an image of the error <a href=""https://i.sstatic.net/Dd3jPao4.png"" rel=""nofollow noreferrer"">here!</a></p>
<p>Originally, this dictionary was supposed to hold more information and make everything easier, but I find it causing more stress than managing 20 variables :(</p>
","2024-05-16 16:11:01","-2","Question"
"78490808","78490591","","<p>Avoid using global variables by putting <code>the_map</code> and <code>current_room</code> in <code>start_game</code>. Then pass variables to <code>next_room</code>, have it <code>return room_after</code> and then update with <code>current_room = next_room(current_room, the_map)</code>.</p>
<p>(I also threw in an <code>else: break</code> since I don't know what your behavior should be afterwards.)</p>
<pre><code>def start_game():
    
    the_map = {
        'Town': {'Next room': 'Ruins', 'Rest': 'Fill HP'},
        'Ruins': {'Next room': 'Destroyed Village', 'Previous room': 'Town', 'Enemy': 'Minotaur'},
        'Destroyed Village': {'Next room': 'Forbidden Forest', 'Previous room': 'The Ruins', 'Enemy': 'Giant'},
        'Forbidden Forest': {'Previous room': 'Destroyed Village', 'Enemy': 'Ancient Tree'}
    }
    
    
    # STARTING ROOM
    current_room = &quot;Town&quot;

    while True:

        # DISPLAY HERO INFO
        print(f&quot;\n You are in the {current_room}.\n{'#' * 22}&quot;)

        if current_room == &quot;Town&quot;:
            print(&quot;\nYou can either go to the NEXT ROOM or REST.&quot;)
            print(&quot;NEXT ROOM takes you to an enemy encounter.&quot;)
            print(&quot;REST fills up your HP bar.&quot;)
            print(&quot;What would you like to do?&quot;)
            print(&quot;1 - GO TO THE NEXT ROOM\n2 - REST&quot;)

            # USER INPUT
            user_input = input(&quot;&gt; &quot;)

            if user_input == &quot;1&quot;:
                current_room = next_room(current_room, the_map)

            elif user_input == &quot;2&quot;:
                pass

            else:
                print(&quot;Invalid command. Try something else.\n&quot;)
        else:
            break

def next_room(current_room, the_map):

    if &quot;Next room&quot; in the_map[current_room].keys():

        room_after = the_map[current_room][&quot;Next room&quot;]

        print(f&quot;\nYou reached the {room_after}!&quot;)

    return room_after
</code></pre>
","2024-05-16 14:56:36","1","Answer"
"78490770","78490659","","<pre><code>dict = [{
   &quot;id&quot;: &quot;1&quot;,
   &quot;sublist&quot;: [
     {
       &quot;key&quot;: &quot;1&quot;
     }
   ]
  },
  {
   &quot;id&quot;: &quot;1&quot;,
   &quot;sublist&quot;: [
     {
       &quot;key&quot;: &quot;2&quot;
     }
   ]
  },
  {
   &quot;id&quot;: &quot;2&quot;,
   &quot;sublist&quot;: [
     {
       &quot;key&quot;: &quot;3&quot;
     }
   ]
  }
]
id_list = {}
new_dict = []
for index, element_dict in enumerate(dict):
    id = element_dict['id']
    if id in id_list:
        new_dict[id_list[id]]['sublist'] += element_dict['sublist']
    else:
        id_list[id] = index
        new_dict.append(element_dict)
print(new_dict)
</code></pre>
<p>The id_list will keep track of the sublists of past and we will add to id_list for new elements if old add to them</p>
","2024-05-16 14:50:55","0","Answer"
"78490738","78490659","","<p>One way to do this is, you create a dictionary <code>merged_data</code> where the keys are the &quot;id&quot; values from your original list. You then iterate over each dictionary in the original list and either add the &quot;sublist&quot; items to an existing entry in <code>merged_data</code> (if the &quot;id&quot; is already there) or create a new entry (if the &quot;id&quot; is not present). Finally, you convert the merged dictionary back to a list.</p>
<p>Here is an example implementation:</p>
<pre class=""lang-py prettyprint-override""><code>merged_data = {}

# iterate through your original list (called data here) and merge dictionaries with the same id
for item in data:
    item_id = item[&quot;id&quot;]
    if item_id in merged_data:
        merged_data[item_id][&quot;sublist&quot;].extend(item[&quot;sublist&quot;])
    else:
        merged_data[item_id] = item

# convert the merged dictionary back to a list
result = list(merged_data.values())

print(result)
</code></pre>
","2024-05-16 14:44:11","0","Answer"
"78490659","","How to identify duplicate dictionaries and merge its sub list into one dictionary","<p>I have a list with duplicate dictionaries based on the &quot;id&quot; key. I want to merge the sublist in the dictionary and create 1 dictionary out of the 2.</p>
<p>Ive tried a few things but my python skills are a bit rusty</p>
<pre><code>[
  {
   &quot;id&quot;: &quot;1&quot;
   &quot;sublist&quot;: [
     {
       &quot;key&quot;:&quot;1&quot;
     }
   ]
  },
  {
   &quot;id&quot;: &quot;1&quot;
   &quot;sublist&quot;: [
     {
       &quot;key&quot;:&quot;2&quot;
     }
   ]
  },
  {
   &quot;id&quot;: &quot;2&quot;
   &quot;sublist&quot;: [
     {
       &quot;key&quot;:&quot;3&quot;
     }
   ]
  }
]
</code></pre>
<p>Final result should be this:</p>
<pre><code>[
  {
   &quot;id&quot;: &quot;1&quot;
   &quot;sublist&quot;: [
     {
       &quot;key&quot;:&quot;1&quot;,
     },
     {
       &quot;key&quot;:&quot;2&quot;
     }
   ]
  },
  {
   &quot;id&quot;: &quot;2&quot;
   &quot;sublist&quot;: [
     {
       &quot;key&quot;:&quot;3&quot;
     }
   ]
  }
]
</code></pre>
","2024-05-16 14:34:06","-1","Question"
"78490591","","Dictionaries and functions in Text Based RPG","<p>everyone. I'm trying to learn more about dictionaries and functions by making a Text Based RPG, but I've run into an issue that I just can't seem to figure out on my own. I made a dictionary for the map on the &quot;main&quot; part of the script, it's not inside of anything, as shown below:</p>
<pre><code>the_map = {
    'Town': {'Next room': 'Ruins', 'Rest': 'Fill HP'},
    'Ruins': {'Next room': 'Destroyed Village', 'Previous room': 'Town', 'Enemy': 'Minotaur'},
    'Destroyed Village': {'Next room': 'Forbidden Forest', 'Previous room': 'The Ruins', 'Enemy': 'Giant'},
    'Forbidden Forest': {'Previous room': 'Destroyed Village', 'Enemy': 'Ancient Tree'}
}


# STARTING ROOM
current_room = &quot;Town&quot;
</code></pre>
<p>My script makes the player choose between options instead of typing out a response. It goes something like this:</p>
<pre><code>def start_game():

    while True:

        # DISPLAY HERO INFO
        print(f&quot;\n You are in the {current_room}.\n{'#' * 22}&quot;)

        if current_room == &quot;Town&quot;:
            print(&quot;\nYou can either go to the NEXT ROOM or REST.&quot;)
            print(&quot;NEXT ROOM takes you to an enemy encounter.&quot;)
            print(&quot;REST fills up your HP bar.&quot;)
            print(&quot;What would you like to do?&quot;)
            print(&quot;1 - GO TO THE NEXT ROOM\n2 - REST&quot;)

            # USER INPUT
            user_input = input(&quot;&gt; &quot;)

            if user_input == &quot;1&quot;:
                next_room()

            elif user_input == &quot;2&quot;:
                pass

            else:
                print(&quot;Invalid command. Try something else.\n&quot;)
</code></pre>
<p>As you can see, I use the fuction &quot;next_room()&quot;. What I'm trying to do is: the player starts in the &quot;Town&quot; and the &quot;Next room&quot;, as seen in the dictionary, is the &quot;Ruins&quot;. If the player inputs &quot;1&quot; to go to the next room, I would like the current_room to be updated, as the next room becomes the current room. How can I do that using the dictionary? This is what I have written so far:</p>
<pre><code>def next_room():

    if &quot;Next room&quot; in the_map[current_room].keys():

        room_after = the_map[current_room][&quot;Next room&quot;]

        print(f&quot;\nYou reached the {room_after}!&quot;)
</code></pre>
<p>I'm not sure of how to make it update to the current_room. It prints the statement in this code, but the first one of the original post still shows &quot;You are in the Town&quot; which is the starting room.</p>
","2024-05-16 14:23:23","0","Question"
"78487739","78480775","","<p>Anytime you deal with recursion, it's important to define a base case.</p>
<p>In this case, if the dictionary passed in isn't a dictionary, we don't need to make any changes to it.</p>
<pre><code>def my_update(d, new_data):
  if not isinstance(d, dict): return d
</code></pre>
<p>But, if it is a <code>dict</code>, then we can use a dictionary comprehension to update the value for each key from <code>new_data</code>. By using <code>get</code> rather than accessing with <code>[]</code> we can default to the existing value if the key is not found in <code>new_data</code>.</p>
<pre><code>def my_update(d, new_data):
  if not isinstance(d, dict): return d
  return {
    k: my_update(new_data.get(k, v), new_data) 
    for k, v in d.items()
  }
</code></pre>
<p>The dictionary comprehension is syntactically very clean, but it also means that we don't <em>modify</em> the original dictionary.</p>
<p>We <em>could</em> even use a conditional <em>expression</em> though I'm not sure that improves readability.</p>
<pre><code>def my_update(d, new_data):
  return d if not isinstance(d, dict) else {
    k: my_update(new_data.get(k, v), new_data) 
    for k, v in d.items()
  }
</code></pre>
","2024-05-16 05:34:34","1","Answer"
"78486160","78486097","","<p>That second parameter to <code>find</code> is a projection, so it must have field names at the top level. You've put <code>$expr</code> but you probably wanted <code>ID</code>. So to fix your existing query with the least changes:</p>
<pre class=""lang-py prettyprint-override""><code>list(mycol.find({},{
  &quot;_id&quot;: 0,
  &quot;ID&quot;: {
    &quot;$cond&quot;: {
      &quot;if&quot;: { &quot;$lt&quot;: [&quot;$test_results.test2&quot;, 1] },
      &quot;then&quot;: &quot;$identifier&quot;,
      &quot;else&quot;: None
    }
  }
}))
</code></pre>
<p>JS equivalent in <a href=""https://mongoplayground.net/p/wFo-t76RzI3"" rel=""nofollow noreferrer"">Mongo Plaground</a>.</p>
<p>But with that query you get <code>None</code> for those IDs where it passed; which is probably not useful. See the second document in the playground which has <code>test2: 1</code> so the result has <code>ID: null</code>.</p>
<p>However, you said <em>&quot;give me the identifiers of the documents where test 2 resulted in 0&quot;</em>, so that should be part of your <code>find</code> criteria:</p>
<pre class=""lang-py prettyprint-override""><code>list(mycol.find(
  { &quot;test_results.test2&quot;: 0 },  # the query
  # the projection
  {
    &quot;_id&quot;: 0,
    &quot;ID&quot;: &quot;$identifier&quot;
  }
))
</code></pre>
<p>As you can see, this is a far simpler query &amp; projection. <a href=""https://mongoplayground.net/p/c5fTrsdgnBF"" rel=""nofollow noreferrer"">Mongo Playground</a></p>
<p>And unless you have negative values which should be treated like <code>0</code>, check for equality with <code>0</code> instead of &quot;less than 1&quot;.</p>
","2024-05-15 19:39:49","0","Answer"
"78486097","","How to use conditional statements in Pymongo find method","<p>So I am trying to search through my database to see which documents passed a particular test. The structure of the dictionary is</p>
<pre><code>dict = {
       'test_results':{
                        'test1':1, ## either 0 or 1 depending on failing/passing respectively 
                        'test2':0,
                        ...,
                        'testN':1
        },
       'identifier': ID 
}
</code></pre>
<p>So I want to do a search to print all the identifiers of documents that failed test 2.</p>
<p>I tried writing a query such as</p>
<pre><code>list(mycol.find({},{
    &quot;_id&quot;:0,
    &quot;$expr&quot;:{
        &quot;$cond&quot;: {
            'if': {&quot;$lt&quot;:[&quot;$test_results.test2&quot;,1]},
            'then': {&quot;ID&quot;:&quot;$identifier&quot;}
        }
    }
}))
</code></pre>
<p>I expected this to give me the identifiers of the documents where test 2 resulted in 0, however this just gives me the error</p>
<p><code>FieldPath field names may not start with '$'. Consider using $getField or $setField., full error: {'ok': 0.0, 'errmsg': &quot;FieldPath field names may not start with '$'. Consider using $getField or $setField.&quot;, 'code': 16410, 'codeName': 'Location16410'}</code></p>
<p>I was wondering what did I do wrong with my query/any suggestions to make my search more efficient.</p>
","2024-05-15 19:24:14","0","Question"
"78485840","78485799","","<p>You can craft a regex, <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.extractall.html"" rel=""nofollow noreferrer""><code>extractall</code></a> the keywords, <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html"" rel=""nofollow noreferrer""><code>merge</code></a> to get the matching Codes, finally <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.drop_duplicates.html"" rel=""nofollow noreferrer""><code>drop_duplicates</code></a> to only keep unique codes per row and <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html"" rel=""nofollow noreferrer""><code>groupby.agg</code></a> to merge the codes in a single string:</p>
<pre><code>import re

# make the comparison case insensitive
A['Key_Word'] = A['Key_Word'].str.casefold()

# craft a regex
pattern = '(%s)' % '|'.join(map(re.escape, A['Key_Word']))
# '(Market|Theater)'

# extract keywords, match the codes, aggregate, assign to A
B['Components_from_A'] = (B['Sentence']
 .str.casefold().str.extractall(pattern) # case insensitive extraction
 .droplevel('match').reset_index(0)      # keep index
 .merge(A, left_on=0, right_on='Key_Word') # match codes
 .drop_duplicates(['index', 'Code'])       # keep unique codes per row
 .groupby('index')['Code'].agg('+'.join)   # aggregate as single string
)
</code></pre>
<p>Output:</p>
<pre><code>                                            Sentence Components_from_A
0                           John went to the theater                A2
1       Mary went to the Market and then the theater             A1+A2
2  Jack decided to go to the theater now as oppos...                A2
</code></pre>
","2024-05-15 18:23:05","0","Answer"
"78485835","78485799","","<p>You can do this by creating a dictionary of the dataframe A and iterate through each sentence of B. Check if the are keywords of importance and collect the information</p>
<pre><code>import pandas as pd

data_A = {'Key_Word': ['Market', 'Theater'], 'Code': ['A1', 'A2']}
data_B = {'Sentence': [
    'John went to the theater',
    'Mary went to the Market and then the theater',
    'Jack decided to go to the theater now as opposed to going to the theater later'
]}

A = pd.DataFrame(data_A)
B = pd.DataFrame(data_B)

keyword_to_code = dict(zip(A.Key_Word, A.Code))

def update_components(sentence, keyword_to_code):
    codes = set()  
    for keyword, code in keyword_to_code.items():
        if keyword.lower() in sentence.lower():
            codes.add(code)
    return '+'.join(sorted(codes))

B['Components_from_A'] = B['Sentence'].apply(lambda x: update_components(x, keyword_to_code))

print(B)

</code></pre>
<p>which gives you</p>
<pre><code>                                            Sentence Components_from_A
0                           John went to the theater                A2
1       Mary went to the Market and then the theater             A1+A2
2  Jack decided to go to the theater now as oppos...                A2
</code></pre>
","2024-05-15 18:22:14","0","Answer"
"78485799","","Dyamically Update Column in Python DataFrame using substrings","<p>Lets say I have a data frame lets call it A</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Key_Word</th>
<th>Code</th>
</tr>
</thead>
<tbody>
<tr>
<td>Market</td>
<td>A1</td>
</tr>
<tr>
<td>Theater</td>
<td>A2</td>
</tr>
</tbody>
</table></div>
<p>And I have another Data Frame lets call it B</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Sentence</th>
<th>Components_from_A</th>
</tr>
</thead>
<tbody>
<tr>
<td>John went to the theater</td>
<td></td>
</tr>
<tr>
<td>Mary went to the Market and then the theater</td>
<td></td>
</tr>
</tbody>
</table></div>
<p>I would like to find a way to dynamically update dataframe B such that it loops through each b.sentence, and record the A.Code if it finds an instance of the A.Key_word.If a keyword appears more than once in A, I would like it to appear only once in B.Components_from_A. If multiple keywords appear I would like it to be recorded as Code1+Code2+Code3.....</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Sentence</th>
<th>Components_from_A</th>
</tr>
</thead>
<tbody>
<tr>
<td>John went to the theater</td>
<td>A2</td>
</tr>
<tr>
<td>Mary went to the Market and then the theater</td>
<td>A1+A2</td>
</tr>
<tr>
<td>Jack decided to go to the theater now as opposed to going to the theater later</td>
<td>A2</td>
</tr>
</tbody>
</table></div>
<p>I assume that I could build off something like</p>
<pre><code>    import pandas as pd
    import numpy as np

    A=pd.read_csv('A.csv')
    B=pd.read_csv('B.csv')
    Dict=dict(zip(A.Key_Word,A.Code))

</code></pre>
<p>What I'm struggling with would be dynamically updating the column in B and the logic I would need to do it in the way I described</p>
","2024-05-15 18:14:57","2","Question"
"78482721","78482552","","<p>Hi I am not sure what data you had but I've solved it in C# windows forms (which I assume you're using due to the <code>DataGridView</code>) with some dummy data.</p>
<p>`namespace WindowsFormsApp1
{
public partial class Form1 : Form
{
public Form1()
{
InitializeComponent();
object[,] array = new object[3, 1]
{
{ new Dictionary&lt;string, object&gt; { { &quot;Name&quot;, &quot;John&quot; }, { &quot;Age&quot;, 25 }, { &quot;City&quot;, &quot;New York&quot; } } },
{ new Dictionary&lt;string, object&gt; { { &quot;Name&quot;, &quot;Alice&quot; }, { &quot;Age&quot;, 30 }, { &quot;City&quot;, &quot;Los Angeles&quot; } } },
{ new Dictionary&lt;string, object&gt; { { &quot;Name&quot;, &quot;Bob&quot; }, { &quot;Age&quot;, 40 }, { &quot;City&quot;, &quot;Chicago&quot; } } }
};</p>
<pre><code>        DataTable dataTable = new DataTable();

        if (array.GetLength(0) &gt; 0 &amp;&amp; array.GetValue(0, 0) is Dictionary&lt;string, object&gt; firstDictionary)
        {
            foreach (var key in firstDictionary.Keys)
            {
                dataTable.Columns.Add(key, typeof(object));
            }
        }

        for (int i = 0; i &lt; array.GetLength(0); i++)
        {
            DataRow row = dataTable.NewRow();
            for (int j = 0; j &lt; array.GetLength(1); j++)
            {
                foreach (var kvp in (Dictionary&lt;string, object&gt;)array[i, j])
                {
                    row[kvp.Key] = kvp.Value;
                }
            }
            dataTable.Rows.Add(row);
        }

        dataGridView1.DataSource = dataTable;
    }
    private void Form1_Load(object sender, EventArgs e)
    {

    }
}
</code></pre>
<p>}`
<a href=""https://i.sstatic.net/AJPQIJW8.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/AJPQIJW8.png"" alt=""Running exe of the data"" /></a></p>
<p>Hope I've understood the problem correctly!</p>
","2024-05-15 08:55:27","0","Answer"
"78482552","","Bind DataGridView to an Array of Dictionary<string,object>","<p>I'm trying to bind an array of dictionary&lt;string,object&gt; to a datagridview.</p>
<p>The dictionaries will all have the same keys, and the values will always be the same value type objects (with different values). So the columns will be determined (and named) with the strings:</p>
<pre><code>foreach (var kvp in array.GetValue(0) as Dictionary&lt;string, object&gt;)
{
    dataGridView_StructArray.Columns.Add(kvp.Key, kvp.Key);
}
</code></pre>
<p>So, row will be an element in the array, so each cell will be the object in that array element:</p>
<pre><code>for (int i = 0; i &lt; array.GetLength(0); i++)
{
    dataGridView_StructArray.Rows.Add(((Dictionary&lt;string, object&gt;)array.GetValue(i)).Values.ToArray());
}
</code></pre>
<p>What I don't know beforehand is what will the dictionaries actually contain.</p>
<p>I want to bind the datagridview to this array, rather than load the datagridview manually as per the code above.</p>
<p>Any suggestions...</p>
","2024-05-15 08:20:52","0","Question"
"78480825","78480775","","<p>Try:</p>
<pre class=""lang-py prettyprint-override""><code>def replace(o, to_replace):
    if isinstance(o, dict):
        common_keys = o.keys() &amp; to_replace.keys()
        for k in common_keys:
            o[k] = to_replace[k]

        for v in o.values():
            replace(v, to_replace)

    elif isinstance(o, list):
        for v in o:
            replace(v, to_replace)


mydict = {&quot;name&quot;: &quot;Bill&quot;, &quot;gender&quot;: &quot;Male&quot;, &quot;facts&quot;: {&quot;age&quot;: 20, &quot;location&quot;: &quot;England&quot;}}
to_replace_2 = {&quot;name&quot;: &quot;Billy Kidman&quot;, &quot;gender&quot;: &quot;Female&quot;, &quot;age&quot;: 55}

replace(mydict, to_replace_2)

print(mydict)
</code></pre>
<p>Prints:</p>
<pre class=""lang-py prettyprint-override""><code>{'name': 'Billy Kidman', 'gender': 'Female', 'facts': {'age': 55, 'location': 'England'}}
</code></pre>
","2024-05-14 21:56:19","1","Answer"
"78480789","78480775","","<ul>
<li><p>Just write a separate method to update your dictionary.</p>
</li>
<li><p>The key is to first check for the <code>value</code> in your main dictionary and see if the value is an instance of a dict type. In that case, you recursively call <code>_update()</code> and your dictionary will be updated, if it is not.</p>
</li>
</ul>
<h3>Code</h3>
<pre><code>def _update(d, new_data):
    for key, value in new_data.items():
        if isinstance(value, dict):
            d[key] = _update(d.get(key, {}), value)
        else:
            d[key] = value
    return d


mydict = {&quot;name&quot;: &quot;Bill&quot;, &quot;gender&quot;: &quot;Male&quot;, &quot;facts&quot;: {&quot;age&quot;: 20, &quot;location&quot;: &quot;England&quot;}}
to_replace = {&quot;name&quot;: &quot;Billy Kidman&quot;, &quot;gender&quot;: &quot;Female&quot;}
to_replace_2 = {&quot;name&quot;: &quot;Billy Kidman&quot;, &quot;gender&quot;: &quot;Female&quot;, &quot;age&quot;: 55}

print(_update(mydict, to_replace))
print(_update(mydict, to_replace_2))


</code></pre>
<h3>Prints</h3>
<blockquote>
<p>{'name': 'Billy Kidman', 'gender': 'Female', 'facts': {'age': 20,
'location': 'England'}} {'name': 'Billy Kidman', 'gender': 'Female',
'facts': {'age': 20, 'location': 'England'}, 'age': 55}</p>
</blockquote>
","2024-05-14 21:50:04","1","Answer"
"78480775","","Recursively replacing or updating key value pairs in a nested dictionary","<p>Say I have a dictionary like this:</p>
<pre><code>mydict = {
  &quot;name&quot;: &quot;Bill&quot;, 
  &quot;gender&quot;: &quot;Male&quot;, 
  &quot;facts&quot;: {&quot;age&quot;: 20, &quot;location&quot;: &quot;England&quot;}
}
</code></pre>
<p>so it contains another dictionary as a value. Now suppose I have this dictionary:</p>
<pre><code>to_replace = {&quot;name&quot;: &quot;Billy Kidman&quot;, &quot;gender&quot;: &quot;Female&quot;}
</code></pre>
<p>and I want to update <code>mydict</code> to reflect this new information. To do that I use</p>
<pre><code>from dataclasses import replace
mydict = replace(mydict, **to_replace)
</code></pre>
<p>and this works, because now it looks like</p>
<pre><code>mydict = {
  &quot;name&quot;: &quot;Billy Kidman&quot;, 
  &quot;gender&quot;: &quot;Female&quot;, 
  &quot;facts&quot;: {&quot;age&quot;: 20, &quot;location&quot;: &quot;England&quot;}
}
</code></pre>
<p>Now suppose I want to update <code>mydict</code> with the following information:</p>
<pre><code>to_replace_2 = {&quot;name&quot;: &quot;Billy Kidman&quot;, &quot;gender&quot;: &quot;Female&quot;, &quot;age&quot;: 55}
</code></pre>
<p>Then I can't use replace as above, because <code>age</code> is not key of <code>mydict</code> but it's actually a key of a value. Python throws an error if I try to do this. How can I do this correctly? I have no freedom in the form of <code>to_replace_2</code>; it is how I wrote it above and I can't change that. Is there a way to make replace do what I want it to do, to find all the keys that need to be replaced no matter if they're nested and make the changes?</p>
","2024-05-14 21:45:02","1","Question"
"78475228","78474966","","<p>Correcting the Dictionary to correct syntax then a simple function can be applied:</p>
<pre><code>d = {'0001': ('1111', '1112'), '0002': '1114'}

def func(row):
    if row['subid'] in d.keys():
        if row['itemid'] in d[row['subid']]:
            return True
    return False

df2 = df[df.apply(func, axis = 1)]

print(df2)
</code></pre>
<p>gives</p>
<pre><code>  subid itemid
0  0001   1111
1  0001   1112
4  0002   1114
5  0002   1114
</code></pre>
","2024-05-14 00:07:47","0","Answer"
"78475172","78474966","","<p>iterrows is tempting for the ones that are new to pandas, but, most of the time, it is crap. To survive in pandas, you only need to 2 things: df.loc and df.apply. Everything can be done with them. Pandas offers, of course, a lot more, but you can always fall back to df.loc/df.apply.</p>
<pre><code>import pandas as pd


data = {
    &quot;subid&quot;: [&quot;0001&quot;, &quot;0001&quot;, &quot;0001&quot;, &quot;0001&quot;, &quot;0002&quot;, &quot;0002&quot;, &quot;xxxx&quot;],
    &quot;itemid&quot;: [&quot;1111&quot;, &quot;1112&quot;, &quot;1113&quot;, &quot;1113&quot;, &quot;1114&quot;, &quot;1114&quot;, &quot;pppp&quot;],
}
df = pd.DataFrame(data)
d = {&quot;0001&quot;: (&quot;1111&quot;, &quot;1112&quot;), &quot;0002&quot;: (&quot;1114&quot;,)}

df[&quot;mapped&quot;] = df.subid.apply(lambda q: d.get(q, ()))
dfresults = df.loc[df.apply(lambda x: x.itemid in x.mapped, axis=1)].drop(
    columns=[&quot;mapped&quot;]
)
print(dfresults)
   subid itemid
0  0001   1111
1  0001   1112
4  0002   1114
5  0002   1114
</code></pre>
","2024-05-13 23:38:45","0","Answer"
"78474966","","Filtering a python DataFrame based on whether two column values in each row are found within a dictionary","<p>I have a df that contains a subject ID and an item ID. An item ID may appear multiple times for one subject ID and multiple item IDs may be assigned to one subject ID.</p>
<pre><code>  subid itemid
0 0001  1111
1 0001  1112
2 0001  1113
3 0001  1113
4 0002  1114
5 0002  1114
</code></pre>
<p>I also have a dictionary where each key is a subject ID and each value is all the item IDs that have been assigned to that subject.</p>
<pre><code>dict = {'0001': ('1111', '1112'), '0002': ('1114')}
</code></pre>
<p>Edit: Corrected dictionary syntax</p>
<p>I want to iterate through each row of the df and check a) whether the subid if found in the dictionary and b) if yes, whether the itemid is assigned to that subid in the dictionary. If the answer to either question is no, I want to remove that row from the df. In the above example, I'd want rows 2 and 3 removed because 0001: '1113' does not appear in the dictionary.</p>
<p>I know I'm way off on this. I started by trying to create a for loop using either df.iterrows() or df.index. I don't know if this is the right way to go about it, or where to go next. I get the &quot;unhasable type: 'Series'&quot; error for the code below. Any help is appreciated.</p>
<pre><code>for index, row in df.iterrows():
    if df['subid'] in dict:
        if df['itemid'] in dict:
            continue
        else:
            df.drop(index, inplace=True)
    else:
        df.drop(index, inplace=True)
</code></pre>
","2024-05-13 22:02:43","0","Question"
"78473355","78473269","","<p>With <code>data</code> consisting of</p>
<pre><code>data = {
   'fighter1':{
      0:{
         'date ↕':'2024-05-23',
         'Fighter Weight':'',
         'Opponent':'fighter_1',
         'Opponent Weight':'',
         'w-l-d':('11', '0', '0'),
         'result':'VS',
         'rounds':'12'
      },
      1:{
         'date ↕':'2022-08-28',
         'Fighter Weight':'227¾',
         'Opponent':'Fighter_2',
         'Opponent Weight':'211',
         'result':'W-SD',
         'rounds':'12/12'
      }
   },
   # Partial copy of fighter 1 (second instance removed)
   'fighter2':{
      0:{
         'date ↕':'2024-05-23',
         'Fighter Weight':'',
         'Opponent':'fighter_1',
         'Opponent Weight':'',
         'w-l-d':('11', '0', '0'),
         'result':'VS',
         'rounds':'12'
      },
   }
}
</code></pre>
<p>what about using <a href=""https://pandas.pydata.org/docs/reference/api/pandas.concat.html"" rel=""nofollow noreferrer""><code>pandas.concat</code></a> ? As follows</p>
<pre class=""lang-py prettyprint-override""><code>df = pd.concat(
    axis=1, objs=[
        pd.DataFrame(data=datum).unstack().to_frame(id_)
        for id_, datum in data.items()
    ]
)
</code></pre>
<pre><code>&gt;&gt;&gt; df
                     fighter1    fighter2
0 date ↕           2024-05-23  2024-05-23
  Fighter Weight                         
  Opponent          fighter_1   fighter_1
  Opponent Weight                        
  w-l-d            (11, 0, 0)  (11, 0, 0)
  result                   VS          VS
  rounds                   12          12
1 date ↕           2022-08-28         NaN
  Fighter Weight         227¾         NaN
  Opponent          Fighter_2         NaN
  Opponent Weight         211         NaN
  w-l-d                   NaN         NaN
  result                 W-SD         NaN
  rounds                12/12         NaN
</code></pre>
<p>An example of use via <a href=""https://pandas.pydata.org/docs/reference/api/pandas.IndexSlice.html"" rel=""nofollow noreferrer""><code>pandas.IndexSlice</code></a></p>
<pre class=""lang-py prettyprint-override""><code>&gt;&gt;&gt; df.loc[pd.IndexSlice[:, 'result'], :]
         fighter1 fighter2
0 result       VS       VS
1 result     W-SD      NaN
</code></pre>
<hr>
","2024-05-13 15:34:36","1","Answer"
"78473269","","How do I create a multi-indexed DataFrame from a double-nested dictionary?","<p>I am trying to create a pandas multi-indexed DataFrame from a double-nested dictionary but am quite stumped as to how to do this.</p>
<p>As some background I have scraped some data from a website and put it into this nested dictionary form as I thought it would be easiest to work with (but I appear to be wrong :D)...</p>
<p>The nested dictionary currently looks like this and I want to put this into a DataFrame that has the <code>ID</code> of the fighter as the column so that in the case of multiple fighters, each column would represent a new fighter, the <code>fight number</code> (<code>0</code> or <code>1</code> in this example as the first row index) with the inner level being the <code>fight details</code> (e.g., <code>date</code>, <code>fighter weight</code> etc).</p>
<pre><code>{
   'ID':{
      0:{
         'date ↕':'2024-05-23',
         'Fighter Weight':'',
         'Opponent':'fighter_1',
         'Opponent Weight':'',
         'w-l-d':('11', '0', '0'),
         'result':'VS',
         'rounds':'12'
      },
      1:{
         'date ↕':'2022-08-28',
         'Fighter Weight':'227¾',
         'Opponent':'Fighter_2',
         'Opponent Weight':'211',
         'result':'W-SD',
         'rounds':'12/12'
      }
   }
}
</code></pre>
<p>On the initial run when I ran <code>DataFrame.from_dict(data)</code> this yields an output where the values of the DataFrame is the inner dictionary.</p>
<p>Here is what I would like the dataframe to look like. Note that I have just shown selected fight details for brevity here</p>
<pre><code>                           ID
0 Date             2024-05-23
  Fighter Weight             
  Opponent          fighter_1
  Opponent Weight            
  w-l-d            (11, 0, 0)
  result                   VS
  rounds                   12
1 Date             2022-08-28
  Fighter Weight         227¾
  Opponent          Fighter_2
  Opponent Weight         211
  w-l-d                      
  result                 W-SD
  rounds                12/12
</code></pre>
<p>If you think it would be better to store the data into something other than a nested dictionary then also please let me know as I am open to making changes to the scraper as well.</p>
","2024-05-13 15:22:05","0","Question"
"78472852","78472798","","<p>If your question is about how to access the string inside the dictionary, then</p>
<pre><code>print(mensagemmm[4][&quot;content&quot;])  
</code></pre>
<p>returns 'Vai se fuder'</p>
<p>Or something like</p>
<pre><code>print(list(mensagemmm[4].keys())[0],&quot;: &quot;,mensagemmm[4][&quot;content&quot;])
</code></pre>
<p>which returns 'content :  Vai se fuder'</p>
<p>In other case please provide the expected output</p>
","2024-05-13 14:09:07","0","Answer"
"78472850","78472798","","<p>Check for <code>content</code> key then print the value</p>
<pre><code>for i in mensagemmm:
  v = i.get('content')
  if v is not None:
    print(v)
</code></pre>
<p>If content key appears more than once in the list of dictionary, each would be printed</p>
","2024-05-13 14:08:41","0","Answer"
"78472798","","Filter keys in a list of dictionaries","<p>I'm aiming to print a string, for example 'test', after the 'content' using python, but i have no idea how to do it. I already tried many pages talking about this, but nothing work.</p>
<p><code>mensagemmm = [ </code></p>
<p><code>{'isUser': True,},  </code></p>
<p><code>{'isVerified': None,},  </code></p>
<p><code>{'isWAContact': True,},  </code></p>
<p><code>{'profilePicThumbObj': None,},  </code></p>
<p><code>{'content': 'Test',},  </code></p>
<p><code>{'quotedMsgId': None,} </code></p>
<p><code>]</code></p>
<p>I already did try most of pages at google, using:</p>
<p>for i in mensagemmm...</p>
","2024-05-13 14:00:42","-3","Question"
"78469680","78469632","","<p>This is a iterative approach:</p>
<pre><code>class TreeNode:
    def __init__(self, key):
        self.key = key
        self.left = None
        self.right = None


def construct_binary_tree(data, root_key):
    if not root_key:
        return

    print(&quot;Constructing node:&quot;, root_key)
    root = TreeNode(root_key)
    if root_key in data:
        left_child_key, right_child_key = data[root_key]
        print(&quot;Left child of&quot;, root_key, &quot;:&quot;, left_child_key)
        print(&quot;Right child of&quot;, root_key, &quot;:&quot;, right_child_key)
        if left_child_key:
            root.left = construct_binary_tree(data, left_child_key)
        if right_child_key:
            root.right = construct_binary_tree(data, right_child_key)

    return root


def print_tree(root):
    q = [(root, 0)]  # Each item in the queue is now a tuple of (node, depth)
    res = []
    while q:
        node, depth = q.pop(0)
        res.append(&quot;|  &quot; * depth + f&quot;|-- {node.key}&quot;)
        if node.left is not None:
            q.append((node.left, depth + 1))  # Increase depth only when enqueuing a child node
            res.append(&quot;|  &quot; * (depth + 1) + f&quot;left child |-- {node.left.key}&quot;)
        else:
            res.append(&quot;|  &quot; * (depth + 1) + f&quot;left child |-- None&quot;)
        if node.right is not None:
            q.append((node.right, depth + 1))  # Increase depth only when enqueuing a child node
            res.append(&quot;|  &quot; * (depth + 1) + f&quot;right child |-- {node.right.key}&quot;)
        else:
            res.append(&quot;|  &quot; * (depth + 1) + f&quot;right child |-- None&quot;)
    return '\n'.join(res)


# Given data
data = {
    &quot;Amy&quot;: [&quot;Alice&quot;, &quot;Charlie&quot;],
    &quot;Alice&quot;: [&quot;Akon&quot;, &quot;Eve&quot;],
    &quot;Eve&quot;: [&quot;Frank&quot;, None],
    &quot;Charlie&quot;: [&quot;Bob&quot;, &quot;Grace&quot;]
}

# Construct binary tree
root_key = next(iter(data))
root = construct_binary_tree(data, root_key)

# Print binary tree in tree format
print(print_tree(root))

</code></pre>
<h3>Prints:</h3>
<pre><code>Constructing node: Amy
Left child of Amy : Alice
Right child of Amy : Charlie
Constructing node: Alice
Left child of Alice : Akon
Right child of Alice : Eve
Constructing node: Akon
Constructing node: Eve
Left child of Eve : Frank
Right child of Eve : None
Constructing node: Frank
Constructing node: Charlie
Left child of Charlie : Bob
Right child of Charlie : Grace
Constructing node: Bob
Constructing node: Grace
|-- Amy
|  left child |-- Alice
|  right child |-- Charlie
|  |-- Alice
|  |  left child |-- Akon
|  |  right child |-- Eve
|  |-- Charlie
|  |  left child |-- Bob
|  |  right child |-- Grace
|  |  |-- Akon
|  |  |  left child |-- None
|  |  |  right child |-- None
|  |  |-- Eve
|  |  |  left child |-- Frank
|  |  |  right child |-- None
|  |  |-- Bob
|  |  |  left child |-- None
|  |  |  right child |-- None
|  |  |-- Grace
|  |  |  left child |-- None
|  |  |  right child |-- None
|  |  |  |-- Frank
|  |  |  |  left child |-- None
|  |  |  |  right child |-- None
</code></pre>
<h3>Note</h3>
<p>I also added the <code>None</code> children, which you can remove if you want.</p>
<p>There was just a minor bug in the construct binary tree that's fixed.</p>
","2024-05-13 00:47:08","1","Answer"
"78469665","78469632","","<p>You are testing whether a string is in the keys of <code>data</code> at the beginning of <code>construct_binary_tree</code> and returning <code>None</code> if it is not there. This means when you pass in a name like <code>&quot;Bob&quot;</code> it returns <code>None</code> immediately rather than a tree Node because it is not one of the keys of the dictionary. When you go to print it, there is no reference to <code>&quot;Bob&quot;</code>, just <code>None</code>. Consider returning a tree node there instead of None.</p>
<pre><code>def construct_binary_tree(data, root_key):
    if root_key not in data:
        return TreeNode(root_key)
    
</code></pre>
<p>Doing that will print:</p>
<pre><code>|-- Amy
   |-- Alice
      |-- Akon
      |-- Eve
         |-- Frank
   |-- Charlie
      |-- Bob
      |-- Grace
</code></pre>
<p>There many be other issues because this method seems to depend on the data order to work, but it should help your immediate issue.</p>
","2024-05-13 00:36:45","0","Answer"
"78469632","","Construct a Binary tree from a python dictionary","<p>The dictionary has key and value pairs of manager employee relationship, manager key can have multiple employees and those employees can have their own employees like below</p>
<pre><code>data = {
    &quot;Amy&quot;: [&quot;Alice&quot;, &quot;Charlie&quot;],
    &quot;Alice&quot;: [&quot;Akon&quot;, &quot;Eve&quot;],
    &quot;Eve&quot;: [&quot;Frank&quot;, None],
    &quot;Charlie&quot;: [&quot;Bob&quot;, &quot;Grace&quot;]
}
</code></pre>
<p>while I can see all the nodes are getting added in the print statements below, but I am not able to print out the tree properly.</p>
<p>Here's the code</p>
<pre><code>class TreeNode:
    def __init__(self, key):
        self.key = key
        self.left = None
        self.right = None

def construct_binary_tree(data, root_key):
    if root_key not in data:
        return None
    
    print(&quot;Constructing node:&quot;, root_key)
    root = TreeNode(root_key)
    if root_key in data:
        children = data[root_key]
        left_child_key = children[0] if children and len(children) &gt; 0 else None
        right_child_key = children[1] if children and len(children) &gt; 1 else None
        print(&quot;Left child of&quot;, root_key, &quot;:&quot;, left_child_key)
        print(&quot;Right child of&quot;, root_key, &quot;:&quot;, right_child_key)
        if left_child_key:
            root.left = construct_binary_tree(data, left_child_key)
        if right_child_key:
            root.right = construct_binary_tree(data, right_child_key)
    
    return root

def print_tree(root, depth=0):
    if root:
        print(&quot;   &quot; * depth + f&quot;|-- {root.key}&quot;)
        print_tree(root.left, depth + 1)
        print_tree(root.right, depth + 1)

# Given data
data = {
    &quot;Amy&quot;: [&quot;Alice&quot;, &quot;Charlie&quot;],
    &quot;Alice&quot;: [&quot;Akon&quot;, &quot;Eve&quot;],
    &quot;Eve&quot;: [&quot;Frank&quot;, None],
    &quot;Charlie&quot;: [&quot;Bob&quot;, &quot;Grace&quot;]
}

# Construct binary tree
root_key = next(iter(data))
root = construct_binary_tree(data, root_key)

# Print binary tree in tree format
print_tree(root)
</code></pre>
<p>Here's the output I am seeing</p>
<pre><code>Constructing node: Amy
Left child of Amy : Alice
Right child of Amy : Charlie
Constructing node: Alice
Left child of Alice : Akon
Right child of Alice : Eve
Constructing node: Eve
Left child of Eve : Frank
Right child of Eve : None
Constructing node: Charlie
Left child of Charlie : Bob
Right child of Charlie : Grace
|-- Amy
   |-- Alice
      |-- Eve
   |-- Charlie
</code></pre>
","2024-05-13 00:16:34","0","Question"
"78467944","78467779","","<p>A possibility could be to divide the task into two steps, first create the mapping with &quot;enumerated&quot; books then assign it to you main dictionary.</p>
<pre><code>book_list = [[None] for _ in range(3)]

store_dic = dict()
books = {'book'+str(k): k for k in range(len(book_list))}
store_dic['books'] = books
</code></pre>
<p>... or a more compact version</p>
<pre><code>book_list = [[None] for _ in range(3)]

store_dic = {}

for i in range(len(book_list)):
    store_dic.setdefault('books', {})['book'+str(i)] = i
</code></pre>
<p>or with a dictionary comprehension</p>
<pre><code>book_list = [[None] for _ in range(3)]

store_dic = {
    'books': {'book'+str(i): i for i in range(len(book_list))}
}
</code></pre>
<hr />
<p>Notice that you could use the f-string notation to improve readability, <code>f'book{i}'</code> instead of <code>'book'+str(i)</code></p>
","2024-05-12 12:59:12","2","Answer"
"78467911","78467899","","<p>That <code>&lt;class 'list'&gt;</code> is the return value of the <a href=""https://docs.python.org/3/library/asyncio-task.html#asyncio.gather"" rel=""nofollow noreferrer""><code>asyncio.gather()</code></a>.</p>
<blockquote>
<p>If all awaitables are completed successfully, the result is an aggregate list of returned values. You'll then need to iterate through the list to access the result of the awaitables.</p>
</blockquote>
<p>If you only have that single URL, <code>await get_response(user_url)</code> is enough. <code>asyncio.gather()</code> is for executing multiple awaitables concurrently and wait for them to finished.</p>
","2024-05-12 12:50:17","2","Answer"
"78467899","","Python giving different response when called via async","<p>Getting different output for the same logic?
Was trying to learn async/await in python.</p>
<p>Output for first Snippet : <code>&lt;class 'dict'&gt;</code>
Output for second Snippet : <code>&lt;class 'list'&gt;</code></p>
<hr />
<p><strong>Snippet 1</strong> : without async</p>
<pre class=""lang-py prettyprint-override""><code>import urllib.request
import json

def get_response(user_url):
    resp = urllib.request.urlopen(user_url).read()
    resp_json = json.loads(resp)
    return resp_json['results'][0]


def make_request(user_url):
    json_response = get_response(user_url)
    print(type(json_response))

USER_URL = 'https://randomuser.me/api'
make_request(USER_URL)
</code></pre>
<p><strong>Snippet 2</strong> : with async</p>
<pre class=""lang-py prettyprint-override""><code>import urllib.request
import json
import asyncio

async def get_response(user_url):
    resp = urllib.request.urlopen(user_url).read()
    resp_json = json.loads(resp)
    return resp_json['results'][0]


async def make_request(user_url):
    json_response = await asyncio.gather(get_response(user_url))
    print(type(json_response))

USER_URL = 'https://randomuser.me/api'
asyncio.run(make_request(USER_URL))
</code></pre>
<p>Why are we getting different output for the same logic in code?
Expectation is to get <strong>dict</strong> data type for both.</p>
<p><strong>Using Python 3.10</strong></p>
","2024-05-12 12:47:29","2","Question"
"78467827","78467779","","<p>your bug is you override <code>store_dict</code> each loop, that's why you are getting just one element,</p>
<p>Here is the code you want:</p>
<pre class=""lang-py prettyprint-override""><code>store_dic= dict()

# result = {
#     &quot;books&quot;: {
#         &quot;book0&quot;: 0,
#         &quot;book1&quot;: 1,
#         &quot;book2&quot;: 2,
#     }
# }

store_dic[&quot;books&quot;] = {}
book_list = [[None] for _ in range(3)]
for i in range(3):
    store_dic[&quot;books&quot;][&quot;book%s&quot;%str(i)] = i

print(store_dic)
</code></pre>
<p>The output :</p>
<pre><code>{'books': {'book0': 0, 'book1': 1, 'book2': 2}}
</code></pre>
","2024-05-12 12:19:37","1","Answer"
"78467779","","How to automatically add new keys with values to an existing key?","<p>I have the following problem. I want to automatically create with a for function a dictionary with mixed keys as following:</p>
<ul>
<li>I have the main key which is &quot;books&quot; and for this key I want to add books ( which a new key )  with quantity ( values )
Example: store_dic = {'books': {'book0': 0, 'book1': 1,'book2':2}}</li>
</ul>
<p>I tried this:</p>
<pre><code>store_dic= dict()

book_list = [[None] for _ in range(3)]
for i in range(3):
    book_list[i] = &quot;book&quot;+str(i)
    store_dic= {'books': {book_list[i] : i}}
print(store_dic)
</code></pre>
<p>Currently the dictionary displays only the last key with value inserted in the main key.</p>
<pre><code>Output
{'books': {'book2': 2}}
</code></pre>
<p>Please help me update the main key with multiple keys that have values.</p>
","2024-05-12 12:07:01","-1","Question"
"78467040","78466732","","<p>Once you have your Map ready one way to loop through it all would be with <code>keyset()</code></p>
<pre class=""lang-apex prettyprint-override""><code>for(Id userId : usersOrdersMap.keyset()){
    List&lt;OrderDestinationItem__c&gt; temp = usersOrdersMap.get(userId);
    System.debug('User ' + userId + ' has ' + temp.size() + ' items';
    // System.debug(temp);
}
</code></pre>
","2024-05-12 07:45:44","2","Answer"
"78466732","","Reading data from a Map of sObjects in Apex Salesforce","<p>Please see my code below. I am able to create a Map.  I do not know how to read the values in the collection of records that are part of the Value in the Map.</p>
<p>Please help.</p>
<pre class=""lang-apex prettyprint-override""><code>List&lt;OrderDestinationItem__c&gt; ordersOfAllUsers = new List&lt;OrderDestinationItem__c&gt;();

ordersOfAllUsers = [SELECT CreatedById, Id, CreatedDate, OrdStatus__c, Total_Line_Amount__c From OrderDestinationItem__c  Where CreatedDate &gt; 2024-04-10T07:27:52.000+0000 and Total_Line_Amount__c &gt; 20];

Map&lt;Id, List&lt;OrderDestinationItem__c&gt;&gt; usersOrdersMap = new Map&lt;Id, List&lt;OrderDestinationItem__c&gt;&gt;();

for ( OrderDestinationItem__c currentOrderedItem : ordersOfAllUsers){
    if (!usersOrdersMap.containsKey(currentOrderedItem.CreatedById)){
        usersOrdersMap.put(currentOrderedItem.CreatedById, new List&lt;OrderDestinationItem__c&gt;{currentOrderedItem});
    } else {
        usersOrdersMap.get(currentOrderedItem.CreatedById).add(currentOrderedItem);
    }
}
</code></pre>
","2024-05-12 04:53:14","1","Question"
"78463793","78463581","","<p>Whether Python dictionaries are inherently thread-safe has been discussed many times. See <a href=""https://stackoverflow.com/questions/6953351/thread-safety-in-pythons-dictionary"">this question</a></p>
<p>However, using a lock when modifying a dictionary may make your code future-proof.</p>
<pre><code>from threading import Lock
from collections import defaultdict


class Records:
    def __init__(self):
        self._dict = defaultdict(list)
        self._lock = Lock()

    def record(self, _id, year, location):
        with self._lock:
            self._dict[_id].append((year, location))

    def find_history(self, _id, year):
        results = []
        for record in self._dict.get(_id, []):
            if record[0] &lt;= year:
                results.append(record)
        return results


def update(records, item):
    records.record(*item)


if __name__ == &quot;__main__&quot;:
    from concurrent.futures import ThreadPoolExecutor
    from functools import partial

    records = Records()

    data = [
        (1, 2024, &quot;New York&quot;),
        (1, 2023, &quot;San Francisco&quot;),
        (1, 2024, &quot;Boston&quot;),
        (1, 2023, &quot;Detroit&quot;),
        (2, 2000, &quot;Los Angeles&quot;),
        (3, 2001, &quot;Washington DC&quot;),
        (1, 2001, &quot;Houston&quot;),
        (3, 2021, &quot;Austin&quot;),
    ]

    with ThreadPoolExecutor() as exe:
        exe.map(partial(update, records), data)

    print(records.find_history(1, 2023))
    print(records.find_history(1, 2022))
    print(records.find_history(2, 2023))
    print(records.find_history(1, 2000))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[(2023, 'San Francisco'), (2023, 'Detroit'), (2001, 'Houston')]
[(2001, 'Houston')]
[(2000, 'Los Angeles')]
[]
</code></pre>
","2024-05-11 07:52:54","0","Answer"
"78463581","","How to make my dictionary thread safe in python?","<p>I have a class as follows, which maintains simple dictionary for historical records. It needs to support insertion of records and lookup, i.e. given ID and year, returns all records older than given year.</p>
<p>A request is to make it thread safe. Could any one give me some suggestion about how to make the dictionary thread safe, assuming there will be lots of threads calling record and find_history at the same time?</p>
<p>Some one told this is actually MVCC, so I don't need lock, but I didn't get how</p>
<pre><code>class Records:
    def __init__(self):
        self.map = {} # ID -&gt; [year, location]

    def record(self, ID, year, location):
        if ID not in self.map:
            self.map[ID] = []
        self.map[ID].append([year, location])

    def find_history(self, ID, year):
        if ID not in self.map:
            return []
        results = []
        for record in self.map[ID]:
            if record[0] &lt;= year:
                results.append(record)
        return results
</code></pre>
<p>I tried reading python Multithreading, still no clue. Especially, how to implement a write-read lock in Python, so that when there are lots of read, they can be done currently without blocking each other.</p>
","2024-05-11 06:22:24","1","Question"
"78463460","78463386","","<p>You first need to aggregate as list with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html"" rel=""nofollow noreferrer""><code>groupby.agg</code></a> and <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reset_index.html"" rel=""nofollow noreferrer""><code>reset_index</code></a>:</p>
<pre><code>(df.groupby(['id', 'gender']).agg(list)
   .reset_index().to_json(orient='records')
)
</code></pre>
<p>Output:</p>
<pre><code>[{&quot;id&quot;:1,&quot;gender&quot;:&quot;m&quot;,&quot;val1&quot;:[1,2],&quot;val2&quot;:[3,4]},{&quot;id&quot;:2,&quot;gender&quot;:&quot;f&quot;,&quot;val1&quot;:[5,6],&quot;val2&quot;:[7,8]}]
</code></pre>
","2024-05-11 05:12:59","3","Answer"
"78463386","","Python: MultiIndex Dataframe to json-like list of dictionaries","<p>I want to store this data frame</p>
<pre><code>df = pd.DataFrame({
            'id':[1,1,2,2], 
            'gender':[&quot;m&quot;,&quot;m&quot;,&quot;f&quot;,&quot;f&quot;], 
            'val1':[1,2,5,6], 
            'val2':[3,4,7,8]
}).set_index(['id','gender'])
</code></pre>
<p>as a json file that contains lists of dictionaries like this:</p>
<pre><code>d = [{'id':1, 'gender':&quot;m&quot;, 'val1':[1,2], 'val2':[3,4]},
     {'id':2, 'gender':&quot;f&quot;, 'val1':[5,6], 'val2':[7,8]}]
</code></pre>
<p>All my attempts to use variations of <code>df.to_dict(orient = '...')</code> or <code>df.to_json(orient = '...')</code> did not produce the desired output.</p>
","2024-05-11 04:32:33","4","Question"
"78462366","78462024","","<p>It sounds like you want something similar to a <a href=""https://docs.pola.rs/docs/python/dev/reference/dataframe/api/polars.DataFrame.pivot.html#polars.DataFrame.pivot"" rel=""nofollow noreferrer""><code>.pivot()</code></a></p>
<h3>Data</h3>
<pre class=""lang-py prettyprint-override""><code># increase defaults
pl.Config(fmt_table_cell_list_len=10, fmt_str_lengths=100)

df = pl.from_repr(&quot;&quot;&quot;
┌────────────────┬──────────────┬──────────────┬─────────┐
│ Census_Tract   ┆ GEOID_Census ┆ table_B24012 ┆ value   │
│ ---            ┆ ---          ┆ ---          ┆ ---     │
│ str            ┆ str          ┆ str          ┆ f64     │
╞════════════════╪══════════════╪══════════════╪═════════╡
│ Census Tract 9 ┆ 04001942600  ┆ B24012_001E  ┆ 11111.0 │
│ Census Tract 9 ┆ 04001942700  ┆ B24012_002E  ┆ 22222.0 │
│ Census Tract 9 ┆ 04001942600  ┆ B24012_002E  ┆ 33333.0 │
│ Census Tract 9 ┆ 04001942700  ┆ B24012_001E  ┆ 44444.0 │
│ Census Tract 9 ┆ 04001944100  ┆ B24012_001E  ┆ 55555.0 │
└────────────────┴──────────────┴──────────────┴─────────┘
&quot;&quot;&quot;)
</code></pre>
<h3>Pivot</h3>
<pre class=""lang-py prettyprint-override""><code>df.pivot(&quot;table_B24012&quot;, index=[&quot;Census_Tract&quot;, &quot;GEOID_Census&quot;])
</code></pre>
<pre class=""lang-py prettyprint-override""><code>shape: (3, 4)
┌────────────────┬──────────────┬─────────────┬─────────────┐
│ Census_Tract   ┆ GEOID_Census ┆ B24012_001E ┆ B24012_002E │
│ ---            ┆ ---          ┆ ---         ┆ ---         │
│ str            ┆ str          ┆ f64         ┆ f64         │
╞════════════════╪══════════════╪═════════════╪═════════════╡
│ Census Tract 9 ┆ 04001942600  ┆ 11111.0     ┆ 33333.0     │
│ Census Tract 9 ┆ 04001942700  ┆ 44444.0     ┆ 22222.0     │
│ Census Tract 9 ┆ 04001944100  ┆ 55555.0     ┆ null        │
└────────────────┴──────────────┴─────────────┴─────────────┘
</code></pre>
<h3>Struct</h3>
<p>It's easy to create a struct from there if desired:</p>
<pre class=""lang-py prettyprint-override""><code>(df.pivot(&quot;table_B24012&quot;, index=[&quot;Census_Tract&quot;, &quot;GEOID_Census&quot;])
   .select(
       &quot;Census_Tract&quot;, 
       &quot;GEOID_Census&quot;, 
       table_B24012 = pl.struct(pl.exclude(&quot;Census_Tract&quot;, &quot;GEOID_Census&quot;))
   )
)
</code></pre>
<pre class=""lang-py prettyprint-override""><code>shape: (3, 3)
┌────────────────┬──────────────┬───────────────────┐
│ Census_Tract   ┆ GEOID_Census ┆ table_B24012      │
│ ---            ┆ ---          ┆ ---               │
│ str            ┆ str          ┆ struct[2]         │
╞════════════════╪══════════════╪═══════════════════╡
│ Census Tract 9 ┆ 04001942600  ┆ {11111.0,33333.0} │
│ Census Tract 9 ┆ 04001942700  ┆ {44444.0,22222.0} │
│ Census Tract 9 ┆ 04001944100  ┆ {55555.0,null}    │
└────────────────┴──────────────┴───────────────────┘
</code></pre>
","2024-05-10 20:14:20","1","Answer"
"78462024","","Python-Polars: group_by a column have the remaining columns be combined into a struct field?","<p>I have not found a way to group_by() a column and have a struct field for the new column.Here is a snippet of the dataframe:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Census_Tract</th>
<th>GEOID_Census</th>
<th>table_B24012</th>
<th>value</th>
</tr>
</thead>
<tbody>
<tr>
<td>Census Tract 9…</td>
<td>04001942600</td>
<td>B24012_001E</td>
<td>32179.0</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001942700</td>
<td>B24012_001E</td>
<td>33483.0</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001944000</td>
<td>B24012_001E</td>
<td>33114.0</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001944100</td>
<td>B24012_001E</td>
<td>26993.0</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001944201</td>
<td>B24012_001E</td>
<td>33798.0</td>
</tr>
<tr>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr>
<td>Census Tract 2…</td>
<td>56043000200</td>
<td>B24012_073E</td>
<td>-6.6667e8</td>
</tr>
<tr>
<td>Census Tract 3…</td>
<td>56043000301</td>
<td>B24012_073E</td>
<td>-6.6667e8</td>
</tr>
<tr>
<td>Census Tract 3…</td>
<td>56043000302</td>
<td>B24012_073E</td>
<td>-6.6667e8</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>56045951100</td>
<td>B24012_073E</td>
<td>41042.0</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>56045951300</td>
<td>B24012_073E</td>
<td>-6.6667e8</td>
</tr>
</tbody>
</table></div>
<p>Essentially what I am trying to do is to group by <code>Census_Tract</code> and <code>GEOID_Census</code>. The columns table_B24012 and value should be combined into one column.</p>
<p>In other words I would like the data to be a struct object such that for each GEOID_Census I have one row value with potential a dictionary structure built into the new column. It would look something like this</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Census_Tract</th>
<th>GEOID_Census</th>
<th>table_B24012</th>
</tr>
</thead>
<tbody>
<tr>
<td>Census Tract 9…</td>
<td>04001942600</td>
<td>{&quot;B24012_001E&quot;: 32179.0, &quot;B24012_002E&quot;: ..., ...}</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001942700</td>
<td>{&quot;B24012_001E&quot;: 33483.0, &quot;B24012_002E&quot;: ..., ...}</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001944000</td>
<td>{&quot;B24012_001E&quot;: 33114.0, &quot;B24012_002E&quot;: ..., ...}</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001944100</td>
<td>{&quot;B24012_001E&quot;: 26993.0, &quot;B24012_002E&quot;: ..., ...}</td>
</tr>
<tr>
<td>Census Tract 9…</td>
<td>04001944201</td>
<td>{&quot;B24012_001E&quot;: 33798.0, &quot;B24012_002E&quot;: ..., ...}</td>
</tr>
</tbody>
</table></div>
<p>If there is a more efficient way to store it in the column, I am open to other ways. I am just trying to condense the information.</p>
<p>I have tried casting the two columns to a list and then struct, as well as just to a dictionary. Nothing has helped. Any ideas?  Thanks in advance!</p>
","2024-05-10 18:42:01","0","Question"
"78459177","78459028","","<p>It looks like a use case for <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.json_normalize.html"" rel=""nofollow noreferrer""><code>pd.json_normalize</code></a>:</p>
<pre><code>out = pd.json_normalize(df['prediction'])
</code></pre>
<p>Or <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.from_records.html#pandas.DataFrame.from_records"" rel=""nofollow noreferrer""><code>pd.DataFrame.from_records</code></a>:</p>
<pre><code>out = pd.DataFrame.from_records(df['prediction'])
</code></pre>
<p>Output:</p>
<pre><code>                       answer                      text  id
0          My name is Andrew.       What is your name ?   1
1       I live at California.       Where do you live ?   2
2  I want to become a doctor.  What do you want to do ?   3
</code></pre>
<p>Used input:</p>
<pre><code>df = pd.DataFrame({'prediction': [{'answer': 'My name is Andrew.',
                                   'text': 'What is your name ?',
                                   'id': 1},
                                  {'answer': 'I live at California.',
                                   'text': 'Where do you live ?',
                                   'id': 2},
                                  {'answer': 'I want to become a doctor.',
                                   'text': 'What do you want to do ?',
                                   'id': 3}]})
</code></pre>
<p>Then if you want to reshape, you can <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pivot.html"" rel=""nofollow noreferrer""><code>pivot</code></a>:</p>
<pre><code>out = (pd.DataFrame.from_records(df['prediction'])
         .pivot(index='id', columns='text', values='answer')
       )
</code></pre>
<hr />
<p>If you have a list in each cell, you can <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.explode.html"" rel=""nofollow noreferrer""><code>explode</code></a>, convert to DataFrame, then <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pivot.html"" rel=""nofollow noreferrer""><code>pivot</code></a>:</p>
<pre><code>s = df['prediction'].explode()
out = (pd.DataFrame.from_records(s.tolist(), index=s.index)
         .pivot(columns='text', values='answer')
      )
</code></pre>
<p>Output:</p>
<pre><code>        What do you want to do ? What is your name ?    Where do you live ?
0     I want to become a doctor.  My name is Andrew.  I live at California.
</code></pre>
<p>Used input:</p>
<pre><code>df = pd.DataFrame({'prediction': [[{'answer': 'My name is Andrew.',
                                   'text': 'What is your name ?',
                                   'id': 1},
                                  {'answer': 'I live at California.',
                                   'text': 'Where do you live ?',
                                   'id': 2},
                                  {'answer': 'I want to become a doctor.',
                                   'text': 'What do you want to do ?',
                                   'id': 3}]]})
</code></pre>
","2024-05-10 09:28:10","0","Answer"
"78459066","78459028","","<p>Use nested list comprehension with <code>DataFrame</code> constructor:</p>
<pre><code>L = [{'answer': 'My name is Andrew.',
  'text': 'What is your name ?',
  'id': 1},
 {'answer': 'I live at California.',
  'text': 'Where do you live ?',
  'id': 2},
 {'answer': 'I want to become a doctor.',
  'text': 'What do you want to do ?',
  'id': 3}]

df = pd.DataFrame({'prediction':[L, L, L]})
</code></pre>
<hr />
<pre><code>out = pd.DataFrame([{x['text']:x['answer'] for x in L} for L in df['prediction']])
print (out)
  What is your name ?    Where do you live ?    What do you want to do ?
0  My name is Andrew.  I live at California.  I want to become a doctor.
1  My name is Andrew.  I live at California.  I want to become a doctor.
2  My name is Andrew.  I live at California.  I want to become a doctor.
</code></pre>
","2024-05-10 09:04:53","0","Answer"
"78459028","","Creating a dataframe from a column","<p>I have a dataframe <code>df</code> which has a column <code>prediction</code> in it. The column <code>prediction</code> has values which are list of dictionaries. A typical row of the column <code>prediction</code> looks like this :</p>
<pre><code>[{'answer': 'My name is Andrew.',
  'text': 'What is your name ?',
  'id': 1},
 {'answer': 'I live at California.',
  'text': 'Where do you live ?',
  'id': 2},
 {'answer': 'I want to become a doctor.',
  'text': 'What do you want to do ?',
  'id': 3}]

</code></pre>
<p>I want to convert the column <code>prediction</code> into a separate dataframe that will have the values of the key <code>text</code> as the column names and <code>answer</code> as the rows. Example :</p>
<pre><code>What is your name ?      Where do you live?        What do you want to do?   
My name is Andrew        I live at California      I want to become a doctor.
My name is Julie         I live at NY              I want to be a cook.

</code></pre>
<p>Please suggest ways to do that.</p>
","2024-05-10 08:57:35","1","Question"
"78458349","78457093","","<p>You can use <a href=""http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.apply.html"" rel=""nofollow noreferrer""><code>GroupBy.apply</code></a> with custom function with <a href=""http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.map.html"" rel=""nofollow noreferrer""><code>Series.map</code></a> and filtering only matched sites in <a href=""http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.isin.html"" rel=""nofollow noreferrer""><code>Series.isin</code></a>:</p>
<pre><code>d1 = {'LocationName':{'Test Name': 'Another Test', 'Testing': 'RandomLocation'},
      'Resource#': {5: '5000'}}
d2 = {'LocationName':{'California': 'CA-123'},
      'Resource#': {10: '10A', 11: '11B'}}

d = {'01':d1, '02':d2}
</code></pre>
<hr />
<pre><code>def f(x):
    for k, v in d[x.name].items():
        #if possible some mapping key not matched df.columns
        if k in df.columns:
            x[k] = x[k].map(v)
    return x

cols = ['LocationName','Resource#']

m = df['Site'].isin(d.keys())
df.loc[m, cols] = df[m].groupby('Site', group_keys=False)[cols].apply(f)
print (df)
  Site    LocationName Resource#
0   01    Another Test      5000
1   01  RandomLocation       NaN
2   02          CA-123       10A
3   02             NaN       11B
</code></pre>
","2024-05-10 06:19:43","1","Answer"
"78458087","78457093","","<p>Yes there is. You can use the <code>map</code> function within the <code>apply</code> method on your dataframe.</p>
<pre><code>import pandas as pd

data = {
    'Site': ['01', '01', '02', '02'],
    'LocationName': ['Test Name', 'Testing', 'California', 'Texas'],
    'Resource#': [5, 6, 10, 11]
}

df = pd.DataFrame(data)

mappings = {
    '01': {
        'LocationName': {'Test Name': 'Another Test', 'Testing': 'RandomLocation'},
        'Resource#': {5: '5000', 6: None}  
    },
    '02': {
        'LocationName': {'California': 'CA-123', 'Texas': None},
        'Resource#': {10: '10A', 11: '11B'}
    }
}

def apply_mappings(row):
    site = row['Site']
    if site in mappings:
        location_map = mappings[site]['LocationName']
        row['LocationName'] = location_map.get(row['LocationName'])

        resource_map = mappings[site]['Resource#']
        row['Resource#'] = resource_map.get(row['Resource#'], None)  
    return row

df = df.apply(apply_mappings, axis=1)

print(df)

</code></pre>
<p>which gives you your expected output:</p>
<pre><code>  Site    LocationName Resource#
0   01    Another Test      5000
1   01  RandomLocation      None
2   02          CA-123       10A
3   02            None       11B
</code></pre>
","2024-05-10 05:04:38","1","Answer"
"78457093","","Pandas Map Multiple Columns With A Filter","<p>I have a dataframe like so (simplified for this example)</p>
<pre><code> Site     LocationName    Resource#    
   01        Test Name            5
   01          Testing            6
   02       California           10
   02            Texas           11
   ...
</code></pre>
<p>Each site has their own mapping for <code>LocationName</code> and <code>Resource#</code></p>
<p>For example:</p>
<ul>
<li>Site 01 has a mapping of <code>{'Test Name': 'Another Test', 'Testing': 'RandomLocation'}</code> for <code>LocationName</code> and a mapping of <code>{5: 5000}</code> for <code>Resource#</code></li>
<li>Site 02 has a mapping of <code>{'California': 'CA-123'}</code> for <code>LocationName</code> and a mapping of <code>{10: '10A', 11: '11B'}</code> for <code>Resource#</code></li>
</ul>
<p>I am trying to map each respective site with their mappings for the different columns. If the mapping does not exist, I want the field to be None/blank.</p>
<p>My ideal output is:</p>
<pre><code>Site#     LocationName    Resource#    
   01     Another Test         5000
   01   RandomLocation
   02           CA-123          10A
   02                           11B
</code></pre>
<p>My idea was to filter for each site and run map on the series</p>
<pre><code>df01 = df[df.Site == '01']
df01 = df['LocationName'].map({'Test Name': 'Another Test', 'Testing': 'RandomLocation'})
</code></pre>
<p>But this returns <code>SettingWithCopyWarning</code> since I am performing these operations on a copy.</p>
<p>Is there a simple way to achieve this?</p>
","2024-05-09 21:41:01","2","Question"
"78454998","78454961","","<p>What is rendered to the HTML is the result of <code>offices.map</code> and <code>offices.forEach</code> respectively.</p>
<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer""><code>Array.prototype.map</code></a> returns an array of values (ie each value being the result of one execution of callback). In your case an array of HTML Elements (or at least something similar, I'm not familiar with Astro)</p>
<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach"" rel=""nofollow noreferrer""><code>Map.prototype.forEach</code></a> does also execute the callback for each element in the map, but it returns <code>undefined</code> ... Thus there is nothing to render ...</p>
","2024-05-09 14:07:18","1","Answer"
"78454961","","Map.prototype.forEach() does not work when creating html elements on Astro","<p>I'm writing a small website on the Astro framework. I have a list of “Document Acceptance Points”. Previously, I just stored them in the variable <code>offices = [ {} , {} , {} ]</code>. I output them to the frontend as follows:</p>
<pre class=""lang-js prettyprint-override""><code>// Here the offices is an Array

&lt;select size='2'&gt;)
  { offices.map( (i) =&gt; &lt;option value={i.id}&gt; {i.name} &lt;/option&gt; ) }
&lt;/select&gt;
</code></pre>
<p>Now I am trying to do the same thing through Map().foreach() but nothing work:</p>
<pre class=""lang-js prettyprint-override""><code>// Offices.ts

const offices: Map&lt;string, office&gt; = new Map()

const volskaya: office = {
  id: 'volskaya',
  name: 'name',
  address: 'address',
  phone: '+x (xxx) xxx-xx-xx',
  phoneUrl: 'tel:+xxxxxxxxxxx',
  working: ''
}

const rabochaya: office = {
  id: 'rabochaya',
  name: 'name',
  address: 'address',
  phone: '+x (xxx) xxx-xx-xx',
  phoneUrl: 'tel:+xxxxxxxxxxx',
  working: ''
}

offices.set('volskaya', volskaya)
offices.set('rabochaya', rabochaya)

export {offices}


// Component.astro
---
import { offices } from &quot;./offices&quot;;
---

&lt;select&gt;)
  { offices.forEach( (i) =&gt; &lt;option value={i.id}&gt; {i.name} &lt;/option&gt; ) } // not working
&lt;/select&gt;
</code></pre>
<p>At the same time, if I output the data to console.log(), everything displays as it should:</p>
<pre class=""lang-js prettyprint-override""><code>offices.forEach((i)=&gt; console.log(i.id,i.name)) // working
</code></pre>
<p>I can't understand it. Either there is some restriction on using Map(), or I am using Map() incorrectly.</p>
","2024-05-09 14:01:12","0","Question"
"78454703","78454528","","<p>The easiest way to ensure that you have a valid comparison over multiple criteria is to always use <code>std::tuple::operator&lt;</code>, synthesizing values that represent your priority of order.</p>
<pre><code>bool operator()(const myStruct&amp; rLeft, const myStruct&amp; rRight) const
{
    return std::tuple{ lhs.index == -1 ? lhs.description : lhs.type, lhs.index }
         &lt; std::tuple{ rhs.index == -1 ? rhs.description : rhs.type, rhs.index };
}
</code></pre>
<p>This orders elements of a non-unique category together, by ignoring their description, and uses the index to order within the category.</p>
","2024-05-09 13:17:42","1","Answer"
"78454528","","Sorting keys in a dictionary with multiple keys while keeping certain keys together","<p>I have a Dictionary with keys of type <em>Setting</em>, where setting is a struct with members <em>mCategory</em> (String), <em>mIndex</em> (int), and <em>mDescription</em> (String). Some of the keys are unique - there will be at most one with the same <em>mCategory</em>. These have <em>mIndex</em> set to -INF and their descriptions are arbitrary.</p>
<p>The other keys will follow a sequence, e.g., items in <em>mCategory</em> <strong>Books</strong> can have <em>mIndex</em> 1, 2, 3 etc. Descriptions are not arbitrary for the latter. They are prefixed with <em>mCategory</em> + <em>mIndex</em>. I want the keys to be sorted by description, until we are at a non-unique <em>mCategory</em>. I want to sort the keys with the same mCategory by <em>mIndex</em> because sorting the whole thing lexicographically would place Book 10 after Book 1. This is what I want - but I cannot figure out how to make it sort the way I want</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Description</th>
<th>Index</th>
<th>Type</th>
</tr>
</thead>
<tbody>
<tr>
<td>ABC</td>
<td>-INF</td>
<td>X</td>
</tr>
<tr>
<td>BCD</td>
<td>-INF</td>
<td>Y</td>
</tr>
<tr>
<td>CDE</td>
<td>-INF</td>
<td>Z</td>
</tr>
<tr>
<td>D 1</td>
<td>1</td>
<td>D</td>
</tr>
<tr>
<td>D 2</td>
<td>2</td>
<td>D</td>
</tr>
<tr>
<td>D 3</td>
<td>3</td>
<td>D</td>
</tr>
<tr>
<td>D 4</td>
<td>4</td>
<td>D</td>
</tr>
<tr>
<td>..</td>
<td>..</td>
<td>..</td>
</tr>
<tr>
<td>D 10</td>
<td>10</td>
<td>D</td>
</tr>
<tr>
<td>EGH</td>
<td>-INF</td>
<td>E</td>
</tr>
<tr>
<td>GHI</td>
<td>..</td>
<td>F</td>
</tr>
<tr>
<td>K 1</td>
<td>..</td>
<td>K</td>
</tr>
<tr>
<td>K 2</td>
<td>..</td>
<td>K</td>
</tr>
</tbody>
</table></div>
<p>This is the comparator I wrote but this is clearly not working:</p>
<pre><code>bool operator()(const myStruct&amp; rLeft, const myStruct&amp; rRight) const
{
        if (rLeft.mCategory == rRight.mCategory)
             return rLeft.mIndex &lt; rRight.mIndex;
        else return rLeft.mDescription.CompareNoCase(rRight.m_sDescription) &lt; 0;  
}
</code></pre>
<p><strong>Clarification:</strong>
I don't want to sort by uniqueness, I want to sort by description until sorting by description finds a non-unique category, then sort that subsequence by index, then continue sorting by description until another non-unique subsequence occurs, and so on. I fixed the example to reflect that.</p>
","2024-05-09 12:46:31","0","Question"
"78445753","78445714","","<p>well not totally clear what you are trying to do,  your JSON if that what that is supposed to be,  is malformed.  and I wouldn't call that a dictionary. it is an object.</p>
<p>you did not tag any programming language and since it kind of looks like JSON I am going to guess JavaScript?</p>
<p>you really need to fix your question.</p>
<p>but assuming it is JavaScript you can use map to get name3 values.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const [value1, value2, value3, value4] = ['one', 'two', 'three', 'four'];

let data = {
    'name': [
        {'name1': value1, 'name2': value2, 'name3': value3, 'name4': value4},
        {'name1': value1, 'name2': value2, 'name3': value3, 'name4': value4},
        {'name1': value1, 'name2': value2, 'name3': value3, 'name4': value4}
    ]
};

const result = data.name.map(x =&gt; x.name3);
console.log(result);</code></pre>
</div>
</div>
</p>
","2024-05-08 01:53:19","0","Answer"
"78445714","","Retrieving Value's from dictonaries","<p>I recieve dictionaries in the following format.
<code>data={'name'[{    'name1': value1, 'name2': value2, 'name3': value3, 'name4': value4, }{     'name1': value1, 'name2': value2, 'name3': value3, 'name4': value4, }{     'name1': value1, 'name2': value2, 'name3': value3, 'name4': value4}]}</code>
How do I retrieve each say value3 string and store them each seperately in a file?</p>
<p>I haven't really tried much as I don't know what to do.</p>
","2024-05-08 01:33:20","-1","Question"
"78445104","78445088","","<p>Rather than <code>View(make_a_map)</code> have you tried making the last line simply <code>make_a_map</code>? It looks like <code>make_a_map</code> is already a leaflet object and just needs to be displayed by calling it directly (see example below).</p>
<p>Find what a function does by typing <code>?FUNCTION_NAME</code> in the R command prompt. For example, <code>?View</code> brings up the help which says that <code>View()</code> invokes a spreadsheet-style data viewer on a matrix-like R object. It is for looking at data frames rather than maps.</p>
<p>The <a href=""https://rstudio.github.io/leaflet/index.html"" rel=""nofollow noreferrer"">leaflet</a> library offers examples of how to construct interactive map visualizations.</p>
<pre><code>library(leaflet)

m &lt;- leaflet() %&gt;%
  addTiles() %&gt;%  # Add default OpenStreetMap map tiles
  addMarkers(lng=174.768, lat=-36.852, popup=&quot;The birthplace of R&quot;)
m  # Print the map
</code></pre>
<p>Note how <code>m</code> is assigned to a <code>leaflet()</code> object and then simply called in the last line of the code chunk.</p>
","2024-05-07 21:16:30","1","Answer"
"78445088","","on R studio for mac book, how do I make sure my map is laoding?","<p>I am using Rstudio on my macbook, I want to run a geographical analysis. I have the leaflet library, and the required libraries overall. However, when i <code>View(make_a_map)</code> there is not a visual but name, type and value.</p>
<p>I tried:</p>
<pre><code>make_a_map &lt;- leaflet(bike_ride) %&gt;%
  addTiles() %&gt;%
  addMarkers(~start_lat, ~start_lng, popup = ~start_station_name)

View(make_a_map)
</code></pre>
<p>I was expecting an interactive map.</p>
","2024-05-07 21:12:13","0","Question"
"78442839","78442779","","<p>Use dynamic object property syntax with square brackets, otherwise the property names are interpreted as strings, not variable names:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const PORTRAIT = 'PRT';
const LANDSCAPE = 'LND';
const SQUARE = 'SQ';

const good_image_ratios = {}
good_image_ratios[LANDSCAPE] = '16_9_';
good_image_ratios[PORTRAIT] = '3_4_';
good_image_ratios[SQUARE] = '1_1_';

const wrong_image_ratios = { [LANDSCAPE]: '16_9_', [PORTRAIT]: '3_4_', [SQUARE] : '1_1_'  }

console.log(good_image_ratios);
console.log(wrong_image_ratios);

console.log(good_image_ratios[LANDSCAPE]);
console.log(wrong_image_ratios[LANDSCAPE]);</code></pre>
</div>
</div>
</p>
","2024-05-07 13:23:53","2","Answer"
"78442779","","Strange behavior with dictionary using constants","<p>I am defining two dictionaries using two different methods and they behave in different way. Can someone explain why?</p>
<pre><code>const PORTRAIT = 'PRT';
const LANDSCAPE = 'LND';
const SQUARE = 'SQ';

const good_image_ratios = {}
good_image_ratios[LANDSCAPE] = '16_9_';
good_image_ratios[PORTRAIT] = '3_4_';
good_image_ratios[SQUARE] = '1_1_';

const wrong_image_ratios = { LANDSCAPE: '16_9_', PORTRAIT: '3_4_', SQUARE : '1_1_'  }

console.log(good_image_ratios);
console.log(wrong_image_ratios);

console.log(good_image_ratios[LANDSCAPE]);
console.log(wrong_image_ratios[LANDSCAPE]);
</code></pre>
<p>The output is as follow:</p>
<pre><code>{ LND: '16_9_', PRT: '3_4_', SQ: '1_1_' }
{ LANDSCAPE: '16_9_', PORTRAIT: '3_4_', SQUARE: '1_1_' }
16_9_
undefined
</code></pre>
<p>Why is this?</p>
","2024-05-07 13:14:18","0","Question"
"78438024","78437600","","<p>It has a small error and that is that you are requesting a new username in each iteration of the for loop, which is not necessary.</p>
<p>Below you can see the correction by modifying the code you provided very little.</p>
<pre><code>alr_exists = {}
user = {}

with open('user.txt', 'r') as file:
    for line in file:
        key, _ = line.strip().split(',')
        alr_exists[key.strip()] = True

while True:
    new_username = input(&quot;To register a new user, please enter a username:\n&quot;).strip().lower()
    if new_username in alr_exists:
        print(f'Sorry, the user name {new_username} has already been taken. Please try again.\n')
    else:
        password = input(&quot;Please enter a password:\n&quot;).strip().lower()
        user[new_username] = password
        print(&quot;User registered successfully!&quot;)
        break
</code></pre>
","2024-05-06 16:45:37","3","Answer"
"78437976","78437600","","<p>This code should do the work:</p>
<pre><code># setting username
while True:
    x = input(&quot;username?&quot;)
    if x in keys:
        continue
    break
# setting password
while True:
    x = input(&quot;password?&quot;)
    ...   
</code></pre>
","2024-05-06 16:35:38","1","Answer"
"78437851","78437600","","<p>I hope you are enjoying programming with Python. I’m new here too.</p>
<p>Looking at your code I see three things that can make it not work:</p>
<ol>
<li>You have a while loop that is infinite, and that, according to the indentation, is also inside the for loop that reads line by line. There are things that can go within the cycles, and others that are unnecessary and lend themselves to making mistakes.</li>
<li>You are storing existing usernames in a dictionary, but it has both a key and a value for the username, perhaps you could use a list or assign another value to each key such as True/False or the password.</li>
<li>You are checking if the user already exists by comparing it with the value of the last iteration, in your code you are not accessing the keys but the value (username) of the last line of the file. <code>if x in alr_exists[keys]:</code>
You could use the dict.keys() function in your case <code>if x in alr_exists.keys()</code></li>
</ol>
<p>I propose a modified version of your code, and I hope it does not seem complicated to you, it is also commented and follows the style of pep8.</p>
<pre><code>def read_existing_usernames(filename):
    &quot;&quot;&quot;Read existing usernames from a file and store them in a dictionary.

    Args:
        filename (str): The name of the file containing existing usernames.

    Returns:
        dict: A dictionary containing existing usernames as keys.
    &quot;&quot;&quot;
    # Create an empty dictionary to store existing usernames
    existing_usernames = {}
    
    # Read existing usernames from the file
    with open(filename, 'r') as file:
        # Iterate over each line in the file
        for line in file:
            # Split the line into username and password (separated by a space)
            username, _ = line.split()
            
            # Store the username in the dictionary and set the value to True
            existing_usernames[username] = True
    
    # Print a success message with the existing usernames
    print(f'Existing usernames: {', '.join(existing_usernames)}')
    
    # Return the dictionary of existing usernames
    return existing_usernames


def register_user():
    &quot;&quot;&quot;
    Register a new user by entering a username and password.
    The username must be unique and the password must be confirmed.
    The new username and password are stored in a file. ('user.txt')
    
    Args:
        None
        
    Returns:
        None
    &quot;&quot;&quot;
    # Bring in existing usernames from the file with the function
    existing_usernames = read_existing_usernames('user.txt')
    
    # Iterate until a new user is successfully registered
    while True:
        # Prompt the user to enter a new username
        username = input(&quot;To register a new user, please enter a username: &quot;)
        
        # Check if the username is already taken
        if username.lower() in existing_usernames:
            # Print an error message and prompt the user to try again
            print(f&quot;Sorry, the username '{username}' has already been taken&quot;)
            print(&quot;Please try again.\n&quot;)
        # If the username is not taken
        else:
            # Prompt the user to enter a password and confirm it
            password = input(&quot;Please enter a password: &quot;)
            
            # Confirm the password by reentering it
            confirm_password = input(&quot;Please reenter your password: &quot;)
            
            # Check if the passwords match
            if password == confirm_password:
                # Open the file in append mode and write the new information
                # Append because we don't want to overwrite the existing data
                with open('user.txt', 'a') as file:
                    # Write the new username and password to the file
                    file.write(f'{username} {password}\n')
                
                # Print a success register message
                print(&quot;User registered successfully!&quot;)
                
                # Break out of the loop to end the program
                break
            
            # If the passwords do not match
            else:
                # Print an error message and prompt the user to try again
                print(&quot;Passwords do not match. Please try again.\n&quot;)

# Run main program to register a new user
register_user()
</code></pre>
","2024-05-06 16:09:16","2","Answer"
"78437600","","How to prevent duplicates from being written to .txt file","<p>I'm trying to write code that will prevent a duplicate user name from being written to file.</p>
<p>In my latest iteration so far, I've managed to get duplicates of the first key rejected, but duplicates of subsequent keys are still going through. I.e if my keys have the values 'admin' and 'user' (which I've confirmed in my first print statement), <code>x = admin</code> is rightly being rejected but <code>x = users</code> is still progressing.</p>
<p>My code:</p>
<pre><code>alr_exists = {}
user = {} 
with open('user.txt', 'r') as file: 
    for lines in file:
        (keys, values) = lines.split()
        keys = keys.replace(',', '')
        alr_exists[keys] = keys
        print(alr_exists[keys])

        while True: 
            x = input(&quot;To register a new user, please enter a username:\n&quot;).lower()
            if x in alr_exists[keys]:
                print(f'Sorry, the user name {x} has already been taken. Please try again.\n')
                continue
            else:
                y = input(&quot;Please enter a password:\n&quot;).lower()
                z = input(&quot;To confirm, please reenter your password:\n&quot;).lower()
</code></pre>
<p>Sample data set:</p>
<pre class=""lang-none prettyprint-override""><code>admin, adm1n
user, us3r
</code></pre>
<p>(Where the first column contains user names and the second passwords.)</p>
","2024-05-06 15:23:05","0","Question"
"78423159","78422895","","<p>Assuming you want to build a weighted DiGraph from your input dictionary, you could take advantage of <a href=""https://docs.python.org/3/library/collections.html#collections.Counter"" rel=""nofollow noreferrer""><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter
import networkx as nx

compiledDict = {'A': ['A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6'],
                'B': ['B_1', 'B_2', 'B_3', 'B_2', 'B_4', 'B_5', 'B_1', 'B_6', 'B_4']}

G2 = nx.DiGraph()

for k1, l in compiledDict.items():
    for k2, w in Counter(l).items():
        G2.add_edge(k1, k2, weight=w)
</code></pre>
<p>Or, without the intermediate dictionary:</p>
<pre><code>import networkx as nx

compiledDict = {'A': ['A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6'],
                'B': ['B_1', 'B_2', 'B_3', 'B_2', 'B_4', 'B_5', 'B_1', 'B_6', 'B_4']}

G2 = nx.DiGraph()

for k1, l in compiledDict.items():
    for k2 in l:
        if  G2.has_edge(k1, k2):
            G2[k1][k2]['weight'] += 1
        else:
            G2.add_edge(k1, k2, weight=1)
</code></pre>
<p>Graph with weights as edge labels:</p>
<p><a href=""https://i.sstatic.net/v8pUqDNo.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/v8pUqDNo.png"" alt=""networkx graph from nested dictionary"" /></a></p>
","2024-05-03 07:06:30","0","Answer"
"78422895","","Converting nested dictionary with overlapping keys to NetworkX","<p>So I have a real mess here, as far as I can see. My goal is a directed and weighted network. The main issue I'm facing is that my output that I'm trying to convert to weighted edges is coming from a 'for' loop, and I tend to get either the first or last output of the loop no matter what I do.</p>
<p>It looks something like this:</p>
<pre><code>import networkx as nx
import matplotlib.pyplot as plt
G2 = nx.DiGraph()
compiledDict = {'A': ['A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6'], 'B': ['B_1', 'B_2', 'B_3', 'B_2', 'B_4', 'B_5', 'B_1', 'B_6', 'B_4']

for x in compiledDict:
    dNotFinalAfterAll={}
    forthelasttime=compiledDict.get(x)
    for item in forthelasttime:
        dNotFinalAfterAll[x]={item:forthelasttime.count(item)}
        print(dNotFinalAfterAll)
</code></pre>
<p>And a shortened ver of the output is as follows, each line is one output of the for loop. The goal is to have it where {A:{B:C}} is that A is an outgoing node, B is incoming, and C is the weight:</p>
<pre><code>{'B': {'B_1': 2}}
{'B': {'B_2': 2}}
{'B': {'B_3': 1}}
{'B': {'B_2': 2}}

</code></pre>
<p>If there's a way to make it so the duplicates like {'B': {'B_2': 2}} only occur once, that would be good, but as long as it works it can be as ugly as necessary. Needed for proof of concept rather than ongoing process.
I want to take this and make it a dataframe. It is not happening. The closest I get is putting this in various places:</p>
<pre><code>G2 = nx.DiGraph((k, v, {'weight': weight}) for k, vs in dNotFinalAfterAll.items() for v, weight in vs.items())
for s, t, w in G2.edges(data=True):
    print(s,t,w)
    G2.add_edge(s,t,weight = w)
</code></pre>
<p>Which typically outputs this, whether or not I place it in the for loop:</p>
<pre><code>Z Z_3 {'weight': 1}
</code></pre>
","2024-05-03 05:50:14","1","Question"
"78422280","78422127","","<p>your fetch list function</p>
<pre><code>   const fetchList = async (id) =&gt;
     (await stripe.accounts.listExternalAccounts(
       id, { object: &quot;bank_account&quot; })).data;
</code></pre>
<p>map ids to promises</p>
<pre><code>let fetchPromises = stripeAccountIds.map(id =&gt;
  fetchList(id).then(data =&gt; ({ id, data })));
</code></pre>
<p>once all promises resolve results will be an array of ids and corresponding data</p>
<pre><code>  const results = await Promise.all(fetchPromises);
</code></pre>
<p>construct the result object</p>
<pre><code>   let resultObject = results.reduce((acc, { id, data }) =&gt;
           ({ ...acc, [id]: data }), {});
</code></pre>
<p>putting it all together.</p>
<pre><code>const stripe = require('stripe')('your_stripe_secret_key');

const fetchList = async (id) =&gt;
    (await stripe.accounts.listExternalAccounts(id, { object: &quot;bank_account&quot; })).data;

async function fetchAllAccounts(stripeAccountIds) {
    let fetchPromises = stripeAccountIds.map(id =&gt;
        fetchList(id).then(data =&gt; ({ id, data }))
    );

    const results = await Promise.all(fetchPromises);

    let resultObject = results.reduce((acc, { id, data }) =&gt;
        ({ ...acc, [id]: data }), {}
    );

    return resultObject;
}

// Example usage:
const stripeConnectAccountIds = ['acct_123', 'acct_456'];
fetchAllAccounts(stripeConnectAccountIds).then(result =&gt; console.log(result));
</code></pre>
","2024-05-03 01:02:14","0","Answer"
"78422127","","How can I create an object with the value the result from an api call?","<p>Good evening,</p>
<p>I am currently trying to create an object that will contain:</p>
<pre><code>{
  &quot;acct_123&quot;: [
   // result from calling stripe api 
  ],
  &quot;acct_456&quot;: [
   // result from calling stripe api 
  ]
}
</code></pre>
<p>The parameter of my function is the list of stripeIds: <code>['acct_123', 'acct_456']</code></p>
<p>I tried this:</p>
<pre><code>const fetchList = async (id: string) =&gt; {
    const resp = await stripe.accounts.listExternalAccounts(
        id,
        { object: &quot;bank_account&quot; },
        { apiKey }
     )
    return resp.data;
 }

let bankAccoutFetchPromises: any = [];
let obj;
stripeConnectAccountIds.map(async (id: string) =&gt; {
      const bankAccountList = await stripe.accounts.listExternalAccounts(
        id,
        { object: &quot;bank_account&quot; },
        { apiKey }
      );
      obj[id] = bankAccountList.data;
      bankAccoutFetchPromises.push(bankAccountList.data);


 });
Promise.all(bankAccoutFetchPromises);
</code></pre>
<p>Unfortunately this call only fetch the data for the first element in the array. :|</p>
<p>Can you please help me with setting object key the id and the value the result from fetchList(id)?</p>
<p>Thanks! :)</p>
","2024-05-02 23:45:45","0","Question"
"78420162","78418973","","<p>The simplest option</p>
<pre class=""lang-yaml prettyprint-override""><code>  result: &quot;{{ dict(repolist|groupby('org')) }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  result:
    rhceph:
    - org: rhceph
      registry: registry.redhat.io
      repo: rhceph-4-dashboard-rhel8
    rhosp-rhel8:
    - org: rhosp-rhel8
      registry: registry.redhat.io
      repo: openstack-zaqar-base
    - org: rhosp-rhel8
      registry: registry.redhat.io
      repo: openstack-zaqar-wsgi
</code></pre>
<p>Optionally, create a list</p>
<pre class=""lang-yaml prettyprint-override""><code>  result: &quot;{{ dict(repolist|groupby('org')) |
              dict2items(key_name='org', value_name='repos') }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  result:
  - org: rhceph
    repos:
    - org: rhceph
      registry: registry.redhat.io
      repo: rhceph-4-dashboard-rhel8
  - org: rhosp-rhel8
    repos:
    - org: rhosp-rhel8
      registry: registry.redhat.io
      repo: openstack-zaqar-base
    - org: rhosp-rhel8
      registry: registry.redhat.io
      repo: openstack-zaqar-wsgi
</code></pre>
<p>Use the filter <a href=""https://docs.ansible.com/ansible/latest/collections/ansible/utils/remove_keys_filter.html#ansible-utils-remove-keys-filter-remove-specific-keys-from-a-data-recursively"" rel=""nofollow noreferrer"">ansible.utils.remove_keys</a> if you have to get rid of the attribute <em>org</em></p>
<pre class=""lang-yaml prettyprint-override""><code>  r_groups: &quot;{{ repolist | groupby('org') }}&quot;
  r_keys: &quot;{{ r_groups | map('first') }}&quot;
  r_vals: &quot;{{ r_groups | map('last') |
              ansible.utils.remove_keys(target=['org']) }}&quot;
  result: &quot;{{ dict(r_keys|zip(r_vals)) }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  result:
    rhceph:
    - registry: registry.redhat.io
      repo: rhceph-4-dashboard-rhel8
    rhosp-rhel8:
    - registry: registry.redhat.io
      repo: openstack-zaqar-base
    - registry: registry.redhat.io
      repo: openstack-zaqar-wsgi
</code></pre>
<p>Optionally, create a list</p>
<pre class=""lang-yaml prettyprint-override""><code>  result: &quot;{{ dict(r_keys|zip(r_vals)) |
              dict2items(key_name='org', value_name='repos') }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  result:
  - org: rhceph
    repos:
    - registry: registry.redhat.io
      repo: rhceph-4-dashboard-rhel8
  - org: rhosp-rhel8
    repos:
    - registry: registry.redhat.io
      repo: openstack-zaqar-base
    - registry: registry.redhat.io
      repo: openstack-zaqar-wsgi
</code></pre>
<hr>
<sup>
<p>Example of a complete playbook for testing</p>
<pre class=""lang-yaml prettyprint-override""><code>- hosts: localhost

  vars:

    repolist:
      - org: rhosp-rhel8
        registry: registry.redhat.io
        repo: openstack-zaqar-base
      - org: rhosp-rhel8
        registry: registry.redhat.io
        repo: openstack-zaqar-wsgi
      - org: rhceph
        registry: registry.redhat.io
        repo: rhceph-4-dashboard-rhel8

    result: &quot;{{ dict(repolist|groupby('org')) }}&quot;
    resul2: &quot;{{ dict(repolist|groupby('org')) |
                dict2items(key_name='org', value_name='repos') }}&quot;

    r_groups: &quot;{{ repolist | groupby('org') }}&quot;
    r_keys: &quot;{{ r_groups | map('first') }}&quot;
    r_vals: &quot;{{ r_groups | map('last') | ansible.utils.remove_keys(target=['org']) }}&quot;
    resul3: &quot;{{ dict(r_keys|zip(r_vals)) }}&quot;
    resul4: &quot;{{ dict(r_keys|zip(r_vals)) |
                dict2items(key_name='org', value_name='repos') }}&quot;

  tasks:

    - debug:
        var: result
    - debug:
        var: resul2
    - debug:
        var: resul3
    - debug:
        var: resul4
</code></pre>
</sup>
","2024-05-02 15:18:44","2","Answer"
"78418973","","Convert a list of dictionaries to a dictionary of dictionaries or another list of dictionaries","<p>I have this list of dictionaries:</p>
<pre class=""lang-yaml prettyprint-override""><code>repolist:
  - org: rhosp-rhel8
    registry: registry.redhat.io
    repo: openstack-zaqar-base
  - org: rhosp-rhel8
    registry: registry.redhat.io
    repo: openstack-zaqar-wsgi
  - org: rhceph
    registry: registry.redhat.io
    repo: rhceph-4-dashboard-rhel8
</code></pre>
<p>I want to convert it to this:</p>
<pre class=""lang-yaml prettyprint-override""><code>repolist:
  - org: rhosp-rhel8
    repos: 
        - name: openstack-zaqar-base
          registry: registry.redhat.io
        - name: openstack-zaqar-wsgi
          registry: registry.redhat.io
  - org: rhceph
    repos: 
      - name: rhceph-4-dashboard-rhel8
        registry: registry.redhat.io
</code></pre>
<p>, or this:</p>
<pre class=""lang-yaml prettyprint-override""><code> 
repolist:
  rhosp-rhel8:
    - name: openstack-zaqar-base
      registry: registry.redhat.io
    - name: openstack-zaqar-wsgi
       registry: registry.redhat.io
  rhceph:
    - name: rhceph-4-dashboard-rhel8
      registry: registry.redhat.io
</code></pre>
","2024-05-02 11:55:37","2","Question"
"78417472","78417231","","<p>In Python dictionaries are <strong>mutable</strong>. When you do <code>placeholder = meta.copy()</code> you are creating a copy. Since the object in <code>placeholder</code> is the same as in <code>meta</code> when you modify <code>placeholder[i]</code> you are also modifying the same dictionary in <code>meta_copy</code>.</p>
<p>You need to create a <strong>deep copy</strong> before modifying it. Use <code>deepcopy</code> module from <code>copy</code>:</p>
<pre><code>import copy
meta = [{&quot;id&quot;:1,&quot;time&quot;:&quot;1,2,3&quot;},{&quot;id&quot;:2,&quot;time&quot;:&quot;4,5&quot;},{&quot;id&quot;:3,&quot;time&quot;:&quot;6&quot;},{&quot;id&quot;:4,&quot;time&quot;:&quot;7,8,9,10&quot;}]
print(&quot;before&quot;)
print(meta)
meta_copy = meta.copy()
print(&quot;during&quot;)
for i in range(len(meta)):
    if &quot;,&quot; in meta[i][&quot;time&quot;]:
        sub = meta[i][&quot;time&quot;].split(&quot;,&quot;)
        print(sub)
        for j in range(len(sub)):
            if j == 0:
                meta_copy[i][&quot;time&quot;] = sub[0]
                print(meta_copy[i])
            else:
                placeholder = copy.deepcopy(meta_copy[i])
                placeholder[&quot;time&quot;]=sub[j]
                meta_copy.append(placeholder)
                print(meta_copy[-1])
print(&quot;after&quot;)
for l in range (len(meta_copy)):
    print(meta_copy[l])
</code></pre>
","2024-05-02 07:16:27","0","Answer"
"78417231","","Python dictionaries are different during processing and after","<p>What I'm trying to do is split a list of dictionaries if a field has n values separated by commas, into a list of n dictionaries where all other fields are same but the field with multiple values now has unique values.</p>
<p>Here's the output:</p>
<pre><code> before
[{'id': 1, 'time': '1,2,3'}, {'id': 2, 'time': '4,5'}, {'id': 3, 'time': '6'}, {'id': 4, 'time': '7,8,9,10'}]
during
['1', '2', '3']
{'id': 1, 'time': '1'}
{'id': 1, 'time': '2'}
{'id': 1, 'time': '3'}
['4', '5']
{'id': 2, 'time': '4'}
{'id': 2, 'time': '5'}
['7', '8', '9', '10']
{'id': 4, 'time': '7'}
{'id': 4, 'time': '8'}
{'id': 4, 'time': '9'}
{'id': 4, 'time': '10'}
after
{'id': 1, 'time': '3'}
{'id': 2, 'time': '5'}
{'id': 3, 'time': '6'}
{'id': 4, 'time': '10'}
{'id': 1, 'time': '3'}
{'id': 1, 'time': '3'}
{'id': 2, 'time': '5'}
{'id': 4, 'time': '10'}
{'id': 4, 'time': '10'}
{'id': 4, 'time': '10'}
</code></pre>
<p>Why is this happening?
How can I make the code better?
Thanks in advance.</p>
<p>Here's my code</p>
<pre><code>meta = [{&quot;id&quot;:1,&quot;time&quot;:&quot;1,2,3&quot;},{&quot;id&quot;:2,&quot;time&quot;:&quot;4,5&quot;},{&quot;id&quot;:3,&quot;time&quot;:&quot;6&quot;},{&quot;id&quot;:4,&quot;time&quot;:&quot;7,8,9,10&quot;}]
print(&quot;before&quot;)
print(meta)
meta_copy = meta.copy()
placeholder = meta.copy()

print(&quot;during&quot;)
for i in range(len(meta)):
    if &quot;,&quot; in meta[i][&quot;time&quot;]:
        sub = meta[i][&quot;time&quot;].split(&quot;,&quot;)
        print(sub)
        for j in range(len(sub)):
            if j == 0:

                meta_copy[i][&quot;time&quot;] = sub[0]
                print(meta_copy[i])
            else:
                placeholder[i][&quot;time&quot;]=sub[j]
                #print(placeholder[i][&quot;time&quot;])
                meta_copy.append(placeholder[i])
                print( meta_copy[-1])
print(&quot;after&quot;)
for l in range(len(meta_copy)):
    print(meta_copy[l])
</code></pre>
","2024-05-02 06:23:32","0","Question"
"78414349","78414308","","<p>Maps:</p>
<p>Imagine you're creating a program to store student information. You want to associate each student's ID (unique identifier) with their name and grades. A Map is perfect for this scenario.</p>
<pre><code>const studentInfo = new Map();
studentInfo.set(12345, { name: &quot;Alice&quot;, grades: [80, 95, 78] });
studentInfo.set(54321, { name: &quot;Bob&quot;, grades: [90, 82, 100] });

console.log(studentInfo.get(12345)); // { name: &quot;Alice&quot;, grades: [80, 95, 78] }

// You can use any data type as a key
studentInfo.set(&quot;star&quot;, { name: &quot;Star Student&quot;, grades: [100, 100, 100] });
</code></pre>
<p>Sets:</p>
<p>Let's say you want to keep track of the unique courses a student has taken. A Set is ideal here, as it only stores unique values and doesn't care about order.</p>
<pre><code>const coursesTaken = new Set();
coursesTaken.add(&quot;Math&quot;);
coursesTaken.add(&quot;English&quot;);
coursesTaken.add(&quot;History&quot;);
coursesTaken.add(&quot;Math&quot;); // Duplicate is ignored

console.log(coursesTaken); // Set { &quot;Math&quot;, &quot;English&quot;, &quot;History&quot; }

// Check if a specific course is present
console.log(coursesTaken.has(&quot;Science&quot;)); // false
</code></pre>
","2024-05-01 14:45:46","2","Answer"
"78414308","","In JavaScript, what is the difference between a map, a Map and a Set?","<p>This concept probably wouldn't confuse me except that two things have the same name and seem to do completely different things. There is the array method aka Array.map() which is basically (I know this is an over simplification) a fancy iterator. I can easily do anything I would with map or filter with a for...loop, it would generally just take more lines of code.</p>
<p>Whereas a Map is similar to a Set. I think Map is more for objects, and it comes with its own crud operations. For that matter, I have no idea why you would choose a Map over a Set and vice versa.</p>
<p>I would love to hear your creative ways of keeping these concepts straight in your own mind. Especially if you created analogies to remember it for yourself, though technical explanations are welcome too!</p>
<p>Thank you!</p>
<p>PS:</p>
<p>I did start by reading MDN on <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""nofollow noreferrer"">Maps</a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer"">Array.prototype.map()</a>. I just need more creative ways of thinking about it for it to stick.</p>
<p>Have have been working in JavaScript for a few years and just started learning python... Is a JS Map more like a Python dictionary than an object? I was thinking a dictionary is an object as I have been learning but maybe it is really a Map. I wish JS had chosen different names.</p>
","2024-05-01 14:38:25","0","Question"
"78413668","78413634","","<p>When reassigning object props their order stays the same, you need to add them (to a new object):</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const input = {
  '2023.4': '665999.91',
  '2023.5': '1228000.0',
  '2023.6': '643842.86',
  '2023.7': '510166.67',
  '2023.8': '727600.0',
  '2023.9': '535327.63',
  '2024.1': '472591.88',
  '2024.2': '525736.46',
  '2024.3': '596570.0',
  '2024.4': '548539.52',
  '2023.10': '562607.69'
}

const transformKey = key =&gt; key.replace(/\.(\d)$/, '.0$1');

const result = Object.keys(input)
  .sort((a, b) =&gt; (a = transformKey(a), b = transformKey(b), a &gt; b ? 1 : a &lt; b ? -1 : 0))
  .reduce((r, key) =&gt; (r[key] = input[key], r), {});

// if you need to mutate the original object:
Object.getOwnPropertyNames(input).forEach(name =&gt; delete input[name]);
Object.assign(input, result);

console.log(input);</code></pre>
</div>
</div>
</p>
<p>But using an object for ordered data is a bad idea. The most hated by me is that you can't use array methods on an object.</p>
<p>As soon as you introduce positive integers you have them ordered asc and before alpha-starting props:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const obj = {
  'alpha': 1.0,
  '2004': 1.2,
  '2003': 1.1
};

console.log(obj);</code></pre>
</div>
</div>
</p>
<p>To preserve the order with positive integers you could consider to use a custom class:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const Obj = new Proxy(Object, {
  apply(_, __, args){
    return new Obj(...args);
  },
  construct(_, args){
    const obj = Reflect.construct(...arguments);
    const map = new Map;
    
    for(const arg of args){
      for(const key in arg){
       map.set(key, arg[key]);
      }
    }
    
    return new Proxy(obj, {
      getOwnPropertyDescriptor(_, prop) {
        return { configurable: true, enumerable: true, value: map.get(prop) };
      },
      ownKeys(){
         return [...map.keys()];
      },
      get(_, prop){
        if(prop === Symbol.iterator){
          return map.keys.bind(map);
        }
        if(prop in obj){
          return obj[prop];
        }
        return map.get(prop);
      },
      set(_, prop, value){
        map.set(prop, value);
        return true;
      }
    });
  }

});

const input = Obj({
  '2023.4': '665999.91',
  '2023.5': '1228000.0',
  '2023.6': '643842.86',
  '2023.7': '510166.67',
  '2023.8': '727600.0',
  '2023.9': '535327.63',
  '2024.1': '472591.88',
  '2024.2': '525736.46',
  '2024.3': '596570.0',
  '2024.4': '548539.52',
  '2023.10': '562607.69'
});

const transformKey = key =&gt; key.replace(/\.(\d)$/, '.0$1');

const result = Object.keys(input)
  .sort((a, b) =&gt; (a = transformKey(a), b = transformKey(b), a &gt; b ? 1 : a &lt; b ? -1 : 0))
  .reduce((r, key) =&gt; (r[key] = input[key], r), Obj());

// if you need to mutate the original object:
Object.getOwnPropertyNames(input).forEach(name =&gt; delete input[name]);
Object.assign(input, result);

console.log(input);</code></pre>
</div>
</div>
</p>
<p>The next move would incorporate the sorting in the class, so you could do just:</p>
<pre><code>input.sortKeys(key =&gt; key.replace(/\.(\d)$/, '.0$1'));
</code></pre>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>class Sortable{
  sortKeys(cb){
    const result = Object.keys(this)
      .sort((a, b) =&gt; (a = cb(a), b = cb(b), a &gt; b ? 1 : a &lt; b ? -1 : 0))
      .reduce((r, key) =&gt; (r[key] = input[key], r), new Sortable);
    // if you need to mutate the original object:
    Object.getOwnPropertyNames(this).forEach(name =&gt; delete this[name]);
    Object.assign(this, result);
    return this;
  }
}

const Obj = new Proxy(Sortable, {
  apply(_, __, args){
    return new Obj(...args);
  },
  construct(_, args){
    const obj = Reflect.construct(...arguments);
    const map = new Map;
    
    for(const arg of args){
      for(const key in arg){
       map.set(key, arg[key]);
      }
    }
    
    return new Proxy(obj, {
      getOwnPropertyDescriptor(_, prop) {
        return { configurable: true, enumerable: true, value: map.get(prop) };
      },
      deleteProperty(_, prop){
        map.delete(prop);
        return true;
      },
      ownKeys(){
         return [...map.keys()];
      },
      get(_, prop){
        if(prop === Symbol.iterator){
          return map.keys.bind(map);
        }
        if(prop in obj){
          return obj[prop];
        }
        return map.get(prop);
      },
      set(_, prop, value){
        map.set(prop, value);
        return true;
      }
    });
  }

});

const input = Obj({
  '2023.4': '665999.91',
  '2023.5': '1228000.0',
  '2023.6': '643842.86',
  '2023.7': '510166.67',
  '2023.8': '727600.0',
  '2023.9': '535327.63',
  '2024.1': '472591.88',
  '2024.2': '525736.46',
  '2024.3': '596570.0',
  '2024.4': '548539.52',
  '2023.10': '562607.69'
});

input.sortKeys(key =&gt; key.replace(/\.(\d)$/, '.0$1'));

console.log(input);</code></pre>
</div>
</div>
</p>
","2024-05-01 12:14:45","-3","Answer"
"78413634","","Ordering a dict in javascript keys are float","<p>I am trying to order this that use key, values. Both are floating numbers.</p>
<pre><code>{
  '2023.4': '665999.91',
  '2023.5': '1228000.0',
  '2023.6': '643842.86',
  '2023.7': '510166.67',
  '2023.8': '727600.0',
  '2023.9': '535327.63',
  '2024.1': '472591.88',
  '2024.2': '525736.46',
  '2024.3': '596570.0',
  '2024.4': '548539.52',
  '2023.10': '562607.69'
}
</code></pre>
<p>My solution is not working and  I hit a wall on this one...</p>
<pre><code>// Convert object to array of objects
const dataArray = Object.entries(trends).map(([key, value]) =&gt; ({ [key]: value }));

// Sort the array based on the formatted keys
dataArray.sort((a, b) =&gt; {
  const keyA = Object.keys(a)[0];
  const keyB = Object.keys(b)[0];
  const [yearA, monthA] = keyA.split('.').map(part =&gt; parseInt(part));
  const [yearB, monthB] = keyB.split('.').map(part =&gt; parseInt(part));
  
  if (yearA === yearB) {
    return monthA - monthB;
  } else {
    return yearA - yearB;
  }
});

// Reassign the sorted values back to the original object
dataArray.forEach((item,`your text` index) =&gt; {
  const key = Object.keys(item)[0];
  trends[key] = Object.values(item)[0];
});

console.log(data)
</code></pre>
<p>Order a javascript dict - array</p>
","2024-05-01 12:06:10","-1","Question"
"78411881","78411725","","<p>I don't see an easy way around this other than a massively nested loop to extract all the values:</p>
<pre><code>def extract_values(data):
    records = []
    for record in data:
        for thing in record['thing_lists']['thing_list']:
            for song in thing['song']:
                records.append({ 
                    'RecordID' : record['record_id'],
                    'Date': record['date'],
                    'City': record['venue']['city']['name'],
                    'Country': record['venue']['city']['country']['name'],
                    'ThingName': song['name'],
                    'Dup': song['dup'],
                    'Extra': thing['extra']
                })
    return records

records = extract_values(test_dict)
df = pd.DataFrame(records)
</code></pre>
<p>Output:</p>
<pre><code>   RecordID        Date       City Country    ThingName   Dup  Extra
0  43bbdfbf  2023-03-25  São Paulo  Brazil       Thing1  None    NaN
1  43bbdfbf  2023-03-25  São Paulo  Brazil       Thing2  None    NaN
2  43bbdfbf  2023-03-25  São Paulo  Brazil       Thing3  None    NaN
3  43bbdfbf  2023-03-25  São Paulo  Brazil       Thing4  None    NaN
4  43bbdfbf  2023-03-25  São Paulo  Brazil  ExtraThing1  None    1.0
5  43bbdfbf  2023-03-25  São Paulo  Brazil  ExtraThing2  None    1.0
</code></pre>
","2024-05-01 03:23:40","2","Answer"
"78411725","","How to parse nested dictionaries into Pandas DataFrame","<p>I have a pretty crazy dictionary that I'm trying to parse out into a pandas dataframe.  Here is a smaller version of what the dictionary looks like:</p>
<pre><code>import datetime
from decimal import *

test_dict = [{'record_id': '43bbdfbf',
  'date': datetime.date(2023, 3, 25),
  'person': {
      'id': '123abc',
      'name': 'Person1'
  },
  'venue': {
      'id': '5bd6c74c',
      'name': 'Place1',
      'city': {
          'id': '3448439',
          'name': 'São Paulo',
          'state': 'São Paulo',
          'state_code': 'SP',
          'coords': {'lat': Decimal('-23.5475'), 'long': Decimal('-46.63611111')},
          'country': {'code': 'BR', 'name': 'Brazil'}
      },
   },
  'thing_lists': {'thing_list': [
      {'song': [
          {'name': 'Thing1','info': None,'dup': None},
          {'name': 'Thing2', 'info': None, 'dup': None},
          {'name': 'Thing3', 'info': None, 'dup': None},
          {'name': 'Thing4', 'info': None, 'dup': None}],
         'extra': None},
     {'song': [
          {'name': 'ExtraThing1','info': None,'dup': None},
          {'name': 'ExtraThing2', 'info': None, 'dup': None}],
         'extra': 1
     }]}}]
</code></pre>
<p>Here's a function I started building to parse out pieces of information from the dictionary:</p>
<pre><code>def extract_values(dictionary):
    record_id = dictionary[0]['record_id'],
    date = dictionary[0]['date'],
    country = dictionary[0]['venue']['city']['country']['name']
    
    return record_id, date, venue, city, lat, long, country
</code></pre>
<p>Here's the piece where I attempt to pull out the pieces into a dataframe.</p>
<pre><code>import pandas as pd
df = pd.DataFrame(extract_values(test_dict)).transpose()
df.rename(
    columns={
        df.columns[0]: 'record_id',
        df.columns[1]: 'date',
        df.columns[3]: 'city',
        df.columns[6]: 'country'
    }, 
    inplace=True
)
</code></pre>
<p>As you can see it mostly works except for string fields which get split out where each row gets a single character.  I'm not sure how to resolve this issue.  However, it seems if the last field I pull isn't a string - then it gets squished back into place.  Is there a way to push the strings together manually so I don't have to rely on the data type of the final field?</p>
<p>Also, the final few fields appear to be tricky to pull.  Ideally, I would like my final dataframe to look like the following:</p>
<pre><code>RecordID Date       City      Country ThingName    Dup   Extra
43bbdfbf 2023-03-25 São Paulo Brazil  Thing1       None  None
43bbdfbf 2023-03-25 São Paulo Brazil  Thing2       None  None
43bbdfbf 2023-03-25 São Paulo Brazil  Thing3       None  None 
43bbdfbf 2023-03-25 São Paulo Brazil  Thing4       None  None
43bbdfbf 2023-03-25 São Paulo Brazil  ExtraThing1  None  1
43bbdfbf 2023-03-25 São Paulo Brazil  ExtraThing2  None  1
</code></pre>
","2024-05-01 02:06:28","1","Question"
"78408340","78408320","","<p>Renaming the variable <code>environment</code> (e.g. to <code>machines_envronment</code>) fixed the issue.</p>
<p>As indicated by @U880D, <code>environment</code> is a playbook keyword (See <a href=""https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_variables.html#creating-valid-variable-names"" rel=""nofollow noreferrer"">Creating valid variable names</a>: <em>&quot;Not valid: playbook keywords such as <code>environment</code></em>&quot;)</p>
<p>From <a href=""https://docs.ansible.com/ansible/latest/reference_appendices/playbooks_keywords.html"" rel=""nofollow noreferrer"">ansible documentation about playbook keywords</a>:</p>
<blockquote>
<p>This (i.e. <code>environment</code>) can ONLY be used with modules. This is not supported for any
other type of plugins nor Ansible itself nor its configuration, it
just sets the variables for the code responsible for executing the
task</p>
</blockquote>
<h2>details</h2>
<pre><code>- hosts: localhost

  vars_files:
    - ../vars/environment-mapping.yml

  tasks:

    - name: echo and register controller's ip
      ansible.builtin.shell:
        cmd: |
          echo &quot;$(hostname -I)&quot; | sed 's/\s*$//'

      register: bash_echoed__controller_ip


    - name: set controller_ip_stringified
      set_fact:
        controller_ip: &quot;{{ bash_echoed__controller_ip.stdout }}&quot;


    - name: set machines_environment
      set_fact:
        machines_environment: &quot;{{ controller_ip_environment_map[controller_ip] | default('unknown') }}&quot;


    - name: show debug
      debug:
        msg:
          - &quot;controller_ip_environment_map: {{ controller_ip_environment_map }}&quot;
          - &quot;controller_ip: {{ controller_ip }}&quot;
          - &quot;machines_environment: {{ machines_environment }}&quot;
</code></pre>
<hr />
<pre><code>- localhost on hosts: localhost -
Gathering Facts...
  localhost ok
echo and register controller's ip...
  localhost done | stdout: XX.XXX.X.Y
set controller_ip_stringified...
  localhost ok
set environment...
  localhost ok
show debug...
  localhost ok: {
    &quot;changed&quot;: false,
    &quot;msg&quot;: [
        &quot;controller_ip: XX.XXX.X.Y&quot;,
        &quot;controller_ip_environment_map: {'XX.XXX.X.Y': 'DEV', 'XX.XXX.X.W': 'TEST', 'XX.XXX.X.Z': 'PROD'}&quot;,
        &quot;environment: DEV&quot;,

    ]
}
</code></pre>
","2024-04-30 11:57:21","1","Answer"
"78408320","","Ansible. getting empty list as trying to access a value stored in a ansible dictionary","<p>I have the following main playbook</p>
<pre><code>- hosts: localhost

  vars_files:
    - ../vars/environment-mapping.yml

  tasks:

    - name: echo and register controller's ip
      ansible.builtin.shell:
        cmd: |
          echo &quot;$(hostname -I)&quot; | sed 's/\s*$//'

      register: bash_echoed__controller_ip


    - name: set controller_ip_stringified
      set_fact:
        controller_ip: &quot;{{ bash_echoed__controller_ip.stdout }}&quot;


    - name: set environment
      set_fact:
        environment: &quot;{{ controller_ip_environment_map[controller_ip] | default('unknown') }}&quot;


    - name: show debug
      debug:
        msg:
          - &quot;controller_ip_environment_map: {{ controller_ip_environment_map }}&quot;
          - &quot;controller_ip: {{ controller_ip }}&quot;
          - &quot;environment: {{ environment }}&quot;
</code></pre>
<p>and the vars_file <code>../vars/environment-mapping.yml</code></p>
<pre><code>---

controller_ip_environment_map: {
  &quot;XX.XXX.X.Y&quot;: &quot;DEV&quot;,
  &quot;XX.XXX.X.W&quot;: &quot;TEST&quot;,
  &quot;XX.XXX.X.Z&quot;: &quot;PROD&quot;,
}
</code></pre>
<p>when I run the playbook, I get</p>
<pre><code>- localhost on hosts: localhost -
Gathering Facts...
  localhost ok
echo and register controller's ip...
  localhost done | stdout: XX.XXX.X.Y
set controller_ip_stringified...
  localhost ok
set environment...
  localhost ok
show debug...
  localhost ok: {
    &quot;changed&quot;: false,
    &quot;msg&quot;: [
        &quot;controller_ip: XX.XXX.X.Y&quot;,
        &quot;controller_ip_environment_map: {'XX.XXX.X.Y': 'DEV', 'XX.XXX.X.W': 'TEST', 'XX.XXX.X.Z': 'PROD'}&quot;,
        &quot;environment: []&quot;,

    ]
}
</code></pre>
<p>But since <code>XX.XXX.X.Y</code> is a key of <code>controller_ip_environment_map</code>, I expected environment to get the value <code>DEV</code>, while it gets the walue of empty list.</p>
<p>Why does it happen?</p>
","2024-04-30 11:52:05","0","Question"
"78407420","78407253","","<p>The issue is not with <code>cnt</code>, but with <code>tmpPage</code>. When you do <code>tmpPage = page</code> you're not creating a new copy of <code>page</code>, just a <strong>new reference</strong> to the <strong>same</strong> dictionary. When you're modifying <code>tmpPage</code>, you're modifying <code>page</code> as well.</p>
<p>To fix it, you need to create a copy of <code>page</code> before modifying it:</p>
<pre><code>import copy
def chunk_page(page):
    pages = []
    chunks = chunk_string(page['content'], 500, 40)
    ints = []
    cnt = 0
    for chunk in chunks:
        ints.append(cnt)
        tmpPage = copy.deepcopy(page)
        # The rest of your code
</code></pre>
","2024-04-30 09:03:32","1","Answer"
"78407330","78403146","","<p>You have multiple possibilities to do this. For example:</p>
<p><strong>1. With <a href=""https://sass-lang.com/documentation/modules/list/#append"" rel=""nofollow noreferrer""><code>append()</code></a></strong></p>
<pre class=""lang-scss prettyprint-override""><code>@use 'sass:list';

.element {
  @each $size, $values in $elementSizes {
    $selector: &quot;&amp;.size-#{$size}&quot;;
    
    @if $size == md {
      $selector: list.append(&quot;&amp;&quot;, $selector, $separator: comma); 
    }
    
    #{$selector} {
      font-size: map-get($values, fontSize);
      height: map-get($values, height);
    }
  }
}
</code></pre>
<p><strong>2. With a ternary operator</strong></p>
<pre class=""lang-scss prettyprint-override""><code>.element {
  @each $size, $values in $elementSizes {
    $default: if($size == md, &quot;&amp;,&quot;, &quot;&quot;);
    
    #{$default}&amp;.size-#{$size} {
      font-size: map-get($values, fontSize);
      height: map-get($values, height);
    }
  }
}
</code></pre>
","2024-04-30 08:46:46","1","Answer"
"78407253","","Python integer saved by reference instead of value in an iterable","<p>I have a simple for loop with a count variable that gets saved into a dictionary as part of a string.</p>
<pre><code>def chunk_page(page):
    pages = []
    chunks = chunk_string(page['content'], 500, 40)
    ints = []
    cnt = 0
    for chunk in chunks:
        ints.append(cnt)
        tmpPage = page
        if cnt == 1: chunk = chunk[0:chunk.rfind(' ')]
        else: chunk = chunk[chunk.find(' '): chunk.rfind(' ')]
        tmpPage['content'] = chunk
        if('_' in tmpPage['metadata']['id']):
            tmpPage['metadata']['id'] = str(page['metadata']['id'][0:-1] + str(int(cnt)))
        else:
            tmpPage['metadata']['id'] = str(page['metadata']['id'] + &quot;_&quot; + str(int(cnt)))
        pages.append(dict(tmpPage))
        cnt = cnt + 1
    return pages
</code></pre>
<p>In my mind, the id should just be iterated, however the at the end of the loop, the values are all set to the latest value
ie I get 3 pages with an id like 272975842_2.
I'm not sure how my referencing is wrong here, how do i explicitly copy cnt into this str value, why is it still cnt after being added to the string?</p>
","2024-04-30 08:33:40","0","Question"
"78403146","","Sass Each Map loop on modifier classes with a default variant","<p>I'm having trouble to avoid having duplicate code.</p>
<p>I have an element which can have size modifiers to alter the appearance of the element: sm, md, lg. Let's say my element is called <code>.element</code> and my size modifier classes are called <code>.size-sm</code>, <code>.size-md</code> and <code>.size-lg</code>.</p>
<p>These size classes are not required, however. In this case the element should use the properties from the md class as a default. In other words: <code>.element</code> and <code>.element.size-md</code> should give the same results.</p>
<p>My Sass Map is as followed:</p>
<pre class=""lang-scss prettyprint-override""><code>$elementSizes: (
  sm: (
    fontSize: 0.875rem,
    height: 42px,
  ),
  md: (
    fontSize: 1rem,
    height: 48px,
  ),
  lg: (
    fontSize: 1.125rem,
    height: 54px,
  ),
);
</code></pre>
<p>My loop is currently as followed:</p>
<pre class=""lang-scss prettyprint-override""><code>.element {
  @each $size, $values in $elementSizes {
    @if $size == md {
      &amp;,
      &amp;.size-#{$size} {
        font-size: map-get($values, fontSize);
        height: map-get($values, height);
      }
    } @else {
      &amp;.size-#{$size} {
        font-size: map-get($values, fontSize);
        height: map-get($values, height);
      }
    }
  }
}
</code></pre>
<p>As you can see, I check if the object of the loop is called 'md' and then also apply its values to the parent element using the <code>&amp;</code>. But it requires for me to have all properties applied twice, which I want to avoid. There is absolutely no difference between the properties applied in the if or in the else.</p>
<p>Any help in trying to optimize this is appreciated!</p>
","2024-04-29 13:44:26","1","Question"
"78396042","78396014","","<p>You can <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.reset_index.html"" rel=""nofollow noreferrer""><code>reset_index</code></a> after <code>concat</code>, optionally setting a name with <code>name=['desired name']</code>:</p>
<pre><code>out = (pd.concat(test_list.values(), ignore_index=False,
                 keys= test_list.keys(),
                 names=['col1'])
         .reset_index(0)
      )
</code></pre>
<p>Note that since you already have a dictionary, you can pass it directly instead of using <code>.keys()</code>/<code>.values()</code>:</p>
<pre><code>out = (pd.concat(test_list, ignore_index=False,
                 names=['col1'])
         .reset_index(0)
      )
</code></pre>
<p>Output:</p>
<pre><code>                         col1  treatment_code  subjectCode  fraction_modified_entropy_in_log2  log_RPKM
59478   ENSMUSG00000025333.10               0            2                           1.822939  3.109444
107087  ENSMUSG00000025333.10               1            4                           0.811278  3.476707
178498  ENSMUSG00000025903.14               0            1                           1.000000  3.175110
107116  ENSMUSG00000025903.14               1            3                           3.551271  3.002025
59417   ENSMUSG00000063663.11               0            2                           2.755851  1.070400
118918  ENSMUSG00000063663.11               1            3                           3.088372  1.191470
</code></pre>
","2024-04-27 18:49:39","2","Answer"
"78396014","","Row bind multiple data frames in dictionary using dict.keys() as column 1 of output pd.df","<p>i found a way to concatenate my pandas data frames in a dictionary.
Que; how can i use the dictionary keys as first column in the final dataframe?
i tried but thar didn't work</p>
<pre><code>pd.concat(test_list.values(), ignore_index=False, keys= test_list.keys())
</code></pre>
<p>data</p>
<pre><code>test_list = {'ENSMUSG00000025333.10':         treatment_code  subjectCode  fraction_modified_entropy_in_log2  log_RPKM
59478                0            2                           1.822939  3.109444
107087               1            4                           0.811278  3.476707, 'ENSMUSG00000025903.14':         treatment_code  subjectCode  fraction_modified_entropy_in_log2  log_RPKM
178498               0            1                           1.000000  3.175110
107116               1            3                           3.551271  3.002025, 'ENSMUSG00000063663.11':         treatment_code  subjectCode  fraction_modified_entropy_in_log2  log_RPKM
59417                0            2                           2.755851   1.07040
118918               1            3                           3.088372   1.19147}
</code></pre>
","2024-04-27 18:40:39","0","Question"
"78392370","78392238","","<p>This code is somewhat redundant, anyway a quick solution is to add '28-Jun-24' in the first data[coin]['columns'] assignment.</p>
<pre><code>data[coin]['columns']=['27-Apr-24', '28-Apr-24', '29-Apr-24', '03-May-24', '10-May-24', '17-May-24', '31-May-24','28-Jun-24']
</code></pre>
<p>This will work</p>
","2024-04-26 18:20:29","-1","Answer"
"78392306","78392238","","<p>Just change from</p>
<pre><code>vega[coin][expiry] += data[coin].get('Vega', {}).get('Total', {}).get(expiry, 0)
</code></pre>
<p>to</p>
<pre><code>vega[coin][expiry] = vega.get(coin, {}).get(expiry, 0) + data[coin].get('Vega', {}).get('Total', {}).get(expiry, 0)
</code></pre>
<p>and you will not get the error.</p>
<p>But, notice that you didn't initialize it with <code>28-Jun-24</code>.</p>
","2024-04-26 18:06:39","1","Answer"
"78392238","","python dict is giving key error even if initialized with some values","<pre><code>data={}
vega={}
for coin in ['BTC']:
    vega[coin] = {}
    data[coin] = {}
    data[coin]['columns']=['27-Apr-24', '28-Apr-24', '29-Apr-24', '03-May-24', '10-May-24', '17-May-24', '31-May-24']
    for expiry in data[coin]['columns']:
        vega[coin][expiry] = data[coin].get('Vega', {}).get('Total', {}).get(expiry, 0)

for coin in ['BTC']:
    data[coin]['columns']=['27-Apr-24', '28-Apr-24', '29-Apr-24', '03-May-24', '10-May-24', '17-May-24', '31-May-24', '28-Jun-24']
    for expiry in data[coin]['columns']:
        vega[coin][expiry] += data[coin].get('Vega', {}).get('Total', {}).get(expiry, 0)
</code></pre>
<p>Im initializing dict, and giving values if key is not present.</p>
<p>But however, getting</p>
<pre><code>KeyError: '28-Jun-24'
</code></pre>
<p>on last line why?</p>
<p>Could someone help me figure out mistake im doing here?</p>
","2024-04-26 17:53:21","0","Question"
"78390683","78390347","","<p>Please note, that <code>Add</code> throws <em>exception</em> when you try to add the <em>same key</em>; you can use <code>TryAdd</code> instead</p>
<pre><code>public int[] TwoSum(int[] nums, int target) {
     ...
     else {
         // Add a new key if and only if it doesn't exist
         hash.TryAdd(nums[i], i);
     }
     ...
}
</code></pre>
<p>Your code simplified (<code>.Length</code> instead of <code>Count()</code>, <code>TryGetValue</code> instead of <code>Contains</code> etc.):</p>
<pre><code>public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        var hash = new Dictionary&lt;int, int&gt;();

        for (int i = 0; i &lt; nums.Length; ++i) 
            if (hash.TryGetValue(target - nums[i], out int index)) 
                return new int[]{index, i};
            else 
                hash.TryAdd(nums[i], i);

        return Array.Empty&lt;int&gt;();
    }
}
</code></pre>
<p>Please, <a href=""https://dotnetfiddle.net/fXNUsL"" rel=""nofollow noreferrer"">fiddle</a> yourself</p>
<p><strong>Edit:</strong> Note, that you check different keys, e.g. for <code>nums = {1, 1, ...}</code> and <code>target = 11</code> you have for the <em>second</em> item</p>
<ol>
<li><code>hash</code> contains single <code>1</code> key</li>
<li><code>complement = 11 - 1 = 10</code></li>
<li>you check <code>hash.ContainsKey(complement)</code> get <code>false</code> (<code>hash</code> doesn't contain <code>10</code>)</li>
<li>you try to add <code>1</code> (note, <code>1</code> not <code>10</code>) and get the exception</li>
</ol>
","2024-04-26 13:11:53","0","Answer"
"78390347","","Dictionary.ContainsKey() doesn't work as expected","<p>I'm currently trying to solve the first Leetcode problem (<a href=""https://leetcode.com/problems/two-sum/"" rel=""nofollow noreferrer"">Two Sum</a>):</p>
<blockquote>
<p>Given an array of integers nums and an integer target, return indices
of the two numbers such that they add up to target.</p>
<p>You may assume that each input would have exactly one solution, and
you may not use the same element twice.</p>
<p>You can return the answer in any order.</p>
<p><strong>Example 1:</strong></p>
<p>Input: nums = [2,7,11,15], target = 9</p>
<p>Output: [0,1]</p>
<p>Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].</p>
<p><strong>Example 2:</strong></p>
<p>Input: nums = [3,2,4], target = 6</p>
<p>Output: [1,2]</p>
<p><strong>Example 3:</strong></p>
<p>Input: nums = [3,3], target = 6</p>
<p>Output: [0,1]</p>
</blockquote>
<p>Here's my code:</p>
<pre class=""lang-csharp prettyprint-override""><code>public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        Dictionary&lt;int, int&gt; hash = new Dictionary&lt;int, int&gt;();
        int n = nums.Count();

        for (int i=0; i &lt; n; i++) {
            int complement = target - nums[i];
            if (hash.ContainsKey(complement)) {
                int[] solution = new int[]{(int)i, (int)hash[complement]};
                return solution;
            }
            else {
                hash.Add(nums[i], i);
            }
        }

        return new int[]{};
    }
</code></pre>
<p>This code works fine until I get a list containing the same element several times.</p>
<p>For example:</p>
<p>Inputs : nums = [2,7,11,15], target = 9</p>
<p>Returns : [1,0]</p>
<p>Inputs : nums = [1,1,1,1,1,4,1,1,1,1,1,7,1,1,1,1,1] target = 11</p>
<p>Returns : &quot;Unhandled exception. System.ArgumentException: An item with the same key has already been added. Key: 1&quot;</p>
<p>So the program is trying to add another '1' key in my dictionary. I think it's because even if the value is the same, the object is different, but i can't find how to solve this.</p>
<p>Any help ? Thanks!</p>
<p>I just want to point out that this algorithm works perfectly. See this code in Python (works):</p>
<pre class=""lang-python prettyprint-override""><code>class Solution:
    def twoSum(self, nums: List[int], target: int) -&gt; List[int]:
        hash = {}
        for i in range(len(nums)):
            complement = target - nums[i]
            if complement in hash:
                return [i, hash[complement]]
            else:
                hash[nums[i]] = i

        return []
</code></pre>
","2024-04-26 12:10:38","0","Question"
"78385085","78384833","","<p>Each programming language comes with an own set of underlying concepts and ideas and even if many of them are shared among most of the popular languages, some are language-specific. Python as programming language and coding philosophy does not come with a concept of <em><code>Nothing</code></em> in the sense of Mathematica.</p>
<p>In Python the concept of <code>Nothing</code> needs to be expressed using <strong><code>None</code></strong> or when working with floating point numbers with <strong><code>float(&quot;nan&quot;)</code></strong> which are themselves special Python objects indicating absence of a valid value.</p>
<p>This said as an introduction let's provide a Python construct which <em>resembles</em> the usage of <code>Nothing</code> in sense of Mathematica as mentioned in the question:</p>
<pre class=""lang-py prettyprint-override""><code>x = (1, 2, 3, *(), 5)
</code></pre>
<p>in other words in <strong>this particular use case only</strong> the Python equivalent to Mathematica <code>Nothing</code> is:</p>
<h3>*<strong>()</strong></h3>
<p>And in the context of dictionaries:</p>
<h3>**{}</h3>
<pre><code>d = {'a':1, **{}, 'c':3 }
</code></pre>
<p>As mentioned in the comment by <em>deceze</em> this construct alone has only a very limited use as a placeholder for future replacements marking the position in the list for them. Let's give examples where using of such construct does make more sense:</p>
<pre class=""lang-py prettyprint-override""><code>x = [ 1, 2, *(3 if False else ()), 4 ]
d = {'a':1, **({'b':2} if False else {}) , 'c':3 }
</code></pre>
<p>Replace <code>False</code> with any for the use case appropriate condition to achieve a more useful case of use.</p>
<p>For the sake of completeness let's mention another possible ways of achieving same/similar functionality using list addition available for Python lists :</p>
<pre class=""lang-py prettyprint-override""><code>x = [ 1, 2 ] + [] + [ 4 ]
x = [ 1, 2 ] + [*([3] if False else ())] + [ 4 ]
</code></pre>
<p>This construct can be also used in case of dictionaries:</p>
<pre class=""lang-py prettyprint-override""><code>d = dict( [('a',1)] + [] + [('c',3)] )
d = dict( [('a',1)] + [*(('b',2) if False else ())] + [('c',3)] )
</code></pre>
<p>If you for some reason want to avoid usage of the keyword <code>else</code> in the conditional expression you can use following &quot;trick&quot;:</p>
<pre class=""lang-py prettyprint-override""><code>x = [ 1, 2, *(_ for _ in [3] if False), 4]
d = dict( [('a',1)] + [*(_ for _ in [('b',2)] if False)] + [('c',3)] )
</code></pre>
<p>which though maybe a bit &quot;dirty&quot;, is probably better understandable and more pleasing for the reading eye because of emphasizing the <strong>[3]</strong> and the <strong>[('b',2)]</strong> which are catching the eye making the embedding it expression less obtrusive.</p>
<hr />
<p>Please <em>notice</em> that neither <code>*()</code> nor <code>**{}</code> will work in Python like <code>Nothing</code> works in  Mathematica. For example you can't replace a list element with <code>Nothing</code> to make it vanish. To remove for example the 3 from the list x you need to actually remove it:</p>
<pre class=""lang-py prettyprint-override""><code>x.pop(x.index(3))
</code></pre>
<p>In other words, as already correctly mentioned by <em>deceze</em> in the comments to your question:</p>
<blockquote>
<p>Mathematica <code>Nothing</code> seems to have pretty specific use cases in mind, which are not relevant in Python, thus <strong>an equivalent doesn't exist</strong>.</p>
</blockquote>
<p>P.S.
I understand that the idea of replacing something with Nothing, so that this something vanishes to exist is a bit alien to Python coders and causes wondering what it could be good for. With another set of mind, different from the one influenced by coding Python the concept of Nothing can appear very useful and important to have and worth giving it another thought or even a reason for a PEP.</p>
<p>Worth a smile or a laugh is sure when you read the description of the feature in Mathematica's Documentation Center and don't pay attention to the capital letters. In such case you will read:</p>
<p><em>When hold is released, nothing is removed.</em></p>
<p>instead of</p>
<p><em>When the Hold is released, Nothing is removed.</em></p>
<p>:D :D :D :D :D :D :D :D :D :D :D :D :D :D :D</p>
<p>And yes ... also the concept of <code>Hold</code> is alien to Python, but plays well if combined with <code>Nothing</code>.</p>
","2024-04-25 13:45:30","1","Answer"
"78385046","78384637","","<p>What you want are probably the connected components of a graph. The library <code>networkx</code> can do this easily. I tried to measure the speed but the sample data is too small for a useful result. I just guess it is faster than the original approach:</p>
<pre><code>import networkx as nx
from itertools import repeat

def merge_tax_values_new_logic(tax_dict):
    graph = nx.Graph()

    representation = {}

    for key1, value1 in tax_dict.items():
        country_code = key1[-2:]
        nodes = list (zip(value1, repeat(country_code)))
        for n in nodes:
            representation[n] = key1
        graph.add_nodes_from(nodes)

        if len(value1) &gt; 1:
            first = (value1[0], country_code)
            graph.add_edges_from(zip(repeat(first), zip(value1[1:], repeat(country_code))))

    result = {}
    
    for comps in nx.connected_components(graph):
        representer = representation[next(iter(comps))]
        result[representer] = [value for value, _ in comps]
        
    print(result)


new_tax_dict = {'tax1_US':['A'],'tax2_US':['B'], 'tax3_US':['A','B']}
merge_tax_values_new_logic(new_tax_dict)
        
new_tax_dict = {'tax1_US':['A'],'tax2_US':['B'], 'tax3_US':['A','B'] , 'tax4_US':['Z'] }
merge_tax_values_new_logic(new_tax_dict)
</code></pre>
<p>Output is not exactly the desired one but I think it is right:</p>
<pre><code>{'tax3_US': ['B', 'A']}
{'tax3_US': ['B', 'A'], 'tax4_US': ['Z']}
</code></pre>
","2024-04-25 13:38:28","4","Answer"
"78384964","78384833","","<p>I would just use <code>None</code> and then a filter.</p>
<pre><code>x = (1, 2, 3, None, 5)
x = tuple(filter(None, x))
</code></pre>
<p>If you want a one-liner:</p>
<pre><code>x = tuple(x for x in (1, 2, 3, None, 5) if x is not None)
# or
x = tuple(filter(None, (1, 2, 3, None, 5)))
</code></pre>
<p>If you want a function that constructs a tuple, you can use:</p>
<pre><code>def tup(*items):
    return tuple(filter(None, items))

x = tup(1,2,3,None,5)
</code></pre>
","2024-04-25 13:23:46","4","Answer"
"78384931","78384833","","<p><code>(4,) if True else ()</code> evaluates to either the tuple <code>(4,)</code> or empty tuple <code>()</code>, so unpacking it you can write <code>x = (1,2,3,*((4,) if True else ()),5)</code>.</p>
<p>Almost exactly the same thing works for lists, <code>x = [1,2,3,*((4,) if True else ()),5]</code>.</p>
<p>Unpacking a dictionary also works: <code>x = {'a':1, **({'b':2} if True else {})}</code>.</p>
","2024-04-25 13:16:59","5","Answer"
"78384921","78384637","","<p>I understand your frustration, optimisation of <code>for</code> loops may be very complex.</p>
<p>You have a very common problem where you are iterating through a list and have one more nested <code>for</code> that is iterating through it again. In such problems speed of execution might reach proxy of <code>n^2</code> complexity (where <code>n</code> - number of keys in the dictionary). Most common solution here is to sort keys in a way to exclude nested <code>for</code> that iterates through the same list.</p>
<p><strong>Solutioin:</strong></p>
<p>I would recommend to get sorted list of tax keys, basically sorted by last two symbols.
<code>keys = sorted(data.keys(), key = lambda x: x[-2:])</code></p>
<p>Then you may smartly iterate through all keys with regards that all keys are sorted.</p>
<pre><code>
def merge_tax_values_new_logic(tax_dict):

    def get_country(key: str) -&gt; str:
        return key[-2:]
    
    # sorting keys and thus grouping keys by country code
    keys = sorted(tax_dict.keys(), key = lambda x: get_country(x))

    # maps: value -&gt; key
    vals_map = {}
    group_country = None
    for key in keys:

        # start processing new country group
        if get_country(key) != group_country:
            group_country = get_country(key)
            vals_map = {}


        for val in tax_dict[key]:
            # if we seen one of the values before merge old tax_code to current
            prev_key = vals_map.get(val, None)
            if prev_key in tax_dict and key != prev_key:
                # found processed tax code with the same value
                # merge tax code to current
                tax_dict[key].extend(tax_dict.pop(prev_key))
        
        # depends on the data you might want to deduplicate tax_dict[key] somewhere here

        # update information about seen values
        for val in tax_dict[key]:            
            vals_map[val] = key

        
    return tax_dict
</code></pre>
","2024-04-25 13:15:51","0","Answer"
"78384833","","Mathematica's Nothing for Python lists, tuples and dictionaries","<p>Mathematica has an object called <a href=""https://reference.wolfram.com/language/ref/Nothing.html"" rel=""nofollow noreferrer"">Nothing</a> that when put into a list automatically disappears.</p>
<p>For example, <code>{a, b, Nothing, c, d, Nothing}</code> automatically evaluates to <code>{a, b, c, d}</code>.</p>
<p>Does something analogous exist for python?</p>
<p>I tried <code>x = (1, 2, 3, 4 if True, 5)</code> which complains about the lack of an else statement.  Moving to <code>x = (1, 2, 3, 4 if True else None, 5)</code> succeeds but <code>y = (1, 2, 3, 4 if False else None, 5)</code> gives <code>(1, 2, 3, None, 5)</code> whereas what I want is <code>(1, 2, 3, 5)</code>, so <code>None</code> is kept while <code>Nothing</code> would be dropped.</p>
<p>If there is such a thing, does it work for <code>[lists,]</code> and <code>{'dict': 'ionaries'}</code>?</p>
","2024-04-25 12:58:10","0","Question"
"78384637","","Iterate through large dictionary in python","<p>I wrote this function in order to merge tax values based on a specific logic. It iterates over the tax dictionary, looking for keys that share a country code suffix and have overlapping values. When such keys are found, their values are merged, and the duplicate key is removed from the dictionary.</p>
<pre><code>def merge_tax_values_new_logic(tax_dict):
    treated_list = set()
    while True:
        changed = False
        for key1, value1 in list(tax_dict.items()):
            country_code = key1[-2:]
            print('current list :',tax_dict)
            if key1 not in treated_list:
                print('current iteration key :' , key1) 
                for key2, value2 in list(tax_dict.items()):
                    if key2.endswith(country_code) and key1 != key2 and any(hl_id in value2 for hl_id in value1):
                        tax_dict[key1].extend(value2)
                        tax_dict.pop(key2)
                        tax_dict[key1] = list(set(tax_dict[key1]))
                        changed = True
                        print( 'current key : ' , key1 , 'matched  with key : ' , key2  ,  'state  of the dict after the pop : ', tax_dict)
                        break
            treated_list.add(key1)
            print('treated list :', treated_list)
            print('******************************')
            if changed:
                break
        if not changed:
            break
    return tax_dict
</code></pre>
<p>Example:</p>
<pre><code>new_tax_dict = {'tax1_US':['A'],'tax2_US':['B'], 'tax3_US':['A','B']}
merge_tax_values_new_logic(new_tax_dict)
</code></pre>
<p>Result :</p>
<pre><code>    current list : {'tax1_US': ['A'], 'tax2_US': ['B'], 'tax3_US': ['A', 'B']}
    current iteration key : tax1_US
    current key :  tax1_US matched  with key :  tax3_US state  of the dict after the pop :  {'tax1_US': ['A', 'B'], 'tax2_US': ['B']}
    treated list : {'tax1_US'}
    ******************************
    current list : {'tax1_US': ['A', 'B'], 'tax2_US': ['B']}
    treated list : {'tax1_US'}
    ******************************
    current list : {'tax1_US': ['A', 'B'], 'tax2_US': ['B']}
    current iteration key : tax2_US
    current key :  tax2_US matched  with key :  tax1_US state  of the dict after the pop :  {'tax2_US': ['A', 'B']}
    treated list : {'tax2_US', 'tax1_US'}
    ******************************
    current list : {'tax2_US': ['A', 'B']}
    treated list : {'tax2_US', 'tax1_US'}
    ******************************
    {'tax2_US': ['A', 'B']}
</code></pre>
<p>it works perfectly on small dict with few keys. However, performance is a real  issue when this function deals with large number of keys inside the dict (+40k keys and a mean count of values of 5 elements for each key).</p>
<p>Do you see any other alternatives ?</p>
<p>Regards,</p>
","2024-04-25 12:25:51","1","Question"
"78384426","78383683","","<p>Given the files for testing</p>
<pre class=""lang-yaml prettyprint-override""><code>shell&gt; cat /tmp/ansible/file1.json 
transferDetails:
  transferObject:
    contentSourceLocation:
    summary:
      id: 123456789
      name: filename1
</code></pre>
<pre class=""lang-yaml prettyprint-override""><code>shell&gt; cat /tmp/ansible/file2.json 
transferDetails:
  transferObject:
    contentSourceLocation: /folder1/folder2
    summary:
      id: 1234567
      name: filename2
</code></pre>
<pre class=""lang-yaml prettyprint-override""><code>shell&gt; cat /tmp/ansible/file3.json 
transferDetails:
  transferObject:
    contentSourceLocation: folder1
    summary:
      id: 1234567
      name: filename
</code></pre>
<p>Declare the list</p>
<pre class=""lang-yaml prettyprint-override""><code>  packages_to_import:
    - /tmp/ansible/file1.json
    - /tmp/ansible/file2.json
    - /tmp/ansible/file3.json
</code></pre>
<p>Read the files</p>
<pre class=""lang-yaml prettyprint-override""><code>    - command: cat {{ item }}
      register: out
      loop: &quot;{{ packages_to_import }}&quot;
</code></pre>
<p>Declare the list</p>
<pre class=""lang-yaml prettyprint-override""><code>  json_content: &quot;{{ out.results |
                    map(attribute='stdout') |
                    map('from_yaml') |
                    json_query(_query) }}&quot;
  _query: '[].transferDetails[].{name: transferObject.summary.name,
                                 id: transferObject.summary.id,
                                 path: transferObject.contentSourceLocation}'
</code></pre>
<p>gives (as expected)</p>
<pre class=""lang-yaml prettyprint-override""><code>  json_content:
  - id: 123456789
    name: filename1
    path: null
  - id: 1234567
    name: filename2
    path: /folder1/folder2
  - id: 1234567
    name: filename3
    path: folder1
</code></pre>
<p>Q: <em><strong>&quot;Add new element <code>package: item</code> to every dict in the list.&quot;</strong></em></p>
<p>A: Use the filer <em>community.general.dict_kv</em> to create the list of new elements, <em>zip</em> the lists, and <em>combine</em> items</p>
<pre class=""lang-yaml prettyprint-override""><code>  json_conten2: &quot;{{ packages_to_import |
                    map('community.general.dict_kv', 'package') |
                    zip(json_content) |
                    map('combine') }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  json_conten2:
  - id: 123456789
    name: filename1
    package: /tmp/ansible/file1.json
    path: null
  - id: 1234567
    name: filename2
    package: /tmp/ansible/file2.json
    path: /folder1/folder2
  - id: 1234567
    name: filename3
    package: /tmp/ansible/file3.json
    path: folder1
</code></pre>
<p>Q: <em><strong>&quot;Remove all dictionaries where a key has a null value.&quot;</strong></em></p>
<p>A: Count the number of valid values and add a new element</p>
<pre class=""lang-yaml prettyprint-override""><code>    json_conten3: &quot;{{ json_conten2 | json_query('[].*') | map('length') |
                      map('community.general.dict_kv', 'valid') |
                      zip(json_conten2) |
                      map('combine') }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  json_conten3:
  - id: 123456789
    name: filename1
    package: /tmp/ansible/file1.json
    path: null
    valid: 3
  - id: 1234567
    name: filename2
    package: /tmp/ansible/file2.json
    path: /folder1/folder2
    valid: 4
  - id: 1234567
    name: filename3
    package: /tmp/ansible/file3.json
    path: folder1
    valid: 4
</code></pre>
<p>Now, the selection is trivial. For example,</p>
<pre class=""lang-yaml prettyprint-override""><code>  json_conten3 | selectattr('valid', 'eq', 4)
</code></pre>
<hr>
<sup>
<p>Example of a complete playbook for testing</p>
<pre class=""lang-yaml prettyprint-override""><code>- hosts: localhost

  vars:

    packages_to_import:
      - /tmp/ansible/file1.json
      - /tmp/ansible/file2.json
      - /tmp/ansible/file3.json

    json_content: &quot;{{ out.results |
                      map(attribute='stdout') |
                      map('from_yaml') |
                      json_query(_query) }}&quot;
    _query: '[].transferDetails[].{name: transferObject.summary.name,
                                   id: transferObject.summary.id,
                                   path: transferObject.contentSourceLocation}'

    json_conten2: &quot;{{ packages_to_import |
                      map('community.general.dict_kv', 'package') |
                      zip(json_content) |
                      map('combine') }}&quot;

    json_conten3: &quot;{{ json_conten2 | json_query('[].*') | map('length') |
                      map('community.general.dict_kv', 'valid') |
                      zip(json_conten2) |
                      map('combine') }}&quot;

  tasks:

    - command: cat {{ item }}
      register: out
      loop: &quot;{{ packages_to_import }}&quot;
    - debug:
        var: out

    - debug:
        var: json_content

    - debug:
        var: json_conten2

    - debug:
        var: json_conten3

    - debug:
        var: json_conten3 | selectattr('valid', 'eq', 4)
</code></pre>
</sup>
","2024-04-25 11:45:00","1","Answer"
"78383683","","Filtering list of dicts and add new key:value from the loop item to all dicts in list","<p>I'm trying to prepare a list of dicts with all needed data received from JSON file. I already parsed the file and it looks good but I still need to:</p>
<ol>
<li><p>Add new element to every dict in the list &quot;package: item&quot; where item is get from the with_items: &quot;{{ packages_to_import  }}&quot;. This variable is a simple list with all files I need to process.</p>
</li>
<li><p>Is there any way to also filter this list (in the same task) and remove all dicts where on of the keys has null value? I can add condition do the next task but then there is a lot of skipped items and it makes the output less readable.</p>
</li>
</ol>
<p>my task:</p>
<pre><code>- name: &quot;Read JSON files&quot;
  set_fact: 
    json_content: &quot;{{ json_content | 
                      default([]) + ((lookup('file', item) | 
                      from_json ).transferDetails | 
                      json_query('[].{name: transferObject.summary.name, id: transferObject.summary.id, path: transferObject.contentSourceLocation}') |
                      list }}&quot;
  with_items: &quot;{{ packages_to_import }}&quot;
</code></pre>
<p>Current dict that I manged to create:</p>
<pre><code>ok: [localhost] =&gt; {
    &quot;msg&quot;: [
        {
            &quot;id&quot;: &quot;123456789&quot;,
            &quot;name&quot;: &quot;filename1&quot;,
            &quot;path&quot;: null
        },
        {
            &quot;id&quot;: &quot;1234567&quot;,
            &quot;name&quot;: &quot;filename2&quot;,
            &quot;path&quot;: &quot;/folder1/folder2&quot;
        },
        {
            &quot;id&quot;: &quot;1234567&quot;,
            &quot;name&quot;: &quot;filename3&quot;,
            &quot;path&quot;: &quot;folder1&quot;
        }
}
</code></pre>
<p>I would like to achivie:</p>
<pre><code>ok: [localhost] =&gt; {
    &quot;msg&quot;: [
        {
            &quot;id&quot;: &quot;1234567&quot;,
            &quot;name&quot;: &quot;filename2&quot;,
            &quot;path&quot;: &quot;/folder1/folder2&quot;,
            &quot;package: &quot;/folder1/folder2/file2
        },
        {
            &quot;id&quot;: &quot;1234567&quot;,
            &quot;name&quot;: &quot;filename3&quot;,
            &quot;path&quot;: &quot;folder1&quot;,
            &quot;package: &quot;/folder1/file3
        }
}
</code></pre>
<p>EDIT:
the structre of packages_to_import is:</p>
<pre><code>ok: [localhost] =&gt; {
    &quot;msg&quot;: [
        &quot;/path_to_file1/file1.json&quot;,
        &quot;/path_to_file1/file2.json&quot;,
        &quot;/path_to_file1/file3.json&quot;
    ]
}


</code></pre>
","2024-04-25 09:38:46","0","Question"
"78381381","78379215","","<p>As I mentioned in the comments on the previous answer, you may only use tuples as the key to some data, and not a list in a dictionary. If you still want to use a numpy array despite what Matt has said above:</p>
<p><code>arr = np.array([[[0,0],[93]],[[2,8],[94]]])</code> Cannot work. Numpy is built for efficiency and will not accept an array of varying depth (it's a 3D array, but once you go two layers deep then you have 2 items, 1 item, 2 items, 1 item, which numpy does not like:
<code>ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (2, 2) + inhomogeneous part.</code></p>
<p>To work around this, you can place a dummy value in <code>arr = np.array([[[0,0],[93, DUMMY]],[[2,8],[94, DUMMY]]])</code> which would work although result in a decrease in efficiency.</p>
<p>Assuming you choose to do that, you can iteratively approach the array like so:</p>
<pre class=""lang-py prettyprint-override""><code>import numpy as np
def find_data(key1, key2, array):
    iterable = np.nditer(array)
    for index, value in enumerate(iterable):
        if index % 4 == 0:
            if key1 == value:
                if key2 == array.flat[index+1]:
                    # At this point we've found the target.
                    return array.flat[index + 2]
    return None

arr = np.array([[[0,0],[93, 0]],[[2,8],[94, 0]]])
result = find_data(2, 8, arr)
if result != None:
    print(f&quot;Result {result}&quot;)
</code></pre>
<p>numpy.nditer() is the most efficient way to my knowledge of iterating over a numpy array. It flattens the array as well, such that <code>[[[0,0],[93, 0]],[[2,8],[94, 0]]]</code> becomes <code>[0,0,93,0,2,8,94,0]</code>.</p>
","2024-04-24 21:51:06","0","Answer"
"78381007","78380988","","<p>A dictionary will not have duplicate keys. In your case, one of the keys (for example constraint_class) is being assigned a value. Only the last value assigned to the key is kept in the dictionary.</p>
<p>You might want to create a list of dictionaries. An example would be :</p>
<pre class=""lang-py prettyprint-override""><code>a_list = [{&quot;key&quot;:&quot;value1&quot;}, {&quot;key&quot;:&quot;value2&quot;}, {&quot;key&quot;:&quot;value2&quot;}]
</code></pre>
","2024-04-24 20:16:07","5","Answer"
"78380988","","python set of dictionaryies only shows last value","<p>the following python code only shows last value, why not all dictionaries? (no for loops or anything)</p>
<p>it is driving my crazy as i cant see if updates are properly done</p>
<pre><code>my_constraint = {
    'constraint_class': 'FixedCombinations',
    'table_name': 'DIM_SITE', # for multi table synthesizers
    'constraint_parameters': {
        'column_names': ['SITE_NAME2', 'COUNTRY', 'CITY', 'LANDCODE', 'REGION' ]
    },
    'constraint_class': 'FixedCombinations',
    'table_name': 'REPORT_ASSET_PROBLEMS_ULT_AUTOMATE', # for multi table synthesizers
    'constraint_parameters': {
        'column_names': ['ASSET_TYPE', 'ASSET_NAME', 'PROBLEM', 'SOLUTION']
    },
    'constraint_class': 'FixedCombinations',
    'table_name': 'REPORT_ASSET_STATUS_REPORT', # for multi table synthesizers
    'constraint_parameters': {
        'column_names': ['ASSET_TYPE', 'ASSET_NAME', 'PROBLEM', 'SOLUTION']
    },
    'constraint_class': 'FixedCombinations',
    'table_name': 'SITE', # for multi table synthesizers
    'constraint_parameters': {
        'column_names': ['LANDCODE', 'COUNTRY', 'CITY', 'REGION']
    },
    'constraint_class': 'FixedCombinations',
    'table_name': '', # for multi table synthesizers
    'constraint_parameters': {
        'column_names': ['LEVEL', 'COMPONENT', 'COMPONENT_NAME', 'KPI', 'CWR', 'CR']
    }
}

a = str(my_constraint)
print(a)
</code></pre>
","2024-04-24 20:10:43","-1","Question"
"78380700","78380442","","<blockquote>
<p>The question is why is the result of outer: <code>Dictionary&lt;object, KeyValuePair&lt;object, object&gt;&gt;</code> rather than: <code>Dictionary&lt;object, Dictionary&lt;object, object&gt;&gt;</code></p>
</blockquote>
<p>Basically the same why result of the inner is <code>Dictionary&lt;object, object&gt;</code>.</p>
<p><a href=""https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.zip?view=net-8.0#system-linq-enumerable-zip-2(system-collections-generic-ienumerable((-0))-system-collections-generic-ienumerable((-1)))"" rel=""nofollow noreferrer""><code>Enumerable.Zip&lt;TFirst,TSecond&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;)</code></a> as the docs state:</p>
<blockquote>
<p>Produces a sequence of tuples with elements from the two specified sequences.</p>
</blockquote>
<blockquote>
<h4>Returns</h4>
<p><code>IEnumerable&lt;ValueTuple&lt;TFirst, TSecond&gt;&gt;</code>
A sequence of tuples with elements taken from the first and second sequences, in that order.</p>
</blockquote>
<p>And <code>Dictionary&lt;TKey, TValue&gt;</code> is <code>IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;</code> (<a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2?view=net-8.0"" rel=""nofollow noreferrer"">docs</a>), so the result is pretty much expected.</p>
<p>If you want the result of the <code>Zip</code> to be <code>IEnumerable&lt;object, Dictionary&lt;...&gt;&gt;</code> you need to zip with collection of dictionaries, i.e. something like:</p>
<pre class=""lang-cs prettyprint-override""><code>IEnumerable&lt;Dictionary&lt;object, object&gt;&gt; dicts = ...;
var outer = firstObjects.Select(o =&gt; o)
   .Zip(dicts)
   .ToDictionary();
</code></pre>
<p>Note that potentially you might want <code>Select</code>, not <code>Zip</code> here but without actual code/sample data and desired result it's hard to tell.</p>
","2024-04-24 19:03:46","0","Answer"
"78380442","","Prevent Dictionary from being transformed to KeyValuePair when used as IEnumerable.Zip extention parameter","<p>Replacing my first invalid question with this brief reproducible example</p>
<pre><code>var firstObjects = new List&lt;object&gt;();
var secondObjects = new List&lt;object&gt;();
Dictionary&lt;object, object&gt; inner = secondObjects.Select(o =&gt; o).Zip(secondObjects).ToDictionary();
var outer = firstObjects.Select(o =&gt; o).Zip(inner).ToDictionary();
</code></pre>
<p>The question is why is the result of <code>outer</code>:</p>
<p><code>Dictionary&lt;object, KeyValuePair&lt;object, object&gt;&gt;</code></p>
<p>rather than:</p>
<p><code>Dictionary&lt;object, Dictionary&lt;object, object&gt;&gt;</code></p>
","2024-04-24 18:08:44","0","Question"
"78379454","78379215","","<p>As noted above, you'd be hard pressed to do much better than a regular Python dictionary:</p>
<pre class=""lang-py prettyprint-override""><code>x = {(0, 0): [93], (2, 8): [94]}
a = 2
b = 8
x[(a, b)]  # [94]
# This is with [93] and [94] as lists, as you have shown,
# but they can just as well be just `93` and `94` if you prefer.
</code></pre>
<p>For this to work, the keys need to be tuples or some other hashable type. If that doesn't work in your application, please add that information to your question. For more information about why dictionaries are perfect for this and why the key needs to be hashable, see e.g. <a href=""https://www.dataquest.io/blog/python-dictionaries"" rel=""nofollow noreferrer"">here</a>.</p>
","2024-04-24 15:03:12","1","Answer"
"78379215","","Retrieve value matching with a key in 2-D array","<p>I have a numpy array like so:</p>
<pre><code>arr = np.array([[[0,0],[93]],[[2,8],[94]]])
</code></pre>
<p>I now want to define two variables a and b like so:</p>
<pre><code>a = 2
b = 8
</code></pre>
<p>Now, I want to write a program that retrieves the value corresponding to [a,b] from the numpy array. In this case, the value would be 94.</p>
<p>How do I solve this? I am open to other ways of organizing my data as well (lists, dictionaries etc) as long as the solution is optimal. However, I want to preserve the current format of an entry in the array viz., ([inp,inp],[out])</p>
<p>So far, I have tried using np.where but it returns an empty array:</p>
<pre><code>np.where(arr == [2,8])

&gt;&gt;&gt; (array([], dtype=int64), array([], dtype=int64))
</code></pre>
","2024-04-24 14:28:00","0","Question"
"78378583","78378419","","<p>You could use a <code>set.union</code> within a dict comprehension</p>
<pre><code>&gt;&gt;&gt; {k: dict_1[k] | dict_2[k] for k in dict_1}
{1: {2}, 2: {1, 3}, 3: {4}, 4: {3, 1, 11}}
</code></pre>
<p>This assumes the dicts share identical keys, otherwise you could tweak the logic a little bit depending on your expectation if one dict has keys the other does not have. If you essentially want to merge the dicts so all possible keys are present then you would do something like</p>
<pre><code>&gt;&gt;&gt; dict_1 = {1: {2}, 2: {3}, 3: {4}, 4: {11}, 5: {10, 12}}
&gt;&gt;&gt; dict_2 = {1: {2}, 2: {1}, 3: {4}, 4: {1,3}, 6: {1, 2}}
&gt;&gt;&gt; {k: dict_1.get(k, set()) | dict_2.get(k, set()) for k in dict_1 | dict_2}
{1: {2}, 2: {1, 3}, 3: {4}, 4: {3, 1, 11}, 5: {10, 12}, 6: {1, 2}}
</code></pre>
","2024-04-24 12:48:41","0","Answer"
"78378514","78378419","","<pre><code>dict_1 = {1: {2}, 2: {3}, 3: {4}, 4: {11}}
dict_2 = {1: {2}, 2: {1}, 3: {4}, 4: {1,3}}

dict_3 = {k:{*set(list(dict_1[k])+list(dict_2[k]))} for k in  dict_1.keys() | dict_2.keys()}
</code></pre>
","2024-04-24 12:36:19","0","Answer"
"78378469","78378419","","<pre class=""lang-py prettyprint-override""><code>dict_1 = {1: {2}, 2: {3}, 3: {4}, 4: {11}}
dict_2 = {1: {2}, 2: {1}, 3: {4}, 4: {1, 3}}

for key, value in dict_2.items():
    if key in dict_1:
        dict_1[key].update(value)
    else:
        dict_1[key] = value
</code></pre>
<p>This should work</p>
","2024-04-24 12:30:30","0","Answer"
"78378419","","Adding values from one dictionary to another","<pre><code>dict_1 = {1: {2}, 2: {3}, 3: {4}, 4: {11}}

dict_2 = {1: {2}, 2: {1}, 3: {4}, 4: {1,3}}
</code></pre>
<p>to get:</p>
<pre><code>dict_1 = {1: {2}, 2: {3,1}, 3: {4}, 4: {11,1,3}}
</code></pre>
<p>How would I add the values from dict_2 in dict_1 without deleting the ones already there? I can add them as a list but for some reason, I get the error list unhashable when trying to add them:</p>
<pre><code>to_add = set()
 for x in dict_2:
  if x in dict_1.keys():
  to_add.add(dict_1[x])
  to_add.add(dict_2[x])
  dict_1[x] = to_add
</code></pre>
","2024-04-24 12:22:21","0","Question"
"78378410","78378261","","<p>I would suggest using 2D array, e.g. list of lists to store 2 different formats for each key, for example</p>
<pre><code>columns = {&quot;column1&quot;:0,&quot;column2&quot;:1,&quot;column3&quot;:2}  # associate names with 0-based column names
rows = {&quot;firstformat&quot;:0,&quot;secondformat&quot;:1}  # associate names with 0-based row names
array = [[&quot;value1format1&quot;,&quot;value2format1&quot;,&quot;value3format1&quot;],[&quot;value1format2&quot;,&quot;value2format2&quot;,&quot;value3format2&quot;]]  # each sublist is one row
print(array[rows[&quot;secondformat&quot;]][columns[&quot;column3&quot;]])  # output is value3format2
</code></pre>
<p>If you are allowed to use external packages you might pandas.DataFrame for that purpose following way</p>
<pre><code>import pandas as pd
df = pd.DataFrame([[&quot;value1format1&quot;,&quot;value2format1&quot;,&quot;value3format1&quot;],[&quot;value1format2&quot;,&quot;value2format2&quot;,&quot;value3format2&quot;]],columns=(&quot;column1&quot;,&quot;column2&quot;,&quot;column3&quot;),index=(&quot;firstformat&quot;,&quot;secondformat&quot;))
print(df[&quot;column3&quot;][&quot;secondformat&quot;])
</code></pre>
","2024-04-24 12:21:12","0","Answer"
"78378402","78378261","","<p>If <code>&quot;value_1&quot;</code> is your common name, true key and <code>&quot;value_1_formatted&quot;</code> and <code>&quot;value_1_formatted_differently&quot;</code> are aliases that you would like to uncover based on the key/common name, then I would likely use something like this nested dictionary:</p>
<pre class=""lang-py prettyprint-override""><code>my_lookup = {
    &quot;Jonny&quot;: {
        &quot;formatted&quot;: &quot;Jon&quot;,
        &quot;formatted_differently&quot;: &quot;Jonathan&quot;
    },
    &quot;Annie&quot;: {
        &quot;formatted&quot;: &quot;Anna&quot;,
        &quot;formatted_differently&quot;: &quot;Anastasia&quot;
    },
}
</code></pre>
<p>Then you can:</p>
<pre class=""lang-py prettyprint-override""><code>key = &quot;Annie&quot;
print(my_lookup[key][&quot;formatted_differently&quot;])
</code></pre>
<p>This also might allow you to have incomplete data. For example:</p>
<pre><code>my_lookup = {
    &quot;Jonny&quot;: {
        &quot;formatted&quot;: &quot;Jon&quot;,
        &quot;formatted_differently&quot;: &quot;Jonathan&quot;
    },
    &quot;Annie&quot;: {
        &quot;formatted&quot;: &quot;Anna&quot;,
        ##&quot;formatted_differently&quot;: &quot;Anastasia&quot;   &lt;--- Now missing
    },
}
</code></pre>
<p>Then</p>
<pre class=""lang-py prettyprint-override""><code>key = &quot;Annie&quot;
print(my_lookup[key].get(&quot;formatted_differently&quot;, key))
</code></pre>
","2024-04-24 12:20:22","1","Answer"
"78378296","78378261","","<p>That &quot;three layer dictionary&quot; syntax is obviously not valid, but you can achieve the same idea by just doing a nested lookup</p>
<pre><code>&gt;&gt;&gt; my_second_dict[my_first_dict[&quot;value_1&quot;]]
'value_1_formatted_differently'
</code></pre>
<p>In other words, starting with your key first look up the value from the first dict, then use that as the key for the next lookup.</p>
","2024-04-24 12:02:34","1","Answer"
"78378261","","Dictionary with multiple values in Python","<p>I am trying to improve a code that I've made. The idea is to automate some data processing.
The idea is to link two dictionaries so that I can &quot;easily&quot; move from key/values and format outputs.</p>
<p>I now have :</p>
<pre><code>my_first_dict = {&quot;value_1&quot;: &quot;value_1_formatted&quot;, value_2: &quot;value_2_formatted&quot;, ...}
my_second_dict = {&quot;value_1_formatted&quot;: &quot;value_1_formatted_differently&quot;, &quot;value_2_formatted&quot;: &quot;value_2_formatted_differently&quot;, ...&quot;)
</code></pre>
<p>Doing so allows me to identify and rename as I want using key/value pairs. However, it can sometimes make code heavier and less readable.</p>
<p>I'd like to know if there is a more efficient way to proceed. I was wondering if, for example, we could have a &quot;three layer dictionary&quot;, with values/keys accessible via : <code>.keys()</code> or <code>.values()[...]</code>.</p>
<p>That would look like :</p>
<pre><code>my_dict = {&quot;value_1&quot;: &quot;value_1_formatted&quot;: &quot;value_1_formatted_differently&quot;}
</code></pre>
<p>Where <code>my_dict[&quot;value_1&quot;].values()[1]</code> would return <code>&quot;value_1_formatted_differently&quot;</code> (it doesn't work, it's just to present my idea of it)</p>
<p>What do you think about ?</p>
","2024-04-24 11:56:14","-1","Question"
"78375015","78372875","","<p>I suspect the error is due to a missing argument to the <a href=""https://docs.djangoproject.com/en/4.2/topics/http/shortcuts/#render"" rel=""nofollow noreferrer""><code>render()</code> function</a>. The docs say it should be:</p>
<pre><code>render(request, template_name, context, ...)
</code></pre>
<p>but you have not included that first argument <code>request</code> in your code:</p>
<pre><code># wrong code
return render('core/signup.html',{'form':form})
</code></pre>
<p>TO fix it:</p>
<pre><code>return render(request, 'core/signup.html', {'form':form})
</code></pre>
","2024-04-23 21:14:37","0","Answer"
"78374395","78374270","","<p>Sometimes, especially in loops, it's actually easier to create the elements programmatically, like this:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>document.addEventListener('DOMContentLoaded', showMovies);

function showMovies() {
  const movies = [{
      title: 'a nice movie',
      year: 2020,
      rating: 4.5
    },
    {
      title: 'another nice movie',
      year: 2021,
      rating: 4.8
    },
    {
      title: 'just another movie',
      year: 2022,
      rating: 4.2
    }
  ];

  const list = document.createElement('ul');
  list.append(...movies.map(({
    title,
    year,
    rating
  }) =&gt; Object.assign(document.createElement('li'), {
    textContent: `${title}-${year}-${rating}`
  })));

  document.getElementById('list').append(list);
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;h2&gt;List of movies&lt;/h2&gt;
&lt;div id=""list""&gt;&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","2024-04-23 18:34:45","0","Answer"
"78374335","78374270","","<p>Instead of using <code>.map()</code> like that. You could create a function that builds your <code>&lt;ul&gt;</code>, just use <code>forEach</code> and concatenate each item as a <code>&lt;li&gt;</code> then close the <code>&lt;/ul&gt;</code> tag when finished and return the HTML</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function showMovies() {
  const movies = [{
      title: 'a nice movie',
      year: 2020,
      rating: 4.5
    },
    {
      title: 'another nice movie',
      year: 2021,
      rating: 4.8
    },
    {
      title: 'just another movie',
      year: 2022,
      rating: 4.2
    }
  ];

  let html = buildHTML(movies);
  document.getElementById('list').innerHTML = html;
}

function buildHTML(moviesList) {
  let myUl = ""&lt;ul&gt;""
  moviesList.forEach(m =&gt; {
    myUl += ""&lt;li&gt;"" + m.title + '-' + m.year + ""-"" + m.rating + ""&lt;/li&gt;"";
  })
  myUl += ""&lt;/ul&gt;""
  return myUl;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;

&lt;head&gt;
  &lt;meta charset=""UTF-8"" /&gt;
  &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" /&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;

&lt;body onload=""showMovies()""&gt;
  &lt;h2&gt;List of movies&lt;/h2&gt;
  &lt;div id=""list""&gt;&lt;/div&gt;
  &lt;script src=""movies.js""&gt;&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>
</p>
","2024-04-23 18:18:06","0","Answer"
"78374294","78374270","","<p>When you do this:</p>
<pre><code>html = &quot;&lt;ul&gt;&quot; + html + &quot;&lt;/ul&gt;&quot;;
</code></pre>
<p><code>html</code> <em>was</em> an array, but you're treating it as a string.  In doing so, JavaScript is representing it as a set of comma-separated values.</p>
<p>Instead of implicitly converting the array to a string, you can explicitly <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join"" rel=""nofollow noreferrer"">join</a> it to a string:</p>
<pre><code>html = &quot;&lt;ul&gt;&quot; + html.join(&quot;&quot;) + &quot;&lt;/ul&gt;&quot;;
</code></pre>
","2024-04-23 18:07:23","0","Answer"
"78374270","","javascript map function creates extra comma","<p>This is my html file :</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>  function showMovies(){
    const movies = [
    {title: 'a nice movie', year: 2020, rating: 4.5},
    {title: 'another nice movie', year: 2021, rating: 4.8},
    {title: 'just another movie', year: 2022, rating: 4.2}
  ];
  
  let html ="""";
  html = movies.map(function(m) {
    return ""&lt;li&gt;"" + m.title + '-' + m.year + ""-""  + m.rating + ""&lt;/li&gt;"";
  });

  html = ""&lt;ul&gt;"" + html + ""&lt;/ul&gt;"";
  
  document.getElementById('list').innerHTML = html;
  
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
  &lt;head&gt;
    &lt;meta charset=""UTF-8"" /&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" /&gt;
    &lt;title&gt;Document&lt;/title&gt;  
  &lt;/head&gt;
  &lt;body onload=""showMovies()""&gt;
    &lt;h2&gt;List of movies&lt;/h2&gt;
    &lt;div id=""list""&gt;&lt;/div&gt;
    &lt;script src=""movies.js""&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>
<p>When I preview the page, I have extra commas like in the image below :
<a href=""https://i.sstatic.net/2tKAY.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/2tKAY.png"" alt=""enter image description here"" /></a></p>
<p>Is this an expected outcome with map function? Should I chain some joining/splitting fucntions to get rid of the extra commas?</p>
","2024-04-23 18:01:38","-3","Question"
"78372962","78372935","","<p>You can access title's value like this:</p>
<pre><code>if(list.isNotEmpty){
  print(&quot;value = ${list.first[&quot;title&quot;]}&quot;);
}
</code></pre>
<p>or if you list has multiple item you can access like this:</p>
<pre><code>for (var item in list) {
   print(&quot;value = ${item[&quot;title&quot;]}&quot;);
}
</code></pre>
<p>and the result would be <code>fdf</code>.</p>
","2024-04-23 14:01:30","3","Answer"
"78372935","","how to access a List<Map> in flutter","<p>I have the following list:</p>
<pre class=""lang-dart prettyprint-override""><code>List&lt;Map&gt; list = [{'id': 5, 'title': 'fdf', 'description': 'fdf'}];
</code></pre>
<p>Now, I want to access this list and retrieve, for example, the title value to store it in a variable.</p>
<p>How can I do that?</p>
<p>It is probably very simple, but I got confused.</p>
","2024-04-23 13:57:49","0","Question"
"78372875","","TypeError at /signup/ join() argument must be str, bytes, or os.PathLike object, not 'dict'","<p>I wanna make a sign up form:</p>
<pre class=""lang-py prettyprint-override""><code>def signup(request):
    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        
        if form.is_valid():
            user=form.save()
            login(request,user)
            
            return redirect(frontpage)
    else:
        form=UserCreationForm()
        
    return render('core/signup.html',{'form':form})
</code></pre>
<p>when ı running this code block it returns an error:</p>
<pre class=""lang-none prettyprint-override""><code>TypeError at /signup/ join() argument must be str, bytes, or os.PathLike object, not 'dict'
</code></pre>
<p>how can ı fix it?</p>
","2024-04-23 13:48:45","-2","Question"
"78372120","78372025","","<p>This code iterates through each key-value pair in <code>list2</code>. For each key, it checks two cases.</p>
<p><strong>CASE I:</strong> if the key exists in <code>list1</code> or not. If it doesn't, then it adds the entire value list to the <code>differences</code> dictionary under the same key.</p>
<p><strong>CASE II:</strong> If the key exists in both <code>list1</code> and <code>list2</code> then it will iterate through each item in the value list. For each item, it checks if the item exists in the corresponding list in <code>list1</code>. If it doesn't, it adds that item to the <code>differences</code> dictionary under the same key.</p>
<pre><code>for key, value in list2.items():
    # Check if the key exists in list1
    if key not in list1:
        differences[key] = value
    else:
        # Check each item in the value list
        for item in value:
            # Check if the item exists in list1
            if item not in list1[key]:
                if key not in differences:
                    differences[key] = []
                differences[key].append(item)
</code></pre>
","2024-04-23 11:50:37","1","Answer"
"78372087","78372025","","<ol>
<li>Create a new dictionary, which you fill with sections of the other two dictionaries.
2.You can compare the two dictionaries with the new one.</li>
</ol>
","2024-04-23 11:45:35","0","Answer"
"78372081","78372025","","<pre><code>def compare_dictionaries(dict1, dict2):
    diff_dict = {}

    for key in dict1.keys():
        if key not in dict2:
            diff_dict[key] = (dict1[key], None)
        elif dict1[key] != dict2[key]:
            diff_dict[key] = (dict1[key], dict2[key])

    for key in dict2.keys():
        if key not in dict1:
            diff_dict[key] = (None, dict2[key])

    return diff_dict
</code></pre>
<p>and probably you need to rename your dicts)</p>
","2024-04-23 11:44:58","0","Answer"
"78372025","","Compare two dictionaries and get the differences with Python","<p>I'm using Odoo and I would like to make a comparison between two dictionaries without using any library. This comparison should return a dictionary with the differences. So here are my two dictionaries :</p>
<pre><code>list1 = {
    'Office Furniture':
    [
        {
            'name': 'Office chairs can harm your floor: protect it.',
            'qty': 3
        },
    ]
}


list2 = {
    'Office Furniture': 
    [
        {
            'name': 'Office chairs can harm your floor: protect it.', 
            'qty': 3
        }, 
        {
            'name': '160x80cm, with large legs.', 
            'qty': 1
        }
    ], 
    'Services': 
    [
        {
            'name': 'designing', 
            'qty': 1
        }
    ]
}
</code></pre>
<p>I would like, without any library, to got the differences between those two dictionaries like this:</p>
<pre><code>differences = {
   'Office Furniture':
   [
       {
           'name': '160x80cm, with large legs.',
           'qty': 1
       }
   ],

   'Services':
   [
       {
           'name': 'designing',
           'qty': 1
       }
   ]
}
</code></pre>
<p>Thanks a lot for your help !</p>
","2024-04-23 11:37:03","1","Question"
"78370771","78367008","","<p>Try:</p>
<pre><code>(*.*{key: {
    'key': $distinct(key),
    'value_1': value_1, 
    'value_2': [value_2, 0][0]
    }})
.{'Result': *}
</code></pre>
<p>See <a href=""https://try.jsonata.org/kObVLMPnj"" rel=""nofollow noreferrer"">https://try.jsonata.org/kObVLMPnj</a></p>
","2024-04-23 08:09:19","2","Answer"
"78369826","78369598","","<p>You can do what you want, if you restructure your iterator a bit.</p>
<hr />
<p>But let's first address what the issue is.</p>
<p>As a simpler example, let's count all uppercase letters (in a silly way):</p>
<pre class=""lang-rust prettyprint-override""><code>let text = &quot;Hello World&quot;;

let mut count = 0;

text.split_whitespace()
   .flat_map(|s| {
        s.chars().map(|c| {
            if c.is_uppercase() {
                count += 1;
            }
        })
    })
    .for_each(|_| {});

assert_eq!(count, 2);
</code></pre>
<p>If we try to compile this, we'll get the same issue you're getting:</p>
<pre><code>error: captured variable cannot escape `FnMut` closure body
  --&gt; src\main.rs:85:13
   |
80 |       let mut count = 0;
   |           --------- variable defined here
...
84 |           .flat_map(|s| {
   |                       - inferred to be a `FnMut` closure
85 | /             s.chars().map(|c| {
86 | |                 if c.is_uppercase() {
87 | |                     count += 1;
   | |                     ----- variable captured here
88 | |                 }
89 | |             })
   | |______________^ returns a closure that contains a reference to a captured variable, which then escapes the closure body
   |
   = note: `FnMut` closures only have access to their captured variables while they are executing...
   = note: ...therefore, they cannot allow references to captured variables to escape
</code></pre>
<p>Why is that?</p>
<p>The closure given to <code>map()</code> requires mutably borrowing <code>count</code>, this in itself is perfectly fine.</p>
<p>The issue comes when we throw <code>flat_map()</code> into the mix. Since <code>flat_map()</code> potentially produces multiple iterators. Each of these produced iterators requires mutably borrowing <code>count</code>. This is of course not allowed, since we cannot mutably borrow anything more than once.</p>
<hr />
<p>Overall, this is straight forward to resolve, you simply restructure the iterator:</p>
<pre class=""lang-rust prettyprint-override""><code>text.split_whitespace()
    .flat_map(|s| s.chars())
    .map(|c| {
        if c.is_uppercase() {
            count += 1;
        }
    })
    .for_each(|_| {});
</code></pre>
<p>or</p>
<pre class=""lang-rust prettyprint-override""><code>text.split_whitespace()
    .map(|s| s.chars())
    .flatten()
    .map(|c| {
        if c.is_uppercase() {
            count += 1;
        }
    })
    .for_each(|_| {});
</code></pre>
<hr />
<p>Resolving this for your iterator, could look something like this:</p>
<pre class=""lang-rust prettyprint-override""><code>let grid = s
    .split(&quot;\n&quot;)
    .enumerate()
    .flat_map(|(r, l)| {
        l.chars().enumerate().map(move |(col, c)| {
            let t = classify_tile(c);
            match t {
                Tile::Start =&gt; ((r, col), t),
                _ =&gt; ((r, col), t),
            }
        })
    })
    .inspect(|((r, col), t)| match t {
        Tile::Start =&gt; {
            start = (*r, *col);
        }
        _ =&gt; {}
    })
    .collect::&lt;BTreeMap&lt;(usize, usize), Tile&gt;&gt;();
</code></pre>
<p>or</p>
<pre class=""lang-rust prettyprint-override""><code>let grid = s
    .split(&quot;\n&quot;)
    .enumerate()
    .flat_map(|(r, l)| l.chars().enumerate().map(move |(col, c)| ((r, col), c)))
    .map(|((r, col), c)| {
        let t = classify_tile(c);
        match t {
            Tile::Start =&gt; {
                start = (r, col);
                ((r, col), t)
            }
            _ =&gt; ((r, col), t),
        }
    })
    .collect::&lt;BTreeMap&lt;(usize, usize), Tile&gt;&gt;();
</code></pre>
<p><em>It can be written in multiple ways.</em></p>
","2024-04-23 04:03:48","1","Answer"
"78369606","78368937","","<p>You can use the <a href=""https://developer.apple.com/documentation/swift/dictionary/subscript(_:)-4bhoo"" rel=""nofollow noreferrer""><code>Dictionary.Index</code>-based subscript</a>.</p>
<pre><code>get {
    if let i = index(forKey: key) {
        return self[i].value
    }
    
    return nil
}
</code></pre>
<p>That said, you should not write an <code>extension</code> of <code>Dictionary</code> to <em>change</em> its existing functionality. This is not the purpose of extensions, and you might <a href=""https://en.wikipedia.org/wiki/Principle_of_least_astonishment"" rel=""nofollow noreferrer"">surprise</a> users of your code by doing something they don't expect. There are many other ways that someone can insert data into a dictionary (e.g. <code>updateValue</code> as you have shown), and it would be impractical to override all of those.</p>
<p>You should create your own <code>Dictionary</code> wrapper type, or add a subscript with an argument label, so that it is distinguishable from the built-in subscript.</p>
<pre><code>subscript(noBadData key: Key) -&gt; Value?
</code></pre>
","2024-04-23 02:16:44","3","Answer"
"78369598","","Pass value out of iterator without stopping iteration","<p>I have a function that parses an input string:</p>
<pre><code>fn parse_input(s: &amp;str) -&gt; ((usize, usize), BTreeMap&lt;(usize, usize), Tile&gt;){
 let mut start: (usize, usize) = (0,0);
 let grid = s.split(&quot;\n&quot;).enumerate().flat_map(|(r,l)| {
     l.chars().enumerate().map(move |(col, c)| {
         let t = classify_tile(c);
         match t {
             Tile::Start =&gt; {
                  *start = (r, col);
                  ((r,col), t)
                 },
             _ =&gt; ((r,col), t) 
         }
     })
 }).collect::&lt;BTreeMap&lt;(usize, usize), Tile&gt;&gt;();
 (start, grid)
}
</code></pre>
<p>I basically want to capture the r and col value of the start tile (which is unique, only one occurrence). But currently if I try and modify the tuple inside the iterator I assume due to borrowing and scope reasons, the value doesn't get modified outside the iterator.
It is important the iterator finishes though.</p>
<p>An alternative solution would be to search for the start tile in the btreemap afterwards but I'm hoping for a more efficient solution.</p>
<p>Should I just do this as nested for loops? Is the iteration actually meaningfully more efficient here?</p>
<p>edit: classify_tile function returns the enum type. Start, Soil or Pipe.
The *start = (r,col) section is the bit that doesn't work. That was my attempt at solving it. Everything else works though.</p>
","2024-04-23 02:14:20","0","Question"
"78368937","","Non-subscript getter access method for Swift Dictionary","<p>I'm attempting to override the default subscript function for a custom Dictionary type. Certain keys should never have certain types of values, so I want to allow/deny values in the subscript setter.</p>
<p>(This may be an <a href=""https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem"">XY Problem</a>, so I'm interested in alternative approaches, but this question still stands.)</p>
<p>The subscript extension appears to work fine for the setter, as <code>updateValue(_:forKey:)</code> can be used instead of the subscript setter (which would otherwise cause infinite recursion).</p>
<pre><code>struct MyData {
    var isBadData: Bool
}

extension Dictionary where Key == String, Value == MyData {
    
    subscript(key: Key) -&gt; Value? {
        // Omitting getter results in ERROR: Subscript with a setter must also have a getter
        get {
            return self[key] // WARNING: Function call causes an infinite recursion
            // QUESTION: is there a non-subscript getter alternative?
        }
        set(newValue) {
            if let newValue, newValue.isBadData {
                return // do not add bad data to dictionary
            } else if let newValue {
                //self[key] = newValue // WARNING: Function call causes an infinite recursion
                updateValue(newValue, forKey: key) // non-subscript setter alternative works
            } else {
                removeValue(forKey: key)
            }
        }
    }
}
</code></pre>
<p>But for the getter, I don't know how to <code>get</code> the value from the dictionary without recursively calling the subscript getter.</p>
<p>NSDictionary <a href=""https://developer.apple.com/documentation/foundation/nsdictionary/1410210-value"" rel=""nofollow noreferrer"">has</a> <code>value(forKey:)</code> but there does not appear to be a similar non-subscript alternative in the <a href=""https://developer.apple.com/documentation/swift/dictionary"" rel=""nofollow noreferrer"">Swift Dictionary docs</a>.</p>
<p>How can I get a Dictionary value without using the subscript? Or is there a way to somehow call <code>super</code> on the subscript to use the original implementation?</p>
","2024-04-22 21:25:57","0","Question"
"78367729","78367265","","<p>Set a Reference to the Microsoft Excel 14.0/16.0 Object Library and after it all the WorksheetFunction functions are avail.</p>
","2024-04-22 16:41:33","2","Answer"
"78367656","78341624","","<p>As of Python 3.6, the Dictionary data structure was replaced to hold the Insert Order.</p>
<p>If you want to use Built-in structures, you can use priorityqueue this way you can determine the sequence according to your own.</p>
<pre class=""lang-py prettyprint-override""><code>
import math
from queue import PriorityQueue

class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    @staticmethod
    def of(x, y):
        return Point(x, y)
    
    def __str__(self):
        return f&quot;Point: x:{self.x} y:{self.y}&quot;
    
    def get_distance(self, other):
        return math.sqrt((self.x - other.x) ** 2 + (self.y - other.y) ** 2)

# Example usage
my_point = Point.of(9, 2)
point_array = [Point(1, 5), Point(5, 65), Point(9, 2)]

queue = PriorityQueue()
for point in point_array:
    queue.put((point.get_distance(my_point), point))

while not queue.empty():
    distance, point = queue.get()
    print(point)
</code></pre>
<p>In this example I created a PriorityQueue so as to sort them according to their respondent distance to my_point.</p>
","2024-04-22 16:26:27","-2","Answer"
"78367495","78361255","","<p>Working example:</p>
<pre class=""lang-hcl prettyprint-override""><code>locals {
  input_maps = [
    {
      &quot;e-p&quot; : {
        &quot;a-emea&quot; : {
          &quot;n@abc.com&quot; : {
            &quot;role&quot; : &quot;READER&quot;
          }
        }
        &quot;c-emea&quot; : {
          &quot;n@abc.com&quot; : {
            &quot;role&quot; : &quot;READER&quot;
          }
        }
      }
      &quot;g-p&quot; : {
        &quot;a-global&quot; : {
          &quot;n@abc.com&quot; : {
            &quot;role&quot; : &quot;READER&quot;
          }
        }
      }
    },
    {},
    {
      &quot;g-p&quot; : {
        &quot;a-global&quot; : {
          &quot;r@abc.com&quot; : {
            &quot;role&quot; : &quot;READER&quot;
          }
        }
        &quot;d-global&quot; : {
          &quot;r@abc.com&quot; : {
            &quot;role&quot; : &quot;READER&quot;
          }
        }
      }
      &quot;u-p&quot; : {
        &quot;a-us&quot; : {
          &quot;r@abc.com&quot; : {
            &quot;role&quot; : &quot;READER&quot;
          }
        }
      }
    }
  ]

  # Flatten the input maps into a list of maps
  # Each map contains the map_key, zone_key, and roles
  flatten_maps = flatten([
    for _, input_map in local.input_maps : [
      for map_key, zones in input_map : [
        for zone_key, roles in zones : {
          map_key  = map_key,
          zone_key = zone_key,
          value    = roles
        }
      ]
    ]
  ])

  # Merge the maps into a single map
  # Key consists of the map_key and zone_key
  # Value consists of roles grouped by zone_key and map_key
  merged_maps = {
    for map in local.flatten_maps :
    &quot;${map.map_key}|${map.zone_key}&quot; =&gt; map.value...
  }

  # Output the merged maps
  output_maps = merge([
    for _, input_map in local.input_maps : {
      for map_key, zones in input_map : map_key =&gt; {
        for zone_key, roles in zones : zone_key =&gt;
        local.merged_maps[&quot;${map_key}|${zone_key}&quot;]
      }
    }
  ]...)
}

output &quot;flatten_maps&quot; {
  value = local.flatten_maps
}

output &quot;merged_maps&quot; {
  value = local.merged_maps
}

output &quot;output_maps&quot; {
  value = local.output_maps
}
</code></pre>
<p>Running <code>terraform plan</code>:</p>
<pre class=""lang-txt prettyprint-override""><code>Changes to Outputs:
  + flatten_maps = [
      + {
          + map_key  = &quot;e-p&quot;
          + value    = {
              + &quot;n@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            }
          + zone_key = &quot;a-emea&quot;
        },
      + {
          + map_key  = &quot;e-p&quot;
          + value    = {
              + &quot;n@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            }
          + zone_key = &quot;c-emea&quot;
        },
      + {
          + map_key  = &quot;g-p&quot;
          + value    = {
              + &quot;n@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            }
          + zone_key = &quot;a-global&quot;
        },
      + {
          + map_key  = &quot;g-p&quot;
          + value    = {
              + &quot;r@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            }
          + zone_key = &quot;a-global&quot;
        },
      + {
          + map_key  = &quot;g-p&quot;
          + value    = {
              + &quot;r@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            }
          + zone_key = &quot;d-global&quot;
        },
      + {
          + map_key  = &quot;u-p&quot;
          + value    = {
              + &quot;r@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            }
          + zone_key = &quot;a-us&quot;
        },
    ]
  + merged_maps  = {
      + &quot;e-p|a-emea&quot;   = [
          + {
              + &quot;n@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            },
        ]
      + &quot;e-p|c-emea&quot;   = [
          + {
              + &quot;n@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            },
        ]
      + &quot;g-p|a-global&quot; = [
          + {
              + &quot;n@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            },
          + {
              + &quot;r@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            },
        ]
      + &quot;g-p|d-global&quot; = [
          + {
              + &quot;r@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            },
        ]
      + &quot;u-p|a-us&quot;     = [
          + {
              + &quot;r@abc.com&quot; = {
                  + role = &quot;READER&quot;
                }
            },
        ]
    }
  + output_maps  = {
      + e-p = {
          + a-emea = [
              + {
                  + &quot;n@abc.com&quot; = {
                      + role = &quot;READER&quot;
                    }
                },
            ]
          + c-emea = [
              + {
                  + &quot;n@abc.com&quot; = {
                      + role = &quot;READER&quot;
                    }
                },
            ]
        }
      + g-p = {
          + a-global = [
              + {
                  + &quot;n@abc.com&quot; = {
                      + role = &quot;READER&quot;
                    }
                },
              + {
                  + &quot;r@abc.com&quot; = {
                      + role = &quot;READER&quot;
                    }
                },
            ]
          + d-global = [
              + {
                  + &quot;r@abc.com&quot; = {
                      + role = &quot;READER&quot;
                    }
                },
            ]
        }
      + u-p = {
          + a-us = [
              + {
                  + &quot;r@abc.com&quot; = {
                      + role = &quot;READER&quot;
                    }
                },
            ]
        }
    }
</code></pre>
","2024-04-22 15:55:35","0","Answer"
"78367329","78367265","","<p>In Excel-VBA, <code>WorksheetFunction</code> is a way to access functions that <em>Excel</em> provides (not VBA). There is no such function in Powerpoint.</p>
<p>So your best bet is to loop over all entries of your dictionary:</p>
<pre><code>Dim key As Variant, maxValueKey As Variant, maxValue As Variant
For Each key In dict.keys
    If IsEmpty(maxValue) Or dict(key) &gt; maxValue Then
        maxValue = dict(key)
        maxValueKey = key
    End If
Next key
Debug.Print &quot;The max value found = &quot; &amp; maxValue &amp; &quot; at key &quot; &amp; maxValueKey
</code></pre>
","2024-04-22 15:27:57","2","Answer"
"78367328","78367265","","<ul>
<li>Catch the max value with UDF</li>
</ul>
<pre class=""lang-vb prettyprint-override""><code>Sub Macro1()
    
    Dim dict As Object, i As Long
    Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    
    For i = 1 To 10
        dict.Add Key:=i, Item:=i
    Next i
    
    For i = 0 To dict.Count - 1
        Debug.Print dict.Keys()(i), dict.Items()(i)
    Next i
    
    Debug.Print GetMax(dict.Items())
    
End Sub

Function GetMax(arr) As Long
    Dim maxVal As Long, i As Long
    If IsArray(arr) Then
        maxVal = -1000000000#
        For i = LBound(arr) To UBound(arr)
            If maxVal &lt; arr(i) Then maxVal = arr(i)
        Next
        GetMax = maxVal
    Else
        GetMax = arr
    End If
End Function

</code></pre>
","2024-04-22 15:27:53","1","Answer"
"78367311","78367265","","<p>This will work in Powerpoint:</p>
<pre class=""lang-vb prettyprint-override""><code>Sub Macro1()
    
        Dim dict As Object
        Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
        
        Dim i As Long
        For i = 1 To 10
            dict.Add Key:=i, Item:=i
        Next i
        
        Dim iMax As Long
        For i = 0 To dict.Count - 1
           Debug.Print dict.Keys()(i), dict.Items()(i)
           If dict.Items()(i) &gt; iMax Then iMax = dict.Items()(i)
        Next i
        
        Debug.Print iMax
    End Sub
</code></pre>
<p>You have to check for the max value within a loop.</p>
","2024-04-22 15:25:11","1","Answer"
"78367265","","How to find a max value in a dictionary in Power Point Application?","<p>The following code works properly in <strong>Excel</strong>.</p>
<p>But I am looking for <strong>Power Point</strong> solution.</p>
<p>How to find a max value in a dictionary in <strong>Power Point Application</strong>?</p>
<pre><code>    Sub Macro1()
    
        Dim dict As Object
        Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
        
        For i = 1 To 10
            dict.Add Key:=i, Item:=i
        Next i
        
        For i = 0 To dict.Count - 1
           Debug.Print dict.Keys()(i), dict.Items()(i)
        Next i
        
        'The following two lines works properly in Excel. 
        'But I am looking for Power Point solution.
        Debug.Print Application.Max(dict.Items)
        Debug.Print WorksheetFunction.Max(dict.Items)
    
    End Sub
</code></pre>
","2024-04-22 15:16:55","0","Question"
"78367264","78367184","","<p>You need to create a function which will return you random key. Something like this:</p>
<pre><code>function getRandomKey(){
 let seed = Math.floor(Math.random() * foodOptions.length);
 return foodOptions[seed];
}

..
let key=getRandomKey();
println(powerups[key]);
..
</code></pre>
","2024-04-22 15:16:45","-1","Answer"
"78367184","","How to use a variable to find data in a dictionary","<p>I have a dictionary and I want to access different parts of the dictionary based on the output of a random generator. Since I do not know what the output would be of the random generator I want to use the name of the variable generated to access the dictionary.</p>
<p>So here is my dictionary:</p>
<pre><code>let powerups = {
    &quot;pizza&quot;:[&quot;You gained super strength!&quot;],
    &quot;cupcake&quot;:[&quot;You gained super speed!&quot;],
    &quot;goblin soup&quot;:[&quot;You turned into a goblin!&quot;],
    &quot;the finger&quot;:[&quot;Nothing happened!&quot;],
    &quot;pasta&quot;:[&quot;You are now super flexible!&quot;]
};
</code></pre>
<p>And I am trying to access the dictionary in this function.</p>
<pre><code>let foodOptions = [&quot;pizza&quot;, &quot;cupcake&quot;, &quot;goblin soup&quot;, &quot;finger&quot;, &quot;pasta&quot;]

function foodWheelManager(list) {
    println(&quot;Spinning wheel.&quot;)
    let food = foodOptions[Math.floor(Math.random()*foodOptions.length)];
    println(&quot;You eat the &quot; + food + &quot;.&quot;);
    println(powerups.food[0]);
    println(&quot;Game over you won!&quot;);
}
</code></pre>
<p>So here you can see that this code:</p>
<pre><code>println(powerups.food[0]);
</code></pre>
<p>is not working. This code is what is giving the error: Cannot read properties of undefined (reading '0') I am super new to coding, so any help would be amazing. Thank you!</p>
","2024-04-22 15:02:53","-1","Question"
"78367054","78366971","","<p>IMO, the most straightforward is to loop over the dictionaries to explode manually, then <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.merge.html"" rel=""nofollow noreferrer""><code>merge</code></a> to the original:</p>
<pre><code>out = df.merge(pd.DataFrame([[i, c3, c4] for i, d in zip(df['id'], df['dict_val'])
                             for c3, l in d.items() for c4 in l],
                           columns=['id', 'col3', 'col4']), on='id')
</code></pre>
<p>Output:</p>
<pre><code>   id                            dict_val col3 col4
0   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    X    a
1   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    X    b
2   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    Y    c
3   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    Y    d
4   2                   {'Z': ['e', 'f']}    Z    e
5   2                   {'Z': ['e', 'f']}    Z    f

</code></pre>
<p>A pure pandas approach most likely would require a double <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.explode.html"" rel=""nofollow noreferrer""><code>explode</code></a>:</p>
<pre><code>out = (df.assign(col3=df['dict_val'].apply(list),
                 col4=df['dict_val'].apply(lambda x: x.values()))
         .explode(['col3', 'col4'])
         .explode('col4')
      )
</code></pre>
<p>Output:</p>
<pre><code>   id                            dict_val col3 col4
0   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    X    a
0   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    X    b
0   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    Y    c
0   1  {'X': ['a', 'b'], 'Y': ['c', 'd']}    Y    d
1   2                   {'Z': ['e', 'f']}    Z    e
1   2                   {'Z': ['e', 'f']}    Z    f
</code></pre>
<p>Reproducible input:</p>
<pre><code>df = pd.DataFrame({'id': [1,2],
                   'dict_val': [{'X': ['a', 'b'], 'Y': ['c', 'd']},
                                {'Z': ['e', 'f']}]
                  })
</code></pre>
","2024-04-22 14:44:59","1","Answer"
"78367008","","Combine dictionaries with same key using JSONata","<p>I am trying to combine the information from two dictionaries into one. I have a JSON like this:</p>
<pre><code>{
 &quot;First&quot;: {
          &quot;example1&quot;: [
            {
              &quot;key&quot;: &quot;A&quot;,
              &quot;value_1&quot;: 5
            },
            {
              &quot;key&quot;: &quot;B&quot;,
              &quot;value_1&quot;: 1
            },
            {
              &quot;key&quot;: &quot;C&quot;,
              &quot;value_1&quot;: 6
            },
            {
              &quot;key&quot;: &quot;D&quot;,
              &quot;value_1&quot;: 8
            },
            {
              &quot;key&quot;: &quot;E&quot;,
              &quot;value_1&quot;: 2
            }
         ]
 },
 &quot;Second&quot;:{
          &quot;example2&quot;: [
            {
              &quot;key&quot;: &quot;A&quot;,
              &quot;value_2&quot;: 2
            },
            {
              &quot;key&quot;: &quot;B&quot;,
              &quot;value_2&quot;: 1
            },
            {
              &quot;key&quot;: &quot;C&quot;,
              &quot;value_2&quot;: 1
            }
         ]
 }
}
</code></pre>
<p>What I'm trying to get is one JSON with the same <code>key</code> and the two different values. Ideally if there are no values for <code>value_2</code>, then it should just be <code>0</code>. Something like this:</p>
<pre><code>{
 &quot;Result&quot;:[
            {
              &quot;key&quot;: &quot;A&quot;,
              &quot;value_1&quot;: 5,
              &quot;value_2&quot;: 2

            },
            {
              &quot;key&quot;: &quot;B&quot;,
              &quot;value_1&quot;: 1,
              &quot;value_2&quot;: 1
            },
            {
              &quot;key&quot;: &quot;C&quot;,
              &quot;value_1&quot;: 1,
              &quot;value_2&quot;: 1
            },
            {
              &quot;key&quot;: &quot;D&quot;,
              &quot;value_1&quot;: 8,
              &quot;value_2&quot;: 0
            },
            {
              &quot;key&quot;: &quot;E&quot;,
              &quot;value_1&quot;: 2,
              &quot;value_2&quot;: 0
            }
         ]
 }
</code></pre>
","2024-04-22 14:36:24","1","Question"
"78366971","","How to Explode the Key value pair of dictionary into multiple rows of dataframe in Python","<p>I have a column in dataframe that contains value in the form of dictionary. Now I want to explode that into multiple rows of the dataframe?</p>
<p>For example:</p>
<p>This is my input dataframe</p>
<p><a href=""https://i.sstatic.net/dt38Y.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/dt38Y.png"" alt=""enter image description here"" /></a></p>
<p>I want something like this</p>
<p><a href=""https://i.sstatic.net/tQGGV.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/tQGGV.png"" alt=""enter image description here"" /></a></p>
","2024-04-22 14:29:20","0","Question"
"78361255","","Terraform how to merge a list of maps in a single map without overriding values for duplicate keys","<p>I have the following input as list of maps where there are duplicate keys. I want to merge these maps into a single map where for each duplicate keys, the values are appended instead of replaced by the latest values.</p>
<p>Input:</p>
<pre><code>input_maps = [
    {
        “e-p”: {
             &quot;a-emea&quot;: {
                &quot;n@abc.com&quot;: {
                    &quot;role&quot;: &quot;READER&quot;
                 }
              }
             &quot;c-emea&quot;: {
                 &quot;n@abc.com&quot;: {
                    &quot;role&quot;: &quot;READER&quot;
                  }
              }
        }
        “g-p”: {
            &quot;a-global&quot;: {
                &quot;n@abc.com&quot;: {
                    &quot;role&quot;: &quot;READER&quot;
                 }
             }
         }
    },
   {},
   {
        “g-p”: {
            “a-global&quot;: {
                &quot;r@abc.com&quot;: {
                    &quot;role&quot;: &quot;READER&quot;
                 }
             }
            “d-global&quot;: {
                &quot;r@abc.com&quot;: {
                    &quot;role&quot;: &quot;READER&quot;
                }
             }
         }
        “u-p”: {
            “a-us&quot;: {
                &quot;r@abc.com&quot;: {
                    &quot;role&quot;: &quot;READER&quot;
                }
            }
         }
  
    },
]
</code></pre>
<p>output:</p>
<pre><code>output_maps = {
    “e-p”: {
        &quot;a-emea&quot;: {
            &quot;n@abc.com&quot;: {
                &quot;role&quot;: &quot;READER&quot;
             }
         }
         &quot;c-emea&quot;: {
             &quot;n@abc.com&quot;: {
                 &quot;role&quot;: &quot;READER&quot;
              }
          }
        }
    “g-p”: {
        &quot;a-global&quot;: {
            &quot;n@abc.com&quot;: {
                &quot;role&quot;: &quot;READER&quot;
             }
            &quot;r@abc.com&quot;: {
                &quot;role&quot;: &quot;READER&quot;
            }
         }
        “d-global&quot;: {
            &quot;r@abc.com&quot;: {
                &quot;role&quot;: &quot;READER&quot;
            }
        }
     }
    “u-p”: {
        “a-us&quot;: {
            &quot;r@abc.com&quot;: {
                &quot;role&quot;: &quot;READER&quot;
            }
        }
    }
  }
</code></pre>
<p>I have tried following code:</p>
<pre><code>output_maps = merge([
    for input_map in local.input_maps:{
        for key, value in input_map =&gt; {
            for sub_key, sub_value in value : sub_key =&gt; sub_value
            }
        }
    ]...)  
</code></pre>
<p>This code replaces the values instead of merging the values for a key (for-example key &quot;g-p&quot;). I have tried various ways however, could not make the deep merge work.</p>
","2024-04-21 10:45:20","2","Question"
"78359109","78358923","","<p>Here is a sketch of what I mean :)</p>
<p>Also see</p>
<p><a href=""https://en.cppreference.com/w/cpp/language/lambda"" rel=""nofollow noreferrer"">https://en.cppreference.com/w/cpp/language/lambda</a>
<a href=""https://en.cppreference.com/w/cpp/utility/functional/function"" rel=""nofollow noreferrer"">https://en.cppreference.com/w/cpp/utility/functional/function</a>
<a href=""https://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique"" rel=""nofollow noreferrer"">https://en.cppreference.com/w/cpp/memory/unique_ptr/make_unique</a></p>
<pre><code>#include &lt;unordered_map&gt;
#include &lt;functional&gt;
#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;

#include &lt;string_view&gt;

//-----------------------------------------------------------------------------

class TableSchema
{
public:
    virtual ~TableSchema() = default; // you will need a virtual destructor
    virtual void DoSomething() = 0;   // and some polymorphic methods
                                      // you can use through pointers to this baseclass
};

//-----------------------------------------------------------------------------

class TaskSchema :
    public TableSchema
{
public:
    explicit TaskSchema(const std::vector&lt;std::string&gt;&amp; args) :
        m_args{ args } // copy arguments
    {
    }
    
    ~TaskSchema() override = default;

    void DoSomething() override
    {
        std::cout &lt;&lt; &quot;Task : &quot; &lt;&lt; m_args[0] &lt;&lt; &quot;, &quot; &lt;&lt; m_args[1] &lt;&lt; &quot;\n&quot;; // small demo, ofcourse totally unsafe (assumes 2 entries in vector)
    }
private:
    std::vector&lt;std::string&gt; m_args;
};

//-----------------------------------------------------------------------------

class ProjectSchema :
    public TableSchema
{
public:
    explicit ProjectSchema(const std::vector&lt;std::string&gt;&amp; args) :
        m_args{ args } // copy arguments
    {
    }

    ~ProjectSchema() override = default;

    void DoSomething() override
    {
        std::cout &lt;&lt; &quot;Project : &quot; &lt;&lt; m_args[0] &lt;&lt; &quot;, &quot; &lt;&lt; m_args[1] &lt;&lt; &quot;\n&quot;; // small demo, ofcourse totally unsafe (assumes 2 entries in vector)
    }
private:
    std::vector&lt;std::string&gt; m_args;
};

//-----------------------------------------------------------------------------
// put all administration for creation of functions
// in a factory class 

class Factory
{
public:
    // Your creat function
    static std::unique_ptr&lt;TableSchema&gt; Create(const std::string_view type, const std::vector&lt;std::string&gt;&amp; args)
    {
        if (m_map.find(type) == m_map.end())
        {
            throw std::invalid_argument{ &quot;unsupported type&quot; };
        }

        // you can get a function out of the map
        auto create_function = m_map.at(type);

        // and then call it.
        return create_function(args);
    };

private:
    // In C++ use 'using' instead of typedef it plays nicer with templates
    // when you use std::function you can also use lambda expressions (with captures) as functions
    using create_function_t = std::function&lt;std::unique_ptr&lt;TableSchema&gt;(const std::vector&lt;std::string&gt;&amp;)&gt;;

    // Create a map of creation functions
    // each function is a lambda expression
    static inline std::unordered_map&lt;std::string_view, create_function_t&gt; m_map
    { {
        {&quot;task&quot;, [](const std::vector&lt;std::string&gt;&amp; args) { return std::make_unique&lt;TaskSchema&gt;(args); }},
        {&quot;project&quot;, [](const std::vector&lt;std::string&gt;&amp; args) { return std::make_unique&lt;ProjectSchema&gt;(args); }}
    } };
};

//-----------------------------------------------------------------------------
// Now you can use it like this

int main()
{
    auto task_ptr = Factory::Create(&quot;task&quot;, { &quot;arg1&quot;,&quot;arg2&quot; });
    auto project_ptr = Factory::Create(&quot;project&quot;, { &quot;arg3&quot;,&quot;arg4&quot; });

    task_ptr-&gt;DoSomething();
    project_ptr-&gt;DoSomething();
}
</code></pre>
","2024-04-20 17:19:15","1","Answer"
"78359026","78358923","","<p>Got it working</p>
<pre><code>#include &lt;vector&gt;
#include &lt;map&gt;

class TableSchema{
  //polymorphic behaviour through virtual methods
};

class TaskSchema : public TableSchema{
  //polymorphic behaviour through [type] [method_name]([params][]) override
};

class ProjectSchema : public TableSchema{
};

typedef std::unique_ptr&lt;TableSchema&gt; (*BuildFunction)(std::vector&lt;std::string&gt; args);

class SchemaBuilder{
public:
    static TableSchema* build(std::vector&lt;std::string&gt; args); 
};

std::unique_ptr&lt;TableSchema&gt; buildTask(std::vector&lt;std::string&gt;);
std::unique_ptr&lt;TableSchema&gt; buildProject(std::vector&lt;std::string&gt;);

std::map&lt;std::string, BuildFunction&gt; buildMap = {
    { &quot;task&quot;, buildTask },
    { &quot;project&quot;, buildProject }
};

std::unique_ptr&lt;TableSchema&gt; buildTask(std::vector&lt;std::string&gt; params){
    return nullptr; 
}

std::unique_ptr&lt;TableSchema&gt; buildProject(std::vector&lt;std::string&gt; params){
    return new ProjectSchema(params[0], params[1]);
}
</code></pre>
<p>Whoever you are remember this the next time you ask a question and end up solving your own problem. Sometimes answering yourself is helping the world</p>
","2024-04-20 16:55:04","1","Answer"
"78358923","","Initializing map of polymorphic function pointers","<p>I'm doing a personal project which boils down to a task management command line tool. The idea is to take some of the concepts I've been using in higher level languages and apply them to C++, as well as get used to the SQLite C/C++ API. But I digress.</p>
<p>The idea of the implementation is to use a static <code>SchemaBuilder.build()</code> method, which takes in a vector of strings and parses it accordingly. Since we can't use <code>switch</code> statements with string literals in C++, I defaulted to the strategy previously used for the command parser, which was using a <code>std::map&lt;std::string, function_pointer&gt;</code>.</p>
<p>I'm having a bit of a hard time getting it to compile. Here's the code:</p>
<pre class=""lang-cpp prettyprint-override""><code>#include &lt;vector&gt;
#include &lt;map&gt;

class TableSchema{
};

class TaskSchema : public TableSchema{
};

class ProjectSchema : public TableSchema{
};

typedef TableSchema* (*BuildFunction)(std::vector&lt;std::string&gt; args);

class SchemaBuilder{
public:
    static TableSchema* build(std::vector&lt;std::string&gt; args); 
};

TaskSchema* buildTask(std::vector&lt;std::string&gt;);
ProjectSchema* buildProject(std::vector&lt;std::string&gt;);

std::map&lt;std::string, BuildFunction&gt; buildMap = {
    { &quot;task&quot;, buildTask },
    { &quot;project&quot;, buildProject }
};

//weirdest part is that this one compiles while the above one doesn't
void tmp(){
    std::map&lt;std::string, BuildFunction&gt; tmp;
    tmp[&quot;task&quot;] = buildTask;
    tmp[&quot;project&quot;] = buildProject;
}

TaskSchema* buildTask(std::vector&lt;std::string&gt; params){
    return nullptr; 
}

ProjectSchema* buildProject(std::vector&lt;std::string&gt; params){
    return new ProjectSchema(params[0], params[1]);
}
</code></pre>
<p>Error messages:</p>
<pre class=""lang-none prettyprint-override""><code>src/schema-builder.cpp:6:1: error: could not convert ‘{{&quot;task&quot;, buildTask}, {&quot;project&quot;, buildProject}}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘std::map&lt;std::__cxx11::basic_string&lt;char&gt;, TableSchema* (*)(std::vector&lt;std::__cxx11::basic_string&lt;char&gt; &gt;)&gt;’
    6 | };
      | ^
      | |
      | &lt;brace-enclosed initializer list&gt;
</code></pre>
<p>The <code>tmp</code> function isn't part of the project, just a test to see if what I'm doing is compilable - it is.</p>
<p>Needless to say, <code>ProjectSchema</code> and <code>TaskSchema</code> both publicly inherit from <code>TableSchema</code>.</p>
","2024-04-20 16:17:41","1","Question"
"78358512","78358386","","<p>The problem is that the initializer for <code>Match</code> is a “failable” initializer, which means that if the instance cannot be initialized for any reason, it will return <code>nil</code>. You can tell that the initializer is failable by the question mark after <code>init</code>.</p>
<p>This means that the array literal you are passing to <code>ListMatchView</code> is <code>Array&lt;Match?&gt;</code> rather than <code>Array&lt;Match&gt;</code>. You can fix it quickly by compact mapping the array, which creates an array with only the non-optional values. For example:</p>
<pre><code>LatestMatchesView(matches: [
    Match(dictionary: [&quot;initiator&quot;: &quot;a&quot;, &quot;performer&quot;: &quot;b&quot;]),
    Match(dictionary: [&quot;initiator&quot;: &quot;c&quot;, &quot;performer&quot;: &quot;d&quot;])
].compactMap({ $0 }))
</code></pre>
<p>Alternatively, if your app’s architecture allows it, you can convert the failable initializer to a normal initializer by removing the <code>?</code> after <code>init</code>. If you do that, compact mapping is not necessary.</p>
","2024-04-20 14:06:31","0","Answer"
"78358386","","Swift dictionary literal issue","<p>Xcode is giving me this error:</p>
<blockquote>
<p>Cannot convert value of type 'Match?' to expected element type 'Array.ArrayLiteralElement' (aka 'Match')</p>
</blockquote>
<p>in the Preview on the line:</p>
<pre><code>Match(dictionary: [&quot;initiator&quot;: &quot;a&quot;, &quot;performer&quot;: &quot;b&quot;]),
</code></pre>
<p>When I try to insert couple of these guys of Match class type to the Preview:</p>
<pre><code>import Foundation

class Match: Identifiable {
    public let id = UUID()
    public var initiator : String?
    public var performer : String?
    
    required public init?(dictionary: NSDictionary) {

        initiator = dictionary[&quot;initiator&quot;] as? String
        performer = dictionary[&quot;performer&quot;] as? String
    }
}
</code></pre>
<p>In my Preview of my view I have this:</p>
<pre><code>#Preview {
    LatestMatchesView(matches: [

        Match(dictionary: [&quot;initiator&quot;: &quot;a&quot;, &quot;performer&quot;: &quot;b&quot;]),
        Match(dictionary: [&quot;initiator&quot;: &quot;c&quot;, &quot;performer&quot;: &quot;d&quot;])
    ])
}
</code></pre>
<p>This is the view code for the above Preview:</p>
<pre><code>import SwiftUI

struct LatestMatchesView: View {
    @State var matches = [Match]()
    
    var body: some View {
        Text(&quot;LATEST MATCHES:&quot;)
            
        List(matches) { match in
            
            MatchListingView(match: match)
        }
        .onAppear {
            if ApiUtility.sharedInstance.isConnectedToNetwork() {
                let param : NSDictionary = [:]
                ApiUtility.sharedInstance.httpGet(url: WS_URL(url: LatestMatchesAPI), parameters:param) { (response, error) in
                    //self?.hideLoading()
                    if (error == nil) {
                        
                        self.manageResponse(r: response!)
                        
                    } else {
                        
                    }
                }
            }
        }
             
        Spacer()
            
    } // END var body
}
</code></pre>
<p>What am I missng here? I tried some things but none of them work.</p>
","2024-04-20 13:28:36","0","Question"
"78355872","78354631","","<p>You already hinted a bit at it yourself. You could use <a href=""https://docs.rs/nom/latest/nom/combinator/fn.opt.html"" rel=""nofollow noreferrer""><code>opt</code></a>ional to parse zero-or-one line comments, or <a href=""https://docs.rs/nom/latest/nom/multi/fn.many0.html"" rel=""nofollow noreferrer""><code>many0</code></a> to parse zero-to-many. Then combine that with <a href=""https://docs.rs/nom/latest/nom/sequence/fn.preceded.html"" rel=""nofollow noreferrer""><code>preceded</code></a>, and you can easily discard zero-to-many comments (and whitespace).</p>
<p>Let's consider a simple <code>parse_ident</code> to parse identifiers, that looks like this:</p>
<pre class=""lang-rust prettyprint-override""><code>use nom::bytes::complete::take_while1;
use nom::{AsChar, IResult};

fn parse_ident(input: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {
    take_while1(|c: char| c.is_alpha() || (c == '_'))(input)
}
</code></pre>
<p>Now, again, let's say we want to skip zero-to-many whitespace and comments beforehand. First we can define our line comment parser (which you already did):</p>
<pre class=""lang-rust prettyprint-override""><code>fn parse_single_line_comment(input: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {
    recognize(pair(tag(&quot;//&quot;), is_not(&quot;\n\r&quot;)))(input)
}
</code></pre>
<p>Now we'll change <code>parse_ident</code> to use <a href=""https://docs.rs/nom/latest/nom/sequence/fn.preceded.html"" rel=""nofollow noreferrer""><code>preceded</code></a> and <a href=""https://docs.rs/nom/latest/nom/multi/fn.many0.html"" rel=""nofollow noreferrer""><code>many0</code></a> to skip zero-to-many line comments. Additionally, we can also throw in <a href=""https://docs.rs/nom/latest/nom/character/complete/fn.multispace1.html"" rel=""nofollow noreferrer""><code>multispace1</code></a> to skip zero-to-many whitespace as well:</p>
<pre class=""lang-rust prettyprint-override""><code>use nom::branch::alt;
use nom::bytes::complete::{is_not, tag, take_while1};
use nom::character::complete::multispace1;
use nom::combinator::recognize;
use nom::multi::many0;
use nom::sequence::{pair, preceded};
use nom::{AsChar, IResult};

fn parse_ident(input: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {
    preceded(
        // Parsers to skip anything that is ignored
        many0(alt((
            parse_single_line_comment,
            multispace1,
        ))),
        // Identifier parsing
        take_while1(|c: char| c.is_alpha() || (c == '_')),
    )(input)
}
</code></pre>
<p>Which now allows us to successfully parse the following:</p>
<pre class=""lang-rust prettyprint-override""><code>assert_eq!(
    parse_ident(&quot;identifier&quot;)
    Ok((&quot;&quot;, &quot;identifier&quot;))
);
assert_eq!(
    parse_ident(&quot;     identifier&quot;),
    Ok((&quot;&quot;, &quot;identifier&quot;))
);
assert_eq!(
    parse_ident(&quot;// Comment\n  identifier&quot;),
    Ok((&quot;&quot;, &quot;identifier&quot;))
);
assert_eq!(
    parse_ident(&quot;// Comment\n// Comment\n  identifier&quot;),
    Ok((&quot;&quot;, &quot;identifier&quot;))
);
</code></pre>
<p>Depending on what you're parsing, then you'll need to sprinkle that <a href=""https://docs.rs/nom/latest/nom/sequence/fn.preceded.html"" rel=""nofollow noreferrer""><code>preceded</code></a> in various parsers. We can simplify the duplicate code a bit, by introducing our own <code>skip_ignored</code> parser:</p>
<pre class=""lang-rust prettyprint-override""><code>fn skip_ignored&lt;'a, F&gt;(parser: F) -&gt; impl FnMut(&amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str&gt;
where
    F: FnMut(&amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str&gt;,
{
    preceded(
        many0(alt((
            parse_single_line_comment,
            multispace1,
        ))),
        parser,
    )
}

fn parse_ident(input: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {
    skip_ignored(
        take_while1(|c: char| c.is_alpha() || (c == '_')),
    )(input)
}
</code></pre>
<p>Whether there's easier ways to do this highly depends on your data. But as long as you simply want to discard the whitespace and comments, then it's relatively straight-forward.</p>
<hr />
<p>Since you actually asked about custom errors, then you can define your own <code>enum</code> as you otherwise would, and then impl <a href=""https://docs.rs/nom/latest/nom/error/trait.ParseError.html"" rel=""nofollow noreferrer""><code>ParseError</code></a>:</p>
<pre class=""lang-rust prettyprint-override""><code>use nom::error::{ErrorKind, ParseError};

#[derive(Debug)]
pub enum MyParseError&lt;'a&gt; {
    IdentTooLong,
    Nom(&amp;'a str, ErrorKind),
}

impl&lt;'a&gt; ParseError&lt;&amp;'a str&gt; for MyParseError&lt;'a&gt; {
    fn from_error_kind(input: &amp;'a str, kind: ErrorKind) -&gt; Self {
        Self::Nom(input, kind)
    }

    fn append(_: &amp;'a str, _: ErrorKind, other: Self) -&gt; Self {
        other
    }
}
</code></pre>
<p>Using it could look like this:</p>
<pre class=""lang-rust prettyprint-override""><code>use nom::bytes::complete::take_while1;
use nom::{AsChar, IResult};

fn parse_ident&lt;'a&gt;(input: &amp;'a str) -&gt; IResult&lt;&amp;'a str, &amp;'a str, MyParseError&lt;'a&gt;&gt; {
    let (input, ident) = take_while1(|c: char| c.is_alpha() || (c == '_'))(input)?;

    // Return error if identifier is longer than 10 bytes
    if ident.len() &gt; 10 {
        Err(nom::Err::Failure(MyParseError::IdentTooLong))
    } else {
        Ok((input, ident))
    }
}

fn main() {
    println!(&quot;{:?}&quot;, parse_ident(&quot;&quot;));
    // Err(Error(Nom(&quot;&quot;, TakeWhile1)))   

    println!(&quot;{:?}&quot;, parse_ident(&quot;hello&quot;));
    // Ok((&quot;hello&quot;, &quot;hello&quot;))

    println!(&quot;{:?}&quot;, parse_ident(&quot;this_is_a_very_long_name&quot;));
    // Err(Failure(IdentTooLong)) 
}
</code></pre>
<p>There's also <a href=""https://docs.rs/nom/latest/nom/error/trait.FromExternalError.html"" rel=""nofollow noreferrer""><code>FromExternalError</code></a>, which works hand-in-hand with <a href=""https://docs.rs/nom/latest/nom/combinator/fn.map_res.html"" rel=""nofollow noreferrer""><code>map_res</code></a>. This is useful if say you want to call <code>str::parse()</code> and be able to easy map it into your <code>MyParseError</code>.</p>
<p>See also:</p>
<ul>
<li><a href=""https://github.com/rust-bakery/nom/blob/main/examples/custom_error.rs"" rel=""nofollow noreferrer""><code>custom_error.rs</code> example</a></li>
<li><a href=""https://github.com/rust-bakery/nom/blob/main/doc/error_management.md"" rel=""nofollow noreferrer""><code>error_management.md</code></a></li>
</ul>
","2024-04-19 19:39:45","2","Answer"
"78354631","","What is the idiomatic in Rust's nom way of turning (mapping) a parsing-error into an Ok-result?","<p>I am not sure If I'm thinking wrong about the whole thing. Maybe there is a simpler solution.</p>
<p>In nom I want to parse C-style single line comments. Each line that I parse could <em>theoretically</em> contain a &quot;// some comment&quot; on the right side. I wrote a parser that can Parse these comments:</p>
<pre class=""lang-rust prettyprint-override""><code>pub fn parse_single_line_comments(i: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {
    recognize(pair(tag(&quot;//&quot;), is_not(&quot;\n\r&quot;)))(i)
}
</code></pre>
<p>It works in the case of a comment being present. But unfortunately if there is no comment it returns an error. Now I would like it to return an empty String instead (or later I could return an option, which would be more elegant).
In my nom-learning I had this problem quite often - that I want to replace an error with a custom OK-variant. But I am never sure If I did it in the &quot;right&quot; way i.e. the idiomatic way of nom/rust. It always felt ugly as I was matching the return value of the parsing function. Think of it like this:</p>
<pre class=""lang-rust prettyprint-override""><code>pub fn parse_single_line_comments(i: &amp;str) -&gt; IResult&lt;&amp;str, &amp;str&gt; {
    match recognize(pair(tag(&quot;//&quot;), is_not(&quot;\n\r&quot;)))(i) {
        Ok((rest, comment)) =&gt; Ok((rest, comment)),
        _ =&gt; Ok((i, &quot;&quot;)),
}
</code></pre>
<p>It looks kind of strange to me. There should be a better way to do this, right?</p>
","2024-04-19 15:03:26","1","Question"
"78353925","78349817","","<p>In your example, the <code>Dictionary</code> value is a <code>List&lt;T&gt;</code>, which is a reference type. This is the problem. If you instead used a <code>value</code> type, your example will work perfectly fine.</p>
<p><code>ContainsValue</code> internally calls <code>GetHashCode</code> and if the hash codes are equal than it calls <code>Equals</code>.
And since <code>List&lt;T&gt;</code> is reference type and reference type equality only checks whether the pointers are the same, which is true only if it is the same instance, than <code>Equals</code> will return false. Note it’s actually not called since <code>GetHashCode</code> returns different hashes in this case.</p>
<p>I propose these solutions based on what is your desired behaviour.</p>
<p>If you don’t care about the order in which the elements were added and how many times one element was added, which I suppose is what you would like, I recommend to use <code>HashSet&lt;T&gt;</code>. The code than looks like this.</p>
<pre class=""lang-cs prettyprint-override""><code>
Dictionary&lt;string, HashSet&lt;string&gt;&gt; A = new Dictionary&lt;string, HashSet&lt;string&gt;&gt;();
// Key:Values are stored in dictionary A
A.Add(..,..);
Dictionary&lt;string, HashSet&lt;string&gt;&gt; B = new Dictionary&lt;string, HashSet&lt;string&gt;&gt;();
// Key:Values are stored in dictionary B
B.Add(..,..);

Dictionary&lt;string, HashSet&lt;string&gt;&gt; C = new Dictionary&lt;string, HashSet&lt;string&gt;&gt;();
foreach (var item in A)
{
   if (B.Values.Any(value =&gt; item.Value.SetEquals(value)))
   {
      C.Add(item.Key, item.Value);
   }
}

</code></pre>
<p>The method <code>SetEquals</code> checks whether the sets contain the same elements.</p>
<p>If on the other hand you care about the order in which you added the elements and their count, you can use the solution proposed by Mason A.</p>
","2024-04-19 13:13:47","1","Answer"
"78352061","78346963","","<p>Edited my initial solution, this works, apparently:</p>
<pre><code>def count_file_types(string_arr): 

arr = []
for i in string_arr:
    arr.append(i.split(&quot;.&quot;))
    print(arr) 
    
freq = {}

for (name, ext) in arr:
    if ext in freq: 
        freq[ext] += 1
    else: 
        freq[ext] = 1
return freq
print(freq)
</code></pre>
","2024-04-19 07:34:34","0","Answer"
"78350889","78350867","","<p>On this line:</p>
<pre class=""lang-py prettyprint-override""><code>'Green Room': {'North': 'Master Bedroom', 'Villain'},
</code></pre>
<p>You don't have the key (or value) for 'Villain'. You also don't have a comma before 'item' on these lines:</p>
<pre class=""lang-py prettyprint-override""><code>'Guest Room': {'North': 'Green Room' 'item':'Journal'}
</code></pre>
<pre class=""lang-py prettyprint-override""><code>'Mudroom': {'West': 'Kitchen' 'item': 'Knife'}
</code></pre>
","2024-04-19 00:56:55","0","Answer"
"78350867","","I'm receiving an 'Invalid Syntax Error' for the dict I have in Python","<p>I am creating a game for a project I'm working on using Python. Everything looks right and matches the example I was given to use but I am still getting an Invalid Syntax Error and it won't run my code until it is fixed.</p>
<pre class=""lang-py prettyprint-override""><code>rooms = {
    'Start': {'East': 'Living Room', 'item': 'Key'},
    'Living Room': {'South': 'Bathroom', 'item': 'Towel'},
    'Bathroom': {'East': 'Guest Room', 'item': 'Journal'},
    'Guest Room': {'North': 'Green Room' 'item':'Journal'},
    'Green Room': {'North': 'Master Bedroom', 'Villain'},
    'Master Bedroom': {'North': 'Mud Room', 'item': 'Shoes'},
    'Mudroom': {'West': 'Kitchen' 'item': 'Knife'}}
</code></pre>
<p>This is my current dict that I am trying and it is showing the error on the 3rd line. I have tried lining it up with the first row and making sure all of the parenthesis are where they need to be and I am still getting the error code.</p>
","2024-04-19 00:45:03","0","Question"
"78350064","78349817","","<p>ContainsValue does an equality check. List is a reference type, and the lists used in dictionary A and B are not the same List. You can use SequenceEqual here to solve this problem:</p>
<pre><code>     Dictionary&lt;string, List&lt;string&gt;&gt; A = new Dictionary&lt;string, List&lt;string&gt;&gt;();
     // Key:Values are stored in dictionary A
     A.Add(..,..)
     Dictionary&lt;string, List&lt;string&gt;&gt; B = new Dictionary&lt;string, List&lt;string&gt;&gt;();
     // Key:Values are stored in dictionary B
     B.Add(..,..)

     Dictionary&lt;string, List&lt;string&gt;&gt; C = new Dictionary&lt;string, List&lt;string&gt;&gt;();
     foreach (var item in A)
     {
        if(B.Values.Any(x =&gt; item.Value.SequenceEqual(x)))
        {
           C.Add(item.Key, item.Value);
        }
     }
</code></pre>
<p>One Problem that you might notice here, is that you are adding multiple copies of the same key here. This is a separate problem that can be solved by using a different data structure or by adding a unique key.</p>
","2024-04-18 20:00:04","0","Answer"
"78349817","","How to search a value from one dictionary into the second dictionary and add the matched value's key:value pair into new dictionary","<p><em>I have updated the question as it was not clear earlier -</em></p>
<p>I have two dictionaries <code>dictionary A&lt;string, List&lt;string&gt;&gt;</code> and <code>dictionary B&lt;string, List&lt;string&gt;&gt;</code>, and want to iterate all the &quot;value&quot; from dictionary A into dictionary B.</p>
<p>If the value is found in dictionary B, the respective key:value pair will be saved in <code>dictionary matchFound&lt;string, List&lt;string&gt;&gt;</code></p>
<p>If the value is NOT found in dictionary B, the respective key:value pair will be saved in <code>dictionary noMatchFound&lt;string, List&lt;string&gt;&gt;</code></p>
<pre><code>Dictionary&lt;string, List&lt;string&gt;&gt; A = new Dictionary&lt;string, List&lt;string&gt;&gt;();
// below key:value are stored in dictionary A
A.Add(&quot;path1&quot;,new List&lt;string&gt; {&quot;value1&quot;,&quot;value2&quot;,&quot;value3&quot;});
A.Add(&quot;path2&quot;,new List&lt;string&gt; {&quot;value4&quot;,&quot;value5&quot;,&quot;value6&quot;});
A.Add(&quot;path3&quot;,new List&lt;string&gt; {&quot;value7&quot;,&quot;value1&quot;,&quot;value4&quot;}); //the values can get repeated 

Dictionary&lt;string, List&lt;string&gt;&gt; B = new Dictionary&lt;string, List&lt;string&gt;&gt;();
// below key:value are stored in dictionary B
B.Add(&quot;path4&quot;,new List&lt;string&gt; {&quot;value11&quot;,&quot;value2&quot;,&quot;value3&quot;});
B.Add(&quot;path5&quot;,new List&lt;string&gt; {&quot;value4&quot;,&quot;value51&quot;,&quot;value61&quot;});
B.Add(&quot;path6&quot;,new List&lt;string&gt; {&quot;value71&quot;,&quot;value1&quot;,&quot;value4&quot;}); //the values can get repeated 

Dictionary&lt;string, List&lt;string&gt;&gt; matchFound = new Dictionary&lt;string, string&gt;();
Dictionary&lt;string, List&lt;string&gt;&gt; noMatchFound = new Dictionary&lt;string, string&gt;();
</code></pre>
<p>All the values present in dictionary A should be searched in dictionary B.
For example, <strong>value2</strong> from dictionary A will be searched in dictionary B. If it is found in dictionary B, then the key:value pair i.e. <strong>path1:value2</strong> will be stored in dictionary <strong>matchFound</strong>.
Also, <strong>value3</strong> from dictionary A will be searched in dictionary B. Since it is present in dictionary B, the <strong>matchFound</strong> dictionary will look like -
Key: &quot;path1&quot;
Value:{&quot;value2&quot;,&quot;value3&quot;})</p>
<p>Similarly, <strong>value7</strong> from dictionary A will be searched in dictionary B. value7 is not present in dictionary B, then the key: value pair i.e. <strong>path3:value7</strong> will be stored in dictionary <strong>noMatchFound</strong></p>
<p><strong>matchFound</strong> and <strong>noMatchFound</strong> are <code>Dictionary&lt;string, List&lt;string&gt;&gt;</code>, because there will be cases where the <strong>key</strong>(pathX) can be same and that is the reason we have to define the dictionary with &lt;string, List&gt;</p>
","2024-04-18 19:10:51","0","Question"
"78347303","78346709","","<p>Here's the outline of a simple solution. Assuming that the CSV file is loaded into a list of dictionaries representing rows, each dictionary maps column headers to corresponding values.</p>
<pre class=""lang-py prettyprint-override""><code>def dynamic_query(rows, conditions):
    &quot;&quot;&quot;
    Perform a dynamic query on the list of rows based on specified conditions.
    conditions is a list of tuples, where each tuple contains (column_name, operator, value).
    &quot;&quot;&quot;
    filtered_rows = []
    for row in rows:
        if all(compare(row.get(col_name), op, value) for col_name, op, value in conditions):
            filtered_rows.append(row)
    return filtered_rows

def compare(value, op, target):
    &quot;&quot;&quot;
    Compare value with target based on the specified operator.
    Supported operators: &quot;==&quot;, &quot;!=&quot;, &quot;&gt;&quot;, &quot;&lt;&quot;, &quot;&gt;=&quot;, &quot;&lt;=&quot;, &quot;notnull&quot;, &quot;null&quot;.
    &quot;&quot;&quot;
    if op == &quot;==&quot;:
        return value == target
    elif op == &quot;!=&quot;:
        return value != target
    elif op == &quot;&gt;&quot;:
        return value &gt; target
    elif op == &quot;&lt;&quot;:
        return value &lt; target
    elif op == &quot;&gt;=&quot;:
        return value &gt;= target
    elif op == &quot;&lt;=&quot;:
        return value &lt;= target
    elif op == &quot;notnull&quot;:
        return value is not None
    elif op == &quot;null&quot;:
        return value is None
    else:
        raise ValueError(f&quot;Unsupported operator: {op}&quot;)
</code></pre>
<p>Example queries as described in the question using lists of tuples:</p>
<pre class=""lang-py prettyprint-override""><code>query1 = [(&quot;column1&quot;, &quot;==&quot;, 2), (&quot;column3&quot;, &quot;!=&quot;, &quot;5&quot;)]
query2 = [(&quot;column6&quot;, &quot;==&quot;, &quot;Bob&quot;), (&quot;column7&quot;, &quot;notnull&quot;, &quot;&quot;), (&quot;column12&quot;, &quot;&gt;=&quot;, &quot;0&quot;)]

# Perform queries
result1 = dynamic_query(rows, query1)
result2 = dynamic_query(rows, query2)
</code></pre>
<p>The results returned are the list of rows matching the conditions.</p>
","2024-04-18 12:03:46","0","Answer"
"78347295","78346963","","<p>perhaps another, more compact approach</p>
<pre><code>def count_file_ext(file_list):
    ext_list = [ext.split('.')[-1] for ext in file_list]
    return {ext:ext_list.count(ext) for ext in set(ext_list)}
</code></pre>
","2024-04-18 12:02:05","1","Answer"
"78347252","78346709","","<p>Maybe you can try a hack using <a href=""https://docs.python.org/3/library/functions.html#eval"" rel=""nofollow noreferrer""><code>eval()</code></a>.</p>
<p>Depending on how much you trust your users you add some restrictions to the global and local variables they have access to, but if it is just trusted internal users just 🚢 it:</p>
<pre><code>from collections.abc import Sequence
from typing import Any


def query_data(data: Sequence[tuple[Any, ...]],
               condition: str) -&gt; Sequence[tuple[Any, ...]]:
  &quot;&quot;&quot;Returns a list of tuples that match the passed in condition.&quot;&quot;&quot;
  return [row for row in data if eval(condition)]


csv_data = [
    (1, 2, 3, 4, 5),
    (1, 2, 3, 5, 5),
    (10, 9, 8, 7, 6),
    ('Alice', None, 'Bob', 0, -1),
    ('Bob', 'Alice', 'Charlie', 0, 1),
    ('Daniel', None, 'Evan', 1, 0),
]
print(f&quot;&quot;&quot;{query_data(csv_data, 'row[1] == 2 and row[3] != 5') = }&quot;&quot;&quot;)
print(f&quot;&quot;&quot;{query_data(csv_data, 'row[0] == &quot;Bob&quot; and row[1] is not None and row[3] &gt;= 0') = }&quot;&quot;&quot;)
print(f&quot;&quot;&quot;{query_data(csv_data, 'row[4] &gt; 0') = }&quot;&quot;&quot;)
print(f&quot;&quot;&quot;{query_data(csv_data, 'isinstance(row[0], str) and row[0].startswith(&quot;A&quot;)') = }&quot;&quot;&quot;)
print(f&quot;&quot;&quot;{query_data(csv_data, 'row[1] == None') = }&quot;&quot;&quot;)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>query_data(data, 'row[1] == 2 and row[3] != 5') = [(1, 2, 3, 4, 5)]
query_data(data, 'row[0] == &quot;Bob&quot; and row[1] is not None and row[3] &gt;= 0') = [('Bob', 'Alice', 'Charlie', 0, 1)]
query_data(data, 'row[4] &gt; 0') = [(1, 2, 3, 4, 5), (1, 2, 3, 5, 5), (10, 9, 8, 7, 6), ('Bob', 'Alice', 'Charlie', 0, 1)]
query_data(data, 'isinstance(row[0], str) and row[0].startswith(&quot;A&quot;)') = [('Alice', None, 'Bob', 0, -1)]
query_data(data, 'row[1] == None') = [('Alice', None, 'Bob', 0, -1), ('Daniel', None, 'Evan', 1, 0)]
</code></pre>
","2024-04-18 11:58:16","0","Answer"
"78347105","78346963","","<p>You <em>could</em> (not <em>should</em>) do this without any imported modules as follows:</p>
<pre><code>def count_file_types(filenames: list[str]) -&gt; dict[str, int]:
    result = {}
    for filename in filenames:
        suffix = filename.split(&quot;.&quot;)[-1]
        result[suffix] = result.get(suffix, 0) + 1
    return result

print(count_file_types([&quot;image1.jpg&quot;, &quot;image2.jpg&quot;, &quot;preso.pptx&quot;]))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'jpg': 2, 'pptx': 1}
</code></pre>
<p><strong>Note:</strong></p>
<p>For the sample data given in the question, this is significantly faster than the (arguably) more Pythonic approach proposed by @James</p>
","2024-04-18 11:35:28","1","Answer"
"78347019","78346963","","<p>You can use <code>pathlib.Path</code> and <code>collections.Counter</code> to do this.</p>
<pre><code>from pathlib import Path
from collections import Counter

def count_ext(file_list: list[str]):
    return dict(Counter(Path(f).suffix.lstrip('.') for f in file_list))
</code></pre>
","2024-04-18 11:19:00","2","Answer"
"78346963","","Write file extensions and their occurrences in a list into a dictionary?","<p>How can I solve this with loops, without regular expressions?</p>
<p>Write a function that accepts a list of file names and returns a dictionary with extensions as keys and their occurrences as value.</p>
<p>Example:</p>
<pre><code>#print(count_file_types([&quot;image1.jpg&quot;, &quot;image2.jpg&quot;, &quot;preso.pptx&quot;]))
#=&gt; {&quot;jpg&quot;: 2, &quot;pptx&quot;: 1}
</code></pre>
<p>I tried this, but I guess it’s all wrong:</p>
<pre><code>def count_file_types(string_arr): 
    
    arr = []
    for i in string_arr:
        arr.append(i.split(&quot;.&quot;))
    return(arr)
    print(arr)

    freq = {}
    for i in arr: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[item] = 1
    return freq
    print(freq)
  
  
print(count_file_types(['image1.jpg', 'image2.jpg', 'preso.pptx']))   
</code></pre>
","2024-04-18 11:09:46","-1","Question"
"78346709","","Querying Data in Python","<p>I have seen a number of posts, but none seem to quite answer what I am after. Please note that I am currently working under the constraint of only having the standard Python classes available.</p>
<p>The general problem I wish to solve is to find items in a list given query parameters based on a variable query pattern. i.e. (and please treat the following as pseudo code) the solution may get a request to</p>
<ul>
<li>find all rows in a list that match where element[1] == 2 and element[3] != 5,</li>
</ul>
<p>The next request might be to</p>
<ul>
<li>find all rows in a list that match where element[6] == &quot;Bob&quot; and element[7] != None and element[12] &gt;= 0</li>
</ul>
<p>And the request after that might be a completely different query. In other words, I don't how many or which elements and what conditions might be requested.</p>
<p>More specifically, I am trying to identify as set of rows in a CSV file given any query based on the columns therein. I'm not precious on the data structure, I'm just struggling to find a good way to perform something similar to an SQL query (in function). Due to the data in the csv being inconsistent over time, and changing business needs, it would be a bad idea to hardcode conditions into the code as they would become outdated.</p>
<p>Hopefully this is possible using the standard classes</p>
<p>I haven't really tried anything other than a lot of Google searching and bumping into examples using hard coded conditions a lot. I have been focusing on lists a lot and this might be my issue.</p>
<p>I suspect I can cycle through each element of the query against each element of a row in the csv, over and over, but how would I deal with all the various comparators? - sounds like a lot of coding that someone has likely already done in a nice neat little function (I hope!)</p>
","2024-04-18 10:28:13","0","Question"
"78342355","78342315","","<p>Yes, you can achieve this using the OrderedDict class from the collections module. You can create a new OrderedDict where you specify the order of keys explicitly, ensuring that specific keys come first. Here's an example:</p>
<pre><code>from collections import OrderedDict

# Your original dictionary

d = {'b': 2, 'c': 3, 'a': 1, 'first': 0}

# Define the order of keys

desired_order = ['a', 'first']

# Create a new OrderedDict with the desired order

ordered_d = OrderedDict((key, d[key]) for key in desired_order if key in d)

# Add remaining keys in their original order
for key in d:
    if key not in ordered_d:
        ordered_d[key] = d[key]

print(ordered_d)
</code></pre>
","2024-04-17 15:57:49","0","Answer"
"78342346","78342315","","<p>I think your initial approach is good, but it could be improved with a small adjustment. The <code>if k not in first_keys</code> part makes your code quadratic.</p>
<p>That inefficiency can be avoided:</p>
<pre><code>def reorder_dict(d, first_keys):
    result = {k: d[k] for k in first_keys if k in d}
    result.update(d)
    return result
</code></pre>
<p>In Python 3.9+ a one-liner is possible using a <a href=""https://peps.python.org/pep-0584/"" rel=""nofollow noreferrer"">dict union operator</a></p>
<pre><code>&gt;&gt;&gt; d = {&quot;c&quot;: 3, &quot;b&quot;: 2, &quot;a&quot;: 1}
&gt;&gt;&gt; first_keys = [&quot;a&quot;, &quot;first&quot;]
&gt;&gt;&gt; {k: d[k] for k in first_keys if k in d} | d
{'a': 1, 'c': 3, 'b': 2}
</code></pre>
","2024-04-17 15:56:11","0","Answer"
"78342315","","Reorder dict with custom order","<p>Given a dict <code>d</code>, now that we know since Python 3.7 that (insertion) order is preserved, is there a built-in way to ask for <strong>the same dict with the same keys, except that some keys k1, k2, ... should come first?</strong></p>
<p>Example:</p>
<ul>
<li>key <code>a</code> (if present) should be first,</li>
<li>key <code>first</code> (if present) should be present next</li>
</ul>
<p>I came up with this:</p>
<pre><code>def reorder_dict(d, first_keys):
    new_keys = [k for k in first_keys if k in d.keys()] + [k for k in d.keys() if k not in first_keys]
    new_d = {k: d[k] for k in new_keys}
    return new_d

d1 = {&quot;c&quot;: 3, &quot;b&quot;: 2, &quot;a&quot;: 1}
reorder_dict(d1, [&quot;a&quot;, &quot;first&quot;])    # {'a': 1, 'c': 3, 'b': 2} as expected ; NB: &quot;first&quot; is not present
</code></pre>
<p>Is there a built-in way to do this more directly?</p>
","2024-04-17 15:51:40","0","Question"
"78341624","","OrderedDict with fully custom key order","<p>I know that keys have no order in a <code>dict</code> (even, if, they keep the insertion order in the recent implementations, as I saw this in CPython core developer Hettinger's video, but this is out of topic).</p>
<p>Is there a data structure in Python that behaves like a <code>dict</code>, but for which <strong>the key order can be customized, and the order is guaranteed to be preserved?</strong> (for example after a <code>pickle</code> dump + load, etc.)</p>
<p>Obviously, <a href=""https://docs.python.org/3/library/collections.html#ordereddict-objects"" rel=""nofollow noreferrer""><code>collections.OrderedDict</code></a> seems a good candidate, but finally not, because we cannot fully customize the order of the keys, but only move to beginning or end: <a href=""https://docs.python.org/3/library/collections.html#collections.OrderedDict.move_to_end"" rel=""nofollow noreferrer""><code>move_to_end</code></a>.</p>
","2024-04-17 14:10:02","-2","Question"
"78339608","78339270","","<blockquote>
<p>I need to hold the original obj in some way.</p>
</blockquote>
<p>You seem to be confused on how <a href=""https://en.cppreference.com/w/cpp/utility/variant"" rel=""nofollow noreferrer"">std::variant</a> works. One cannot cast a pointer to <code>T</code> to a pointer to <code>std::variant&lt;T,S,Q&gt;</code>, those are different objects. One cannot &quot;place&quot; an existing object into a <code>variant</code>, either. When creating a <code>variant</code> you must create a new underlying object, at most you can use move-constructor to &quot;move&quot; an object state. If you're given an existing <code>T</code> object with its address potentially stored in some other data, you won't be able to &quot;hold&quot; it in a <code>variant</code> or an <code>std::map</code>. All you can do is to store the pointer to the object.</p>
<blockquote>
<p>Is there any way to hold the reference of an obj as variant reference?</p>
</blockquote>
<p>You can use <code>std::variant&lt;T*, S*, Q*&gt;</code> to hold pointers. If you want it to look more &quot;reference-like&quot; you can use <code>std::variant&lt;std::reference_wrapper&lt;T&gt;, ...&gt;</code> but it's not that much different from normal pointers. However, all of this may be unnecessary.</p>
<blockquote>
<p>How to hold different template obj in a map?</p>
</blockquote>
<p>If different template instantiations implement the same interface, inherit template from an interface class.</p>
<pre><code>class ISafeQueue {
  virtual exchangeType type(void) const = 0;
  virtual void StoreDataFrom(const Storage&amp;) = 0;
  virtual ~ISafeQueue() = default;
};

template&lt;class T&gt;
class SafeQueue : public ISafeQueue {
  //...
};

std::map&lt;exchangeType, ISafeQueue*&gt; receiveQueueMap;
//...
auto sendQueueIteratorInstance = receiveQueueMap.find(exhType); //iterator
ISafeQueue* second = sendQueueIteratorInstance-&gt;second;
//syntax-invariant logic
second-&gt;StoreDataFrom(myStorage);
//if we need to do something specific to a particular template instance:
auto* specific = dynamic_cast&lt;SafeQueue&lt;Something&gt;*&gt;(second);
specific-&gt;Add(Specific(args));
</code></pre>
<p>If you want the <code>receiveQueueMap</code> to own objects (in which case those can't be &quot;original&quot; objects, see above), you just use <code>std::map&lt;exchangeType, std::unique_ptr&lt;ISafeQueue&gt;&gt;</code> with the rest of the code pretty similar.</p>
<p>If there is no common interface then you have a design problem. You still can use the pattern above (with the destructor being the only virtual method) but notice that in that case, no matter what you do, you will have switches on <code>exchangeType</code> all over the place.</p>
","2024-04-17 08:49:04","1","Answer"
"78339270","","Using variant referances for the objects in c++","<p>I have a template class that contains mutex and cv. I want to create different versions of this class and store it in a map with a enum key. Template class given as;</p>
<pre><code>// A threadsafe-queue.
template &lt;class T&gt;
class SafeQueue
{
public:

  SafeQueue(void)
    : q()
    , m()
    , c()
  {}
// Copy constructor
    SafeQueue(const SafeQueue&amp; other) : q(other.q), qCount(other.qCount), maxQCount(other.maxQCount) {}

  ~SafeQueue(void)
  {}
//other funcs...
private:
  std::queue&lt;T&gt; q;
  mutable std::mutex m;
  std::condition_variable c;
  uint16_t qCount = 0;
  uint16_t maxQCount = 1;
};
</code></pre>
<p>and variant &amp; enum defined as;</p>
<pre><code>using QueueVariant = std::variant&lt;
// Define the QueueVariant type for inputs
    SafeQueue&lt;InputStruct&gt;,
    SafeQueue&lt;InputStruct2&gt;
&gt;;

enum class exchangeType : uint8_t{
    exch1,
    exch2
};
</code></pre>
<p>for the given SafeQueue&lt;InputStruct&gt; and SafeQueue&lt;InputStruct2&gt; instances ı want to create a map to hold it with its references like;</p>
<pre><code>std::map&lt;exchangeType,QueueVariant&amp;&gt; receiveQueueMap;

SafeQueue&lt;InputStruct&gt; safeQueueInstanceAlgoInput;
receiveQueueMap.emplace(exchangeType::exch1, safeQueueInstanceAlgoInput);
</code></pre>
<p>I get error : no matching function for call to ‘std::pair&lt;const exchangeType, void*&gt;::pair(exchangeType, SafeQueue&lt;InputStruct&gt;&amp;)’GCC</p>
<p>and if I try to cast QueueVariant* like;</p>
<pre><code>QueueVariant* variPtr = reinterpret_cast&lt;QueueVariant*&gt;(safeQueueInstanceAlgoInput);
</code></pre>
<p>I get invalid type conversionC/C++(171) error.</p>
<p>Only way I achieved to do is using copy contr on SafeQueue;</p>
<pre><code>std::map&lt;exchangeType,void*&gt; receiveQueueMap;
SafeQueue&lt;InputStruct&gt; safeQueueInstanceAlgoInput;
QueueVariant vari = QueueVariant(safeQueueInstanceAlgoInput);

receiveQueueMap.emplace(exchangeType::exchMatching, (void*)&amp;vari);

exchangeType exhType = exchangeType::exch1;
auto sendQueueIteratorInstance = receiveQueueMap.find(exhType); //iterator
auto second = sendQueueIteratorInstance-&gt;second;
QueueVariant* queueVariantPtr = reinterpret_cast&lt;QueueVariant*&gt;(second);

std::cout &lt;&lt; &quot;Variant index: &quot; &lt;&lt; queueVariantPtr-&gt;index() &lt;&lt; std::endl; //This gives correct idx
</code></pre>
<p>but it creates a copy. I need to hold the original obj in some way.</p>
<p>Is there any way to hold the reference of an obj as variant reference? How to hold different template obj in a map?</p>
","2024-04-17 07:56:23","0","Question"
"78338905","78338343","","<p>am guessing you are trying to build a simple encryption/decryption algorithm.
I am using ascii values of characters as keys to make it more convenient.
In the second loop, you're trying to iterate over keys of the dictionary d, which are characters. Then you're trying to perform arithmetic operations (% 2, / 2) directly on these characters. This won't work as expected</p>
<p>This is a modified code and it should work fine</p>
<pre><code>a = input(&quot;Enter the message: &quot;)
a = list(a)
b = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;,
     &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;,
     &quot;,&quot;, &quot;.&quot;, &quot;?&quot;, &quot;!&quot;, &quot;@&quot;, &quot;#&quot;, &quot;$&quot;, &quot;%&quot;, &quot;^&quot;, &quot;&amp;&quot;, &quot;*&quot;,
     &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;]

d = {}
for i in a:
    for j, char in enumerate(b):
        if i == char:
            d[i] = j

print(&quot;Encrypted Dictionary:&quot;, d)

e = &quot;&quot;
for i in d.keys():
    index = d[i]
    if index % 2 == 0:
        c = int(index / 2)
    else:
        c = int((index - 1) / 2)
    e += b[c]

print(&quot;Decrypted message:&quot;, e)
</code></pre>
","2024-04-17 06:52:32","1","Answer"
"78338343","","TypeError: not all arguments converted during string formatting in dictionary key value","<pre><code>a = input(&quot;enter the message&quot;)
a = list(a)
b = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;,
     &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;,
     &quot;,&quot;, &quot;.&quot;, &quot;?&quot;, &quot;!&quot;, &quot;@&quot;, &quot;#&quot;, &quot;$&quot;, &quot;%&quot;, &quot;^&quot;, &quot;&amp;&quot;, &quot;*&quot;,
     &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;]
d = {}
for i in a:
    c = 0
    for j in b:
        if i == j:
            
            d[j] = c # Use dictionary assignment instead of update
            
        c = c + 1
print(d)
e = &quot;&quot;
for i in d.keys():
    print(i)
    if i % 2 == 0:
        
        c = int(i / 2)
        f = 0
        for j in b:
            if c == f:
                e = e + j
        
    else:
        c = int((i - 1) / 2)
        f = 0
        for j in b:
            if c == f:
                e = e + j
print(e)
</code></pre>
<p>I don't know how to fix it. I am new to the programming and i don't have much idea.
please help me how to fix it.
I know that in dictionary keys are integer but still it give the error.
it give <code>TypeError: not all arguments converted during string formatting</code></p>
","2024-04-17 04:23:46","-1","Question"
"78337686","78330113","","<p>you did not provided any data. so i had to create my own....
change parameter to Key, val1 or val4 to see orderby</p>
<pre><code>void Main()
{
    Enumerable.Range(1, 100).ToList().AsParallel().ForAll(fe=&gt; {
        myDic.AddOrUpdate(&quot;A&quot;+fe, new Detail() { val1 = fe, val2 = true, val3 = DateTime.Now, val4 = GetLong() }, (_, old) =&gt; old); 
    });
        
    string sortBy = &quot;val4&quot;;
    LoadGridView(sortBy);
}

public long GetLong()
{
    var r = new Random();
    return r.Next(0, 1000) * 2;
}

private void LoadGridView(string sortBy)
{
        myDic
        .OrderBy(p =&gt; sortBy != &quot;Key&quot; ? p.Value.GetType().GetField(sortBy).GetValue(p.Value) : p.Key) 
        .ToList()
        .Dump();
}

public ConcurrentDictionary&lt;string, Detail&gt; myDic = new  ConcurrentDictionary&lt;string, Detail&gt;();

public class Detail
{
    public int val1;
    public bool val2;
    public DateTime val3;
    public long val4;
    public Detail(){}
}
</code></pre>
","2024-04-16 23:15:17","0","Answer"
"78336867","78336254","","<p>Change the indentation of <code>list.append</code> to right. Also:</p>
<ul>
<li>don't use built-in names such as <code>list</code> (it shadows Python's <code>list</code>).</li>
<li>don't use <code>try: except: pass</code>, handle the missing elements with <code>if ... else</code></li>
</ul>
<pre class=""lang-py prettyprint-override""><code>lst = []  # &lt;-- don't use `list` as variable name
for item in data:

    dictionary = {}

    dictionary[&quot;Address&quot;] = (
        item.find(&quot;div&quot;, {&quot;class&quot;: &quot;property-address&quot;}).text.replace(&quot; &quot;, &quot;&quot;).strip()
    )

    dictionary[&quot;Locality&quot;] = (
        item.find(&quot;div&quot;, {&quot;class&quot;: &quot;property-city&quot;}).text.replace(&quot; &quot;, &quot;&quot;).strip()
    )
    dictionary[&quot;Beds&quot;] = (
        item.find(&quot;div&quot;, {&quot;class&quot;: &quot;property-beds&quot;}).find(&quot;strong&quot;).text
    )

    baths = item.select_one(&quot;div.property-baths strong&quot;)  # &lt;-- don't use try: except: pass
    dictionary[&quot;Baths&quot;] = baths.text if baths else &quot;-&quot;

    sfeet = item.select_one(&quot;div.property-sqft strong&quot;)
    dictionary[&quot;Square Feet&quot;] = sfeet.text if sfeet else &quot;-&quot;

    dictionary[&quot;Price&quot;] = (
        item.find(&quot;a&quot;, {&quot;class&quot;: &quot;listing-price&quot;})
        .text.replace(&quot;\n&quot;, &quot;&quot;)
        .replace(&quot; &quot;, &quot;&quot;)
    )

    lst.append(dictionary)  # &lt;-- note the indentation
</code></pre>
","2024-04-16 19:13:30","0","Answer"
"78336254","","Appending a dictionary to a list with the same key and different values","<p>After extracting data from a website, I want to print it out as a dictionary in a list but the output only brings out the first iteration of the whole loop instead of printing out all the whole loop iteration.</p>
<p>Here is my code:</p>
<pre><code>list = []
for item in data:
        
        dictionary = {}
        dictionary['Address'] = item.find('div',{'class':'property-address'}).text.replace(' ','').strip()    
            
        dictionary['Locality'] = item.find('div',{'class':'property-city'}).text.replace(' ','').strip()
        dictionary['Beds'] = item.find('div',{'class':'property-beds'}).find('strong').text
        try:
            dictionary['Baths'] = item.find('div',{'class':'property-baths'}).find('strong').text
        except:
                pass  
        try: 
            dictionary['Square Feet'] = item.find('div',{'class':'property-sqft'}).find('strong').text
        except:
                pass     
        dictionary['Price'] = item.find('a',{'class':'listing-price'}).text.replace('\n','').replace(' ','')
        

list.append(dictionary)
</code></pre>
<p>After executing the code I was expecting the list to print out all the iteration of the loop, but instead the dictionary only prints out the first iteration instead of all.</p>
<pre><code>[{'Address': '924MaltmanAve',
  'Locality': 'LosAngelesCA90026',
  'Beds': '1',
  'Baths': '1',
  'Square Feet': '676',
  'Price': '$825,000'}]
</code></pre>
<p>Instead it was supposed to be like</p>
<pre><code>[{'Address': '924MaltmanAve',
  'Locality': 'LosAngelesCA90026',
  'Beds': '1',
  'Baths': '1',
  'Square Feet': '676',
  'Price': '$825,000'},
{'Address': '3055NicholsCanyonRd',
  'Locality': 'LosAngelesCA90046',
  'Beds': '5',
  'Baths': '4',
  'Square Feet': '776',
  'Price': '$3,950,000'},
{'Address': '3055NicholsCanyonRd',
  'Locality': 'LosAngelesCA90046',
  'Beds': '5',
  'Baths': '4',
  'Square Feet': '776',
  'Price': '$3,950,000'}]
</code></pre>
<p>And the sequence follows.
But the output only gave me the first iteration of the whole iteration.</p>
","2024-04-16 17:05:07","1","Question"
"78330526","78329862","","<p>With the ruby code, you are creating a new Hash (the Python equivalent would be a dictionary) with a dynamic default value which is defined by the lambda passed to <code>Hash.new</code>. In Python, this could be regarded as an (anonymous) function being passed to the constructor.</p>
<p>This lambda (with some indirections which shall not be important here) is called each time an undefined key is accessed in the hash. The value returned by the lambda is assumed to be the value of the key. The lambda has also the side effect of adding the default value to the hash.</p>
<p>This thus works quite similarly to the <a href=""https://docs.python.org/3/library/collections.html#collections.defaultdict"" rel=""nofollow noreferrer"">defaultdict</a> collection in Python.</p>
<p>Now, the default value will always be a new hash object which again is setup to set and return new hash objects when an undefined key is accessed:</p>
<pre class=""lang-rb prettyprint-override""><code>x = -&gt;(h, k) { h[k] = Hash.new(&amp;x) }
@abc = Hash.new(&amp;x)

@abc[:a]
# =&gt; {}

@abc[:b]
# =&gt; {}

@abc[:a].equal? @abc[:a]
=&gt; true

@abc[:a].equal? @abc[:b]
=&gt; false

@abc[:custom] = 123
@abc[:x][:y][:z] = 'abc'
@abc
# =&gt; {:a=&gt;{}, :b=&gt;{}, :custom=&gt;123, :x=&gt;{:y=&gt;{:z=&gt;&quot;abc&quot;}}}
</code></pre>
<p>I believe the equivalent Python data structure would be something like this <code>defaultdict</code>:</p>
<pre class=""lang-py prettyprint-override""><code>from collections import defaultdict

x = lambda defaultdict(lambda: x())
abc = defaultdict(lambda: x())
</code></pre>
","2024-04-15 19:02:41","2","Answer"
"78330214","78330095","","<p>and this seems to do the trick:</p>
<pre><code>new_pos = {key: [position for position in value
                 if position.get('end_date') == 99999999]
           for key, value in positions.items()}
</code></pre>
<p>we get back each key: list and then apply the if condition creating a new dict with key: list of correct values</p>
","2024-04-15 17:49:51","0","Answer"
"78330113","","Sorting by any Value.Field in ConcurrentDictionary","<p>I'm trying to load a GridView with a ConcurrentDictionary&lt;string, object&gt; (as List()) and allow any field (key or object.field) to be sortable. To wit:</p>
<pre><code>public static ConcurrentDictionary&lt;string, Detail&gt; myDic = new ConcurrentDictionary&lt;string, Detail&gt;();

public class Detail
{
    public int val1;
    public bool val2;
    public DateTime val3;
    public long val4;
}

// myDic is loaded elsewhere and does have correct data

private void LoadGridView(string sortBy = &quot;Key&quot;)
{
    Type valType = typeof(Detail);
    PropertyInfo pInfo;

    // method #1:
    pInfo = valType.GetProperty(sortBy);        // &lt;-- always returns null

    // method #2:
    FieldInfo fInfo = valType.GetField(sortBy);             // &lt;-- always returns correct field info
    pInfo = fInfo.ReflectedType.GetProperty(fInfo.Name);    // &lt;-- always returns null

    // fails when sortBy != &quot;Key&quot;
    GridView1.DataSource = myDic.OrderBy(x =&gt; sortBy == &quot;Key&quot; 
        ? x.Key 
        : pInfo.GetValue(x.Value)
    ).ToList();

    GridView1.DataBind();
}
</code></pre>
<p>Obviously, I'm doing either Method #1 or #2 when testing - not both!  ;)</p>
<p>When I specify sortBy = a Detail field (&quot;val1&quot;, &quot;val2&quot;, etc. - spelling, capitalization verified) pInfo is always null and the assignment to the DataSource fails.</p>
<p>Thanks in advance for your help!</p>
","2024-04-15 17:29:02","0","Question"
"78330095","","dictionary of lists of dictionaries not filtering","<p>I tried the following:</p>
<pre><code>positions = {
    'IBM': [
        {'ticker': 'IBM', 'start_date': '20240415', 'end_date': 99999999},
        {'ticker': 'IBM', 'start_date': '20240416', 'end_date': 00000000},
        {'ticker': 'IBM', 'start_date': '20240417', 'end_date': 99999999}],
    'MRK': [
        {'ticker': 'mmm', 'start_date': '20240415', 'end_date': 99999999},
        {'ticker': 'mmm', 'start_date': '20240416', 'end_date': 00000000},
        {'ticker': 'mmm', 'start_date': '20240417', 'end_date': 99999999}]}

new_pos = [position for position in positions.values() 
           if position[0].get('end_date') == 99999999]

print(new_pos)
</code></pre>
<p>and got back:</p>
<pre><code>[[{'ticker': 'IBM', 'start_date': '20240415', 'end_date': 99999999}, 
  {'ticker': 'IBM', 'start_date': '20240416', 'end_date': 0}, 
  {'ticker': 'IBM', 'start_date': '20240417', 'end_date': 99999999}], 
 [{'ticker': 'mmm', 'start_date': '20240415', 'end_date': 99999999}, 
  {'ticker': 'mmm', 'start_date': '20240416', 'end_date': 0}, 
  {'ticker': 'mmm', 'start_date': '20240417', 'end_date': 99999999}]]
</code></pre>
<p>why is the if condition not working and why do we get back all records instead
of just the first record in the list with <code>position[0]</code>?</p>
<p>I think if the first dict of each list has end = 99999999 then we get back the entire list.  How do we just get back the dicts where end = 99999999?</p>
","2024-04-15 17:26:25","-2","Question"
"78329862","","Nested Ruby Hashes in Python","<p>Can anyone please explain what this bit of code does in Ruby ?</p>
<pre class=""lang-rb prettyprint-override""><code>x = -&gt;(h, k) { h[k] = Hash.new(&amp;x) }
@abc = Hash.new(&amp;x)
</code></pre>
<p>I have searched and couldn't figure out what is exactly happening there.
I assume it is meant to create nested Hashes ?</p>
<p>Also, how would this translate if I want to write it in Python ?</p>
","2024-04-15 16:34:59","1","Question"
"78329818","78329344","","<p>First things first, if you want to parse a <code>i32</code>, then you can simply replace <a href=""https://docs.rs/nom/latest/nom/character/complete/fn.digit1.html"" rel=""nofollow noreferrer""><code>digit1</code></a> with the <code>i32</code> parser, as in <a href=""https://docs.rs/nom/latest/nom/character/complete/fn.i32.html"" rel=""nofollow noreferrer""><code>nom::character::complete::i32</code></a>.</p>
<hr />
<p>Collecting into a struct like that, can lead to more annoyances in the future, e.g. if you plan on adding more variants, or even just reusing parsers.</p>
<p>It's usually more common to have <code>enum</code>s, and then based on context you parse into a variant of that enum. Consider parsing a (programming) language, you could have an <code>enum Expr</code> and <code>fn parse_expr()</code>, then then also <code>enum Stmt</code> and <code>fn parse_stmt()</code>.</p>
<p>In your case, you can make a <code>enum Token</code> and <code>fn parse_token()</code>:</p>
<pre class=""lang-rust prettyprint-override""><code>use nom::character::complete::i32;

#[derive(PartialEq, Clone, Debug)]
enum Token&lt;'a&gt; {
    Word(&amp;'a str),
    Number(i32),
}

fn parse_token&lt;'a&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, Token&lt;'a&gt;&gt; {
    alt((
        map(alpha1, Token::Word),
        map(i32, Token::Number),
    ))(i)
}
</code></pre>
<p>That makes it easier on the calling end, to consume <code>Token</code>s into something else. Maybe you want to collect into <code>Vec&lt;Token&gt;</code> or you can <a href=""https://docs.rs/nom/latest/nom/combinator/fn.map.html"" rel=""nofollow noreferrer""><code>map()</code></a>/<code>match token</code> and build your <code>NumbersAndWords</code> struct.</p>
<p>Implementing <code>fn parse_tokens()</code> that simply collects all <code>Token</code>s into a <code>Vec&lt;Token&gt;</code> would look like this:</p>
<pre class=""lang-rust prettyprint-override""><code>fn parse_tokens&lt;'a&gt;(i: &amp;'a str) -&gt; IResult&lt;&amp;'a str, Vec&lt;Token&lt;'a&gt;&gt;&gt; {
    many0(parse_token)(i)
}

fn main() {
    let input = &quot;Hello123World456&quot;;
    let (input, tokens) = parse_tokens(input).unwrap();
    assert_eq!(
        tokens.as_slice(),
        &amp;[
            Token::Word(&quot;Hello&quot;),
            Token::Number(123),
            Token::Word(&quot;World&quot;),
            Token::Number(456),
        ]
    );
}
</code></pre>
<p>If you still want to collect into <code>NumbersAndWords</code> that <em>could</em> look like this:</p>
<pre class=""lang-rust prettyprint-override""><code>fn parse_numbers_and_words&lt;'a&gt;(
    i: &amp;'a str,
    numbers_and_words: &amp;mut NumbersAndWords,
) -&gt; IResult&lt;&amp;'a str, ()&gt; {
    let (input, tokens) = parse_tokens(i)?;

    for token in tokens {
        match token {
            Token::Word(word) =&gt; numbers_and_words.insert_word(word),
            // TODO: `num` is a `i32` so change your `insert_number()` to take `i32`
            Token::Number(num) =&gt; numbers_and_words.insert_number(num),
        }
    }

    Ok((input, ()))
}
</code></pre>
<p><em>Note that <code>parse_tokens()</code> (<a href=""https://docs.rs/nom/latest/nom/multi/fn.many0.html"" rel=""nofollow noreferrer""><code>many0()</code></a>) is allocating and constructing a <code>Vec&lt;Token&gt;</code>. To avoid allocating, you could loop <code>parse_token()</code> instead.</em></p>
<p>I mentioned it on your previous question, but check out the <a href=""https://github.com/rust-bakery/nom/blob/main/examples/json.rs"" rel=""nofollow noreferrer""><code>json.rs</code> example</a>, it gives a nice starting point when it comes to parsing into multiple variants.</p>
<hr />
<p>For completion sake, if you truly want to have your <code>fn parser()</code> that takes a <code>numbers_and_words: &amp;mut NumbersAndWords</code>. Then the easiest workaround is to simply access <code>.words</code> and <code>.numbers</code> directly, then you get around the borrowing issue:</p>
<pre class=""lang-rust prettyprint-override""><code>fn parser&lt;'a&gt;(i: &amp;'a str, numbers_and_words: &amp;mut NumbersAndWords) -&gt; IResult&lt;&amp;'a str, ()&gt; {
    alt((
        map(alpha1, |word| {
            numbers_and_words.words.push(String::from(word))
        }),
        map(i32, |num| {
            numbers_and_words.numbers.push(num);
        }),
    ))(i)
}
</code></pre>
<p>Assuming you already thought of that, and your example is just a minimal example. Then I'm guessing your actual issue is that your <code>insert_*()</code> methods are more complex. So you can't simply replace:</p>
<pre class=""lang-rust prettyprint-override""><code>numbers_and_words.insert_word(word)
</code></pre>
<p>With:</p>
<pre class=""lang-rust prettyprint-override""><code>numbers_and_words.words.push(String::from(word))
</code></pre>
<p>If that is the case, then this is a perfect example of when the <a href=""https://doc.rust-lang.org/rust-by-example/generics/new_types.html"" rel=""nofollow noreferrer"">new type idiom</a> applies.</p>
<p>In short, instead of <code>words: Vec&lt;String&gt;</code>, then you introduce a new type <code>struct Words(Vec&lt;String&gt;)</code>. Now you change your field to <code>words: Words</code>. This now allows you to implement methods on <code>Words</code>. So you now just access <code>.words</code> directly. (Same for <code>numbers: Numbers</code>.)</p>
<p>This allows you to get around the borrowing issues, while also being able to implement any methods you want. You just implement them on <code>Words</code> (and <code>Numbers</code>) instead of on <code>NumbersAndWords</code>.</p>
<pre class=""lang-rust prettyprint-override""><code>struct Words(Vec&lt;String&gt;);

impl Words {
    pub fn insert(&amp;mut self, word: impl Into&lt;String&gt;) {
        self.0.push(word.into());
    }
}

struct Numbers(Vec&lt;i32&gt;);

impl Numbers {
    pub fn insert(&amp;mut self, num: i32) {
        self.0.push(num);
    }
}

struct NumbersAndWords {
    pub words: Words,
    pub numbers: Numbers,
}

fn parser&lt;'a&gt;(i: &amp;'a str, numbers_and_words: &amp;mut NumbersAndWords) -&gt; IResult&lt;&amp;'a str, ()&gt; {
    alt((
        map(alpha1, |word| numbers_and_words.words.insert(word)),
        map(i32, |num| numbers_and_words.numbers.insert(num)),
    ))(i)
}
</code></pre>
","2024-04-15 16:24:52","1","Answer"
"78329581","78329344","","<p>I think generally it's a bit odd to pass a mutable value to a parser — ordinarily I'd get the parsed data out, and then iterate over it to insert into <code>numbers_and_words</code>. The mutable input is why you can't use <code>alt</code>; if you instead returned parsed data and used it to mutate <code>numbers_and_words</code> separately. Sticking with the mutable input version, a solution would look like this:</p>
<pre class=""lang-rust prettyprint-override""><code>use nom::{
    character::complete::{alpha1, digit1, space1},
    multi::separated_list0,
    IResult,
};

fn parse_token&lt;'a&gt;(i: &amp;'a str, numbers_and_words: &amp;mut NumbersAndWords) -&gt; IResult&lt;&amp;'a str, ()&gt; {
    if let Ok((remainder, digits)) = digit1::&lt;_, nom::error::Error&lt;&amp;'a str&gt;&gt;(i) {
        numbers_and_words.insert_number(digits.parse().unwrap());
        Ok((remainder, ()))
    } else if let Ok((remainder, word)) = alpha1::&lt;_, nom::error::Error&lt;&amp;'a str&gt;&gt;(i) {
        numbers_and_words.insert_word(word);
        Ok((remainder, ()))
    } else {
        Err(nom::Err::Error(nom::error::Error {
            input: i,
            code: nom::error::ErrorKind::Fail,
        }))
    }
}

fn parse_all&lt;'a&gt;(i: &amp;'a str, numbers_and_words: &amp;mut NumbersAndWords) -&gt; IResult&lt;&amp;'a str, Vec&lt;()&gt;&gt; {
    separated_list0(space1, |i| parse_token(i, numbers_and_words))(i)
}

fn main() {
    let mut numbers_and_words = NumbersAndWords {
        words: Vec::new(),
        numbers: Vec::new(),
    };
    let input = &quot;monkey 10 apple tree 20&quot;;
    parse_all(input, &amp;mut numbers_and_words).unwrap();
    println!(&quot;{numbers_and_words:?}&quot;);
}
</code></pre>
<p>But a better approach is probably the following:</p>
<pre class=""lang-rust prettyprint-override""><code>use nom::{
    branch::alt,
    character::complete::{alpha1, digit1, space1},
    multi::separated_list0,
    IResult,
};

impl&lt;'a&gt; FromIterator&lt;&amp;'a str&gt; for NumbersAndWords {
    fn from_iter&lt;T: IntoIterator&lt;Item = &amp;'a str&gt;&gt;(iter: T) -&gt; Self {
        let mut this = NumbersAndWords {
            words: Vec::new(),
            numbers: Vec::new(),
        };
        for x in iter {
            if let Ok(num) = x.parse() {
                this.numbers.push(num);
            } else {
                this.words.push(x.to_owned())
            }
        }
        this
    }
}

fn parse_naw(i: &amp;str) -&gt; IResult&lt;&amp;str, NumbersAndWords&gt; {
    separated_list0(space1, alt((digit1, alpha1)))(i)
        .map(|(remainder, words)| (remainder, words.into_iter().collect()))
}

fn main() {
    let input = &quot;monkey 10 apple tree 20&quot;;
    let (remainder, numbers_and_words) = parse_naw(input).unwrap();
    println!(&quot;{numbers_and_words:?} (remainder: {remainder:?})&quot;);
}
</code></pre>
<pre><code>NumbersAndWords { words: [&quot;monkey&quot;, &quot;apple&quot;, &quot;tree&quot;], numbers: [10, 20] } (remainder: &quot;&quot;)
</code></pre>
","2024-04-15 15:45:14","1","Answer"
"78329344","","Use nom's `alt` and `map`-functions together to modify an object in place depending on which parser was successful","<p>I have a struct that holds a list of words and a list of numbers</p>
<pre class=""lang-rust prettyprint-override""><code>struct NumbersAndWords {
    pub words: Vec&lt;String&gt;,
    // ideally numbers would be Vec&lt;i32&gt;
    pub numbers: Vec&lt;String&gt;,
}

impl NumbersAndWords {
    pub fn insert_number(&amp;mut self, num: &amp;str) {
        self.numbers.push(String::from(num));
    }

    pub fn insert_word(&amp;mut self, word: &amp;str) {
        self.words.push(String::from(word));
    }
}
</code></pre>
<p>Now I want to parse a piece of text that holds words and numbers e.g. <code>&quot;monkey 10 apple tree 20&quot;</code>. I want to use the <code>alt</code>-combinator to parse either a word using <code>alpha1</code> or a number using <code>digit1</code>. Depending on which parser is used I want to add the parsed result to the respective fields of <code>NumbersAndWords</code>. Right now both fields are vectors of Strings - ideally <code>numbers</code> would be <code>Vec&lt;i32&gt;</code>, but that is too difficult for me right now as
The parser-function I tried to write looks like this (but does now work, as there appear two borrows. I am unable to resolve this problem unfortunately:</p>
<pre class=""lang-rust prettyprint-override""><code>fn parser&lt;'a&gt;(i: &amp;'a str, numbers_and_words: &amp;mut NumbersAndWords) -&gt; IResult&lt;&amp;'a str,  ??? &gt; {
    alt((
        map(alpha1, |word| numbers_and_words.insert_word(word)),
        map(digit1, |num| numbers_and_words.insert_number(num)),
    ))(i)
</code></pre>
<p>Is there a way this can be solved? Even a way nom would prefer? Would it be better use an enum and match the value of <code>alt(...)</code> somehow?</p>
<p>I am unsure if using alt and map together is such a great idea. Is there any more or less &quot;elegant&quot; way of solving this? Ideally with parsing <code>num</code> to i32 as well and the field <code>numbers</code> being a Vec. (but then the return type of this alt(...)-parser would be very complicated.</p>
<p>I think there might be 2 or even 3 problems mixed toghether that confuse me.</p>
","2024-04-15 15:06:31","1","Question"
"78329337","78305693","","<p>The predicate can be a sequence of numbers (<a href=""https://docs.jsonata.org/path-operators#---filter"" rel=""nofollow noreferrer"">https://docs.jsonata.org/path-operators#---filter</a>). So the following will select the first 5 items:</p>
<p><code>data[[0..4]]</code></p>
<p>See <a href=""https://try.jsonata.org/ENUX8wkyM"" rel=""nofollow noreferrer"">https://try.jsonata.org/ENUX8wkyM</a></p>
","2024-04-15 15:05:22","0","Answer"
"78323200","78323178","","<p>Convert a list of lists into a dictionary where the first element of each sublist is the key and the second element is the value.</p>
<pre><code>lst = [
    [&quot;H&quot;, 1.008],
    [&quot;He&quot;, 4.003],
    [&quot;Li&quot;, 6.941],
    [&quot;Be&quot;, 9.012]
]

# Convert the list of lists into a dictionary
result_dict = dict(lst)

print(result_dict)
</code></pre>
<p>Output:</p>
<pre><code>{'H': 1.008, 'He': 4.003, 'Li': 6.941, 'Be': 9.012}
</code></pre>
","2024-04-14 08:36:49","0","Answer"
"78323178","","Convert class list into list","<p>I have a list which type is &lt;class 'list'&gt;</p>
<pre><code>lst = [
[&quot;H&quot;, 1.008],
[&quot;He&quot;, 4.003],
[&quot;Li&quot;, 6.941],
[&quot;Be&quot;, 9.012]] 
</code></pre>
<p>I want to convert it to a dictionary. The function convert doesn´t work, because of the type class list.
How can I convert it first to a list? And then to a dict?</p>
<p>I tried converting to a list, but don´t find any function for that.</p>
","2024-04-14 08:29:46","-2","Question"
"78322689","78322620","","<p>To create a merged dictionary you can try to check if that key is already in merged dictionary, if yes - append the value, if not - just &quot;&quot;.
To get all keys from all dictionaries, just iterate among them and add to set, to have only unique values:</p>
<pre class=""lang-py prettyprint-override""><code>keys = set(key for dict_ in dictionaries for key in dict_)
</code></pre>
<p>Now, by <code>.get(key, '')</code> we will get the value of the key, or if not, we will receive the <code>''</code> string. The <code>setdefault</code> will create a list for the every new key, so we can now <code>append</code> into it the received values.</p>
<pre class=""lang-py prettyprint-override""><code>mergedDictionaries = {}
for key in keys:
    for dict_ in dictionaries:
        mergedDictionaries.setdefault(key, []).append(dict_.get(key, ''))
</code></pre>
<p>Hope it works.<br />
Maybe I didn't get about dataframe, but if you wanna get the <code>pandas.DataFrame</code> object, it will me much easier, just using couple of lines:</p>
<pre class=""lang-py prettyprint-override""><code>df = pd.DataFrame(dictionaries)
df = df.fillna('')
</code></pre>
","2024-04-14 04:05:42","1","Answer"
"78322680","78322620","","<p>A bit tweaking of your algorithm:</p>
<pre><code>result = defaultdict(list)
for i, d in enumerate(dictionaries):
    for k, v in d.items():
        while len(result[k]) &lt; i:
            result[k].append('')
        result[k].append(v)

for k in result:
    while len(result[k]) &lt; len(dictionaries):
        result[k].append('')

result
# defaultdict(&lt;class 'list'&gt;, {'Key 1': ['value1', 'value4', 'value7'], 'Key 2': ['value2', '', 'value8'], 'Key 3': ['value3', 'value5', ''], 'Key 4': ['', 'value6', 'value9']})
</code></pre>
","2024-04-14 04:02:57","2","Answer"
"78322620","","Combine dictionaries with common and nonexistent keys without filling the gaps","<p>Here is a list of dictionaries:</p>
<pre><code>dictionaries = [
    {&quot;Key 1&quot;: &quot;value1&quot;
     &quot;Key 2&quot;: &quot;value2&quot;
     &quot;Key 3&quot;: &quot;value3&quot;
    },

    {&quot;Key 1&quot;: &quot;value4&quot;
     &quot;Key 3&quot;: &quot;value5&quot;
     &quot;Key 4&quot;: &quot;value6&quot;
    },

    {&quot;Key 1&quot;: &quot;value7&quot;
     &quot;Key 2&quot;: &quot;value8&quot;
     &quot;Key 4&quot;: &quot;value9&quot;
    }
]
</code></pre>
<p>Here are my expected results:</p>
<pre><code>mergedDictionaries = {
    &quot;Key 1&quot;: [&quot;value1&quot;, &quot;value4&quot;, &quot;value7&quot;],
    &quot;Key 2&quot;: [&quot;value2&quot;, &quot;&quot;, &quot;value8&quot;],
    &quot;Key 3&quot;: [&quot;value3&quot;, &quot;value5&quot;, &quot;&quot;],
    &quot;Key 4&quot;: [&quot;&quot;, &quot;value6&quot;, &quot;value9&quot;]
}
</code></pre>
<p>I tried using the collections module, but it fills up the gaps using this code below.</p>
<pre><code>dictionary = defaultdict(list)

for key in dictionaries:
    for x, y in key.items():
        dictionary[x].append(y)
</code></pre>
<p>The whole point of this is to make an accurate dataframe when combining the dictionaries.</p>
<p>Is there any method to recreate this situation?</p>
","2024-04-14 03:22:16","0","Question"
"78321145","78300651","","<p>for counting the number of items the user wants you can just use:</p>
<pre><code>    len(makeup)
</code></pre>
<p>for calculating the total price:</p>
<pre><code>    elif choice==&quot;c&quot;:
         sum=0
         for k,v in makeup.items():
             sum+=v
             print(sum)
</code></pre>
<p>k and v are assigned as key and value automatically during for statement,
this will give the total price while checking out.</p>
<p>also one more suggestion, use choice.lower() in your elif statements to make it slightly more versatile</p>
","2024-04-13 15:49:40","0","Answer"
"78321103","78321036","","<p>The answer is <code>data['liveweer'][0]['temp']</code></p>
<p>This gives 23.6</p>
","2024-04-13 15:35:36","0","Answer"
"78321092","78321036","","<p>I hope this helps.</p>
<pre><code>data = {'plaats': 'Tilburg', 'timestamp': '1713019987', 'time': '13-04-2024 '
                                                                '16:53',
        'temp': '23.3', 'gtemp': '22.3', 'samenv': 'Licht bewolkt', 'lv': '48',
        'windr': 'ZW', 'windrgr': '225', 'windms': '6', 'winds': '4',
        'windk': '11.7', 'windkmh': '21.6', 'luchtd': '1020.5',
        'ldmmhg': '765', 'dauwp': '11.7', 'zicht': '40',
        'verw': 'Vandaag zonnige perioden, droog en vrij warm. Zondag frisser',
        'sup': '06:45', 'sunder': '20:35', 'image': 'lichtbewolkt',
        'd0weer': 'bewolkt', 'd0tmax': '22', 'd0tmin': '12', 'd0windk': '3',
        'd0windknp': '10', 'd0windms': '5', 'd0windkmh': '19', 'd0windr': 'ZW',
        'd0windrgr': '225', 'd0neerslag': '0', 'd0zon': '0',
        'd1weer': 'halfbewolkt', 'd1tmax': '15', 'd1tmin': '10',
        'd1windk': '3', 'd1windknp': '8', 'd1windms': '4', 'd1windkmh': '15',
        'd1windr': 'W', 'd1windrgr': '270', 'd1neerslag': '20', 'd1zon': '50',
        'd2weer': 'regen', 'd2tmax': '11', 'd2tmin': '7', 'd2windk': '3',
        'd2windknp': '10', 'd2windms': '5', 'd2windkmh': '19', 'd2windr': 'ZW',
        'd2windrgr': '225', 'd2neerslag': '90', 'd2zon': '20', 'alarm': '0',
        'alarmtxt': ''}
print(data['temp'])
print(data['lv'])
temp = data['temp']
lv =data['lv']
</code></pre>
","2024-04-13 15:33:02","0","Answer"
"78321036","","Python how to pull data from dictionary","<p>Using the <code>weerlive.nl</code> API to pull weather data from the Dutch meteriological institute (KNMI), I get a dictionary with one key <code>'liveweer'</code> with a long set of tuples:</p>
<pre><code>dict_values([[{'plaats': 'Tilburg', 'timestamp': '1713019987', 'time': '13-04-2024 16:53', 'temp': '23.3', 'gtemp': '22.3', 'samenv': 'Licht bewolkt', 'lv': '48', 'windr': 'ZW', 'windrgr': '225', 'windms': '6', 'winds': '4', 'windk': '11.7', 'windkmh': '21.6', 'luchtd': '1020.5', 'ldmmhg': '765', 'dauwp': '11.7', 'zicht': '40', 'verw': 'Vandaag zonnige perioden, droog en vrij warm. Zondag frisser', 'sup': '06:45', 'sunder': '20:35', 'image': 'lichtbewolkt', 'd0weer': 'bewolkt', 'd0tmax': '22', 'd0tmin': '12', 'd0windk': '3', 'd0windknp': '10', 'd0windms': '5', 'd0windkmh': '19', 'd0windr': 'ZW', 'd0windrgr': '225', 'd0neerslag': '0', 'd0zon': '0', 'd1weer': 'halfbewolkt', 'd1tmax': '15', 'd1tmin': '10', 'd1windk': '3', 'd1windknp': '8', 'd1windms': '4', 'd1windkmh': '15', 'd1windr': 'W', 'd1windrgr': '270', 'd1neerslag': '20', 'd1zon': '50', 'd2weer': 'regen', 'd2tmax': '11', 'd2tmin': '7', 'd2windk': '3', 'd2windknp': '10', 'd2windms': '5', 'd2windkmh': '19', 'd2windr': 'ZW', 'd2windrgr': '225', 'd2neerslag': '90', 'd2zon': '20', 'alarm': '0', 'alarmtxt': ''}]])
</code></pre>
<p>For my RaspberryPi weather station I only need the values of <code>'temp'</code> and <code>'lv'</code> (luchtvochtigheid = humidity).</p>
<p>How do I pull these values from the dictionary?</p>
","2024-04-13 15:15:19","-1","Question"
"78320481","78320435","","<p>The code you provided should work exactly as you said. The <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/map.html"" rel=""nofollow noreferrer"">map</a> function &quot;returns a list containing the results of applying the given transform function to each element in the original array&quot;.</p>
<p>If this code doesn't work, please provide more information about exactly what you're trying to achieve.</p>
","2024-04-13 11:47:36","1","Answer"
"78320435","","Apply a function to elements in a list based on condition in Kotlin","<p>I have a list of elements, and I wish to apply functions to them based on a certain criteria related to them.</p>
<p>I'd like to know if this is possible the way I'm imagining it, something like this hypothetical code. Each function x and y would return an element:</p>
<pre><code>list.map{
 if (it == something)
  functionx(it)
 else
  functiony(it) 
}
</code></pre>
<p>And the list would end up with all its original elements transformed by those functions.</p>
<p>Is this possible?</p>
","2024-04-13 11:32:58","0","Question"
"78319054","78318980","","<p>Ignoring that the items in the lists are dictionaries, the zip method will iterate through items in several sequences. Combining the dictionaries can be done using the unpacking operator (**).</p>
<pre><code>a = [{'type': 'excel_macro', 'Name': 'Nuevo Diseño de Registro de nominas.xlsm'}, {'type': 'pdf', 'Name': 'Presentación oferta comercial Nómina.pdf'}]  
b = [{'id': 35630898}, {'id': 35630899}]

combined_list = []
for x, y in zip(a, b):
  combined_list.append({**x, **y})
</code></pre>
<p><code>combined_list</code> will be:</p>
<pre><code>[{'type': 'excel_macro',
  'Name': 'Nuevo Diseño de Registro de nominas.xlsm',
  'id': 35630898},
 {'type': 'pdf',
  'Name': 'Presentación oferta comercial Nómina.pdf',
  'id': 35630899}]
</code></pre>
","2024-04-12 22:53:59","1","Answer"
"78319008","78318980","","<p>Here's a way:</p>
<pre class=""lang-py prettyprint-override""><code>d1 = [{'type': 'excel_macro', 'Name': 'Nuevo Diseño de Registro de nominas.xlsm'}, {'type': 'pdf', 'Name': 'Presentación oferta comercial Nómina.pdf'}]
d2 = [{'id': 35630898}, {'id': 35630899}]

# union operator(|) supported for dicts as of Python 3.9.
result = [a | b for a, b in zip(d1, d2)]
print(result)
</code></pre>
<p>Output:</p>
<pre><code>[{'type': 'excel_macro', 'Name': 'Nuevo Diseño de Registro de nominas.xlsm', 'id': 35630898}, {'type': 'pdf', 'Name': 'Presentación oferta comercial Nómina.pdf', 'id': 35630899}]
</code></pre>
","2024-04-12 22:39:57","1","Answer"
"78318980","","Merge 2 dictionary lists in order","<p>I have these 2 lists of dictionaries:</p>
<pre><code>[{'type': 'excel_macro', 'Name': 'Nuevo Diseño de Registro de nominas.xlsm'}, 
 {'type': 'pdf', 'Name': 'Presentación oferta comercial Nómina.pdf'}
]

[{'id': 35630898}, {'id': 35630899}]
</code></pre>
<p>and I want it to be like this:</p>
<pre><code>[{'type': 'excel_macro', 'Name': 'Nuevo Diseño de Registro de nominas.xlsm', 'id': 35630898}, 
 {'type': 'pdf', 'Name': 'Presentación oferta comercial Nómina.pdf', 'id': 35630899}
]
</code></pre>
<p>That is, I want to merge the dictionaries of the lists in order, including the 'id' within the corresponding dictionary</p>
<p>I've looked for how to do it but I haven't found exactly this. I appreciate the help.</p>
","2024-04-12 22:30:01","1","Question"
"78314378","78314343","","<p>You need to craft a Series with the correct indices, assignment will use index alignment automatically:</p>
<pre><code>table.loc[sub_table_condition, 'col'] = pd.Series([list_of_dicts]*len(table),
                                                  index=table.index)
</code></pre>
<p>Output:</p>
<pre><code>   ID Category                                                col
0   1        A                                                NaN
1   2        B  [{'Val': 100, 'Reascon': 'Reason 1'}, {'Val': ...
2   3        A                                                NaN
</code></pre>
","2024-04-12 05:42:01","1","Answer"
"78314370","78314343","","<p>First I think working with <code>list/dicts</code>s in pandas is not <a href=""https://stackoverflow.com/a/52563718/2901002"">good idea</a>, but if really need is possible use this solution:</p>
<p>Create <code>Series</code> with index values from filtered original index, for count matched values is used <code>sum</code> of <code>True</code>s values:</p>
<pre><code>s = pd.Series([list_of_dicts] * sub_table_condition.sum(), 
              index=table.index[sub_table_condition])
table.loc[sub_table_condition, col_name] = s
print (table)
   ID Category                                               Data
0   1        A                                                NaN
1   2        B  [{'Val': 100, 'Reascon': 'Reason 1'}, {'Val': ...
2   3        A                                                NaN
</code></pre>
<p><strong>How it working:</strong></p>
<pre><code>print (pd.Series([list_of_dicts] * sub_table_condition.sum(), 
                 index=table.index[sub_table_condition]))
1    [{'Val': 100, 'Reascon': 'Reason 1'}, {'Val': ...
dtype: object
</code></pre>
","2024-04-12 05:40:57","1","Answer"
"78314343","","Add column to existing dataframe based on condition to a few rows","<pre><code>table.loc[sub_table_condition, col_name] = value
</code></pre>
<p>i want to extend this condition where my value is a list of dict, it can have 1 dict, multiple dict or empty list.
i tried using</p>
<pre><code>table.loc[sub_table_condition, col_name] = [list_of_dict] * len(sub_table)
</code></pre>
<p>it works if list of dict has more than 1 dicts but fails in case of 1 dict in list</p>
<p>solutions tried:</p>
<pre><code>table.loc[sub_table_condition, col_name] = pd.Series([list_of_dict] * len(sub_table))
table.loc[sub_table_condition, col_name] = pd.Series([list_of_dict] * len(sub_table)).to_list()
</code></pre>
<p>none of them seem to work
eg</p>
<pre><code>table = pd.DataFrame({'ID': [1, 2, 3], 'Category': ['A', 'B', 'A']})
sub_table_condition = table['Category'] == 'B'
# Example column name
col_name = 'Data'

# Example list of dictionaries
list_of_dicts = [{&quot;Val&quot;: 100, &quot;Reascon&quot;: &quot;Reason 1&quot;},
                 {&quot;Val&quot;: 200, &quot;Reascon&quot;: &quot;Reason 2&quot;}]
</code></pre>
","2024-04-12 05:32:25","1","Question"
"78310043","78309206","","<p>You need to do it this way:
Add a check to ensure <code>self.target_ip</code> is present in the <code>tcp_initial_scanner</code> results before trying to access its details. The loop now iterates through ports_info and add default values for <code>target_ip</code> and <code>output_name</code>.</p>
<pre><code>import nmap3
from sys import argv

class Scanner():
    def __init__(self, target_ip, output_name):
        self.target_ip = target_ip
        self.output_name = output_name

    def initial_scan(self):
        nmap = nmap3.NmapScanTechniques()
        tcp_ports = []
        tcp_initial_scanner = nmap.nmap_tcp_scan(target=self.target_ip, args=&quot;-p- --min-rate 1500&quot;)
        if self.target_ip in tcp_initial_scanner:
            ports_info = tcp_initial_scanner[self.target_ip]['ports']
            for port_info in ports_info:
                if port_info['state'] == 'open':
                    tcp_ports.append(port_info['portid'])
        else:
            print(f&quot;No information for IP: {self.target_ip}&quot;)

        print(tcp_ports)

if __name__ == &quot;__main__&quot;:
    target_ip = argv[1] if len(argv) &gt; 1 else '127.0.0.1' 
    output_name = argv[2] if len(argv) &gt; 2 else 'output'   
    scanner = Scanner(target_ip, output_name)
    scanner.initial_scan()

</code></pre>
<p>As I tested the solution in a Jupyter Notebook, here are the details of this and tha output:</p>
<pre><code>scan_results = {
    '10.10.10.5': {
        'hostname': [],
        'macaddress': None,
        'osmatch': {},
        'ports': [
            {
                'cpe': [],
                'portid': '21',
                'protocol': 'tcp',
                'reason': 'syn-ack',
                'reason_ttl': '127',
                'scripts': [],
                'service': {
                    'conf': '3',
                    'method': 'table',
                    'name': 'ftp'
                },
                'state': 'open'
            },
            {
                'cpe': [],
                'portid': '80',
                'protocol': 'tcp',
                'reason': 'syn-ack',
                'reason_ttl': '127',
                'scripts': [],
                'service': {
                    'conf': '3',
                    'method': 'table',
                    'name': 'http'
                },
                'state': 'open'
            }
        ],
        'state': {
            'reason': 'echo-reply',
            'reason_ttl': '127',
            'state': 'up'
        }
    },
    'runtime': {
        'elapsed': '0.28',
        'exit': 'success',
        'summary': 'Nmap done at Wed Apr 10 21:02:57 2024; 1 IP address (1 host up) scanned in 0.28 seconds',
        'time': '1712797377',
        'timestr': 'Wed Apr 10 21:02:57 2024'
    },
    'stats': {
        'args': '/usr/bin/nmap -v -oX - --top-ports 10 -p21,80 --min-rate 1500 10.10.10.5',
        'scanner': 'nmap',
        'start': '1712797377',
        'startstr': 'Wed Apr 10 21:02:57 2024',
        'version': '7.94SVN',
        'xmloutputversion': '1.05'
    },
    'task_results': [
        {
            'extrainfo': '1 total hosts',
            'task': 'Ping Scan',
            'time': '1712797377'
        },
        {
            'task': 'Parallel DNS resolution of 1 host.',
            'time': '1712797377'
        },
        {
            'extrainfo': '2 total ports',
            'task': 'SYN Stealth Scan',
            'time': '1712797377'
        }
    ]
}

def extract_open_ports(scan_results):
    open_ports = []
    for ip_address, details in scan_results.items():
        if 'ports' in details:
            for port in details['ports']:
                if port['state'] == 'open':
                    open_ports.append((ip_address, port['portid'], port['service']['name']))
    return open_ports

open_ports = extract_open_ports(scan_results)
print(&quot;Open ports found:&quot;)
for ip, port, service in open_ports:
    print(f&quot;IP: {ip}, Port: {port}, Service: {service}&quot;)

</code></pre>
<p>which retunrs:</p>
<pre><code>Open ports found:
IP: 10.10.10.5, Port: 21, Service: ftp
IP: 10.10.10.5, Port: 80, Service: http
</code></pre>
","2024-04-11 11:34:14","0","Answer"
"78309206","","pulling specific values from nested dictionary","<p>i am currently writing an automation script using the nmap3 python library, but im stuck pulling values out of a nested dictionary, the idea is to pull all data related to the open ports found within the dictionary returned by the Nmap scans thank you any help would be appreciated</p>
<pre><code>import nmap3
from sys import argv

class Scanner():
    def __init__(self, target_ip, output_name):
        self.target_ip = target_ip
        self.output_name = output_name

    #scan all TCP/UDP ports, then add to global list
    def initial_scan(self):
        nmap = nmap3.NmapScanTechniques()
        tcp_ports = []
        tcp_initial_scanner = nmap.nmap_tcp_scan(target=self.target_ip, args=&quot;-p- --min-rate 1500&quot;)
        for host, port_dict in tcp_initial_scanner.items():
            for port in port_dict[3]:
                tcp_ports.append(port['portid'])

        print(tcp_ports)

if __name__ == &quot;__main__&quot;:
    target_ip = argv[1]
    output_name = argv[2]
    scanner = Scanner(target_ip, output_name)
    scanner.initial_scan()
</code></pre>
<pre><code># nmap scan results
{'10.10.10.5': {'hostname': [],
                'macaddress': None,
                'osmatch': {},
                'ports': [{'cpe': [],
                           'portid': '21',
                           'protocol': 'tcp',
                           'reason': 'syn-ack',
                           'reason_ttl': '127',
                           'scripts': [],
                           'service': {'conf': '3',
                                       'method': 'table',
                                       'name': 'ftp'},
                           'state': 'open'},
                          {'cpe': [],
                           'portid': '80',
                           'protocol': 'tcp',
                           'reason': 'syn-ack',
                           'reason_ttl': '127',
                           'scripts': [],
                           'service': {'conf': '3',
                                       'method': 'table',
                                       'name': 'http'},
                           'state': 'open'}],
                'state': {'reason': 'echo-reply',
                          'reason_ttl': '127',
                          'state': 'up'}},
 'runtime': {'elapsed': '0.28',
             'exit': 'success',
             'summary': 'Nmap done at Wed Apr 10 21:02:57 2024; 1 IP address '
                        '(1 host up) scanned in 0.28 seconds',
             'time': '1712797377',
             'timestr': 'Wed Apr 10 21:02:57 2024'},
 'stats': {'args': '/usr/bin/nmap -v -oX - --top-ports 10 -p21,80 --min-rate '
                   '1500 10.10.10.5',
           'scanner': 'nmap',
           'start': '1712797377',
           'startstr': 'Wed Apr 10 21:02:57 2024',
           'version': '7.94SVN',
           'xmloutputversion': '1.05'},
 'task_results': [{'extrainfo': '1 total hosts',
                   'task': 'Ping Scan',
                   'time': '1712797377'},
                  {'task': 'Parallel DNS resolution of 1 host.',
                   'time': '1712797377'},
                  {'extrainfo': '2 total ports',
                   'task': 'SYN Stealth Scan',
                   'time': '1712797377'}]}
</code></pre>
<p>I keep running into the following error</p>
<pre><code>  File &quot;/home/kali/Desktop/htb/devel/devel/scanner.py&quot;, line 15, in initial_scan
    for port in port_dict[3]:
                ~~~~~~~~~^^^
KeyError: 3
</code></pre>
","2024-04-11 08:58:04","0","Question"
"78305827","78305693","","<p>You can use the <a href=""https://docs.jsonata.org/path-operators#-positional-variable-binding"" rel=""nofollow noreferrer"">Positional Variable Binding</a> path operator to determine at which position in the sequence the current context item is located and then filter by that position. This will get you the first <code>N</code> items in an array.</p>
<p>For example, given your [cleaned up] data:</p>
<pre><code>{
  &quot;data&quot;: [
  {
   &quot;key&quot;: &quot;A&quot;,
   &quot;value&quot;: 310
  },
  {
   &quot;key&quot;: &quot;B&quot;,
   &quot;value&quot;: 240
  },
  {
   &quot;key&quot;: &quot;C&quot;,
   &quot;value&quot;: 110
  },
  {
   &quot;key&quot;: &quot;D&quot;,
   &quot;value&quot;: 90
  },
  {
   &quot;key&quot;: &quot;E&quot;,
   &quot;value&quot;: 60
  },
  {
   &quot;key&quot;: &quot;F&quot;,
   &quot;value&quot;: 50
  },
  {
   &quot;key&quot;: &quot;G&quot;,
   &quot;value&quot;: 30
  },
  {
   &quot;key&quot;: &quot;H&quot;,
   &quot;value&quot;: 10
  }
 ]
}
</code></pre>
<p><strong>The expression:</strong></p>
<pre><code>data#$i[$i&lt;5]
</code></pre>
<p>Will return:</p>
<pre><code>[
  {
    &quot;key&quot;: &quot;A&quot;,
    &quot;value&quot;: 310
  },
  {
    &quot;key&quot;: &quot;B&quot;,
    &quot;value&quot;: 240
  },
  {
    &quot;key&quot;: &quot;C&quot;,
    &quot;value&quot;: 110
  },
  {
    &quot;key&quot;: &quot;D&quot;,
    &quot;value&quot;: 90
  },
  {
    &quot;key&quot;: &quot;E&quot;,
    &quot;value&quot;: 60
  }
]
</code></pre>
<p>Working example: <a href=""https://try.jsonata.org/LCvBc6KT"" rel=""nofollow noreferrer"">https://try.jsonata.org/LCvBc6KT</a>_</p>
","2024-04-10 16:27:48","0","Answer"
"78305693","","Get the top n items in array with JSONata","<p>How can I get the top 5 keys with the highest values from a JSON using JSONata?</p>
<p>Let's say I have something like this. They keys aren't alphabetically ordered, but the values are descending and I want to only show the first 5 keys&amp;values:</p>
<pre><code>[
 [
  {
   &quot;key&quot;: A,
   &quot;value&quot;: 310
  },
   &quot;key&quot;: B,
   &quot;value&quot;: 240
  },
   &quot;key&quot;: C,
   &quot;value&quot;: 110
  },
   &quot;key&quot;: D,
   &quot;value&quot;: 90
  },
   &quot;key&quot;: E,
   &quot;value&quot;: 60
  },
   &quot;key&quot;: F,
   &quot;value&quot;: 50
  },
   &quot;key&quot;: G,
   &quot;value&quot;: 30
  },
   &quot;key&quot;: H,
   &quot;value&quot;: 10
  }
 ]
]
</code></pre>
<p>What I would like to get is this:</p>
<pre><code>[
  {
   &quot;key&quot;: A,
   &quot;value&quot;: 310
  },
   &quot;key&quot;: B,
   &quot;value&quot;: 240
  },
   &quot;key&quot;: C,
   &quot;value&quot;: 110
  },
   &quot;key&quot;: D,
   &quot;value&quot;: 90
  },
   &quot;key&quot;: E,
   &quot;value&quot;: 60
  }
]
</code></pre>
<p>Thank you!!!</p>
","2024-04-10 16:04:05","1","Question"
"78302206","78301854","","<p>Why can’t <code>imageTags</code> be an <code>Array</code>?</p>
<pre><code>const imageTags = <b>[</b>               // &lt;—-
  {id: 1, imageId: 9, tagId: 4},  //    |
  {id: 2, imageId: 12, tagId: 5}, //    |—- Array of Objects.
  {id: 3, imageId: 35, tagId: 6}  //    |
<b>]</b>                                 // &lt;—-</code></pre>
<p>To remove a specific <code>imageTag</code> from <code>imageTags</code> if it is an <code>Array</code>, use this procedure.</p>
<pre><code>const handleRemoveTag = (imageTagId) => {
  let index = imageTags.findIndex(element => element.id === imageTagId)
  imageTags.splice(index, 1)
}</code></pre>
","2024-04-10 05:05:02","1","Answer"
"78301854","","JavaScript ""element is not defined"" in Array.prototype.find()","<p>I am building an application in ReactJS that uses tags to organize photos.  My data structure is set up in three parts: (1) photos, (2) tags and (3) &quot;imageTags&quot; which are relationships between a photo and a tag.  For photos that have id's 9, 12, and 35 and have tags 4, 5, and 6 respectively, the imageTag object would look like this:</p>
<pre><code>const imageTags = [
  {id: 1, imageId: 9, tagId: 4},
  {id: 2, imageId: 12, tagId: 5},
  {id: 3, imageId: 35, tagId: 6}
]
</code></pre>
<p>The &quot;Tag&quot; component is passed only the imageTag id, from which it should be able to determine the image it is assigned to, and the tag that should be on that image, like this:</p>
<pre><code>// props: imagetagId={7}
const imageId = imageTags.find(element =&gt; element.id === props.imageTagId)
</code></pre>
<p>This works fine for initial render.  However, when a user tries to remove a tag from a photo,* the state of the app changes and suddenly I get the error:</p>
<pre><code>Uncaught TypeError: element is undefined
</code></pre>
<p>What I don't understand is, how can &quot;element&quot; be undefined?  My understanding is that it is walking through the imageTags object and checking each &quot;element&quot;, hence why I named the variable that way.  I know this is NOT an issue of &quot;imageTags.find(...) is undefined&quot;, it is not that the find method is returning no results.  To me the error reads as if element itself is undefined... but how is that possible?</p>
<p>Here is the function that alters imageTags when a user tries to remove a tag:</p>
<pre><code>// remove a specific imageTag from imageTags
const handleRemoveTag = (imageTagId) =&gt; {
  for (const [key, value] of Object.entries(imageTags)) {
    if (value.id == imageTagId) {
      delete imageTags[key];
    };
  };
};
</code></pre>
<p>*another important detail I have found: this error does NOT occur when removing the LAST tag in the list.  Tags can be safely removed one at a time starting from the final one to the first one, but removing a tag from the middle or beginning causes this error.  I'm not sure why that would be, but it seems relevant for troubleshooting.</p>
","2024-04-10 02:17:00","0","Question"
"78301225","78301198","","<p>This is covered in the <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.getenumerator?view=net-8.0"" rel=""nofollow noreferrer""><code>Dictionary&lt;TKey,TValue&gt;</code></a> docs:</p>
<blockquote>
<p>.NET Core 3.0+ only: The only mutating methods which do not invalidate enumerators are <code>Remove</code> and <code>Clear</code>.</p>
</blockquote>
<p>And from <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.remove?view=net-8.0"" rel=""nofollow noreferrer""><code>Dictionary&lt;TKey,TValue&gt;.Remove</code>/<code>Clear </code></a>:</p>
<blockquote>
<p>.NET Core 3.0+ only: this mutating method may be safely called without invalidating active enumerators on the <code>Dictionary&lt;TKey,TValue&gt;</code> instance. This does not imply thread safety.</p>
</blockquote>
<p>See also:</p>
<ul>
<li><a href=""https://github.com/dotnet/runtime/issues/26314"" rel=""nofollow noreferrer"">Allow <code>Dictionary&lt;K,V&gt;.Remove</code> during enumeration</a> @github</li>
</ul>
","2024-04-09 21:53:24","3","Answer"
"78301198","","Why does removing from a dictionary while iterating over it, work perfectly fine?","<p>I have read in a few places that you cannot remove from a collection while iterating over it.</p>
<p>But I can do exactly this with a dictionary, and it works perfectly fine.</p>
<pre><code>// no error
foreach (var item in myDict)
{
    myDict.Remove(item.Key);
}

// no error
foreach (var key in myDict.Keys)
{
    myDict.Remove(key);
}

var myList = new List&lt;int&gt; { 1, 2, 3, 4 };

// expected error
foreach (var item in myList)
{
    myList.Remove(item);
}
</code></pre>
","2024-04-09 21:43:02","2","Question"
"78300651","","How to allow the user to input more than one number of a specific item that is included in a dictionary","<p>In an intro to comp sci course so this is very basic code and should remain so. I was tasked with creating a vending machine with various features and two of them that i am stuck on are allowing the user to enter more than one of an item in the vending machine i.e: user inputs that they want 2 lipsticks instead of 1. The second issue is creating code that will calculate the total of the cart while also accounting for how many of a specific item they got such as totalling their cart to $18 if they got 2 lipsticks and 1 eyeshadow instead of $10 (i hope that makes sense).  My code works so far and I haven't finished inputting the menu but I feel like I need to fix the two problems before I continue to creating my next else statement for option d (checkout)</p>
<pre><code>
makeup_cart = []

makeup = {'lipstick': 8.00, 'highlight': 9.00, 'eyeshadow': 2.00, 'foundation':11.00, 'eyeliner':5.00, 'bronzer':7.00, 'lipliner':7.00,'blush':5.00, 'mascara':8.00, 'lipgloss  ': 4.00 }

while True:
        print(&quot;\nMenu:&quot;)
        print(&quot;a = Display makeup list and prices&quot;)
        print(&quot;b = Add a makeup item to cart&quot;)
        print(&quot;c = View cart&quot;)
        print(&quot;d = Checkout&quot;)
        print(&quot;e = Exit&quot;)

        choice = input(&quot;Enter your choice (a-e): &quot;)

        if choice == &quot;a&quot;:
            print(makeup) # prints makeup dictionary
        elif choice == &quot;b&quot;:
            item = input(&quot;Enter a makeup from the menu item to add: &quot;) #prompts user to input for makeup to add to cart 
            makeup_cart.append(item) #adds item to cart
            print(f&quot;your {item} has been added to the cart  &quot;) 
            print (makeup_cart) # prints current cart
        elif choice == &quot;c&quot;:
            if makeup_cart:
              print(&quot;Makeup Cart:&quot;)
              for item in makeup_cart: #prints items the user added into the cart as a list of items 
                print( item)
        else:
          print(&quot;The makeup cart is empty&quot;) # if user hasnt added anything then the cart will come up empty 
      
</code></pre>
<p>I was thinking to create another dictionary and use count+=1 so that the program takes into account the number of products the user wants. my next step is to create another else statement for option d which is checkout and thats where the second issue arises about how to calculate the total.</p>
","2024-04-09 19:16:02","0","Question"
"78299659","78299658","","<p>You can use the JSON package to read the JSON file into a dictionary and then display the output in a Jupyter Notebook using the IPython API as below:</p>
<pre class=""lang-py prettyprint-override""><code>import json
from IPython.display import display, JSON

with open(&quot;data.json&quot;) as f:
    data = json.load(f)
display(JSON(data, expanded=True))
</code></pre>
<p>Example:
<a href=""https://i.sstatic.net/e4pOB.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/e4pOB.png"" alt=""enter image description here"" /></a></p>
","2024-04-09 15:44:48","3","Answer"
"78299658","","Display JSON data or a dictionary so thats it's collapsable in a Python Jupyter Notebook","<p>Is it possible to display JSON data or a dictionary so it's collapsable and interactive (HTML display) within a Python Jupyter Notebook?</p>
","2024-04-09 15:44:48","0","Question"
"78295884","78295865","","<p>You should replace characters that are never part of a word with spaces instead of removing them. Otherwise, you could join two words separated by a special character into a single word.</p>
<pre class=""lang-py prettyprint-override""><code>textf = ''.join(char.lower() if char.isalpha() or char == ' ' or char == &quot;'&quot; 
                   else ' ' for char in text).split(' ')
</code></pre>
<p>Note that there's no need to create a list to pass to <code>join</code>; a generator expression can be used instead.</p>
","2024-04-09 02:40:06","0","Answer"
"78295865","","Codewars 4 kyu ""Most frequently used words in a text"" with Python","<p>Write a function that, given a string of text (possibly with punctuation and line-breaks), returns an array of the top-3 most occurring words, in descending order of the number of occurrences.</p>
<p>Assumptions:
A word is a string of letters (A to Z) optionally containing one or more apostrophes (') in ASCII.
Apostrophes can appear at the start, middle or end of a word ('abc, abc', 'abc', ab'c are all valid)
Any other characters (e.g. #, , / , . ...) are not part of a word and should be treated as whitespace.
Matches should be case-insensitive, and the words in the result should be lowercased.
Ties may be broken arbitrarily.
If a text contains fewer than three unique words, then either the top-2 or top-1 words should be returned, or an empty array if a text contains no words.</p>
<pre><code>def top_3_words(text):
    res = {}
    textf = ''.join([char.lower() for char in text if char.isalpha() or char == ' ' or char == &quot;'&quot;]).split(' ') # Create list with the allowed chars in lower case, join it and split it
    for char in textf:
        if char.replace(&quot;'&quot;, '').isalpha():
            if char in res:
                res[char] += 1
            else:
                res[char] = 1
    return [i for i, j in sorted(res.items(), key=lambda res: res[1], reverse=True)][:3]
</code></pre>
<p>The program passes the fixed codewars tests, as far as I know the code is correct, but, there's only a few of the random tests are returning correct, and I don't think I can see the random tests that are being apllied. Does someone understand why this is not working? or is the problem on codewars?</p>
","2024-04-09 02:31:28","0","Question"
"78294020","78293881","","<p>If you do a little input reshaping via <code>zip()</code> and a flattening comprehension then you can do:</p>
<pre class=""lang-py prettyprint-override""><code>def group_by_category(categs_names, categs_subs, text_subs):
    retval = {}
    for categs_id, categs_words in zip(categs_names, categs_subs):
        for text_sub in [cell for row in text_subs for cell in row]:
            if any(word in text_sub for word in categs_words):
                retval.setdefault(categs_id, []).append(text_sub)
    return retval

categs_cols = [
    'y',
    'r',
    'g'
]

colors = [
    ['yellow', 'yellowish'],
    ['red'],
    ['green']
]

food = [
    ['banana is yellow', 'apple is red', 'pear is green' ],
    ['lettuce is green' ,'pasta is yellowish','sugar is brown']
]

print(group_by_category(categs_cols, colors, food))
</code></pre>
<p>Giving you:</p>
<pre><code>{
    'y': ['banana is yellow', 'pasta is yellowish'],
    'r': ['apple is red'],
    'g': ['pear is green', 'lettuce is green']
}
</code></pre>
<p>To include the <code>None</code> you might try:</p>
<pre class=""lang-py prettyprint-override""><code>def group_by_category(color_ids, color_synonyms_list, phrase_lists):
    retval = {}
    for color_id, color_synonyms in zip(color_ids, color_synonyms_list):
        color_target = retval.setdefault(color_id, [])
        for phrases in phrase_lists:
            color_found = False
            for phrase in phrases:
                if any(color in phrase for color in color_synonyms):
                    color_target.append(phrase)
                    color_found = True
            if not color_found:
                color_target.append(None)
    return retval
</code></pre>
<p>though it seems of little value to just add a <code>None</code> item to the list as there is no way to tell what row of <code>food</code> that <code>None</code> refers to. I think if you wanted to keep track of that you might want a different output. Just my intuition though.</p>
","2024-04-08 16:44:26","0","Answer"
"78293973","78293881","","<p>The else statement is going to add None every time a food item does not match the current keyword. What you want instead is to check at the very end of the current category_list (i.e. the end of the outermost loop) if the list of matches is empty, then you add None. The result should look something like this:</p>
<pre class=""lang-py prettyprint-override""><code>def group_by_category(categs_names, categs_subs, text_subs):
    temp_dict = dict()

    for categ_index, category_list in enumerate(categs_subs):
        matches = [] # Here is the list of matches
        for substring in category_list:
            for sublist in text_subs:
                for text in sublist:
                    if substring in text:
                        matches.append(text)
        if len(matches) == 0: # Only add None if the search came up empty
            matches.append(&quot;None&quot;)
        temp_dict[categs_names[categ_index]] = matches
    return temp_dict

categs_cols = ['y', 'r', 'g', 'e']
food = [['banana is yellow', 'apple is red', 'pear is green' ] , ['lettuce is green' ,'pasta is yellowish','sugar is brown']]
colors = [[ 'yellow', 'yellowish'  ], ['red'], ['green'], ['empty']]
grouped_cols = group_by_category(categs_cols, colors, food)
print(grouped_cols)

&quot;&quot;&quot; &gt;&gt;&gt; {'y': ['banana is yellow', 'pasta is yellowish', 'pasta is yellowish'], 'r': ['apple is red'], 'g': ['pear is green', 'lettuce is green'], 'e': ['None']} &quot;&quot;&quot;
</code></pre>
","2024-04-08 16:33:19","0","Answer"
"78293881","","python strings from sublists in other sublists","<p>this function is supposed to check if elements from sublists in <code>colors</code> are present in the sublists contained in <code>food</code> and create a dictionary based on the colors initials contained in <code>categ_cols</code></p>
<pre class=""lang-py prettyprint-override""><code>def group_by_category(categs_names, categs_subs, text_subs):
    temp_dict = {name: [] for name in categs_names}

    for categ_index, category_list in enumerate(categs_subs):
        for substring in category_list:
            for sublist in text_subs:
                for text in sublist:
                    if substring in text:
                        temp_dict[categs_names[categ_index]].append(text)
                    else:
                        temp_dict[categs_names[categ_index]].append('None')
    return temp_dict

categs_cols = ['y', 'r', 'g']
food = [['banana is yellow', 'apple is red', 'pear is green' ] , ['lettuce is green' ,'pasta is yellowish','sugar is brown'] ]
colors = [[ 'yellow', 'yellowish'  ], ['red'], ['green']]
grouped_cols = group_by_category(categs_cols, colors, food)
print(grouped_cols)
</code></pre>
<p>the expected result is the following</p>
<pre><code>{'y': ['banana is yellow', 'pasta is yellowish'], 'r': ['None', 'apple is red'], 
 'g': ['pear is green', 'lettuce is green']}
</code></pre>
<p>but instead I am getting this</p>
<pre><code> {'y': ['banana is yellow', 'None', 'None', 'None', 'pasta is yellowish', 'None', 'None', 'None', 'None', 'None', 'pasta is yellowish', 'None'], 'r': ['None', 'apple is red', 'None', 'None', 'None', 'None'], 'g': ['None', 'None', 'pear is green', 'lettuce is green', 'None', 'None']}
</code></pre>
<p>I tried with a <code>break</code> underneath this</p>
<pre><code>if substring in text:   
    temp_dict[categs_names[categ_index]].append(text)
</code></pre>
<p>but it had no effect</p>
","2024-04-08 16:15:42","0","Question"
"78293656","78293292","","<p>You have not given us an example of <code>Descriptors.CalcMolDescriptors(mol)</code></p>
<p>output. I assumed its a dictionary with values like:</p>
<pre><code>{'val_a':1, 'val_b':2} or {'val_c':5, 'val_d':4, 'val_a':3}
</code></pre>
<p>So you can just add the result of each iteration to a list to make a list of dictionaries, then convert it to a data frame:</p>
<pre><code>import pandas as pd

def description_all(df):
    results = []
    for index, row in df.iterrows():
        mol = Chem.MolFromSmiles(df.at[index, 'smiles'])
        vals = Descriptors.CalcMolDescriptors(mol)
        results.append(vals)
        
    return pd.DataFrame(results)
</code></pre>
<p>Output:</p>
<pre><code>   val_a  val_b  val_c  val_d
0      1    2.0    NaN    NaN
1      3    NaN    5.0    4.0
</code></pre>
","2024-04-08 15:34:55","0","Answer"
"78293654","78293292","","<p>I have adapted a solution from the official documentation on <a href=""https://www.rdkit.org/docs/GettingStartedInPython.html#descriptor-calculation"" rel=""nofollow noreferrer"">Descriptor Calculation</a>.</p>
<pre class=""lang-py prettyprint-override""><code>import pandas as pd
from rdkit import Chem
from rdkit.Chem import Descriptors


# create df
data = [
        {&quot;ID&quot;: &quot;ZINC000000793995&quot;, &quot;SMILES&quot;: &quot;COc1cccc(CNc2ccc(S(=O)(=O)Nc3nccs3)cc2)c1O&quot;},
        {&quot;ID&quot;: &quot;ZINC000000579895&quot;, &quot;SMILES&quot;: &quot;COc1cc(-c2ccc(O)cc2)c(OC)c(O)c1-c1ccc(OCC=C(C)C)c(O)c1&quot;},
        {&quot;ID&quot;: &quot;ZINC000000532501&quot;, &quot;SMILES&quot;: &quot;O=C(O)c1cc2cc(Cl)ccc2o1&quot;}
       ]
df = pd.DataFrame(data)

# get mol objects from smiles
df['mol'] = df['SMILES'].apply(Chem.MolFromSmiles)

# get descriptors, convert to list for dataframe creation
list_of_descriptors = df['mol'].apply(Descriptors.CalcMolDescriptors).to_list()
full_descriptor = pd.DataFrame(list_of_descriptors)
</code></pre>
<p>Explanation:</p>
<ul>
<li>apply <code>Chem.MolFromSmiles()</code> to each element in the <code>'smiles'</code> column and store the object in a newly created <code>'Mol'</code> column.</li>
<li>Apply <code>Descriptors.CalcMolDescriptors()</code> to every <code>Mol</code> object and store the resulting dictionaries as a list of dictionaries.</li>
<li>Create <code>full_descriptors</code> DataFrame from the list of dictionaries. The keys will be used as columns.</li>
</ul>
<p>Alternatively, you can also store the mol objects in a temporary variable instead of a new column in the original DataFrame:</p>
<pre class=""lang-py prettyprint-override""><code>mols = df['smiles'].apply(Chem.MolFromSmiles)
list_of_descriptors = mols.apply(Descriptors.CalcMolDescriptors).to_list()
</code></pre>
<p>In general, if you want to apply a function to every row/column of a DataFrame/Series, the <code>.apply()</code> function is typically preferred for better readability. Furthermore, often you can use the outputted DataFrame/Series directly without any further processing.</p>
<hr />
<blockquote>
<p>Don't forget to accept this answer if it solves your problem ;)</p>
</blockquote>
","2024-04-08 15:34:39","0","Answer"
"78293292","","How can i insert x dictionary in a DataFrame?","<p>I have to insert a series of dictionaries into a dataframe that I generate via a for loop, I would like to make the keys of the dictionaries become the labels of the columns of the dataframe and insert the values ​​from my dictionary into each row.</p>
<pre><code>def description_all(df):
    full_descriptor=pd.DataFrame()
    for index, row in df.iterrows():
        mol = Chem.MolFromSmiles(df.at[index, 'smiles'])
        vals = Descriptors.CalcMolDescriptors(mol)
        ... #i need this part 
</code></pre>
<p>little code explanation</p>
<p><em>i'm currently using the rdkit library (a library for chem stuff)  bassicaly i pass a dataframe that contain a list of smile(that is like an ID for a substance) , after a conversion with the Chem.MolFromSmiles(...)  i obtain a mol class and then with the Descriptors.CalcMolDescriptors(mol) i obtain a dictionary.<br />
so i need a way to put that dictionary inside a dataframe for every for loop.</em></p>
<p>edit</p>
<pre class=""lang-py prettyprint-override""><code>from rdkit import Chem
from rdkit.Chem import Descriptors

#example of input 
data = [
        {&quot;ID&quot;: &quot;ZINC000000793995&quot;, &quot;SMILES&quot;: &quot;COc1cccc(CNc2ccc(S(=O)(=O)Nc3nccs3)cc2)c1O&quot;},
        {&quot;ID&quot;: &quot;ZINC000000579895&quot;, &quot;SMILES&quot;: &quot;COc1cc(-c2ccc(O)cc2)c(OC)c(O)c1-c1ccc(OCC=C(C)C)c(O)c1&quot;},
        {&quot;ID&quot;: &quot;ZINC000000532501&quot;, &quot;SMILES&quot;: &quot;O=C(O)c1cc2cc(Cl)ccc2o1&quot;}
       ]
df = pd.DataFrame(data)
</code></pre>
<p>the output i would expected is made by converting the the dictionary that the function  Descripots.CalcMolDescriptors(mol) give as output into a dataframe, the dictionary is made of 210 keys with a value (based on some calc that the function does) every key has only 1 value (float) so i would like to create a dataframe that is make like:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>MaxAbsEStateIndex</th>
<th>MaxEstateindex</th>
<th>MinEstateIndex</th>
<th>qed</th>
<th>SPS</th>
<th>and so on</th>
</tr>
</thead>
<tbody>
<tr>
<td>11.038589741337306</td>
<td>11.038589741337306</td>
<td>0.05306747081548657</td>
<td>-0.12265326012304678</td>
<td>0.4358923373790937</td>
<td>....</td>
</tr>
<tr>
<td>10.528754724111867</td>
<td>10.528754724111867</td>
<td>0.07197530864197499</td>
<td>-1.0765532879818591</td>
<td>0.7631338366688623</td>
<td>....</td>
</tr>
</tbody>
</table></div>
<p>So that the label are the key of the dictionary (all the dictionary that the function Descripots.CalcMolDescriptors(mol) are the same)  and every row corrispond to the value of each key in the top label</p>
","2024-04-08 14:38:48","0","Question"
"78293255","78293250","","<p>Since you want the first column to be the key of your dictionary, you must set this one as index, not <code>[1, 2]</code>. You also most likely need to <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.transpose.html"" rel=""nofollow noreferrer""><code>transpose</code></a> and use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_dict.html"" rel=""nofollow noreferrer""><code>to_dict('list')</code></a></p>
<pre><code>df = read_excel(path_sheet, header=[0], index_col=0)
my_dic = df.T.to_dict('list')
</code></pre>
<p>Output:</p>
<pre><code>{'a' : ['b', 'c'], 'd' : ['e', 'f']}
</code></pre>
<p>For tuples:</p>
<pre><code>df = read_excel(path_sheet, header=[0], index_col=0)
my_dict = df.agg(tuple, axis=1).to_dict()
</code></pre>
<p>Output:</p>
<pre><code>{'a ': ('b ', 'c'), 'd ': ('e ', 'f')}
</code></pre>
","2024-04-08 14:33:18","1","Answer"
"78293250","","Create Dict in Python from excel data","<p>I want to create a dictionary from the values from excel cells. For example, the table is below:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Column 1</th>
<th>Column 2</th>
<th>Column C3</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>d</td>
<td>e</td>
<td>f</td>
</tr>
</tbody>
</table></div>
<p>and I want to create a dictionary, like below, that consists of the values coming from the excel cells</p>
<pre><code>{'a' : ('b', 'c'), 'd' : ('e', 'f')}
</code></pre>
<p>I tried using pandas as described in my code below.</p>
<pre><code>path_sheet = 'path_sheet_name.xls'
df = read_excel(path_sheet, header=[0], index_col=[1,2])
my_dic = df.to_dict()
print(my_dic)
</code></pre>
<p>However, it is returning:</p>
<pre><code>{'Column 1': {('b', 'c') : 'a', ('e', 'f') : 'd'}}
</code></pre>
<p>I am having a hard time to modify this. Any idea on how I can create this dictionary?</p>
","2024-04-08 14:31:43","1","Question"
"78290518","78290280","","<p>This loop will never run more than once because it ends with a <code>break</code>:</p>
<pre><code>for key, value in number_dict.items():
    if char == key:
        print(number_dict[key], end = ' ')
    elif int(char) == key:
        print(number_dict[key], end = ' ')
    break
</code></pre>
<p>The <code>break</code> doesn’t make any sense. Once you remove that, you get to the main problem, which is that if <code>int(char)</code> throws an exception (like it does when you pass it the <code>&quot;-&quot;</code> or <code>&quot;.&quot;</code> characters), you’re catching the exception outside the loop. This also means that the loop doesn’t run for the remaining items of the dictionary.</p>
<p>To understand what’s happening better, using a debugger, step through the loop with <code>char = &quot;-&quot;</code>.</p>
<p>Now, you <em>can</em> fix this by catching the exception inside the loop:</p>
<pre><code>for key, value in number_dict.items():
    if char == key:
        print(number_dict[key], end = ' ')
    else:
        try:
            if int(char) == key:
                print(number_dict[key], end = ' ')
        except ValueError:
            pass  # do nothing
</code></pre>
<p>But none of this is how you should use a dictionary. Dictionaries are for looking things up directly by key; by iterating over it to check every key, you’re defeating the point. To clean up your code, I would recommend starting by making your dict keys homogeneous, i.e. all strings instead of a mix of strings and integers:</p>
<pre><code>number_dict = {'1': 'One', '2': 'Two', '3': 'Three', '4': 'Four', '5': 'Five', '6': 'Six', '7': 'Seven', '8': 'Eight', '9': 'Nine', '0': 'Zero', '-': 'Negative', '.': 'Point'}
</code></pre>
<p>Now you can get the value corresponding to <em>any</em> character, regardless of whether it’s a digit, with <code>number_dict[char]</code>.</p>
<p>It’s also good practice to avoid throwing and catching exceptions when possible, and when you do have to, to make the <code>try</code> cover as little as possible – otherwise, you risk catching things you didn’t expect and mishandling them.</p>
<pre><code>while True:
    number = input('Enter a number: ')

    # can check this ahead of time! helps limit the `try` responsibilities
    if ',' in number:
        print('Please try again without entering commas.')
        continue

    # much smaller `try`!
    try:
        float(number)
    except ValueError:
        print(f'&quot;{number}&quot; is not a valid number. Please try again.')
        continue

    print(f'As Text:', end = ' ')
    for char in number:
        print(number_dict[char], end = ' ')
</code></pre>
<p>Finally, note that <code>float</code> accepts some things you didn’t account for, like constants <code>&quot;-inf&quot;</code>/<code>&quot;inf&quot;</code>/<code>&quot;nan&quot;</code>, scientific notation <code>&quot;1e-1&quot;</code>, and whitespace. You should use stricter validation, which also means not needing a <code>try</code> at all (good!). Here’s an example of doing it with regular expressions:</p>
<pre><code>import re

number_dict = {'1': 'One', '2': 'Two', '3': 'Three', '4': 'Four', '5': 'Five', '6': 'Six', '7': 'Seven', '8': 'Eight', '9': 'Nine', '0': 'Zero', '-': 'Negative', '.': 'Point'}

while True:
    number = input(&quot;Enter a number: &quot;)

    if &quot;,&quot; in number:
        print(&quot;Please try again without entering commas.&quot;)
        continue

    if not re.fullmatch(r&quot;-?(?!\.?\Z)[0-9]*(?:\.[0-9]*)?&quot;, number):
        print(f&quot;{number!r} is not a valid number. Please try again.&quot;)
        continue

    text = &quot; &quot;.join(number_dict[char] for char in number)
    print(f&quot;As Text: {text}&quot;)
</code></pre>
<p>but since you probably don’t know regular expressions yet, try writing a strict validation function as an exercise, with a loop and the <code>str.isdigit</code> method you’ve already used. Consider questions like whether <code>&quot;1.&quot;</code> should print “One Point” or “One” or an error!</p>
","2024-04-08 06:14:38","2","Answer"
"78290280","","Why is the value in this dictionary's list of tuples not printing?","<p>I am trying to print the value of a key when a float string is entered.</p>
<p>Here's my code:</p>
<pre><code>number_dict = {1: 'One', 2: 'Two', 3: 'Three', 4: 'Four', 5: 'Five', 6: 'Six', 7: 'Seven', 8: 'Eight', 9: 'Nine', 0: 'Zero', '-': 'Negative', '.': 'Point'}

number = input('Enter a number: ')
print(f'As Text:', end = ' ')
for char in number:
    for key, value in number_dict.items():
        if char == key:
            print(value, end = ' ')
        elif int(char) == key:
            print(value, end = ' ')
</code></pre>
<p>What am I doing wrong? Why aren't the values associated with the '.' and '-' keys printing? They should be accessed in the elif condition.</p>
<p>There is already a <code>try</code> and <code>except</code> block to account for the ValueError. I just didn't want to post the code in its entirety, but I am aware of the error and already accounted for.</p>
<p>Thank you for your help in advance!!</p>
","2024-04-08 04:58:06","-3","Question"
"78287347","78286642","","<p>Try this:</p>
<pre><code>data = {'OverallRatio': ['1:0.25; 3:0.33; 5:0.5', '5:0.25; 6:0.75', '1:0.5; 6:0.33', '2:0.25; 4:0.5']}
df = pd.DataFrame(data)

df['A'] = 0
df['B'] = 0
df['C'] = 0
df['D'] = 0
df['E'] = 0
df['F'] = 0

# Calculate ratios
for index, row in df.iterrows():
    ratios = row['OverallRatio'].split('; ')
    for ratio in ratios:
        idx, value = ratio.split(':')
        idx = int(idx)
        value = float(value)
        if idx == 1:
            df.at[index, 'A'] = value
        elif idx == 2:
            df.at[index, 'B'] = value
        elif idx == 3:
            df.at[index, 'C'] = value
        elif idx == 4:
            df.at[index, 'D'] = value
        elif idx == 5:
            df.at[index, 'E'] = value
        elif idx == 6:
            df.at[index, 'F'] = value

print(df)
</code></pre>
<p>Output:</p>
<pre><code>            OverallRatio     A     B     C    D     E     F
0  1:0.25; 3:0.33; 5:0.5  0.25  0.00  0.33  0.0  0.50  0.00
1         5:0.25; 6:0.75  0.00  0.00  0.00  0.0  0.25  0.75
2          1:0.5; 6:0.33  0.50  0.00  0.00  0.0  0.00  0.33
3          2:0.25; 4:0.5  0.00  0.25  0.00  0.5  0.00  0.00
</code></pre>
","2024-04-07 09:41:28","0","Answer"
"78287236","78286642","","<p>Try:</p>
<pre class=""lang-py prettyprint-override""><code>x = df[&quot;OverallRatio&quot;].str.extractall(r&quot;(\S+):([^;]+)&quot;).droplevel(1).reset_index()
x = (
    x.pivot(index=&quot;index&quot;, columns=0, values=1)
    .fillna(0)
    .rename_axis(columns=None, index=None)
)
x.columns = [chr(ord(&quot;A&quot;) + (int(c) - 1)) for c in x.columns]
print(pd.concat([df, x], axis=1))
</code></pre>
<p>Prints:</p>
<pre class=""lang-none prettyprint-override""><code>            OverallRatio     A     B     C    D     E      F
0  1:0.25; 3:0.33; 5:0.5  0.25     0  0.33    0   0.5      0
1        5:0.25; 6: 0.75     0     0     0    0  0.25   0.75
2          1:0.5; 6:0.33   0.5     0     0    0     0   0.33
3          2:0.25; 4:0.5     0  0.25     0  0.5     0      0
</code></pre>
","2024-04-07 09:05:04","0","Answer"
"78286642","","Python dataframe string extraction from a column and assign it to required columns","<p>I have a dataframe with field OverallRatio, and other six ratios (Lets say A, B, C, D, E, F) had to be calculated based on this, looking at the index splitting by the ;. For example the calculation for A,B, C, D, E,F should be based as:
<a href=""https://i.sstatic.net/nEW5V.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<pre><code>OverallRatio               A          B       C      D        E         F
1:0.25; 3:0.33; 5:0.5     0.25        0       0.33    0       0.5       0
5:0.25; 6: 0.75            0          0        0      0       0         0.75
1:0.5; 6:0.33              0.5        0        0      0       0         0.33
2:0.25; 4:0.5              0          0.25     0      0.5     0         0
</code></pre>
","2024-04-07 04:28:21","0","Question"
"78286512","78286494","","<p>The fact that arguments are evaluated from left to right is specified. For example, the evaluation order <a href=""https://docs.python.org/3/reference/expressions.html#evaluation-order"" rel=""nofollow noreferrer"">section</a> of the documentation says that the subexpressions in</p>
<pre><code>expr1(expr2, expr3, *expr4, **expr5)
</code></pre>
<p>are evaluated in the order suggested by their numeric suffixes.</p>
<p>However, it is <em>not</em> specified whether <em>unpacking</em> a <code>*</code>- or <code>**</code>-unpacked argument happens before evaluating later arguments. The details of unpacking order were even <a href=""https://stackoverflow.com/questions/70404485/how-did-printa-a-pop0-change"">changed by accident</a> in Python 3.9.</p>
<p>Thus, your first <code>dict</code> call</p>
<pre><code>dict(z=x.pop(&quot;b&quot;), **x)
</code></pre>
<p>must evaluate <code>x.pop(&quot;b&quot;)</code> before evaluating <code>x</code>, and <code>x</code> must of course be evaluated before it can be unpacked, so the behavior of this expression is guaranteed.</p>
<p>However, for your second <code>dict</code> call:</p>
<pre><code>dict(**x, z=x.pop(&quot;b&quot;) )
</code></pre>
<p><code>x</code> must be evaluated before <code>x.pop(&quot;b&quot;)</code>, but there is no specified guarantee for whether it will be <em>unpacked</em> before evaluating <code>x.pop(&quot;b&quot;)</code>, so the behavior of this expression is not guaranteed.</p>
<p>In fact, this expression is one of the cases impacted by the Python 3.9 changes, so if you try your code on Python 3.8:</p>
<pre><code>Python 3.8.10 (default, Jun 22 2022, 20:18:18) 
[GCC 9.4.0] on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; x={&quot;a&quot;:1, &quot;b&quot;:2, &quot;c&quot;:4}
&gt;&gt;&gt; dict(**x, z=x.pop(&quot;b&quot;))
{'a': 1, 'c': 4, 'z': 2}
</code></pre>
<p>you get different results.</p>
","2024-04-07 02:59:57","2","Answer"
"78286494","","A question about Python's pop and what does the grammar have to say?","<p>This is something I tried out in <code>ipython</code> the behavior is quite clear: when creating the  dictionary in lines 3 and 6, the dictionaries are created as if invoked by <code>dict(**kwargs)</code> and the kwargs are being processed left to right but is it a CPython implementation or is the behavior actually specified in Python's grammar?</p>
<pre class=""lang-py prettyprint-override""><code>Python 3.12.2 (v3.12.2:6abddd9f6a, Feb  6 2024, 17:02:06) [Clang 13.0.0 (clang-1300.0.29.30)]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.22.2 -- An enhanced Interactive Python. Type '?' for help.

In [1]: x={&quot;a&quot;:1, &quot;b&quot;:2, &quot;c&quot;:4}

In [2]: y= dict(z=x.pop(&quot;b&quot;), **x)

In [3]: y
Out[3]: {'z': 2, 'a': 1, 'c': 4}

In [4]: x
Out[4]: {'a': 1, 'c': 4}

In [5]: x={&quot;a&quot;:1, &quot;b&quot;:2, &quot;c&quot;:4}

In [6]: y= dict(**x, z=x.pop(&quot;b&quot;) )

In [7]: y
Out[7]: {'a': 1, 'b': 2, 'c': 4, 'z': 2}

In [8]: x
Out[8]: {'a': 1, 'c': 4}

</code></pre>
","2024-04-07 02:49:14","0","Question"
"78285318","78284829","","<p>keep length one less in  every <code>range</code> i.g <code>range(len(data[&quot;DATE&quot;])-1)</code></p>
","2024-04-06 17:35:59","0","Answer"
"78285299","78284829","","<p>Don't have enough points to add a comment, so adding as answer.
Can you check if this is applicable for your file.
From documentation</p>
<pre><code>If csvfile is a file object, it should be opened with newline=''
</code></pre>
<p>In code that will be -</p>
<pre><code>with open(filename, newline='') as file:
</code></pre>
","2024-04-06 17:30:42","0","Answer"
"78285019","78278489","","<p>Let's see... 🤔
Instead of creating and returning multiple dictionaries at each recursion level,
you need to reclusively replace dictionary keys in-place based on a mapping:</p>
<pre><code>def replace_keys_in_place(old_dict, key_dict):
    def replace_keys_recursive(current_dict, key_mapping):
        for old_key in list(current_dict.keys()):
            if old_key in key_mapping:
                new_key = key_mapping[old_key] if isinstance(key_mapping[old_key], str) else old_key
                if new_key != old_key:
                    current_dict[new_key] = current_dict.pop(old_key)
                if isinstance(current_dict[new_key], dict):
                    replace_keys_recursive(current_dict[new_key], key_mapping.get(old_key, key_mapping))
            elif isinstance(current_dict[old_key], dict):
                replace_keys_recursive(current_dict[old_key], key_mapping)
    replace_keys_recursive(old_dict, key_dict) 
    return old_dict
</code></pre>
","2024-04-06 16:00:10","2","Answer"
"78284829","","Index error trying to turn csv into dictionary lists","<p>I am new to coding so this might be a foolish problem. I can't understand how the list index can be out range. The variable 'I' range is supposed to be the number of rows in the file and 'title' go as long as there are titles in 'headers'. But I am getting an error message: &quot;data[title].append(row[i])
IndexError: list index out of range&quot;</p>
<p>Thank you.</p>
<p>The csv file looks like this:</p>
<pre class=""lang-none prettyprint-override""><code>DATE,OPEN,HIGH,LOW,CLOSE,SPREAD
2024-03-25 00:00,1.08071,1.08073,1.08068,1.08072,95
2024-03-25 00:01,1.08074,1.08082,1.08074,1.08079,73
2024-03-25 00:02,1.0808,1.08094,1.08078,1.08089,172
2024-03-25 00:03,1.0809,1.08094,1.08085,1.08092,167
2024-03-25 00:04,1.08093,1.08093,1.0809,1.08092,62
2024-03-25 00:05,1.08091,1.08092,1.08088,1.08091,27
2024-03-25 00:06,1.08091,1.08094,1.08088,1.08088,70
2024-03-25 00:07,1.08087,1.08096,1.08087,1.08095,25
2024-03-25 00:08,1.08096,1.08096,1.08092,1.08092,65
2024-03-25 00:09,1.08092,1.08092,1.08087,1.08089,68
2024-03-25 00:10,1.08088,1.08088,1.08079,1.08079,28
</code></pre>
<p>and here is my code:</p>
<pre><code>import csv
import datetime

import matplotlib.pyplot as plt


filename = &quot;pathtocsv.csv&quot;

with open(filename, &quot;r&quot;) as file:
    csv_reader = csv.reader(file)
    headers = next(csv_reader)
   
    data = {}
    for title in headers:
        data[title] = []

    for row in csv_reader:
        for i, title in enumerate(headers):
            data[title].append(row[i])
    
for i in range(len(data[&quot;DATE&quot;])):
    data[&quot;DATE&quot;][i] = datetime.datetime.strptime(data[&quot;DATE&quot;][i],'%Y-%m-%d %H:%M')
        
for i in range(len([&quot;OPEN&quot;])):
    data[&quot;OPEN&quot;][i] = float([&quot;OPEN&quot;][i])

for i in range(len([&quot;CLOSE&quot;])):
    data[&quot;CLOSE&quot;][i] = float([&quot;CLOSE&quot;][i])
   

fig, ax = plt.subplots()
ax.plot([&quot;DATE&quot;], [&quot;OPEN&quot;])
ax.plot([&quot;DATE&quot;], [&quot;CLOSE&quot;])
fig.autofmt_xdate()
fig.show()
</code></pre>
","2024-04-06 15:01:04","0","Question"
"78284415","78284077","","<p>Much, much better 🤓</p>
<p>You'll need to make sure that for each part of the <code>Header</code> dictionary structure, we're not only iterating over the keys but also get into their nested structure to retrieve <code>udsDtcValue</code>, <code>FaultType</code>, <code>description</code> and <code>failure_name</code> from <code>Nested_Dict</code>.</p>
<pre><code>def get_value_from_nested_dict(nested_dict, path):
    for key in path:
        nested_dict = nested_dict.get(key, {})
        if not nested_dict:
            return None
    return nested_dict
def create_new_dict(nested_dict, header, subkey_list):
    new_dict = {'dtc_all': {}}
    path_mappings = {'DiagnosticTroubleCodeUds': ['identification'], 'dtcProps': ['identification'], 'DiagnosticTroubleCodeObd': ['functional_conditions']}
    for sub_key in subkey_list:
        sub_dict_structure = {}
        for header_key, inner_keys in header['dtc_all'].items():
            header_sub_dict = {}
            for inner_key in inner_keys.keys():
                base_path = ['candela_samples_generic', 'drc_dtcs', 'dtc_all', sub_key]
                specific_path = path_mappings.get(header_key, [])
                value_path = base_path + specific_path + [inner_key]
                value = get_value_from_nested_dict(nested_dict, value_path)
                if value is not None:
                    header_sub_dict[inner_key] = value
            if header_sub_dict:
                sub_dict_structure[header_key] = header_sub_dict
        if sub_dict_structure:
            new_dict['dtc_all'][sub_key] = sub_dict_structure
    return new_dict
        
</code></pre>
","2024-04-06 12:46:05","4","Answer"
"78284077","","Iterate over values of nested dictionary","<pre><code>Nested_Dict =
    {'candela_samples_generic': {'drc_dtcs': {'domain_name': 'TEMPLATE-DOMAIN', 'dtc_all':{ 
    '0x930001': {'identification': {'udsDtcValue': '0x9300', 'FaultType': '0x11', 'description': 'GNSS antenna short to ground'}, 
    'functional_conditions': {'failure_name': 'short_to_ground', 'mnemonic': 'DTC_GNSS_Antenna_Short_to_ground'}},
    '0x212021': {'identification': {'udsDtcValue': '0x2120', 'FaultType': '0x21', 'description': 'ECU internal Failure'},
    'functional_conditions': {'failure_name': 'short_to_ground', 'mnemonic': 'DTC_GNSS_Antenna_Short_to_ground'}}}}}}
   
 Header = {
        'dtc_all': {
            'DiagnosticTroubleCodeUds': {'udsDtcValue': None, 'FaultType': None},
            'dtcProps': {'description': None},
            'DiagnosticTroubleCodeObd': {'failure_name': None}   
        }
    }
    
SubkeyList = ['0x930001','0x212021']

Expected Output:    
New_Dict= 
{'dtc_all': 
{'0x930001': {'DiagnosticTroubleCodeUds': {'udsDtcValue': '0x9300', 'FaultType': '0x11'}, 'dtcProps':{'description': 'GNSS antenna short to ground'}, 'DiagnosticTroubleCodeObd': {'failure_name':short_to_ground}}},
{'0x212021': {'DiagnosticTroubleCodeUds': {'udsDtcValue': '0x2120', 'FaultType': '0x21'}, 'dtcProps':{'description': 'ECU internal Failure'}, 'DiagnosticTroubleCodeObd': {'failure_name':short_to_ground}}}}
</code></pre>
<p>Reference question: <a href=""https://stackoverflow.com/questions/78279835/aggregating-inputs-into-a-consolidated-dictionary/78280340?noredirect=1#comment138011985_78280340"">Aggregating Inputs into a Consolidated Dictionary</a></p>
<p>Here Want to iterate inside the header dictionary over the values of the header dictionary, but with my code it is iterating over keys of dict not the values of dict.
Take an element from the SubkeyList and one header keys at a time from the dictionary (there can be multiple header keys like dtc_all). Iterate inside the header dictionary over the values of the dictionary, such as 'udsDtcValue'.</p>
<pre><code>For example:
  Main_Key = dtc_all
  Sub_Key = 0x212021
  Element = udsDtcValue
</code></pre>
<p>Pass these parameters to the function get_value_nested_dict(nested_dict, Main_Key, Sub_Key, Element). This function will return the element value. get_value_nested_dict func which is working as expected for Element value retriaval I've posted for the reference. At the same time, create a new dictionary and update the element value at the right place, such as 'udsDtcValue': '0x9300'. Also, ensure that the sequence of keys remains the same as in the header. Similarly, iterate inside the header dictionary over all the values of the dictionary, such as FaultType, description, until failure_name. Repeat these iterations for each element in the SubkeyList and append the results in the new_dict in the same sequence. Any suggestions on how to proceed?</p>
<pre><code>def create_new_dict(Nested_Dict, Header, SubkeyList):
    new_dict = {}
    for sub_key in SubkeyList:
        sub_dict = {}
        for element, value in Header['dtc_all'].items():
            value = get_value_nested_dict(Nested_Dict, 'dtc_all', sub_key, element)
            if value:
                sub_dict[element] = value[0]
        new_dict[sub_key] = sub_dict
    return new_dict
</code></pre>
","2024-04-06 10:49:47","2","Question"
"78283503","78283321","","<p>The warning message is quite explicit. Looking at the documentation about <a href=""https://developer.apple.com/documentation/swiftui/foreach"" rel=""nofollow noreferrer"">ForEach</a>, this component needs a unique ID to distinguish the elements that are passed in. In this scenario, you're passing string itself by <code>\.self</code>.</p>
<blockquote>
<p>[&quot;B&quot;, &quot;A&quot;, &quot;L&quot;, &quot;A&quot;, &quot;N&quot;, &quot;C&quot;, &quot;E&quot;]</p>
</blockquote>
<p>You can see &quot;A&quot; character appears twice within the array, that's why the warning occurs.</p>
<hr />
<p>As @workingdog mentioned above, you need to create a model that fully conforms to <code>Identifiable</code>, something like:</p>
<pre><code>struct CharacterElement: Identifiable {
    var id = UUID()
    var value: String
}
</code></pre>
<p>After that, you're able to remove <code>\.self</code> within <code>ForEach</code>:</p>
<pre><code>var words = &quot;BALANCE&quot;.map { CharacterElement(value: String($0)) }

var body: some View {
    ForEach(words) {
        //TODO:
    }
}
</code></pre>
","2024-04-06 06:53:39","1","Answer"
"78283321","","Why do duplicate elements in a SwiftUI array cause a warning?","<p>For a word game, I am using .map to create an array of the letters of a guessed word,
for example:</p>
<pre><code>var guessWordArray = &quot;BALANCE&quot;.map{String($0)}
</code></pre>
<p>which creates the array</p>
<pre><code>[&quot;B&quot;, &quot;A&quot;, &quot;L&quot;, &quot;A&quot;, &quot;N&quot;, &quot;C&quot;, &quot;E&quot;]
</code></pre>
<p>but then I get the warning,</p>
<blockquote>
<p>&quot;...the ID A occurs multiple times within the collection, this will give undefined results.&quot;</p>
</blockquote>
<p>I don't understand why an array with duplicate elements would &quot;give undefined results.&quot; Is this an improper use of an array? Is there an alternative I should use?</p>
<p>I would expect an array not to 'care' what elements are in it and whether they are all the same, different, or any mix. I am obviously missing something.</p>
","2024-04-06 05:22:27","0","Question"
"78282557","78282525","","<p>You're trying to change <code>available</code> value on the title that doesn't exist in the <code>catalog</code>. Instead, create new one:</p>
<pre class=""lang-py prettyprint-override""><code>def update_availability(catalog, title, new_availability):
    if title in catalog:
        catalog[title][&quot;available&quot;] = new_availability
    else:
        # at this point title isn't in the catalog, so create one:
        catalog[title] = {&quot;available&quot;: False}  # or perhaps you mean `catalog[title] = {&quot;available&quot;: new_availability}`
</code></pre>
","2024-04-05 22:17:21","0","Answer"
"78282525","","update a value in a dictionary using python","<p>this is a challenge on the coddy.tech website:</p>
<p>Create a function named update_availability that allows you to update the availability status of a book in a library catalog. The function should take the library catalog, a title, and a new availability status as input parameters and update the availability status of the specified book in the catalog</p>
<pre><code>def update_availability(catalog, title, new_availability):
   
        if title in catalog:
            catalog[title]['available'] = new_availability
        else:
            catalog[title]['available'] = False
</code></pre>
<p>a few of the test cases were passed but not all for some reason.</p>
<p>error code:</p>
<pre><code>Traceback (most recent call last):
  File &quot;/tmp/NBGYDzQ2cahiwemgBpKXCVHd1l42/main.py&quot;, line 26, in &amp;lt;module&amp;gt;
    eval(line)
  File &quot;&amp;lt;string&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
  File &quot;/tmp/NBGYDzQ2cahiwemgBpKXCVHd1l42/main.py&quot;, line 8, in update_availability
    catalog[title]['available'] = False
KeyError: 'Harry Potter'
</code></pre>
","2024-04-05 22:07:54","1","Question"
"78280340","78279835","","<ol>
<li><p>Initialize an empty dictionary <code>new_dict</code></p>
</li>
<li><p>Iterate over the <code>SubkeyList</code></p>
</li>
<li><p>For each <code>sub_key</code> in <code>SubkeyList</code> create a new dictionary: <code>sub_dict</code></p>
</li>
<li><p>For each <code>element</code> in the <code>Header['dtc_all']</code> get the value from the <code>Nested_Dict</code> using <code>get_value_nested_dict</code> and add it to <code>sub_dict</code></p>
</li>
<li><p>Add <code>sub_dict</code> to <code>new_dict</code> under <code>sub_key</code></p>
<pre><code>def create_new_dict(Nested_Dict, Header, SubkeyList):
    new_dict = {}
    for sub_key in SubkeyList:
        sub_dict = {}
        for element, value in Header['dtc_all'].items():
            value = get_value_nested_dict(Nested_Dict, 'dtc_all', sub_key, element)
            if value:
                sub_dict[element] = value[0]
        new_dict[sub_key] = sub_dict
    return new_dict
</code></pre>
<p>New_dict = create_new_dict(Nested_Dict, Header, SubkeyList)</p>
</li>
</ol>
","2024-04-05 13:45:31","2","Answer"
"78279934","78279592","","<p>Seems like there is a correlation between the <code>keys/values</code> of the changed values and the <code>left/right</code> part of your expected dataframe. If so, my proposition would be to <a href=""https://docs.python.org/3/library/re.html#re.findall"" rel=""nofollow noreferrer""><code>findall</code></a> the fields, build a <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html"" rel=""nofollow noreferrer""><code>DataFrame</code></a> for both sides and <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.join.html"" rel=""nofollow noreferrer""><code>join</code></a> them :</p>
<pre><code>import re, json

obj = json.loads(inp.removeprefix('""values_changed"": '))
# or, obj = inp[""values_changed""] if `inp` is a valid dict

<b>ldf</b> = pd.DataFrame(
    [
        re.findall(r""([^[\]']+)"", k)[1:] for k in obj.<b>keys</b>()
    ], columns=[""product"", ""parent-field"", ""field"", ""field""],
)

<b>rdf</b> = pd.DataFrame(obj.<b>values</b>())

out = ldf.join(rdf)</code></pre>
<p>Output :</p>
<pre><code>  product parent-field   field   field  new_value  old_value
0   prod1        p_col   c_col    None  -2.866711      -2.75
1   prod1      p_col23    None    None   1.000000      54.00
2   prod1        p_col  c_col2  c_col5   1.678000       5.12
</code></pre>
","2024-04-05 12:37:39","2","Answer"
"78279835","","Aggregating Inputs into a Consolidated Dictionary","<pre><code>Nested_Dict =
{'candela_samples_generic': {'drc_dtcs': {'domain_name': 'TEMPLATE-DOMAIN', 'dtc_all':{ 
'0x930001': {'identification': {'udsDtcValue': '0x9300', 'FaultType': '0x11', 'description': 'GNSS antenna short to ground'}, 
'functional_conditions': {'failure_name': 'short_to_ground', 'mnemonic': 'DTC_GNSS_Antenna_Short_to_ground'}},
'0x212021': {'identification': {'udsDtcValue': '0x2120', 'FaultType': '0x21', 'description': 'ECU internal Failure'},
'functional_conditions': {'failure_name': 'short_to_ground', 'mnemonic': 'DTC_GNSS_Antenna_Short_to_ground'}}}}}}
</code></pre>
<pre><code>Header = {
    'dtc_all': {
        'DiagnosticTroubleCodeUds': {'udsDtcValue': None, 'FaultType': None},
        'dtcProps': {'description': None},
        'DiagnosticTroubleCodeObd': {'failure_name': None}   
    }
}
</code></pre>
<pre><code>SubkeyList = ['0x930001','0x240001']
</code></pre>
<p>Take an element from the SubkeyList and one header keys at a time from the dictionary (there can be multiple header keys like dtc_all).
Iterate inside the header dictionary over the values of the dictionary, such as 'udsDtcValue'.</p>
<pre><code>For example:
    Main_Key = dtc_all
    Sub_Key = 0x212021
    Element = udsDtcValue
</code></pre>
<p>Pass these parameters to the function get_value_nested_dict(nested_dict, Main_Key, Sub_Key, Element). This function will return the element value.
get_value_nested_dict func which is working as expected for Element value retriaval I've posted for the reference.
At the same time, create a new dictionary and update the element value at the right place, such as 'udsDtcValue': '0x9300'.
Also, ensure that the sequence of keys remains the same as in the header.
Similarly, iterate inside the header dictionary over all the values of the dictionary, such as FaultType, description, until failure_name.
Repeat these iterations for each element in the SubkeyList and append the results in the new_dict in the same sequence.
Any suggestions on how to proceed?</p>
<p>Output: New_Dict should look like this:</p>
<pre><code>New_Dict= 
{'dtc_all': 
{'0x930001': {'DiagnosticTroubleCodeUds': {'udsDtcValue': '0x9300', 'FaultType': '0x11'}, 'dtcProps':{'description': 'GNSS antenna short to ground'}, 'DiagnosticTroubleCodeObd': {'failure_name':short_to_ground}}},
{'0x212021': {'DiagnosticTroubleCodeUds': {'udsDtcValue': '0x2120', 'FaultType': '0x21'}, 'dtcProps':{'description': 'ECU internal Failure'}, 'DiagnosticTroubleCodeObd': {'failure_name':short_to_ground}}}}

</code></pre>
<pre><code>def get_value_nested_dict(nested_dict, main_key, sub_key, element):
    results = []
    def search_for_element(sub_dict, looking_for_element):
        if isinstance(sub_dict, dict):
            for k, v in sub_dict.items():
                if k == element and looking_for_element:
                    results.append(v)
                else:
                    search_for_element(v, looking_for_element)
    def search_nested_dict(current_dict):
        if isinstance(current_dict, dict):
            for key, value in current_dict.items():
                if key == main_key:
                    if sub_key in value:
                        search_for_element(value[sub_key], True)
                    else:
                        search_for_element(value, False)
                else:
                    search_nested_dict(value)
    search_nested_dict(nested_dict)
    return results
</code></pre>
","2024-04-05 12:17:43","1","Question"
"78279805","78279592","","<p>You could convert the json to dictionary, then <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.extractall.html"" rel=""nofollow noreferrer""><code>extractall</code></a> the names from the strings in the index:</p>
<pre><code>import json

s = '''&quot;values_changed&quot;: {
    &quot;root['prod1']['p_col']['c_col']&quot;: {
        &quot;new_value&quot;: -2.866711109999983,
        &quot;old_value&quot;: -2.75
    },
    &quot;root['prod1']['p_col23']&quot;: {
        &quot;new_value&quot;: 1,
        &quot;old_value&quot;: 54
    },
    &quot;root['prod1']['p_col']['c_col2']['c_col5']&quot;: {
        &quot;new_value&quot;: 1.678,
        &quot;old_value&quot;: 5.12
    }
}'''

df = pd.DataFrame.from_dict(json.loads(f'{{{s}}}')['values_changed'],
                            orient='index')

# mapper to name the columns
# all other levels will default to &quot;field&quot;
names = {0: 'product', 1: 'parent-field'}

df = (df.index.str.extractall(&quot;\['(\w+)'\]&quot;)[0].unstack('match')
        .rename(columns=lambda x: names.get(x, 'field')) # optional
        .join(df.reset_index(drop=True))
     )
</code></pre>
<p>If <code>values_changed</code> is already a dictionary, then the first step should be: <code>df = pd.DataFrame.from_dict(values_changed, orient='index')</code></p>
<p>Output:</p>
<pre><code>  product parent-field   field   field  new_value  old_value
0   prod1        p_col   c_col     NaN  -2.866711      -2.75
1   prod1      p_col23     NaN     NaN   1.000000      54.00
2   prod1        p_col  c_col2  c_col5   1.678000       5.12
</code></pre>
","2024-04-05 12:09:05","2","Answer"
"78279790","78279592","","<p>So, one way to achieve this is the following, but the solution I provide works only if you <code>json</code> has the structure that you presented. If it differs, you'll need to adapt it to your new layout:</p>
<pre><code>import pandas as pd

values_changed = {
    &quot;root['prod1']['p_col']['c_col']&quot;: {
        &quot;new_value&quot;: -2.866711109999983,
        &quot;old_value&quot;: -2.75
    },
    &quot;root['prod1']['p_col23']&quot;: {
        &quot;new_value&quot;: 1,
        &quot;old_value&quot;: 54
    },
    &quot;root['prod1']['p_col']['c_col2']['c_col5']&quot;: {
        &quot;new_value&quot;: 1.678,
        &quot;old_value&quot;: 5.12
    }
}

def process_change(key, change):
    parts = [part for part in key.split(&quot;']['&quot;) if part]
    
    parts[0] = parts[0].replace(&quot;root['&quot;, &quot;&quot;)
    parts[-1] = parts[-1].replace(&quot;']&quot;, &quot;&quot;)
    
    new_value = change['new_value']
    old_value = change['old_value']
    
    return parts, new_value, old_value

max_depth = 0
processed_changes = []
for key, change in values_changed.items():
    parts, new_value, old_value = process_change(key, change)
    max_depth = max(max_depth, len(parts))
    processed_changes.append((parts, new_value, old_value))

rows = []
for parts, new_value, old_value in processed_changes:
    field_parts = parts[1:] + [''] * (max_depth - len(parts))
    row = [parts[0]] + field_parts + [new_value, old_value]
    rows.append(row)

column_names = ['product'] + [f'field_{i}' for i in range(1, max_depth)] + ['new_value', 'old_value']

df = pd.DataFrame(rows, columns=column_names)
df = df.rename(columns={'field_1': 'parent-field', 'field_2': 'child-field', 'field_3': 'grandchild-field})
print(df)

</code></pre>
<p>which will give you</p>
<pre><code>  product parent-field child-field grandchild-field  new_value  old_value
0   prod1        p_col       c_col                   -2.866711      -2.75
1   prod1      p_col23                                1.000000      54.00
2   prod1        p_col      c_col2           c_col5   1.678000       5.12
</code></pre>
","2024-04-05 12:06:34","1","Answer"
"78279592","","create columns dynamically depending on string structure in Python","<p>To give background on my project, comparing two documents which has nested <code>JSON</code> structure using <code>deepDiff</code> in python. During comparison, if values of a field are changed, those are written to a DataFrame for analysis.</p>
<p>Example data change:</p>
<pre><code>&quot;values_changed&quot;: {
    &quot;root['prod1']['p_col']['c_col']&quot;: {
        &quot;new_value&quot;: -2.866711109999983,
        &quot;old_value&quot;: -2.75
    },
    &quot;root['prod1']['p_col23']&quot;: {
        &quot;new_value&quot;: 1,
        &quot;old_value&quot;: 54
    },
    &quot;root['prod1']['p_col']['c_col2']['c_col5']&quot;: {
        &quot;new_value&quot;: 1.678,
        &quot;old_value&quot;: 5.12
    }
}
</code></pre>
<p>Current output:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">product</th>
<th style=""text-align: center;"">field</th>
<th style=""text-align: right;"">new_value</th>
<th style=""text-align: right;"">old_value</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">prod</td>
<td style=""text-align: center;"">p_col</td>
<td style=""text-align: right;"">-2.866</td>
<td style=""text-align: right;"">-2.75</td>
</tr>
<tr>
<td style=""text-align: left;"">prod</td>
<td style=""text-align: center;"">p_col23</td>
<td style=""text-align: right;"">1</td>
<td style=""text-align: right;"">54</td>
</tr>
<tr>
<td style=""text-align: left;"">prod</td>
<td style=""text-align: center;"">p_col</td>
<td style=""text-align: right;"">1.678</td>
<td style=""text-align: right;"">5.12</td>
</tr>
</tbody>
</table></div>
<p>I am using string pattern to read till <strong>root['prod1']['p_col']</strong>, adding to another dict further converted to pandas dataframe <br><br></p>
<pre><code>k = &quot;&quot;&quot;root['prod1']['p_col']['c_col']&quot;&quot;&quot;
field = k[k.find(&quot;['&quot;,8)+1:k.find(&quot;']&quot;,-1)].split(&quot;'&quot;)[1::2][0]
</code></pre>
<p>but want to dynamically add new column on existence of nested field in string</p>
<p>Required output:<br></p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">product</th>
<th style=""text-align: center;"">parent-field</th>
<th style=""text-align: center;"">field</th>
<th style=""text-align: center;"">field</th>
<th style=""text-align: right;"">new_value</th>
<th style=""text-align: right;"">old_value</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">prod</td>
<td style=""text-align: center;"">p_col</td>
<td style=""text-align: center;"">c_col</td>
<td style=""text-align: center;""></td>
<td style=""text-align: right;"">-2.866</td>
<td style=""text-align: right;"">-2.75</td>
</tr>
<tr>
<td style=""text-align: left;"">prod</td>
<td style=""text-align: center;"">p_col23</td>
<td style=""text-align: center;""></td>
<td style=""text-align: center;""></td>
<td style=""text-align: right;"">1</td>
<td style=""text-align: right;"">54</td>
</tr>
<tr>
<td style=""text-align: left;"">prod</td>
<td style=""text-align: center;"">p_col</td>
<td style=""text-align: center;"">c_col2</td>
<td style=""text-align: center;"">c_col5</td>
<td style=""text-align: right;"">1.678</td>
<td style=""text-align: right;"">5.12</td>
</tr>
</tbody>
</table></div>
","2024-04-05 11:25:16","1","Question"
"78279048","78278383","","<p><strong>MyClassA</strong> : objects can be used as dictionary keys because they are immutable (they don't have any mutable attributes that can change).</p>
<p><strong>MyClassB</strong> : objects can also be used as dictionary keys, even though they contain a list as an attribute, because the instance itself is hashable due to its immutability (the list being mutable doesn't affect the hashability of the instance).
However, a list c cannot be used as a dictionary key because lists are mutable and thus not hashable.</p>
<p><strong>Mutability:</strong> Lists in Python are mutable, meaning their contents can change after they've been created. For example, you can append, remove, or modify elements in a list. On the other hand, objects of custom classes (MyClassA and MyClassB) are mutable or immutable depending on how they are implemented. In your example, both MyClassA and MyClassB objects are mutable because they have attributes that can be modified.</p>
<p><strong>Hashability:</strong> In Python, keys in a dictionary must be hashable. Hashability essentially means that an object can be converted into an integer value (its hash) that remains the same throughout its lifetime and is used to quickly compare dictionary keys. Immutable types, such as strings, numbers, and tuples, are hashable. Mutable types, such as lists, sets, and dictionaries themselves, are not hashable.</p>
","2024-04-05 09:46:44","0","Answer"
"78278648","78277474","","<p>Even though in your method you've declared that <code>T</code> is a subtype of <code>Event</code> and that the return type is <code>EventController&lt;T&gt;</code>, you're returning a Maps's value, which instead corresponds to <code>EventController&lt;? extends Event&gt;&gt;</code>.</p>
<p>At some point, <code>T</code> will refer to a very <strong>specific</strong> subtype of <code>Event</code>, while <code>? extends Event</code> can be <strong>any</strong> unknown subtype of Event, and not necessarily correspond to <code>T</code>. In this scenario, the compiler cannot tell at compile time which exact type is returned for <code>? extends Event</code>. So, since it isn't safe to return a <code>? extends Event</code> in place of <code>T</code>, you're getting a compiler error.</p>
<p>If you want to get rid of that error, the return type of your method should match the type of the Map's values.</p>
<pre><code>public static &lt;T extends Event&gt; EventController&lt;? extends Event&gt; get(Class&lt;T&gt; event) {
     return map.computeIfAbsent(event, k -&gt; new EventController&lt;&gt;());
}
</code></pre>
<p>Here is also a very interesting article from <a href=""https://docs.oracle.com/javase/tutorial/extra/generics/wildcards.html"" rel=""nofollow noreferrer"">Java Tutorials</a> that introduces wildcards and explains your specific case with an example. I'll attach an extract here and highlight the part that applies to your case:</p>
<pre><code>public void drawAll(List&lt;Shape&gt; shapes) {
    for (Shape s: shapes) {
        s.draw(this);
   }
}
</code></pre>
<blockquote>
<p>Now, the type rules say that <code>drawAll()</code> can only be called on lists of exactly <code>Shape</code>: it cannot, for instance, be called on a <code>List&lt;Circle&gt;</code>. That is unfortunate, since all the method does is read shapes from the list, so it could just as well be called on a <code>List&lt;Circle&gt;</code>. What we really want is for the method to accept a list of any kind of shape:</p>
</blockquote>
<pre><code>public void drawAll(List&lt;? extends Shape&gt; shapes) {
    ...
}
</code></pre>
<blockquote>
<p>There is a small but very important difference here: we have replaced the type <code>List&lt;Shape&gt;</code> with <code>List&lt;? extends Shape&gt;</code>. Now <code>drawAll()</code> will accept lists of any subclass of <code>Shape</code>, so we can now call it on a <code>List&lt;Circle&gt;</code> if we want.</p>
</blockquote>
<blockquote>
<p><code>List&lt;? extends Shape&gt;</code> is an example of a bounded wildcard. The ? stands for an unknown type, just like the wildcards we saw earlier. However, in this case, we know that this unknown type is in fact a subtype of <code>Shape</code>. (Note: It could be <code>Shape</code> itself, or some subclass; it need not literally extend <code>Shape</code>.) We say that <code>Shape</code> is the upper bound of the wildcard.</p>
</blockquote>
<blockquote>
<p>There is, as usual, a price to be paid for the flexibility of using wildcards. That price is that it is now illegal to write into shapes in the body of the method. For instance, this is not allowed:</p>
</blockquote>
<pre><code>public void addRectangle(List&lt;? extends Shape&gt; shapes) {
    // Compile-time error!
    shapes.add(0, new Rectangle());
}
</code></pre>
<blockquote>
<p>You should be able to figure out why the code above is disallowed. The type of the second parameter to <code>shapes.add()</code> is <code>? extends Shape</code> -- <strong>an unknown subtype of <code>Shape</code></strong>. <strong>Since we don't know what type it is, we don't know if it is a supertype of <code>Rectangle</code>; it might or might not be such a supertype, so it isn't safe to pass a <code>Rectangle</code> there.</strong></p>
</blockquote>
","2024-04-05 08:28:25","1","Answer"
"78278489","","Reconfigure Nested Dictionary Key Names Using a Key Dictionary","<p>I need to update the keys in a nested dictionary based on a key dictionary. This involves comparing keys in both dictionaries. If a key matches, I need to search all elements under that key in the nested dictionary and update their names according to the key dictionary. <code>Key_dict</code> is also nested dictionary. Getting Empty <code>dict</code> with my code, any support will be appreciated.</p>
<pre><code>old_Dict =
{'candela_samples_generic': {'drc_dtcs': {'domain_name': 'TEMPLATE-DOMAIN', 'dtc_all': {'0x930001': {'identification': {'code': '0x9300', 'fault_type': '0x11', 'description': 'GNSS antenna short to ground'}, 'snapshots': {'snapshot_record_content': 'base', 'snapshot_records_numbers': ['0x01']}, 'functional_conditions': {'failure_name': 'short_to_ground', 'mnemonic': 'DTC_GNSS_Antenna_Short_to_ground'}}}}}}`

key_dict= {
    'dtc_all': {
        'code': 'udsDtcValue',
        'failure_name': 'failname',
        'mnemonic' : 'LongName',
         'fault_type': 'FaultType',
         'snapshot_records_numbers': 'snapshotrecordsnumbers'
    }
}
</code></pre>
<pre><code>def replace_keys(old_dict, key_dict):
    new_dict = {}

    if isinstance(old_dict, dict):
        for key, value in old_dict.items():
            if key == &quot;dtc_all&quot;:
                for key in key.keys():
                    new_key = key_dict.get(key, key)
                    if isinstance(old_dict[key], dict):
                        new_dict[new_key] = replace_keys(old_dict[key], key_dict)
                    else:
                        new_dict[new_key] = old_dict[key]
        return new_dict
</code></pre>
<pre><code>Output:
new_Dict =
{'candela_samples_generic': {'drc_dtcs': {'domain_name': 'TEMPLATE-DOMAIN', 'dtc_all': {'0x930001': {'identification': {'udsDtcValue': '0x9300', 'FaultType': '0x11', 'description': 'GNSS antenna short to ground'}, 'snapshots': {'snapshot_record_content': 'base', 'snapshotrecordsnumbers': ['0x01']}, 'functional_conditions': {'failname': 'short_to_ground', 'LongName': 'DTC_GNSS_Antenna_Short_to_ground'}}}}}}`
</code></pre>
<p>want to make the function generic so that it can handle multiple keys inside <code>key_dict</code>, updating elements under those specific keys of <code>old_dict</code> according to the corresponding keys in <code>key_dict</code>.</p>
","2024-04-05 07:52:42","1","Question"
"78278447","78278383","","<p><a href=""https://docs.python.org/3/library/stdtypes.html#mapping-types-dict"" rel=""nofollow noreferrer"">dict</a> keys need to be <strong>hashable</strong>, which requires implementing <code>__hash__</code> method.</p>
<p>By default, objects implement id-based hash function. Hash has little meaning for mutable objects though, so it is removed from implementation of built-in classes of such types. You can do the same with custom classes by assigning None to the method:</p>
<pre><code>class MyClassA:
    def __init__(self, value=0):
        self.value = value
    __hash__ = None
dict_[MyClassA()] = 1 # TypeError: unhashable type: 'MyClassA'
</code></pre>
<p>As to question 1 - no, you can change values of <code>A.value</code> and <code>B.value</code> and <code>B.list</code> so they are not immutable.</p>
<p>Side notes:</p>
<ol>
<li>You probably shouldn't set list as default value of parameter - <a href=""https://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument"">&quot;Least Astonishment&quot; and the Mutable Default Argument</a></li>
<li>Don't call your variables with names of built-ins, e.g <code>self.list</code>.</li>
</ol>
","2024-04-05 07:43:48","2","Answer"
"78278383","","Why a object of custom class can be the key of a dict, while the list can not in Python?","<pre><code>class MyClassA:
    def __init__(self, value=0):
        self.value = value

class MyClassB:
    def __init__(self, value=0, list_=[]):
        self.value = value
        self.list = list_
        
a = MyClassA()
b = MyClassB()
c = []

dict_ = {}
dict_[a] = 1 # No error
dict_[b] = 1 # No error
dict_[c] = 1 # TypeError: unhashable type: 'list'
</code></pre>
<ul>
<li>Is the object of MyClassA / MyClassB immutable?</li>
<li>list is also a kind of object. So why it becomes unhashable?
I'm quite confused about it.</li>
</ul>
","2024-04-05 07:29:55","0","Question"
"78278191","78278000","","<p>You can flatten dict using following code.</p>
<pre><code>import collections
from itertools import chain 

def flatten(d, parent_key='', sep='$'):
    items = []
    for k, v in d.items():
        print(items)
        new_key = parent_key + sep + k if parent_key else k
        if isinstance(v, collections.MutableMapping):
            items.extend(flatten(v, new_key, sep=sep).items())
        elif isinstance(v, list):
            for idx, value in enumerate(v):
                items.extend(flatten(value, new_key + sep + str(idx), sep).items())
        else:
            items.append((new_key, v))
    return dict(items)

Nested_Dict = {'candela_samples_generic': {'drc_dtcs': {'domain_name': 'TEMPLATE-DOMAIN', 'dtc_all': {'0x930001': {'identification': {'udsDtcValue': '0x9300', 'fault_type': '0x11', 'description': 'GNSS antenna short to ground'}, 'snapshots': {'snapshot_record_content': 'base', 'snapshot_records_numbers': ['0x01']}, 'functional_conditions': {'failure_name': 'short_to_ground', 'mnemonic': 'DTC_GNSS_Antenna_Short_to_ground'}}}}}}

print(flatten(Nested_Dict))
</code></pre>
<p>After this, you can traverse on flatten dict keys &amp; check you conditions</p>
","2024-04-05 06:47:53","1","Answer"
"78278123","78278000","","<p>To optimize the function you should adjust your strategy:</p>
<ol>
<li>Search through the dictionary to find <code>MainKey</code>.</li>
<li>Once <code>MainKey</code> is found, right away look for <code>SubKey</code> within the part of the dictionary where <code>MainKey</code> was found.</li>
<li>After finding<code>SubKey</code>, we search everything under <code>SubKey</code> to find <code>Element</code>.</li>
</ol>
<p>The optimized version:</p>
<pre><code>def get_value_nested_dict(nested_dict, main_key, sub_key, element):
    results = []
    def search_for_element(sub_dict, looking_for_element):
        if isinstance(sub_dict, dict):
            for k, v in sub_dict.items():
                if k == element and looking_for_element:
                    results.append(v)
                else:
                    search_for_element(v, looking_for_element)
    def search_nested_dict(current_dict):
        if isinstance(current_dict, dict):
            for key, value in current_dict.items():
                if key == main_key:
                    if sub_key in value:
                        search_for_element(value[sub_key], True)
                    else:
                        search_for_element(value, False)
                else:
                    search_nested_dict(value)
    search_nested_dict(nested_dict)
    return results
</code></pre>
","2024-04-05 06:31:53","1","Answer"
"78278000","","Recursively Access Element Values in a Nested Dictionary","<p>looking for a more robust method to access an element in a nested dictionary using MainKey (which can be at any depth), SubKey (always immediately following MainKey), and Element (following SubKey at any depth). While my current implementation works for contiguous MainKey, SubKey, and Element, it struggles when they're not directly adjacent. Any suggestions on how to improve this?</p>
<pre><code>Nested_Dict =
{'candela_samples_generic': {'drc_dtcs': {'domain_name': 'TEMPLATE-DOMAIN', 'dtc_all': {'0x930001': {'identification': {'udsDtcValue': '0x9300', 'fault_type': '0x11', 'description': 'GNSS antenna short to ground'}, 'snapshots': {'snapshot_record_content': 'base', 'snapshot_records_numbers': ['0x01']}, 'functional_conditions': {'failure_name': 'short_to_ground', 'mnemonic': 'DTC_GNSS_Antenna_Short_to_ground'}}}}}}`
</code></pre>
<pre><code>Working for result = get_value_nested_dict(nested_dict, 'dtc_all', '0x930001', 'identification') not for result = get_value_nested_dict(nested_dict, 'dtc_all', '0x930001', 'udsDtcValue') 
</code></pre>
<pre><code>def get_value_nested_dict(nested_dict, main_key, sub_key, element):
    # Initialize a list to store the results
    results = []

    # Recursive function to search for the element in nested dictionaries
    def search_nested_dict(nested_dict, main_key, sub_key, element):
        # Iterate over the dictionary items
        for key, value in nested_dict.items():
            # Check if the current key matches the main key
            if key == main_key:
                # Check if the sub_key exists in the value
                if sub_key in value:
                    # Check if the element exists directly under the sub_key
                    if element in value[sub_key]:
                        results.append(value[sub_key][element])
                    # If not, recursively search for the element in the sub-dictionary
                    elif isinstance(value[sub_key], dict):
                        search_nested_dict(value[sub_key], main_key, sub_key, element)
            # If the value is a dictionary, recursively call the function
            elif isinstance(value, dict):
                search_nested_dict(value, main_key, sub_key, element)

    # Start the recursive search
    search_nested_dict(nested_dict, main_key, sub_key, element)

    return results
</code></pre>
","2024-04-05 05:54:44","1","Question"
"78277528","78277474","","<p>I think it relates to <code>Covariance</code> in Java. You can only read from <code>List</code> or <code>Map</code> if you use <code>Upper Bounded Wildcards</code>.
You can find more details in this answer <a href=""https://stackoverflow.com/a/45610023/17269071"">here</a></p>
","2024-04-05 02:55:37","0","Answer"
"78277474","","Java Event System Generic Cast to Bounded Wildcard","<p>I was making my own Event System and tried to make it usable like this.</p>
<pre class=""lang-java prettyprint-override""><code>EventSystem.get(EventClientStart.class)
    .setCallback((event) -&gt; {
        System.out.println(&quot;Client Started&quot;);
    });

EventSystem.get(EventClientStart.class)
    .invoke(new EventClientStart());
</code></pre>
<p>But got a problem with checks of type, what did I miss?
T extends Event, I think it should work, and it actually is (only if I will cast it to (EventController), but then I will get warning &quot;Unchecked Cast&quot;)</p>
<p><a href=""https://i.sstatic.net/AWtcN.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/AWtcN.png"" alt=""Intellij screenshot"" /></a></p>
<p>EventSystem.java</p>
<pre class=""lang-java prettyprint-override""><code>package im.silkproject.event;

import im.silkproject.event.internal.EventController;

import java.util.HashMap;
import java.util.Map;

public final class EventSystem
{
    private static final Map&lt;Class&lt;? extends Event&gt;, EventController&lt;? extends Event&gt;&gt; map = new HashMap&lt;&gt;();

    private EventSystem() { }

    public static &lt;T extends Event&gt; EventController&lt;T&gt; get(Class&lt;T&gt; event)
    {
        return map.computeIfAbsent(event, k -&gt; new EventController&lt;&gt;());
    }
}
</code></pre>
<p>Event.java</p>
<pre class=""lang-java prettyprint-override""><code>package im.silkproject.event;

public class Event
{
    private boolean cancelled;

    public void cancel()
    {
        cancelled = true;
    }

    public boolean isCancelled()
    {
        return cancelled;
    }
}
</code></pre>
<p>EventCallback.java</p>
<pre class=""lang-java prettyprint-override""><code>package im.silkproject.event.internal;

@FunctionalInterface
public interface EventCallback&lt;T&gt;
{
    void __call(T event);
}
</code></pre>
<p>EventController.java</p>
<pre class=""lang-java prettyprint-override""><code>package im.silkproject.event.internal;

import java.util.concurrent.CopyOnWriteArrayList;

public class EventController&lt;T&gt;
{
    private final CopyOnWriteArrayList&lt;EventCallback&lt;T&gt;&gt; callbacks = new CopyOnWriteArrayList&lt;&gt;();

    public void invoke(T event)
    {
        for (EventCallback&lt;T&gt; callback : callbacks)
        {
            callback.__call(event);
        }
    }

    public int length()
    {
        return callbacks.size();
    }

    public boolean setCallback(EventCallback&lt;T&gt; event)
    {
        return callbacks.addIfAbsent(event);
    }

    public boolean unsetCallback(EventCallback&lt;T&gt; event)
    {
        return callbacks.remove(event);
    }
}
</code></pre>
","2024-04-05 02:30:24","1","Question"
"78271004","78267255","","<p>Try:</p>
<pre class=""lang-py prettyprint-override""><code>my_dict = {0: {2, 3}, 1: {0, 4, 5}, 2: {0, 1, 5, 7}}
dict_vals = {&quot;val1&quot;: {1, 2, 3}, &quot;val2&quot;: {7, 8}}

tmp = {}
for k, v in dict_vals.items():
    for i in v:
        tmp[i] = k

my_dict = {k: {tmp.get(i, i) for i in v} for k, v in my_dict.items()}
print(my_dict)
</code></pre>
<p>Prints:</p>
<pre><code>{0: {&quot;val1&quot;}, 1: {0, 4, 5}, 2: {0, 5, &quot;val1&quot;, &quot;val2&quot;}}
</code></pre>
","2024-04-03 23:47:21","0","Answer"
"78269641","78268589","","<p>It seems that the =+ is not deprecated (thanks Dmytro)</p>
<p>But double map entries like this</p>
<pre><code>map += (&quot;foo&quot; -&gt; &quot;baa&quot;, &quot;wibble&quot; -&gt; &quot;wobble&quot;)
</code></pre>
<p>Need to be converted to single entries</p>
<pre><code>map += (&quot;foo&quot; -&gt; &quot;baa&quot;)
map += (&quot;wibble&quot; -&gt; &quot;wobble&quot;)
</code></pre>
","2024-04-03 18:01:34","0","Answer"
"78269090","78268854","","<pre><code>from __future__ import annotations


class ClassA:
    pass


class ClassC:
    c: ClassB
    children: dict = {&quot;A&quot;: ClassA}


class ClassB:
    pass

ClassC.children.setdefault(&quot;B&quot;, ClassB)
</code></pre>
<p>This can be the solution</p>
","2024-04-03 16:22:15","3","Answer"
"78268999","78267991","","<ul>
<li>Merge the lists</li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  users_all: &quot;{{ [user_users, user_users_skel] |
                 community.general.lists_mergeby('username') }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  users_all:
  - primarygid: 602
    shell: /bin/bash
    ssh_login: true
    uid: 602
    username: bar
  - default_groups: admin
    initial_password_hash: $2349887rhfewklrjn
    primarygid: 1000
    shell: /bin/bash
    ssh_login: true
    uid: 1000
    username: blupp
  - primarygid: 600
    shell: /bin/bash
    ssh_login: false
    uid: 600
    username: foo
</code></pre>
<ul>
<li>Get the list <em>usernames</em></li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  usernames: &quot;{{ user_users | map(attribute='username') }}&quot;
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  usernames:
  - foo
  - bar
</code></pre>
<ul>
<li>Select <em>username</em> in the list</li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  eff_users: &quot;{{ users_all | selectattr('username', 'in', usernames) }}&quot;
</code></pre>
<p>gives what you want</p>
<pre class=""lang-yaml prettyprint-override""><code>  eff_users:
  - primarygid: 602
    shell: /bin/bash
    ssh_login: true
    uid: 602
    username: bar
  - primarygid: 600
    shell: /bin/bash
    ssh_login: false
    uid: 600
    username: foo
</code></pre>
<hr>
<sup>
<p>Example of a complete playbook for testing</p>
<pre class=""lang-yaml prettyprint-override""><code>- hosts: all

  vars:

    user_users:
      - username: foo
        primarygid: 42
      - username: bar

    user_users_skel:
      - username: foo
        uid: 600
        primarygid: 600
        shell: /bin/bash
        ssh_login: false
      - username: bar
        uid: 602
        primarygid: 602
        shell: /bin/bash
        ssh_login: true
      - username: blupp
        uid: 1000
        primarygid: 1000
        shell: /bin/bash
        ssh_login: true
        default_groups: admin
        initial_password_hash: $2349887rhfewklrjn

    users_all: &quot;{{ [user_users, user_users_skel] |
                   community.general.lists_mergeby('username') }}&quot;
    usernames: &quot;{{ user_users | map(attribute='username') }}&quot;
    eff_users: &quot;{{ users_all | selectattr('username', 'in', usernames) }}&quot;
        
  tasks:

    - debug:
        var: users_all
    - debug:
        var: usernames
    - debug:
        var: eff_users
</code></pre>
</sup>
","2024-04-03 16:06:12","0","Answer"
"78268854","","Forward Class Declaration in Python in a Dictionary","<p>This is a question that has been debated many times in this forum. There is however a case that i have not seen a good way to solve.</p>
<pre><code>from __future__ import annotations

class ClassA:
    pass

class ClassC:
    c : ClassB
    children : dict = {'A': ClassA, 'B': ClassB}

class ClassB:
    pass
</code></pre>
<p>Interesting is that the statement <code>c : ClassB</code> works fine, but reference to <code>ClassB</code> in the Dictionary generates the error:
<code>NameError: name 'ClassB' is not defined.</code></p>
<p>Is there a way to make this code work?</p>
","2024-04-03 15:42:58","-1","Question"
"78268806","78268589","","<blockquote>
<p>How can I create a mutable map add to it and then return an immutable map?</p>
</blockquote>
<p>You can transform a mutable Map into immutable one with <code>.toMap</code>:</p>
<pre class=""lang-scala prettyprint-override""><code>val map: mutable.Map[String,Any] = mutable.Map()
map += (&quot;foo&quot; -&gt; &quot;baa&quot;)
val map1: immutable.Map[String, Any] = map.toMap
</code></pre>
<p>or</p>
<pre class=""lang-scala prettyprint-override""><code>val map: mutable.Map[String,Any] = mutable.Map()
val map1: immutable.Map[String, Any] = (map += (&quot;foo&quot; -&gt; &quot;baa&quot;)).toMap
</code></pre>
<p><a href=""https://stackoverflow.com/questions/2817055/converting-mutable-to-immutable-map"">Converting mutable to immutable map</a></p>
<p><code>mutable.Map</code> <code>+=</code> is not deprecated, it's <code>collection.Map</code> <code>+=</code> that is deprecated.</p>
<p><code>collection.Map</code> is a parent for <code>mutable.Map</code> and <code>immutable.Map</code>.</p>
<p>Also it's not clear why immutable Map is not enough for you:</p>
<pre class=""lang-scala prettyprint-override""><code>val map : immutable.Map[String,Any] = immutable.Map()
val map1: immutable.Map[String, Any] = map + (&quot;foo&quot; -&gt; &quot;baa&quot;)
</code></pre>
<p>or just</p>
<pre class=""lang-scala prettyprint-override""><code>val map : Map[String,Any] = Map()
val map1: Map[String, Any] = map + (&quot;foo&quot; -&gt; &quot;baa&quot;)
</code></pre>
<p>Please notice that most probably you don't need <code>var</code>s.</p>
<p>And maybe you can work with <code>Map[String,String]</code>, not <code>Map[String,Any]</code>.</p>
","2024-04-03 15:34:37","2","Answer"
"78268703","78267255","","<p>This will only reliably work as you like, if each member of the sets in <code>my_dict</code> is unique amongst the members of the values in <code>dict_vals</code> in order to translate any given integer to one and only one key-string like &quot;<code>val1</code>&quot;. For instance, if your <code>dict_vals</code> was like <code>{'val1':{1,2,3},'val2':{1,7,8}}</code>, then for the integer 1, you could either replace it with <code>val1</code> or <code>val2</code> and the result would become ambiguous.</p>
<p>So, under the assumption, that relevant set-items in <code>dict_vals</code> will be unique to a particular key, you have the option to create a reverse of <code>dict_vals</code>:</p>
<pre><code>dict_rev = {val:k for k,v in dict_vals.items() for val in v}
for k,v in my_dict.items():
    s = set()
    for value in v:
        try:
            s.add(dict_rev[value])
        except KeyError:
            s.add(value)
    my_dict[k] = s
</code></pre>
<p>Note: If the previously given assumption wasn't the case, then you'd first need to decide how to decide which &quot;valX&quot; you want to choose among those that have the same integer in their set.</p>
","2024-04-03 15:18:37","0","Answer"
"78268589","","How to make a mutable map and avoid deprecations when creating it","<p>I have some scala code that complains that   method + in trait MapOps is deprecated (since 2.13.0)</p>
<p>code creates a map</p>
<pre><code>var map : Map[String,Any] = Map()
...
map += (&quot;foo&quot; -&gt; &quot;baa&quot;, &quot;wibble&quot; -&gt; &quot;wobble&quot;)
</code></pre>
<p>the map returned by this method needs to be immutable.</p>
<p>Some googling implies += is not de rigueur and that addOne() should be used, but Map() does not have addOne().  Cloud only deployments so I don't get any help from my IDE.</p>
<p>How can I create a mutable map add to it and then return an immutable map?  In a way that is idiomatic and not subject to deprecation.</p>
","2024-04-03 15:00:55","0","Question"
"78267991","","Ansible: How to merge two different sized lists of dicts","<p>a task in ansible 2.10.8:</p>
<p>I would like to merge two different lists of dicts to get one complemented with missing items, but not add a dict to the first list.</p>
<p>List of dicts one:</p>
<pre><code>user_users:
  - username: 'foo'
    primarygid: 42
  - username: 'bar'
</code></pre>
<p>List of dicts two:</p>
<pre><code>user_users_skel:
  - username: foo
    uid: 600
    primarygid: 600
    shell: '/bin/bash'
    ssh_login: false
  - username: bar
    uid: 602
    primarygid: 602
    shell: '/bin/bash'
    ssh_login: true
  - username: blupp
    uid: 1000
    primarygid: 1000
    shell: '/bin/bash'
    ssh_login: true
    default_groups: 'admin'
    initial_password_hash: '$2349887rhfewklrjn'
</code></pre>
<p>Expected Output (also a list of dicts):</p>
<pre><code>  - username: foo
    uid: 600
    primarygid: 42
    shell: '/bin/bash'
    ssh_login: false
  - username: bar
    uid: 602
    primarygid: 602
    shell: '/bin/bash'
    ssh_login: true
</code></pre>
<p>I used different approaches, like</p>
<pre><code>    - set_fact:
        eff_users: &quot;{{ user_users | ansible.builtin.combine(user_users_skel) }}&quot;
    - ansible.builtin.debug:
        var: eff_users
</code></pre>
<p>with bogus output.</p>
","2024-04-03 13:23:26","1","Question"
"78267255","","How to replace values in a dictionary with keys in another without repeats?","<p>I'm working on a task in Python where I need to replace elements within sets, which are values in one dictionary (<code>my_dict</code>), with the keys from another dictionary (<code>dict_vals</code>). Each key in <code>dict_vals</code> is associated with a set of values. If a value from a set in <code>my_dict</code> is found within any set of <code>dict_vals</code>, that value should be replaced with the corresponding key from <code>dict_vals</code>. Importantly, each set within <code>my_dict</code> should not have duplicate elements after the replacement.</p>
<p>Given dictionaries:</p>
<pre><code>my_dict = {0:{2,3}, 1:{0,4,5}, 2:{0,1,5,7}}
dict_vals = {'val1':{1,2,3},'val2':{7,8}]
</code></pre>
<p>But deleting any repeats within each key to get this:</p>
<pre><code>my_dict = {0:{'val1'}, 1:{0,4,5}, 2:{0,'val1',5,'val2'}}
</code></pre>
<p>My approach was to iterate through <code>my_dict</code>, check if any value is a key in <code>dict_vals</code>, and then attempt to replace that value with the corresponding set from <code>dict_vals</code>. Here is the code I've tried, but it doesn't change <code>my_dict</code>:</p>
<pre><code>keys_replace = dict_vals.keys()
for key in my_dict.keys():
    for i, val in enumerate(my_dict[key], 0):
        if val in keys_replace:
            index_to_replace = keys_replace.index(val)
            my_dict[key][i] = dict_vals[keys_replace[index_to_replace]]
</code></pre>
<p>I'm new to working with dictionaries, especially those containing sets as values, and I suspect my approach might be flawed due to a misunderstanding of how to access and replace set elements. Could you provide guidance on how to correctly achieve the desired output, and explain where my logic went awry?</p>
","2024-04-03 11:20:14","1","Question"
"78266460","78265083","","<p>There is no algorithm that can definitely accomplish this without any extra information because languages are weird. There are several problems with this:</p>
<ol>
<li>Base words vs. derived words are ambiguous. Why is &quot;creation&quot; considered a based word here, couldn't you argue it was derived from the word &quot;create&quot;? In the rest of this, at least for English, I'm assuming that base words are a non-gerund noun in the singular form, a verb in the present tense, or an adjective (&quot;runny&quot; won't be considered a derived form of the word &quot;run&quot;)</li>
<li>There are so many exceptions, at least in the English language. &quot;create&quot; and &quot;created&quot; could be solved for with hard-programmed rules, but that same rule would probably say that &quot;shed&quot; is the past tense for &quot;she&quot;. Without knowing exactly whether a word is a noun, verb, or adjective, or what tense, it is impossible to tell if it is a derived word or a base word with any certainty.</li>
</ol>
<p>So how do you solve this? You find out what the &quot;part of speech&quot; for a word is using tools like nltk. I would recommend that you use wordnet to generate a synset for the word (the set of synonyms), and find their parts of speech for words that have multiple meanings (again, e.g. shed). Then, you remove any words who only function as a gerund, a plural noun or a verb in a non-present tense.</p>
","2024-04-03 08:54:23","1","Answer"
"78265083","","How should an algorithm work for checking if a compound word can be derived from the base words in a dictionary?","<p>I am trying to think about how to build a cross-language dictionary, where it stores &quot;base&quot; words (like &quot;create&quot;, &quot;creation&quot;, etc.), and doesn't store derived words (like &quot;created&quot;, &quot;creating&quot;, &quot;creates&quot;, &quot;creations&quot;, etc.). Instead of storing the derived words, it stores rules of some sort which specifies how the derived words get created.</p>
<p>One rule might be &quot;if word ends in -p, and we want to add -ing, then do -pping&quot;, so &quot;flip&quot; becomes &quot;flipping&quot;, etc.. The reason not to store the derived words in the dictionary is there are at least millions of those in English (and only a few hundred thousand &quot;base&quot; words), and in some languages like Turkish, there are a roughly infinite number of possible derived words.</p>
<p>The question is, <strong>how should the algorithm roughly work for figuring out if a derived word is in the dictionary?</strong></p>
<p>We <em>could</em> have a Trie for storing the base words, but then what about prefixes and suffixes (ignoring infixes and circumfixes for the moment)? And what about when the combining point changes the end of the preceding chunk, and/or the start of the following chunk (like where &quot;flipping&quot; adds the extra &quot;p&quot; in between, etc.)? I am mainly wondering if I need to do lookahead/lookbehind sorts of things when doing this, or if I can just go through the prefix list, then base word list, then suffix list, in a straightforward manner.</p>
<p>For &quot;flipping&quot;, I see &quot;flip&quot; in the base-word trie, and then we encounter &quot;p&quot;, no not in the dictionary, so check suffixes. The suffix can insert a &quot;p&quot; if the last fragment ends in &quot;p&quot;.... So remember the last character? Or perhaps there are more cases where it's more than just the last character, but a few last characters... So walk through the suffix &quot;last fragments ends with&quot; properties, in reverse (maybe a reverse trie), and we find that our word ends in &quot;p&quot; and we have several suffixes for that (let's assume). Now how to filter down to the correct suffix? We try out all the suffixes perhaps? Try &quot;-p-p-ed&quot;, we get &quot;flipped&quot;, nope that doesn't match. Try &quot;-p-p-ing&quot;, ok that matches, we find a winner.</p>
<p>So it seems so far:</p>
<ol>
<li>Read fragment left-to-right against trie of fragments.</li>
<li>Upon completion of a fragment, find the next fragments which can start with the next letter.</li>
<li>Build a trie for all the fragments, and another trie for what they can start with.</li>
<li>Reverse read &quot;what they can start with&quot; from the preceding fragment, and if matches, forward read the next fragment.</li>
</ol>
<p>Something like that? How would you accomplish this?</p>
","2024-04-03 03:39:54","-1","Question"
"78263958","78262754","","<p>Simply assign to <code>.index</code>:</p>
<pre class=""lang-py prettyprint-override""><code>df.index = [&quot;Male&quot;, &quot;Female&quot;]
print(df)
</code></pre>
<p>Prints:</p>
<pre class=""lang-none prettyprint-override""><code>        0-9  10-19  20-29  30-39  40-49  50-59  60-69  70-79  80-89  90-99  100-109  110-119
Male   -692   -772   -741   -698   -707   -511   -371   -203    -95    -17       -8     -1.0
Female  676    771    808    865    815    581    400    226    102     15        8      0.0
</code></pre>
<hr />
<p>Input dataframe:</p>
<pre class=""lang-none prettyprint-override""><code>   0-9  10-19  20-29  30-39  40-49  50-59  60-69  70-79  80-89  90-99  100-109  110-119
1 -692   -772   -741   -698   -707   -511   -371   -203    -95    -17       -8     -1.0
1  676    771    808    865    815    581    400    226    102     15        8      0.0
</code></pre>
","2024-04-02 20:40:37","0","Answer"
"78263011","78262982","","<p>You're trying to use string concatenation within the <code>JSON.parse</code> method which isn't correctly formatting the string as valid JSON before parsing it. The correct way to dynamically create your JSON string involves proper concatenation of your variables with the string, ensuring the whole string is valid JSON. Then, <code>JSON.parse()</code> can be used to convert this string into an object.</p>
<p>However, in your case you don't need to go through the JSON conversion process because the values for latitude and longitude are already available. You can directly assign the latitude and longitude values to an object like this:</p>
<pre><code>var position = {lat: parseFloat(latitude), lng: parseFloat(longitude)};
</code></pre>
<p>Make sure that latitude and longitude are either strings that can be parsed into floats or are already numbers. The <code>parseFloat()</code> function is used here to ensure that the latitude and longitude values are treated as floating-point numbers, which is the correct format for latitudes and longitudes.</p>
<p>This approach is more efficient and straightforward than creating a JSON string and parsing it, especially since you're already working within JavaScript and don't need to serialize/deserialize the data.</p>
","2024-04-02 17:11:41","-1","Answer"
"78262982","","how to convert my string to object to use in map","<p>I have a map script.  I have a string for one of the properties to use in displaying the map.
The 'Position' is {lat:lat value, lng: longitude value }.<br />
I created a string that looks correct. The variable is showing up as the variable name 'position'.
I tried to use parse.JSON to convert it, but it still only shows up as the variable name. What am I tried this:  var position = JSON.parse('{&quot;lat:&quot; + latitude + &quot;,lng:&quot; + longitude }');
But, the word, 'position' shows up instead of the value.  Why doesn't this work?
Thanks for your help</p>
","2024-04-02 17:07:10","-1","Question"
"78262754","","changing the row number of a pandas dataframe","<p>I have the below dataframe:</p>
<pre class=""lang-none prettyprint-override""><code>    0-9 10-19   20-29   30-39   40-49   50-59   60-69   70-79   80-89   90-99   100-109 110-119
1   -692    -772    -741    -698    -707    -511    -371    -203    -95 -17 -8  -1.0
1   676 771 808 865 815 581 400 226 102 15  8   0.0
</code></pre>
<p>I want to change the row numbers to read Male and Female instead of 1 and 1.</p>
<p>I used the below code</p>
<pre class=""lang-py prettyprint-override""><code>index_labels = ['Male', 'Female']

# Create the DataFrame
Age_dist = pd.DataFrame(Age_dist, index=index_labels)
Age_dist
</code></pre>
<p>In the result I got, the values of my columns now read NaN.</p>
<pre class=""lang-none prettyprint-override""><code>    0-9 10-19   20-29   30-39   40-49   50-59   60-69   70-79   80-89   90-99   100-109 110-119
Male    NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
Female  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
</code></pre>
<p>How do I fix this?</p>
","2024-04-02 16:26:25","0","Question"
"78256902","78256812","","<p>Attribute parameter values must be able to be resolved completely at compile time. If you use an expression such as <code>Application.Current.Resources[&quot;Value to display&quot;]</code>, the compiler will not be able to resolve it.</p>
<p>What you need to do is to use the resource key as the attribute parameter, and then at runtime resolve it.</p>
<pre><code>Description(&quot;Value to display&quot;)
</code></pre>
<p>To resolve it at runtime, you have two options:</p>
<ol>
<li><p>Option 1: use reflection to identify the type with such attribute and then do things with the attribute parameter.</p>
</li>
<li><p>Option 2: create a source generator that will generate an extension method for the annotated class that will resolve the resource key to its value. The annotated class must be marked <code>partial</code> of course. See <a href=""https://learn.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/source-generators-overview"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/source-generators-overview</a> .</p>
</li>
</ol>
","2024-04-01 17:30:18","0","Answer"
"78256812","","Using a Resource Dictionary in a Description Attribute C#","<p>I am working on an app (WPF) that we need to have translatable to different languages, I am struggling to have the drop down translated when the language setting is changed.</p>
<p>It was agreed with my team that we would be using Resource Dictionaries, the one I am working on is building a list from an enum; I am using the Description attribute to show the value in the dropdown instead of the enum.  How can I get the value to be picked up from the Resource Dictionary?</p>
<p>I was thinking something like this:
[Description(Application.Current.Resources[&quot;Value to display&quot;])]</p>
<p>but I know the description needs to be absolute, so I am assuming I need to write some sort of extension but I don't know what.  Any help would be appreciated.</p>
<p>[Description(Application.Current.Resources[&quot;Value to display&quot;])]</p>
","2024-04-01 17:10:18","0","Question"
"78250763","78241681","","<p>Your code have multiple issues, most of them syntactic ones. Let me try to rewrite it in a more <em>syntactically correct</em> way. Then, you'll need to fix whatever semantics you want to give to it on your own:</p>
<pre class=""lang-erlang prettyprint-override""><code>-module(divide).
-export([divide_the_cache/4]).

divide_the_cache(Cache, Divided, ThreadIndex, Acc)
  when length(Cache) =&lt; Acc -&gt;
    L = lists:merge(
          [lists:nth(ThreadIndex, dict:to_list(Divided))],
          [lists:nth(Acc, Cache)]
        ),
    Conquered = dict:append(ThreadIndex, L, Divided),
    NewThreadIndex =
      case length(L) of
        24 -&gt; ThreadIndex + 1;
        _ -&gt; ThreadIndex
      end,
    divide_the_cache(Cache, Conquered, NewThreadIndex, Acc+1).
</code></pre>
<p>What I changed:</p>
<ol>
<li><code>-define</code> in Erlang is for macros and you were not using the <code>?divided</code> macro anywhere.</li>
<li>Variables in Erlang start in uppercase.</li>
<li><code>case length(Cache) =&lt; Acc of ThreadIndex -&gt;</code> made no sense to me, so I replaced it with a guard (<code>when length(Cache) =&lt; Acc</code>).</li>
<li><code>Divided</code> should be either a dict or a list but it's treated as a list first and a dict later… so I decided that it's always a dict and thus, for <code>lists:nth/2</code>, I used <code>dict:to_list/1</code>.</li>
<li>In Erlang, expressions end in <code>,</code> (not <code>;</code>) and functions end in <code>.</code>.</li>
<li>You shouldn't write else-less if's in Erlang, so I turned your <code>if</code> into a <code>case</code> statement.</li>
<li>Variables in Erlang can't be re-bound, that's why I introduced <code>NewThreadIndex</code>.</li>
</ol>
","2024-03-31 08:55:37","1","Answer"
"78241681","","Creaating a new Key Value dict from previous dict","<p>So, I have a dict called <code>conquered</code>. The porpouse of this dict is store a Key, Value dict of lists to use concurrency on a divide and conquer method to search for values.</p>
<p>The code goes on:</p>
<pre class=""lang-erl prettyprint-override""><code>-module(divide).
-export([divide_the_cache/4]).

-define(divided, dict:new()).

divide_the_cache(cache, divided, thread_index, acc) -&gt;
    case length(cache) =&lt; acc of
        thread_index -&gt;
            l = lists:merge([lists:nth(thread_index, divided)], [lists:nth(acc, cached)]);
            conquered = dict:append(thread_index, l, dict:from_list(divided));
            thread_index = if length(l) == 24 -&gt; thread_index = thread_index + 1, end;

            divide_the_cache(cache, conquered, thread_index, acc+1);
    end.
</code></pre>
<p>I'm getting:</p>
<pre><code>divide.erl:10:69: syntax error before: ';'
%   10|             conquered = dict:append(thread_index, l, dict:from_list(divided));
%     | 
</code></pre>
<p>When I'm not using function composition on dict:append I get:</p>
<pre><code>divide.erl:10:36: syntax error before: ';'
%   10|             d_list = dict:from_list(divided);
%     |                                             ^
</code></pre>
<p>I've already consulted the documentation and sites across the web, but could encounter an example(except to work with dict:from_list) and follow the docs trying on the repl.</p>
<p>What could going wrong? What is the best way to achieve what I need?</p>
<p>Thanks in advance, Lukas.</p>
","2024-03-29 02:13:24","-1","Question"
"78237254","78237159","","<p>You can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from?retiredLocale=de"" rel=""nofollow noreferrer""><code>Array.from()</code></a> with a custom map callback function parameter that destructures each Map item into its key (=<code>perm</code>) and value (=<code>isTrue</code>) and creates a new object from that.</p>
<pre><code>export interface IUser {
  permissions: Map&lt;string, boolean&gt;;
}

declare const permissionsMap: Map&lt;string, boolean&gt;;

const permissionsArray = Array.from(permissionsMap, ([perm, isTrue]) =&gt; ({
  perm,
  isTrue,
}));
// const permissionsArray: { perm: string; isTrue: boolean; }[]
</code></pre>
<p><a href=""https://www.typescriptlang.org/play#code/KYDwDg9gTgLgBASwHY2FAZgQwMbDgSQFUBnNOAbwCg44w0BbBY4hCJYgLjgFlMwAeYjCjIA5gBo4AIwgQANsExIAfAG5KAX0qUAJsGxzMUPNjZDaDJizO8wXW4OFjJM+YpXrKp9vDpRGzKzsAIJQUJgAnnAAvHCh4REAdOhQEPQAFH4B1uy2kukA2lmSTAAqUACuwAC6AJQxynDpVDTF1IjE5VXimrW16gD0A3De5llWQcTxkVzkFv5cQiJIoqodXcBcrgpKaxoF1ZRAA"" rel=""nofollow noreferrer"">TypeScript Playground</a></p>
","2024-03-28 09:53:42","1","Answer"
"78237159","","How to convert Map<string,boolean> to {key: string; value: boolean;}[]?","<p>I'm using React with TypeScript support and on the user creation page, I have implemented the dynamic creation of permissions, following <a href=""https://codesandbox.io/p/sandbox/add-or-remove-input-fields-dynamically-with-reactjs-mt3vem?file=%2Fsrc%2FInputs.js"" rel=""nofollow noreferrer"">this peace of code</a>.
The permissions used on the page are set by the following hook:</p>
<pre><code>const [permissions, setPermissions] = useState&lt;{ perm: string; isTrue: boolean; }[]&gt;([]);
</code></pre>
<p>The interface <code>IUser</code>, however, has permissions specified as follows:</p>
<pre><code>export interface IUser {
    permissions: Map&lt;string, boolean&gt;
}
</code></pre>
<p>How can I convert <code>Map&lt;string, boolean&gt;</code> type to <code>{ perm: string; isTrue: boolean; }[]</code>?</p>
<p>I've tried using <code>Map.prototype.forEach()</code> and <code>Map.prototype.entries()</code>, but couldn't figure out how to bring their results to the right type.</p>
<p>I also know that the reverse conversion can be done using the <a href=""https://stackoverflow.com/a/62866828/22873508"">following trick</a>, but not sure if it can be used the other way around.</p>
","2024-03-28 09:37:59","1","Question"
"78229372","78228332","","<p>Using data from @Nick, you could do:</p>
<pre><code>pd.DataFrame(map(dict, data))

   key1  key2  key3  key4
0   100   101   102   103
1   200   201   202   203
2   300   301   302   303
</code></pre>
","2024-03-27 04:38:32","0","Answer"
"78228439","78228332","","<p>Try executing the below mentioned code, It should work
import pandas as pd</p>
<pre><code># Your list of lists
data = [['key1', 'value1'],
        ['key2', 'value2'],
        ['key3', 'value3'],
        ['key4', 'value4']]

# Convert the list of lists into a dataframe
df = pd.DataFrame(data, columns=['Key', 'Value'])

# Display the original dataframe
print(&quot;Original DataFrame:&quot;)
print(df)

# Reshape the dataframe by setting the 'Key' column as the index
df.set_index('Key', inplace=True)

# Transpose the dataframe to convert keys into columns
df = df.T

# Reset the index to have numeric index
df.reset_index(drop=True, inplace=True)

# Display the final dataframe
print(&quot;\nFinal DataFrame:&quot;)
print(df)
</code></pre>
","2024-03-26 22:13:28","0","Answer"
"78228332","","Is there a function in pandas which lets you create columns for dictionary key + value pairs efficiently?","<p>I have a list of form [[[key1,value1],[key2,value2],...,500],...,n] - aka L2 orderbook data with 500 levels.
I want to translate this list into a dataframe, containing columns key_1,...,key_500 and value_1,...,value_500. - A dataframe that has a price + volume column for each level (e.g. level_1_volume, level_2_volume, ..., level_500_volume)</p>
<p>My current solution is simply looping through the existing dataframe (which simply has this list as a column) with df.iterrows(), extracting the values into separate lists, then creating dataframes using these lists and merging these as columns. Doesn't feel terribly efficient compared to other operations on my data set, is there some way to do this with built-in methods?</p>
<pre><code>List1 = [[key1.1,val1.1],[key2.1,val2.1],...]
List2 = [[key1.2,val1.2],[key2.2,val2.2],...]

         key1_column, val1_column, key2_column, val2_column
Row_List1 key1.1       val1.1           key2.1          val2.1
Row_List2 key1.2       val1.2           key2.2          val2.2
</code></pre>
<p>Current Solution
[&quot;bids&quot;] and [&quot;asks&quot;] simply contain dictionary/Json object of form {key1:value1; key2:value2} for 500 pairs.</p>
<pre><code># Initialize empty lists for prices and volumes
prices_bids = [[] for _ in range(500)]
volumes_bids = [[] for _ in range(500)]
prices_asks = [[] for _ in range(500)]
volumes_asks = [[] for _ in range(500)]

# Iterate through each row
for index, row in df.iterrows():

    attributes = row[&quot;bids&quot;]
    result_bids = [[key,attributes[key]] for key in sorted(attributes.keys(), reverse=True)]

    attributes = row[&quot;asks&quot;]
    result_asks = [[key,attributes[key]] for key in sorted(attributes.keys(), reverse=False)]
    
    for i in range(500):
        prices_bids[i].append(np.float64(result_bids[i][0]))
        volumes_bids[i].append(np.float64(result_bids[i][1]))
        prices_asks[i].append(np.float64(result_asks[i][0]))
        volumes_asks[i].append(np.float64(result_asks[i][1]))
        

# Create DataFrame from lists
for i in range(500):
    # Expressing prices as spreads
    df[f&quot;bid_level_{i}_price&quot;] = pd.Series((df[&quot;mid_price&quot;]/pd.Series(prices_bids[i],dtype='float64')-1)*10000,dtype=&quot;float64&quot;)
    df[f&quot;bid_level_{i}_volume&quot;] = pd.Series(volumes_bids[i],dtype='float64')
    df[f&quot;ask_level_{i}_price&quot;] = pd.Series((df[&quot;mid_price&quot;]/pd.Series(prices_asks[i],dtype='float64')-1)*10000,dtype=&quot;float64&quot;)
    df[f&quot;ask_level_{i}_volume&quot;] = pd.Series(volumes_asks[i],dtype='float64')
</code></pre>
","2024-03-26 21:47:29","0","Question"
"78228266","78228212","","<p>If you have valid lists, <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.explode.html"" rel=""nofollow noreferrer""><code>explode</code></a> and <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.split.html"" rel=""nofollow noreferrer""><code>split</code></a>:</p>
<pre><code>df = pd.DataFrame({'Id': ['001', '002'],
                   'Prices':   [[&quot;March:59&quot;, &quot;April:64&quot;, &quot;May:62&quot;], [&quot;Jan:55&quot;]]})

out = df.explode('Prices')
out[['date', 'price']] = out.pop('Prices').str.split(':', expand=True)
</code></pre>
<p>If you have strings, <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.extractall.html"" rel=""nofollow noreferrer""><code>str.extractall</code></a> with a regex and <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.join.html"" rel=""nofollow noreferrer""><code>join</code></a>:</p>
<pre><code>df = pd.DataFrame({'Id': ['001', '002'],
                   'Prices':   ['[&quot;March:59&quot;, &quot;April:64&quot;, &quot;May:62&quot;]', '[&quot;Jan:55&quot;]']})

out = (df.drop(columns='Prices') 
          .join(df['Prices'].str.extractall(r'(?P&lt;date&gt;[^&quot;:]+):(?P&lt;price&gt;[^&quot;:]+)')
                .droplevel('match'))
       )
</code></pre>
<p>Output:</p>
<pre><code>    Id   date price
0  001  March    59
0  001  April    64
0  001    May    62
1  002    Jan    55
</code></pre>
<p><a href=""https://regex101.com/r/PrkODm/1"" rel=""nofollow noreferrer"">regex demo</a> for the second approach.</p>
","2024-03-26 21:28:59","3","Answer"
"78228238","78228212","","<p>Try:</p>
<pre class=""lang-py prettyprint-override""><code># apply ast.literal_eval if necessary:
from ast import literal_eval

df[&quot;Prices&quot;] = df[&quot;Prices&quot;].apply(literal_eval)

df = df.explode(&quot;Prices&quot;)
df[[&quot;date&quot;, &quot;price&quot;]] = df.pop(&quot;Prices&quot;).str.split(&quot;:&quot;, n=1, regex=False).to_list()

print(df)
</code></pre>
<p>Prints:</p>
<pre class=""lang-none prettyprint-override""><code>   Id   date price
0   1  March    59
0   1  April    64
0   1    May    62
1   2    Jan    55
</code></pre>
","2024-03-26 21:23:57","2","Answer"
"78228212","","Python - Converting Date:Price list to new rows","<p>I am trying to convert the following column into new rows:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Id</th>
<th>Prices</th>
</tr>
</thead>
<tbody>
<tr>
<td>001</td>
<td>[&quot;March:59&quot;, &quot;April:64&quot;, &quot;May:62&quot;]</td>
</tr>
<tr>
<td>002</td>
<td>[&quot;Jan:55&quot;, ETC]</td>
</tr>
</tbody>
</table></div>
<p>to</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">id</th>
<th style=""text-align: center;"">date</th>
<th style=""text-align: right;"">price</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">001</td>
<td style=""text-align: center;"">March</td>
<td style=""text-align: right;"">59</td>
</tr>
<tr>
<td style=""text-align: left;"">001</td>
<td style=""text-align: center;"">April</td>
<td style=""text-align: right;"">64</td>
</tr>
<tr>
<td style=""text-align: left;"">001</td>
<td style=""text-align: center;"">May</td>
<td style=""text-align: right;"">62</td>
</tr>
<tr>
<td style=""text-align: left;"">002</td>
<td style=""text-align: center;"">Jan</td>
<td style=""text-align: right;"">55</td>
</tr>
</tbody>
</table></div>
<p>The date:price pairs aren't stored in a traditional dictionary format like the following solution:</p>
<p><a href=""https://stackoverflow.com/questions/68219903/convert-dictionary-keys-to-rows-and-show-all-the-values-in-single-column-using-p"">Convert dictionary keys to rows and show all the values in single column using Pandas</a></p>
<p>I managed to get the key:value pairs into individual rows like:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Id</th>
<th>Prices</th>
</tr>
</thead>
<tbody>
<tr>
<td>001</td>
<td>March:59</td>
</tr>
<tr>
<td>001</td>
<td>April:64</td>
</tr>
</tbody>
</table></div>
<p>And could split these into two columns using string manipulation but this feels inefficient instead of actually using the key:value pairs. Can anyone help please?</p>
","2024-03-26 21:18:06","2","Question"
"78227091","78227049","","<pre><code>def get_paths(d, path=''):
    paths = []
    for key, value in d.items():
        if isinstance(value, dict):
            paths.extend(get_paths(value, path + key + &quot;/&quot;))
        elif isinstance(value, list):
            for i, item in enumerate(value):
                if isinstance(item, dict) or isinstance(item, list):
                    paths.extend(get_paths(item, path + key + &quot;/&quot;))
                else:
                    paths.append(path + key + &quot;/&quot; + str(item))
        else:
            paths.append(path + key + &quot;/&quot; + str(value) if value else path + key + &quot;/&quot;)
    return paths

var={&quot;a&quot;:&quot;b&quot;,&quot;c&quot;:[&quot;d&quot;,&quot;e&quot;,{&quot;f&quot;:&quot;&quot;,&quot;h&quot;:[&quot;i&quot;,{&quot;j&quot;:&quot;q&quot;} ]}],&quot;m&quot;:&quot;&quot;,&quot;n&quot;:[&quot;d&quot;,&quot;e&quot;,{&quot;b&quot;:&quot;&quot;,&quot;c&quot;:&quot;&quot;,&quot;f&quot;:&quot;r&quot;}],&quot; r&quot;:&quot;r&quot;,&quot;k&quot;:[&quot;d&quot;,&quot;t&quot;,&quot;h&quot;]} 


paths = get_paths(var)
for path in paths:
    print(path)
</code></pre>
","2024-03-26 17:14:36","2","Answer"
"78227049","","return all paths in a nested dictionary that also contains a list in python","<p>First of all, I apologize for my poor English, I hope this question has been clearly stated.</p>
<p>I need a function that, when I call it, returns all possible paths of a nested dictionary that includes a list.</p>
<p>Example :</p>
<p>Input variable:</p>
<pre><code>var={&quot;a&quot;:&quot;b&quot;,&quot;c&quot;:[&quot;d&quot;,&quot;e&quot;,{&quot;f&quot;:&quot;&quot;,&quot;h&quot;:[&quot;i&quot;,{&quot;j&quot;:&quot;q&quot;} ]}],&quot;m&quot;:&quot;&quot;,&quot;n&quot;:[&quot;d&quot;,&quot;e&quot;,{&quot;b&quot;:&quot;&quot;,&quot;c&quot;:&quot;&quot;,&quot;f&quot;:&quot;r&quot;}],&quot; r&quot;:&quot;r&quot;,&quot;k&quot;:[&quot;d&quot;,&quot;t&quot;,&quot;h&quot;]} 
</code></pre>
<p>The output should look like this:</p>
<pre><code>a/b 
c/d 
c/e 
c/f/ 
c/h/i 
c/h/j/q 
m/
n/d
n/e
n/b/
n/c/
n/f/r 
r/r 
k/d 
k/t 
k/h 
</code></pre>
<p>Notes :</p>
<p>It doesn't matter if the lines are printed in the order of the lines above, but the values of the lines must be the same as the lines above . Each path starts with the key of the outermost dictionary and ends when it can no longer be continued, that is, for example, we reach a dictionary value that is not a dictionary or a list, or we reach an item from a list, but if we reach a list or a dictionary, for example The path must continue</p>
","2024-03-26 17:06:32","1","Question"
"78223880","78222933","","<pre><code>import urllib.request, json
import pandas as pd

url = &quot;https://api.wto.org/timeseries/v1/indicator_categories?lang=1&quot;
hdr = {
    'Cache-Control': 'no-cache',
    'Ocp-Apim-Subscription-Key': '21cda66d75fc4010b8b4d889f4af6ccd',
}

# Prepare and make the request
req = urllib.request.Request(url, headers=hdr)
with urllib.request.urlopen(req) as response:
    data = response.read().decode('utf-8')  # Decode response

# Load JSON data
json_data = json.loads(data)

# Determine if the JSON data is a list or a dictionary
if isinstance(json_data, dict):
    # If the JSON is a dictionary, you might want to access a particular key
    # Adjust 'your_key_here' to the actual key you need, e.g., 'results'
    if 'your_key_here' in json_data:
        data_to_load = json_data['your_key_here']
        df = pd.DataFrame(data_to_load)
    else:
        print(&quot;Expected key not found in JSON data&quot;)
elif isinstance(json_data, list):
    # If the JSON is directly a list
    df = pd.DataFrame(json_data)
else:
    print(&quot;Unexpected JSON structure&quot;)

print(df.head())  # Display the first few rows to verify
</code></pre>
","2024-03-26 08:30:58","2","Answer"
"78222933","","Converting a List of Dictionaries to Pandas Dataframe","<p>I have this code:</p>
<pre><code>import urllib.request, json
url = &quot;https://api.wto.org/timeseries/v1/indicator_categories?lang=1&quot;

hdr ={
    # Request headers
    'Cache-Control': 'no-cache',
    'Ocp-Apim-Subscription-Key': '21cda66d75fc4010b8b4d889f4af6ccd',
    }

req = urllib.request.Request(url, headers=hdr)

req.get_method = lambda: 'GET'
response = urllib.request.urlopen(req)
    #print(response.getcode())
var = print(response.read().decode('ASCII'))
</code></pre>
<p>I tried this:</p>
<pre><code>import pandas as pd
df = pd.DataFrame(var)
</code></pre>
<p>I am only getting an empty dataframe. The data is lost somehow. What am I doing wrong?</p>
<p>Also tried:</p>
<pre><code>var = (response.read().decode('ASCII'))
</code></pre>
<p>This returns Byte String which I am not able to convert using eval():</p>
<pre><code>eval(var)
</code></pre>
<blockquote>
<p>NameError: name 'null' is not defined</p>
</blockquote>
<p>I don't know how to proceed.</p>
","2024-03-26 04:08:34","0","Question"
"78222439","78220006","","<p>If <code>ThingWithIncrediblyLargeArrays</code> is a class, <code>hot</code> will trivially act like a &quot;pointer&quot;. After all, classes are <em>reference</em> types, and <code>hot</code> will return a reference.</p>
<p>From now on I will assume <code>ThingWithIncrediblyLargeArrays</code> is a struct.</p>
<p><code>Array</code> is copy-on-<em><strong>write</strong></em>. For the array storage to be copied, it has to</p>
<ul>
<li>be <em>written</em>, and</li>
<li>it is shared by multiple <code>Array</code> variables (i.e. <a href=""https://developer.apple.com/documentation/swift/isknownuniquelyreferenced(_:)-98zpp"" rel=""nofollow noreferrer""><code>isKnownUniquelyReferenced</code></a> is false)</li>
</ul>
<p>In both cases A and B, <code>hot</code>'s getter returns a copy of <code>ThingWithIncrediblyLargeArrays</code>, but the arrays in the copies will share the same storage, because you are not writing to <code>hugestuff.hot.enormousArray</code>.</p>
<p>However, <code>hot</code> is not completely like a pointer. If you do:</p>
<pre><code>hugeStuff.hot.enormousArray[someIndex] = something
</code></pre>
<p><code>hot</code> returns a copy of <code>ThingWithIncrediblyLargeArrays</code>, which shares the array storage with <code>dataSources[currentThing]</code>. Then you modified the <code>enormousArray</code> of the copy returned by <code>hot</code>. Now the array storage cannot be shared, so the whole array storage will be copied.</p>
<p>You can think of this as:</p>
<pre><code>let temp = hugeStuff.hot
temp.enormousArray[someIndex] = something
hugeStuff.hot = temp
</code></pre>
<p>The array storage is not uniquely referenced here - <code>temp</code> and <code>huge.dataSources[someIndex]</code> share the storage.</p>
<p>A good way to determine whether array storages are copied is to use the &quot;Allocations&quot; tool in Instruments. Try it with this code:</p>
<pre><code>struct ThingWithIncrediblyLargeArrays {
    var enormousArray = Array(repeating: 1, count: 1000)
    var searchRows = [&quot;Row1&quot;, &quot;Row2&quot;, &quot;Row3&quot;]
}

class HugeStuff {
    var dataSources = [&quot;Foo&quot;: ThingWithIncrediblyLargeArrays()]
    var currentThing = &quot;Foo&quot;
    
    var hot: ThingWithIncrediblyLargeArrays {
        get { dataSources[currentThing]! }
        set { dataSources[currentThing] = newValue }
    }
}

let hugeStuff = HugeStuff()
// run each of these loops separately:

// case A
//for i in 0..&lt;1000 {
//    let x = hugeStuff.hot.enormousArray[i]
//    print(x)
//}

// case B
//for i in 0..&lt;1000 {
//    hugeStuff.hot.searchRows = [&quot;Row \(i)&quot;]
//    print(&quot;x&quot;)
//}

// case C
//for i in 0..&lt;1000 {
//    hugeStuff.hot.enormousArray[i] = i
//    print(&quot;x&quot;)
//}
</code></pre>
<p>You can filter by &quot;array&quot;, and you will see something like this in Instruments for case C:</p>
<p><a href=""https://i.sstatic.net/vDFep.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/vDFep.png"" alt=""enter image description here"" /></a></p>
<p>The name <code>_TtGCs23_ContiguousArrayStorageSi_</code> is the mangled name for <code>ContiguousArrayStorage&lt;Int&gt;</code>. You can demangle these using the <code>swift demangle</code> command.</p>
","2024-03-26 01:02:42","1","Answer"
"78221729","78221702","","<pre><code>import pandas as pd
d = {'name': ['Tom', 'Patrick', 'Lamar'], 'rating': [100, 97, 95]}
df = pd.DataFrame(data=d)

tier1 = ['Tom', 'Patrick']
tier2 = ['Lamar']
</code></pre>
<p>In the next part create dictionary mapping to check name - tiers relation.</p>
<pre><code>tier_dict = {tier: idx + 1 for idx, tier_list in enumerate([tier1, tier2]) for tier in tier_list}
</code></pre>
<p>Last part use mapping to create new column</p>
<pre><code>df['tier'] = df['name'].map(tier_dict)

print(df)
</code></pre>
<p>Output should be like that.</p>
<pre><code>      name  rating  tier
0      Tom     100     1
1  Patrick      97     1
2    Lamar      95     2
</code></pre>
","2024-03-25 20:54:45","1","Answer"
"78221702","","How to create dataframe column that references a list of lists and assigns a value","<p>It seems my question is similar to a few others but I can't find one that fits my exact question, so apologies if I did not come across this particular answer if it already exists. <a href=""https://stackoverflow.com/questions/73776248/pandas-how-do-i-create-a-new-column-given-the-column-values-exist-in-a-list-of"">This</a> question was somewhat similar, but I don't want to assign a list as the new column value, I want to assign the name of the corresponding list as the column value.</p>
<p>For example, with a data frame such as this:</p>
<pre class=""lang-py prettyprint-override""><code>d = {'name': ['Tom', 'Patrick', 'Lamar'], 'rating': [100, 97, 95]}
df = pd.DataFrame(data=d)
print(df)
</code></pre>
<p>And a collection of lists such as this:</p>
<pre class=""lang-py prettyprint-override""><code>tier1 = ['Tom', 'Patrick']
tier2 = ['Lamar']
</code></pre>
<p>How do I efficiently create a new 'tier' column such as this:</p>
<pre class=""lang-py prettyprint-override""><code>d = {'name': ['Tom', 'Patrick', 'Lamar'], 'rating': [100, 97, 95], 'tier': [1, 1, 2]}
df = pd.DataFrame(data=d)
print(df)
</code></pre>
<p>My actual dataframe is ~300 rows and I have 11 tier lists. I originally approached this as a looping problem, but wasn't sure how to loop over the rows of the dataframe with <code>pd.iterrows()</code> by checking the 'name' column, finding what tier list it resides in, and then assigning the tier to the new column. I've seen similar types of problems where people make use of dictionaries instead of lists, so I converted my tier lists into a dictionary like below:</p>
<pre class=""lang-py prettyprint-override""><code>tier_dict = {
    1: tier1,
    2: tier2
}
print(tier_dict)
</code></pre>
<p>But I realized that most examples make use of the column variable matching a key in the dict and then assigning the value to the column, but in my case I want to assign the key as the new column value, and this is where I currently am. Thank you for any help!</p>
","2024-03-25 20:49:29","1","Question"
"78220577","78220018","","<p>You can simplify it by using LINQ. The <code>GroupBy</code> extension method is already optimized for aggregating items.</p>
<pre class=""lang-cs prettyprint-override""><code>Dictionary&lt;int, List&lt;Item&gt;&gt; itemGroups = dtItems.Rows.Cast&lt;DataRow&gt;()
    .GroupBy(row =&gt; (int)row[&quot;GroupNum&quot;])
    .ToDictionary(g =&gt; g.Key,
        g =&gt; g.Select(row =&gt; new Item(
            row[&quot;ID&quot;].ToString(),
            row[&quot;Name&quot;].ToString(),
            row[&quot;Description&quot;].ToString())
        ).ToList());
</code></pre>
<p>As other have already pointed out, don't convert values if you can cast them. If the <code>GroupNum</code> column contains an <code>int</code>, then simply cast the value to <code>int</code>. However, if a column is nullable, then it can contain a <code>DBNull.Value</code>. Let's assume that <code>ID</code> and <code>Name</code> are NOT NULL columns  but that the <code>Description</code> is optional and therefore a NULL column. Then you could optimize the creation of an item like this:</p>
<pre class=""lang-cs prettyprint-override""><code>g =&gt; g.Select(row =&gt; new Item(
    (string)row[&quot;ID&quot;],
    (string)row[&quot;Name&quot;],
    row[&quot;Description&quot;].ToString())
</code></pre>
<p>Note also that an <code>IEnumerable&lt;T&gt;</code> queries the source every time it is enumerated. An <code>IEnumerable&lt;T&gt;</code> is not a collection, but a way to iterate over a data source. We could have dropped the <code>.ToList()</code> and typed the dictionary values as <code>IEnumerable&lt;Item&gt;</code> instead. But with the consequence that enumerating the dictionary values would have executed the whole <code>Select</code> including the <code>new Item(...)</code> every time.</p>
<p>see also: <a href=""https://engineering.payoneer.com/understanding-c-linqs-deferred-execution-ba388a3ce995"" rel=""nofollow noreferrer"">Understanding C# LINQ’s deferred execution</a></p>
","2024-03-25 16:49:54","0","Answer"
"78220373","78220213","","<p>Considering your expected output, you could do something like this using <code>dict</code> comprehension:</p>
<pre><code>import numpy as np

filtered_indices = np.where(dataset[&quot;site&quot;] == &quot;YALE&quot;)[0].tolist()
dataset = {k: np.delete(v, filtered_indices) for k, v in dataset.items()}
</code></pre>
<pre class=""lang-none prettyprint-override""><code>{'timeseires': array([  7.39066 ,  20.651941,   4.07861 , -11.752331, -34.611312,
        -5.653222,   7.39066 ,  20.651941,   4.07861 , -11.752331,
       -34.611312]), 'site': array(['KKI'], dtype='&lt;U8')}
</code></pre>
","2024-03-25 16:07:22","0","Answer"
"78220317","78220213","","<p>From the output given, it seems like your task is to extract the <code>'timeseries'</code> value corresponding to the index of the <code>'YALE'</code>.</p>
<p>This code should do the trick:</p>
<pre><code>def filter_dictionary_by_value(dataset, value):
    index_value = np.where(dataset['site'] == value)[0]
    filtered_timeseries = dataset['timeseries'][index_value]
    

    filtered_dict = {
        'timeseries': filtered_timeseries,
        'site': np.array([value], dtype='&lt;U8')
    }
</code></pre>
<p>If this wasn't what you were expecting please be more specific in the question.</p>
","2024-03-25 15:58:02","0","Answer"
"78220213","","Filter dictionary with values of different types","<p>I am trying to filter dictionary by value (dictionary with different data types), but got the error:</p>
<blockquote>
<p>ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()</p>
</blockquote>
<p>I want to get all records corresponding to 'YALE' value in my dictionary.</p>
<p>This is my code:</p>
<pre><code>dataset = {
    'timeseires': array([[
        [ -5.653222,   7.39066 ,  20.651941, 4.07861 ,-11.752331, -34.611312],
        [ -5.653222,   7.39066 ,  20.651941, 4.07861 ,-11.752331, -34.611312]
    ]]),
    'site': array(['YALE', 'KKI'], dtype='&lt;U8')
}

dataset = data.tolist()
 
def filter(pairs):
    key, value = pairs
    filter_key = 'site'
    if key == filter_key and value == 'YALE':
        return True
    else:
        return False
         
final_dic = dict(filter(filter, dataset.items()))
print(final_dic)
</code></pre>
<p>The expected output:</p>
<pre><code>&gt; dataset = {
&gt;         'timeseires': array([[
&gt;             [ -5.653222,   7.39066 ,  20.651941, 4.07861 ,-11.752331, -34.611312]
&gt;         ]]),
&gt;         'site': array(['KKI'], dtype='&lt;U8')
&gt;     }
</code></pre>
","2024-03-25 15:37:12","-2","Question"
"78220018","","How do I improve the performance of this C# code - looping through a DataTable and building a Dictionary?","<p>I am looping through a collection (DataTable) where each item has a &quot;group number&quot; and building a dictionary where each key corresponds to the group number. There's about a million records in the DataTable and I am running into memory issues when this runs. I was wondering if I could get some feedback on how to make this perform better. I think maybe one issue is where I am creating a new <code>tempList</code> on each iteration.</p>
<p>I really appreciate any feedback here.</p>
<pre><code>Dictionary&lt;int, IEnumerable&lt;Item&gt;&gt; itemGroups = new Dictionary&lt;int, IEnumerable&lt;Item&gt;&gt;();
foreach (DataRow row in dtItems.Rows)
{
    Item item = new Item(row[&quot;ID&quot;].ToString(),
        row[&quot;Name&quot;].ToString(),
        row[&quot;Description&quot;].ToString());

    Int32.TryParse(row[&quot;GroupNum&quot;].ToString(), out int groupNum);
    if (!itemGroups.ContainsKey(groupNum))
    {
        List&lt;Item&gt; itemList = new List&lt;Item&gt;();
        itemList.Add(item);
        itemGroups.Add(groupNum, itemList);
    }
    else
    {
        var tempList = itemGroups[groupNum].ToList();
        tempList.Add(item);
        itemGroups[groupNum] = tempList;
    }
}
</code></pre>
","2024-03-25 15:07:09","-1","Question"
"78220006","","Is it perfectly correct that this computed property will work like a ""pointer"" in current Swift?","<p>Have a data source singleton with</p>
<pre><code>class hugestuff ..{

   var dataSources: [String: ThingWithIncrediblyLargeArrays] ..

   var currentThing: String

}
</code></pre>
<p><code>ThingWithIncrediblyLargeArrays</code> is indeed a <code>struct</code>. A typical use might be enormous tables of values to display in a grid on a screen. Each <code>ThingWithIncrediblyLargeArrays</code> - that is to say each entry in the <code>.dataSources</code> dictionary - could be a different screen, say.</p>
<pre><code>struct ThingWithIncrediblyLargeArrays {
   var rawUnsorted: [[String]]
   var liveSorted: [[String]]
   var swapValues: [[String]]
}
</code></pre>
<p>So throughout the app, you're accessing</p>
<pre><code>  cell.data = hugestuff.dataSources[currentThing].unsortedRows[3489412]
</code></pre>
<p>and so on.</p>
<p>And indeed sometimes changing things ...</p>
<pre><code>  hugestuff.dataSources[currentThing].searchRows =
       hugestuff.dataSources[currentThing].unsortedRows.filter{blah}
</code></pre>
<p>This is all fantastic but <em><strong>purely as sugar</strong></em> it would be more convenient and sturdy if</p>
<pre><code>  cell.data = hugestuff.hot.unsortedRows[3489412]

  hugestuff.hot.searchRows = hugestuff.hot.unsortedRows.filter{blah}
</code></pre>
<p>Well now, I believe that to achieve that, if you do this</p>
<pre><code>var hot: ThingWithIncrediblyLargeArrays {
    get { dataSources[currentThing] }
    set { dataSources[currentThing] = newValue }
}
</code></pre>
<p>it all works.</p>
<p>In other words, the Way to do a &quot;pointer or macro like thing&quot;, in this situation with a dictionary in Swift, is as above.</p>
<p>In fact, does that safely and correctly works in the intended way? To wit,</p>
<p>(A)</p>
<pre><code>x = hugestuff.hot.enormousArray[13]
</code></pre>
<p>will <em><strong>not</strong></em> pointlessly copy the array during the process and</p>
<p>(B)</p>
<pre><code>hugestuff.hot.searchRows = .. some new or modified array
</code></pre>
<p>will indeed <em><strong>&quot;actually change&quot;</strong></em> that array, i.e., it won't just instead incorrectly change some transient copy of the array somewhere.</p>
<h4>To repeat, in (B),</h4>
<pre><code>hugestuff.hot.searchRows = hugestuff.hot.other.sortwhatever
</code></pre>
<p>Is hoping to be the same as</p>
<pre><code>hugestuff.dataSources[&quot;electrons&quot;].searchRows = 
   hugestuff.dataSources[&quot;electrons&quot;].other.sortwhatever
</code></pre>
<p>In other words I am hoping that <code>hugestuff.hot.searchRows = ..</code> <strong>in fact actually changes</strong> <code>hugestuff.dataSources[&quot;electrons&quot;]</code></p>
<p>Is this perfectly correct?</p>
<p>I mention &quot;current&quot; Swift because, of course, Swift dramatically changed how arrays work at one point, and, Swift uses the ingenious <em>(&quot;But ask on SO before you try anything tricky&quot;)</em> copy-only-on-need approach for big arrays (or indeed any arrays).</p>
<hr />
<p>BTW here is a fantastically useful answer to a related question <a href=""https://stackoverflow.com/q/77969431/294884"">Is it absolutely the case that Swift &gt;will not&lt; deep copy a large array, when one &quot;guard let&quot; the array?</a></p>
<hr />
<p>Coda, just for anyone browsing this, as well as the pure macro-like syntax sugar aspect (&quot;it is much quicker to just type .hot&quot;), a really useful thing is you can ..</p>
<pre><code>var hot: .. {
    get { dataSources[currentThing] ?? some empty value }
</code></pre>
<p>If dataSources[&quot;sales&quot;] say does not exist yet (for whatever reason: whether by design, eg, you are building them lazily, streaming, processing on other cores, whatever, or indeed just a plain programming mistake) you can handle all that in there.</p>
","2024-03-25 15:04:32","0","Question"
"78219703","78219506","","<p>Yield parent in addition to key, value pair.</p>
<pre><code>def recursive(src, so_far=()):
    if isinstance(src, dict):
        for key, value in src.items():
            if isinstance(value, dict) or isinstance(value, list):
                yield from recursive(value, so_far + (key,))
            else:
                yield src, key, value
    elif isinstance(src, list):
        for index, value in enumerate(src):
            if isinstance(value, dict) or isinstance(value, list):
                yield from recursive(value, so_far + (index,))
            else:
                yield src, index, value
    else:
        raise ValueError

for parent, key, value in recursive(example_dict):
    parent[key] = &quot;modified &quot; + value
</code></pre>
","2024-03-25 14:13:31","0","Answer"
"78219546","78219506","","<p>How about something like this? You'd need to modify the <code>modifier</code> according to your requirements, of course; for the code below, the output is</p>
<pre><code>{'key1': 'value1',
 'key2': {'key2a': 'value2a'},
 'key3': {'key3a': {'key3aa': 'value3aa modified',
                    'key3ab': 'value3ab modified',
                    'key3ac': 'value3ac modified'},
          'key3b': ['value3b1 modified', 'value3b2 modified']}}
</code></pre>
<pre><code>def modify_recursively_in_place(d, modifier, path=()):
    for k, v in d.items():
        if isinstance(v, dict):
            modify_recursively_in_place(v, modifier, (*path, k))
        elif isinstance(v, list):
            for i, e in enumerate(v):
                if isinstance(e, (dict, list)):
                    modify_recursively_in_place(e, modifier, (*path, k, i))
                else:
                    v[i] = modifier(v[i], (*path, k, i))
        else:
            d[k] = modifier(v, (*path, k))


# ---


def modifier(value, path):
    if isinstance(path[-1], str) and path[-1].startswith(&quot;key3a&quot;):
        value = f&quot;{value} modified&quot;
    if isinstance(path[-1], int):
        value = f&quot;{value} modified&quot;
    return value


example_dict = {
    &quot;key1&quot;: &quot;value1&quot;,
    &quot;key2&quot;: {
        &quot;key2a&quot;: &quot;value2a&quot;,
    },
    &quot;key3&quot;: {
        &quot;key3a&quot;: {
            &quot;key3aa&quot;: &quot;value3aa&quot;,
            &quot;key3ab&quot;: &quot;value3ab&quot;,
            &quot;key3ac&quot;: &quot;value3ac&quot;,
        },
        &quot;key3b&quot;: [
            &quot;value3b1&quot;,
            &quot;value3b2&quot;,
        ],
    },
}


modify_recursively_in_place(example_dict, modifier)

print(example_dict)
</code></pre>
","2024-03-25 13:44:48","0","Answer"
"78219506","","How to change values of nested keys","<p>Goal: I am trying to change the values for a nested dictionary <strong>where I don't know the exact structure of the dictionary</strong> beforehand.</p>
<p>Here is a sample input dictionary:</p>
<pre><code>example_dict = {
    'key1': 'value1',
    'key2': {
        'key2a': 'value2a'
    },
    'key3': {
        'key3a': {
            'key3aa': 'value3aa',
            'key3ab': 'value3ab',
            'key3ac': 'value3ac'
        },
        'key3b': [
            'value3b1',
            'value3b2'
        ]
    },
}
</code></pre>
<p>Desired output:</p>
<pre><code>example_dict = {
    'key1': 'changed_value1',
    'key2': {
        'key2a': 'changed_value2a'
    },
    'key3': {
        'key3a': {
            'key3aa': 'changed_value3aa',
            'key3ab': 'changed_value3ab',
            'key3ac': 'changed_value3ac'
        },
        'key3b': [
            'changed_value3b1',
            'changed_value3b2'
        ]
    },
}
</code></pre>
<p>What I tried: First, I am recursively finding they keys and values for the dictionary.</p>
<pre><code>def recursive(src, so_far=()):
    if isinstance(src, dict):
        for key, value in src.items():
            yield from recursive(value, so_far + (key,))
    elif isinstance(src, list):
        for item in src:
            yield from recursive(item, so_far)
    else:
        yield ' '.join(so_far + (src,))

for line in recursive(example_dict):
    print(line)
</code></pre>
<p>This prints:</p>
<pre class=""lang-none prettyprint-override""><code>key1 value1
key2 key2a value2a
key3 key3a key3aa value3aa
key3 key3a key3ab value3ab
key3 key3a key3ac value3ac
key3 key3b value3b1
key3 key3b value3b2
</code></pre>
<p>Now that I know the structure for the dictionary, I want to edit the values.</p>
<p>This is where I am stuck.</p>
<p>I know I can change dictionary values by doing the following:</p>
<pre><code>example_dict['key1'] = 'changed_value1'
</code></pre>
<p>But how exactly would I use a loop to change the values of nested keys?</p>
<p>In other words, what I want is to generate the following commands:</p>
<pre><code>example_dict['key1'] = 'changed_value1'
example_dict['key2'] ['key2a] = 'changed_value2a'
example_dict['key3'] ['key3a] ['key3aa'] = 'changed_value3aa'
example_dict['key3'] ['key3a] ['key3ab'] = 'changed_value3ab'
example_dict['key3'] ['key3a] ['key3ac'] = 'changed_value3ac'
example_dict['key3'] ['key3b] = 'changed_value3b1', 'changed_value3b2'
</code></pre>
","2024-03-25 13:38:42","0","Question"
"78219189","78219170","","<p>At least for the second error you need to write <code>for key, values in prof.items():</code></p>
","2024-03-25 12:47:28","0","Answer"
"78219187","78219170","","<p>Normally, you could parse it directly to a <code>defaultdict</code> with <code>list</code> as the default value factory.</p>
<pre><code>from collections import defaultdict

profr = defaultdict(list)
with open('trial.txt', 'r') as f:
    for line in f:
        v, k = line.strip(', \n').split(':')
        profr[k].append(v)
</code></pre>
<p>The <code>defaultdict(list)</code> object behaves just like a dictionary, with the exception of when a new key is pass, it creates an empty list instead of raising a KeyError.</p>
<hr />
<p><strong>However</strong>, since you said you <em>cannot import anything</em>, you can replicate this behavior with the regular dictionary using the <code>setdefault</code> method:</p>
<pre><code>profr = {}

with open('trial.txt', 'r') as f:
    for line in f:
        v, k = line.strip(', \n').split(':')
        profr.setdefault(k, []).append(v)

with open('out.txt', 'w') as fp:
    for k, v_list in profr.items():
        v_str = ', '.join(v_list)
        fp.write(f'{k}:{v_str}\n')
</code></pre>
<p>The <code>setdefault(key, value)</code> method of a dictionary does the following:</p>
<ul>
<li>if <code>key</code> exists in the dictionary, it returns existing value</li>
<li>if <code>key</code> does not exist, it adds <code>key</code>, sets the value to <code>value</code> and returns <code>value</code>.</li>
</ul>
<p>So in your case, if the key does not exist, a new empty list is assigned to the value for that key; and the empty list is returned, allowing us to call <code>.append</code>.</p>
<p>But if the key already exists - in this case, with a list as the value - then the list is returned, also allowing us to call <code>.append</code>.</p>
<p>As your code reads each line of text, you can parse it directly to what you need.  In this case, since you are swapping the keys and values, then you can simply parse each line as a <code>value:key</code> pair, instead of the other way.  That is what this line is doing:</p>
<pre><code>v, k = line.strip(', \n').split(':')
</code></pre>
<p>The value comes first, and the key second.  It is also cleaning up any extra whitespace and commas.</p>
","2024-03-25 12:47:01","2","Answer"
"78219170","","How do i swap my keys and values without it reading letter for letter?","<p>I have to read a text file and make it a dictionary, then swap those keys and values and write it back to a new file, I cannot import anything either, the issue I'm having is right now I end up with it turning my values into letter by letter instead of words.</p>
<p>my text file is this:</p>
<pre><code>Cloth:Stitching
Leather:Stitching,
Blacksmith:Molding
Pottery:Shaping
Metalworking:Molding
Baking:Heating
</code></pre>
<p>This has been a struggle because I do not know why, but lists, dictionaries and tuples are something my head is not wrapping around.</p>
<p>I tried to write my code in 2 ways</p>
<p>1st:</p>
<pre><code>with open('trial.txt', 'r') as f:
    fr = f.readlines()
    prof = {}
    for line in fr:
        key , value=line.strip().split(&quot;:&quot;)
        prof[key]=value
        profr = {}
        for key, values in prof.items():
            for value in values:
                if value in profr:
                    profr[value].append(key)
                else:
                    profr[value]=[key]

</code></pre>
<p>output:</p>
<pre><code>{',': ['Leather'],
 'H': ['Baking'],
 'M': ['Blacksmith', 'Metalworking'],
 'S': ['Cloth', 'Leather', 'Pottery'],
 'a': ['Pottery', 'Baking'],
 'c': ['Cloth', 'Leather'],
 'd': ['Blacksmith', 'Metalworking'],
 'e': ['Baking'],
 'g': ['Cloth', 'Leather', 'Blacksmith', 'Pottery', 'Metalworking', 'Baking'],
 'h': ['Cloth', 'Leather', 'Pottery'],
 'i': ['Cloth',
       'Cloth',
       'Leather',
       'Leather',
       'Blacksmith',
       'Pottery',
       'Metalworking',
       'Baking'],
 'l': ['Blacksmith', 'Metalworking'],
 'n': ['Cloth', 'Leather', 'Blacksmith', 'Pottery', 'Metalworking', 'Baking'],
 'o': ['Blacksmith', 'Metalworking'],
 'p': ['Pottery'],
 't': ['Cloth', 'Cloth', 'Leather', 'Leather', 'Baking']}
</code></pre>
<p>2nd try which just removes <code>.items()</code> to resemble my old code that worked however that code did not read a text file:</p>
<pre><code>with open('trial.txt', 'r') as f:
    fr = f.readlines()
    prof = {}
    for line in fr:
        key , value=line.strip().split(&quot;:&quot;)
        prof[key]=value
        profr = {}
        for key, values in prof:
            for value in values:
                if value in profr:
                    profr[value].append(key)
                else:
                    profr[value]=[key]
</code></pre>
<p>output:</p>
<pre><code>*** Remote Interpreter Reinitialized ***
Traceback (most recent call last):
  File &quot;D:\code\Scripts\Menu.py&quot;, line 8, in &lt;module&gt;
    for key, values in prof:
        ^^^^^^^^^^^
ValueError: too many values to unpack (expected 2)
</code></pre>
<p>What do I need to do to get the desired output of:</p>
<pre><code>Stitching: Cloth, Leather
Molding: Blacksmith, Metalworking
Shaping:Pottery
Heating:Baking
</code></pre>
<p>An explanation or links to an explanation would be helpful. I have googled a lot though so I do not know if anyone would link something I have not seen yet.</p>
","2024-03-25 12:43:38","0","Question"
"78216638","78184191","","<p>Where in the docs does it say that associate arrays are passed by ref? If you want a ref, your function should have the ref keyword in the function signature. It's the same thing with normal arrays.</p>
","2024-03-25 01:01:37","0","Answer"
"78216376","78216345","","<p>You can find duplicates in <code>ID</code> column with <code>pd.Series.duplicated</code> and fill the duplicates with blank value <code>''</code>:</p>
<pre class=""lang-py prettyprint-override""><code>mask = df[&quot;ID&quot;].duplicated(keep=&quot;first&quot;)

df.loc[mask, &quot;ID&quot;] = &quot;&quot;
df[&quot;NEW_ID&quot;] = df[&quot;NEW_ID&quot;].fillna(&quot;&quot;)

print(df)
</code></pre>
<p>Prints:</p>
<pre class=""lang-none prettyprint-override""><code>     ID NEW_ID  OLD_PRICE  NEW_PRICE   LABEL
0  6610   6615      17.22      17.22    NaN1
1         6615      17.90      17.22    NaN2
2         6615      17.22      27.49    NaN4
3  6620             27.49      18.99     NaN
4                   20.42      27.49      Na
5  7540             30.73      29.55       A
6                   29.55      27.49       B
</code></pre>
<hr />
<p>NOTE: If you need strip whitespace characters from your dataframe elements you can use this code:</p>
<pre class=""lang-py prettyprint-override""><code>df = df.applymap(lambda elem: elem.strip() if isinstance(elem, str) else elem)
</code></pre>
","2024-03-24 22:45:32","1","Answer"
"78216345","","Concatenate the rows of each column being grouped by identify","<p>Welcome Help.</p>
<p>I would like to merge multiple rows of each ID of a dataframe into a single cell, Below is input format:</p>
<p><img src=""https://i.sstatic.net/P1sw5.png"" alt=""enter image description here"" /></p>
<p>I have the following list of columns and Dataframe in pandas respectively</p>
<pre><code>dict1 = {'ID': ['6610', '6610', '6610', '6620', '6620', '7540', '7540'],
 'NEW_ID': ['6615',
  '6615',
  '6615',
  '   ',
  '                                                                                    ',
  nan,
  nan],
 'OLD_PRICE': [17.22, 17.9, 17.22, 27.49, 20.42, 30.73, 29.55],
 'NEW_PRICE': [17.22, 17.22, 27.49, 18.99, 27.49, 29.55, 27.49],
 'LABEL': ['  NaN1', '  NaN2', '  NaN4', nan, '  Na', 'A', 'B']}

df = pd.DataFrame(dict1)

</code></pre>
<p>Expected output:</p>
<p><img src=""https://i.sstatic.net/8jvJM.png"" alt=""enter image description here"" /></p>
","2024-03-24 22:32:39","1","Question"
"78215643","78212325","","<p>This can't be done; it's impossible to annotate a dictionary with per-element constraints. The solution is to annotate the dictionary to represent its mapping from types to objects, and then make the methods themselves generic.</p>
<pre><code>import typing

T = typing.TypeVar(&quot;T&quot;)


class TypeToObject:
    def __init__(self) -&gt; None:
        self._dict: dict[typing.Type, list[object]] = {}

    def add(self, obj: object) -&gt; None:
        if type(obj) not in self._dict:
            self._dict[type(obj)] = []

        self._dict[type(obj)].append(obj)

    def get(self, obj_type: type[T]) -&gt; list[T] | None:
        if (maybe_list := self._dict.get(obj_type, None)) is not None:
            return typing.cast(list[T], maybe_list)

        return None


if __name__ == &quot;__main__&quot;:
    tto = TypeToObject()
    tto.add(3)
    tto.add(1)
    tto.add(2)
    print(tto.get(int))

    tto.add(&quot;hello&quot;)
    tto.add(&quot;world&quot;)
    print(tto.get(str))
</code></pre>
<p>Note that in Python 3.12+, the <code>TypeVar</code> can be omitted, and <code>get</code> can look simply like:</p>
<pre><code>    def get[T](self, obj_type: type[T]) -&gt; list[T] | None:
        return self._dict.get(obj_type, None)
</code></pre>
","2024-03-24 18:27:51","0","Answer"
"78215301","78215246","","<p>The problem is on this line:</p>
<pre><code>m.set(k, nestedObj2Map(v, m));
</code></pre>
<p>You're passing the map recursively. Removing <code>m</code> from the passed parameters will work.</p>
<p>Your code will be like this:</p>
<pre><code>const exampleInput = { a: 1, b: { c: 2, d: { e: 3 } } };
const expectedOutput = new Map([['a', 1], ['b', new Map([['c', 2], ['d', new Map([['e', 3]])]])]]);
const nestedObj2Map = (o, m = new Map()) =&gt; {
  for (const [k, v] of Object.entries(o)) {
    if (typeof (v) === 'object' &amp;&amp; v !== null) {
      m.set(k, nestedObj2Map(v)); // removed m from the parameters
    } else m.set(k, v);
  }
  return m;
};
nestedObj2Map(exampleInput);
</code></pre>
<p>The reason the previous implementation doesn't work is that you want each level of nesting to have its own <code>Map</code>, but when you pass the previous map as a parameter, each recursive call will actually just modify the initial map instead of creating a new one.</p>
","2024-03-24 16:39:09","2","Answer"
"78215246","","How can I convert an arbitrarily deep nested object to a similarly nested Map?","<p>I am trying to convert an arbitrarily deep nested object to a similarly nested Map.</p>
<pre><code>const exampleInput = { a: 1, b: { c: 2, d: { e: 3 } } };
const expectedOutput = new Map([['a', 1], ['b', new Map([['c', 2], ['d', new Map([['e', 3]])]])]]);
const nestedObj2Map = (o, m = new Map()) =&gt; {
  for (const [k, v] of Object.entries(o)) {
    if (typeof (v) === 'object' &amp;&amp; v !== null) {
      m.set(k, nestedObj2Map(v, m));
    } else m.set(k, v);
  }
  return m;
};
nestedObj2Map(exampleInput);
</code></pre>
<p>When I run it in Chrome console, it returns a nested Map with too many entries. Can anyone see a way to achieve this goal?</p>
","2024-03-24 16:22:39","0","Question"
"78213648","78213631","","<p>Your regex is just a <a href=""https://www.regular-expressions.info/charclass.html"" rel=""nofollow noreferrer"">character class</a> which will match anything other than whitespace or one of <code>(</code>, <code>?</code>, <code>&lt;</code>, <code>!</code>, <code>,</code> or <code>)</code>. What you need to do is match up to a space which is not preceded by a comma, which could do with this regex:</p>
<pre><code>^(?:, |[^ ])+
</code></pre>
<p>This matches:</p>
<ul>
<li><code>(?:, |[^ ])+</code> : one or more of <strong>either</strong>:
<ul>
<li><code>, </code> : a comma followed by a space; <strong>or</strong></li>
<li><code>[^ ]</code> : a character which is not a space</li>
</ul>
</li>
</ul>
<p>Regex demo on <a href=""https://regex101.com/r/CRTazI/1"" rel=""nofollow noreferrer"">regex101</a></p>
","2024-03-24 06:55:45","1","Answer"
"78213647","78213631","","<p>I would use the following pattern, which should capture all leading words possibly including a CSV list:</p>
<pre><code>^\w+(?:,\s*\w+)*
</code></pre>
<p>This pattern says to match:</p>
<ul>
<li><code>^</code> from the start of the line</li>
<li><code>\w+</code> match a word</li>
<li><code>(?:,\s*\w+)*</code> optionally followed by a CSV list of other words</li>
</ul>
<p><a href=""https://regex101.com/r/3nbpab/1"" rel=""nofollow noreferrer""><h2>Demo</h2></a></p>
<p><strong>Edit:</strong></p>
<p>More generally, we can match on <code>[^,\s]+</code> for a non whitespace, non comma, character, and use this pattern:</p>
<pre><code>^[^,\s]+(?:,\s*[^,\s]+)*
</code></pre>
<p><a href=""https://regex101.com/r/3nbpab/2"" rel=""nofollow noreferrer""><h2>Demo</h2></a></p>
","2024-03-24 06:55:37","0","Answer"
"78213631","","Regular expression to match up to the first space of a line not preceeded by a comma","<p>I'm editing a large dictionary file and the term and definition pairs do not have a consistent format. Some words are &quot;simple&quot;, some words include the base term plus some suffix to alter things like its gender, basically stacking two terms into one entry:</p>
<pre><code>abacora (definition)
abacorar  (definition)
abad, desa (definition)
</code></pre>
<p>This last term means &quot;abad&quot; and &quot;abadesa&quot; (feminine variant).</p>
<p>I've been trying to write the regular expression to capture this &quot;peculiarity&quot; but I can't seem to make it work. This matches the first part of the term fine, but fails to capture the second part:</p>
<pre><code>^[^\s(?&lt;!,)]+
</code></pre>
<p>It should return:</p>
<pre><code>&quot;abacora&quot;
&quot;abacorar&quot;
&quot;abad, desa&quot;
</code></pre>
","2024-03-24 06:48:57","0","Question"
"78212428","78212325","","<p>I think you need a way to properly indicate that the dictionary keys will be types (classes), and the dictionary values will be lists of instances of those types. The issue with your current approach is that <code>T</code> is used as if <code>DictHolder</code> is a generic class, but it isn't. The type variable <code>T</code> indeed has no meaning in the context of <code>DictHolder</code>'s <code>__init__</code> method as it stands.</p>
<p>So to make this correct without making <code>DictHolder</code> a generic class, you don't need to use a type variable (<code>TypeVar</code>) in this case. Instead, you can use <code>type</code> and <code>typing.List</code> directly along with the <code>typing.Any</code> type to indicate that your dictionary can hold lists of instances of any type.</p>
<pre class=""lang-py prettyprint-override""><code>from typing import Any, Dict, List, Type

class DictHolder:
    def __init__(self):
        self._things: Dict[Type[Any], List[Any]] = {}
</code></pre>
<p>This annotation indicates that <code>_things</code> is a dictionary where each key is a type (<code>Type[Any]</code>) and each value is a list of instances of any type (<code>List[Any]</code>). This allows you to store lists of different types indexed by their types in <code>_things</code>.</p>
<p>However, this approach loses some type specificity (since we are using <code>Any</code>), but it's suitable for scenarios where the dictionary is meant to hold items of various types. Umm If you need more specific type checks when adding or retrieving items from the dictionary, you might need to implement custom methods in <code>DictHolder</code> that perform runtime type checks.</p>
<p>As far as I remember, type annotations in Python are mainly for static type checking and they do not enforce type safety at runtime. So, it's essential to ensure that the logic in your methods correctly handles the types as you expect.</p>
<p>Hope it helps. Thanks</p>
","2024-03-23 20:44:56","1","Answer"
"78212325","","Type annotations for a dictionary that maps types to a list of instances of that type?","<p>In Python 3.11, I would like to create a class that holds a dictionary where the key is the type of a class and the value of that key is a list of objects of that type. The code:</p>
<pre><code>import typing

T = typing.TypeVar(&quot;T&quot;)

class DictHolder:
  def __init__(self):
    self._things: dict[type[T], list[T]] = {}
</code></pre>
<p>run through pyright, complains that <code>Type variable &quot;T&quot; has no meaning in this context</code>. That makes sense, since <code>DictHolder</code> is itself not a generic class.  It is not parameterized on a single type, so it does not inherit from <code>typing.Generic[T]</code>. However, its private dict field is generic, as might be any properties or accessor functions that expose or interact with this generic dict.</p>
<p>What are the correct type annotations for the dictionary?</p>
","2024-03-23 20:14:34","0","Question"
"78206950","78197676","","<p>You can pass a ref to Marker. Then use showCallout() function.</p>
<pre><code>const markerRef = useRef();

useEffect(() =&gt; {
  if(markerRef.current){
    markerRef.current..showCallout();
  }
}, [markerRef.current]);

&lt;Marker ref={markerRef} key={markerList.id} coordinate={destination}&gt;
  &lt;Callout style={{height: 70, width: 200}} tooltip&gt;
    &lt;View
      style={{
        flex: 1,
        backgroundColor: '#FAAA18',
        borderRadius: 40,
        flexDirection: 'row',
      }}
    &gt;
      &lt;Text&gt;
        &lt;Image resizeMode=&quot;contain&quot; source={image} style={styles.icon} /&gt;
      &lt;/Text&gt;

      &lt;View
        style={{
          flexDirection: 'column',
          paddingTop: 15,
        }}
      &gt;
        &lt;Text style={{color: '#fff', fontWeight: '700'}}&gt;Drop Off&lt;/Text&gt;
        &lt;Text style={{color: '#fff'}}&gt;3km Away&lt;/Text&gt;
      &lt;/View&gt;
    &lt;/View&gt;
  &lt;/Callout&gt;
&lt;/Marker&gt;
</code></pre>
","2024-03-22 14:36:19","0","Answer"
"78206591","78206317","","<p>You could turn your dictionary into a <a href=""https://omegaconf.readthedocs.io/en/2.3_branch/"" rel=""nofollow noreferrer"">omegaconf</a> DictConfig, which is especially build for nested configurations.<br />
<a href=""https://github.com/omry/omegaconf"" rel=""nofollow noreferrer"">https://github.com/omry/omegaconf</a> has  &gt;1.8+ stars on GitHub its not some niche package</p>
<pre><code>from omegaconf import OmegaConf
from functools import partial

dct = {&quot;name&quot;: {&quot;en&quot;: &quot;John&quot;}}
odict = OmegaConf.create(dct) # add flags={'allow_objects':True} if you want non primitive types

# Note OmegaConf has a special grammar to select keys, levels can be separated by `.` for example
omega_itemgetter = partial(OmegaConf.select, key=&quot;name.en&quot;) 
omega_itemgetter(odict)

# John
</code></pre>
","2024-03-22 13:33:27","1","Answer"
"78206543","78206317","","<p>you could go with functools reduce function</p>
<pre class=""lang-py prettyprint-override""><code>from functools import reduce, partial

dct = {&quot;name&quot;: {&quot;en&quot;: &quot;John&quot;}}
keys = [&quot;name&quot;, &quot;en&quot;]
reduce(dict.get, keys, dct)
</code></pre>
<p>output:</p>
<pre><code>Jonh
</code></pre>
<p>as a partial function</p>
<pre><code>def get_itemgetter(keys):
    def partial_func(dtc):
        return reduce(dict.get, keys, dtc)
    return partial_func

itemgetter = get_itemgetter(keys)
itemgetter(dct)
</code></pre>
","2024-03-22 13:22:13","5","Answer"
"78206497","78206317","","<p>As mentioned by others, this is not how <code>operator.itemgetter</code> supposed to work. You can write your custom one if you want:</p>
<pre class=""lang-py prettyprint-override""><code>def nested_item_getter(*items):
    if not items:
        raise ValueError(&quot;You need to pass at least one key&quot;)

    def inner(d: dict):
        for item in items:
            res = d[item]
            d = res
        return res
    return inner

dct = {&quot;name&quot;: {&quot;en&quot;: &quot;John&quot;}}
getter = nested_item_getter(&quot;name&quot;, &quot;en&quot;)
print(getter(dct))
</code></pre>
<p>output:</p>
<pre class=""lang-none prettyprint-override""><code>John
</code></pre>
","2024-03-22 13:14:06","1","Answer"
"78206360","78206317","","<p>The issue is that <code>itemgetter(&quot;name&quot;, &quot;en&quot;)</code> is attempting to return a tuple containing <code>(dct[&quot;name&quot;], dct[&quot;en&quot;])</code>, not <code>dct[&quot;name&quot;][&quot;en&quot;]</code>.</p>
<p>The solution is to make your own nested getter. I've written one in <a href=""https://haggis.readthedocs.io/en/stable/api.html#haggis.recipes.chained_getter"" rel=""nofollow noreferrer""><code>haggis.recipes.chained_getter</code></a>. You would use it like this:</p>
<pre><code>getter = chained_getter(&quot;[][]&quot;, &quot;name&quot;, &quot;en&quot;)
</code></pre>
<p>The parameters are all positional to be able to handle the fact that indices can be any object. You are not limited to string keys.</p>
","2024-03-22 12:51:24","3","Answer"
"78206317","","itemgetter for nested dict key value","<p>I'd like to get a nested dict value with <code>itemgetter</code>:</p>
<pre><code>from operator import itemgetter

dct = {&quot;name&quot;: {&quot;en&quot;: &quot;John&quot;}}
getter = itemgetter(&quot;name&quot;, &quot;en&quot;)
getter(dct)
</code></pre>
<p>The code gives me error:</p>
<pre><code>Traceback (most recent call last):
  File &quot;/Users/alber.aleksandrov/PycharmProjects/Playground/sa/разное.py&quot;, line 5, in &lt;module&gt;
    getter(dct)
KeyError: 'en'
</code></pre>
<p>How should I use <code>itemgetter</code> to make it work?</p>
","2024-03-22 12:43:20","0","Question"
"78204807","78204747","","<p><code>tophash</code> is a bmap type. The bmap type definition contains a partial explanation.</p>
<pre><code>// A bucket for a Go map.

type bmap struct {
    // tophash generally contains the top byte of the hash value
    // for each key in this bucket. If tophash[0] &lt; minTopHash,
    // tophash[0] is a bucket evacuation state instead.
    tophash [bucketCnt]uint8
    // Followed by bucketCnt keys and then bucketCnt elems.
    // NOTE: packing all the keys together and then all the elems together makes the
    // code a bit more complicated than alternating key/elem/key/elem/... but it allows
    // us to eliminate padding which would be needed for, e.g., map[int64]int8.
    // Followed by an overflow pointer.
}
</code></pre>
<blockquote>
<p>If tophash[0] &lt; minTopHash, tophash[0] is a bucket evacuation state instead.</p>
</blockquote>
<p>The <code>tophash[i]</code> value is overloaded. Normally it contains the top byte of the hash value of the ith entry, but if it's less than <code>minTopHash</code> it's not a hash value but one of the above special flags indicating its evacuation state.</p>
<p><code>minTopHash</code> is defined earlier in the file and provides the second piece of the puzzle.</p>
<pre><code>    // Possible tophash values. We reserve a few possibilities for special marks.
    // Each bucket (including its overflow buckets, if any) will have either all or none of its
    // entries in the evacuated* states (except during the evacuate() method, which only happens
    // during map writes and thus no one else can observe the map during that time).
    emptyRest      = 0 // this cell is empty, and there are no more non-empty cells at higher indexes or overflows.
    emptyOne       = 1 // this cell is empty
    evacuatedX     = 2 // key/elem is valid.  Entry has been evacuated to first half of larger table.
    evacuatedY     = 3 // same as above, but evacuated to second half of larger table.
    evacuatedEmpty = 4 // cell is empty, bucket is evacuated.
    minTopHash     = 5 // minimum tophash for a normal filled cell.
</code></pre>
<blockquote>
<p>Each bucket (including its overflow buckets, if any) will have either all or none of its entries in the evacuated* states</p>
</blockquote>
<p>If one bucket entry is being evacuated, they're all being evacuated, so it only has to look at one <code>tophash</code> entry. It uses <code>tophash[0]</code>, but if the comment is to be believed it could use <code>tophash[3]</code> or <code>tophash[6]</code>.</p>
<p>Note: I don't have any special knowledge about the code, I'm just reading what's there.</p>
","2024-03-22 08:04:19","0","Answer"
"78204747","","Why does Go use ""tophash[0]"" to represent this bucket has been evacuated?","<p>Why does <code>func evacuated</code> in golang source code <a href=""https://go.dev/src/runtime/map.go"" rel=""nofollow noreferrer"">src/runtime/map.go</a> use <code>tophash[0]</code> to represent that this bucket has been evacuated?</p>
<pre><code>func evacuated(b *bmap) bool {
    h := b.tophash[0]
    return h &gt; emptyOne &amp;&amp; h &lt; minTopHash
}
</code></pre>
<p>Doesn't <code>tophash[0]</code> just represent the first cell in the bucket?
How can Go determine that the entire bucket has been migrated using just the first element of tophash?</p>
","2024-03-22 07:51:27","0","Question"
"78202170","78201465","","<p>As you want to do via function. here you can make something like this</p>
<pre><code>def get_subkeys(dictionary, key):
    if key in dictionary:
        return list(dictionary[key].keys())
    else:
        return []
</code></pre>
<p><strong>USAGE:</strong></p>
<pre><code>data = {
    'Andrew': {
        'Country': 'Australia',
        'Age': '20',
    },
    'Mary': {
        'Country': 'Australia',
        'Age': '25',
        'Gender': 'Female',
    },
}

print(get_subkeys(data, 'Andrew'))  # Output: ['Country', 'Age']
print(get_subkeys(data, 'Mary'))    # Output: ['Country', 'Age', 'Gender']
print(get_subkeys(data, 'John'))    # Output: []
</code></pre>
","2024-03-21 18:37:06","0","Answer"
"78201553","78201465","","<p>Barmar has the right answer:</p>
<pre><code>&gt;&gt;&gt; list(Data['Andrew'].keys())
['Country', 'Age']
&gt;&gt;&gt; list(Data['Mary'].keys())
['Country', 'Age', 'Gender']
</code></pre>
","2024-03-21 16:40:52","0","Answer"
"78201465","","Getting list of sub-keys for a given key","<p>How do I create a function to get a list of all the subkeys within a dictionary for a given key.</p>
<pre><code>Data = {
            'Andrew': {
                'Country': 'Australia',
                'Age': '20',
                
          
            },
            'Mary': {
                'Country': 'Australia',
                'Age': '25',
                'Gender': 'Female',
                
            },
  }
</code></pre>
<p>For a given key e.g Andrew or Mary I'd like to know the keys present. So if I ask for Andrew:
It gives [Country, Age] and Mary is [Country,Age,Gender]</p>
","2024-03-21 16:25:28","-1","Question"
"78200951","78191247","","<p>You have to create a new dictionary on every iteration:</p>
<pre><code>for line in listoflines:
    mysmalldict = {} # add this
    mysmalldict[&quot;filename&quot;] = line.strip(&quot;\n&quot;)
    mysmalldict[&quot;oof&quot;] = 0
    dictcollector.append(mysmalldict)

mybigdict[&quot;filelist&quot;] = dictcollector
print(json.dumps(mybigdict))
</code></pre>
<p>In your example, you have created <code>mysmalldict</code> outside the loop and assigned it 3 times to <code>dictcollector</code>.</p>
","2024-03-21 15:06:44","1","Answer"
"78197676","","How do I always display my callout in React native maps","<p>I am trying to always display a <code>&lt;Callout /&gt;</code> or a <code>&lt;Marker /&gt;</code> without the need of clicking on the marker.</p>
<p>This is my code for my marker callout:</p>
<pre class=""lang-js prettyprint-override""><code>&lt;Marker key={markerList.id} coordinate={destination}&gt;
  &lt;Callout style={{height: 70, width: 200}} tooltip&gt;
    &lt;View
      style={{
        flex: 1,
        backgroundColor: '#FAAA18',
        borderRadius: 40,
        flexDirection: 'row',
      }}
    &gt;
      &lt;Text&gt;
        &lt;Image resizeMode=&quot;contain&quot; source={image} style={styles.icon} /&gt;
      &lt;/Text&gt;

      &lt;View
        style={{
          flexDirection: 'column',
          paddingTop: 15,
        }}
      &gt;
        &lt;Text style={{color: '#fff', fontWeight: '700'}}&gt;Drop Off&lt;/Text&gt;
        &lt;Text style={{color: '#fff'}}&gt;3km Away&lt;/Text&gt;
      &lt;/View&gt;
    &lt;/View&gt;
  &lt;/Callout&gt;
&lt;/Marker&gt;
</code></pre>
<p>This is my desired output:</p>
<p><a href=""https://i.sstatic.net/S59Zk.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/S59Zk.png"" alt=""This is my desired output"" /></a></p>
","2024-03-21 05:20:05","0","Question"
"78196341","78195131","","<p>Given you want to first check <code>Day</code> then <code>Championship</code> and then <code>Times</code> this code does that for you and then prints the time difference. I've added comments to explain what it does.</p>
<pre><code>import collections
import typing
import datetime
import json

with open('data.json', 'r+') as f:
    fileData: dict = json.load(f)
    # no f.close() is needed as the context manager handles this

# create a default dictionary with nested default dictionary that has a list in it
# the resulting structure is {key:{sub_key:[]}}
similar: collections.defaultdict = collections.defaultdict(lambda : collections.defaultdict(list))

for soccer_match in fileData:
    # for every file put it into the dictionary based on the day and the championship
    # here you can append the variable because the type of the value of the inner dict is a list
    similar[soccer_match[&quot;Day&quot;]][soccer_match[&quot;Matches&quot;][&quot;Championship&quot;]].append(soccer_match)

# make a dictionary from the defaultdict
# the structure now is {day: {championship 
championships: dict[dict[list]] = {k:dict(v) for k,v in similar.items()}

# loop over the days
for day in championships:
    # loop over the championships
    for championship in championships.get(day):
        # get the values
        values: list = championships.get(day).get(championship)
        # extract the times and parse the string to a timestamp and sort the list
        times: list = sorted([datetime.datetime.strptime(val.get(&quot;Matches&quot;).get(&quot;Times&quot;), &quot;%d.%m. %H:%M&quot;) for val in values])
        # calculate the time difference for every element and its adjacent element
        # if the list has one or no elements return None
        time_difference: typing.Union[None|list] = None if len(times) &lt;= 1 else list(map(lambda t: t[-1]-t[0], zip(times, times[1:])))
        print(day, championship, time_difference)
</code></pre>
<p>You can format the output of the time difference.</p>
<p><strong>EDIT</strong>
I've put in type hinting to show what the type is of the variables I assign. Here is a list of articles explaining elements in the solution:</p>
<ul>
<li><a href=""https://www.youtube.com/watch?v=QORvB-_mbZ0"" rel=""nofollow noreferrer"">Type hinting</a></li>
<li><a href=""https://realpython.com/python-with-statement/"" rel=""nofollow noreferrer"">Context managers</a></li>
<li><a href=""https://www.accelebrate.com/blog/using-defaultdict-python"" rel=""nofollow noreferrer"">Default dicts</a></li>
<li><a href=""https://stackoverflow.com/questions/20428636/how-to-convert-defaultdict-to-dict"">Default dict to dict</a></li>
<li><a href=""https://www.geeksforgeeks.org/python-map-function/"" rel=""nofollow noreferrer"">Map function</a></li>
<li><a href=""https://www.geeksforgeeks.org/python-lambda-anonymous-functions-filter-map-reduce/"" rel=""nofollow noreferrer"">Lambda function</a></li>
</ul>
","2024-03-20 21:31:10","1","Answer"
"78196030","78195904","","<p>You need to create a new instance every time:</p>
<pre class=""lang-cs prettyprint-override""><code>var dictionary = new Dictionary&lt;int, MyData&gt;();

var one = new MyData { Name = &quot;One&quot; };
dictionary.Add(1, one);

var two = new MyData { Name = &quot;Two&quot; };
dictionary.Add(2, two);

class MyData
{
    public string Name { get; set; }
}
</code></pre>
<p>Because dictionary keeps a reference to you class instance, any changes to the original object would be available when you access the same object using the dictionary:</p>
<pre class=""lang-cs prettyprint-override""><code>one.Name = &quot;uno&quot;;

Console.WriteLine(dictionary[1].Name); // Output: uno
</code></pre>
","2024-03-20 20:14:38","0","Answer"
"78196019","78195904","","<p>You're trying to use a Dictionary to store multiple instances of the TaxParcel class, each identified by a unique ParcelID. But you're reusing the ParcelPair object to add new entries to the ParcelData dictionary.</p>
<p>When you modify ParcelPair's properties after adding it to the dictionary, you're just modifying the same instance stored in it. C# classes are reference types, so ParcelPair refers to an object in memory. So, changing ParcelPair after adding it to the dictionary changes the object the dictionary references.</p>
<p>To correctly add multiple unique TaxParcel instances to the dictionary, you need to instantiate a new TaxParcel object for each parcel you want to add like this:</p>
<pre><code>namespace DictionaryCollection_test_bed
{



    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;

    namespace DictionaryCollection_test_bed
    {
        class Program
        {
            static void Main(string[] args)
            {
                //Set up Dictionary collection and instantiate TaxParcel class
                Dictionary&lt;string, TaxParcel&gt; ParcelData = new
                    Dictionary&lt;string, TaxParcel&gt;();
                TaxParcel ParcelPair = new TaxParcel();

                ParcelPair.ParcelID = &quot;1&quot;;
                ParcelPair.Owner = &quot;Owner1&quot;;
                ParcelPair.Address = &quot;Address1&quot;;
                ParcelData.Add(ParcelPair.ParcelID, ParcelPair);
                //this record is correct at this point
                //Key =&quot;1&quot;, ParcelID = &quot;1&quot;, Owner = &quot;Owner1&quot;, Address = &quot;Address1&quot;

                TaxParcel ParcelPair2 = new TaxParcel();// &lt;Add this and rename ParcelPair to ParcelPair2
                ParcelPair2.ParcelID = &quot;2&quot;;
                ParcelPair2.Owner = &quot;Owner2&quot;;
                ParcelPair2.Address = &quot;Address2&quot;;
                ParcelData.Add(ParcelPair2.ParcelID, ParcelPair2);
                //Key =&quot;2&quot;, ParcelID = &quot;2&quot;, Owner = &quot;Owner2&quot;, Address = &quot;Address2&quot;
                // Now they should have the correct values
            }
        }

        //Class declaration
        public class TaxParcel
        {
            public string ParcelID { get; set; }
            public string Owner { get; set; }
            public string Address { get; set; }
        }

    }
}
</code></pre>
","2024-03-20 20:11:36","1","Answer"
"78195904","","C# Dictionary.Add(KeyValue, Structure) updates all existing records with last added structure but with the new KeyValue","<p>The <code>Dictionary.Add</code> method updates all the previous records with the last records values but the Key values are correct for the record. Tried creating a test bed for the Dictionary collection with a simple set of code. Add still updates all the previous values. here is the code Trying to load a Dictionary Collection. The app cycles through a file, manipulates a record, records them in the TaxParcel structure and then adds the TaxParcel to the Dictionary ParcelData using the ParcelID as the Key of the Key/Value record and the Add method of the Dictionary. The first record added is correct when examined, the Key value is &quot;1&quot;. When a second record is added and examined, the Key value of the second record is &quot;2&quot; and the values associated are correct. But when the first record is examined, the Key value is correct, &quot;1&quot; but the values associated are those of the second (last) added record. Adding a third record updates all the previous values to the values of those last entered but does not change the Key values.
Below is the functional code that produced this effect.</p>
<pre><code>    namespace DictionaryCollection_test_bed    
    {

    

    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;

    namespace DictionaryCollection_test_bed
    {
        class Program
        {
            static void Main(string[] args)
            {
                //Set up Dictionary Clooection and instantiate TaxParcel class
                Dictionary&lt;string, TaxParcel&gt; ParcelData = new Dictionary&lt;string, TaxParcel&gt;();
                TaxParcel ParcelPair = new TaxParcel();

                ParcelPair.ParcelID = &quot;1&quot;;
                ParcelPair.Owner = &quot;Owner1&quot;;
               ParcelPair.Address = &quot;Address1&quot;;
               ParcelData.Add(ParcelPair.ParcelID, ParcelPair);
            //this record is correct at this point
            //Key =&quot;1&quot;, ParcelID = &quot;1&quot;, Owner = &quot;Owner1&quot;, Address = &quot;Address1&quot;

                ParcelPair.ParcelID = &quot;2&quot;;
                ParcelPair.Owner = &quot;Owner2&quot;;
                ParcelPair.Address = &quot;Address2&quot;;
               ParcelData.Add(ParcelPair.ParcelID, ParcelPair);
            //Record 1 now has parcel2 values but still with key 1
            //Key =&quot;1&quot;, ParcelID = &quot;2&quot;, Owner = &quot;Owner2&quot;, Address = &quot;Address2&quot;
            //Record 2 has the correct values for the record
            //Key =&quot;2&quot;, ParcelID = &quot;2&quot;, Owner = &quot;Owner2&quot;, Address = &quot;Address2&quot;

            }
        }
        //Class declaration
         public class TaxParcel
         {
             public string ParcelID { get; set; }
             public string Owner { get; set; }
             public string Address { get; set; }
         }

    }

</code></pre>
","2024-03-20 19:45:20","-1","Question"
"78195131","","How can I compare dates in a single json file by comparing the elements in the list with each other?","<p>I'm having a problem, basically I have a json file containing data with identical keys, it's a dictionary exactly, my aim is to check and compare the date/time difference between them, Help me I'm going crazy, I'm missing something , I publish the json file and the Python code, thank you very much, you are fantastic.</p>
<p>P.S:
Sorry for my English, I use Google Translate.</p>
<p><strong>file data.json:</strong></p>
<pre><code>[{
    &quot;Day&quot;: &quot;Giornata 29&quot;,
    &quot;Matches&quot;: {
        &quot;Home&quot;: &quot;Egnatia&quot;,
        &quot;Away&quot;: &quot;Kukesi&quot;,
        &quot;Times&quot;: &quot;19.03. 15:00&quot;,
        &quot;Championship&quot;: &quot;CALCIO\nALBANIA Super League\n2023/2024&quot;
    }
},{
    &quot;Day&quot;: &quot;Giornata 29&quot;,
    &quot;Matches&quot;: {
        &quot;Home&quot;: &quot;Egnatia&quot;,
        &quot;Away&quot;: &quot;Kukesi&quot;,
        &quot;Times&quot;: &quot;20.03. 16:09&quot;,
        &quot;Championship&quot;: &quot;CALCIO\nALBANIA Super League\n2023/2024&quot;
    }
},{
    &quot;Day&quot;: &quot;Giornata 41&quot;,
    &quot;Matches&quot;: {
        &quot;Home&quot;: &quot;Lincoln&quot;,
        &quot;Away&quot;: &quot;Leyton Orient&quot;,
        &quot;Times&quot;: &quot;19.03. 16:00&quot;,
        &quot;Championship&quot;: &quot;CALCIO\nINGHILTERRA League One\n2023/2024&quot;
    }
},
{
    &quot;Day&quot;: &quot;Giornata 30&quot;,
    &quot;Matches&quot;: {
        &quot;Home&quot;: &quot;Napoli&quot;,
        &quot;Away&quot;: &quot;Atalanta&quot;,
        &quot;Times&quot;: &quot;30.03. 12:30&quot;,
        &quot;Championship&quot;: &quot;CALCIO\nITALIA Serie A\n2023/2024&quot;
    }
}]
</code></pre>
<p><strong>Code Python:</strong></p>
<pre><code>from datetime import datetime, date, timedelta
import time
import json

with open('data.json', 'r+') as f:
    fileData = json.load(f)
    f.close()



day = datetime.now().strftime('%d.%m. %H:%M')

championship = set([d['Matches']['Championship'] for d in fileData])
day= set([q['Day'] for q in fileData])
time = set([s['Matches']['Times'] for s in fileData])

championshipList = [[d for d in fileData if d['Matches']['Championship'] == a] for a in championship]

dayList = [[e for e in fileData if e['Day'] == h] for h in day]

timeList = [[w for w in fileData if w['Matches']['Times'] == c] for c in time]
</code></pre>
<p>Basically, I have to check the &quot;Day&quot; key first, then the &quot;Championship&quot; key, then I still have to check the &quot;Times&quot; key and compare it with each other, I want to get the time difference from each other, like day or minute or hour, do you have any advice?</p>
<p><strong>UnicornOnAzur's answer is correct, however I would like to better understand the concept of the code, I have known Python for a few weeks and the concept written below is not clear to me</strong></p>
","2024-03-20 17:04:40","-1","Question"
"78191672","78191247","","<p>Instead of appending the dict, just append it as a whole.</p>
<p>Instead of</p>
<pre><code>dictcollector.append(mysmalldict)
</code></pre>
<p>use</p>
<pre><code>dictcollector.append({&quot;key&quot;:&quot;pair&quot;,&quot;key&quot;:&quot;pair&quot;})
</code></pre>
","2024-03-20 08:04:09","0","Answer"
"78191247","","Constructing JSON using Python Dictionary but with duplicate key name","<p>What I want is to make a JSON that looks like this.</p>
<pre><code>{
    &quot;filelist&quot;: [
        {
            &quot;filename&quot;: &quot;file1.txt&quot;,
            &quot;oof&quot;: 0
        },
        {
            &quot;filename&quot;: &quot;file2.txt&quot;,
            &quot;oof&quot;: 0
        },
        {
            &quot;filename&quot;: &quot;file3.txt&quot;,
            &quot;oof&quot;: 0
        }
    ]
    
}
</code></pre>
<p>What I did was:</p>
<pre><code>for line in listoflines:
    mysmalldict [&quot;filename&quot;] = line.strip(&quot;\n&quot;)
    mysmalldict [&quot;oof&quot;] = 0
    dictcollector.append(mysmalldict)

mybigdict[filelist&quot;] = dictcollector
print(json.dumps(mybigdict))

</code></pre>
<p>Unfortunately, What I got was:</p>
<pre><code>{
    &quot;filelist&quot;: [
        {
            &quot;filename&quot;: &quot;file3.txt&quot;,
            &quot;oof&quot;: 0
        },
        {
            &quot;filename&quot;: &quot;file3.txt&quot;,
            &quot;oof&quot;: 0
        },
        {
            &quot;filename&quot;: &quot;file3.txt&quot;,
            &quot;oof&quot;: 0
        }
    ]
    
}
</code></pre>
<p>Everything was overwritten by the last data.</p>
<p>After a couple of searches, I learned that Python dictionaries will overwrite data of the same keys.
Some examples I found like <a href=""https://stackoverflow.com/questions/10664856/how-can-one-make-a-dictionary-with-duplicate-keys-in-python"">this</a> one doesn't fit my need as I need a duplicate key pair and not multiple values on one key.</p>
<p>I also found <a href=""https://stackoverflow.com/questions/29519858/adding-duplicate-keys-to-json-with-python"">this</a> one that is close but when I put the FakeDict on my dictcollector, it gives a different structure.</p>
<pre><code>{
    &quot;filelist&quot;: [
        '{
            &quot;filename&quot;: &quot;file3.txt&quot;,
            &quot;oof&quot;: 0
        }',
        '{
            &quot;filename&quot;: &quot;file3.txt&quot;,
            &quot;oof&quot;: 0
        }',
        '{
            &quot;filename&quot;: &quot;file3.txt&quot;,
            &quot;oof&quot;: 0
        }'
    ]
    
}
</code></pre>
<p>Is there a way to do this in Python? Or did I miss something?</p>
","2024-03-20 06:32:55","0","Question"
"78188936","","Leaflet Browser Print - How to add image into the header of the print result?","<p>I am trying to print the map with a header that includes a text between two images, but i am not getting the right way to do this.</p>
<pre><code>L.control.browserPrint({
        title: '...',
        documentTitle: '...',
        printModes: [
            L.BrowserPrint.Mode.Auto(&quot;A4&quot;, { title: &quot;Auto&quot;, **header:{ enabled: true, text: 'Webmap - Braganca Paulista', size: &quot;25mm&quot;, overTheMap: false, backgroundColo:'#f0f' }** }),
        ],
    }).addTo(map);
</code></pre>
<p>I've tried to call after using the class 'leaflet-browser-print-content' in the images, but it puts the images below the map. The header doens't has an default option to include images.</p>
","2024-03-19 18:36:30","0","Question"
"78187519","78184191","","<p>The call to <code>update</code> isn't necessary after the <code>require</code>, just do <code>testAA[&quot;Key&quot;] ~= &quot;Val1&quot;</code>. Note that this does not update <code>list</code>, which is again, still a copy of the array slice at the time it was added.</p>
<p>If you want to do it by reference, you need to use a pointer:</p>
<pre><code>auto list = &amp;testAA.require(&quot;Key&quot;, vals); // keep a pointer to the array
*list ~= &quot;Val1&quot;;
*list ~= &quot;Val2&quot;;
</code></pre>
<p>If I'm unsure if an AA has a key, I usually will do <code>aa.require(key) ~= val;</code>. This is a bit less nice than just indexing, but basically equivalent to indexing, putting in a <code>value.init</code> when it doesn't yet exist.</p>
","2024-03-19 14:41:57","2","Answer"
"78184572","78183953","","<pre><code>    x = [('router_1', '0/1', '0/4', 'router_2'),
         ('router_1', '0/2', '0/4', 'router_3'),
         ('router_4', '0/1', '0/5', 'router_5'),
         ('router_4', '0/2', '0/5', 'router_6')]
</code></pre>
<pre><code>    from copy import deepcopy
    
    mDict = dict()
    mDict['details'] = list()
    tmpDict = dict()
    for a, aI, b, bI in x:
        if a not in tmpDict and tmpDict: mDict['details'].append(deepcopy(tmpDict))
        if a not in tmpDict: 
            tmpDict = dict()
            tmpDict[a] = dict({'connections': list()})
        tmpDict[a]['connections'].append(dict({
                                          &quot;side_a&quot;: {
                                             &quot;device&quot;: a,
                                             &quot;interface&quot;: aI,
                                          },
                                          &quot;side_b&quot;: {
                                             &quot;interface&quot;: bI,
                                              &quot;device&quot;: b,
                                          }
                                          })
                                          )
    mDict['details'].append(deepcopy(tmpDict))
</code></pre>
<p>This will work only if connections in <code>x</code> are always sorted.</p>
","2024-03-19 06:24:26","0","Answer"
"78184339","78184191","","<p>Someone pointed me to using the associative array update() method and also explained that a slice (dynamic array) consists of a pointer and a length, which are copied, even though the content itself is referenced. So the slice in the associative array does not update when the slice is updated external to it.</p>
<p>So I used this to create a new list with a single item or append a value to the list if it already exists:</p>
<pre><code>testAA.update(&quot;Key&quot;, () =&gt; [&quot;Val1&quot;], (ref string[] x) {x ~= &quot;Val1&quot;;});
</code></pre>
","2024-03-19 05:13:51","1","Answer"
"78184307","78184266","","<p>If you want the latest date, use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.max.html"" rel=""nofollow noreferrer""><code>groupby.max</code></a>:</p>
<pre><code>date_dict = df.groupby('Id')['Date'].max().to_dict()
</code></pre>
<p>Output:</p>
<pre><code>{'AB001': '2023-12-23', 'AB002': '2023-08-14', 'AB003': '2017-08-16'}
</code></pre>
<p>This is more efficient than sorting to just keep one value, which you could have obtained with an ascending sort (building a dictionary from zip keeps the last occurrence):</p>
<pre><code>df.sort_values(by='Date', inplace=True)
date_dict = dict(zip(df['Id'], df['Date']))
</code></pre>
<p>Output:</p>
<pre><code>{'AB003': '2017-08-16', 'AB001': '2023-12-23', 'AB002': '2023-08-14'}
</code></pre>
<p><em>Note however the different order of the keys.</em></p>
<hr />
<p>NB. to convert the date format from your original <code>DD-MM-YYYY</code>:</p>
<pre><code>df['Date'] = pd.to_datetime(df['Date'], dayfirst=True).dt.strftime('%Y-%m-%d')
</code></pre>
","2024-03-19 05:00:05","0","Answer"
"78184266","","Python Dictionary : Issue in Mapping Sorted dataframe column to a dictionary","<p>Can someone help me understand why python dictionary retain the original data order rather than taking the sorted data.</p>
<p>For Example here is a dataframe (df):</p>
<pre><code>    Id       Date
 0  AB001    12-03-2020
 1  AB002    14-08-2023
 2  AB003    16-08-2017
 3  AB001    23-12-2023
</code></pre>
<p>Upon sorting the &quot;Date&quot; column to newest to oldest:</p>
<pre><code>df.sort_values(['Date'],ascending=[False],inplace=True)

     Id       Date
1  AB001 2023-12-23
3  AB002 2023-08-14
0  AB001 2020-03-12
2  AB003 2017-08-16
</code></pre>
<p>When I map them using the below code</p>
<pre><code>date_dict = dict(zip(df['Id'], df['Date']))
</code></pre>
<p>upon printing the value of Key <code>ABOO1</code> --&gt; the output is <code>2020-03-12</code> not <code>2023-12-23</code>.</p>
<p>why does this happen?</p>
","2024-03-19 04:44:43","-2","Question"
"78184191","","Dlang associative array of an array of strings keyed by a string has unexpected behavior","<p>The output from the following code does not behave how I think it should. It appears that making changes to the string array returned by <strong>testAA.require()</strong> does not reflect in the associative array. I thought dynamic arrays were pass by reference, but this seems to be behaving contrary to this notion. Re-assigning the array to testAA does appear to work, but the reason why this does not work is bothering me. Any tips or ideas would be appreciated!</p>
<pre><code>module main;

import std.stdio;

void main()
{
  string[][string] testAA;
  string[] vals = [&quot;InitVal1&quot;, &quot;InitVal2&quot;];

  auto list = testAA.require(&quot;Key&quot;, vals);

  writeln(&quot;list: &quot;, list);

  list ~= &quot;Val1&quot;;
  list ~= &quot;Val2&quot;;

  writeln(&quot;list: &quot;, list);
  writeln(&quot;testAA&quot;, testAA);
}
</code></pre>
<p>This results in the output:</p>
<pre><code>list: [&quot;InitVal1&quot;, &quot;InitVal2&quot;]
list: [&quot;InitVal1&quot;, &quot;InitVal2&quot;, &quot;Val1&quot;, &quot;Val2&quot;]
testAA[&quot;Key&quot;:[&quot;InitVal1&quot;, &quot;InitVal2&quot;]]
</code></pre>
","2024-03-19 04:15:44","1","Question"
"78183953","","values in the list of dictionary showing None","<p>I have a list of tuple:</p>
<pre><code>x = [('router_1', '0/1', '0/4', 'router_2'),
     ('router_1', '0/2', '0/4', 'router_3'),
     ('router_4', '0/1', '0/5', 'router_5'),
     ('router_4', '0/2', '0/5', 'router_6')]
</code></pre>
<p>the goal is to construct the data as below:</p>
<pre><code>dict = {&quot;details&quot;: [
        {
            &quot;router_1&quot;: {
                &quot;connections&quot;: [
                    {
                        &quot;side_a&quot;: {
                            &quot;device&quot;: &quot;router_1&quot;,
                            &quot;interface&quot;: &quot;0/47&quot;,
                        },
                        &quot;side_b&quot;: {
                            &quot;interface&quot;: &quot;0/17&quot;,
                            &quot;device&quot;: &quot;router_2&quot;,

                        }
                    },
                    {
                        &quot;side_a&quot;: {
                            &quot;device&quot;: &quot;router_1&quot;,
                            &quot;interface&quot;: &quot;0/48&quot;,
                        },
                        &quot;side_b&quot;: {
                            &quot;interface&quot;: &quot;0/17&quot;,
                            &quot;device&quot;: &quot;router_3&quot;,
                        }
                    }
                ]
            }
        },
        {
            &quot;router_4&quot;: {
                &quot;connections&quot;: [
                    {
                        &quot;side_a&quot;: {
                            &quot;device&quot;: &quot;router_4&quot;,
                            &quot;interface&quot;: &quot;0/47&quot;,
                        },
                        &quot;side_b&quot;: {
                            &quot;interface&quot;: &quot;0/17&quot;,
                            &quot;device&quot;: &quot;router_5&quot;,
                        }
                    },
                    {
                        &quot;side_a&quot;: {
                            &quot;device&quot;: &quot;router_4&quot;,
                            &quot;interface&quot;: &quot;0/48&quot;,
                        },
                        &quot;side_b&quot;: {
                            &quot;interface&quot;: &quot;0/17&quot;,
                            &quot;device&quot;: &quot;router_6&quot;,
                        }
                    }
                ]
            }
        }
    ]
}
</code></pre>
<p>please note :</p>
<ul>
<li>the key router_1 created based on the device name under &quot;side_a&quot;</li>
<li>the key router_4 created based on the device name under &quot;side_a&quot;</li>
</ul>
<h4>I tried below :</h4>
<pre><code>import collections
data_dict = collections.defaultdict(list)

result = {}

for item in x:
 router_a, router_a_int, router_b_int, router_b = item
 result[side_a] = data_dict[&quot;connections&quot;].append({&quot;side_a&quot;: {
 &quot;hostname&quot;: router_a,
 &quot;interface&quot;: router_a_int},
 &quot;side_b&quot;: {
 &quot;interface&quot;: router_b_int,
 &quot;hostname&quot;: router_b
 }})
</code></pre>
<p>however, The value of the dictionary is showing &quot;None&quot;. Looks like everytime append causing the value to be None but I though using  collections.defaultdict(list) should eliminate this issue</p>
<p>Please could you help.</p>
<p>Thank you</p>
","2024-03-19 02:32:50","0","Question"
"78183371","78182850","","<p>Found the problem, need to call out the dictionary key before the get() method  is used.</p>
<p>i.e. variables['Language'].get()</p>
","2024-03-18 22:39:04","0","Answer"
"78182850","","Problem with using dictionary as a variable with radiobuttons in tkinter","<p>When I try assigning a dictionary item as a radiobutton variable after defining it as a type tk.Stringvar(), the get function returns PY_VAR0 rather than the string it was assigned.</p>
<p>###################################################</p>
<pre><code>root = tk.Tk()

variables = dict()
variables['Language']=tk.StringVar()

def cb():
    print(variables.get('Language'))
    

for Lang in ('English', 'German', 'French'):
    tk.Radiobutton(root, text=Lang, variable=variables['Language'], value=Lang, command=cb).pack()

root.mainloop()
</code></pre>
<p>If I substitute the dictionary with a single variable the code works as expected.</p>
<p>##########################################################</p>
<pre><code>root = tk.Tk()

Language=tk.StringVar()

def cb():
    print(Language.get())
    

for Lang in ('English', 'German', 'French'):
    tk.Radiobutton(root, text=Lang, variable=Language, value=Lang, command=cb).pack()

root.mainloop()
</code></pre>
","2024-03-18 20:27:42","0","Question"
"78181033","78179502","","<p>I went a bit overboard with the answer, but I've seen this particular question pass by a couple of times with slight differences. I've quite heavily commented my code, and I've split the things into separate functions.</p>
<p>Main thing is, is that you're using a CSV file with a semicolon separator. Using the standard python CSV module, and specifically the <code>csv.DictReader()</code> will make your life a lot easier. It basically turns the CSV file into a dict (as the method name suggests) and then it becomes very easy to deal with.</p>
<pre class=""lang-py prettyprint-override""><code>import csv
from datetime import datetime
# pprint is only imported to make the ouput at the bottom look nice
from pprint import pprint


def loadfile(csvfilename: str) -&gt; dict[list]:
    users = {}
    # easy reading of file as a CSV file
    # it skips over empty lines, and uses the first line as the dict key names
    with open(csvfilename) as csvfile:
        reader = csv.DictReader(csvfile, delimiter=&quot;;&quot;)
        for row in reader:
            # remove the name and use it as a key in the users dict
            name = row.pop(&quot;user&quot;)
            if name not in users:
                # add new user
                users[name] = [row]
            else:
                # update existing user
                users[name].append(row)
    return users


def get_stat_user_overview(users: dict[list]) -&gt; dict:
    tasks = 0
    name = 0  # no idea what this is supposed to be
    for user in users:
        # just count the length of the tasklist and add to tasks
        tasks += len(user)
    usercount = len(users)
    # you can just generate and return a dict without assigning it
    # to a variable first
    return {
        &quot;Tasks&quot;: tasks,
        &quot;Users&quot;: usercount,
        &quot;Names&quot;: name
    }


def get_stat_task_overview(users: dict[list]) -&gt; dict:
    # set initial dict to zeros
    result = {
        &quot;Tasks&quot;: 0,
        &quot;Completed&quot;: 0,
        &quot;Uncompleted&quot;: 0,
        &quot;Overdue&quot;: 0,
    }
    today = datetime.now() # only set this once to reduce the function calls
    for user in users.values():
        for task in user:
            # add task count
            result['Tasks'] += 1
            # check if task completed
            if task['completed'] == 'No':
                result['Uncompleted'] += 1
                # only check for overdue for the uncompleted items
                # it's also safer to turn the string into a datatime object
                # and then do a comparison between datetime objects
                if datetime.strptime(task['due date'], '%Y-%m-%d') &lt; today:
                    result['Overdue'] += 1
            else:
                result['Completed'] += 1
    # do the percentage calculations
    result[&quot;Percentage Incomplete&quot;] = result['Uncompleted'] / result['Tasks'] * 100
    result[&quot;Percentage Overdue&quot;] = result['Overdue'] / result['Tasks'] * 100
    return result


csvfilename = &quot;tasks.txt&quot;
users = loadfile(csvfilename)
pprint(users, indent=4)
print('-----')
user_stats = get_stat_user_overview(users)
pprint(user_stats, indent=4)
print('-----')
task_stats = get_stat_task_overview(users)
pprint(task_stats, indent=4)
</code></pre>
<p>resulting output:</p>
<pre class=""lang-py prettyprint-override""><code>{   'admin': [   {   'Task': 'werty',
                     'completed': 'No',
                     'description of task': 'ytrew',
                     'due date': '2024-12-12',
                     'entered date': '2024-03-09'},
                 {   'Task': 'qwaszx',
                     'completed': 'No',
                     'description of task': 'xzsawq',
                     'due date': '2023-12-12',
                     'entered date': '2024-03-09'}],
    'sam': [   {   'Task': 'asdfgg',
                   'completed': 'No',
                   'description of task': 'gfdsa',
                   'due date': '2024-12-12',
                   'entered date': '2024-03-09'},
               {   'Task': 'plkju',
                   'completed': 'No',
                   'description of task': 'ujklp',
                   'due date': '2024-02-12',
                   'entered date': '2024-03-09'},
               {   'Task': 'finish cap2',
                   'completed': 'No',
                   'description of task': 'make the code more user friendly',
                   'due date': '2024-03-16',
                   'entered date': '2024-03-11'}]}
-----
{'Names': 0, 'Tasks': 8, 'Users': 2}
-----
{   'Completed': 0,
    'Overdue': 3,
    'Percentage Incomplete': 100.0,
    'Percentage Overdue': 60.0,
    'Tasks': 5,
    'Uncompleted': 5}
</code></pre>
","2024-03-18 14:49:58","0","Answer"
"78180696","78180582","","<p>Use dictionary comprehension:</p>
<pre><code>directory_list = ['A', 'B']
file_count = 2
file_numbers = range(1, file_count+1)

file_paths = {d:{f'path_{i}':f'U:/me/documents/{d}/file{i}' for i in file_numbers}
              for d in directory_list}
</code></pre>
<p>Result:</p>
<pre><code>{'A': {'path_1': 'U:/me/documents/A/file1',
  'path_2': 'U:/me/documents/A/file2'},
 'B': {'path_1': 'U:/me/documents/B/file1',
  'path_2': 'U:/me/documents/B/file2'}}
</code></pre>
","2024-03-18 13:51:03","1","Answer"
"78180582","","Add multiple variables to dictionary","<p>I am loading files from multiple directories and collecting the paths in a dictionary.</p>
<pre><code>directory_list = [&quot;A&quot;, &quot;B&quot;]

for i in directory_list:
    path_1 = &quot;U:/me/documents/{}/file1&quot;.format(i)
    path_2 = &quot;U:/me/documents/{}/file2&quot;.format(i)

</code></pre>
<p>I want to collect these paths in a dictionary.</p>
<p>I could do:</p>
<pre><code>directory_list = [&quot;A&quot;, &quot;B&quot;]
dictionary = {&quot;A&quot;: {}, &quot;B&quot;: {}}
for i in directory_list:
    path_1 = &quot;U:/me/documents/{}/file1&quot;.format(i)
    path_2 = &quot;U:/me/documents/{}/file2&quot;.format(i)
    
    dictionary[i][&quot;path_1&quot;] = path_1
    dictionary[i][&quot;path_2&quot;] = path_2
</code></pre>
<p>but I was wondering if there is a more efficient way (I have more than 5 paths in total) than adding the paths one by one.</p>
<p>This is my preferred output:</p>
<pre><code>{'A': {'path_1': 'U:/me/documents/A/file1',
  'path_2': 'U:/me/documents/A/file2'},
 'B': {'path_1': 'U:/me/documents/B/file1',
  'path_2': 'U:/me/documents/B/file2'}}
</code></pre>
<p>Is there a more efficient way to do this?</p>
","2024-03-18 13:32:12","-1","Question"
"78180435","78161550","","<pre><code>def addEntry(path, itemInfo):
    current = ldapDict.jsonStruct
    for item in path[:-1]:
        if item not in current:
            current[item] = {}
        current = current[item]
    current[path[-1]] = itemInfo

    for item in path[:-1]:
        current = ldapDict.jsonStruct
        for key in path[:-1]:
            if key not in current:
                current[key] = {}
            current = current[key]

def processPath(path,itemInfo):
    dn = path[&quot;dn&quot;].split(&quot;,&quot;)
    dn.reverse()  # Reverse to build from innermost to outermost
    addEntry(dn,itemInfo)
</code></pre>
<p>This worked well for me. Just took a while of looking at the issue.</p>
","2024-03-18 13:09:02","0","Answer"
"78179522","78179252","","<p>You shouldn't use a text-file to do python well-known work actually.
I'd recommend to change colors.txt to a python-file or yaml-file instead.</p>
<p>Besides, you are using rsplit(), which only removes spaces at the end of a line</p>
<pre><code>with open('colors.txt', 'r') as f:
for line in f.readlines():
    phrases, colors = line.strip().split(&quot;=&quot;)  # Remove Spaces and split at =
    myObject[phrases.strip()] = colors # your actuall seeking phrases as keys and colors as values
</code></pre>
<p>phrases.strip() makes sure your very special way of storing information in a text-file matches a key-value construct</p>
","2024-03-18 10:30:23","0","Answer"
"78179502","","accessing .txt file updating a list and performing actions on that list","<p>I have the below section of code which if the user enters &quot;gr&quot; will run.</p>
<p>What I am trying to do is run over the tasks.txt file, append, strip, and split it to reports[] so I can then access each part of the list as needed to update the 2 dictionaries with the relevant info. I will then be opening and writing this info to 2 new .txt files (task_overview.txt + user_overview.txt)</p>
<p>If this doesn't make any sense I'm sorry but I have been struggling with this for ages and I am also very new.</p>
<p>tasks.txt looks like this:</p>
<pre><code>user;Task;description of task;due date;entered date;completed

sam;asdfgg;gfdsa;2024-12-12;2024-03-09;No
admin;werty;ytrew;2024-12-12;2024-03-09;No
sam;plkju;ujklp;2024-02-12;2024-03-09;No
admin;qwaszx;xzsawq;2023-12-12;2024-03-09;No
sam;finish cap2;make the code more user friendly;2024-03-16;2024-03-11;No
</code></pre>
<p>gr code :</p>
<pre><code>elif menu == 'gr':
        
        # creating dictionary with values for task_overview file
        stat_dict_task_overview = {
                    &quot;Tasks&quot;: 0,
                    &quot;Completed&quot;: 0,
                    &quot;Uncompleted&quot;: 0,
                    &quot;Overdue&quot;: 0,
                    &quot;Percentage Incomplete&quot;: 0,
                    &quot;Percentage Overdue&quot;: 0
                    }
        
        # creating dictionary with values for user_overview file
        stat_dict_user_overview = {
                    &quot;Users&quot;: 0,
                    &quot;Tasks&quot;: 0,
                    &quot;Name&quot;: 0,
                    
                         }
       
        reports = []
       
        with open(&quot;tasks.txt&quot;, &quot;r&quot;) as task:
         
            # This code updates the dictionary as needed
            for line in enumerate(task):
                stat_dict_task_overview[&quot;Tasks&quot;] += 1


            
            # From this point on nothing gets updated to the dictionary
            reports = task.readlines()       
            for line in task:
               reports.append(line.strip().split(&quot;;&quot;))
         
            for line in task:
                if reports[-1] == &quot;Yes&quot;:
                    stat_dict_task_overview[&quot;Completed&quot;] += 1
                else:
                    stat_dict_task_overview[&quot;Uncompleted&quot;] += 1
       

                if reports[3] &lt; str(datetime.today()):
                    stat_dict_task_overview[&quot;Overdue&quot;] += 1
       
                
        print(reports)
        print(stat_dict_task_overview) 
</code></pre>
<p>What I am trying to do is run over the tasks.txt file, append, strip, and split it to reports[] so I can then access each part of the list as needed to update the 2 dictionaries with the relevant info. I will then be opening and writing this info to 2 new .txt files (task_overview.txt + user_overview.txt)</p>
","2024-03-18 10:28:04","0","Question"
"78179252","","Count occurences of just keys from dictionary in a string","<p>EDIT/UPDATE: I see my problem - I didn't use 'lowercase' option, so when in file word had uppercase, then it didn't work! For example, I should've used &quot;GHI&quot; not &quot;ghi&quot; in some cases</p>
<p>I have a program which opens log file on FTP server and reads it every 1 sec. If new logs appear, then it is inserted into tkinter Text widget. Here's also colors.txt text file, which looks something like that:</p>
<pre><code>abc=green
def=yellow
ghi=blue
</code></pre>
<p>Function:</p>
<pre><code>def readdata(text,dir,logfile,title,stop_event):
    scroll.config(command=t.yview)
    global sftp
    cnopts = pysftp.CnOpts()
    cnopts.hostkeys = None
    sftp = pysftp.Connection('ip', username='user', password='pass', cnopts=cnopts)
    root.title(title)
    t.insert(tk.END, text+&quot;LOADING\n\n&quot;)
    sftp.chdir('logs')
    sftp.chdir(dir)
    active_log = logfile
    with sftp.open(active_log, mode=&quot;r&quot;) as file:
        old_logs = file.read().decode('ASCII')
        t.insert(tk.END, old_logs)
        t.see(tk.END)
    while not stop_event.is_set():
        with sftp.open(active_log, mode=&quot;r&quot;) as file:
            new_logs = file.read().decode('ASCII')
        if new_logs != old_logs:
            t.insert(tk.END, new_logs[len(old_logs):])
            state = var1.get()
            if state==1:
                t.see(tk.END)
            old_logs = new_logs
            with open('colors.txt', 'r') as f:
                for line in f.readlines():
                    phrases, colors= line.rstrip(&quot;\n&quot;).split(&quot;=&quot;)
                    myObject[phrases] = colors  # myObject = {'abc': 'green', 'def': 'yellow', 'ghi': 'blue'}
            my_list = list(myObject.keys())
            for k in my_list:       # my_list = ['abc', 'def', 'ghi']
                print(new_logs.count(k))
        time.sleep(1)
</code></pre>
<p>In function above, code is taking just each key and puts it into list, so:
my_list = ['abc', 'def', 'ghi']</p>
<p>I want to check, how many times each of these words appear in logs (which has 'new_logs'/'old_logs' variables). However, I'm not successfull with it, because most of my trials ended up in counting just one of words, so it looked like this:</p>
<pre><code>abc=1245
def=0
ghi=0
</code></pre>
<p>I also tried Counter() from Collections, but it was counting occurence of each letter (??) which even wasn't occuring in any of word from list?
Why it doesn't count occurences of EACH key, but just one? Here should not be any zeros, cuz in logs these keys were appearing many times.</p>
<p>Sample log from this FTP server:</p>
<pre><code>2024-03-18 12:06:48 &gt;&gt;&gt; +CPSI: LTE,Online,260-03,0xE2F0,71697430,43,EUTRAN-BAND1,50,3,0,33,59,51,21  OK  
2024-03-18 12:07:10 main RUN_PDP_WATCHDOG
2024-03-18 12:07:10 &lt;&lt;&lt; AT+CGACT?

2024-03-18 12:07:10 &gt;&gt;&gt; +CGACT: 1,1  OK  
2024-03-18 12:07:10 &lt;&lt;&lt; AT+NETOPEN?

2024-03-18 12:07:10 &gt;&gt;&gt; +NETOPEN: 1  OK  
2024-03-18 12:07:16 main RUN_NETWORK_MONITORING
2024-03-18 12:07:16 &lt;&lt;&lt; AT+CSQ

2024-03-18 12:07:16 &gt;&gt;&gt; +CSQ: 26,99  OK  
2024-03-18 12:07:16 &lt;&lt;&lt; AT+CNSMOD?

2024-03-18 12:07:16 &gt;&gt;&gt; +CNSMOD: 0,8  OK  
2024-03-18 12:07:16 &lt;&lt;&lt; AT+CREG?

2024-03-18 12:07:16 &gt;&gt;&gt; +CREG: 0,1  OK  
2024-03-18 12:07:16 &lt;&lt;&lt; AT+CPSI?

2024-03-18 12:07:16 &gt;&gt;&gt; +CPSI: LTE,Online,260-03,0xE2F0,71697430,43,EUTRAN-BAND1,50,3,0,29,60,53,20  OK 
</code></pre>
","2024-03-18 09:45:33","0","Question"
"78178972","78174344","","<h4>Here is an example code, which you may change according to your needs:</h4>
<h5>I use these 3 package:</h5>
<ul>
<li>flutter_map</li>
<li>geojson</li>
<li>latlong2</li>
</ul>
<h5>Sample Result</h5>
<p><a href=""https://i.sstatic.net/QNQ1Q.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/QNQ1Q.png"" alt=""enter image description here"" /></a></p>
<h5>The example code</h5>
<ul>
<li>When app loaded, it shows map markers</li>
<li>Click on each marker to show its label</li>
</ul>
<pre class=""lang-dart prettyprint-override""><code>import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:geojson/geojson.dart';
import 'package:latlong2/latlong.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);


  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter App!!',
      theme: ThemeData(
        colorSchemeSeed: Colors.indigo,
        useMaterial3: true,
        brightness: Brightness.light,
      ),
      darkTheme: ThemeData(
        colorSchemeSeed: Colors.blue,
        useMaterial3: true,
        brightness: Brightness.dark,
      ),
      home: const MyHomePage(title: 'Flutter Example App'),
      debugShowCheckedModeBanner: false,
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}): super(key: key);

  final String title;

  @override
  State&lt;MyHomePage&gt; createState() =&gt; _MyHomePageState();
}

class _MyHomePageState extends State&lt;MyHomePage&gt; {

  List&lt;GeoJsonFeature&lt;dynamic&gt;&gt;? data;

  @override
    void initState() {
      WidgetsBinding.instance.addPostFrameCallback((_) {
        loadGeoJsonFeatureFromGeoJson().whenComplete(() {
          setState(() {
            print('Completed');
          });
        });
      });
      super.initState();
    }

  @override
  Widget build(BuildContext context) {

    List&lt;Polyline&gt; _polylines = [];
    List&lt;Marker&gt; _markers = [];
    
    if (data != null) { 
      data!.forEach((data) {
        if (data.type == GeoJsonFeatureType.line) {
          GeoJsonLine line = data.geometry;
          final poly = Polyline(points: line.geoSerie!.toLatLng(), color: Colors.blue, strokeWidth: 5);
          _polylines.add(poly);
          // lines.add(data.geometry);
        } else if (data.type == GeoJsonFeatureType.point) {
          GeoJsonPoint point = data.geometry;
          final marker = Marker(
            point: point.geoPoint.toLatLng()!, 
            width: 20, 
            height: 20, 
            builder: (context) =&gt; Tooltip(
              message: data.properties?['STATIONNAME'] ?? '',
              triggerMode: TooltipTriggerMode.tap,
              child: Container(
                decoration: BoxDecoration(
                  color: Colors.deepPurple,
                  borderRadius: BorderRadius.circular(99),
                ),
              ),
            ),
          );
          _markers.add(marker);
        }
        // Add more features
      });

    }

    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: SizedBox(
        width: MediaQuery.of(context).size.width,
        height: MediaQuery.of(context).size.height,
        child: FlutterMap(
          options: MapOptions(
            center: LatLng(38.897283, -77.021918),
            zoom: 12,
          ),
          children: [
            TileLayer(
              urlTemplate: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', 
              subdomains: const &lt;String&gt;['a', 'b', 'c',], 
            ),
            MarkerLayer(markers: _markers),
            // PolylineLayer(polylines: _polylines),
          ],
        ),
      ),
    );
  }

  Future&lt;List&lt;GeoJsonFeature&gt;?&gt; loadGeoJsonFeatureFromGeoJson() async {
    try {
      String geoJsonBikeLocation = '''
        {
          &quot;type&quot;: &quot;FeatureCollection&quot;,
          &quot;features&quot;: [
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 1,
                      &quot;LOCATIONID&quot;: 3,
                      &quot;STATIONNAME&quot;: &quot;Foggy Bottom&quot;,
                      &quot;BIKECOUNT&quot;: 9,
                      &quot;ADDRESS&quot;: &quot;23rd St &amp; I St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.05012628095922,
                          38.901405158996035
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 2,
                      &quot;LOCATIONID&quot;: 1,
                      &quot;STATIONNAME&quot;: &quot;Dupont Circle&quot;,
                      &quot;BIKECOUNT&quot;: 15,
                      &quot;ADDRESS&quot;: &quot;Massachusetts Ave &amp; Dupont Cir&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.04434905357506,
                          38.91018149756077
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 3,
                      &quot;LOCATIONID&quot;: 4,
                      &quot;STATIONNAME&quot;: &quot;Gallery Place&quot;,
                      &quot;BIKECOUNT&quot;: 15,
                      &quot;ADDRESS&quot;: &quot;7th St &amp; F St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.02191815762689,
                          38.89728344626466
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 4,
                      &quot;LOCATIONID&quot;: 7,
                      &quot;STATIONNAME&quot;: &quot;McPherson Square&quot;,
                      &quot;BIKECOUNT&quot;: 8,
                      &quot;ADDRESS&quot;: &quot;14th St &amp; H St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.03240717405485,
                          38.90078499892696
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 5,
                      &quot;LOCATIONID&quot;: 9,
                      &quot;STATIONNAME&quot;: &quot;Reeves Center&quot;,
                      &quot;BIKECOUNT&quot;: 12,
                      &quot;ADDRESS&quot;: &quot;14th St &amp; U St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.03248214713554,
                          38.917373230883015
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 6,
                      &quot;LOCATIONID&quot;: 10,
                      &quot;STATIONNAME&quot;: &quot;Shaw&quot;,
                      &quot;BIKECOUNT&quot;: 15,
                      &quot;ADDRESS&quot;: &quot;7th St &amp; T St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.02191245663357,
                          38.91598834308168
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 7,
                      &quot;LOCATIONID&quot;: 8,
                      &quot;STATIONNAME&quot;: &quot;Metro Center&quot;,
                      &quot;BIKECOUNT&quot;: 8,
                      &quot;ADDRESS&quot;: &quot;12th St &amp; G St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.02848392960873,
                          38.8987482181005
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 8,
                      &quot;LOCATIONID&quot;: 5,
                      &quot;STATIONNAME&quot;: &quot;Judiciary Square&quot;,
                      &quot;BIKECOUNT&quot;: 8,
                      &quot;ADDRESS&quot;: &quot;4th St &amp; E St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.01540042306134,
                          38.89574098950278
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 9,
                      &quot;LOCATIONID&quot;: 6,
                      &quot;STATIONNAME&quot;: &quot;Logan Circle&quot;,
                      &quot;BIKECOUNT&quot;: 12,
                      &quot;ADDRESS&quot;: &quot;14th St &amp; Rhode Island Ave&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.03219558571061,
                          38.90855656831227
                      ]
                  }
              },
              {
                  &quot;type&quot;: &quot;Feature&quot;,
                  &quot;properties&quot;: {
                      &quot;OBJECTID&quot;: 10,
                      &quot;LOCATIONID&quot;: 2,
                      &quot;STATIONNAME&quot;: &quot;Farragut Square&quot;,
                      &quot;BIKECOUNT&quot;: 15,
                      &quot;ADDRESS&quot;: &quot;17th St &amp; K St&quot;,
                      &quot;QUADRANT&quot;: &quot;NW&quot;,
                      &quot;WEB_URL&quot;: &quot;https://www.smartbikedc.com/&quot;,
                      &quot;PHONE&quot;: &quot;1-800-899-4449&quot;
                  },
                  &quot;geometry&quot;: {
                      &quot;type&quot;: &quot;Point&quot;,
                      &quot;coordinates&quot;: [
                          -77.03788324789845,
                          38.90220976421636
                      ]
                  }
              }
          ]
      }
      ''';

      final geojson = GeoJson();
      await geojson.parse(geoJsonBikeLocation);

      data = geojson.features;
    } catch (e) {
      print(e.toString);
      rethrow;
    }
    return data;

  }

}
</code></pre>
","2024-03-18 08:55:32","2","Answer"
"78176220","78176126","","<p>Since dict is one of the most important core objects, it's implemented in C, as well as <code>dict_values</code>, <code>dict_keys</code> and <code>dict_items</code>. Here's the CPython <a href=""https://github.com/python/cpython/blob/0634201f5391242524dbb5225de37f81a2cc1826/Objects/dictobject.c#L6332"" rel=""nofollow noreferrer"">implementation</a> of <code>dictitems_contains</code>:</p>
<pre class=""lang-c prettyprint-override""><code>static int
dictitems_contains(PyObject *self, PyObject *obj)
{
    _PyDictViewObject *dv = (_PyDictViewObject *)self;
    int result;
    PyObject *key, *value, *found;
    if (dv-&gt;dv_dict == NULL)
        return 0;
    if (!PyTuple_Check(obj) || PyTuple_GET_SIZE(obj) != 2)
        return 0;
    key = PyTuple_GET_ITEM(obj, 0);
    value = PyTuple_GET_ITEM(obj, 1);
    result = PyDict_GetItemRef((PyObject *)dv-&gt;dv_dict, key, &amp;found);
    if (result == 1) {
        result = PyObject_RichCompareBool(found, value, Py_EQ);
        Py_DECREF(found);
    }
    return result;
}
</code></pre>
<p>If you don't speak C, here's what it does:</p>
<ul>
<li>Check that view is correct - namely that it has a reference to the underlying dictionary (and return False if not, for some reason)</li>
<li>Check the input: if it's not a 2-tuple, return False.</li>
<li>Look up a key in the underlying dictionary.</li>
<li>If found, check if value matches. If it does, return True.</li>
<li>Otherwise, return False.</li>
</ul>
<p>The core of this is the fact that <code>dict.items</code> returns not a list, but a special <code>dict_items</code> <em>view</em>. The term <em>view</em> here means that it does not represent a copy, but only a proxy to retrieve underlying items in some specific way. The same applies to <code>dict_keys</code> and <code>dict_values</code>, you can read more in the excellent <a href=""https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects"" rel=""nofollow noreferrer"">documentation page</a> on this topic.</p>
<p>Note that this is specific to CPython implementation and may be wrong for other implementations.</p>
","2024-03-17 17:21:22","3","Answer"
"78176210","78175772","","<p>Your question's example code doesn't run, but I think the only thing you're asking about is how to filter a nested dictionary.</p>
<p>If so, I'd use comprehensions.</p>
<pre><code>filtered = {
  option: {
    rarity: [
      item for item in items
        if item[&quot;Size&quot;] &lt;= max_amount_limit
    ]
      for rarity, items in options.items() 
  } 
    for option, options in set1_items.items() 
}
</code></pre>
<p>Demo : <a href=""https://trinket.io/python3/5c8666dcce"" rel=""nofollow noreferrer"">https://trinket.io/python3/5c8666dcce</a></p>
<p><em><strong>Edit: Examples for filtering rarity too, either dynamically or hard coded...</strong></em></p>
<pre><code>filtered = {
  option: {
    rarity: [
      item for item in items
        if item[&quot;Size&quot;] &lt;= max_amount_limit
    ]
      for rarity, items in options.items()
        if rarity == 'Common'
  } 
    for option, options in set1_items.items() 
}
</code></pre>
<p>Or...</p>
<pre><code>filtered = {
  option: [
      item for item in options['Common']
        if item[&quot;Size&quot;] &lt;= max_amount_limit
  ]
    for option, options in set1_items.items() 
}
</code></pre>
<p>Demo: <a href=""https://trinket.io/python3/5835bd66c1"" rel=""nofollow noreferrer"">https://trinket.io/python3/5835bd66c1</a></p>
","2024-03-17 17:17:25","1","Answer"
"78176126","","Why is fast lookup possible for dict.items()?","<p>Suppose we have a dictionary <code>d</code> defined as follows</p>
<pre class=""lang-py prettyprint-override""><code>d = {i:i for i in range(1,1000001)}
</code></pre>
<p>And then we store <code>d.items()</code> in <code>x</code>. So, <code>x</code> is a collection of tuples that contain key-value pairs for each element of <code>d</code>. I made a list with the same tuples, defined as follows :</p>
<pre class=""lang-py prettyprint-override""><code>l = [(i, i) for i in range(1,1000001)]
</code></pre>
<p>Now, I compared the time taken to execute <code>(1000001, 1000001) in x</code> and <code>(1000001, 1000001) in l</code>. The time difference was very significant. I assumed that this was because <code>x</code> had a set-like behavior and implemented hash tables on tuples, as tuples are hashable as well.</p>
<p>However, tuples that contain lists are non hashable, so I tried the same thing with this dictionary :</p>
<pre class=""lang-py prettyprint-override""><code>d = {i:[i,i+1] for i in range(1,1000001)}
</code></pre>
<p>Unlike what I expected, it still enabled fast lookup.</p>
<p>How does this work?</p>
<p>PS : Here's my code for time comparison</p>
<pre class=""lang-py prettyprint-override""><code>import time

def for_dict_items(n):
    #d = {i:i for i in range(1, n+1)}
    d = {i:[i, i+1] for i in range(1, n+1)}
    di = d.items()
    st = time.time()
    x = (n, [n, n+1]) in di
    et = time.time()
    return (et - st)


def for_tuples_list(n):
    #l = [(i, i) for i in range(1, n+1)]
    l = [(i,[i, i+1]) for i in range(1, n+1)]
    st = time.time()
    x = (n, [n, n+1]) in l
    et = time.time()
    return (et - st)


k = 1000000

t1 = for_dict_items(k)
t2 = for_tuples_list(k)

print(t1, t2, t2/t1, sep = &quot;\n&quot;)
</code></pre>
","2024-03-17 16:53:21","3","Question"
"78175772","","Appending nested dictionary objects to a list based on the values of the nested dictionary object. PYTHON","<p>I've come across an issue with some code I'm writing to display a list of objects that the user can select from. Each object has a given 'Size' attached to it, and each time an object is selected, that size is subtracted from the maximum allowable amount of objects the user can select.</p>
<p>Basically, user starts with an amount limit of 5.
Each object has a size ranging from 1 to 4.</p>
<p>When the user first makes a selection, there are no restrictions, but after that, what the list should show is limited to objects under what amount they have left, so they shouldn't see any objects with a 'Size' of 3, if they only have an amount limit of 2 remaining.</p>
<p>So far, my existing code works for everything except putting those limitations in place.</p>
<pre><code>set1_items = {
    &quot;Option1&quot;: {
        &quot;Common&quot;: [
            {&quot;Item Name&quot;: &quot;A1&quot;, &quot;Size&quot;: 3},
            {&quot;Item Name&quot;: &quot;A2&quot;, &quot;Size&quot;: 4}
        ],
        &quot;Uncommon&quot;: [
            {&quot;Item Name&quot;: &quot;B1&quot;, &quot;Size&quot;: 2},
            {&quot;Item Name&quot;: &quot;B2&quot;, &quot;Size&quot;: 1}
        ]
    },
    &quot;Option2&quot;: {
        &quot;Common&quot;: [
            {&quot;Item Name&quot;: &quot;C1&quot;, &quot;Size&quot;: 3},
            {&quot;Item Name&quot;: &quot;C2&quot;, &quot;Size&quot;: 1}
        ],
        &quot;Uncommon&quot;: [
            {&quot;Item Name&quot;: &quot;D1&quot;, &quot;Size&quot;: 2},
            {&quot;Item Name&quot;: &quot;D2&quot;, &quot;Size&quot;: 4}
        ]
    }
}

chosen_objects = []

objects_chosen = None
max_amount_limit = 5
selected_objects_size = 0
available_objects_list = []

while objects_chosen is None:
    if (max_amount_limit - selected_objects_size) &gt; 3:
        available_objects_list = set1_items[&quot;Option1&quot;][&quot;Common&quot;]
    elif (max_amount_limit - selected_objects_size) &lt;4:
        available_objects_list = set1_items[&quot;Option1&quot;][&quot;Common&quot;]?????

    object_availability = available_objects_list
    objects_itr = 0
    for i in object_availability:
        print(object_itr, end=' - ')
        for key, val in i.items():
            print(key, &quot;: &quot;, val, end='\n    ')
        print()
        object_itr = object_itr+1

    chosen_object_index = input(&quot;&gt; &quot;)
    chosen_object_index = int(chosen_object_index)
    chosen_objects.append(object_availability[chosen_object_index][&quot;Item Name&quot;]

    selected_objects_size = selected_objects_size + object_availability[chosen_object_index][&quot;Size&quot;]

    if max_amount_limit == selected_objects_size:
        objects_chosen = &quot;Done&quot;
    else:
        continue_object_selection = input(&quot;&quot;&quot;
You have &quot;&quot;&quot;+str(int(max_amount_limit - selected_objects_size))+&quot;&quot;&quot; amounts left.

Do you want to select more objects from Set 1, or move on to Set 2?
1 - Continue with Set 1
2 - Move on to Set 2

&gt;&quot;&quot;&quot;)

        if continue_object_selection == &quot;1&quot;:
            objects_chosen is None
        elif continue_object_selection == &quot;2&quot;:
            objects_chosen - &quot;Done&quot;
        else:
            print(&quot;Not a valid choice, try again&quot;)

</code></pre>
<p>This is a basic, trimmed down version of my code, and I've added ????? where the code is in need of something more.</p>
<p>Any help would be greatly appreciated, as I haven't been able to find anything regarding appending nested dictionary items to a list based on their values.</p>
<p>Thank you.</p>
","2024-03-17 15:12:13","0","Question"
"78175018","78173072","","<p>As pointed out by <a href=""https://stackoverflow.com/users/4111404/luis-miguel-mej%c3%ada-su%c3%a1rez"">@Luis Miguel Mejía Suárez</a> in the comments you can utilize <code>withColumnRenamed()</code> to rename the columns using your <code>lookupMap</code> as follows:</p>
<pre class=""lang-scala prettyprint-override""><code>val currentColumns = petDF.columns
val renamedPetDF = currentColumns.foldLeft(petDF) { (df, colName) =&gt;
  lookupMap.get(colName) match {
    case Some(newColName) =&gt; df.withColumnRenamed(colName, newColName)
    case None =&gt; df
  }
}
</code></pre>
<p>Now, why does your if-condition always evaluates to true? You need to understand how <code>contains()</code> works. Here's an example:</p>
<pre class=""lang-scala prettyprint-override""><code>for ((k, v) &lt;- lookupMap) {
  if (lookupMap.contains(&quot;Animal&quot;)) {
    println(&quot;Match found for 'Animal'&quot;)
  }
}
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code>Match found for 'Animal'
Match found for 'Animal'
Match found for 'Animal'
Match found for 'Animal'
</code></pre>
<p>Here, when the loop iterates over each key-value pair in <code>lookupMap</code>, the condition <code>lookupMap.contains(&quot;Animal&quot;)</code> will always be evaluated to true for every key in the map. This is because <code>contains(&quot;Animal&quot;)</code> checks if the key &quot;Animal&quot; exists in the entire map, not just for the specific key being iterated over at that moment.</p>
<p>Also, nothing will be printed (always false) in case you replace &quot;Animal&quot; with something which is not present as a key in the <code>lookupMap</code> because the <em>map does not <strong>contain</strong> the specified column name as a key</em>.</p>
<p>Check the <a href=""https://docs.scala-lang.org/overviews/collections-2.13/maps.html"" rel=""nofollow noreferrer"">scala documentation</a> on different ways to do lookups on <code>Maps</code>.</p>
","2024-03-17 11:23:48","1","Answer"
"78174344","","View Geojson on flutter_map","<p>I want to display Geojson data on a map to draw polygons and points
I used Flutter_map library: ^4.0.0</p>
<p>I tried converting from geojson to latlng and did not find a way
The libraries that should help me are very old</p>
<pre><code>{
  &quot;type&quot;: &quot;FeatureCollection&quot;,
  &quot;features&quot;: [
    {
      &quot;type&quot;: &quot;Feature&quot;,
      &quot;geometry&quot;: {
        &quot;type&quot;: &quot;Point&quot;,
        &quot;coordinates&quot;: [longitude, latitude]
      },
      &quot;properties&quot;: {
        &quot;name&quot;: &quot;point name&quot;,
        &quot;description&quot;: &quot;point desc&quot;
      }
    }
  ]
}
</code></pre>
","2024-03-17 07:08:13","0","Question"
"78173072","","In Scala, how to perform an exact comparison match when iterating on each Map key?","<p>Ultimately, my goal is to iterate over a Map that contains several thousand records, and compare each matching key, with a column name from a Dataframe that has a hundreds of columns.</p>
<p>I have a Dataframe that has a subset of objects:</p>
<pre><code> val petDF = Seq(
   (1, “dog”),
   (2, “cat”),
   (3, &quot;horse&quot;)
 ).toDF(“Rank”, “Animal”, …several hundred columns)
</code></pre>
<p>And a map or dictionary with key/value pairs that has a superset of objects.</p>
<pre><code>val lookupMap = Map (
   “Rank” -&gt; “Rating”,
   “Animal” -&gt; “Pet”,
   “Human” -&gt; “Person”,
   “Neighbor” -&gt; “Friend”
   …several thousand records…
)
</code></pre>
<p>I need to iterate over the map/dictionary and, for each match with the Dataframe column, I need to reassign the column name in the Dataframe depending whenever there is a match on the key.</p>
<p>For instance, when there is a match on the Map’s key <code>Animal</code> then the Dataframe column name needs to be renamed to <code>Pet</code>.  And then when there is a match with the Dataframe’s column name on the Map’s key <code>Rank</code> then the Dataframe column needs to be renamed to <code>Rating</code>.  But, there should be no impact to the Dataframe when there is no matching Column name in the Map; like for <code>Human</code> or <code>Neighbor</code>.</p>
<p>My problem is, that I am trying to figure out how to iterate over each value in the Map and perform the comparison with each value of the Dataframe’s columns.</p>
<p>I tried using the construct for Map <code>.contains()</code> but the <code>if</code> is True every time the loop evaluates</p>
<pre><code>for ((k, v) &lt;- lookupMap)
{ if( lookupMap.contains(“[column name]”) { [rename column]}
}  
</code></pre>
<p>This doesn’t work because the <code>if </code>evaluates to <code>true</code> every time with <code>.contains()</code> each time.</p>
<p>Is there a better way to iterate over the Map and perform the comparison with a matching column?  There will be hundreds of matches.</p>
<p>TL;DR -  The particular problem that I’m stuck on is iterating over each key in the map and comparing the exact value with a matching column in the Dataframe.</p>
","2024-03-16 19:35:13","1","Question"
"78170388","78169568","","<p>You only care about the values of your map, the <code>House</code> objects. So extract.</p>
<pre><code>Collection &lt; House &gt; houses = myMap().values() ;
</code></pre>
<p>Make a sortable list from that collection.</p>
<pre><code>List &lt; House &gt; housesSorted = new ArrayList&lt;&gt;( houses );
</code></pre>
<p>Define your various comparators.</p>
<pre><code>Comparator &lt; House &gt; compareByBedroomCount = Comparator.comparing( House :: bedroomCount ) ;
Comparator &lt; House &gt; compareBySquareMeters = Comparator.comparing( House :: squareMeters ) ;
</code></pre>
<p>Apply the appropriate comparator.</p>
<pre><code>housesSorted.sort( compareByBedroomCount );
</code></pre>
","2024-03-16 02:09:36","0","Answer"
"78170199","78164496","","<p>The issue is duplicate values, which nothing in <a href=""https://leetcode.com/problems/longest-consecutive-sequence/"" rel=""nofollow noreferrer"">the problem description</a> rules out:</p>
<blockquote>
<p>Given an unsorted array of integers <code>nums</code>, return <em>the length of the longest consecutive elements sequence</em>.</p>
</blockquote>
<p>Your code with the slice has O(n) time complexity on the size of the input when there are no duplicates, but with unrestricted duplicates, the worst case time complexity is O(n^2) (consider a list where half the entries are 1 and the other half is 2, 3, 4, …, n/2).</p>
<p>Maps can’t have duplicate keys, so by iterating over the map, you’re deduplicating, restoring worst-case O(n).</p>
<pre><code>import &quot;slices&quot;

type void struct{}

func longestConsecutive(nums []int) int {
    max_seq := 0
    numSet := make(map[int]void, len(nums))

    for _, n := range nums {
        numSet[n] = void{}
    }

    slices.Sort(nums)

    for _, n := range nums {
        if _, prev_exists := numSet[n-1]; !prev_exists {
            for i := 1; ; i++ {
                if _, next_exists := numSet[n+i]; !next_exists {
                    max_seq = max(max_seq, i)
                    break
                }
            }
        }
    }
    return max_seq
}
</code></pre>
<p>1792 ms</p>
<pre><code>import ""slices""

type void struct{}

func longestConsecutive(nums []int) int {
    max_seq := 0
    numSet := make(map[int]void, len(nums))

    for _, n := range nums {
        numSet[n] = void{}
    }

    slices.Sort(nums)

    for i, n := range nums {
        <strong><em>if i > 0 && nums[i - 1] == n {
            continue
        }</em></strong>

        if _, prev_exists := numSet[n-1]; !prev_exists {
            for i := 1; ; i++ {
                if _, next_exists := numSet[n+i]; !next_exists {
                    max_seq = max(max_seq, i)
                    break
                }
            }
        }
    }
    return max_seq
}</code></pre>
<p>82 ms</p>
","2024-03-16 00:20:09","4","Answer"
"78169634","78168480","","<p>Here is possible solution how you can flatten this dictionary:</p>
<pre class=""lang-py prettyprint-override""><code>sample_data = {
    &quot;instances&quot;: [
        {
            &quot;a&quot;: &quot;1987&quot;,
            &quot;b&quot;: &quot;2001&quot;,
            &quot;art&quot;: {
                &quot;009&quot;: {
                    &quot;art_id&quot;: &quot;009&quot;,
                    &quot;mm&quot;: {
                        &quot;1002&quot;: {
                            &quot;mm_code&quot;: &quot;1002&quot;,
                            &quot;node&quot;: {
                                &quot;6625583&quot;: {
                                    &quot;node_id&quot;: &quot;6625583&quot;,
                                    &quot;node_sc&quot;: &quot;186&quot;,
                                    &quot;node_si&quot;: [
                                        {&quot;measure&quot;: &quot;S&quot;, &quot;chest&quot;: 29},
                                        {&quot;measure&quot;: &quot;M&quot;, &quot;chest&quot;: 32},
                                    ],
                                }
                            },
                        }
                    },
                }
            },
        }
    ]
}


def find_node_si(dct):
    if &quot;node_si&quot; not in dct:
        next_dct = next(v for v in dct.values() if isinstance(v, dict))
        return find_node_si(next_dct)
    else:
        return dct[&quot;node_si&quot;]


def return_all_key_values(dct):
    keys = [(k, v) for k, v in dct.items() if not isinstance(v, (list, dict))]
    next_dct = next((v for v in dct.values() if isinstance(v, dict)), None)
    if next_dct:
        return keys + return_all_key_values(next_dct)
    else:
        return keys


out = {&quot;instances&quot;: []}
for i in sample_data[&quot;instances&quot;]:
    dct = return_all_key_values(i)
    for node_si in find_node_si(i):
        out[&quot;instances&quot;].append(dict(dct + list(node_si.items())))

print(out)
</code></pre>
<p>Prints:</p>
<pre><code>{
    &quot;instances&quot;: [
        {
            &quot;a&quot;: &quot;1987&quot;,
            &quot;b&quot;: &quot;2001&quot;,
            &quot;art_id&quot;: &quot;009&quot;,
            &quot;mm_code&quot;: &quot;1002&quot;,
            &quot;node_id&quot;: &quot;6625583&quot;,
            &quot;node_sc&quot;: &quot;186&quot;,
            &quot;measure&quot;: &quot;S&quot;,
            &quot;chest&quot;: 29,
        },
        {
            &quot;a&quot;: &quot;1987&quot;,
            &quot;b&quot;: &quot;2001&quot;,
            &quot;art_id&quot;: &quot;009&quot;,
            &quot;mm_code&quot;: &quot;1002&quot;,
            &quot;node_id&quot;: &quot;6625583&quot;,
            &quot;node_sc&quot;: &quot;186&quot;,
            &quot;measure&quot;: &quot;M&quot;,
            &quot;chest&quot;: 32,
        },
    ]
}
</code></pre>
","2024-03-15 20:58:28","0","Answer"
"78169568","","Sorting a TreeMap by object properties","<p>I have a TreeMap full of Houses. Each house has different properties such as address, number of floors, etc. The TreeMap gets populated into a JList so that the user can select a house from the list, and then view each property in its own respective field. Before the list is open, the user has the option to sort by various different ways such as House addresses alphabetically, or by highest number of bedrooms etc and then they will view the list of Houses in that order.</p>
<p>I understand that TreeMaps are sorted by their keys. I am trying to use Comparator but I feel like I've hit a wall and I have no idea if I'm doing this correctly. How can I call my Comparator from the JFrame/JList that I am using?</p>
<p>Can anyone help me out please? My instructor hasn't responded to my email in 4 days so I am stuck.</p>
<pre><code>public static Map&lt;String, House&gt; neighborhood;

public Neighborhood(){
neighborhood = new TreeMap&lt;&gt;();
}

    public static class SortByAddress implements Comparator&lt;Map.Entry&lt;String, House&gt;&gt;{
        @Override
        public int compare(Entry&lt;String, House&gt; o1, Entry&lt;String, House&gt; o2) {
            // TODO Auto-generated method stub
                return o1.getValue().getAddress().toString().compareTo(o2.getValue().getAddress().toString());
        }
        
    }
</code></pre>
","2024-03-15 20:44:02","0","Question"
"78168480","","Format json or dictionary data in to partially flat structure in python","<pre><code>sample_data = {
  &quot;instances&quot;: [
    {
      &quot;a&quot;: &quot;1987&quot;,
      &quot;b&quot;: &quot;2001&quot;,
      &quot;art&quot;: {
        &quot;009&quot;: {
          &quot;art_id&quot;: &quot;009&quot;,
          &quot;mm&quot;: {
            &quot;1002&quot;: {
              &quot;mm_code&quot;: &quot;1002&quot;,
              &quot;node&quot;: {
                &quot;6625583&quot;: {
                  &quot;node_id&quot;: &quot;6625583&quot;,
                  &quot;node_sc&quot;: &quot;186&quot;,
                  &quot;node_si&quot;: [
                    {
                      &quot;measure&quot;: &quot;S&quot;,
                      &quot;chest&quot;: 29
                    },
                    {
                      &quot;measure&quot;: &quot;M&quot;,
                      &quot;chest&quot;: 32
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  ]
}
</code></pre>
<p>what do we need?
I have sample_data and i need to convert <code>sample[&quot;instances&quot;][0]</code> into following format</p>
<pre><code>sample_data = {
  &quot;instances&quot;: [
    {
      &quot;a&quot;: &quot;1987&quot;,
      &quot;b&quot;: &quot;2001&quot;,
      &quot;art_id&quot;: &quot;009&quot;,
      &quot;mm_code&quot;: &quot;1002&quot;,
      &quot;node_id&quot;: &quot;6625583&quot;,
      &quot;node_sc&quot;: &quot;186&quot;,
      &quot;measure&quot;: &quot;S&quot;,
      &quot;chest&quot;: 29
    },
    { 
      &quot;a&quot;: &quot;1987&quot;,
      &quot;b&quot;: &quot;2001&quot;,
      &quot;art_id&quot;: &quot;009&quot;,
      &quot;mm_code&quot;: &quot;1002&quot;,
      &quot;node_id&quot;: &quot;6625583&quot;,
      &quot;node_sc&quot;: &quot;186&quot;,
      &quot;measure&quot;: &quot;M&quot;,
      &quot;chest&quot;: 32
    }
  ]
}
</code></pre>
<p>requirements</p>
<ol>
<li>Need a very less time-consuming solution</li>
<li>Multiple &quot;art_id&quot; s or &quot;art&quot;  and &quot;mm&quot; nested values are also possible. This means that :</li>
</ol>
<pre><code>{ &quot;instances&quot;:
  [
    { &quot;a&quot;: &quot;1987&quot;, &quot;b&quot;: &quot;2001&quot;,
      &quot;art&quot;:
         {
         001:{--},
         002:{--}
          }
    },
   { &quot;a&quot;: &quot;197&quot;, &quot;b&quot;: &quot;201&quot;,
      &quot;art&quot;:
         {
         001:{--},
         002:{--}
          }
    },
 ]
}
</code></pre>
<p>And this applies to <code>mm</code> and <code>nodes</code> as well</p>
<p>tried this solution :
<a href=""https://stackoverflow.com/questions/6027558/flatten-nested-dictionaries-compressing-keys"">imran's solution</a> but could not reach the required format.
Thank you for all the help incoming</p>
","2024-03-15 16:45:07","1","Question"
"78166639","78166363","","<p>You're not just making a <code>dict</code>, you're making a <code>dict</code> of <code>dict</code>s, each of which incurs a non-trivial amount of overhead (on my machine, each of your small <code>dict</code>s adds 184 bytes of overhead all by itself). Your chunking is nigh unto useless, because the <code>dict</code> of <code>dict</code>s keeps growing, the (likely fairly efficiently stored) dataframe is likely not all that important, memory-wise.</p>
<p>One thing you could try to do to reduce that overhead is to have your <code>dict</code> map to slotted classesinstead of <code>dict</code>s, and use <code>dataclasses.asdict</code> to make them encode to the <code>dict</code> form:</p>
<pre><code>import dataclasses
import json

@dataclasses.dataclass(slots=True)  # slots=True optimizes to store only the declared attributes with less memory
class Voxel:
    xcoord: float
    ycoord: float
    zcoord: float
    val: int
</code></pre>
<p>then change the relevant part of your loop to:</p>
<pre><code>            for index, row in chunk.iterrows():
                voxel = row['voxel']
                # Store the values in the dict
                grid_dict[voxel] = Voxel(row['xcoord'],
                                         row['ycoord'],
                                         row['zcoord'],
                                         row['val1'] + 2 * row['val2']
                                        )
            pbar.update(chunk_size)

            # Write the grid dictionary to the output file after processing each chunk
            with open(output_file, 'w') as f:
                json.dump(grid_dict, f, default=dataclasses.asdict)  # Converts to dict lazily just in time to convert it to a string, rather than all at once
</code></pre>
<p><code>dataclasses</code> both make the custom class quicker to declare, and provide the <code>dataclasses.asdict</code> helper to make serializing them easy (<code>collections.namedtuple</code>/<code>typing.NamedTuple</code> might seem like they work, but unfortunately, they're interpreted as plain <code>tuple</code>s and serialized as JSON Arrays).</p>
<p>The net savings here, on my local Python install, is 120 bytes per <code>Voxel</code> (the <code>dict</code> overhead is 184 bytes per-<code>dict</code>, vs. 64 bytes per-<code>Voxel</code> instance). If you're close to being able to fit in memory, this might be enough to get you there.</p>
","2024-03-15 11:39:30","1","Answer"
"78166363","","Python data to dict memory concerns: how to efficiently load data into a dict?","<p>I'm trying to load a very large dataset (~560MB) into a dict in order to display it as a 3D graph.
I have run into memory issues that resulted in &quot;Killed.&quot;, so I've added some logic to read my dataset in chunks and dump the dict to a json file periodically, I hoped this would avoid my RAM being filled up.
However, I still get it killed after reaching about 4.00M/558.0M progress.</p>
<p>I want to understand how this roughly 560MB file is costing me gigabytes of RAM just to cut away unwanted columns and transform into a dict? And if there's any more efficient methods to get to what I need: a data object where I can efficiently extract sets of coords with their vals.</p>
<p>Please find my code and some example data below:</p>
<pre><code>import json
import logging
import os

import pandas as pd
from tqdm import tqdm


def create_grid_dict(file_path, chunk_size=500000):
    &quot;&quot;&quot;
    :param file_path: Path to a grid file.
    :param chunk_size: Number of lines to process before dumping into json
    :return: Dictionary object containing the gist grid data with as index the voxel number
             and as values the x, y and z coordinates, and the value
    &quot;&quot;&quot;
    # Read the data from the file
    with open(file_path, 'r') as file:
        # Read the first line
        header = file.readline().strip()
        header2 = file.readline().strip()
        # Log the header
        logging.info(header)
    columns = header2.split(' ')

    # Get the file size
    file_size = os.path.getsize(file_path)

    output_file = 'datasets/cache.json'
    # Check if the output file already exists
    if os.path.exists(output_file):
        with open(output_file, 'r') as f:
            grid_dict = json.load(f)
            return grid_dict
    else:
        # Create an empty dictionary to store the grid data
        grid_dict = {}

    logging.info(f&quot;Reading file size {file_size} in chunks of {chunk_size} lines.&quot;)
    # Read the file in chunks
    with tqdm(total=file_size, unit='B', unit_scale=True, desc=&quot;Processing&quot;) as pbar:
        for chunk in pd.read_csv(file_path, delim_whitespace=True, skiprows=2, names=columns, chunksize=chunk_size):
            # Filter out the columns you need
            chunk = chunk[['voxel', 'xcoord', 'ycoord', 'zcoord', 'val1', 'val2']]

            # Iterate through each row in the chunk
            for index, row in chunk.iterrows():
                voxel = row['voxel']
                # Store the values in the dictionary
                grid_dict[voxel] = {
                    'xcoord': row['xcoord'],
                    'ycoord': row['ycoord'],
                    'zcoord': row['zcoord'],
                    'val': row['val1'] + 2 * row['val2']
                }
            pbar.update(chunk_size)

            # Write the grid dictionary to the output file after processing each chunk
            with open(output_file, 'w') as f:
                json.dump(grid_dict, f)
    return grid_dict
</code></pre>
<pre><code># Example space-delimited dataset
voxel xcoord ycoord zcoord val1 val2
1 0.1 0.2 0.3 10 5
2 0.2 0.3 0.4 8 4
3 0.3 0.4 0.5 12 6
4 0.4 0.5 0.6 15 7
5 0.5 0.6 0.7 9 3
6 0.6 0.7 0.8 11 5
7 0.7 0.8 0.9 13 6
8 0.8 0.9 1.0 14 7
9 0.9 1.0 1.1 16 8
10 1.0 1.1 1.2 18 9
</code></pre>
","2024-03-15 10:49:36","0","Question"
"78164496","","Why iterating over slice may be slower than over map in Go?","<p>I was doing the famous <a href=""https://leetcode.com/problems/longest-consecutive-sequence/description/"" rel=""nofollow noreferrer"">Longest Consecutive Sequence problem on leetcode</a> and came up with two working solutions. They differ in one line only so this code is for both:</p>
<pre><code>type void struct{}

func longestConsecutive(nums []int) int {
    max_seq := 0
    numSet := make(map[int]void, len(nums))

    for _, n := range nums {
        numSet[n] = void{}
    }

    for n := range numSet {  &lt;&lt; the Map version
    for _, n := range nums { &lt;&lt; the Slice version

        if _, prev_exists := numSet[n-1]; !prev_exists {
            for i := 1; ; i++ {
                if _, next_exists := numSet[n+i]; !next_exists {
                    max_seq = max(max_seq, i)
                    break
                }
            }
        }
    }
    return max_seq
}
</code></pre>
<p>Both solutions work and take about 11-12 MB of memory, but drastically differ in speed:</p>
<p><strong>1832 ms</strong> for the Slice version<br />
<strong>84 ms</strong> for the Map one</p>
<p>I ran both several times, first thinking it is due to the lags on the server side, but nothing changed, iterating over slice was about 20 times slower every time. This is counterintuitive to me, because slice is based on array which should make the loop very fast for its simple internal structure comparing to the map which is hash. I must be getting something wrong here and want to understand. Please help!</p>
","2024-03-15 03:23:02","4","Question"
"78161550","","What is the proper way to nest data into python dictionary?","<pre><code>class ldapDict():
    jsonStruct={}

def add_keys_nested_dict(d, keys):
    if len(keys) == 1:
        d.setdefault(keys[0], 1)
    else:
        key = keys[0]
        if key not in d:
            d[key] = {}
        add_keys_nested_dict(d[key], keys[1:])

def listSplit(input):
    dnList=input.split(',')
    res = [i for i in dnList if i not in ldapSearchBase.split(',')]
    if(len(res)&lt;=1):
        primaryKey=ldapSearchBase
        parent=ldapSearchBase
    else:
        primaryKey=res[0]
        parent=res[1]
    return (parent,primaryKey)

def dissectList(input):
    x=listSplit(input)
    add_keys_nested_dict(ldapDict.jsonStruct,x)
</code></pre>
<p>This is the portion of code that takes the ldap &quot;DN&quot; data and builds the dictionary from that path. The output is not nesting the data to the right &quot;parent&quot;.</p>
<pre><code>{
  &quot;dc=ZZ,dc=org&quot;: {
    &quot;dc=ZZ,dc=org&quot;: 1
  },
  &quot;dc=dows&quot;: {
    &quot;ou=users&quot;: 1,
    &quot;ou=userunit&quot;: 1,
    &quot;ou=unittypemaster&quot;: 1
  },
  &quot;ou=unittypemaster&quot;: {
    &quot;accessunittypemasterkey=A&quot;: 1,
    &quot;accessunittypemasterkey=B&quot;: 1,
    &quot;accessunittypemasterkey=C&quot;: 1,
    &quot;accessunittypemasterkey=D&quot;: 1,
    &quot;accessunittypemasterkey=E&quot;: 1,
    &quot;accessunittypemasterkey=F&quot;: 1
  }, ...
</code></pre>
<p>This is a snippet of the output. dc=ZZ,dc=org is the root, but dc=dows should be nested in dc=ZZ,dc=org. Similarly ou=unittypemaster should be nested into that spot in dc=dows. I know the issues is in how I am looking into the dictionary, but I can't figure out the correct way to drill down.</p>
","2024-03-14 15:15:36","0","Question"
"78159492","78159423","","<p>Try this:</p>
<pre><code>var serverdata = '{{ barCdata | tojson }}';
resPbar = $.parseJSON(serverdata);

var response = {
    &quot;stacks&quot;: {}
};

$.each(resPbar, function (i, item) {
    response.stacks[item.Team].push({
        &quot;Open&quot;: item.Open,
        &quot;Close&quot;: item.Close
    });
});
</code></pre>
","2024-03-14 09:44:49","0","Answer"
"78159423","","Assign dynamic values to JavaScript dictionary","<p>I need to assign dynamic values to JavaScript dictionary to be used to echarts but when assigning the dynamic values to dictionary it is showing the different behavior as compare to assigning the static values.</p>
<p>when assigning static values :</p>
<pre><code>     response = {
            &quot;stacks&quot;: {&quot;5G_L2&quot;: [{&quot;Open&quot;: &quot;43&quot;},{&quot;Close&quot;: &quot;24&quot;}],
                       &quot;5G_L3&quot;: [{&quot;Open&quot;: &quot;12&quot;},{&quot;Close&quot;: &quot;2&quot;}]
                      }
                  }; 
</code></pre>
<p>Debug window showing like :</p>
<p><a href=""https://i.sstatic.net/KhM64.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KhM64.png"" alt=""enter image description here"" /></a></p>
<p>whereas when assigning the values dynamically like as below :</p>
<pre><code>            var datastck=[];
            var serverdata = '{{ barCdata | tojson }}';
            resPbar = $.parseJSON(serverdata);

            $.each(resPbar, function (i, item) {
              var di={};
              di[item.Team]=[{&quot;Open&quot;: item.Open},{&quot;Close&quot;: item.Close}];
              datastck.push(di);
            });

            
          response = {
            &quot;stacks&quot;: datastck
                  };
</code></pre>
<p>Debug window be like :</p>
<p><a href=""https://i.sstatic.net/bhIfi.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/bhIfi.png"" alt=""enter image description here"" /></a></p>
<p>it is adding one extra layer of array .I need to have the static assignment structure to support the echarts, Someone Advice please?</p>
<p>Thanks in Advance.</p>
","2024-03-14 09:36:09","1","Question"
"78159337","78159310","","<p>The following appears to work fine on my version of Python (but you have syntax errors from the start in your question).</p>
<pre><code>weights_dict = {&quot;A&quot;:16, &quot;B&quot;: 3, &quot;C&quot;: 5}
weights_dict_reci = {value: 1 / weights_dict[value] for value in weights_dict}
print( weights_dict )
print( weights_dict_reci )
</code></pre>
<p>Output:</p>
<pre><code>{'A': 16, 'B': 3, 'C': 5}
{'A': 0.0625, 'B': 0.3333333333333333, 'C': 0.2}
</code></pre>
","2024-03-14 09:22:42","1","Answer"
"78159327","78159310","","<p>In your <em>Minimum Reproducible Example</em> your dictionary is <strong><code>weights</code></strong>.</p>
<p>You can try:</p>
<pre><code>weights = {&quot;A&quot;:16, &quot;B&quot;: 3, &quot;C&quot;: 5}

{k:1/v for k,v in weights.items()}
</code></pre>
<hr />
<p>Alternatively, as you tried in your attempt:</p>
<pre><code>{value: 1 / weights[value] for value in weights}  # here value is the `key` for the dictionary `weights`. 
</code></pre>
<hr />
<p>output</p>
<pre><code>#{'A': 0.0625, 'B': 0.3333333333333333, 'C': 0.2}
</code></pre>
<p>I am not sure about <code>weights_dict</code> as you have not provided any information about it.</p>
<p>From the error, it looks like <code>weights_dict[value]</code> is a function somewhere in your code.</p>
","2024-03-14 09:20:01","1","Answer"
"78159310","","Problems with reciprocal of an dictionary","<p>given dict: <code>weights = {&quot;A&quot;:16, &quot;B&quot;: 3, &quot;C&quot;: 5)</code>
I want to have the reciprocal of the values.</p>
<p>Output:
<code>weights_dict_reci = {&quot;A&quot;:0,0625, &quot;B&quot;: 0,3333333, &quot;C&quot;: 0,2)</code></p>
<p>So far I tried:
<code>weights_dict_reci = {value: 1 / weights_dict[value] for value in weights_dict}</code></p>
<p>and</p>
<pre><code>for key in weights_dict:
    weights_dict[key] = 1 / weights_dict[key]

</code></pre>
<p>Everytime i get the error: unsupported operand type(s) for /: 'int' and 'function'</p>
<p>1st: How to make tke reciprocal for the dict values?</p>
<p>2nd: what is the cause for this error in my code?</p>
<p>Thanks!</p>
","2024-03-14 09:16:56","0","Question"
"78158759","77935397","","<p>Thanks to all who have replied!
Combining suggestions from various people as well as my own research, below is the most I can do.</p>
<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-

&quot;&quot;&quot;
InfiniteDefaultRevisionDict sort items in the order of latest updates and allows arbitrary chaining of keys.

For example,

&gt;&gt;&gt; d=InfiniteDefaultRevisionDict()
&gt;&gt;&gt; dct[person_name][gender] = 'M'
&gt;&gt;&gt; dct[company_name][employees] = [...]
&quot;&quot;&quot;

import bisect, json
from collections import namedtuple
from collections.abc import MutableMapping


from collections import OrderedDict, defaultdict

class Dict(OrderedDict):
    def __init__(self, default=None, init_dct={}):
        self._default = default
        self.update(init_dct)

    def __setitem__(self, key, value):
        super().__setitem__(key, value)
        self.move_to_end(key)

    def __missing__(self, key):
        self[key] = self._default() if callable(self._default) else self._default
        return self[key]

    def to_json(self, fp=None, **kwargs):
        return json.dumps(self, default=lambda t: dict(t), **kwargs) if fp==None else json.dump(self, fp, default=lambda t: dict(t), **kwargs)

    def from_json(self, fp=None, data=''):
        self.update(json.loads(data, object_hook=lambda t: (Dict(self._default, t) if type(t)==dict else t)) if fp==None \
            else json.load(fp, object_hook=lambda t: (Dict(self._default, t) if type(t)==dict else t)))
        return self


InfiniteDefaultRevisionDict = lambda: Dict(InfiniteDefaultRevisionDict)
</code></pre>
<p>It cannot set the default lambda other than <code>InfiniteDefaultRevisionDict</code>. However, you can serialize it to JSON and de-serialize it from JSON in the form of a standard Python <code>dict</code>. Hope someone can come up with a better solution that can satisfy more requirements.</p>
","2024-03-14 07:31:09","0","Answer"
"78155002","78154746","","<p>Assuming you just want to loop through the rows and then loop through the items that you're looking for and check if any of those items are in a row... yes, that is very possible:</p>
<pre><code>rows = [{'name': 'Alice', 'AGATC': '2', 'AATG': '8', 'TATC': '3'},
        {'name': 'Bob', 'AGATC': '4', 'AATG': '1', 'TATC': '5'},
        {'name': 'Charlie', 'AGATC': '3', 'AATG': '2', 'TATC': '5'}]

seq = {'AGATC': '4', 'AATG': '1', 'TATC': '5'}

for row in rows:
    if any(row.get(key) == value for key, value in seq.items()):
        print(&quot;Got it&quot;)
</code></pre>
<p>This way you're picking a row and checking if any of the items from <code>seq</code> can be found in the row. The finding itself checks whether the whole item exists, just like you want, by calling <a href=""https://docs.python.org/3/library/stdtypes.html#dict.get"" rel=""nofollow noreferrer""><code>row.get(key)</code></a> first (and checking if they key exists in the first place) and then by comparing it to the value you want it to be equal.</p>
<hr />
<p>We're lucky that <code>.get(key[, default])</code></p>
<blockquote>
<p><em>Return[s] the value for key if key is in the dictionary, else default. If default is not given, it defaults to None, so that this method never raises a KeyError.</em></p>
</blockquote>
<p>as such you don't need to worry about crashing when comparing values of non-existent keys.</p>
<p>Instead of <code>any()</code>, you could also keep your 2nd loop and know exactly which item was found if you care about that information.</p>
","2024-03-13 15:31:15","1","Answer"
"78154746","","Python check if item is in dictionary items","<p>Is it possible to check in python if an item is in a dictionary of items in a way like below:</p>
<pre><code>for x in rows:
    print(x.items())
    for item in seq.items():
        print(item)
        if item in x.items():
            print(&quot;got it&quot;)
</code></pre>
<pre><code>Rows = [{'name': 'Alice', 'AGATC': '2', 'AATG': '8', 'TATC': '3'},
        {'name': 'Bob', 'AGATC': '4', 'AATG': '1', 'TATC': '5'},
        {'name': 'Charlie', 'AGATC': '3', 'AATG': '2', 'TATC': '5'}]

Seq = {'AGATC': 4, 'AATG': 1, 'TATC': 5}
</code></pre>
<p>I know that I can check if value exist but I want check if whole item exists. It will be an easier way to do this.</p>
","2024-03-13 14:54:33","-1","Question"
"78149537","78147200","","<p>Got it working as follows:</p>
<pre><code>    struct ProjectContactSubContractorView: View {

    @EnvironmentObject var env: Env

    var body: some View {

        let results = env.project.response?.container?.project?.subcontractors?.contact

        if let results = results {

            let groupedByCompany = Dictionary(grouping: results, by: { $0.company })

            List {

                ForEach(groupedByCompany.keys.sorted(), id: \.self) { company in
                    NavigationLink(destination: ProjectContactDetailsView(company: company, results: groupedByCompany[company] ?? [])) {
                        Text(company)
                    }
                }

            }

        }

    }

}
</code></pre>
","2024-03-12 19:11:29","-2","Answer"
"78147784","78147685","","<p>Use keyword argument expansion(**) with a dictionary:</p>
<pre><code>for i in range(40):
    Name.parameters(**{f'Var{i}': f'variable name {i}'})
</code></pre>
<p>If you function can take multiple parameters, this could work by using a dictionary comprehension to generate all parameters at once:</p>
<pre><code>params = {f'Var{i}': f'variable name {i}' for i in range(40)}
Name.parameters(**params)
</code></pre>
","2024-03-12 14:04:51","3","Answer"
"78147685","","Set values based on variable keys in a python dictionary","<p>I'm using an automation library in Python which has this syntax:</p>
<pre><code>Name.parameters(Var1 = 'variable name 1')
</code></pre>
<p>So by running this I can assign &quot;variable name 1&quot; to &quot;Var1&quot;. This works without any problem.
The issue is that I have like 40 variables that I need to assign names to. To avoid writing them by hand, I was thinking to use a for loop instead.</p>
<p>So I'm trying to have something like this:</p>
<pre><code>for i in range(40):
    var_i = str(&quot;Var&quot;+i)
    var_name_i = str(&quot;variable name &quot;+i)
    Name.parameters(var_i = var_name_i)
</code></pre>
<p>The problem is that this does not work. So I'm trying to find a way to access/change values of a dictionary while dict keys are defined by a variable.</p>
","2024-03-12 13:51:03","1","Question"
"78147576","78147485","","<p>You can't really create a random map without creating random entries. You'll need to be able to create each contained type (in your example <code>Author</code> and <code>Book</code>) randomly. Putting them in a list and map is just creating the proper containers then.</p>
<p>So what you really probably have is</p>
<pre><code>class MapRandomizer&lt;K, List&lt;E&gt;&gt; {
 private ItemRandomizer&lt;K&gt; keyRandomizer;
 private ListRandomizer&lt;E&gt; listRandomizer;

 public Map&lt;K, List&lt;E&gt;&gt; createMap() {
  // random count, for each entry create random K and random List&lt;E&gt;
  // using keyRandomizer and listRandomizer
 }
}
</code></pre>
<p>with</p>
<pre><code>class ListRandomizer&lt;E&gt; {
 private ItemRandomizer&lt;E&gt; entryRandomizer;

 public List&lt;E&gt; createList() {
  // random count, fill list with that amount of entries 
  // using the entry randomizer
 }
}
</code></pre>
<p>and then you can create your concrete randomizer with</p>
<pre><code>MapRandomizer&lt;Author, List&lt;Book&gt;&gt; randomizer = new MapRandomizer&lt;&gt;(
 new AuthorRandomizer(), new ListRandomizer&lt;Book&gt;(new BookRandomizer())
);
</code></pre>
<p>In this, <code>AuthorRandomizer</code> and <code>BookRandomizer</code> will need to implement <code>ItemRandomizer&lt;Author&gt;</code> and <code>ItemRAndomizer&lt;Book&gt;</code>, respectively.</p>
<p>EDIT:
since you posted your code in the reply, you should be easily able to wrap <code>generate(Autor.class)</code> to <code>implement ItemRandomizer&lt;Author&gt;</code>.</p>
","2024-03-12 13:36:13","2","Answer"
"78147568","78147485","","<p>Right now I'm trying to do it the long way:</p>
<pre><code>
    Author author1 = generator.nextObject(Author.class);
    Author author2 = generator.nextObject(Author.class);
    Author author3 = generator.nextObject(Author.class);
    
    List&lt; Book&gt; bookList1= generator.objects(Book.class, 3).collect(Collectors.toList());
    List&lt; Book&gt; bookList2= generator.objects(Book.class, 2).collect(Collectors.toList());
    List&lt; Book&gt; bookList3= generator.objects(Book.class, 4).collect(Collectors.toList());
    
    Map&lt; Author, List&lt; Book&gt;&gt; map= new HashMap&lt;&gt;();
    map.put(author1 , bookList1);
    map.put(author2 , bookList2);
    map.put(author3 , bookList3);

</code></pre>
","2024-03-12 13:35:34","0","Answer"
"78147485","","How to randomize an object: Map<Author, List<Book>> with EasyRandom in Java?","<p>I'm trying to randomize an object: Map&lt;Author, List&gt; with easyRandom for testing.</p>
<p>For the moment I haven't get my code to compile. So my code is something like:</p>
<pre><code>MapRandomizer&lt;Author, List&lt;Book&gt;&gt; mapRandomizer = new MapRandomizer&lt;&gt;(Author.class, ArrayList&lt;Book&gt;.class);
        Map&lt;Author, List&lt;Book&gt;&gt; map = mapRandomizer.getRandomValue(); 
</code></pre>
<p>But I don't know how to put the list (ArrayList.class???) as a parameter of the mapRandomizer.</p>
<p>Does anyone knows how to get my code to compile and create a random object of type:  Map&lt;Author, List&gt;?</p>
<p>Thank you,</p>
","2024-03-12 13:22:41","2","Question"
"78147200","","Swift / SwiftUI unique dictionary value","<p>I'm having a challenge with generating a distinct list of variables from a dictionary received from an API.</p>
<p>The data received is an array of:</p>
<pre><code>struct ContactDetails: Codable, Hashable, Identifiable {
    var id = UUID()
    var company, name, email, phone, mobile, city, region: String
}
</code></pre>
<p>I am displaying the data in a view as follows:</p>
<pre><code>let results = ...array of the ContactDetails received
        if results != nil {
            List {
                ForEach(results ?? [], id: \.self) { result in
                    NavigationLink(destination: ProjectContactDetailsView(company: result.company, results: results ?? [])) {
                        Text(result.company)
                            .tag(result.id)
                    }
                }
            }
        }
</code></pre>
<p>In many instances I am receiving 30 to 40 of these results, and some are contacts from the same company. As you can see I am linking to a new view with more details based on the company name where I will list the individuals. How do I reduce or get a distinct list of the company names?</p>
<p>I have tried:</p>
<p>using an extension:</p>
<pre><code>extension Sequence where Iterator.Element: Hashable {
    func unique() -&gt; [Iterator.Element] {
        var seen: Set&lt;Iterator.Element&gt; = []
        return filter { seen.insert($0).inserted }
    }
}
</code></pre>
<p>But I can't get this sequencing correct:</p>
<pre><code>ForEach(results ?? [], id: \.self) { result in
                   ForEach(result.company.unique()) { company in
                       NavigationLink(destination: ProjectContactDetailsView(company: result.company, results: results ?? [])) {
                           Text(result.company)
                               .tag(result.id)
                       }
                   }
               }
</code></pre>
<p>Any ideas?</p>
","2024-03-12 12:39:45","-1","Question"
"78146305","78146217","","<p>The <code>re</code> module in Python provides support for regular expressions, allowing you to search, match, or split strings based on specified patterns.  <a href=""https://docs.python.org/3/library/re.html"" rel=""nofollow noreferrer"">Python re module</a></p>
<pre class=""lang-py prettyprint-override""><code>import re

# Your dictionary of keys with their possible variations
values_dict = {
    'Customer Number': ['Customer Nr.', 'customer number', 'cus. nr.', 'Customer Number'],
    'Order Number': ['Order number.', 'Order nr', 'order number', 'Order Number'],
    'Invoice Number': ['Invoice Nr.', 'Inv. Number:', 'invoice number', 'Invoice Number'],
    'Order Date': ['Order Date'],
    'Company Information': ['Company Name'],
    'Invoice Company Information': ['Invoice Adress Company Name'] # Add more variations as needed
}

# Function to extract information based on the dictionary
def extract_information(text, values_dict):
    results = {}

    for key, variations in values_dict.items():
        for variation in variations:
            pattern = rf&quot;{variation}[:]?[\s]*(.*)&quot;
            match = re.search(pattern, text, re.IGNORECASE)
            if match:
                results[key] = match.group(1).strip()
                break 

    return results

text = &quot;&quot;&quot;Company Name GmbH, Teststraße 24 , 01000 Sampleort 
Customer Nr. 11111111 
Invoice Nr. 22222

Invoice Adress Company Name 2 mbH, Test2straße 11, 01001 Sample2ort
Order number. 555555 
Order Date 01.01.1999&quot;&quot;&quot;

info = extract_information(text, values_dict)

for key, value in info.items():
    print(f&quot;{key}: {value}&quot;)

</code></pre>
","2024-03-12 10:25:18","0","Answer"
"78146217","","Searching and catching dictionary values at the txt files","<p>I am stuck with extracting spesific data from txt file.</p>
<p>I have a txt file which includes some infomation.</p>
<p>E.g.</p>
<blockquote>
<p>Company Name GmbH, Teststraße 24 , 01000 Sampleort
Customer Nr. 11111111
Invoice Nr. 22222</p>
<p>Invoice Adress
Company Name 2 mbH, Test2straße 11, 01001 Sample2ort
Order number. 555555
Order Date 01.01.1999</p>
</blockquote>
<p>So, I have different structures of like above information. Some files include with Invoice Nr., some files include Inv. Number: 44444. I want to catch all of them. I think, I can catch all of these informations with creating dictionary like:</p>
<pre><code>`values_dict= {'Customer Number':'customer nr.', 'customer number', 
'cus. nr.', ... , 'Order Number':'order number', 'Order nr' ,....}`
</code></pre>
<p>And, how can I catch spesific values from txt files with using that dict?</p>
<p>I am expecting output like:</p>
<blockquote>
<p>Order Number : 555555
Customer Number: 11111111
Invoice Number: 22222
Order Date: 01.01.1999</p>
<p>Company Information: Company Name GmbH, Teststraße 24 , 01000 Sampleort
Invoice Company Information: Company Name 2 mbH, Test2straße 11, 01001 Sample2ort</p>
</blockquote>
","2024-03-12 10:08:48","-1","Question"
"78144867","78144168","","<p>If you are in search for thread safe dictionary implementation.
You have an built-in solution: ConcurrentDictionary.</p>
<p>Read more: <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.concurrent.concurrentdictionary-2?view=net-8.0"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/dotnet/api/system.collections.concurrent.concurrentdictionary-2?view=net-8.0</a></p>
","2024-03-12 05:45:21","0","Answer"
"78144168","","Dictionary Thread Safety when updating keys in different threads","<p>I have a very specific use case where I need to update each key of a dictionary with a value I will have available from another dictionary in the same method context.</p>
<p>While I know that dictionaries are in general not considered thread safe, I was wondering if they can be considered thread safe if you are certain no two keys can be updated at the same time.</p>
<p>The scenario will boil down to something similar to the xunit test below, which I churned for a good hour without failures.</p>
<pre><code>[Theory]
[InlineData(10000)]
[InlineData(100000)]
[InlineData(1000000)]
[InlineData(10000000)]
public void Transform(int a)
{
    var nums = Enumerable.Range(1, a).ToDictionary(i =&gt; i);
    foreach (var num in nums.Keys.AsParallel())
    {
        nums[num] = num * num;
        Assert.True(num &gt; 0);
    }
}
</code></pre>
","2024-03-12 01:06:17","0","Question"
"78143934","78142419","","<p>If all the keys across all the maps are unique you can use the solution in <code>secret_list2</code>. However if you have duplicate keys between maps then use the solution in <code>secret_list3</code></p>
<pre><code>locals {
  secret_list = [
    {
      secret1 = {}
      secret2 = {}
    },
    {
      secret3 = {}
    }
  ]
  secret_list2 = [for k, v in merge(local.secret_list...): {(k): v}]
  secret_list3 = flatten([for secret in local.secret_list: [for k, v in secret: {(k): v}]])
}

output &quot;foo&quot; {
  value = local.secret_list2
}
</code></pre>
<p><strong>OUTPUT</strong></p>
<pre class=""lang-none prettyprint-override""><code>
Outputs:

foo = [
  {
    &quot;secret1&quot; = {}
  },
  {
    &quot;secret2&quot; = {}
  },
  {
    &quot;secret3&quot; = {}
  },
]
</code></pre>
","2024-03-11 23:40:01","0","Answer"
"78142845","78142697","","<p>First get a very specific regex that describes those data blocks. <a href=""https://regex101.com/r/JQOT7A/1"" rel=""nofollow noreferrer"">HERE</a> is an example.</p>
<p>Then once you have those specific blocks, you can use a very simple regex to get the data items of interest.</p>
<p>Working model:</p>
<pre><code>import re 

inp='''\
some
other
text

address-object object1
    name &quot;name1&quot;
    uuid 4ac9cf52-02b5-eecf-0100-18c24100da5e
    zone zone1
    host ip1
    exit

address-object object2
    name &quot;name2&quot;
    uuid a5c02150-a47e-748d-0100-18c24100da5e
    zone zone2
    host ip2
    exit

some
more text'''
print (
    [dict(re.findall(r'(?m)^\s+(host|zone)\s+(\S+)', block.group(1))) 
        for block in re.finditer(r'(?m)^\s*$\n^(address-object\b[\s\S]+?^\s+exit\b)', inp) ]
)
</code></pre>
<p>Prints:</p>
<pre><code>[{'zone': 'zone1', 'host': 'ip1'}, {'zone': 'zone2', 'host': 'ip2'}]
</code></pre>
<p>Or, with a little tweak, you can get all the data in one go:</p>
<pre><code>pat=r'(?m)^\s*$\n^address-object\b.*\r?\n([\s\S]+?)\s+^\s+exit\b'
for b in re.finditer(pat, inp):
    print( 
        {k:v for k,_,v in 
            (e.strip().partition(' ') 
                for e in  b.group(1).splitlines())} )
</code></pre>
<p>Prints:</p>
<pre><code>{'name': '&quot;name1&quot;', 'uuid': '4ac9cf52-02b5-eecf-0100-18c24100da5e', 'zone': 'zone1', 'host': 'ip1'}
{'name': '&quot;name2&quot;', 'uuid': 'a5c02150-a47e-748d-0100-18c24100da5e', 'zone': 'zone2', 'host': 'ip2'}
</code></pre>
","2024-03-11 18:51:00","0","Answer"
"78142770","78142697","","<p>One possible solution is to use <code>re</code> module:</p>
<pre class=""lang-py prettyprint-override""><code>import re

text = &quot;&quot;&quot;\
some
other
text

address-object object1
    name &quot;name1&quot;
    uuid 4ac9cf52-02b5-eecf-0100-18c24100da5e
    zone zone1
    host ip1
    exit

address-object object2
    name &quot;name2&quot;
    uuid a5c02150-a47e-748d-0100-18c24100da5e
    zone zone2
    host ip2
    exit

some
more text
&quot;&quot;&quot;


pat = r&quot;\s+(zone|host)\s+(.+)&quot;

out = re.findall(pat, text)
out = [dict(t) for t in zip(out[::2], out[1::2])]
print(out)
</code></pre>
<p>Prints:</p>
<pre><code>[{&quot;zone&quot;: &quot;zone1&quot;, &quot;host&quot;: &quot;ip1&quot;}, {&quot;zone&quot;: &quot;zone2&quot;, &quot;host&quot;: &quot;ip2&quot;}]
</code></pre>
","2024-03-11 18:34:38","0","Answer"
"78142761","78142697","","<pre><code>importantKeys = {'host', 'zone'}

with open('path/to/file') as infile:
    answer = [{}]
    for line in infile:
        k,_,v = line.strip().partition(' ')
        if k in importantKeys:
            answer[-1][k] = v
        if len(answer[-1]) == len(importantKeys):
            answer.append({})
</code></pre>
<p>And the result:</p>
<pre><code>In [28]: answer
Out[28]: [{'zone': 'zone1', 'host': 'ip1'}, {'zone': 'zone2', 'host': 'ip2'}, {}]

In [29]: answer = [d for d in answer if d]

In [30]: answer
Out[30]: [{'zone': 'zone1', 'host': 'ip1'}, {'zone': 'zone2', 'host': 'ip2'}]
</code></pre>
","2024-03-11 18:33:20","0","Answer"
"78142697","","Python look for text block, put in dictonary array","<p>I am trying to look for a text block, and put some of the lines in a dictionary array. So a dictionary for every text block I find. for example the following text:</p>
<pre class=""lang-none prettyprint-override""><code>some
other
text

address-object object1
    name &quot;name1&quot;
    uuid 4ac9cf52-02b5-eecf-0100-18c24100da5e
    zone zone1
    host ip1
    exit

address-object object2
    name &quot;name2&quot;
    uuid a5c02150-a47e-748d-0100-18c24100da5e
    zone zone2
    host ip2
    exit

some
more text
</code></pre>
<p>I would for example would like to store ip, and zone in the array for each block so I would end up with <code>[[host:ip1,zone:zone1],[host:ip2,zone:zone2]]</code>.</p>
<p>I have tried to loop through the text file but cannot get the looping through the block correct. I think I have to use some form of iteration but I am not sure. I end up with a single array with all the items from the first address-object line until the some keyword. I need a loop for each address-object and got the next when I encounter an empty line.</p>
","2024-03-11 18:18:58","1","Question"
"78142419","","Flatten terraform (HCL) object into a list","<p>I have a list of object as such</p>
<pre><code>secret_list = [
 { 
   secret1 = {}
   secret2 = {}
 },
 {
   secret3 = {}
 }
]
</code></pre>
<p>and i want to flatten this out so they become a list or map of 3 objects like:</p>
<pre><code>secret_list = [
 { 
   secret1 = {}
 },
 {
   secret2 = {}
 },
 {
   secret3 = {}
 }
]
</code></pre>
","2024-03-11 17:22:27","-1","Question"
"78142007","78141856","","<p>Generally, you need to do nothing:</p>
<pre class=""lang-cs prettyprint-override""><code>public class Person {
    public string Name { get; set; }
    public int Age { get; set; }
    public override string ToString() =&gt; $&quot;{Name} {Age}&quot;;
}

Console.WriteLine(JsonSerializer.Deserialize&lt;Person&gt;(&quot;&quot;&quot;{&quot;Age&quot;: 42}&quot;&quot;&quot;)); // --&gt; 42
</code></pre>
<p>So, properties can be omitted in JSON. The absent fields will be initialized by default values of their types.</p>
<p><a href=""https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/required-properties"" rel=""nofollow noreferrer"">In vice versa, you can mark properties to be required</a>.</p>
","2024-03-11 16:04:15","0","Answer"
"78141856","","Dictionaries entries with different structures","<p>I have dictionaries in my Pokédex project that I fill with data imported from files, similar to APIs (or rather, I presume they actually are APIs? anyway, the files contain data with object structure).</p>
<p>What I always assumed, based on errors I got from VS, is that any element of the data must have the same structure. For example, the main dex list is structured like this for every pokémon:</p>
<pre><code>{
    &quot;name&quot;: &quot;nameOfMon&quot;
    &quot;variants&quot;: {
        &quot;standard&quot;: {data}
        &quot;alt_1&quot;: {otherData}
    }
}
</code></pre>
<p>So every pokémon has the same type of properties in this structure, even though some are just empty (for example, not all have variants other than the standard one).</p>
<p>When using the data in the code, I cast a class on every pokémon, so when I will call its data will be like &quot;<code>pokemon.name</code>&quot;.</p>
<p>While I understand that in the class constructor I need to define how the properties are defined (like for example name, being a set of <code>string, string</code>, what I actually wonder and would come in handy is: can I instead somehow structure the data of some pokémon omitting data that pokémon does not use?</p>
<p>Like for example, if a pokémon does not need the &quot;variants&quot; data, since it has just the standard one, is there a way to omit the &quot;variants&quot; data in the file and to make the dictionary just take the data from that pokémon skipping the data the pokémon does not contain? Like it's optional.</p>
","2024-03-11 15:39:14","0","Question"
"78140568","78140025","","<p>I think your code has several problems.</p>
<p>First of all, the syntax <code>if [5] == 'Yes':</code> will be always <code>False</code> because you are comparing a string (<code>'Yes'</code>) with a list (<code>[5]</code>).</p>
<p>Second, if you use the variables you defined in the loop, you are going to use only the very last line of your file.</p>
<p>Third, more tricky, the line you are going to use will probably need to be stripped, to remove the trailing newline.</p>
<p>Fourth, the logic of your code is not very clear: if you want to count stuff using the dict, the increment should be <code>+= 1</code> and not <code>+= count + 1</code>.</p>
<p>Finally, for the problem with the date comparison, you should use this code:</p>
<pre class=""lang-py prettyprint-override""><code>due_date_datetime = datetime.datetime.strptime(due_date, &quot;%Y-%m-%d&quot;)
if due_date_datetime &lt; datetime.datetime.today():
    stat_dict_task_overview[&quot;Overdue&quot;] += count + 1
</code></pre>
<p>But probably, your entire code should be:</p>
<pre class=""lang-py prettyprint-override""><code>import datetime

# creating dictionary with values for task_overview file
stat_dict_task_overview = {
    &quot;Tasks&quot;: 0,
    &quot;Completed&quot;: 0,
    &quot;Uncompleted&quot;: 0,
    &quot;Overdue&quot;: 0,
    &quot;Percentage Incomplete&quot;: 0,
    &quot;Percentage Overdue&quot;: 0,
}

# creating dictionary with values for user_overview file
stat_dict_user_overview = {
    &quot;Users&quot;: 0,
    &quot;Tasks&quot;: 0,
    &quot;Name&quot;: 0,
}


# open tasks.txt as read
tasks = open(&quot;tasks.txt&quot;, &quot;r&quot;)

# Split contents task.txt by ';'
for count, line in enumerate(tasks):
    # first strip the line to remove trailing `\n`, then split:
    split_by_semi = line.strip().split(&quot;;&quot;)

    # unpack elements in task.txt into corresponding variables
    user = split_by_semi[0]
    how_many_tasks = split_by_semi[1]
    description_task = split_by_semi[2]
    due_date = split_by_semi[3]
    date_added = split_by_semi[4]
    completed = split_by_semi[5]

    # following lines should be inside the loop, so that you can update
    # the dict line by line
    # Add 1 to &quot;Tasks&quot; for each line
    stat_dict_task_overview[&quot;Tasks&quot;] += 1

    # Add 1 to &quot;Completed if &quot;Yes&quot;
    if completed == &quot;Yes&quot;:
        stat_dict_task_overview[&quot;Completed&quot;] += 1
    # Else add 1 to &quot;Uncompleted&quot;
    else:
        stat_dict_task_overview[&quot;Uncompleted&quot;] += 1

    # Code stuck on needs to check todays date against due date and add 1 if overdue
    # converting to datetime object
    due_date_datetime = datetime.datetime.strptime(due_date, &quot;%Y-%m-%d&quot;)
    # comparing between datetime objects
    if due_date_datetime &lt; datetime.datetime.today():
        stat_dict_task_overview[&quot;Overdue&quot;] += 1

# Print results for my ongoing review
print(stat_dict_task_overview)
</code></pre>
","2024-03-11 12:18:48","1","Answer"
"78140025","","Access date in .txt and cross check with todays date","<p>Please forgive me if this seems an easy fix I am early on in my coding path, and thank you in advance for any help.</p>
<p>I am trying to access the due date (element 3 in the list below) and cross check it with todays date to see if the task is overdue.</p>
<p>This is the file that the list is in (tasks.txt):
This is read as - user task assigned to; What needs doing; description of task; Due date; When task was added; is task complete.</p>
<pre class=""lang-none prettyprint-override""><code>sam;needs doing;now;2004-04-12;2024-03-05;No
sam;please do;gym;2024-05-20;2024-03-05;No
admin;do;sd;2004-12-12;2024-03-05;No
dam;dam;dam;2024-12-12;2024-03-05;No
</code></pre>
<p>The code I have put together so far is:</p>
<pre><code>elif menu == 'gr':
            
    # creating dictionary with values for task_overview file
    stat_dict_task_overview = {
        &quot;Tasks&quot;: 0,
        &quot;Completed&quot;: 0,
        &quot;Uncompleted&quot;: 0,
        &quot;Overdue&quot;: 0,
        &quot;Percentage Incomplete&quot;: 0,
        &quot;Percentage Overdue&quot;: 0
    }
    
    # creating dictionary with values for user_overview file
    stat_dict_user_overview = {
        &quot;Users&quot;: 0,
        &quot;Tasks&quot;: 0,
        &quot;Name&quot;: 0,
    }
    
     # open tasks.txt as read
    tasks = open(&quot;tasks.txt&quot;, &quot;r&quot;)
    
    # Split contents task.txt by ';'
    for count, line in enumerate(tasks):
        split_by_semi = line.split(';')           
        
        # unpack elements in task.txt into corresponding variables
        user = split_by_semi[0]
        how_many_tasks = split_by_semi[1]
        description_task = split_by_semi[2]
        due_date = split_by_semi[3]
        date_added = split_by_semi[4] 
        completed = split_by_semi[5]
        
    # Add 1 to &quot;Tasks&quot; for each line   
    stat_dict_task_overview[&quot;Tasks&quot;] += count + 1
    
    # Add 1 to &quot;Completed if &quot;Yes&quot; 
    if[5] == &quot;Yes&quot;: 
        stat_dict_task_overview[&quot;Completed&quot;] += count + 1
    # Else add 1 to &quot;Uncompleted&quot;
    else: 
        stat_dict_task_overview[&quot;Uncompleted&quot;] += count + 1

    # Code stuck on needs to check todays date against due date and add 1 if overdue      
    if[3] &lt; datetime.today().date():
        stat_dict_task_overview[&quot;Overdue&quot;] += count + 1
    
    # Print results for my ongoing review
    print(stat_dict_task_overview)
</code></pre>
","2024-03-11 10:44:14","0","Question"
"78138993","78138934","","<p>As specified in the documentation, <a href=""https://docs.python.org/3/library/csv.html#csv.reader"" rel=""nofollow noreferrer"">csv.reader</a> returns a 'reader object' which is not exactly a dictionary map. Instead, you can use <a href=""https://docs.python.org/3/library/csv.html#csv.DictReader"" rel=""nofollow noreferrer"">csv.DictReader</a> which returns a dict map.</p>
<p>following snippet is adapted from the official <a href=""https://docs.python.org/3/library/csv.html#csv.DictReader"" rel=""nofollow noreferrer"">documentation page</a></p>
<pre><code>import csv
with open('your_file.csv', newline='') as csvfile:
    reader = csv.DictReader(csvfile, delimiter=',') # DictReader object
    for row in reader: # each row is a dict object
        print(row)
</code></pre>
","2024-03-11 07:30:04","0","Answer"
"78138963","78138934","","<pre><code>import csv
with open('C:\data\LEARNING\PHYTON\excel\MySQL\texperts\supplier.csv', 'r') as csv_data:
     csv_reader = csv.reader(csv_data, delimiter=',')
     csv_data_list = list(csv_reader) 
     csv_data_list_copy = csv_data_list.copy() 
</code></pre>
","2024-03-11 07:21:57","0","Answer"
"78138934","","Python Copy dictionary","<p>I am trying to copy the dictionary structure so I can create multple list.
error</p>
<pre><code>Traceback (most recent call last):
File &quot;C:/data/LEARNING/PHYTON/excel/Exercise/pywrite2&quot;, line 22, in \&lt;module\&gt;
csv_reader1 = dict.copy(csv_reader)
TypeError: descriptor 'copy' for 'dict' objects doesn't apply to a '\_csv.reader' object
</code></pre>
<p>Code</p>
<pre><code>import csv
import copy
count1=0

with open('C:\\data\\LEARNING\\PHYTON\\excel\\MySQL\\texperts\\supplier.csv','r') as csv_data:
     csv_reader =csv.reader(csv_data, delimiter=',')
     csv_reader1 = dict.copy(csv_reader)
        csv_reader1.append(row1)

print(category)
print(countlist)
csv_data.close()
</code></pre>
<p>I have read and tried different variation of the copy.copy, dict.copy.  It seem the &quot;import copy&quot; is greyed out at the top.  I read that the copy is already installed, but when i review my pycharm setting, I don't see the copy package.</p>
","2024-03-11 07:15:52","0","Question"
"78132153","78132063","","<p>Donald Knuth said that premature optimization is the root of all evil. So, first developers' goal is create a code that is easy to read and change.</p>
<p><code>map</code> avoids duplication, and easier to read than <code>for</code> cycle. So, it is a good option.</p>
","2024-03-09 11:28:52","1","Answer"
"78132063","","Is it overkill this use of map function to reduce code?","<p>Is that the best way to reduce code duplication? Or is it overkill? How can I optimize it? Maybe I'm doing good :)</p>
<pre><code>const Programs = () =&gt; {

    const programs = [{program: program_1, icon: program_icon_1, caption: &quot;Graduation Degree&quot;},
         {program: program_2, icon: program_icon_2, caption: &quot;Masters Degree&quot;},
         {program: program_3, icon: program_icon_3, caption: &quot;Post Graduation&quot;}];

  return (
    &lt;div className=&quot;programs container&quot;&gt;
        {
            programs.map(program =&gt; {
                return (
                    &lt;div className=&quot;program&quot;&gt;
                        &lt;img src={program.program} alt=&quot;Program&quot;/&gt;
                        &lt;div className=&quot;caption&quot;&gt;
                            &lt;img src={program.icon} alt=&quot;Program icon&quot;/&gt;
                            &lt;p&gt;{program.caption}&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                );
            })
        }
    &lt;/div&gt;
  )
}
</code></pre>
","2024-03-09 10:52:55","0","Question"
"78129865","77975641","","<p>It looks like it might be solved if you declare the map variable outside the component function.</p>
","2024-03-08 19:25:51","0","Answer"
"78122295","78122212","","<p>It's not clear from your question how you want to deal with duplicates, but your code just overwrites them. If so, this is a bit more compact way to do this that is similar to yours:</p>
<pre><code>let keyValues = string.components(separatedBy: CharacterSet.newlines)
    .map { $0.split(separator: &quot;:&quot;) } // Split each element on :
    .compactMap { // return (key, value) pairs, throwing away any malformed rows
        if $0.count &gt; 1 { ($0[0], $0[1]) } else { nil }
    }

// combine pairs into a dictionary, keeping the new value if duplicates are found
let dict = Dictionary(keyValues, uniquingKeysWith: { _, new in new } )
</code></pre>
<p>I only recommend code like this if your code is very simple and doesn't need to be very robust. In robust code, you'd want to check for errors and deal with them rather than ignoring them this way. Though I suspect that the duplicate keys are going to make you have to change this approach anyway.</p>
<p>If this is actually vCard data, consider <a href=""https://developer.apple.com/documentation/contacts/cncontactvcardserialization/contacts(with:)"" rel=""nofollow noreferrer"">Apple's built-in parser</a>.</p>
","2024-03-07 14:54:32","1","Answer"
"78122212","","Is there a cleaner way to convert this string to a dictionary?","<p>I get this string from a URL:</p>
<pre class=""lang-none prettyprint-override""><code>BEGIN:VCAMERA\r\nMETHOD:PUBLISH\r\nBEGIN:VEVENT\r\n
</code></pre>
<p>In the end I want to have a dictionary such as <code>[&quot;BEGIN&quot;: &quot;VCAMERA&quot;]</code>.</p>
<p>This is my current implementation:</p>
<pre class=""lang-swift prettyprint-override""><code>let string = try String(contentsOf: url, encoding: .utf8)
let wordArray = string.components(separatedBy: CharacterSet.newlines)
var dict = [String: String]()
for keyValue in wordArray {
    let components = keyValue.components(separatedBy: &quot;:&quot;)
    if components.count &gt; 1 {
        dict[components[0]] = components.last?.trimmingCharacters(in: .whitespacesAndNewlines)
    }
}
</code></pre>
<p>This code gives the desired output but I wanted to know if there is a cleaner and better way for this.</p>
","2024-03-07 14:41:20","-1","Question"
"78120572","78120273","","<p>You should not try to add or delete entries from Python list types while iterating their conent as it can confuse the iterator. You should iterate a shallow copy instead, so the original list can be modified. Although you may still have a problem if you add or remove items. In the case above you can do it by getting a <code>list</code> of the keys thus:</p>
<pre><code>for elem in list(d):
</code></pre>
<p>See <a href=""https://docs.python.org/3.11/library/stdtypes.html#dict"" rel=""nofollow noreferrer"">Mapping types - dict</a> for further details.
You may also find that the Python documentation does a very good job itself of explaining how iterators work.</p>
","2024-03-07 10:30:28","-1","Answer"
"78120490","78120273","","<p>Yeah that's quite a &quot;pythonic&quot; thing: Python's dictionaries and iterators are not designed to handle changes dynamically, hence the exceptions you observed.</p>
<p>The reason is because when you iterate over a dictionary, it creates an iterator object that keeps track of the state of the iteration by traversing the dictionary's keys one by one. However, if you modify the dictionary while iterating over it, Python can't guarantee the integrity of the iteration state. This is because modifying the dictionary can change its internal structure, potentially invalidating the current iteration state.</p>
<p>In your second code, you are deleting the current key elem from the dictionary and adding a new key elem+1 in each iteration, but when you delete a key, it alters the internal structure of the dictionary. Even though you are adding a new key immediately after, Python's iterator doesn't handle this scenario well because it's not designed to track dynamic changes like these.</p>
<p>When Python tries to fetch the next key during iteration, it discovers that the dictionary's internal structure has changed, leading to the &quot;dictionary keys changed during iteration&quot; exception.</p>
<h1>Why the first code immediately raises the RunTimeError:</h1>
<p>In the first code,dictionary changed size during iteration. Python cannot dynamically handle changes to the size of the dictionary while iterating over it. When you add a new element during the iteration, Python detects that the size of the dictionary has changed from its initial state, violating the assumption made by the iterator about the total number of elements in the dictionary.</p>
<h1>Why it does not happen in the second:</h1>
<p>In the second code, you are deleting and adding elements to the dictionary while iterating over it. Python doesn't immediately detect changes to the size of the dictionary. It continues iterating through the dictionary and making changes until it reaches the end of the iteration. Only at the end of the for loop does Python check if the size of the dictionary has been modified during the iteration.</p>
<p>So, in the second code, the exception is raised after a complete iteration of the dictionary because Python performs the check on the dictionary size only at the end of the iteration.</p>
","2024-03-07 10:19:21","-1","Answer"
"78120273","","What is the difference in Python between ""dictionary changed size during iteration"" and ""dictionary keys changed during iteration"" exception","<p>I am preparing material about how iterators work in Python and I am currently working on a part about what happens if you change the dictionary you are iterating over. I know and added to my material that it is bad practice, but I still wanted to try to see what happens.</p>
<p>The code below printed the key 5 and gave me a &quot;dictionary changed size during iteration&quot; exception. So I got the exception the moment I had a change and wanted to go to the next one.</p>
<pre><code>d = {5:5, 10:10, 15:15, 20:20}
for elem in d:
    print(elem)
    d[elem+1] = elem+1
</code></pre>
<p>This is OK. But then it occurred to me, what if I do both an add and a remove, so that the size technically, does not change? So I wrote this:</p>
<pre><code>d = {5:5, 10:10, 15:15, 20:20, 25:25, 30:30, 35:35}
for elem in d:
    print(elem)
    del d[elem]
    d[elem+1] = elem+1  
</code></pre>
<p>It prints as many keys as elements in the dictionary (7), some of them being already newly added values, but after printing 7 values it throws a &quot;dictionary keys changed during iteration&quot; exception.
And now I am really curious what happens internally, that leads to this. I still know it is bad practice, I just want to understand it.
Thanks!</p>
","2024-03-07 09:45:15","-1","Question"
"78118704","78118524","","<p>Pseudo code(if you just want to check if value is present):</p>
<ol>
<li>get the values with values = myDict.values()</li>
<li>check if value is in values</li>
<li>now implement your logic</li>
</ol>
<p>Python Code:</p>
<pre><code>values = myDict.values()
if value in values:
   #your logic
</code></pre>
<p>Pseudo code(if you just want to get key if value is present):</p>
<ol>
<li>get keys and values using keys= myDict.keys() and values</li>
<li>get index of value</li>
<li>key = myDict['index_of_value']</li>
</ol>
<p>Python code:</p>
<pre><code>keys = myDict.keys()
values = myDict.values()
if value in values:
   index_of_value = values.index(value)
   key = keys[index_of_value] 
</code></pre>
","2024-03-07 04:02:09","-1","Answer"
"78118634","78118524","","<pre><code>   def tryMultipleKeys(myDict, keysToCheck):
     for key in keysToCheck : 
        if key in myDict :
           return myDict[key]
     return None
</code></pre>
","2024-03-07 03:35:21","1","Answer"
"78118581","78118524","","<p>Answering my own question with what I ended up going with.</p>
<p>I decided to just write a function to try multiple keys as is it more readable than the nested <code>.get()</code> calls.</p>
<pre><code>def tryMultipleKeys(myDict, keysToCheck):
    val = None
    for k in keysToCheck:
        val = myDict.get(k)
        if val is not None:
            break
    else:
        raise KeyError(f&quot;None of the keys ({keysToCheck}) were found in {myDict}&quot;)
    return val
</code></pre>
","2024-03-07 03:20:34","1","Answer"
"78118524","","Better way to check dictionary for alternative keys","<p>I'm parsing a dictionary which may have the value I want under 4 possible keys (I have no control over the dictionary).</p>
<p>The key could be <code>&quot;value&quot;</code> <code>&quot;_value&quot;</code> <code>&quot;amount&quot;</code> or <code>&quot;_amount&quot;</code></p>
<p>Currently my only idea is</p>
<pre><code>try:
    val = myDict[&quot;value&quot;]
except KeyError:
    try:
        val = myDict[&quot;_value&quot;]
    except KeyError:
        try:
            val = myDict[&quot;amount&quot;]
        except KeyError:
            val = myDict[&quot;_amount&quot;]
</code></pre>
<p>But this is making me feel sick just looking at it. Any better ideas?</p>
","2024-03-07 02:57:12","-2","Question"
"78117771","78092433","","<p>I didn't realize it when I asked the question, but there's a trivial (if horrible) way to store a bidirectional map without duplicating keys or values at all.</p>
<p>Consider a map implemented arbitrarily; let's use a hash table as an example. As retrievals are ~O(1) we can make a pretty horrible tradeoff and instead of storing two hash tables, we can iterate through one hash table and invert it, which should take ~O(N) time. That inversion should be doable with only a constant memory overhead, and that memory can be discarded after completing the inversion. Of course with different map implementations the complexities will be very different.</p>
<p>The only situations in which this is even potentially useful is in cases where you can accept batching up get()'s. You would spend some time resolving get(key) queries immediately and queueing up a bunch of get(value) calls, invert the map, resolve all the queued calls, and queue up get(key) calls until the next flip.</p>
<p>While this does answer my question of whether or not one <em>can</em> have a bidirectional map without duplicating data, it's not a very usable solution in any context, so I'll leave this question open to see what other solutions exist and what sort of tradeoffs they exhibit.</p>
<p>In summary: Using hash tables, we can achieve (amortized) O(1)-time get()'s in exchange for using O(2N) space, where N is the number of KV pairs. We can also achieve O(N) space in exchange for a time complexity that's somewhere between O(1) and O(N) depending on the query distribution.</p>
","2024-03-06 22:27:10","0","Answer"
"78116476","78116457","","<p>Easiest option: use a list comprehension with <a href=""https://docs.python.org/3/library/functions.html#zip"" rel=""nofollow noreferrer""><code>zip</code></a>:</p>
<pre><code>df['value'] = [d.get(w) for w,d in zip(df['words'], df['dict1'])]
</code></pre>
<p>Alternatively, combine <a href=""https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html"" rel=""nofollow noreferrer""><code>json_normalize</code></a> and <a href=""https://pandas.pydata.org/docs/user_guide/indexing.html#looking-up-values-by-index-column-labels"" rel=""nofollow noreferrer"">indexing lookup</a>:</p>
<pre><code>idx, cols = pd.factorize(df['words'])

df['value'] = (pd.json_normalize(df['dict1'])
                 .reindex(cols, axis=1).to_numpy()
               [np.arange(len(df)), idx]
              )
</code></pre>
<p>Or with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.transform.html"" rel=""nofollow noreferrer""><code>groupby.transform</code></a>:</p>
<pre><code>df['value'] = (df.groupby('words', as_index=False)['dict1']
                 .apply(lambda g: g.str[g.name]).droplevel(0)
              )
</code></pre>
<p>Output:</p>
<pre><code>       ID    ID2   words                       dict1  value
0  x12_12  12984   apple    {'apple': 5, 'pear': 10}    5.0
1  x12_12  12984    pear    {'apple': 5, 'pear': 10}   10.0
2  x12_12  20934  orange  {'orange': 5, 'pear': nan}    5.0
3  x12_12  20934    pear  {'orange': 5, 'pear': nan}    NaN
</code></pre>
<h5>Timings</h5>
<p>On 400k rows. In the end the list comprehension is the fastest, which makes sense since the limiting steps are based on loops anyway. <code>apply</code> is a loop but has a large overhead due to creating a Series for each row. Always replace <code>apply</code> on <code>axis=1</code> by a list comprehension when you can.</p>
<pre><code># apply
2.58 s ± 33.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)

# list comprehension
127 ms ± 7.65 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)

# json_normalize + indexing lookup
811 ms ± 46 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)

# groupby.transform
237 ms ± 3.22 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
</code></pre>
","2024-03-06 17:55:46","0","Answer"
"78116457","","Pandas, extract information from dictionary column into a new column quickly","<p>I have a large df that has four columns. One of these columns has words, and another column has those words as keys of a dictionary. I need to add another column extracting the values for the word of interest. Example:</p>
<pre><code>ID        ID2     words      dict1
x12_12    12984   apple      {'apple': 5, 'pear': 10}
x12_12    12984   pear       {'apple': 5, 'pear': 10}
x12_12    20934   orange     {'orange': 5, 'pear': NaN}
x12_12    20934   pear       {'orange': 5, 'pear': NaN}
</code></pre>
<p>I need to create a new column called value to extract the information from dict1</p>
<pre><code>ID        ID2     words      dict1                         value
x12_12    12984   apple      {'apple': 5, 'pear': 10}      5
x12_12    12984   pear       {'apple': 5, 'pear': 10}      10
x12_12    20934   orange     {'orange': 20, 'pear': NaN}   20
x12_12    20934   pear       {'orange': 20, 'pear': NaN}   NaN
</code></pre>
<p>I have this code which gives me the desired result, but it takes a long time to run and I have a very large dataset. I know 'apply' is not the most efficient for large data.</p>
<pre><code>df['value'] = df.apply(lambda row: row['dict1'][row['words']], axis=1)
</code></pre>
<p>Any suggestions for faster methods? I tried using np.vectorize but it has an issue with the nan values and I keep getting errors.</p>
","2024-03-06 17:51:03","1","Question"
"78107199","78107055","","<p>I can give a simple list analogy:</p>
<pre><code>lst = ['a','b','c']
for value in lst:
    value ='new'
</code></pre>
<p>Now, if you <code>print(lst)</code> what will you get ?</p>
<pre><code>print(lst)
#['a','b','c']
</code></pre>
<p>Similarly dictionary does not change,</p>
<pre><code>dct = {1: 'one', 2: 'two', 3: 'three'}

for value in dct.values():
     value = 'new'

print(dct)
#{1: 'one', 2: 'two', 3: 'three'}
</code></pre>
<p>as commented by @ForceBru</p>
<p>Assignment like <code>value = 'new'</code> never modifies the object that was &quot;stored&quot; in <code>value</code> before.</p>
","2024-03-05 10:59:01","1","Answer"
"78107140","78107055","","<p>That's basically due to the key / value relationship of the dictionary.</p>
<p>In Python, when you iterate over the values of a dictionary using <code>for value in dct.values():</code>, the variable <code>value</code> is just a reference to the value in the dictionary. When you assign a new value to value, you are only changing where value points to, not the actual value in the dictionary.</p>
<p>Here's a breakdown of what happens:</p>
<ul>
<li>In the loop <code>for value in dct.values():</code>, value is assigned to each value in the dictionary one by one.</li>
<li>When you do <code>value = 'new'</code>, you are simply changing the reference of value to point to the string 'new'.</li>
<li>This assignment does not modify the original values in the dictionary dct.</li>
</ul>
<p>So yeah, to change the values in the dictionary, you need to use the keys to directly access and modify the dictionary values, as you did already mentioned.</p>
","2024-03-05 10:50:19","1","Answer"
"78107055","","Python changing dictionary values in a loop","<p>Shortest spelling to change dict values is (not using one liners)</p>
<pre><code># process array with loop
dct = {1: 'one', 2: 'two', 3: 'three'}

for key, value in dct.items():
     dct[key] = 'new'

print(dct)

#{1: 'new', 2: 'new', 3: 'new'}
</code></pre>
<p>According to python manual <code>.values()</code> '<em>Return a new view of the dictionary’s values</em>' and <a href=""https://docs.python.org/3/library/stdtypes.html#dict-views"" rel=""nofollow noreferrer"">view</a> is '<em>provide a dynamic view on the dictionary’s entries, which means that <strong>when the dictionary changes, the view reflects these changes</strong>.</em>'</p>
<p>Why not other way around, changing view does <strong>not</strong> dynamically changes the dictionary?</p>
<pre><code>dct = {1: 'one', 2: 'two', 3: 'three'}

for value in dct.values():
     value = 'new'

print(dct)

#{1: 'one', 2: 'two', 3: 'three'}
</code></pre>
","2024-03-05 10:40:09","0","Question"
"78104309","78104219","","<p>Try:</p>
<pre class=""lang-py prettyprint-override""><code>lst = [
    {&quot;fruit&quot;: &quot;Apple&quot;, &quot;Color&quot;: &quot;red&quot;, &quot;weight&quot;: &quot;10&quot;},
    {&quot;fruit&quot;: &quot;Banana&quot;, &quot;Color&quot;: &quot;yellow&quot;, &quot;weight&quot;: &quot;20&quot;},
    {&quot;fruit&quot;: &quot;Kiwi&quot;, &quot;Color&quot;: &quot;Green&quot;, &quot;weight&quot;: &quot;15&quot;},
    {&quot;Veggie&quot;: &quot;Onion&quot;, &quot;Color&quot;: &quot;white&quot;, &quot;price&quot;: &quot;10&quot;},
    {&quot;Veggie&quot;: &quot;Cabbage&quot;, &quot;Color&quot;: &quot;Light Green&quot;, &quot;price&quot;: &quot;30&quot;},
    {&quot;Leafy&quot;: &quot;Spinach&quot;, &quot;Color&quot;: &quot;Dark Green&quot;, &quot;quantity&quot;: &quot;30&quot;},
]

out = {}
for d in lst:
    out.setdefault(frozenset(d), []).append(d)

out = [{kk: [d[kk] for d in v] for kk in k} for k, v in out.items()]
print(out)
</code></pre>
<p>Prints:</p>
<pre class=""lang-py prettyprint-override""><code>[
    {
        &quot;Color&quot;: [&quot;red&quot;, &quot;yellow&quot;, &quot;Green&quot;],
        &quot;fruit&quot;: [&quot;Apple&quot;, &quot;Banana&quot;, &quot;Kiwi&quot;],
        &quot;weight&quot;: [&quot;10&quot;, &quot;20&quot;, &quot;15&quot;],
    },
    {
        &quot;Color&quot;: [&quot;white&quot;, &quot;Light Green&quot;],
        &quot;price&quot;: [&quot;10&quot;, &quot;30&quot;],
        &quot;Veggie&quot;: [&quot;Onion&quot;, &quot;Cabbage&quot;],
    },
    {&quot;Color&quot;: [&quot;Dark Green&quot;], &quot;Leafy&quot;: [&quot;Spinach&quot;], &quot;quantity&quot;: [&quot;30&quot;]},
]
</code></pre>
","2024-03-04 22:10:29","2","Answer"
"78104307","78104219","","<p>Use <code>itertools.groupby</code> with the set of dictionary keys as the grouping key.  This assumes similarly keyed dictionaries are already listed together as in the example, but you can ensure they are sorted by same sets of keys with <code>org_list.sort(key=sorted)</code>.</p>
<pre class=""lang-py prettyprint-override""><code>from pprint import pprint
from itertools import groupby

org_list = [{'fruit':'Apple', 'Color':'red', 'weight':'10'},
            {'fruit':'Banana', 'Color':'yellow', 'weight':'20'},
            {'fruit':'Kiwi', 'Color':'Green', 'weight':'15'},
            {'Veggie':'Onion', 'Color':'white', 'price':'10'},
            {'Veggie':'Cabbage', 'Color':'Light Green', 'price':'30'},
            {'Leafy':'Spinach', 'Color':'Dark Green', 'quantity':'30'}]

result_list = []
for group_key, group in groupby(org_list, key=set):
    group_dict = {}  # new dict to collect a similar key set
    for dct in group:
        for key, value in dct.items():
            if key not in group_dict:
                group_dict[key] = [value]  # start a new key list
            else:
                group_dict[key].append(value)  # append to existing key
    result_list.append(group_dict)  # finished with that key set

pprint(result_list, width=120)
</code></pre>
<p>Output:</p>
<pre><code>[{'Color': ['red', 'yellow', 'Green'], 'fruit': ['Apple', 'Banana', 'Kiwi'], 'weight': ['10', '20', '15']},
 {'Color': ['white', 'Light Green'], 'Veggie': ['Onion', 'Cabbage'], 'price': ['10', '30']},
 {'Color': ['Dark Green'], 'Leafy': ['Spinach'], 'quantity': ['30']}]
</code></pre>
","2024-03-04 22:09:59","1","Answer"
"78104219","","Combine list of dictionaries in python","<p>I have a list of 6 dictionaries:</p>
<pre><code>[{'fruit':'Apple', 'Color':'red', 'weight':'10'},
 {'fruit':'Banana', 'Color':'yellow', 'weight':'20'},
 {'fruit':'Kiwi', 'Color':'Green', 'weight':'15'},
 {'Veggie':'Onion', 'Color':'white', 'price':'10'},
 {'Veggie':'Cabbage', 'Color':'Light Green', 'price':'30'},
 {'Leafy':'Spinach', 'Color':'Dark Green', 'quantity':'30'}]
</code></pre>
<p>I need to convert it into:</p>
<pre><code>[{'Fruit':[Apple, Banana, Kiwi], 'Color':[red, yellow, green], 'weight':[10,20,15]},
 {'Veggie':[Onion, Cabbage], 'Color':[white, light green], 'price':[10,30]},
 {'Leafy':[Spinach], 'Color':[Dark Green], 'quantity':[30]}]
</code></pre>
<p>I tried multiple logics- comparing consecutive dictionaries, using map to keep a track of dictionaries with same keys but none of it is working. Can someone please advise on the code logic? Thank you</p>
","2024-03-04 21:45:56","-2","Question"
"78098867","78097044","","<p>Naive single erase and insert operations will have O(k log n) run time where n is the initial size of the tree and k is the number of elements in the range. Doing more than one of these doesn't change that cost. The values of n can certainly get smaller for each successive one (when k &gt; 1), but not an a way that admits an amortized time bound. If you start with a tree of size N and do Q operations that take the tree down to size M, then you've done N-M+Q-1 deletions and K insertions. Period.</p>
<p>Assuming, as the std:map docs say, that red-black trees are used internally, searching for the first and last elements of the range and deleting elements between will require only O(k + log n) time. BUT, it will result in a collection of disjoint trees. These must be merged and re-balanced - with red/black flags updated - to create a new, valid tree. I don't know how efficiently this can be done, but a guess is O((n-k) log (n-k)). I have no idea if any of the C++ lib implementations do it. The benefit doesn't seem worthwhile even if my guess at a time bound is high.</p>
","2024-03-04 03:44:31","0","Answer"
"78097851","78097044","","<p>Your described algorithm does not achieve the complexity that you want.</p>
<p>The problem is that when you erase a range and then insert new data, you can wind up with more or less data than you started. If this happens in the middle of a vector, up to half of your data needs to be moved.</p>
<p>Moving big blocks of data is one of the fastest things that you can do to it. But moving <code>O(n)</code> data still takes <code>O(n)</code> time - just with good constants.</p>
<p>We have many better solutions. Data structures that solve it fully include red-black trees, btrees, skiplists, and  leveldb. There are many subtle tradeoffs. But all of them will be amortized time <code>O(log(n))</code> for this operation.</p>
","2024-03-03 20:28:45","0","Answer"
"78097044","","Amortised complexity of an operation on std::map data-structure","<p>Suppose I have Q operations of following kind on a map storing key, value pairs. keys are comparable via operator '&lt;'</p>
<p>Given l, r and a value x. Erase all the keys already present in the range [l, r) and insert pair (r,x).</p>
<p>My question is, Is the naive strategy of just erasing keys in the range and then inserting has a good ammortized complexity (may be O(log n) or something). As I have an intuitive feeling that if an operation does a lot of deletion, future operations will have less time complexity because of reduced size. Any ideas are appreciated.</p>
<p>More detailed description of &quot;naive&quot; algorithm : you simply binary search to find smallest keyl &gt;= l and largest keyr &lt; r and delete all the keys in the range [keyl, keyr] (overall this is O(log n + n log n) worst case)</p>
","2024-03-03 16:11:47","2","Question"
"78094418","78094385","","<p>This is because dictionary is a mutable type in python.
In this fragment:</p>
<pre><code>for all_values in range(len(list)):
    data_dict[str(list[all_values])] = contribution_dict
</code></pre>
<p>you are assigning the same contribution_dict dictionary (the same object, the same address in memory) to all data_dict keys.</p>
<p>The fastest fix would be to make a new dictionary in each loop iteration:</p>
<pre><code>for all_values in range(len(list)):
    data_dict[str(list[all_values])] = contribution_dict.copy()
</code></pre>
","2024-03-02 21:52:11","1","Answer"
"78094385","","Trouble iterating through nested dictionary","<p>I am having trouble adding a particular value to one of the entries in my dictionary. Instead of adding a value to one particular entry in my nested dictionary, the value is added to all entries in my dictionary . For example if I write</p>
<p>data_dict['2022-03-07']['POLITICAL ACTION COMMITTEE'] += 1</p>
<p>It will add entries an entry of 1 into [every_date]['POLITICAL ACTION COMMITTEE']</p>
<p>here is my code</p>
<pre><code>import pandas
import datetime as dt
import plotly.graph_objects as go
import plotly.express as px

data_set = pandas.read_csv(r&quot;C:\Users\Miles\Downloads\schedule_a-2024-03-02T09 13 57.csv&quot;)

data_dict = {}
contribution_dict = {&quot;INDIVIDUAL&quot;:0,'ORGANIZATION':0,'POLITICAL ACTION COMMITTEE':0,'CANDIDATE':0,
                     'OTHER COMMITTEE':0, 'CAMPAIGN COMMITTEE':0  }

# a_list = ['INDIVIDUAL', 'ORGANIZATION', 'POLITICAL ACTION COMMITTEE', 'CANDIDATE', 'OTHER COMMITTEE',
#           'CAMPAIGN COMMITTEE']
list = []

for all_dates in range(len((data_set['contribution_receipt_date']))):
    contribution_date = data_set.at[all_dates, 'contribution_receipt_date'][:10]
    dummy = dt.date(int(contribution_date[:4]), int(contribution_date[5:7]), int(contribution_date[8:]))
    if dummy in list:
        pass
    else:
        list.append(dummy)

list.sort()
for all_values in range(len(list)):
    data_dict[str(list[all_values])] = contribution_dict


data_dict['2022-03-07']['POLITICAL ACTION COMMITTEE'] += 1

~~~
</code></pre>
","2024-03-02 21:38:13","0","Question"
"78092433","","Bidirectional maps","<p>What are the space overheads like for alternative implementations of bidirectional maps, ideally that do not require doubling the size of your dataset?</p>
<p>There are a number of questions on Stack Overflow asking about bidirectional map implementations, many of which ask about efficiency. However, while they have answers about how bidirectional maps can be implemented, I haven't seen a single one actually address the efficiency part of any of those questions.</p>
<p>With that in mind, I am explicitly <em>not</em> asking how to implement a naive bidirectional map (as those other answers cover, using 2 unidirectional maps suffices).</p>
<p>One thought that I haven't quite worked out yet is that one could potentially achieve the same result using a set of prefix trees and thereby extract some space savings via common prefixes in keys and values, but I'm not sure that's much better, and I'm sure someone has done some analysis of such approaches somewhere, I just haven't been able to find references. On top of that, this fits into the &quot;just mash 2 maps&quot; formalism, so I'm surprised to be unable to find fancier alternatives.</p>
","2024-03-02 11:17:53","-2","Question"
"78091559","78091372","","<p>As <a href=""https://stackoverflow.com/users/5052365/adam-er8"">Adam.Er8</a> pointed out in the comments, <code>eval</code> is an extremely quick and dirty way to do this (not exactly elegant, but it does the job). However, there are two parts to his code golf answer that don't make it work very well in practice:</p>
<ol>
<li>It obviously doesn't work, as you need it to parse the identifiers into your dictionary notation, and</li>
<li>eval is notoriously unsafe - you should never pass in any input of which you can't be sure of the origin or format, as the user could inject malicious code through the input.</li>
</ol>
<p>I'm going to solve both these problems with regex. First, we'll make the following assumptions about your problem:</p>
<ol>
<li>A valid key in your dictionary consists of some number of symbols without any whitespace, commas, or comparators. It also can't just be all digits (because then there would be nothing distinguishing it from a number, and the problem would quickly become unsolvable). Do note that you may want to ban parentheses apart from the most outer ones to prevent things like func</li>
<li>A valid comparator is &lt; or &gt;, optionally with an '=' behind it</li>
</ol>
<p>This means that an identifier has the regex <code>ident_re = r&quot;([^&gt;&lt;=,\s]*[^0-9&gt;&lt;=,\s]+[^&gt;&lt;=,\s]*)&quot;</code>, and a valid expression (between commas) has the regex <code>^(([^&gt;&lt;=,\s]+)(\s*([&gt;&lt;]=?)\s*([^&gt;&lt;=,\s]+))+)$</code> (further explanation of the regexes below).</p>
<p>Now, we can use some higher order functions to conduct your tests:</p>
<pre class=""lang-py prettyprint-override""><code>import re


d = {'a':25, 'ab':3.3, '(cd)': 4, 'ef':35, 'gh':12.2}
s = 'a &gt; 5, 0 &lt; (cd) &lt; 6, ef &lt; 35'

s = list(map(lambda p: p.strip(), s.split(&quot;,&quot;)))
safety_re = r&quot;^(([^&gt;&lt;=,\s]+)(\s*([&gt;&lt;]=?)\s*([^&gt;&lt;=,\s]+))+)$&quot;
ident_re = r&quot;([^&gt;&lt;=,\s]*[^0-9&gt;&lt;=,\s]+[^&gt;&lt;=,\s]*)&quot;
if any(map(lambda p: not re.match(safety_re, p), s)):
    # if it reaches here, the eval expression is not safe or properly formatted
    unsafe = list(filter(lambda p: not re.match(safety_re, p), s))
    print(f&quot;ERROR: unsafe input(s) - {unsafe}&quot;)
elif all(map(lambda p: eval(re.sub(ident_re, lambda m: str(d[m.group(1)]), p)), s)):
    # checks that all the conditions are met by evaluating each and making sure all are True
    print(&quot;DO SOMETHING&quot;)
else:
    # expression is fine but not all the conditions are met
    print(&quot;DO SOMETHING ELSE&quot;)
</code></pre>
<h3>Regular Expression Explanation</h3>
<p>As above, we've crafted the regexes <code>r&quot;([^&gt;&lt;=,\s]*[^0-9&gt;&lt;=,\s]+[^&gt;&lt;=,\s]*)&quot;</code> for identifiers, and <code>^(([^&gt;&lt;=,\s]+)(\s*([&gt;&lt;]=?)\s*([^&gt;&lt;=,\s]+))+)$</code> for comparison expressions.</p>
<p>For the identifier expression, the character set <code>[^&gt;&lt;=,\s]*</code> represents any non-banned character (this is allowed to repeat 0 or more times) and the character set <code>[^0-9&gt;&lt;=,\s]+</code> (allowed to repeat 1 or more times) represents a non-banned character that is not a digit. Therefore, the overall expression just looks for a single word (without spaces, as whitespace is not allowed by banning <code>\s</code>), such that at least one character is not a digit.</p>
<p>For the comparator expression, we have <code>[^&gt;&lt;=,\s]+</code> for any identifier or number, and <code>([&gt;&lt;]=?)</code> for a valid comparator. The comparator expression consists of an identifier or number, followed by 1 or more repetitions of (a comparator and then an identifier or number).</p>
","2024-03-02 05:26:43","1","Answer"
"78091505","78091372","","<p>It isn't very hard to build a parser for this. You can use the <code>operator</code> package to handle the conditions, and other than that, it's just a bunch of formatting and looping data.</p>
<pre class=""lang-py prettyprint-override""><code>import operator, re

# dictionary of operators
operators = {'&lt;=':operator.le,
             '&gt;=':operator.ge,
             '&gt;' :operator.gt,
             '&lt;' :operator.lt,
             '==':operator.eq,
             '!=':operator.ne
            }
        
# format operators keys for regex group
_oper = '|'.join(map(re.escape, operators.keys()))
        
# regex
oper   = re.compile(fr'\s*({_oper})\s*').split
number = re.compile(r'-?\d*(\.\d+)?').fullmatch
string = re.compile(r'(&quot;|\')(?P&lt;str&gt;.*)\1').fullmatch

def cast(value:str) -&gt; float|int|bool|str|None:
    out = None
    
    if (v := value.lower()) in ('true', 'false'):
        out = v == &quot;true&quot;
    elif m := string(value):
        out = m.group('str')
    elif m := number(value):
        out = (int,float)['.' in v](v)
        
    return out

def check_conditions(data:dict, conditions:str) -&gt; bool:
    # stores condition results
    facts = []

    for cond in conditions.split(','):
        # stores values and operators
        v, o = [], []
        
        # parse values and operators
        for c in oper(cond):
            if (c := c.strip()) in operators:
                # store operator function
                o.append(operators.get(c))
            else:
                # try data[c] else cast c
                v.append(data.get(c, cast(c)))
              
        # make sure values length is one more than operators              
        if (len(v) - len(o)) != 1:
            raise ValueError
            
        # call all operator functions on values and store results
        facts += [o[i](*v[i:i+2]) for i in range(len(o))]
    
    return all(facts)
</code></pre>
<h4>usage</h4>
<pre class=""lang-py prettyprint-override""><code>data  = {'a':25, 'ab':3.3, '(cd)': 4, 'ef':35, 'gh':.2, 'ij':&quot;hello&quot;, 'kl':False, &quot;mn&quot;:None}

conds = 'mn==None, a&gt;5, 0&lt;(cd)&lt;5, 35==ef!=34&gt;12&lt;20, ij==\'hello\''  
print(check_conditions(data, conds)) #True
</code></pre>
","2024-03-02 04:52:39","2","Answer"
"78091372","","Check if dictionary key, value pairs meet user-defined search conditions","<p>I have a dictionary of the form:</p>
<pre><code>dictionary = {'a':25, 'ab':3.3, '(cd)': 4, 'ef':35, 'gh':12.2, etc.}
</code></pre>
<p>a user enters a comma-separated phrase (search string) like:</p>
<pre><code>'a &gt; 5, 0 &lt; (cd) &lt; 6, ef &lt; 35'
</code></pre>
<p>Above we have three conditions, but it could be any number of conditions: What I would like is to check if my dictionary satisfies ALL search conditions.</p>
<pre><code> if dict meets all conditions:
     do somthing
 else:
     do something else
</code></pre>
<p>I can take the search string, do <code>split(',')</code>, loop over each condition, extract the key, the comparison operator (<code>&lt;</code> or <code>&gt;</code>), and the number, and check if my dictionary meets all conditions. In the example above <code>dictionary['a'] &gt; 5</code> is met, <code>0 &lt; dictionary['(cd)'] &lt; 6</code> is also met, but <code>dictionary['ef'] &lt; 35</code> is not met.</p>
<p>Is there a quicker and more elegant way to do this? A better and smarter way to go from <code>'a &gt; 5'</code> to <code>dictionary['a'] &gt; 5?</code> For example, can I convert my dictionary to a Pandas data frame, and do some checks? Is there an evaluation method, or something similar in Python aside from the brute force method that I am trying?</p>
","2024-03-02 03:37:36","1","Question"
"78085001","78084917","","<p>You can pass multiple when/then expressions to <a href=""https://docs.pola.rs/docs/python/dev/reference/expressions/api/polars.coalesce.html#polars.coalesce"" rel=""nofollow noreferrer""><code>pl.coalesce</code></a> in order to produce a single column result.</p>
<p>It is possible to &quot;stringify&quot; structs with <a href=""https://docs.pola.rs/docs/python/dev/reference/expressions/api/polars.Expr.struct.json_encode.html#polars.Expr.struct.json_encode"" rel=""nofollow noreferrer""><code>.struct.json_encode()</code></a> if JSON is acceptable.</p>
<pre class=""lang-py prettyprint-override""><code>df.with_columns(
   pl.coalesce(
      pl.when(pl.col(&quot;id&quot;) == _id)
        .then(pl.struct(cols).struct.json_encode())
      for _id, cols in id_struct_dict.items()
   )
   .alias(&quot;struct&quot;)
)
</code></pre>
<pre class=""lang-py prettyprint-override""><code>shape: (4, 8)
┌─────┬──────────┬─────┬───────┬───────┬────────┬───────┬─────────────────────────────────────────────┐
│ id  ┆ dog      ┆ age ┆ owner ┆ spots ┆ food   ┆ leash ┆ struct                                      │
│ --- ┆ ---      ┆ --- ┆ ---   ┆ ---   ┆ ---    ┆ ---   ┆ ---                                         │
│ i64 ┆ str      ┆ i64 ┆ str   ┆ bool  ┆ str    ┆ bool  ┆ str                                         │
╞═════╪══════════╪═════╪═══════╪═══════╪════════╪═══════╪═════════════════════════════════════════════╡
│ 1   ┆ labrador ┆ 2   ┆ Jim   ┆ null  ┆ Raw    ┆ true  ┆ {&quot;owner&quot;:&quot;Jim&quot;,&quot;food&quot;:&quot;Raw&quot;}                │
│ 1   ┆ labrador ┆ 2   ┆ Paul  ┆ null  ┆ Kibble ┆ false ┆ {&quot;owner&quot;:&quot;Paul&quot;,&quot;food&quot;:&quot;Kibble&quot;}            │
│ 2   ┆ boxer    ┆ 3   ┆ Kim   ┆ true  ┆ null   ┆ null  ┆ {&quot;owner&quot;:&quot;Kim&quot;,&quot;spots&quot;:true,&quot;food&quot;:null}    │
│ 3   ┆ airedale ┆ 4   ┆ Lynne ┆ null  ┆ Raw    ┆ true  ┆ {&quot;owner&quot;:&quot;Lynne&quot;,&quot;food&quot;:&quot;Raw&quot;,&quot;leash&quot;:true} │
└─────┴──────────┴─────┴───────┴───────┴────────┴───────┴─────────────────────────────────────────────┘
</code></pre>
","2024-03-01 00:24:14","1","Answer"
"78084917","","Custom Transformation Per Row Using Polars","<p>I have a dataset with a working solution that uses a for loop with Polars. However, I would like to use a built in Polars function like map_elements to apply a function that creates a struct of variable length based on an id column.</p>
<p>Working Solution:</p>
<pre><code>
import polars as pl
pl.Config.set_fmt_str_lengths(1000)

import warnings
warnings.filterwarnings(&quot;ignore&quot;)

df = pl.DataFrame({
    &quot;id&quot;: [1, 1, 2, 3],
    &quot;dog&quot;: [&quot;labrador&quot;, &quot;labrador&quot;, &quot;boxer&quot;, &quot;airedale&quot;],
    &quot;age&quot;: [2, 2, 3, 4],
    &quot;owner&quot;: [&quot;Jim&quot;, &quot;Paul&quot;, &quot;Kim&quot;, &quot;Lynne&quot;],
    &quot;spots&quot;: [None, None, True, None],
    &quot;food&quot;: [&quot;Raw&quot;, &quot;Kibble&quot;, None, &quot;Raw&quot;],
    &quot;leash&quot;: [True, False, None, True]
})

id_struct_dict = {
    1: [&quot;owner&quot;, &quot;food&quot;],
    2: [&quot;owner&quot;, &quot;spots&quot;, &quot;food&quot;],
    3: [&quot;owner&quot;, &quot;food&quot;, &quot;leash&quot;]
}

run = 0
for id, lst in id_struct_dict.items():
    print(id)
    struct_expr = pl.struct(lst).map_elements(lambda x: str(x)).alias(&quot;struct&quot;)
    if run == 0:
        df = df.with_columns([pl.when(pl.col(&quot;id&quot;) == id).then(struct_expr).otherwise(None)])
        run += 1
    else:
        df = df.with_columns([pl.when(pl.col(&quot;id&quot;) == id).then(struct_expr).otherwise(pl.col('struct'))])

df
</code></pre>
<p>I really dislike my solution, but it is the only way I was able to achieve my desired result. I tried mapping a function/udf via a different method, but the final struct case would apply to all rows despite the difference in ID.</p>
<p>Any ideas/help would be appreciated. Thank you.</p>
","2024-02-29 23:54:41","3","Question"
"78084431","78072643","","<p>i wrote out a return statement based on your psuedocode.  the main takeaway here is that i have a map function nested in the postDetail's map function to iterate through the headers.  your second map call is iterating through the postDetails array and using the index from that array, not from the headers array.  since postDetails length is 1, it doesn't matter how many headers you have, the index is not from the header array.</p>
<pre><code>{
    postDetails.map(detail =&gt; {
        return (
            {/* Create an h3 element containing the postDetail's title */}
            &lt;h3&gt;{detail.title}&lt;/h3&gt;
            {/* For each header in postDetail's headers: */}
            {detail.headers.map((header, index) =&gt; {
                return (
                    {/* Create a div with key as the index */}
                    &lt;div key={index}&gt;
                        {/* Create an h4 element containing the current header */}
                        &lt;h4&gt;{header}&lt;/h4&gt;
                        {/* If the length of the corresponding sub_headers array is greater than 0: */}
                        {(detail.sub_headers[index].length &gt; 0) &amp;&amp;
                            {/* Create a ul element */}
                            &lt;ul&gt;
                                {/* For each subHeader in the corresponding sub_headers array: */}
                                {detail.sub_headers[index].map(subHeader =&gt; {
                                    return (
                                        {/* Create an li element containing the current subHeader */}
                                        &lt;li&gt;{subHeader}&lt;/li&gt;
                                    )
                                })
                            &lt;/ul&gt;
                        }
                    &lt;/div&gt;
                )
            })
        )
    })
}
</code></pre>
","2024-02-29 21:43:18","0","Answer"
"78082259","78082169","","<p>Arguments of <code>intersect1d()</code> are</p>
<pre><code>ar1, ar2array_like
    Input arrays. Will be flattened if not already 1D.
</code></pre>
<p>see <a href=""https://numpy.org/doc/stable/reference/generated/numpy.intersect1d.html"" rel=""nofollow noreferrer"">https://numpy.org/doc/stable/reference/generated/numpy.intersect1d.html</a>.</p>
<p>Return values of <code>dict.keys()</code> are dictionary view <em>objects</em> , see <a href=""https://docs.python.org/3/library/stdtypes.html#dict-views"" rel=""nofollow noreferrer"">https://docs.python.org/3/library/stdtypes.html#dict-views</a>. Hence, <code>numpy</code> converts these view objects into arrays of objects as they are not collections of numbers:</p>
<pre><code>&gt;&gt;&gt; np.array({'a':1, 'b':2}.keys())
array(dict_keys(['a', 'b']), dtype=object)
</code></pre>
<p>And now <code>intersect1d()</code> will fail as these input arrays each have just one element: <code>dict_keys(['a', 'b'])</code> in the first array and <code>dict_keys(['b', 'c'])</code> in the second array. These are different objects and hence their intersection is a void set.</p>
","2024-02-29 14:39:57","1","Answer"
"78082247","78082169","","<p>Dictionary keys are special objects (set-like) that are dynamic views on the dictionary's keys (see <a href=""https://docs.python.org/3/library/stdtypes.html#dict-views"" rel=""nofollow noreferrer"">doc</a>). They do behave &quot;unexpectedly&quot; (for instance you can't slice them like a list: <code>d1.keys()[0]</code>)</p>
<p>Now I'm not sure <em>why</em> (see below) <a href=""https://numpy.org/doc/stable/reference/generated/numpy.intersect1d.html"" rel=""nofollow noreferrer""><code>np.intersect1d</code></a> is not working as expected on <code>dict.keys()</code>, but why use numpy here anyway? This function is defined to work on arrays, not on any object.</p>
<p>Furthermore, since the objects would need to be converted to arrays, this is slower than pure python. Better use a simple <a href=""https://docs.python.org/3/library/stdtypes.html#set"" rel=""nofollow noreferrer""><code>set</code></a> intersection <code>set(d1) &amp; set(d2)</code>, or even better (as suggested by @nocomment): <code>d1.keys() &amp; d2.keys()</code>:</p>
<pre><code>d1 = dict.fromkeys(range(1, 1_000_000))
d2 = dict.fromkeys(range(1, 2_000_000, 2))

%timeit np.intersect1d(list(d1), list(d2))
# 433 ms ± 97.6 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)

%timeit set(d1) &amp; set(d2)
# 162 ms ± 19.8 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)

% timeit d1.keys() &amp; d2.keys()
# 60.8 ms ± 12.5 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
</code></pre>
<h4>but <em>why</em>?</h4>
<p><code>intersect1d</code> takes two <strong>array_like</strong> as input, which are defined as any scalar or sequence than can be converted to array (<a href=""https://numpy.org/devdocs/glossary.html#term-array_like"" rel=""nofollow noreferrer"">doc</a>). However <code>np.array(d1.keys())</code> creates an object array containing the <code>keys</code> object (a single object) and not the keys as items:</p>
<pre><code>np.array(d1.keys())
# array(dict_keys(['a', 'b']), dtype=object)

np.array(d1.keys()).size
# 1
</code></pre>
<p>A perhaps interesting demonstration is to see the effect of a self intersection, yielding this unique object:</p>
<pre><code>np.intersect1d(d1.keys(), d1.keys())
# array([dict_keys(['a', 'b'])], dtype=object)
</code></pre>
","2024-02-29 14:37:48","1","Answer"
"78082169","","numpy.intersect1d does not work on dictionary.keys()","<p>I tried to use numpy's <code>intersect1d</code> to compare the keys in two dictionaries. However, this always returns an intersection of zero, for some reason related to dictionary keys being objects. I want to know why this behavior is desireable in any way.</p>
<pre><code>d1 = {'a':1, 'b':2}
d2 = {'b':2, 'c':3}
np.intersect1d(d1.keys(), d2.keys())
&gt; array([], dtype=object)
</code></pre>
<p>However,</p>
<pre><code>np.intersect1d(list(d1.keys()), list(d2.keys()))
&gt; array(['b'], dtype='&lt;U1')
</code></pre>
<p>Is this intended behavior and if so, why?</p>
","2024-02-29 14:24:34","2","Question"
"78081178","78081023","","<p>Assuming this is a follow-up of <a href=""https://stackoverflow.com/q/78074140/16343464"">your previous question</a> and that you want to assign a different type <strong>based on column position</strong>, you could use:</p>
<pre><code>dtypes = {3: 'float32', 6: 'float64', 9: 'complex64'}

df = df.astype(dict(zip(df.columns[list(dtypes)], dtypes.values())))

print(df.dtypes)
</code></pre>
<p>Output:</p>
<pre><code>col0       object
col1       object
col2       object
col3      float32
col4       object
col5       object
col6      float64
col7       object
col8       object
col9    complex64
dtype: object
</code></pre>
<p>Used input:</p>
<pre><code>col_dets = [f'col{i}' for i in range(10)]
df = pd.DataFrame(columns=col_dets, index=[0])
</code></pre>
","2024-02-29 11:51:09","0","Answer"
"78081084","78080971","","<p>You ca, achieve this in pure <a href=""/questions/tagged/numpy"" class=""post-tag"" title=""show questions tagged &#39;numpy&#39;"" aria-label=""show questions tagged &#39;numpy&#39;"" rel=""tag"" aria-labelledby=""tag-numpy-tooltip-container"">numpy</a> (without loops) with <a href=""https://numpy.org/doc/stable/reference/generated/numpy.unique.html"" rel=""nofollow noreferrer""><code>unique</code></a>, <a href=""https://numpy.org/doc/stable/reference/generated/numpy.argsort.html"" rel=""nofollow noreferrer""><code>argsort</code></a> and <a href=""https://numpy.org/doc/stable/reference/generated/numpy.array_split.html"" rel=""nofollow noreferrer""><code>array_split</code></a>, then <a href=""https://docs.python.org/3/library/functions.html#zip"" rel=""nofollow noreferrer""><code>zip</code></a> the output to form a <a href=""https://docs.python.org/3/library/functions.html#func-dict"" rel=""nofollow noreferrer""><code>dict</code></a>:</p>
<pre><code>n, cnt = np.unique(y, return_counts=True)

out = dict(zip(n, np.array_split(x[np.argsort(y)], np.cumsum(cnt[:-1]))))
</code></pre>
<p>Output:</p>
<pre><code>{0: array([[1, 2, 4, 3]]),
 1: array([[2, 3, 5, 6],
           [1, 5, 6, 4]]),
 2: array([[2, 8, 9, 5]])}
</code></pre>
<p>How it works:</p>
<pre><code># get the unique `y` values and their count
n, cnt = np.unique(y, return_counts=True)
# array([0, 1, 2]), array([1, 2, 1])

# reorder the array
x[np.argsort(y)]
# array([[1, 2, 4, 3],    # 0
#        [2, 3, 5, 6],    # 1
#        [1, 5, 6, 4],    # 1
#        [2, 8, 9, 5]])   # 2

# get the split points
np.cumsum(cnt[:-1])
# array([1, 3])

# split
np.array_split(x[np.argsort(y)], np.cumsum(cnt[:-1]))
# [array([[1, 2, 4, 3]]),
#  array([[2, 3, 5, 6],
#         [1, 5, 6, 4]]),
#  array([[2, 8, 9, 5]])]
</code></pre>
","2024-02-29 11:37:50","3","Answer"
"78081034","78080971","","<p>Quick list comprehension:</p>
<pre><code>[x[y==i] for i in range(y.max() + 1)] 

Out[]: 
[array([[1, 2, 4, 3]]),
 array([[2, 3, 5, 6],
        [1, 5, 6, 4]]),
 array([[2, 8, 9, 5]])]
</code></pre>
<p>Unfortunately this method generates arrays of non-constant shape, so listing is probably your best bet.</p>
","2024-02-29 11:28:50","1","Answer"
"78081023","","Creating dataframe from dictionary with multiple dtypes set for columns","<p>I would like to create a pandas dataframe from a dictionary but set multiple dtypes on selected columns at creation. EDIT - should have made this clear - I have already created the dictionary and have passed it in as col_dets in this example.</p>
<pre><code>df = pd.DataFrame(col_dets, index=[0]).astype(dict.fromkeys(df.columns[[3, 6, 9]], 'float64'))
</code></pre>
<p>I am aware the above is incorrect, but is there a method to do this? Ideally stating columns at these indices are float64 and at other indices are int64 (for example?)</p>
","2024-02-29 11:26:40","0","Question"
"78081018","78080971","","<p>This is one way to do what you need:</p>
<pre><code>result = [[] for _ in range(max(y) + 1)]
for idx, arr in zip(y, x):
    result[idx].append(arr)
</code></pre>
<p>If you know that there are exactly three lists in result then:</p>
<pre><code>x_0, x_1, x_2 = map(np.array, result)
</code></pre>
<p>Result:</p>
<pre><code>&gt;&gt;&gt; x_0
array([[1, 2, 4, 3]])
&gt;&gt;&gt; x_1
array([[2, 3, 5, 6],
       [1, 5, 6, 4]])
&gt;&gt;&gt; x_2
array([[2, 8, 9, 5]])
</code></pre>
","2024-02-29 11:26:15","2","Answer"
"78080971","","Split numpy array into several arrays","<p>I have x and y like this:</p>
<pre><code>x = np.array([[2,3,5,6], [1,2,4,3], [1,5,6,4], [2,8,9,5]])
y = np.array([1,0,1,2])
</code></pre>
<p>And I need do this. Separate array into several arrays according to y values. X and y numbers can be different and also number of values into brackets can be different.</p>
<pre><code>x_0 = np.array([1,2,4,3])
x_1 = np.array([[2,3,5,6], [1,5,6,4]])
x_2 = np.array([2,8,9,5])
</code></pre>
<p>I tried to do it with dictionaries and lists but probably someone can do it shorter</p>
","2024-02-29 11:17:51","-3","Question"
"78079516","78071815","","<p>One thing searching in a trie shares with binary search is that it keeps shrinking the possibilities between a range; except instead of binary, it's character-by-character, and instead of dividing down the binary middle, it uses the position in the word. (It still performs with <code>log n</code> iid, see <a href=""https://www.sciencedirect.com/science/article/pii/S0304397515001061"" rel=""nofollow noreferrer"">Tong2016Smoothed</a>.)</p>
<p>However, when it gets to a wildcard (<code>.</code>), one can't add to the possibilities and do them in parallel. In general, we will have holes in the output such that it is not represented in a single range. For example, when searching for <code>c.t</code> in <code>{cat, cel, cut}</code>, <code>cat</code> and <code>cut</code> are included but <code>cel</code>, in the middle, is not. I think I've modified this code to do this by taking multiple paths.</p>
<pre><code>class WordDictionary(object):

    def __init__(self):
        self.node = None
        self.map = {}

    def __repr__(self):
        if self.node and self.map:
            return &quot;\&quot;{0}\&quot;.{1}&quot;.format(self.node, self.map)
        elif self.node:
            return &quot;\&quot;{0}\&quot;&quot;.format(self.node)
        elif self.map:
            return &quot;∅.{0}&quot;.format(self.map)
        else:
            return &quot;&lt;error&gt;&quot;

    def addWord(self, word: str) -&gt; None:
        current = self
        for i in word:
            if not i in current.map:
                current.map[i] = WordDictionary()
            current = current.map[i]
        current.node = word

    def match(self, word: str) -&gt; str:
        if not word:
            &quot;&quot;&quot;
            in-order sub-trie traversal will enumerate the words that have
            `word` as a prefix (hence prefix-tree); (not used)
            &quot;&quot;&quot;
            if self.node:
                yield self.node
            return
        i = word[0]
        rest = word[1:]
        if i == '.':
            for wild in self.map.values():
                yield from wild.match(rest)
        elif i in self.map:
            yield from self.map[i].match(rest)

    def search(self, word: str) -&gt; bool:
        return next(self.match(word), None) != None

words = WordDictionary()
words.addWord(&quot;zulu&quot;)
words.addWord(&quot;november&quot;)
words.addWord(&quot;mike&quot;)
words.addWord(&quot;yankee&quot;)
words.addWord(&quot;cat&quot;)
words.addWord(&quot;cate&quot;)
words.addWord(&quot;cel&quot;)
words.addWord(&quot;cut&quot;)
words.addWord(&quot;cute&quot;)
print(&quot;words: {0}&quot;.format(words))

print(&quot;first match a:&quot;, next(words.match(&quot;a&quot;), None))
print(&quot;first match mi..:&quot;, next(words.match(&quot;mi..&quot;), None))
print(&quot;search a:&quot;, words.search(&quot;a&quot;))
print(&quot;search c.t:&quot;, words.search(&quot;c.t&quot;))
print(&quot;search z.lu:&quot;, words.search(&quot;z.lu&quot;))
print(&quot;search mi..:&quot;, words.search(&quot;mi..&quot;))
print(&quot;search ..:&quot;, words.search(&quot;..&quot;))
print(&quot;search ....:&quot;, words.search(&quot;....&quot;))
print(&quot;search c.te&quot;, words.search(&quot;c.te&quot;))
</code></pre>
<p>The <code>match</code> function is a (recursive) generator for all the words that could be possible using the string with wildcards. The <code>self.node</code> string is a more expressive form of the <code>end</code> sentinel; <code>end</code> could be used, but the way I've written <code>search</code> requires that any words are returned from <code>match</code>. (Sorry for the <code>python3</code> instead of <code>python</code>, this is not my usual language at all.)</p>
","2024-02-29 07:20:52","1","Answer"
"78079376","78079305","","<p><code>label</code> is always the last element from the original list and shouldn't be reused</p>
<pre><code>print(f&quot;Wrong Answer  :  {answer_label}) {answer!r}&quot;) 
print(f&quot;Correct Answer:  {list(labeled_alternatives.keys())[0]}) {correct_answer!r}&quot;)
</code></pre>
","2024-02-29 06:52:21","1","Answer"
"78079305","","How to access a specific data in a dictionary","<p>I found the python script below and made some improvements however, there is something I cant manage to work. I had been struggling to find the needed resource.</p>
<pre><code>import random
from string import ascii_lowercase

NUM_questionFileS_PER_studFileUIZ = 5
questionFileS = {
    &quot;This is question A&quot;:
    [&quot;Choice 1&quot;, &quot;Choice 2&quot;, &quot;Choice 3&quot;,], &quot;This is question B&quot;: [&quot;Choice 1&quot;, &quot;Choice 2&quot;, &quot;Choice 3&quot;,],
}

num_questionFiles = min(NUM_questionFileS_PER_studFileUIZ, len(questionFileS))
questionFiles = random.sample(list(questionFileS.items()), k=num_questionFiles)

num_correct = 0
for num, (questionFile, alternatives) in enumerate(questionFiles, start=1):
    print(f&quot;\nQuestion {num}:&quot;)
    print(f&quot;{questionFile}?&quot;)
    
    correct_answer = alternatives[0]
    labeled_alternatives = dict(zip(ascii_lowercase, random.sample(alternatives, k=len(alternatives))))
    for label, alternative in labeled_alternatives.items():
        print(f&quot;  {label}) {alternative}&quot;)

    while (answer_label := input(&quot;\nYour Choice? &quot;)) not in labeled_alternatives:
        print(f&quot;Please answer one of {', '.join(labeled_alternatives)}&quot;)
  
    answer = labeled_alternatives[answer_label] 
    
    if answer == correct_answer:
        num_correct += 1
        print(&quot;That is correct!&quot;)
    else:
        print(f&quot;Wrong Answer  :   {label} {answer!r}&quot;)
        print(f&quot;Correct Answer:   {label} {correct_answer!r}&quot;)
</code></pre>
<p>Sample Output:</p>
<pre><code>Question 2:
This is question A?
  a) Choice 1
  b) Choice 2
  c) Choice 3

Your Choice? b    # This is the part I needed help
Wrong Answer  :   c 'Choice 2'
Correct Answer:   c 'Choice 1'
</code></pre>
<p>Wanted Output:</p>
<pre><code>Your Choice? b    
Wrong Answer  :   b) Choice 2
Correct Answer:   a) Choice 1
</code></pre>
","2024-02-29 06:36:57","-1","Question"
"78075957","78075725","","<p>You can first transform your two dictionaries to dataframes with the following:</p>
<pre><code>df1=pd.DataFrame([sample_1], columns=['area', 'perimeter','diameter'])
df2=pd.DataFrame([sample_2], columns=['area', 'perimeter','diameter'])

frames = [df1, df2]
</code></pre>
<p>Next you can concat the two. Concating means to connect the two dfs horizontally:</p>
<pre><code>result = pd.concat(frames)
</code></pre>
<p>Your Output:</p>
<pre><code>    area    perimeter   diameter
  0  2           3          5
  0  6           3          8
</code></pre>
","2024-02-28 16:11:25","-1","Answer"
"78075749","78075725","","<p>Combine all your samples in a list:</p>
<pre><code>sample_1 = {'area': 2, 'perimeter': 3, 'diameter': 5}
sample_2 = {'area': 6, 'perimeter': 3, 'diameter': 8}

samples = [sample_1, sample_2]

out = pd.DataFrame(samples)
</code></pre>
<p>If you can, it's even better to drop the intermediate variable names:</p>
<pre><code>samples = [{'area': 2, 'perimeter': 3, 'diameter': 5},
           {'area': 6, 'perimeter': 3, 'diameter': 8},
          ]

out = pd.DataFrame(samples)
</code></pre>
<p>Output:</p>
<pre><code>   area  perimeter  diameter
0     2          3         5
1     6          3         8
</code></pre>
<p>If your samples have meaningful names:</p>
<pre><code>sample_1 = {'area': 2, 'perimeter': 3, 'diameter': 5}
sample_2 = {'area': 6, 'perimeter': 3, 'diameter': 8}

samples = {'A': sample_1, 'B': sample_2}

out = pd.DataFrame.from_dict(samples, orient='index')
</code></pre>
<p>Output:</p>
<pre><code>   area  perimeter  diameter
A     2          3         5
B     6          3         8
</code></pre>
","2024-02-28 15:41:02","3","Answer"
"78075725","","How to make a pandas dataframe from multiple dictionaries?","<p>As an output of my analysis, I get a dictionary containing the measurements for each sample. I would like to have these in a dataframe with a row for each sample (thus the dictionary). The dictionary for each sample has the same keys. Is there a way to efficiently add each dictionary as a row to a dataframe?</p>
<pre><code>sample_1 = {&quot;area&quot;: 2, &quot;perimeter&quot;: 3, &quot;diameter&quot;: 5}
sample_2 = {&quot;area&quot;: 6, &quot;perimeter&quot;: 3, &quot;diameter&quot;: 8}
</code></pre>
<p>I want to combine these in a dataframe. The columns should be area, perimeter and diameter, and the rows should be the samples. I have over 5000 samples and 20 variables stored in the dictionaries.</p>
<p>I have tried the function <code>pd.DataFrame.from_dict</code> but this would result in having to turn each dictionary in a dataframe that then had to be merged.</p>
<p>I cannot change the output of the function I use to measure to a dataframe, so the dictionaries is what I have to work with.</p>
","2024-02-28 15:38:36","2","Question"
"78074984","78074298","","<p>One possible solution, using <code>max()</code>:</p>
<pre class=""lang-py prettyprint-override""><code>d = {&quot;a&quot;: {&quot;order&quot;: 1, &quot;item&quot;: &quot;x&quot;}, &quot;b&quot;: {&quot;order&quot;: 2, &quot;item&quot;: &quot;y&quot;}}

print(max(d, key=lambda k: d[k][&quot;order&quot;]))
</code></pre>
<p>Prints:</p>
<pre><code>b
</code></pre>
","2024-02-28 13:54:09","1","Answer"
"78074381","78073355","","<p>I think what you're looking for is something like the following:</p>
<pre><code>interface StrictMap&lt;T extends Record&lt;string, any&gt;&gt;
  extends Map&lt;keyof T, T[keyof T]&gt; {
  clear(): void;
  delete(key: keyof T): boolean;
  get&lt;K extends keyof T&gt;(key: K): T[K] | undefined;
  has(key: keyof T): boolean;
  set&lt;K extends keyof T&gt;(key: K, value: T[K]): this;
  readonly size: number;
}
</code></pre>
<p>This is a copy of the <code>Map</code> type, but I have changed the generics to accept only an object-like value (which will retain the exact key-value mappings).</p>
<p>I have also overridden most of the methods so that the types are stricter. The only one I have left out is <code>forEach</code> which uses the existing <code>Map.forEach</code> as our new type extends the <code>Map&lt;K, V&gt;</code> type.</p>
","2024-02-28 12:26:37","2","Answer"
"78074298","","How to get fast key where effeciently the key where value is dictionary","<p>I have a dictionary like this:</p>
<pre><code>d = {&quot;a&quot;: {&quot;order&quot;:1, &quot;item&quot;:&quot;x&quot;}, &quot;b&quot;: {&quot;order&quot;: 2, &quot;item&quot;:&quot;y&quot;}}
</code></pre>
<p>Here, highest value for order is 2, so I'd like to retrieve the key &quot;b&quot;</p>
<p>Any idea for the most efficient, fastest way please?</p>
<p>The most i could do</p>
<pre><code>m = 0 
result = None 
for k,v in d.items(): 
    if v[&quot;order&quot;] &gt; m: 
        m = v[&quot;order&quot;] 
        result = k 
</code></pre>
","2024-02-28 12:12:58","0","Question"
"78074195","78073355","","<p>You can make a generic type, that uses a <a href=""https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types"" rel=""nofollow noreferrer"">distributed conditional type</a></p>
<pre><code>type MyMap&lt;O, K extends keyof O = keyof O&gt; = K extends any ? Map&lt;K, O[K]&gt; : never;
</code></pre>
<p>This builds a union of <code>Map</code> types for each key (<code>K</code>) from <code>Data</code> and with the associated value type (<code>O[K]</code>):</p>
<pre><code>type MyDataMap = MyMap&lt;Data&gt;;
// Map&lt;&quot;articles&quot;, Article[]&gt; | Map&lt;&quot;comments&quot;, Comment[]&gt;
</code></pre>
<hr />
<p>To break it down a little, the <code>MyMap&lt;Data&gt;</code> is the same as <code>MyMap&lt;Data, keyof Data&gt;</code> (due to the default on the second generic type). <code>keyof Data</code> can also be written as a union type of <code>&quot;articles&quot; | &quot;comments&quot;</code>:</p>
<pre><code>MyMap&lt;Data&gt;
// &quot;unfurls&quot; to 
MyMap&lt;Data, &quot;articles&quot; | &quot;comments&quot;&gt;
// O--^^^^   ^^^^^^^^^^^^^^^^^^^^^----- K
</code></pre>
<p>The conditional type of <code>K extends any</code> is then applied to each member of the <code>&quot;articles&quot; | &quot;comments&quot;</code> union. So <code>MyMap</code> distributes on each element, effectively giving:</p>
<pre><code>MyMap&lt;Data, &quot;articles&quot;&gt; | MyMap&lt;Data, &quot;comments&quot;&gt;
</code></pre>
<p>When ultimately gives:</p>
<pre><code>Map&lt;&quot;articles&quot;, Article[]&gt; | Map&lt;&quot;comments&quot;, Comment[]&gt;
</code></pre>
","2024-02-28 11:56:47","3","Answer"
"78073355","","Map type definition where value corresponds to key","<p>How can I define a map where each key has a certain type assigned ?</p>
<p>This is the type def:</p>
<pre><code>type Data = {
  articles: Article[],
  comments: Comment[],
  ...
}
</code></pre>
<p>And the map def has to accept only keys from that type, but the values have to match the keys:</p>
<pre><code>type MyMap = &lt;K extends keyof Data&gt;Map&lt;K, Data[K]&gt;; // &lt;- doesn't work
</code></pre>
","2024-02-28 09:34:30","2","Question"
"78072643","","How to iterate over a specific key in a dictionary using react (javascript)","<p>Im trying to create a sidebar using react. This sidebar will feature the title of a post, followed by a list of headings and subheading (in the format [header] [sub-headers], [header2] [sub-headers2] etc...). The data is in the form of a dictionary. However I cant find how to use the map function to iterate over the specific key in the dictionary.</p>
<p>Here is what i have:</p>
<pre><code>import React, {useState} from 'react'
import {DUMMY_POSTS} from '../data'
import Thumbnail1 from '../images/1.png'

const DUMMY_POST = [
  {
      id: '1',
      thumbnail: Thumbnail1,
      category:'NPO',
      title:'1971',
      headers:['Logo','Colors','Typography','Graphical Elements','Applications'],
      sub_headers:[[''],
                  ['Main Colors','Space Neutrals','Heading'],
                  [''],
                  [''],
                  ['Postcards','Accreditations','Ticket Packaging','Event Schedule']],
  }]

const PostDetail = () =&gt; {

  const [postDetails,setPostDetails] = useState(DUMMY_POST)

  return (
    &lt;section className='PostDetails'&gt;
      &lt;div className=&quot;details__sidebar&quot;&gt;
        {postDetails.map(({id,title}) =&gt; {
            return &lt;div className=&quot;details__sidebar__container&quot;&gt;
            &lt;div className='details__sidebar__title'&gt;
                &lt;h3&gt;{title}&lt;/h3&gt;
            &lt;/div&gt;
            &lt;/div&gt; })}
            {postDetails.map(({headers,sub_headers}, index) =&gt; {
              return&lt;div className=&quot;details__sidebar__headers&quot; key = {index}&gt;
              &lt;ul&gt;&lt;h4&gt;{headers[index]}&lt;/h4&gt; &lt;/ul&gt; 
              &lt;div className=&quot;details__sidebar__sub-headers&quot;&gt;
                &lt;p&gt;{sub_headers[index]}&lt;/p&gt;
            &lt;/div&gt;
            &lt;/div&gt;
        })}


          &lt;div className='Post__Details'&gt;
            Post Details
          &lt;/div&gt;
          &lt;/div&gt;
        &lt;/section&gt;
  )
}
export default PostDetail



</code></pre>
<p>However, this creates a list of only the first header and the first sub_header array</p>
<p>In summary, here is what im trying to do in pseudocode:</p>
<pre><code>      Create an h3 element containing the postDetail's title
      For each header in postDetail's headers:
        Create a div with key as the index
            Create an h4 element containing the current header
            If the length of the corresponding sub_headers array is greater than 0:
                Create a ul element
                    For each subHeader in the corresponding sub_headers array:
                        Create an li element containing the current subHeader
</code></pre>
<p>where the final outcome should look something like this:<a href=""https://i.sstatic.net/3wJih.png"" rel=""nofollow noreferrer"">sidebar image</a></p>
","2024-02-28 07:32:55","0","Question"
"78072259","78071815","","<blockquote>
<p>Design a data structure</p>
</blockquote>
<p>That's an interesting structure you have implemented.
Sorry, I don't know how it ran afoul of test 16.</p>
<pre><code>        current['end'] = {}
</code></pre>
<p>This costs N <code>dict</code> allocations if you store N words.</p>
<p>Consider instead simply storing a pointer to same old singleton,
so we malloc() a little less:</p>
<pre><code>        current['end'] = None
</code></pre>
<h1>permutations</h1>
<p>Sorted data structures tend to be good for wildcard matching.
The trouble is that <code>search('a.ple')</code> might force us to
scan all initial-&quot;a&quot; entries, with &quot;a&quot; being a popular letter.
Or worse, <code>search('.pple')</code> might force a O(N) linear scan of everything.
Assume we don't know etaoin shrdlu letter frequencies,
and cannot measure them in a contest setting.</p>
<p>One way out of this is to store all permutations:</p>
<pre><code>from sortedcontainers import SortedDict

d = SortedDict()
add(d, 'apple', 'apple')
add(d, 'pplea', 'apple')
add(d, 'pleap', 'apple')
add(d, 'leapp', 'apple')
add(d, 'eappl', 'apple')

def add(d: SortedDict, k: str, v: str) -&gt; None:
    if k not in d:
        # The set deals with the ambiguity of anagrams,
        # e.g. {eat, ate, tea}
        d[k] = set()
    d[k].add(v)
</code></pre>
<p>Now when we're confronted with one or two wildcard
characters in a search() query, it's a matter of
identifying the longest stretch of definite letters.
So for <code>&quot;.pp.e&quot;</code> we would scan
<a href=""https://grantjenks.com/docs/sortedcontainers/sortedlist.html#sortedcontainers.SortedList.irange"" rel=""nofollow noreferrer"">d.irange(&quot;pp&quot;, &quot;pq&quot;)</a>
looking for keys with an <code>&quot;e&quot;</code> in the correct position.
For a query like <code>&quot;a..le&quot;</code> we would scan
<code>d.irange(&quot;lea&quot;, &quot;leb&quot;)</code>.</p>
<p>You can't pip install packages for the contest,
but you can certainly implement enough binary search code
to support this.</p>
<h1>anagrams</h1>
<p>Let's lean on scrambled letter order a bit harder.</p>
<p>Suppose we want to find anagrams of a query word.
The standard solution is to sort letters and store that.
So <code>''.join(sorted('apple'))</code> -&gt; <code>'aelpp'</code></p>
<p>A catastrophic query for this scheme would be <code>'.ppl.'</code>.
That seems to send us back to storage proportional to word length.
Let's try storing a second copy, the reverse sort: <code>'pplea'</code>.
Now we can
<a href=""https://docs.python.org/3/library/itertools.html#itertools.zip_longest"" rel=""nofollow noreferrer"">zip()</a>
up these two iterators:</p>
<ul>
<li>d.irange('lpp', 'lpq')</li>
<li>d.irange('ppl', 'ppm')</li>
</ul>
<p>Whichever one produces a match first will win, terminating the loop.
This scheme has a nice symmetry: when adding a word and when querying
we can always alphabetize however many letters we've been given.</p>
<p>Consider an example that lacks repeated characters.</p>
<ul>
<li><code>'fruit'</code> --&gt; <code>'firtu'</code></li>
<li><code>'fruit'</code> --&gt; <code>'utrif'</code></li>
</ul>
<p>Catastrophic query for this scheme would be <code>'.r.it'</code>
So maybe add a third entry, permutation from middle (e.g. <code>'rtufi'</code>),
and call it a day?
Choosing three entries exploits the fact that
adversary is limited to just two wildcards.</p>
<p>I have been trying to avoid storing number of entries
that is quadratic with word length, since 15 characters is
max word length, and 15 × 14 = 210 is a large number.
Maybe storing entries for all possible single-wildcard queries
is the right tradeoff here.</p>
<p>For long words, a wildcard knocking out <code>'m'</code> or <code>'n'</code> seems
uninteresting; only the first few letters close to <code>'a'</code>,
and the last few letters close to <code>'z'</code> have much power
to wreck a query.
If e.g. <code>'b'</code> and <code>'c'</code> are knocked out by wildcards,
then the reverse copy will save us.
Similarly if <code>'s'</code> and <code>'u'</code> are knocked out,
the forward copy is sure to permit efficient querying.
So number of entries can go up sub-linearly with word size.</p>
<h1>letter count</h1>
<p>Oh, one more thing that is known when adding and when querying:
the letter count.
So first index of our dictionary should be <code>word_len</code>,
followed by <code>sorted_letters</code> or whatever:</p>
<pre><code>d[5]['firtu'].add('fruit')
</code></pre>
","2024-02-28 06:09:35","2","Answer"
"78071815","","Design Add and Search Words Data Structure: Leetcode 211","<p>I am currently trying to solve the problem <a href=""https://leetcode.com/problems/design-add-and-search-words-data-structure/description/?source=submission-noac"" rel=""nofollow noreferrer"">Add and Search Words Data Structure</a> on leetcode. The question is as follows:</p>
<blockquote>
<p>Design a data structure that supports adding new words and finding if
a string matches any previously added string.</p>
<p>Implement the WordDictionary class:</p>
<p><code>WordDictionary()</code> Initializes the object.</p>
<p><code>void addWord(word)</code> Adds <code>word</code> to the data structure, it can be matched later.</p>
<p><code>bool search(word)</code> Returns <code>true</code> if there is any string in the data structure that matches
<code>word</code> or <code>false</code> otherwise. word may contain dots <code>.</code> where dots can be
matched with any letter.</p>
</blockquote>
<p><strong>My Strategy:</strong></p>
<p>My strategy involves representing a trie with a hashmap instead of a traditional linked-list-based tree structure, aiming for better performance and lower complexity. By using a hashmap, we can quickly access the next node without traversing through unnecessary nodes, making operations faster especially with large datasets.</p>
<p>For example, when inserting words like apple and application into this structure, it's organized as nested hashmaps where each character in a word points to another hashmap representing the next character. The end of a word is marked with a special key-value pair {'end': {}}. This way, we efficiently store and search for words with minimal space and time complexity.</p>
<p><strong>My Code:</strong></p>
<pre><code>class WordDictionary(object):

    def __init__(self):
        self.map = {}

    def addWord(self, word):
        &quot;&quot;&quot;
        :type word: str
        :rtype: None
        &quot;&quot;&quot;
        current = self.map
        for i in word:
            if i in current:
                current = current[i]
            else:
                current[i] = {}
                current = current[i]
        current['end'] = {}
        
        return
        

    def search(self, word):
        &quot;&quot;&quot;
        :type word: str
        :rtype: bool
        &quot;&quot;&quot;
        current = self.map
        for i in word:
            if i in current:
                current = current[i]
            elif i == '.':
                current = {key: value for d in current.values() for key, value in d.items()}
            else:
                return False
        if 'end' in current:
            return True
        return False
</code></pre>
<p>The solution seems to be effective for the majority of cases, but I've hit a error with <strong>test case 16</strong>, where it's not giving the right outcome. The length of test case 16 makes it particularly challenging to pinpoint where the mistake is happening. I'm in need of some guidance to track down and <strong>fix this logical error</strong>. Would you be able to lend a hand in sorting this out?</p>
","2024-02-28 03:47:59","3","Question"
"78070896","78070853","","<p>It look like the list will always be sorted. One way would be to loop through the list and once the day changes then assign km = 0.</p>
<p>The solution that worked for me was:</p>
<pre><code>from datetime import datetime
data = [
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 8, 0), &quot;km&quot;: 10},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 13, 30), &quot;km&quot;: 20},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 17, 30), &quot;km&quot;: 40},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 9, 15), &quot;km&quot;: 15},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 14, 45), &quot;km&quot;: 25}
]

current = -1
for entry in data:
    if current != (current := entry[&quot;Zeit&quot;].date()):
        entry[&quot;km&quot;] = 0
        current = entry[&quot;Zeit&quot;].date()
</code></pre>
<p>EDIT: used @juanpa.arrivillaga's suggestion</p>
","2024-02-27 22:25:02","0","Answer"
"78070886","78070853","","<p>Convert your DateTime to a Unix timestamp and then sort them in ascending way. The first one in the list will be the one which you are looking for.</p>
<p>Start with below piece of code:</p>
<pre><code>import datetime
import time
 
date_time = datetime.datetime(2021, 7, 26, 21, 20)

unix_timestamp = time.mktime(date_time.timetuple())
</code></pre>
","2024-02-27 22:21:58","-2","Answer"
"78070885","78070853","","<p>Try:</p>
<pre class=""lang-py prettyprint-override""><code>from datetime import datetime
from itertools import groupby

data = [
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 8, 0), &quot;km&quot;: 10},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 13, 30), &quot;km&quot;: 20},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 17, 30), &quot;km&quot;: 40},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 9, 15), &quot;km&quot;: 15},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 14, 45), &quot;km&quot;: 25},
]

# sort if needed:
# data.sort(key=lambda d: d[&quot;Zeit&quot;])

for _, g in groupby(data, lambda d: (d[&quot;Zeit&quot;].year, d[&quot;Zeit&quot;].month, d[&quot;Zeit&quot;].day)):
    first = next(g)
    first[&quot;km&quot;] = 0

print(data)
</code></pre>
<p>Prints:</p>
<pre><code>[
    {&quot;Zeit&quot;: datetime.datetime(2024, 2, 27, 8, 0), &quot;km&quot;: 0},
    {&quot;Zeit&quot;: datetime.datetime(2024, 2, 27, 13, 30), &quot;km&quot;: 20},
    {&quot;Zeit&quot;: datetime.datetime(2024, 2, 27, 17, 30), &quot;km&quot;: 40},
    {&quot;Zeit&quot;: datetime.datetime(2024, 2, 28, 9, 15), &quot;km&quot;: 0},
    {&quot;Zeit&quot;: datetime.datetime(2024, 2, 28, 14, 45), &quot;km&quot;: 25},
]
</code></pre>
","2024-02-27 22:21:44","2","Answer"
"78070853","","How can I find the first time of each day in a list of dicts containing timestamps?","<p>I have a list of dicts like this:</p>
<pre><code>data = [
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 8, 0), &quot;km&quot;: 10},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 13, 30), &quot;km&quot;: 20},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 17, 30), &quot;km&quot;: 40},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 9, 15), &quot;km&quot;: 15},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 14, 45), &quot;km&quot;: 25}
]
</code></pre>
<p>Now I want to find the first time of each day and assign km = 0. Which should lead to this:</p>
<pre><code>data = [
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 8, 0), &quot;km&quot;: 0},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 13, 30), &quot;km&quot;: 20},
    {&quot;Zeit&quot;: datetime(2024, 2, 27, 17, 30), &quot;km&quot;: 40},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 9, 15), &quot;km&quot;: 0},
    {&quot;Zeit&quot;: datetime(2024, 2, 28, 14, 45), &quot;km&quot;: 25}
]
</code></pre>
<p>How can I do this?</p>
<p>So far I did not even find a good starting point to approach this issue.</p>
","2024-02-27 22:13:59","1","Question"
"78070592","78070484","","<p>When you are looping through the dictionary the values passed into dollar are the keys of the dictionary not the values. Instead you want to use <code>data_store[&quot;bpi&quot;].values()</code> since this will loop through the values which in your case are dictionarie, then you can use <code>dollar[&quot;rate_float&quot;]</code>.</p>
<p>The code would be:</p>
<pre><code>import sys
import requests
import json

if len(sys.argv) != 2:
    print(&quot;Missing command-line argument&quot;)

# Check if the user is giving a parameter after the program name

elif sys.argv[1].isalpha():
    print(&quot;Comand-line argument is not a number&quot;)

# Check if the user is giving numbers

else:
    response = requests.get(&quot;https://api.coindesk.com/v1/bpi/currentprice.json&quot;)

# Get a json from coindesk

    data_store = response.json()

# Store the json in the variable &quot;data_store&quot;

    for dollar in data_store[&quot;bpi&quot;].values():

# Loop over the dictionary to pick the price in dollar
        
        print(dollar[&quot;rate_float&quot;])
</code></pre>
","2024-02-27 21:11:54","1","Answer"
"78070515","78070444","","<pre><code>class Foo:
    bar = {k: 0 if v % 2 == 0 else v for k, v in {&quot;hello&quot;: 123, &quot;world&quot;: 456}.items()}
</code></pre>
","2024-02-27 20:53:49","0","Answer"
"78070484","","Why is looping over a dictionary (made form a json) leading to an error?","<p>I am trying to learn python. In this context, I get a json, and get a specific value. However, I get the following error:</p>
<blockquote>
<p>string indices must be integers, not &quot;str&quot;.&quot;</p>
</blockquote>
<p>for my last line of code:</p>
<pre><code>print(dollar[&quot;rate_float&quot;])
</code></pre>
<p>I have seen other questions on the topic, such as this <a href=""https://stackoverflow.com/questions/6077675/why-am-i-seeing-typeerror-string-indices-must-be-integers"">one</a>, but I am not able to apply it or really understand it.</p>
<p>My code is as follows:</p>
<pre><code>import sys
import requests
import json

if len(sys.argv) != 2:
    print(&quot;Missing command-line argument&quot;)

# Check if the user is giving a parameter after the program name

elif sys.argv[1].isalpha():
    print(&quot;Command-line argument is not a number&quot;)

# Check if the user is giving numbers

else:
    response = requests.get(&quot;https://api.coindesk.com/v1/bpi/currentprice.json&quot;)

# Get a json from coindesk

    data_store = response.json()

# Store the json in the variable &quot;data_store&quot;

    for dollar in data_store[&quot;bpi&quot;]:

# Loop over the dictionary to pick the price in dollar
        
        print(dollar[&quot;rate_float&quot;])
</code></pre>
<p>After adapting the code as follows, based on the comments, I get another error: &quot;name &quot;bpi&quot; is not defined&quot;.</p>
<pre><code># Store the json in the variable &quot;data_store&quot;

    for dollar in data_store[bpi.values()]:

# Loop over the dictionary to pick the price in dollar

        print(dollar[rate_float.values()])
</code></pre>
<p>The Json is as follows:</p>
<pre><code>{
  &quot;time&quot;: {
    &quot;updated&quot;: &quot;Feb 27, 2024 20:16:10 UTC&quot;,
    &quot;updatedISO&quot;: &quot;2024-02-27T20:16:10+00:00&quot;,
    &quot;updateduk&quot;: &quot;Feb 27, 2024 at 20:16 GMT&quot;
  },
  &quot;disclaimer&quot;: &quot;This data was produced from the CoinDesk Bitcoin Price Index (USD). Non-USD currency data converted using hourly conversion rate from openexchangerates.org&quot;,
  &quot;chartName&quot;: &quot;Bitcoin&quot;,
  &quot;bpi&quot;: {
    &quot;USD&quot;: {
      &quot;code&quot;: &quot;USD&quot;,
      &quot;symbol&quot;: &quot;&amp;#36;&quot;,
      &quot;rate&quot;: &quot;57,197.495&quot;,
      &quot;description&quot;: &quot;United States Dollar&quot;,
      &quot;rate_float&quot;: 57197.4947
    },
    &quot;GBP&quot;: {
      &quot;code&quot;: &quot;GBP&quot;,
      &quot;symbol&quot;: &quot;&amp;pound;&quot;,
      &quot;rate&quot;: &quot;45,108.976&quot;,
      &quot;description&quot;: &quot;British Pound Sterling&quot;,
      &quot;rate_float&quot;: 45108.9758
    },
    &quot;EUR&quot;: {
      &quot;code&quot;: &quot;EUR&quot;,
      &quot;symbol&quot;: &quot;&amp;euro;&quot;,
      &quot;rate&quot;: &quot;52,744.155&quot;,
      &quot;description&quot;: &quot;Euro&quot;,
      &quot;rate_float&quot;: 52744.1549
    }
  }
}
</code></pre>
","2024-02-27 20:46:23","0","Question"
"78070473","78070444","","<p>I don't understand the need for a 1 liner. When you write to a class, you can access the attributes of the class while it is loading into memory.</p>
<pre><code>class Foo:
    bar = dict(hello=123,world=456)
    bar = {k:(Foo.bar[k] if Foo.bar[k]%2 else 0) for k in Foo.bar}
</code></pre>
","2024-02-27 20:44:46","-1","Answer"
"78070456","78070444","","<p>Iterate over the dictionary's <code>.items()</code> instead of just iterating over the dictionary (which is equivalent to iterating over its keys)</p>
<pre><code>bar = {key: (value if value % 2 else 0) for key, value in {&quot;hello&quot;: 123, &quot;world&quot;: 456}.items()}
</code></pre>
<p>This feels icky to me, because it's unnecessary work to first define the dictionary and then iterate over all its contents. Especially for the case of a dictionary containing a million entries you mention in your comments.
I'd suggest you programmatically modify your dictionary and output the modified dictionary, and then use that output instead to define your class variable.</p>
<p>In a separate script, do:</p>
<pre><code>import json
bar = {key: (value if value % 2 else 0) for key, value in {&quot;hello&quot;: 123, &quot;world&quot;: 456}.items()}
with open('bar_dict.json', 'w') as f:
    json.dump(bar, f)
</code></pre>
<p>Then, copy the contents of <code>bar_dict.json</code> into the definition of <code>bar</code> in your class.</p>
","2024-02-27 20:40:14","1","Answer"
"78070444","","Is there a concise one liner to process and replace values in a dictionary? (using some form of dictionary comprehension)","<p>say you have a class like</p>
<pre><code>class Foo:
  bar = {&quot;hello&quot;: 123, &quot;world&quot;: 456}
</code></pre>
<p>And I want to define <code>Foo.bar</code> such that for all the keys and values of <code>bar</code>, all even values are replaced with 0.</p>
<p>Is there a clean way to do that in one line? The issue is that the dictionary <code>{&quot;hello&quot;: 123, &quot;world&quot;: 456}</code> is not stored into a variable yet (I want <code>bar</code> to be defined with the processing already happened)</p>
<p>So the below is impossible because <code>d</code> is not a variable, but it feels (to me) like <code>d</code> has to be defined to do the one liner I'm asking for.</p>
<pre><code>class Foo:
  bar = {key: (d[key] if not d[key] % 2 else 0) for key in {&quot;hello&quot;: 123, &quot;world&quot;: 456}}
</code></pre>
<p>Is what I'm asking for impossible?</p>
","2024-02-27 20:35:25","0","Question"
"78068896","78056974","","<p>i figured out a psuedo way to do it:</p>
<pre><code>from types import FunctionType
import inspect

def getFunctionDefinedVariables(function: FunctionType) -&gt; dict:
    with open(&quot;TEMPORARYFILE.py&quot;, &quot;w&quot;) as f:
        codeblock = inspect.getsource(function)
        codeblock = remove_indents_and_top_line
        f.write(codeblock)
        imported_temp_file = __import__(&quot;TEMPORARYFILE.py&quot;)
        return {key: val for key, val in imported_temp_file.__dict__.items() if not (key.startswith('__') and key.endswith('__'))}
</code></pre>
<p>Will update once im done making the full function</p>
<p>Edit:
JK found a different way to do what i wanted</p>
<p>Edit2: JK again i made it anyway for a different project</p>
<pre><code>import inspect
import os

from types import FunctionType
from typing import Any
from textwrap import dedent
from importlib import import_module as imp
from importlib import invalidate_caches as inv
from time import sleep

def getFunctionDefinedVariables(function: FunctionType) -&gt; dict[str, Any]:
    with open(&quot;TEMPORARYFILE.py&quot;, &quot;w&quot;) as f:
        sleep(10.0)
        f.write(&quot;\n&quot;.join([dedent(string) for string in inspect.getsource(function).split(&quot;\n&quot;)[1:]]))
    inv()
    try:
        import TEMPORARYFILE as imported_temp_file
    except ImportError:
        raise ImportError(&quot;Error making temp.&quot;)
    items = imported_temp_file.__dict__.items()
    os.remove(&quot;TEMPORARYFILE.py&quot;)
    return {key: val for key, val in items if not (key.startswith('__') and key.endswith('__'))}
        
    
def test():
    x = None
    y = 1
    z = &quot;2&quot;

if __name__ == &quot;__main__&quot;:
    for key, val in getFunctionDefinedVariables(test).items():
        print(f&quot;{key}: {val}&quot;)
</code></pre>
","2024-02-27 16:00:37","0","Answer"
"78067681","78067647","","<p>Use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.get.html"" rel=""nofollow noreferrer""><code>str.get</code></a> to access the dictionary key and <a href=""https://pandas.pydata.org/docs/user_guide/indexing.html#boolean-indexing"" rel=""nofollow noreferrer"">boolean indexing</a>:</p>
<pre><code>out = df[df['Location'].str.get('State').eq('NY')]
</code></pre>
<p>Alternatively, with a list comprehension:</p>
<pre><code>out = df[[d.get('State')=='NY' for d in df['Location']]]
</code></pre>
<p>Output:</p>
<pre><code>     Name  Age                             Location
1     Bob   30  {'City': 'New York', 'State': 'NY'}
2  Aritra   35    {'City': 'Albany', 'State': 'NY'}
</code></pre>
","2024-02-27 12:47:14","2","Answer"
"78067647","","Pandas: Filter rows on value in dictionaries in Series","<p>Some columns in my dataframe consist of dictionaries themselves, like this dataframe:</p>
<pre><code>df = pd.DataFrame({'Name': ['Alice', 'Bob', 'Aritra'],
                   'Age': [25, 30, 35],
                   'Location': [
                      {'City': 'Seattle', 'State': 'WA'}, 
                      {'City': 'New York', 'State': 'NY'}, 
                      {'City': 'Albany', 'State': 'NY'}
                    ]
                    })

df
    Name    Age Location
0   Alice   25  {'City': 'Seattle', 'State': 'WA'}
1   Bob     30  {'City': 'New York', 'State': 'NY'}
2   Aritra  35  {'City': 'Albany', 'State': 'NY'}
</code></pre>
<p>How can I filter the dataframe on a value in that dictionary?</p>
<p>When I just want one value, I can do this:</p>
<pre><code>df['Location'][0]['State'] 
'WA'
</code></pre>
<p>But the issue is that the index is necessary in between the column name and the dictionary key. Thus something like <code>df[df['Location']['State'] == 'NY']</code> to select all people from NY won't work.</p>
<p>Is there a way to include any index, or must this be done otherwise?</p>
<p>The desired output is</p>
<pre><code>    Name    Age Location
1   Bob     30  {'City': 'New York', 'State': 'NY'}
2   Aritra  35  {'City': 'Albany', 'State': 'NY'}
</code></pre>
","2024-02-27 12:42:45","1","Question"
"78063668","78063614","","<p>Go over each item and check its keys, if any is 0 remove the whole item:</p>
<pre><code>for item in result:
    if all(item[key] != 0 for key in item.keys()):
        final_result.append(item)
</code></pre>
<p>at the and the result will contain the values you wanted</p>
","2024-02-26 20:24:35","0","Answer"
"78063614","","Removing dictionary from list of dictionaries if some value is equal 0","<p>I have a list of dictionaries like this:</p>
<pre><code>result = [{'Prudence': 1, 'PVP': 215.0, 'OFF': 172.0}, {'Temperance': 0, 'PVP': 185.0, 'OFF': 148.0}, {'Humility': 1, 'PVP': 175.0, 'OFF': 140.0}, {'Faith': 0, 'PVP': 165.0, 'OFF': 132.0}, {'Charity': 0, 'PVP': 155.0, 'OFF': 124.0}, {'Courage': 1, 'PVP': 285.0, 'OFF': 228.0}]
</code></pre>
<p>and I want to obtain a list of dictionaries that value of each keys is not equal 0 like this:</p>
<pre><code>final_result=[{'Prudence': 1, 'PVP': 215.0, 'OFF': 172.0}, {'Humility': 1, 'PVP': 175.0, 'OFF': 140.0}, {'Courage': 1, 'PVP': 285.0, 'OFF': 228.0}]
</code></pre>
<p>I tried to use for but I have not the final_result.</p>
<p>Thanks in advance.</p>
","2024-02-26 20:11:46","-1","Question"
"78063517","78063209","","<p>You can make them a part of the <code>sheet</code> then just make the background <code>clear</code>.</p>
<pre><code>.presentationBackground(content: {
                    Color.clear
                })
.presentationDragIndicator(.hidden)
</code></pre>
<p>Here is an example.</p>
<pre><code>import SwiftUI
import MapKit
struct MapSetupView: View {
    var body: some View {
        Map()
            .sheet(isPresented: .constant(true)) {
                VStack {
                    //Buttons
                    HStack {
                        Button(&quot;&quot;, systemImage: &quot;person&quot;) {
                            
                        }.buttonStyle(.borderedProminent)
                        Spacer()
                        Button(&quot;&quot;, systemImage: &quot;checkmark&quot;) {
                            
                        }.buttonStyle(.borderedProminent)
                    }.frame(height: 50)
                    //Sheet
                    RoundedRectangle(cornerRadius: 10)
                        .fill(Color(UIColor.systemBackground))
                        .shadow(radius: 5)
                }
                .presentationDetents([.fraction(0.2), .large])
                
                .presentationBackground(content: {
                    Color.clear
                })
                .presentationDragIndicator(.hidden)
                .ignoresSafeArea()
            }
    }
}

#Preview {
    MapSetupView()
}
</code></pre>
","2024-02-26 19:50:38","1","Answer"
"78063209","","Where to place floating buttons to move up/down based on presented sheet dynamic height?","<p>I'm new to SwiftUI. I want to place a floating button on Map, but this needs to move based on bottom presenting sheet. Bottom present sheet height will be dynamic and it will minimise and maximise based on swipe up/down.</p>
<p>Here is the images for your reference:</p>
<p><a href=""https://i.sstatic.net/4dPYr.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/4dPYr.jpg"" alt=""enter image description here"" /></a> <a href=""https://i.sstatic.net/J07ho.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/J07ho.png"" alt=""enter image description here"" /></a></p>
<p>Here is the sample code:</p>
<pre><code>Map {
       Annotation(&quot;&quot;, coordinate: CLLocationCoordinate2D(latitude: Double(deviceViewModel.currentDevice.lat) ?? 0,
                                                                  longitude: Double(deviceViewModel.currentDevice.lng) ?? 0)) {
            DropPinView(deviceViewModel: deviceViewModel)
         }
     }
     .sheet(isPresented: .constant(true)) {
        MapTabSheetView()
           .presentationDetents([.fraction(0.1), .fraction(0.3)])
           .presentationCornerRadius(32)
           .presentationDragIndicator(.automatic)
           .presentationBackgroundInteraction(.enabled(upThrough: .fraction(0.3)))
           .interactiveDismissDisabled()
     }
</code></pre>
","2024-02-26 18:41:56","0","Question"
"78062715","78062685","","<p>You can use the built-in JSON parser to convert this to a dictionary like so:</p>
<pre><code>import json

for item in json.loads(data['test'][0]):
    print(item, type(item))

# &gt;&gt;&gt; {'Day': 'Monday', 'Device': 'Android', 'Data': [1, 2, 3]} &lt;class 'dict'&gt;
# &gt;&gt;&gt; {'Day': 'Tuesday', 'Device': 'Iphone', 'Data': [10, 20, 30]} &lt;class 'dict'&gt;
</code></pre>
<p>Note: printing <code>type(item)</code> is just to demonstrate that they're being converted to <code>dict</code> appropriately</p>
","2024-02-26 17:10:38","2","Answer"
"78062685","","Issue in iterating over Python dictionaries with lists and sub-dictionaries","<p>I have a data structure I have read from a file which looks like below -</p>
<pre><code>data = {&quot;test&quot;:['[{&quot;Day&quot;:&quot;Monday&quot;,&quot;Device&quot;:&quot;Android&quot;,&quot;Data&quot;:[1, 2, 3]}, {&quot;Day&quot;:&quot;Tuesday&quot;,&quot;Device&quot;:&quot;Iphone&quot;,&quot;Data&quot;:[10, 20, 30]}]']}
</code></pre>
<p>I am trying to access the elements of the structure like below, peeling off one by one -</p>
<pre><code>value = data[&quot;test&quot;]
print(value)
#['[{&quot;Day&quot;:&quot;Monday&quot;,&quot;Device&quot;:&quot;Android&quot;,&quot;Data&quot;:[1, 2, 3]}, {&quot;Day&quot;:&quot;Tuesday&quot;,&quot;Device&quot;:&quot;Iphone&quot;,&quot;Data&quot;:[10, 20, 30]}]']

value1 = value[0]
print(value1)
#[{&quot;Day&quot;:&quot;Monday&quot;,&quot;Device&quot;:&quot;Android&quot;,&quot;Data&quot;:[1, 2, 3]}, {&quot;Day&quot;:&quot;Tuesday&quot;,&quot;Device&quot;:&quot;Iphone&quot;,&quot;Data&quot;:[10, 20, 30]}]


print(value1[0]) 
#I get only [ as if it is a string
</code></pre>
<p>Does the incoming structure has some problems, or am I accessing the wrong way.</p>
<p>Here is the link to reproduce - <a href=""https://godbolt.org/"" rel=""nofollow noreferrer"">https://godbolt.org/</a></p>
","2024-02-26 17:05:05","0","Question"
"78061285","","Sorting nested dictionaries at two levels from TOML configuration","<p>I have the idea to create a TOML configuration file which defines some sort of job chain to be executed. Those jobs are not executed immediate, there may be a break in between, so there should also be some grouping to have the chance to do something in between the chain.</p>
<p>An example TOML file looks like this:</p>
<pre class=""lang-ini prettyprint-override""><code>[jobid_3.2]
name='script_3.2'
type='sql'
[jobid_10.1]
name='whatever_works'
type='shell'
[jobid_1.1]
name='script_1.1'
type='shell'
[jobid_3.1]
name='foobar'
type='shell'
[jobid_2.1]
name='barbaz'
type='shell'
[jobid_2.2]
name='script_2.2'
type='sql'
</code></pre>
<p>So, the order is a bit messy, therefore the configuration read should then be in some ordered state.</p>
<p>Problem 1: when reading the TOML string in to a variable, you end up with nested dictionaries, in this case 3 (jobid_xxx, y, and then a dict with name type)<br />
Problem 2: TOML recognizes an integer as string, not as an integer if used as arrays of tables. That means we have to do some conversion in the first nested dictionary.<br />
Problem 3: sorting on the first level should happen on the digit, not on the string itself. Of course, I could use <code>[3.2]</code> instead of <code>[jobid_3.2]</code>, but this actually looks a bit nicer and descriptive.</p>
<p>So, how to solve this?</p>
","2024-02-26 13:27:48","1","Question"
"78061286","78061285","","<p>It took me some time how this may work, with a lot of trials and fails. However, the working solution looks like this:</p>
<pre class=""lang-py prettyprint-override""><code>import tomli
from collections import OrderedDict

string = &quot;&quot;&quot;[jobid_3.2]
name='script_3.2'
type='sql'
[jobid_10.1]
name='whatever_works'
type='shell'
[jobid_1.1]
name='script_1.1'
type='shell'
[jobid_3.1]
name='foobar'
type='shell'
[jobid_2.1]
name='barbaz'
type='shell'
[jobid_2.2]
name='script_2.2'
type='sql'
&quot;&quot;&quot;

t = tomli.loads(string)

scripts = OrderedDict(
    sorted(
        {
            k_outer: dict(
                sorted(
                    {
                        int(k_inner): v_inner for k_inner, v_inner in v_outer.items()
                    }.items()
                )
            )
            for k_outer, v_outer in t.items()
        }.items(),
        key=lambda x: int(re.match(&quot;^.+_(\d+)&quot;, x[0]).group(1)),
    )
)

print(scripts)
</code></pre>
<p>The output:</p>
<pre><code>OrderedDict([('jobid_1', {1: {'name': 'script_1.1', 'type': 'shell'}}),
             ('jobid_2',
              {1: {'name': 'barbaz', 'type': 'shell'},
               2: {'name': 'script_2.2', 'type': 'sql'}}),
             ('jobid_3',
              {1: {'name': 'foobar', 'type': 'shell'},
               2: {'name': 'script_3.2', 'type': 'sql'}}),
             ('jobid_10', {1: {'name': 'whatever_works', 'type': 'shell'}})])
</code></pre>
<p>It really looks comlicated, it took me half a day to figure this out, but it works great.</p>
<p>The most inner sort is for dictionaries on level 2, where we also want to convert the digit string into an ordinary integer. Therefore we have to take the values from the parent dictionary (v_outer). The outer <code>sorted</code> is to finally do the sort overall on level one. We use a regex and convert the match into an integer, so that we get 1,2,3,4,..., 10 and not 1,10,2,3,4,...</p>
<p>As an alternative you could use <code>[3.2]</code> as table marker and leave out the trailing string <code>jobid_</code>, therefore you might want to change the code a bit:</p>
<pre class=""lang-py prettyprint-override""><code>scripts = OrderedDict(
    sorted(
        {
            int(k_outer): dict(
                sorted(
                    {int(k_inner): v_inner for k_inner, v_inner in v_outer.items()}.items()
                )
            ) for k_outer, v_outer in t.items()
        }.items()
    )
)
</code></pre>
<p>You can drop the key in the outer <code>sorted</code>, but you need to convert the string into an integer.</p>
<p>If there's maybe an easier way out there, please share this here, I'd be very interested!</p>
","2024-02-26 13:27:48","1","Answer"
"78059796","78058916","","<blockquote>
<p>For integers with unknown domain, is there a similar approach to the bitshift the uniqueness of the resulting key, but doesn't involve a string cast?</p>
</blockquote>
<p>No. Integers with an unknown domain carry at least 53 bits of information, so there's no way to fit two integers into a single JS number (max 64 bits of information) without collisions.</p>
","2024-02-26 09:21:18","3","Answer"
"78059649","78058916","","<p>I usually use a nested object for this. Could be replaced with <code>map</code> also (more coding):</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>class CoordMap{
  map = {};
  set(coord, val){
    (this.map[coord[0]] ??= {})[coord[1]] = val;
  }
  get(coord){
    return this.map[coord[0]]?.[coord[1]];
  }
}

const map = new CoordMap;
const coordinates = [1, 3];

map.set(coordinates, 0);
console.log(map.get([1, 3]));</code></pre>
</div>
</div>
</p>
","2024-02-26 08:51:53","1","Answer"
"78058916","","How can I create a Map keyed with pairs of integers?","<p>JavaScript <code>Map</code>s compare object keys by identity, which means <code>Map&lt;[number, number], T&gt;</code> is a bad idea:</p>
<pre><code>const map = new Map();
const coordinates = [1, 3];

map.set(coordinates, 0);
map.get([1, 3]);
# undefined
</code></pre>
<p>To avoid this, we commonly see keys set as <code>`${a}_${b}`</code>. That's reasonably fast, but it involves number-to-string conversion. If we know the range of A and B, we could do <code>(a &lt;&lt; 8) + b</code> which is 2-3x faster in my testing: <a href=""http://jsben.ch/JRG9z"" rel=""nofollow noreferrer"">http://jsben.ch/JRG9z</a></p>
<p>For integers with unknown domain, is there a similar approach to the bitshift the uniqueness of the resulting key, but doesn't involve a string cast?</p>
","2024-02-26 06:20:23","2","Question"
"78058242","78058159","","<p>The <code>std::map&lt;&gt;::operator[]</code> need the objet to be default constructible. Here you can't use this operator. Other <code>map</code> functions are accessible.</p>
<pre class=""lang-cpp prettyprint-override""><code>   auto fd = marketBuys.find(order.symbol);
   if ( fd == marketBuys.end() ) {
      fd = marketBuys.emplace(order.symbol, priorityQueue(Compare(true))).first;
   }
   fd-&gt;second.push(std::make_pair(order.orderId, order.price));
</code></pre>
","2024-02-26 01:12:58","0","Answer"
"78058159","","How to create and use a map of priority queues with a custom comparator?","<p>For context, I would like to create an &quot;order backlog&quot; where I have a map of string keys(symbol) and the value would be a priority queue, which contains all the orders for that symbol in a prioritized manner.</p>
<p>My custom comparator, which takes in a boolean since buy orders and sell orders have the oppposite prioritization:</p>
<pre><code>struct Compare{
    bool buySide;
    Compare(bool side) : buySide(side) {}
    bool operator()(pair&lt;int, float&gt; order1, pair&lt;int, float&gt; order2) {
        if (buySide) {
            return order1.second &lt; order2.second;
        }
        return order1.second &gt; order2.second;
    };
};
</code></pre>
<p>I'm trying to create a map like so:</p>
<pre><code>typedef priority_queue&lt;pair&lt;int, float&gt;, vector&lt;pair&lt;int, float&gt;&gt;, Compare&gt; priorityQueue;
map&lt;string, priorityQueue&gt; marketBuys;
</code></pre>
<p>and then using it like so:</p>
<pre><code>if (marketBuys.find(order.symbol) == marketBuys.end()) {
    marketBuys[order.symbol] = priorityQueue(Compare(true));
}
marketBuys[order.symbol].push(make_pair(order.orderId, order.price));
</code></pre>
<p>However, I don't think I'm creating the priority queue correctly, and the important part is I need to somehow instantiate the priority queue with the correct prioritization, so I have to use the comparator constructor. I'm getting errors like</p>
<pre><code>error: no matching function for call to ‘std::priority_queue&lt;std::pair&lt;int, float&gt;, std::vector&lt;std::pair&lt;int, float&gt; &gt;, Compare&gt;::priority_queue()’
</code></pre>
<p>If I just wanted a standalone priority queue, I would create it like so:</p>
<pre><code>priority_queue&lt;pair&lt;int, float&gt;, vector&lt;pair&lt;int, float&gt;&gt;, Compare&gt; priorityQueue(Compare(true));
</code></pre>
<p>But I can't figure out how to put those inside maps. I also tried:</p>
<pre><code>if (marketBuys.find(order.symbol) == marketBuys.end()) {
    priorityQueue pq(Compare(true));
    marketBuys[order.symbol] = pq;
}
marketBuys[order.symbol].push(make_pair(order.orderId, order.price));
</code></pre>
<p>which also didn't work.</p>
","2024-02-26 00:25:59","0","Question"
"78057826","","How to generate all possible association rule using frequent itemset?","<p>I have a dictionary with key as frequent itemsets and value as support of that itemset. Now, I want to generate all possible association rule (X --&gt; Y). How can I do this? Is there any inbuilt python function to do this?</p>
<p>Using the generated association rule, I want to calculate strong association rule (rules that have confidence greater than minimum confidence). I can do this but how to generate all association rule?</p>
","2024-02-25 21:54:22","0","Question"
"78057589","78057515","","<p>I would do it following way, let <code>file.csv</code> content be</p>
<pre><code>columnA,columnB
cell1,cell2
cell3,cell4
</code></pre>
<p>then</p>
<pre><code>with open(&quot;file.csv&quot;, &quot;r&quot;) as f:
    headers = next(f).strip().split(&quot;,&quot;)
    for line in f:
        print(dict(zip(headers,line.strip().split(&quot;,&quot;))))
</code></pre>
<p>gives output</p>
<pre><code>{'columnA': 'cell1', 'columnB': 'cell2'}
{'columnA': 'cell3', 'columnB': 'cell4'}
</code></pre>
<p>Explanation: firstly I create list of headers, to do so I instruct python to consume 1st line (<code>next(f)</code>), remove leading and trailing whitespace characters (<code>.split()</code>) and split at commas. For each following line I do same thing to given line and then use dict-zip to create dictionary from two lists, where elements at same position in each list are key value pair.</p>
","2024-02-25 20:30:07","0","Answer"
"78057515","","How can I print lines of a .csv file to a python dictionary without using any modules, while including the headers as keys with each value?","<p>For example, say my data is in the form:</p>
<pre class=""lang-none prettyprint-override""><code>Column A,Column B
Cell 1,Cell 2
Cell 3,Cell 4
</code></pre>
<p>and I want to end up with several dictionaries that look like:</p>
<pre><code>{&quot;Column A&quot;:&quot;Cell 1&quot;, &quot;Column B&quot;:&quot;Cell 2&quot;}
{&quot;Column A&quot;:&quot;Cell 3&quot;, &quot;Column B&quot;:&quot;Cell 4&quot;}
{&quot;Column A&quot;:&quot;Cell 5&quot;, &quot;Column B&quot;:&quot;Cell 6&quot;}
</code></pre>
<p>The csv file I'm using has several named columns, and I want to basically print a dictionary using the column header as the key, with it's associated cell as the value. Right now I seem to be stuck either printing a dictionary like:</p>
<pre><code>
{&quot;Column A&quot;:&quot;Cell 1&quot;, &quot;Cell 2&quot;}
</code></pre>
<p>or just being able to get a dictionary for one value like:</p>
<pre><code>{&quot;Column A&quot;:&quot;Cell 1&quot;}
</code></pre>
<p>I've looked up similar problems on here already, but I'm still new to python and can't seem to figure out the answer for this specific problem.</p>
<pre><code>with open('file_name.csv') as filename:
    linelist = []
    output_dict = {}
    for i in filename:
        linelist.append(i.split(&quot;,&quot;))
        for line in linelist:
            header = linelist[0]
            value = linelist[1:]
            for j in line:
                output_dict.update({header[0]:line[0]})
</code></pre>
<p>At this point this is what I have, but I've just been aimlessly trying to add and take away parts of it so this doesn't even work now.</p>
","2024-02-25 20:06:51","0","Question"
"78056974","","How do i get a dictionary of all variables defined in the scope of a function?","<p>So i want to get every variable from a function as a dictionary. Like this:</p>
<pre class=""lang-py prettyprint-override""><code>from typing import Any

def myfunc():
  var1 = 10
  var2 = 20
  var3 = 30
  var4 = '40'
  var5 = False

x: dict[str, Any] = myfunc.vars
hardtyped_x = { # What i want x to be. Not including parameters
  'var1': 10,
  'var2': 20,
  'var3': 30,
  'var4': '40',
  'var5': False
}
</code></pre>
<p>I tried asking tabnine and got something along the lines of:</p>
<pre class=""lang-py prettyprint-override""><code>import inspect

def myfunc():
  var1 = 10
  var2 = 20
  var3 = 30
  var4 = '40'
  var5 = False

x = inspect.currentframe().f_back.f_locals

</code></pre>
<p>but this either raises an error (as currentframe() can return None and this raises an error) or i get a long list of dunder methods and other things of the sort</p>
","2024-02-25 17:34:22","-2","Question"
"78054796","78053989","","<p>From your stack it appears that the problem is with the argument to a <code>,</code> message (which you intend to be string concatenation). I suspect that the problem is with this line:</p>
<pre><code>Transcript show: 'result: ', result; cr.
</code></pre>
<p>If <code>result</code> is not a string, then it will try to store a Dictionary into a String, giving an &quot;improper store&quot; error.</p>
","2024-02-25 03:57:22","0","Answer"
"78054681","78039296","","<p>In this instance, the issue was resolved by converting the dictionary key to a string using VBA CStr function. The cause could be that the values of the key are 14 numerical characters and may be the cause of the slow processing unless converted to Strings.</p>
","2024-02-25 02:35:44","0","Answer"
"78053989","","Problem Working with Arrays in Pharo 11.0","<p>I am working on a class named <code>Boggle</code> which contains two class-side methods below:</p>
<pre><code>search: board for: words 
  | result visited trie | 
  result := Dictionary new.
  trie := CTTrie new.
  words do: [:word | trie at: word put: word].
  visited := (1 to: board size) collect: [:i | 
    (1 to: board first size) collect: [:j | false].
  ].
  board doWithIndex: [:row :i | 
    row doWithIndex: [:char :j | 
      self 
        searchUtil: board 
        visited: visited 
        i: i 
        j: j 
        prefix: '' 
        final: Array new 
        result: result 
        trie: trie.
    ].
  ].
  ^result
  
searchUtil: board visited: visited i: i j: j prefix: prefix final: final result: result trie: trie 
    
  | newPrefix newFinal| 
  (visited at: i) at: j put: true. 
  newPrefix := prefix, ((board at: i) at: j) asString. 
  newFinal := final copyWith: i @ j. 
  Transcript show: '1'; cr. 
  Transcript show: 'newPrefix: ', newPrefix; cr. 
  Transcript show: 'newFinal: ', newFinal; cr. 
  (trie contains: newPrefix) ifTrue: [ 
    result at: newPrefix put: newFinal.
  ].
  Transcript show: '2'; cr. 
  Transcript show: 'result: ', result; cr.
  (i - 1) to: (i + 1) do: [ :row |
    (j - 1) to: (j + 1) do: [ :col |
      ((row between: 1 and: board size) and: [
        col between: 1 and: (board at: row) size]) ifTrue: [
          ((visited at: row) at: col) ifFalse: [
            Transcript show: '3'; cr.
            self
              searchUtil: board
              visited: visited
              i: row
              j: col
              prefix: newPrefix
              final: newFinal
              result: result
              trie: trie ] ] ] ].
    (visited at: i) at: j put: false
</code></pre>
<p><strong>Input:</strong></p>
<p>The first argument to this method will <code>board</code>, represented as a static array of arrays whose elements are characters. For example, <code>#(#($e $a) #($s $t))</code>. The second argument will be an array of strings (<code>words</code>) representing the list of legal words, e.g. <code>#(‘east’ ‘ate’ ‘john’ … )</code> and so on.</p>
<p><strong>Output:</strong></p>
<p><code>search:for:</code> method will return a dictionary. The keys will be the words that the method found, and the value at each key will be an array of points. Each point corresponds to the 2D index of the corresponding characters, which make up the word, in the board.</p>
<p>When I test the methods with the sample below,</p>
<pre><code>Transcript clear. 
words := #('ea' 'eat' 'ate' 'east' 'sat' 'hello' 'girl' 'guy'). 
board := #( #( $e $a ) #( $s $t ) ). 
result := Dictionary new. 
result := Boggle search: board for: words. 
Transcript show: result; cr.
</code></pre>
<p>I get this error:</p>
<p><a href=""https://i.sstatic.net/Y1ImS.png"" rel=""nofollow noreferrer"">Error: Improper store into indexable object</a></p>
<p>Clearly the issue is with <code>newFinal</code> array not being updated. <code>newFinal := final copyWith: i @ j</code> updates the value of <code>newFinal</code> array, and the initial value of the final in the <code>search:for:</code> method has been set to <code>Array new</code> which produces an empty array.</p>
<p><a href=""https://i.sstatic.net/z4Qte.png"" rel=""nofollow noreferrer"">Output from running the test</a></p>
<p>The actual output should be</p>
<pre><code>a Dictionary('ea'-\&gt;#((1@1).(1@2)) 'eat'-\&gt;#((1@1).(1@2).(2.2)) ...)
</code></pre>
<p>and so on.</p>
<p>This is all I have been able to figure out. Any help to resolve this issue is greatly appreciated. Thanks in advance.</p>
","2024-02-24 21:06:29","0","Question"
"78052414","78044448","","<p>You could write something like this with plain scala using recursive traversal and pattern matching. It's not just scala but a functional way.</p>
<pre class=""lang-scala prettyprint-override""><code>val initList = List(&quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;b&quot;, &quot;b&quot;, &quot;c&quot;, &quot;C&quot;)

@tailrec
def loop(list: List[String], res: Vector[List[String]] = Vector.empty): List[String] = {
  list match {
    case Nil =&gt;
      res.flatMap(_.reverse.zipWithIndex.map { case (str, idx) =&gt; if (idx == 0) str else s&quot;$str.$idx&quot; }).toList
    case xs =&gt;
      val (same, rest) = xs.span(_ == xs.head)
      loop(rest, res :+ same)
  }
}

loop(initList) should contain theSameElementsInOrderAs Seq(&quot;a&quot;, &quot;a.1&quot;, &quot;a.2&quot;, &quot;b&quot;, &quot;b.1&quot;, &quot;c&quot;, &quot;C&quot;)
</code></pre>
<p>Or even more elegant with <a href=""https://fs2.io/#/"" rel=""nofollow noreferrer"">fs2</a></p>
<pre class=""lang-scala prettyprint-override""><code>val initList = List(&quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;b&quot;, &quot;b&quot;, &quot;c&quot;, &quot;C&quot;)

val result =
  fs2.Stream
    .emits(initList)
    .groupAdjacentBy(identity)
    .map { case (_, groups) =&gt; groups }
    .map(_.zipWithIndex.map { case (str, idx) =&gt; if (idx == 0) str else s&quot;$str.$idx&quot; })
    .flatMap(fs2.Stream.chunk)
    .toList

result should contain theSameElementsInOrderAs Seq(&quot;a&quot;, &quot;a.1&quot;, &quot;a.2&quot;, &quot;b&quot;, &quot;b.1&quot;, &quot;c&quot;, &quot;C&quot;)
</code></pre>
","2024-02-24 12:35:29","1","Answer"
"78051199","78051176","","<p>The <code>response.json()</code> returns a dict, which you don't need to <code>await</code> with. You can try to change <code>data = await response.json()</code> to <code>data = response.json()</code> instead.</p>
","2024-02-24 04:19:49","0","Answer"
"78051176","","Error: ""object dict can't be used in 'await' expression"" in Telegram Bot using python-telegram-bot","<p>I am developing a Telegram bot using the python-telegram-bot framework and asyncio for asynchronous programming. My goal is to create a feature where users can click an 'AI' button in the Telegram bot to ask questions, which are then answered by ChatGPT via an integration I'm attempting to implement.</p>
<p>Here's the part of the code where I handle messages from users who are in an &quot;AI session&quot;. When a user sends a message, I check if they are in an AI session and, if so, send their message to ChatGPT for a response. However, I keep encountering the error &quot;object dict can't be used in 'await' expression&quot;, and I'm not sure why. I've been stuck on this issue for 5 hours.</p>
<p>main.py FILE:</p>
<pre><code>from typing import Final
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from gpt_integration import get_gpt_response

TOKEN: Final = 'xxxx'
BOT_USERNAME: Final = '@xxxx'

users_in_ai_session = {}


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    button_list = [
        [KeyboardButton(&quot;/AI&quot;),
         KeyboardButton(&quot;/price&quot;)]
    ]
    reply_markup = ReplyKeyboardMarkup(
        button_list, resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text(&quot;Welcome message...&quot;, reply_markup=reply_markup)


async def search_price_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(&quot;Please enter the contract address:&quot;)


async def AI_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    users_in_ai_session[user_id] = True
    await update.message.reply_text(
        &quot;You're now chatting with AI. Go ahead, ask me anything!&quot;)


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if users_in_ai_session.get(user_id, False):
        user_input = update.message.text
        # Implement this function based on your GPT model
        response = await get_gpt_response(user_input)
        await update.message.reply_text(response)
    else:
        # Handle non-AI messages
        print(&quot;Error&quot;)


async def error(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f'Update {update} caused error {context.error}')

if __name__ == '__main__':
    print('Starting bot')
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler('start', start_command))
    # 'AI' is meant to trigger AI interaction
    app.add_handler(CommandHandler('AI', AI_command))
    app.add_handler(CommandHandler('price', search_price_command))
    app.add_handler(MessageHandler(filters.TEXT, handle_message))
    app.add_error_handler(error)
    print('Fetching updates...')
    app.run_polling()

</code></pre>
<p>gpt_integration.py FILE:</p>
<pre><code>import httpx


async def get_gpt_response(message_text):
    async with httpx.AsyncClient() as client:
        response = await client.post(
            'https://api.openai.com/v1/completions',
            headers={
                'Authorization': 'xxxx'
            },
            json={
                'model': 'gpt-3.5-turbo',
                'prompt': message_text,
                'max_tokens': 50
            },
        )
    data = await response.json()
    return data['choices'][0]['text'].strip()
</code></pre>
<ol>
<li>Ensuring that all async functions are properly awaited.</li>
<li>Checking that get_gpt_response returns an awaitable object.</li>
<li>Reviewing Python's asyncio documentation for potential misuse of the await keyword.
I suspect the issue might be related to how I'm using the await keyword or possibly a misunderstanding of how to properly use dictionaries in asynchronous functions. Could someone please help me understand what's causing this error and how to fix it?</li>
</ol>
","2024-02-24 04:01:31","-1","Question"
"78050923","78048102","","<p>Using the nc dataset as a basis. This will also work with your labels list as stated in your comment. I have included other potential options, commented out, that also work:</p>
<pre><code>library(sf)
library(dplyr)
library(ggplot2)
library(viridis)

# Sample data
set.seed(1)
nc &lt;- st_read(system.file(&quot;shape/nc.shp&quot;, package = &quot;sf&quot;)) %&gt;%
  mutate(HAMAG_Bespovratna_IRI_Pod = sample(c(1:3.2e8), 100, replace = TRUE))

my_breaks &lt;- c(1,60000,1200000,24000000,320000000)
code_labels &lt;- c(&quot;1€&quot;,&quot;60.000 €&quot;,&quot;1.200.000 €&quot;,&quot;24.000.000 €&quot;,&quot;320.000.000 €&quot;)

ggplot(data = nc) +
  geom_sf(aes(fill= HAMAG_Bespovratna_IRI_Pod))+
  scale_fill_viridis(trans = &quot;log&quot;,
                     name=&quot;€&quot;,
                     breaks = my_breaks,
                     limits = c(1, 3.2e8),
                     # limits = range(my_breaks),
                     labels = scales::label_comma(),
                     # labels = code_labels,
                     alpha = 3/4) +
  labs(
    subtitle = &quot;HAMAG BICRO:Isplaćana bespovratna sredstva u razdoblju 2016-2023&quot;,
    caption = &quot;Data: HAMAG-BICRO&quot;
  ) +
  theme_minimal()
</code></pre>
<p><a href=""https://i.sstatic.net/9Sm4m.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9Sm4m.jpg"" alt=""result"" /></a></p>
","2024-02-24 01:10:24","1","Answer"
"78049517","78048725","","<p>Let's find out what an <code>entry</code> is in your case:</p>
<pre class=""lang-py prettyprint-override""><code>for entry in data[&quot;Monthly Adjusted Time Series&quot;]:
    print(entry)
</code></pre>
<p>Output:</p>
<pre><code>2024-02-22
2024-01-31
</code></pre>
<p>So, entry is just strings, which is the key part. What you want is the values part:</p>
<pre class=""lang-py prettyprint-override""><code>for entry in data[&quot;Monthly Adjusted Time Series&quot;].values():
    print(entry[&quot;5. adjusted close&quot;])
</code></pre>
<p>Output:</p>
<pre><code>184.2100
182.0211
</code></pre>
","2024-02-23 18:30:43","1","Answer"
"78049515","78049372","","<p>Since digits could be an empty string, you need to check for that earlier.
Move</p>
<pre><code>if digits==&quot;&quot;:
    return res
</code></pre>
<p>before</p>
<pre><code>temp = matchnums[digits[0]]
</code></pre>
","2024-02-23 18:29:58","0","Answer"
"78049372","","Index out of range error on Leetcode problem no 17","<p>can anyone tell me why i am getting an <strong>IndexError</strong> in the following code. It doesn't make any sense to me.</p>
<pre><code>class Solution(object):
    def letterCombinations(self, digits):
        matchnums={
        &quot;2&quot;:[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;],
        &quot;3&quot;:[&quot;d&quot;,&quot;e&quot;,&quot;f&quot;],
        &quot;4&quot;:[&quot;g&quot;,&quot;h&quot;,&quot;i&quot;],
        &quot;5&quot;:[&quot;j&quot;,&quot;k&quot;,&quot;l&quot;],
        &quot;6&quot;:[&quot;m&quot;,&quot;n&quot;,&quot;o&quot;],
        &quot;7&quot;:[&quot;p&quot;,&quot;q&quot;,&quot;r&quot;,&quot;s&quot;],
        &quot;8&quot;:[&quot;t&quot;,&quot;u&quot;,&quot;v&quot;],
        &quot;9&quot;:[&quot;w&quot;,&quot;x&quot;,&quot;y&quot;,&quot;z&quot;]
        }
        res = []
        temp = matchnums[digits[0]]
        if digits==&quot;&quot;:
            return res
        elif len(digits)==1:
            return matchnums[digits]
        else:
            for k in range(1,len(digits)):
                res=[]
                for i in range(len(temp)):
                    for j in range(len(matchnums[digits[k]])):
                        res.append(temp[i]+matchnums[digits[k]][j])
                temp=res
        return res
</code></pre>
<p>The error is in</p>
<pre><code>temp = matchnums[digits[0]]
</code></pre>
<p>line. What am i doing wrong?</p>
","2024-02-23 18:04:55","-1","Question"
"78048839","78048725","","<pre><code>import json

json_string = '''{
    &quot;Meta Data&quot;: {
        &quot;1. Information&quot;: &quot;Monthly Adjusted Prices and Volumes&quot;,
        &quot;2. Symbol&quot;: &quot;IBM&quot;,
        &quot;3. Last Refreshed&quot;: &quot;2024-02-22&quot;,
        &quot;4. Time Zone&quot;: &quot;US/Eastern&quot;
    },
    &quot;Monthly Adjusted Time Series&quot;: {
        &quot;2024-02-22&quot;: {
            &quot;1. open&quot;: &quot;183.6300&quot;,
            &quot;2. high&quot;: &quot;188.9500&quot;,
            &quot;3. low&quot;: &quot;178.7500&quot;,
            &quot;4. close&quot;: &quot;184.2100&quot;,
            &quot;5. adjusted close&quot;: &quot;184.2100&quot;,
            &quot;6. volume&quot;: &quot;67308725&quot;,
            &quot;7. dividend amount&quot;: &quot;1.6600&quot;
        },
        &quot;2024-01-31&quot;: {
            &quot;1. open&quot;: &quot;162.8300&quot;,
            &quot;2. high&quot;: &quot;196.9000&quot;,
            &quot;3. low&quot;: &quot;157.8850&quot;,
            &quot;4. close&quot;: &quot;183.6600&quot;,
            &quot;5. adjusted close&quot;: &quot;182.0211&quot;,
            &quot;6. volume&quot;: &quot;128121557&quot;,
            &quot;7. dividend amount&quot;: &quot;0.0000&quot;
        }
    }
}'''

data = json.loads(json_string)
monthly_adj_close = {date: data['Monthly Adjusted Time Series'][date]['5. adjusted close'] for date in data['Monthly Adjusted Time Series']}
print(monthly_adj_close)
</code></pre>
","2024-02-23 16:33:46","0","Answer"
"78048801","78048725","","<p>You say you have a JSON file. In which case:</p>
<pre><code>import json

with open(&quot;foo.json&quot;) as data:
    d = json.load(data)
    for v in d[&quot;Monthly Adjusted Time Series&quot;].values():
        print(v[&quot;5. adjusted close&quot;])
</code></pre>
","2024-02-23 16:27:14","1","Answer"
"78048776","78048725","","<p>Did you want to loop over the values? When you loop over a dict, it only gives the keys</p>
<pre><code>&gt;&gt;&gt; for _, entry in data[&quot;Monthly Adjusted Time Series&quot;].items():
...     print(entry[&quot;5. adjusted close&quot;])
...
184.2100
182.0211
</code></pre>
","2024-02-23 16:23:26","-1","Answer"
"78048725","","How to get a specific value from a JSON file","<p>I'm Trying to get the &quot;5. adjusted close&quot; data from this json file for each of the time periods.</p>
<pre class=""lang-json prettyprint-override""><code>{
    &quot;Meta Data&quot;: {
        &quot;1. Information&quot;: &quot;Monthly Adjusted Prices and Volumes&quot;,
        &quot;2. Symbol&quot;: &quot;IBM&quot;,
        &quot;3. Last Refreshed&quot;: &quot;2024-02-22&quot;,
        &quot;4. Time Zone&quot;: &quot;US/Eastern&quot;
    },
    &quot;Monthly Adjusted Time Series&quot;: {
        &quot;2024-02-22&quot;: {
            &quot;1. open&quot;: &quot;183.6300&quot;,
            &quot;2. high&quot;: &quot;188.9500&quot;,
            &quot;3. low&quot;: &quot;178.7500&quot;,
            &quot;4. close&quot;: &quot;184.2100&quot;,
            &quot;5. adjusted close&quot;: &quot;184.2100&quot;,
            &quot;6. volume&quot;: &quot;67308725&quot;,
            &quot;7. dividend amount&quot;: &quot;1.6600&quot;
        },
        &quot;2024-01-31&quot;: {
            &quot;1. open&quot;: &quot;162.8300&quot;,
            &quot;2. high&quot;: &quot;196.9000&quot;,
            &quot;3. low&quot;: &quot;157.8850&quot;,
            &quot;4. close&quot;: &quot;183.6600&quot;,
            &quot;5. adjusted close&quot;: &quot;182.0211&quot;,
            &quot;6. volume&quot;: &quot;128121557&quot;,
            &quot;7. dividend amount&quot;: &quot;0.0000&quot;
        }}}
</code></pre>
<p>I get the json file and store it as &quot;data&quot;. I was hoping this would work but doesn't</p>
<pre class=""lang-py prettyprint-override""><code>r = requests.get(url2)
data = r.json()

for entry in data[&quot;Monthly Adjusted Time Series&quot;]:
    print(entry[&quot;5. adjusted close&quot;])
</code></pre>
","2024-02-23 16:14:51","-1","Question"
"78048102","","ggplot map - adding numeric label on colorbar","<p>How can I add starting and ending numeric label on color bar ggplot map figure.
For now my code looks like this:</p>
<pre><code>my_breaks &lt;- c(1,60000,1200000,24000000,320000000)
ggplot(data = opcine_spojeno) +
geom_sf(aes(fill= HAMAG_Bespovratna_IRI_Pod))+
scale_fill_viridis(trans = &quot;log&quot;,
                   name=&quot;€&quot;,
                   breaks=c(1,60000,1200000,24000000,320000000),
                   labels = scales::label_comma(), 
                   alpha = 3/4) +
 labs(
subtitle = &quot;HAMAG BICRO:Isplaćana bespovratna sredstva u razdoblju 2016-2023&quot;,
caption = &quot;Data: HAMAG-BICRO&quot;
 ) +
 theme_minimal()
</code></pre>
<p>My map looks like this and I would like to add on color bar to the right 1 and 320 000 000, which I tried with piece of code
<code>my_breaks &lt;- c(1,60000,1200000,24000000,320000000) </code>
but it only adds numbers in the middle of the color bar
<a href=""https://i.sstatic.net/MZ2hQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/MZ2hQ.png"" alt=""enter image description here"" /></a></p>
","2024-02-23 14:33:42","0","Question"
"78047940","78047278","","<p>You can use <code>pandas</code></p>
<pre><code>import pandas as pd

data_dict = {1: {'One': 110, 'Two': 210, 'three': 310},
             2: {'One': 120, 'Two': 220, 'three': 320},
             3: {'One': 130, 'Two': 230, 'three': 330}}

data = pd.DataFrame(data_dict)
data.to_csv('data.csv')
print(data)
</code></pre>
<p>output</p>
<pre><code>         1    2    3
One    110  120  130
Two    210  220  230
three  310  320  330
</code></pre>
","2024-02-23 14:06:41","0","Answer"
"78047865","78047278","","<p>There are numerous ways to do this. The simplest is probably to create an intermediate dictionary.</p>
<p>Something like this:</p>
<pre><code>data_dict = {1: {'One': 110, 'Two': 210, 'three': 310},
             2: {'One': 120, 'Two': 220, 'three': 320},
             3: {'One': 130, 'Two': 230, 'three': 330}}

temp_dict = {&quot;''&quot;: list(data_dict.keys())}

for value in data_dict.values():
    for k, v in value.items():
        temp_dict.setdefault(k, []).append(v)

for k, v in temp_dict.items():
    print(k, *v, sep=&quot;,&quot;)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>'',1,2,3
One,110,120,130
Two,210,220,230
three,310,320,330
</code></pre>
","2024-02-23 13:53:20","2","Answer"
"78047359","78047030","","<p>As mentioned in the comments you can't insert an item in the middle of a dictionary. You will have to create a new sub-dictionary and put it to original dictionary.
For example, a list of tuples can be used:</p>
<pre class=""lang-py prettyprint-override""><code>original_dict = {
    &quot;California&quot; : {
        &quot;San Diego&quot;: 100,
        &quot;Los Angeles&quot;: 200,
    }
}  
parent_key = &quot;California&quot;
new_item = (&quot;San Francisco&quot;, 150)

siblings = list(original_dict[parent_key].items())
siblings.append(new_item)
siblings.sort(key = lambda e: e[1])

original_dict[parent_key] = dict(siblings)

print(original_dict)
</code></pre>
<p>Output</p>
<pre><code>{'California': {'San Diego': 100, 'San Francisco': 150, 'Los Angeles': 200}}
</code></pre>
<p>Arguably a more efficient solution can be implemented which:</p>
<ol>
<li>Removes (<code>dict.pop</code>) the elements starting from an insertion index.</li>
<li>Collects them (from step #1).</li>
<li>Puts a new item.</li>
<li>Puts all collected in step #2.</li>
</ol>
","2024-02-23 12:22:54","1","Answer"
"78047278","","Python transpose dictionary","<p>I have</p>
<pre><code>data_dict = {1: {'One': 110, 'Two': 210, 'three': 310},
             2: {'One': 120, 'Two': 220, 'three': 320},
             3: {'One': 130, 'Two': 230, 'three': 330}}
</code></pre>
<p>need to print as CSV in this order</p>
<pre><code>'',1,2,3
One,110,120,130
Two,210,220,230
Three,310,320,330
</code></pre>
<p>No idea how to do it spent hours trying totally exhausted.
I need pure python solution without using Numpy Transpose, Itertools etc</p>
","2024-02-23 12:10:30","0","Question"
"78047056","78047017","","<p>From the package's PyPI page:</p>
<blockquote>
<p>Note: Iteration over dict and also keys() do not remove expired values!</p>
</blockquote>
<p>IOW, I think you'd find that <code>denms[&quot;john&quot;]</code> would not return a value:</p>
<pre><code>&gt;&gt;&gt; import expiringdict
&gt;&gt;&gt; d = expiringdict.ExpiringDict(max_age_seconds=1, max_len=100)
&gt;&gt;&gt; d[&quot;foo&quot;] = &quot;bar&quot;
...
&gt;&gt;&gt; d[&quot;foo&quot;]
KeyError: 'foo'
&gt;&gt;&gt;
</code></pre>
<p>Or, for the other similarly named package:</p>
<pre><code>&gt;&gt;&gt; import expiring_dict
&gt;&gt;&gt; d = expiring_dict.ExpiringDict(1)
&gt;&gt;&gt; d[&quot;foo&quot;] = 10
&gt;&gt;&gt; d[&quot;foo&quot;]
KeyError: 'foo'
&gt;&gt;&gt;
</code></pre>
","2024-02-23 11:27:15","0","Answer"
"78047030","","Python inserting a key into a dictionary between 2 other keys","<p>I have a nested dictionary in a python script and I need to insert a new key into a very specific place in that dictionary. I know the names of the keys around where I need to insert the new key, but I am a bit puzzled how to do this. My only thought is to add all of the sub-keys to temp dictionaries, drop them from the original dictionary, add what I want and then readd the original keys, but I assume there is an easier way to do this.</p>
<pre><code>    original_dict = {
        &quot;California&quot; : {
            &quot;San Diego&quot;: 100,
            &quot;Los Angeles&quot;: 200,
        }
    }  

</code></pre>
<p>How would I insert the key value (&quot;San Francisco&quot;, 150) between SD and LA? Doing</p>
<pre><code>   original_dict[&quot;California&quot;][&quot;San Francisco&quot;]=150

</code></pre>
<p>adds the new key to the end which is not where I want it (and neither do the people who are ingesting the file). Google turned up nothing.</p>
","2024-02-23 11:21:27","0","Question"
"78047017","","Python package Expiring Dict is not working (automatic expiring)","<p>Using the following <a href=""https://pypi.org/project/expiringdict/"" rel=""nofollow noreferrer"">package</a> for expiring dictionaries doesn't work. Is there any known deprecation on the package? The GitHub repository seems inactive but the latest release was 1 and half years ago.</p>
<p>If the package is indeed deprecated, is there a well-known replacement?</p>
<pre class=""lang-bash prettyprint-override""><code>Python 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; from expiring_dict                          import ExpiringDict
&gt;&gt;&gt; denms = ExpiringDict(max_age_seconds=3)
&gt;&gt;&gt; denms[&quot;john&quot;] = &quot;doe&quot;
&gt;&gt;&gt; import time
&gt;&gt;&gt; time.sleep(10)
&gt;&gt;&gt; print(list(denms.items()))
[('max_age_seconds', 3), ('john', 'doe')]
</code></pre>
","2024-02-23 11:18:42","0","Question"
"78046928","78046927","","<p>When concatenating two dictionaries, if one of them is None, it will cause problems</p>
<p>These will work:</p>
<pre><code>dict_var = {&quot;b&quot;: 2}
print({&quot;a&quot;: 1, **dict_var})
dict_var = {&quot;b&quot;: 2}
print({&quot;a&quot;: 1} | dict_var)
</code></pre>
<p>But these will result in error</p>
<pre><code>dict_var = None
print({&quot;a&quot;: 1, **dict_var})
dict_var = None
print({&quot;a&quot;: 1} | dict_var)
</code></pre>
<p>What you can do is check if it is none before hand:</p>
<pre><code>dict_var = None
print({&quot;a&quot;: 1, **(dict_var if dict_var is not None else {})})
</code></pre>
","2024-02-23 11:02:16","2","Answer"
"78046927","","TypeError: 'NoneType' object is not a mapping","<p>I am trying to concatenate two dictionaries, and I am getting this error:</p>
<pre><code>---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[3], line 5
      3 dict_list = [{&quot;a&quot;:1}, None, {&quot;b&quot;:2}]
      4 n = len(dict_list)
----&gt; 5 [{&quot;a&quot;: 1, &quot;b&quot;: 2, **dict_list[idx]} for idx in range(n)]

Cell In[3], line 5
      3 dict_list = [{&quot;a&quot;:1}, None, {&quot;b&quot;:2}]
      4 n = len(dict_list)
----&gt; 5 [{&quot;a&quot;: 1, &quot;b&quot;: 2, **dict_list[idx]} for idx in range(n)]

TypeError: 'NoneType' object is not a mapping
</code></pre>
<p>This is the code:</p>
<pre><code>import random
# list of dictionaries:
dict_list = [{&quot;a&quot;:1}, None, {&quot;b&quot;:2}]
n = len(dict_list)
[{&quot;a&quot;: 1, &quot;b&quot;: 2, **dict_list[idx]} for idx in range(n)]
</code></pre>
<p>What is wrong? Why am I getting this error?</p>
","2024-02-23 11:02:16","1","Question"
"78044448","","Suffix List of Strings with the number of times they were repeated before in Scala","<p>If we have a List of strings, create a new List where each repeated element has a suffix of the number of times it was repeated, with order preserved.</p>
<p>Example:
List(&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;C&quot;) should become List(&quot;a&quot;,&quot;a.1&quot;,&quot;a.2&quot;,&quot;b&quot;,&quot;b.1&quot;,&quot;c&quot;,&quot;C&quot;)</p>
<p>I could loop through each element, update a map that counts the number of times each element is seen, then add each to a List, but there must be more &quot;Scala way&quot; of doing this.</p>
","2024-02-22 23:07:47","1","Question"
"78044389","78042649","","<p>You can check if greeting is in the dictionary by doing this :</p>
<pre><code>if 'greeting' in dictionary.args:
</code></pre>
<p>Also if you want the first word in the dictionary as a string you can do</p>
<pre><code>dictionarystr = str(dictionary.args[0])
</code></pre>
","2024-02-22 22:53:51","-1","Answer"
"78042649","","How to convert PyDictionary object to list?","<p>I am using PyDictionary for a project but I need to find a way to see if the meaning of the word I am searching up the meaning for contains the word &quot;greeting&quot;.</p>
<p>This is my code:</p>
<pre><code>from PyDictionary import PyDictionary
from random import randint
def contains_word(s, w):
    return (' ' + w + ' ') in (' ' + s + ' ')
greetings = [&quot;hi&quot;, &quot;hello&quot;, &quot;hey&quot;, &quot;helloo&quot;, &quot;hellooo&quot;, &quot;greetings&quot;, &quot;greeting&quot;, &quot;howdy&quot;]
usr_input = input(&quot;Input:&quot;)
split_input = usr_input.split()
dictionary=PyDictionary(split_input)
dictionarystr = str(dictionary)
if contains_word(dictionarystr, 'greeting'):
    print(greetings[randint(0,8)])
print(contains_word(dictionarystr, 'greeting'))
print(dictionarystr)
</code></pre>
<p>But it doesnt work. Instead I get false and I look at what the dictionarystr variable is and it says &lt;PyDictionary Object with 1 words&gt;.</p>
","2024-02-22 16:35:24","-2","Question"
"78039296","","Excel vba dictionary loop stops responding","<pre><code>' Find the last row in both sheets
dictwslr = dictws.Cells(dictws.Rows.Count, dictkey_Col).End(xlUp).Row


' Populate branch dictionary from dictsheet. Add Multiple Columns if necessary using pipe separator
'Add pipe separated values for every column to be stored in the dictionary
Dim dictkeys As Variant
Dim dictValues As Variant
dictkeys = dictws.Range(dictkey_Col &amp; dictstartrow &amp; &quot;:&quot; &amp; dictkey_Col &amp; dictwslr).Value
dictValues = dictws.Range(dictvalue_col1 &amp; dictstartrow &amp; &quot;:&quot; &amp; dictvalue_col1 &amp; dictwslr).Value
For i = 1 To UBound(dictkeys, 1)
Dict.Item(dictkeys(i, 1)) = dictValues(i, 1)
Next i
</code></pre>
<p>I am trying to build a scripting dictionary with the above code. The dictwslr has a value of 208731, The dictstartrow has a value of 2. After reading the ranges into arrays, the code loops through the arrays and builds the dictionary. The loop keeps running for ever and Excel stops responding. What could be the issue and what is the fix?</p>
","2024-02-22 08:13:01","0","Question"
"78032530","78032463","","<pre class=""lang-py prettyprint-override""><code>bulkdata = [
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    ]
    
result = []

for entry in bulkdata:
    if None not in entry.values() and entry not in result:
        result.append(entry)

print(result)
</code></pre>
<p>result:</p>
<pre class=""lang-py prettyprint-override""><code>[{'name': 'PAIR-05|PAIR-06', 'device': 'oob-01'}, {'name': 'PAIR-01|PAIR-02', 'device': 'oob-03'}]
</code></pre>
","2024-02-21 08:30:21","0","Answer"
"78032529","78032463","","<p>You can try something like this:</p>
<pre><code>bulk_data = [
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
]

result = []

for item in bulk_data:
    any_none = any([True if value is None else False for key, value in item.items()])
    if not any_none and item not in result:
        result.append(item)
</code></pre>
<p>which yields following result:</p>
<pre><code>[{'name': 'PAIR-05|PAIR-06', 'device': 'oob-01'}, {'name': 'PAIR-01|PAIR-02', 'device': 'oob-03'}]
</code></pre>
","2024-02-21 08:30:17","1","Answer"
"78032517","78032463","","<p>Try this:</p>
<pre><code>bulkdata = [
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
]


[dict(t) for t in {tuple(d.items()) for d in list(filter(lambda x: None not in x.values(), bulkdata))}]
</code></pre>
<p>This prints:</p>
<pre><code>[{'name': 'PAIR-05|PAIR-06', 'device': 'oob-01'},
 {'name': 'PAIR-01|PAIR-02', 'device': 'oob-03'}]
</code></pre>
<p>The function works by first filtering your list to only keep dicts, where all values are not None. Afterwards the duplicate dicts are removed. I used the function as described in the link below.</p>
<p>For reference:
How to remove duplicate dicts: <a href=""https://stackoverflow.com/a/9427216/5240684"">https://stackoverflow.com/a/9427216/5240684</a></p>
<p>How the filter function works: <a href=""https://www.programiz.com/python-programming/methods/built-in/filter"" rel=""nofollow noreferrer"">https://www.programiz.com/python-programming/methods/built-in/filter</a></p>
","2024-02-21 08:28:49","1","Answer"
"78032463","","How to Remove duplicates and value with None from the list","<p>Hello I have bulk of list of dict and would like to remove duplicate dict and value with None.
Within the data structure, bunch dict are duplicate. I want to keep pair of devices.</p>
<p>BulkData</p>
<pre><code>[
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: None, &quot;device&quot;: &quot;oob-01&quot;},
]
</code></pre>
<p>Non-working code:</p>
<pre><code>for key, value in bulkpairdata.items():
  t = []
  if bulkpairdata.get(&quot;name&quot;) != None:
    if bulkpairdata.get(&quot;name&quot;) not in t:
      result.append(bulkpairdata)
      t.append(bulkpairdata.get(&quot;name&quot;))
    else:
      bulkpairdata.remove(bulkpairdata.get(&quot;name&quot;))
</code></pre>
<p>Result:</p>
<pre><code>[
    {&quot;name&quot;: &quot;PAIR-05|PAIR-06&quot;, &quot;device&quot;: &quot;oob-01&quot;},
    {&quot;name&quot;: &quot;PAIR-01|PAIR-02&quot;, &quot;device&quot;: &quot;oob-03&quot;},
]
</code></pre>
","2024-02-21 08:15:38","0","Question"
"78031226","78031134","","<p>Without more sample data, it's hard to test, but something like this should fit your needs:</p>
<pre class=""lang-bash prettyprint-override""><code>curl … | jq -r '.res.out[].server | .host, .description' |
while read -r host; read -r desc; do
  printf 'HOST: %s\nDescription: %s\n' &quot;$host&quot; &quot;$desc&quot;
  curl … | jq …
done
</code></pre>
","2024-02-21 02:12:30","1","Answer"
"78031134","","jq curl contain output of two curl","<p>I use curl to have this answer :</p>
<pre><code>curl -sX https://xx.com | jq -r '.res.out[].server // empty | {host: .host, description: .description}'
</code></pre>
<pre><code>{ &quot;host&quot;: &quot;server1&quot;,
  &quot;description&quot;: &quot;server 1&quot;
}
{ &quot;host&quot;: &quot;server2&quot;,
  &quot;description&quot;: &quot;server 2&quot;
}
{ &quot;host&quot;: &quot;server3&quot;,
  &quot;description&quot;: &quot;server 3&quot;
}
</code></pre>
<p>And I use a second curl to get the state of serveur if it is running or not. on second curl I need the name of host to get the state of server which I get on first curl, and I want to add also the description of server.</p>
<p>So, I would like to store the list of host and description on a map, to use on second curl</p>
<pre><code>for host in ${array_host[@]}; do 
  echo &quot;HOST: $host&quot;;
  echo &quot;Description: $description&quot;
  curl -sX https://xx.com/servers/$host | jq -r '.specInfo.resul.out[].server.operationalStatus //empty';
done
</code></pre>
<p>because on second curl, I have to loop on all server to get the state, for instance :</p>
<pre><code>curl -sX https://xx.com/servers/server1 | jq -r '.specInfo.resul.out[].server.operationalStatus //empty';
RUNNING
curl -sX https://xx.com/servers/server2 | jq -r '.specInfo.resul.out[].server.operationalStatus //empty';
RUNNING
curl -sX https://xx.com/servers/server3 | jq -r '.specInfo.resul.out[].server.operationalStatus //empty';
NOT RUNNING
</code></pre>
<p>I expect somethink like that</p>
<pre><code>HOST: Server1
Description: Server 1
RUNNING
HOST: Server2
Description: Server 2
RUNNING
HOST: Server3
Description: Server 3
NOT RUNNING
</code></pre>
","2024-02-21 01:36:35","-1","Question"
"78028707","78009646","","<pre><code>package CodingPractice;

import java.util.*;

public class Sample {
   //converting array of map objects to simple map objects
    Map&lt;Long, Long&gt; mapArrayObjects(Map&lt;String, UserStats&gt; visits[]) 
{

     //converting array to list to perform stream operations
        List&lt;Map&lt;String, UserStats&gt;&gt; lMap = Arrays.asList(visits);

        Map&lt;Long, Long&gt; visitsNum = new HashMap&lt;&gt;();

        visitsNum = lMap.stream().map(m -&gt; {

            Map&lt;Long, Long&gt; visitsList = new HashMap&lt;&gt;();

            m.entrySet().forEach((e) -&gt; {
           /* UserStats contain a field count which is number of 
            times user visited a micro service */
                UserStats user = e.getValue();
                Long count = 0L;
               //micro service number
                Long longMicroSerNum = 0L;
                try {
                    longMicroSerNum = Long.parseLong(e.getKey());
                } catch (Exception e1) {

                    System.out.println(&quot;Microserive number is not a 
                     Long data type&quot;);
                    return;
                }
                if (user == null) {
                    System.out.println(&quot;User not visited the 
                 Microservice &quot; + longMicroSerNum);
                    return;
                } else {
                //number of times visited a micro service
                    Optional&lt;Long&gt; NoVisited = user.VisitCounter;

                //retrieving count value from a UserStats object
                    if (NoVisited.isPresent())
                        count = NoVisited.get();

                    System.out.println(
                            &quot;Number of times user vistied the 
                 Microservice &quot; + longMicroSerNum + &quot; is &quot; + count);
                    visitsList.put(longMicroSerNum, count);

                /* we could also set values directly to 
                  visitsNum to avoid reduce() logic on visitsList */
                    // visitsNum.put(longMicroSerNum, count);

                }

            });

            return visitsList;

        }).filter(e -&gt; !e.isEmpty())

                .peek(System.out::println)

                .reduce((firstMap, secondMap) -&gt; {
                    firstMap.putAll(secondMap);
                    return firstMap;
                }).orElse(null);

        return visitsNum;
    }

    record UserStats(Optional&lt;Long&gt; VisitCounter) {

    }

    public static void main(String ar[]) {
        Sample sample = new Sample();
        UserStats u = new UserStats(Optional.of(10L));
        UserStats u1 = new UserStats(Optional.of(20L));

        Map&lt;String, UserStats&gt; m1[] = new HashMap[3];

        Map&lt;String, UserStats&gt; m2 = new HashMap&lt;&gt;();

        Map&lt;String, UserStats&gt; m3 = new HashMap&lt;&gt;();

        Map&lt;String, UserStats&gt; m4 = new HashMap&lt;&gt;();
        //setting test data with non empty values
        m2.put(&quot;20&quot;, u);
        m2.put(&quot;30&quot;, u);
       //setting test data with empty key and null value
        m3.put(&quot;&quot;, u);
        m3.put(&quot;50&quot;, null);
       //again setting data with non empty values
        m4.put(&quot;60&quot;, u1);
        m4.put(&quot;70&quot;, u1);

        m1[0] = m2;
        m1[1] = m3;
        m1[2] = m4;

        Map&lt;Long, Long&gt; visitsNum = sample.mapArrayObjects(m1);
        visitsNum.forEach((k, v) -&gt; {
            System.out.println(&quot;Key is &quot; + k + &quot; &quot; + &quot;value is &quot; + 
            v);
        });

    }

}
</code></pre>
","2024-02-20 15:54:31","-1","Answer"
"78026299","78009615","","<p>I think you should think about the way you designed your project. JSON files are <em>not</em> supposed to contain variables (variables can have different values on server/client).</p>
<p>You can however use templating to achieve what you are trying to do. A simple example with <a href=""https://pypi.org/project/Jinja2/"" rel=""nofollow noreferrer"">jinja2</a>:</p>
<pre><code>import json
from jinja2 import Environment

env = Environment()
xString = '{&quot;someKey&quot;: &quot;{{ someDict[&quot;One&quot;] }}&quot;}'
template = env.from_string(xString)
someDict = {&quot;One&quot;:&quot;Good&quot;}

print(template.render(someDict=someDict))
</code></pre>
<p>Output:</p>
<pre><code>{&quot;someKey&quot;: &quot;Good&quot;}
</code></pre>
","2024-02-20 09:53:40","0","Answer"
"78025854","77952019","","<p>Geoman doesn't provide the functionallity to drag and edit at the same time.</p>
<p>However you can reload the helper-markers with <a href=""https://github.com/geoman-io/leaflet-geoman/blob/e00b5f5d25658bd83ae01825457e86cf95a92e78/src/js/Edit/L.PM.Edit.Rectangle.js#L9"" rel=""nofollow noreferrer""><code>_initMarkers</code></a></p>
<pre><code>rectangle.on('pm:dragend', (e: any) =&gt; {
        const newBounds = rectangle.getBounds();
        console.log(newBounds);
        updateRectangleBounds(newBounds);
        rectangle.pm?._initMarkers();
      });
</code></pre>
","2024-02-20 08:45:18","0","Answer"
"78025663","78024287","","<p>Don't think too complex, make it easy by merging this two diff function and component.</p>
<pre><code>import React, { useEffect, useState } from 'react';

function GetBrandData() {

    const [jsonData, setJsonData] = useState([]);

    useEffect(() =&gt; {
        async function getData5() {
        const response = await fetch(variables.API_URL).then((res) =&gt; res.json());
        setJsonData(response);

        console.log(response);

        alert(&quot;NEW CODE (1): &quot; + JSON.stringify(response));

            /* My database structure is below:
               [
                        { &quot;id&quot;: 1, &quot;name&quot;: &quot;ASUS&quot;, &quot;isSelected&quot;: false },
                        { &quot;id&quot;: 2, &quot;name&quot;: &quot;DELL&quot;, &quot;isSelected&quot;: true },
                        { &quot;id&quot;: 3, &quot;name&quot;: &quot;HP&quot;, &quot;isSelected&quot;: true },
                        { &quot;id&quot;: 4, &quot;name&quot;: &quot;Lenovo&quot;, &quot;isSelected&quot;: false },
                        { &quot;id&quot;: 5, &quot;name&quot;: &quot;MSI&quot;, &quot;isSelected&quot;: false }
                    ]
                
                */
        }
        getData5();

    }, [])

const handleCpusCheckbox = (e) =&gt; {
    alert(&quot;e = &quot; + e.target.checked);        
}    

    return (
        &lt;&gt;
            {jsonData.map(brand =&gt; &lt;div&gt;{&lt;input key={brand.id} type='checkbox' value={brand.name} onChange={handleCpusCheckbox} /&gt;}{brand.name}&lt;/div&gt;)}
        &lt;/&gt;
    );
}

export default GetBrandData;
</code></pre>
<ol>
<li>make sure that after getting db response, data type of jsonData will keep remain <code>Array</code> as it is by destruct of complex response.</li>
<li>you have to <code>use state to re-render component</code> to load new UI with new input(db response).</li>
<li>handle your alert conditionally to don't reload your project every time. it can create infinite loop.</li>
</ol>
","2024-02-20 08:10:15","-1","Answer"
"78024287","","How to loop though db objects in React?","<p>How can I make LINE #1 to work?</p>
<p>Cookie</p>
<pre><code>function GetBrandData() {

    var jsonData = &quot;&quot;;

    useEffect(() =&gt; {
        async function getData5() {
        const response = await fetch(variables.API_URL);
        jsonData = await response.json();
        alert(JSON.stringify({ jsonData }));

        /* The line above shows the following output
            {
                &quot;jsonData&quot;: [{ &quot;id&quot;: 1, &quot;name&quot;: &quot;ASUS&quot;, &quot;isSelected&quot;: false },
                    { &quot;id&quot;: 2, &quot;name&quot;: &quot;DELL&quot;, &quot;isSelected&quot;: true },
                    { &quot;id&quot;: 3, &quot;name&quot;: &quot;HP&quot;, &quot;isSelected&quot;: true },
                    { &quot;id&quot;: 4, &quot;name&quot;: &quot;Lenovo&quot;, &quot;isSelected&quot;: false },
                    { &quot;id&quot;: 5, &quot;name&quot;: &quot;MSI&quot;, &quot;isSelected&quot;: false }]
            }
            */                  
    
        }
        getData5();

    }, [])
       
    return (jsonData);   

}

&lt;&gt;

var listBrands = GetBrandData();


// LINE #1
{listBrands.map(brand =&gt; &lt;div&gt;{&lt;input key={brand.id} type='checkbox' value=  {brand.name} onChange={handleCpusCheckbox} /&gt;}{brand.name}&lt;/div&gt;)};  
&lt;/&gt;
</code></pre>
<p>I am trying to loop thought objects come from db.</p>
<p>And I have tried some methods found online. But
it still does not work.</p>
<p>I still having problem with LINE #1. Please see the error message I got as shown below. Thanks.</p>
<blockquote>
<p>Compiled with problems: × ERROR in ./src/App.js Module build failed
(from ./node_modules/babel-loader/lib/index.js): SyntaxError:
C:\Users\33ebo\FrontEnd5React\f5\src\App.js: Unexpected token,
expected &quot;,&quot; (58:23)</p>
<p>56 | 57 | // LINE #1</p>
<p>58 | return { listBrands.map(brand =&gt; {}{brand.name}) }; | ^ 59 | 60 |
} 61 | .......... ERROR [eslint] src\App.js Line 58:23: Parsing error:
Unexpected token, expected &quot;,&quot; (58:23) .......... Line 58 is shown
below: // LINE #1 return { listBrands.map(brand =&gt; {}{brand.name}) };</p>
</blockquote>
","2024-02-20 01:07:27","0","Question"
"78020511","78020461","","<p>The below code appends the series to the dataframe and then leave only duplicated rows:</p>
<pre><code>import pandas as pd
df1 = pd.DataFrame({'DEG1': [1,2], 'DEG2': [3,4]})
df1.loc[len(df1)] = [1,3]
df1[df1.duplicated(keep='first')]
</code></pre>
","2024-02-19 12:04:19","1","Answer"
"78020496","78020461","","<p>Use:</p>
<pre><code>#create sample data - for test rewrite last row by n_serie_list values
np.random.seed(56)
dataframe = pd.DataFrame(np.random.randint(10, size=(5,9)),
                          columns=['DEG1','DEG2','DEG3','DEG4','DEG5','a','b','c','d'])

n_serie_list = [2, 11, 21, 27, 41]

dataframe.iloc[-1, :5] = n_serie_list
print (dataframe)
   DEG1  DEG2  DEG3  DEG4  DEG5  a  b  c  d
0     5     4     0     2     9  7  6  4  9
1     7     1     8     2     0  5  6  1  9
2     5     5     2     9     3  5  9  2  1
3     0     4     6     2     0  8  6  4  0
4     2    11    21    27    41  2  1  3  8
</code></pre>
<p>Compare filtered rows  of <code>DataFrame</code> by list <code>n_serie_list</code> with <a href=""http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.all.html"" rel=""nofollow noreferrer""><code>DataFrame.all</code></a> and test at least one match by <a href=""http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.any.html"" rel=""nofollow noreferrer""><code>Series.any</code></a>:</p>
<pre><code>cols = ['DEG1','DEG2','DEG3','DEG4','DEG5']
repeated = (dataframe[cols].values == n_serie_list).all(axis=1).any()
print (repeated)
True
</code></pre>
<p>How it working:</p>
<pre><code>print ((dataframe[cols].values == n_serie_list))
[[False False False False False]
 [False False False False False]
 [False False False False False]
 [False False False False False]
 [ True  True  True  True  True]]
</code></pre>
","2024-02-19 12:01:52","1","Answer"
"78020461","","Comparing a numeric Python's list against a Pandas dataframe","<p>I have a Pandas's dataframe with 9 columns (called just dataframe), 5 of them called: [['DEG1','DEG2','DEG3','DEG4','DEG5']], it has almost 2000 rows. I have a list from which I build another dataframe with 5 columns called [['deg1','deg2','deg3','deg4','deg5']], this dataframe only has 1 row with the data series that needs to be checked in the other dataframe.</p>
<p>I need to check if the entire series (the 5 columns) from the little dataframe (n_serie_df), if repeated in the big dataframe, here my actual state, which gives me:</p>
<blockquote>
<p>&quot;ValueError: Item wrong length 1 instead of 1709.&quot;.</p>
</blockquote>
<p>This is my actual code:</p>
<pre><code>import pandas as pd
import numpy as np


def check_repeated_deg(n_serie_list, dataframe):
    n_serie_dict = {
        &quot;DEG1&quot;: [n_serie_list[0]],
        &quot;DEG2&quot;: [n_serie_list[1]],
        &quot;DEG3&quot;: [n_serie_list[2]],
        &quot;DEG4&quot;: [n_serie_list[3]],
        &quot;DEG5&quot;: [n_serie_list[4]],
    }

    n_serie_df = pd.DataFrame(n_serie_dict)

    repeated = dataframe[np.all(n_serie_df.values == n_serie_df.values, 1)].any().any()

    if repeated:
        return f&quot;This deg serie is already measured&quot;
    else:
        return None


dataframe = pd.read_csv(r&quot;data_deg.csv&quot;)
n_serie_list = [2, 11, 21, 27, 41]

result = check_repeated_deg(n_serie_list, dataframe)

print(result)
</code></pre>
","2024-02-19 11:55:28","2","Question"
"78018108","78016741","","<p>I observed your desired output, and taking in account the good comment about &quot;ncurses&quot;, if for some reason you don't want to go that route, an alternate option would be to utilize some operating system functions to clear the screen.  With that in mind, following is a refactored version of your code with a simplified screen clearing functionality. My apologies for its length, but the enhancements were spread throughout your program.</p>
<pre><code>import random
import time                         # Provide functionality for sleep/delay
from os import system, name         # Provide functionality to clear the screen

def clx():                          # Generic screen clear

    if name == 'nt':                # Windows screen clear
        system('cls')
 
    else:
        system('clear')             # Linux/Posix clear

words = ['cat', 'why', 'car', 'dress', 'apple', 'orange']
word = random.choice(words)
displaylist = []
found_letters = []
missed_letters = []

for _ in range(len(word)):
    displaylist.append('_')

repeater = True

clx()

while repeater:
    
    print(f&quot;Word: {' '.join(displaylist)}&quot;)
    print(f&quot;found letters: {' '.join(found_letters)}&quot;)
    print(f&quot;missed letters: {' '.join(missed_letters)}&quot;)
    print(&quot;\n\n&quot;)

    letter = input(&quot;Enter a letter:&quot;)

    if letter in word:

        if letter in displaylist:
            print(&quot;You have already entered that letter&quot;)
            time.sleep(2)
            clx()
            continue

        for i in range(len(word)):      

            if letter == word[i]:
                displaylist[i] = letter
                found_letters.append(letter)

        if '_' not in displaylist:              # Check to see if the word has been guessed
            clx()
            print(f&quot;Word: {' '.join(displaylist)}&quot;)
            print(f&quot;found letters: {' '.join(found_letters)}&quot;)
            print(f&quot;missed letters: {' '.join(missed_letters)}&quot;)
            print(&quot;\n\n&quot;)
            print(&quot;You have guessed the word&quot;)
            print(f&quot;Word: {''.join(displaylist)}&quot;)
            break

        else:
            clx()
            continue

    elif letter.isalpha():

        if letter in missed_letters:
            print(&quot;You have already tried that letter and it is not in the word&quot;)
            time.sleep(2)
            clx()
            continue

        missed_letters.append(letter)
        clx()
        continue

    else:
        print(&quot;you have to enter a letter:&quot;)
        repeater = False
</code></pre>
<p>Here are the key points.</p>
<ul>
<li>The &quot;os&quot; and &quot;time&quot; packages are imported to provide operating specific screen clearing functionality along with a time delay as noted in your expected output sample.</li>
<li>Testing is made for the actual operating system so that the proper screen clearing command is evoked as referenced in the following link &quot;https://www.geeksforgeeks.org/clear-screen-python/&quot;.</li>
<li>Some additional testing was added such that if all of the letters of the word have been guessed, that is outputted and the program ends.</li>
</ul>
<p>Testing this out at the terminal appeared to mimic the functionality you were after.</p>
<pre><code>Word: o r a n g e
found letters: a o r n g e
missed letters: h j k l w q



You have guessed the word
Word: orange
</code></pre>
<p>The main takeaway from this possible route/solution (and this probably is just one of many solutions) is that you may want to delve some more into Python tutorials, especially as it pertains to function usage, while loop usage with &quot;continue&quot; and &quot;break&quot; statements.</p>
","2024-02-19 02:33:17","0","Answer"
"78016741","","how to avoid recurring displayed?","<p>I want to create a program that take a word randomly from a list and ask the user to enter a letter, if the letter is in the word it's added or displayed directly to a line called found letters, if it's not in the word it's added to a line called missed letter, and if the user input a letter that already has been inputted a message displayed and tell him that he is already input the letter and invite him to try a new letter, and if he enters anything beside a letter the program stops.</p>
<pre><code>import random

words = ['cat', 'why', 'car', 'dress', 'apple', 'orange']
word = random.choice(words)
displaylist = []
found_letters = []
missed_letters = []

for _ in range(len(word)):
    displaylist.append('_')

repeater = True

while repeater:

    print(f&quot;Word: {' '.join(displaylist)}&quot;)
    print(f&quot;found letters: {' '.join(found_letters)}&quot;)
    print(f&quot;missed letters: {' '.join(missed_letters)}&quot;)

    letter = input(&quot;Enter a letter:&quot;)

    if letter in word:

        if letter in displaylist:
            print(&quot;you have already entered that letter:&quot;)
            continue

        for i in range(len(word)):

            if letter == word[i]:
                displaylist[i] = letter
                found_letters.append(letter)
                continue

    elif letter.isalpha():
        missed_letters.append(letter)

        continue

    else:
        print(&quot;you have to enter a letter:&quot;)
        repeater = False
</code></pre>
<p>the problem is that each time the user input a letter,
it's displayed to a new-found letters line or missed letters line,
but I want them to be fixed the only thing change is the letters,
when the user input some letters ,and they are in the word,
they are being added directly to one found letters line and to a missed letters line
if they are not in the word , not to repeat found letters and missed letters lines each time.
Does any one has an idea how can I do this</p>
","2024-02-18 17:34:30","0","Question"
"78015743","78009646","","<pre><code>Map&lt;String, UserStats&gt; m1[] = new HashMap[10];
</code></pre>
<p>and further:</p>
<pre><code>m1[0] = m2;
m1[1] = m3;
</code></pre>
<p>Only two elements are in your array of length 10, others are then set to <code>null</code>. Then, what do you think it will happen in <code>count()</code> at the call <code>m.forEach</code> if <code>m</code> is null?</p>
<p>Change <code>Map&lt;String, UserStats&gt; m1[] = new HashMap[10];</code> to <code>Map&lt;String, UserStats&gt; m1[] = new HashMap[2];</code></p>
<p>Aside: you are creating a generic array but that is bad (the compiler should have complain); your problem is mainly due to the fact that you used an array (fixed size and logical error then) where something like a list would have been much safer. Or at least filter the stream for non null elements...</p>
","2024-02-18 12:32:06","2","Answer"
"78009646","","How to convert Array of Map<String, Object> to Map<Long, Long> using streams","<pre><code>public class Sample {

    Map&lt;Long, Long&gt; count(Map&lt;String, UserStats&gt; visits[]) {

        Map&lt;Long, Long&gt; visitsNum = new HashMap&lt;&gt;();
        Arrays.stream(visits).map(m -&gt; {

            Map&lt;Long, Long&gt; visitsList = new HashMap&lt;&gt;();
            m.forEach((k, v) -&gt; {
                String microSerNum = k;
                UserStats user = v;
                Long count1 = 0L;
                Long longMicroSerNum =0L;
                try {
                    longMicroSerNum = Long.parseLong(microSerNum);
                } catch (Exception e) {

                    System.out.println(&quot;Microserive number is not a Long data type&quot;);
                    return;
                }
                if (user == null)
                {
                    System.out.println(&quot;User not visited the Microservice &quot; + longMicroSerNum);
                    return;
                }
                else {
                    Optional&lt;Long&gt; count = user.VisitCounter;

                    if (count.isPresent())

                    count1 = count.get();

                    System.out.println(&quot;Number of times user vistied the Microservice &quot; +longMicroSerNum + &quot; is &quot;+ count1);

                }

                visitsList.put(longMicroSerNum, count1);

            });
            
            return visitsList;

        }).//collect(Collectors.toMap(e-&gt;e.getKey, e-&gt;e.getValue));
        
        forEach((e) -&gt; {
            System.out.println(e);
        });


        return visitsNum; // should return a map
    }

    record UserStats(Optional&lt;Long&gt; VisitCounter) {

    }

    public static void main(String ar[]) {
        Sample a = new Sample();
        UserStats u = new UserStats(Optional.of(10L));
        UserStats u1 = new UserStats(Optional.of(20L));

        Map&lt;String, UserStats&gt; m1[] = new HashMap[10];

        Map&lt;String, UserStats&gt; m2 = new HashMap&lt;&gt;();

        Map&lt;String, UserStats&gt; m3 = new HashMap&lt;&gt;();
        m2.put(&quot;20&quot;, u);
        m2.put(&quot;30&quot;, u1);
        m3.put(&quot;&quot;, u);
        m3.put(&quot;50&quot;, null);

        m1[0] = m2;
        m1[1] = m3;

        Map&lt;Long, Long&gt; visitsNum = a.count(m1); //should catch the returned map
        
    }

}
</code></pre>
<p>Have to parse the String, Object's Optional values to Long types then discard the empty object or empty string values.</p>
<p>Getting below console output:</p>
<pre><code>Number of times user vistied the Microservice 30 is 20
Number of times user vistied the Microservice 20 is 10
{20=10, 30=20}
Microserive number is not a Long data type
User not visited the Microservice 50
{}
Exception in thread &quot;main&quot; java.lang.NullPointerException: Cannot invoke &quot;java.util.Map.forEach(java.util.function.BiConsumer)&quot; because &quot;m&quot; is null
    at CodingPractice.Sample.lambda$0(Sample.java:12)
    at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
    at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
    at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
    at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
    at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
    at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
    at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
    at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
    at CodingPractice.Sample.count(Sample.java:48)
    at CodingPractice.Sample.main(Sample.java:78)
</code></pre>
","2024-02-16 19:37:48","0","Question"
"78009615","","Python: accessing dictionary item within JSON when JSON imported from string via loads()","<p>I cannot seem to get a string to load as a dictionary (via JSON) and convert embedded dictionary items in the string as the proper value from the dictionary.</p>
<p>Use case: I am writing an application where a text file will be used to call Python code, specifically functions. All was fine until I tried to have variables defined in the functions be dictionary items.</p>
<p>As an example, I previously had a text file, which line by line would call a function:</p>
<p><code>someFunction(variable1 = 11, someListVar = [1,2,3] ...) </code>
etc.</p>
<p>I then chaged it so that my text file would have:</p>
<p><code>someFunction(variable1 = someDict[&quot;someKey&quot;], someListVar = [anotherDict[&quot;anotherKey&quot;],...] ) </code>
etc.</p>
<p>As a minimized example:</p>
<pre><code>#this all works fine 
import json

someDict = {&quot;One&quot;:&quot;Good&quot;}

x = {&quot;someKey&quot;: someDict[&quot;One&quot;]}

# convert into JSON string:
y = json.dumps(x)
print(y) 
&gt;&gt;  {&quot;someKey&quot;: &quot;Good&quot;} 

print(type(y))
&gt;&gt;&lt;class 'str'&gt; 
</code></pre>
<p>The JSON string also behaves as expected:</p>
<pre><code>z = json.loads(y) #this can get reloaded as a dictionary
print(z) 
&gt;&gt; {'someKey': 'Good'} 

print(type(z))
&gt;&gt; &lt;class 'dict'&gt; 
</code></pre>
<p>But, on the other hand, if I try to START with a string, it seems like no matter how I format the string, I can't get it to bring in the dictionary value:</p>
<pre><code>xString = '{&quot;someKey&quot;: &quot;someDict[\'One\']&quot;}' #regardless of escape characters

yNew = json.loads(xString)

print(yNew)
&gt;&gt;{'someKey': &quot;someDict['One']&quot;}

print(yNew[&quot;someKey&quot;])
&gt;&gt;someDict['One']

</code></pre>
<p>The easy solution, of course, is eval():</p>
<pre><code>print(eval(yNew[&quot;someKey&quot;])) 
#&gt;&gt;Good
</code></pre>
<p>But of course, this is a less than ideal solution.</p>
<p>FWIW I've tried different formatting of escape characters for the xString variable to no avail. I suppose I could make some sort of parser, but that seems so inelegant, especially considering this is what the JSON module is supposed to do.</p>
","2024-02-16 19:31:02","0","Question"
"78008927","78008889","","<p>Use a dict display, but the display doesn't need to be on <em>one</em> line.</p>
<pre><code>my_dict = {
    'key1': &quot;value1&quot;,
    'key2': &quot;value2&quot;,
    'key3': &quot;value3&quot;,
    ...
} 
</code></pre>
<p>(If PyCharm complains about <em>that</em>, you can just ignore it.)</p>
","2024-02-16 17:02:19","2","Answer"
"78008889","","What is the difference between assigning values to dictionaries explicitly, one key-pair at a time, or inline?","<p>I am generating a large JSON file using Python. I have many keys and values. I see two ways of populating my Python dictionary.</p>
<p>Explicitly:</p>
<pre><code>my_dict = {}
my_dict['key1'] = &quot;value1&quot;
my_dict['key2'] = &quot;value2&quot;
my_dict['key3'] = &quot;value3&quot;
....
</code></pre>
<p>Or inline</p>
<pre><code>my_dict = {'key1': &quot;value1&quot;, 'key2': &quot;value2&quot;, 'key2': &quot;value2&quot;, ...} 
</code></pre>
<p>These smaller dictionaries will be nested so neither approach is ridiculous as each inline list should be &lt; 10 long.</p>
<p>From how I see it, updating with each key-value pair is more readable and easily updated in the future, but I see the inline option being used a lot so I'd like to know what the difference is.</p>
<p>I started with key-value pairs, but PyCharm is suggesting rewriting them to inline so that's where my doubts started.</p>
","2024-02-16 16:56:54","-3","Question"
"78006671","78002731","","<p>The error occurs because you're passing a tuple as an argument to withColumn, but it expects a valid column expression. Try the following:</p>
<pre><code>def create_column_expression(col_dict):
    if col_dict['Technical Column'] == 'No':
        return col(col_dict['Column Mapping']).alias(col_dict['Technical Label'])
    else:
        return lit(col_dict['Column Mapping']).alias(col_dict['Technical Label'])

# Apply the transformations
x = reduce(lambda df, col_dict: df.withColumn(col_dict['Technical Label'], create_column_expression(col_dict)), cols, df)
</code></pre>
","2024-02-16 10:29:13","1","Answer"
"78003590","78003305","","<p>I'm not sure if <code>module.__dict__</code> is a reference to the variable <code>dict_plugin_info</code>.</p>
<p>If so, in the line <code>dict_plugin_info[plugin_type] = attr</code>, you are trying to insert a new item to <code>dict_plugin_info</code> because you have confirmed that the <code>plugin_type</code> is not in <code>dict_plugin_info</code>'s keys, which will change the dictionary's size during iteration.</p>
<pre class=""lang-py prettyprint-override""><code>d = {1: 1}
for _ in d:
    # RuntimeError: dictionary changed size during iteration
    d[2] = 2
</code></pre>
<p>From the code above, we could find that not only deleting a key (not shown in this code) but also inserting a key during iteration will raise such an exception, except that the dictionary to be iterated is empty.</p>
<pre class=""lang-py prettyprint-override""><code>d = dict()
for _ in d:
    d[2] = 2  # OK
</code></pre>
","2024-02-15 19:47:57","1","Answer"
"78003305","","Python RuntimerError, RuntimeError('dictionary changed size during iteration')","<p>When I try To Insert a key,value to a Dict, This Code will Raise ,RuntimeError('dictionary changed size during iteration')</p>
<p>Here is My Code:</p>
<pre class=""lang-py prettyprint-override""><code>#1. Delcare the Dict val here
dict_plugin_info = {}

#2. For module.__dict__...
for name, attr in module.__dict__.items():
    if ((inspect.isclass(attr) and (name.startswith(&quot;_&quot;) or
                                    attr.__dict__.get(&quot;__module__&quot;) != module_id))):
        continue

    if inspect.isclass(attr) and issubclass(attr, PluginInterfaceBase):
        inst = attr()
        # the follow
        plugin_type = inst.plugin_type

        keys = list(dict_plugin_info.keys())
        if plugin_type not in keys:
            ###HERE RuntimeError('dictionary changed size during iteration')####
            dict_plugin_info[plugin_type] = attr
        else:
            raise MultiplePluginError(&quot;Multiple plugins Type {} Name:{}&quot;.format(
                plugin_type,
                attr.__class__.__name__))
</code></pre>
<p>I don't know how This Happened.
I search the website Most Ansower is when iterator the dict and delete key will raise the Exception. But my code is not delete the key.</p>
","2024-02-15 18:54:06","1","Question"
"78002731","","Create dataframe columns from a dictionary using lambda expression","<p>I would like to create a pyspark dataframe dynamically using lambda form a give dictionary. Below is my dictionary.</p>
<pre><code>cols = [
{'Technical Label':'UserID', 'Column Mapping':'UID','Technical Column':'No'},
{'Technical Label':'Type', 'Column Mapping':'X_TYPE','Technical Column':'No'},
{'Technical Label':'Name.1', 'Column Mapping':'NaturalName','Technical Column':'No'},
{'Technical Label':'Address.1', 'Column Mapping':'HomeAddress','Technical Column':'Yes'},
{'Technical Label':'Identifier.1', 'Column Mapping':'Human','Technical Column':'Yes'},
{'Technical Label':'Identifier.1', 'Column Mapping':'EX_CO','Technical Column':'Yes'},
{'Technical Label':'Identifier.IdentifierValue.1', 'Column Mapping':'X_CODE','Technical Column':'No'}
]
</code></pre>
<p>I want something similar</p>
<p><code>refdf = df.withColumn('UserID', df.UID).withColumn('Type', df.X_TYPE).withColumn('Name.1', df.NaturalName).withColumn('Address.1', lit('Address')...so on</code></p>
<p>I want to make a decision based on the <code>Technical Column</code> in the Dictionary. If the value is <strong>No</strong> then I want to derive the value from the dataframe and if the value is <strong>Yes</strong> then I want to <code>lit</code> the value from the respective Column Mapping dictionary key.</p>
<p>I wrote the below code but got error.</p>
<pre><code>from functools import reduce
from pyspark.sql.functions import col, lit
df = spark.read.format('csv').option('header','true').option('delimiter','|').load('/my/path/file.txt')
x = reduce(lambda df,colsm : df.withColumn(colsm['Technical Label'], (lambda x: x['Column Mapping'] if x['Technical Column'] == 'No' else lit(x['Column Mapping']) , cols)), cols, df)
display(x)
</code></pre>
<p><strong>Error</strong></p>
<blockquote>
<p>PySparkTypeError: [NOT_COLUMN] Argument <code>col</code> should be a Column, got
tuple.</p>
</blockquote>
<p>Cannot figure out what is wrong.</p>
","2024-02-15 17:16:57","0","Question"
"77996571","77995100","","<p>Optionally, use Jinja</p>
<pre class=""lang-yaml prettyprint-override""><code>  final_list: |
    {% filter from_yaml %}
    {% for i in animal_list|subelements('food') %}
    - { animal: {{ i.0.animal }}, food: {{ i.1 }} }
    {% endfor %}
    {% endfilter %}
</code></pre>
<p>gives</p>
<pre class=""lang-yaml prettyprint-override""><code>  final_list:
  - animal: fox
    food: chickens
  - animal: rabbit
    food: carrots
  - animal: rabbit
    food: apples
</code></pre>
<hr>
<sup>
<ul>
<li>Example of a complete playbook for testing</li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>- hosts: localhost

  vars:

    animal_list:
      - animal: fox
        food: [chickens]
      - animal: rabbit
        food: [carrots, apples]

    final_list: |
      {% filter from_yaml %}
      {% for i in animal_list|subelements('food') %}
      - {animal: {{ i.0.animal }}, food: {{ i.1 }}}
      {% endfor %}
      {% endfilter %}

  tasks:

    - debug:
        var: final_list
</code></pre>
<hr>
<ul>
<li>If there are more attributes in the dictionaries, for example,</li>
</ul>
<pre class=""lang-yaml prettyprint-override""><code>  animal_list:
    - animal: fox
      food: [chickens]
      pavilon: A
    - animal: rabbit
      food: [carrots, apples]
      pavilon: B
</code></pre>
<p>use the filter <em>combine</em></p>
<pre class=""lang-yaml prettyprint-override""><code>  final_list: |
    {% filter from_yaml %}
    {% for i in animal_list|subelements('food') %}
    - {{ i.0|combine({'food': i.1 }) }}
    {% endfor %}
    {% endfilter %}
</code></pre>
</sup>
","2024-02-14 18:35:12","1","Answer"
"77996341","77996271","","<p>Make a dictionary whose keys are the names and types, and values are the repetition counts. Then show the ones with counts more than 1.</p>
<pre><code>from collections import Counter

list1 = [
    {'id': 1, 'name': 'A', 'blob': 'blob', 'type': 'A'},
    {'id': 2, 'name': 'B', 'blob': 'blob', 'type': 'B'},
    {'id': 3, 'name': 'A', 'blob': 'blob', 'type': 'A'},
    {'id': 4, 'name': 'C', 'blob': 'blob', 'type': 'A'},
    {'id': 5, 'name': 'E', 'blob': 'blob', 'type': 'A'},
    {'id': 6, 'name': 'B', 'blob': 'blob', 'type': 'B'}
]

counts = Counter((x['name'], x['type']) for x in list1)
for (n, t), count in counts.items():
    if count &gt; 1:
        print(f&quot;name {n} has duplicate type {t}&quot;)
</code></pre>
","2024-02-14 17:49:46","2","Answer"
"77996271","","how to print duplicate values of a list of dictionaries in python","<p>Suppose this list:</p>
<pre class=""lang-py prettyprint-override""><code>list1 = [
{'id': 1, 'name': 'A', 'blob': 'blob', 'type': 'A'},
{'id': 2, 'name': 'B', 'blob': 'blob', 'type': 'B'},
{'id': 3, 'name': 'A', 'blob': 'blob', 'type': 'A'},
{'id': 4, 'name': 'C', 'blob': 'blob', 'type': 'A'},
{'id': 5, 'name': 'E', 'blob': 'blob', 'type': 'A'},
{'id': 6, 'name': 'B', 'blob': 'blob', 'type': 'B'}
]
</code></pre>
<p>I'm going to find if both values of <code>name</code> and <code>type</code> are the same.</p>
<p>This is expected output:</p>
<pre><code>name A has duplicate type A
name B has duplicate type B
</code></pre>
<p>How can I have the expected output?</p>
<p>I googled but most of results print one value only (for example if there are multiple <code>name</code> keys with the same values).</p>
","2024-02-14 17:37:28","-3","Question"
"77995699","77995100","","<p>I've found the solution by myself:</p>
<pre><code>- name: Splitting the dictionaries if we have multiple values for a single key
  set_fact:
    final_list: &quot;{{ final_list|default([]) + [{'animal': item.0.animal, 'food': item.1}] }}&quot;
  loop: &quot;{{ animal-list|subelements('food') }}&quot;
</code></pre>
","2024-02-14 16:08:26","0","Answer"
"77995100","","Split a dictionary if a value has more than two items in Ansible","<p>I have the following list of dictionaries in Ansible:</p>
<pre><code>ok: [localhost] =&gt; {
    &quot;msg&quot;: [
        {
            &quot;animal&quot;: &quot;fox&quot;,
            &quot;food&quot;: [
                &quot;chickens&quot;
            ]
        },
        {
            &quot;animal&quot;: &quot;rabbit&quot;,
            &quot;food&quot;: [
                &quot;carrots&quot;,
        &quot;apples&quot;
            ]
        }
    ]
}
</code></pre>
<p>As you can see the second dictionary has two values for the &quot;food&quot; key. I want to split it in two and have it like this:</p>
<pre><code>ok: [localhost] =&gt; {
    &quot;msg&quot;: [
        {
            &quot;animal&quot;: &quot;fox&quot;,
            &quot;food&quot;: [
                &quot;chickens&quot;
            ]
        },
        {
            &quot;animal&quot;: &quot;rabbit&quot;,
            &quot;food&quot;: [
        &quot;apples&quot;
            ]
        },
        {
            &quot;animal&quot;: &quot;rabbit&quot;,
            &quot;food&quot;: [
                &quot;carrots&quot;
            ]
        }
    ]
}
</code></pre>
<p>Unfortunately Im not able to come up with the logic. Would you be able to help me?</p>
","2024-02-14 14:39:13","1","Question"
"77991815","77991725","","<p>In general, python dictionaries work by reference or pointer. But it also depends on what kind of operation you apply on the object that we point to.
Example:</p>
<pre class=""lang-py prettyprint-override""><code>l = [1, 2, 3, 4]
d = {'hello': l}
print(d) # Out: {'hello': [1, 2, 3, 4]}
l[3] = -1
print(d) # Out: {'hello': [1, 2, 3, -1]}
</code></pre>
<p>This is because the <code>l[3] = -1 </code>operation maintains the pointers. However:</p>
<pre class=""lang-py prettyprint-override""><code>l = [1, 2, 3, 4]
d = {'hello': l}
print(d) # Out: {'hello': [1, 2, 3, 4]}
l = 24
print(d) # Out: {'hello': [1, 2, 3, 4]}
</code></pre>
<p>In this second example the operation <code>l=24</code> does not work with pointers, but &quot;detaches the pointers of <code>l</code>&quot; and creates a new object <code>l</code> that is now a integer in this case.</p>
<p>In your example, something similar happens, where <code>set = {}</code> kind of &quot;detaches&quot; the references of the previous <code>set1</code> that is now in <code>set2</code> from the object <code>set1</code> that you have in this loop iteration. However, only doing <code>set1[i[j][0]] = i[j][1]</code> would not produce such detachment and you would be accessing the object that is in <code>set2</code>.</p>
","2024-02-14 02:18:52","0","Answer"
"77991725","","In a python for loop, is there a reason overwriting the value of dictionary2 where previously stated 'dictionary1 = dictionary2' also updates dict1?","<p>I'm self-taught (without the taught part for now), so I apologize if the question is dumb or self-explanatory. I can't seem to phrase the issue in a way to find existing queries on the same topic, so here goes anyway.</p>
<p>in the following (out of context) code snippets, I can't find the reason the outputs should be different:</p>
<pre><code>set1 = {}
    
for i in s1:
for j in range(1,len(i)):
        set1[i[j][0]] = i[j][1]
    set2[i[0]] = set1
</code></pre>
<p>...and...</p>
<pre><code>for i in s1:
set1 = {}
for j in range(1,len(i)):
        set1[i[j][0]] = i[j][1]
    set2[i[0]] = set1
</code></pre>
<p>... where s1 is a list of lists structured as <code>[name, [value, pair] [value, pair]]</code> and the desired output is <code>{name: {value: pair, value:pair}, name2: ...}</code></p>
<p>I understand the second approach is necessary anyway if it isn't guaranteed that each list in s1 has all the same values represented. I dont understand why the first approach returns a dictionary where all values for each name (key) are the same, when <code>set2[i[0]] = set1</code> is executed for different values of set1</p>
<p>I understand the reason has something to do with Python passing a reference instead of a copy of the data... I don't understand why the same doesn't seem true when doing similar operations like:</p>
<pre><code>dictionary1 = {}
dictionary2 = {1:'a', 2:'b'}

dictionary1 = dictionary2

dictionary2 = {1:'f', 2:'g'}
</code></pre>
<p>...where dictionary1 is fed a copy of dictionary2 and is independent of it down the line</p>
<p>Any help is appreciated. Again, sorry if duplicate or otherwise dumb</p>
","2024-02-14 01:37:59","1","Question"
"77987590","77987569","","<p><a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.map.html"" rel=""nofollow noreferrer""><code>map</code></a> your values from the dictionary, then convert <a href=""https://pandas.pydata.org/docs/reference/api/pandas.to_timedelta.html"" rel=""nofollow noreferrer""><code>to_timedelta</code></a> (with <code>unit='D'</code> for days) and add to the date (optionally ensuring it's a date with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.to_datetime.html"" rel=""nofollow noreferrer""><code>to_datetime</code></a>):</p>
<pre><code>df['Range_plus'] = (pd.to_datetime(df['Date'])
                      .add(pd.to_timedelta(df['Periode'].map(dict_range),
                                           unit='D'))
                   )
</code></pre>
<p>If you already know <code>Date</code> is a <code>datetime</code> dtype:</p>
<pre><code>df['Range_plus'] = (df['Date']
                    .add(pd.to_timedelta(df['Periode'].map(dict_range),
                                         unit='D'))
                   )
</code></pre>
<p>Output:</p>
<pre><code>         Date Periode Range_plus
0  2019-01-03   YEARS 2019-01-23
1  2019-05-05  MONTHS 2019-05-08
</code></pre>
","2024-02-13 11:33:45","0","Answer"
"77987569","","Create pandas date column based one and dict","<p>I have two columns (dataframe) :</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Date</th>
<th>Periode</th>
</tr>
</thead>
<tbody>
<tr>
<td>2019-01-03</td>
<td>YEARS</td>
</tr>
<tr>
<td>2019-05-05</td>
<td>MONTHS</td>
</tr>
</tbody>
</table></div>
<p>And one dict with periode to correspond days :</p>
<pre><code>dict_range={&quot;YEARS&quot; : 20.0 , &quot;MONTHS&quot; : 3.0}
</code></pre>
<p>I would like to create a new column which increment date period dict to date like this :</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Date</th>
<th>Periode</th>
<th>Range_plus</th>
</tr>
</thead>
<tbody>
<tr>
<td>2019-01-03</td>
<td>YEARS</td>
<td>2019-01-23</td>
</tr>
<tr>
<td>2019-05-05</td>
<td>MONTHS</td>
<td>2019-05-08</td>
</tr>
</tbody>
</table></div>
<p>I notice the date column type is &quot;DateTime&quot; and dict key value is &quot;Float&quot;.</p>
<p>Thank you !</p>
","2024-02-13 11:31:00","0","Question"
"77982749","77982576","","<p>Even if you use <code>sync.Map</code>, the search function, as it is written, will be returning a map that is being concurrently filled. That means, your program may lookup an element that is not there, but will be added later.</p>
<p>Usually, you would want to look at the map once all the searches are done. To do that, you can use a <code>WaitGroup</code>, and a channel to read the results from the search goroutines:</p>
<pre><code>result:=make(chan int)
wg:=sync.WaitGroup()

resultMap:=make(map[int]byte)
done:=make(chan struct{})

// Collect the results in a map
go func() {
   defer close(done)
   for r:=range result {
      resultMap[r]=0
   }
}()

for p,_ := range table {
     for _,m := range paths {
           wg.Add(1)
           go func(t table, p path) {
               defer wg.Done()
               result &lt;- doSomething(t,p)
           }(p,m)
        }
}
wg.Wait()
close(result)
&lt;-done // Wait for the result collector to finish
// Here, the resultMap has all the results.
</code></pre>
","2024-02-12 16:02:33","2","Answer"
"77982576","","How can I store a list of return values from asynchronous goroutines?","<p>I have a search function, that doesn't require the results to be ordered. It is generating a table of the stored results. I'm using a map, because it automatically removes identical values. The search function requires a lot of computing power, and I would like to execute them in parallel. My current code looks something like this:</p>
<pre><code>func assign(a int, b int, table *map[int]byte) {
    (*table)[doSomething(a,b)] = 0
}
func incrementTable(table map[int]byte, paths []int) map[int]byte {
    newTable := make(map[int]byte)
    for p,_ := range table {
        for _,m := range paths {
            go assign(p, m, &amp;newTable)
        }
    }
    return newTable
}
</code></pre>
<p>However, this throws an error, because it is trying to concurrently write to the same map. How can I store all of these at the same time, without a big dip in performance?</p>
<p>The code runs fine if I run it without the <code>go</code> keyword, so I know everything else works.</p>
","2024-02-12 15:35:20","1","Question"
"77981161","77980681","","<p>A general solution creating a dictionary of lists.</p>
<pre class=""lang-py prettyprint-override""><code>
from collections import defaultdict

data = [
    {'name': 'Alessandra', 'age': 24}, 
    {'name': 'Sasha', 'age': 37}, 
    {'name': 'Jason', 'age': 42}
]

transformed = defaultdict(list)

for _ in data:
    for k, v in _.items():
        transformed[k].append(v)

</code></pre>
<p>Resulting <code>transformed</code>:</p>
<pre><code>{'name': ['Alessandra', 'Sasha', 'Jason'], 'age': [24, 37, 42]}
</code></pre>
","2024-02-12 11:32:59","0","Answer"
"77980995","77980681","","<pre><code> data=[{'name': 'Alessandra', 'age': 24}, {'name': 'Sasha', 'age': 37}, {'name': 'Jason', 'age': 42}]

 name = []

 age = []

 for item in data:

    name.append(item.get(&quot;name&quot;))
    age.append(item.get(&quot;age&quot;))

print(name)

print(age)
</code></pre>
","2024-02-12 11:04:13","0","Answer"
"77980905","77980681","","<p>You can use simple comprehension lists as follows to separate those two:</p>
<pre><code>names = [d['name'] for d in data]
ages = [d['age'] for d in data]
</code></pre>
<p>If you want a more generic version that just looks at the first dict's keys as a reference you can use the following for loop, even though I wouldn't recommend it as this can easily break your code if you define variables that way, and Pylance will detect this as erroneous code as you don't explicitly define the variable names as variables but rather a string:</p>
<pre><code>data = [{'name': 'Alessandra', 'age': 24}, {'name': 'Sasha', 'age': 37}, {'name': 'Jason', 'age': 42}]

for key in data[0].keys():
   exec(f&quot;{key}s = [d[key] for d in data]&quot;) # adding an s to variable names.

print(names)
print(ages)
</code></pre>
","2024-02-12 10:51:06","0","Answer"
"77980800","77980681","","<p>you can using list comprehensions</p>
<pre><code>names = [item['name'] for item in data]
ages = [item['age'] for item in data]
</code></pre>
","2024-02-12 10:36:26","1","Answer"
"77980681","","Collect all dictionary values with the same key within a list in Python","<p>I have several dictionaries within a list, that follow this convention:</p>
<p><code>data = [{'name': 'Alessandra', 'age': 24}, {'name': 'Sasha', 'age': 37}, {'name': 'Jason', 'age': 42}] </code></p>
<p>I want to separate out the list by the keys, to give this output:</p>
<pre><code>names = ['Alessandra', 'Sasha', 'Jason']
ages = [24, 37, 42]
</code></pre>
<p>Can this be done?</p>
","2024-02-12 10:16:32","-1","Question"
"77978571","77964725","","<p>Assuming you want to stick with your Jinja block, here is one implementation. Basically create a dictionary with keys all the keys of big_d dictionary and values initialized as a list. Each time the condition is met, append to the group_id's value the node_id. At the end a loop to print the yaml formatted variable.</p>
<p>Jinja task:</p>
<pre><code>  - name: try Jinja2 filtering
    set_fact:
      worth_a_try: |
        {% set cluster_dict = {} %}
        {% for group_id in big_d.keys() %}
        {% set _ = cluster_dict.update({group_id: []}) %}
        {% endfor %}
        {% for cluster_id, node_ids in small_d.items() %}
        {% for node_id in node_ids %}
        {% for group_id, member_ids in big_d.items() %}
        {% if node_id in member_ids %}
        {% set _ = cluster_dict.update({group_id: cluster_dict[group_id] + [node_id]}) %}
        {% endif %}
        {% endfor %}
        {% endfor %}
        {% endfor %}
        {% for key, value in cluster_dict.items() %}
        {% if value != [] %}
        - {{ key}}:
        {% for entry in value %}
          - {{ entry }}
        {% endfor %}
        {% endif %}
        {% endfor %}

  - debug:
      var: worth_a_try|from_yaml
</code></pre>
<p>Prints:</p>
<pre><code>TASK [debug] **************************************************************************************************************************************************************************************************************
ok: [localhost] =&gt; {
    &quot;worth_a_try|from_yaml&quot;: [
        {
            &quot;2cc5b2fbe6c6&quot;: [
                &quot;aaaa-111&quot;,
                &quot;bbbb-222&quot;,
                &quot;cccc-222&quot;
            ]
        }
    ]
}
</code></pre>
","2024-02-11 22:00:38","1","Answer"
"77977964","77977777","","<p>Just a shorter helper (than your answer's) which evaluates the condition only once for each item:</p>
<pre class=""lang-py prettyprint-override""><code>def dict_partition(input: dict, condition: Callable[[Any, Any], bool]) -&gt; tuple[dict, dict]:
    dicts = ({}, {})
    for key, value in input.items():
        dicts[condition(key, value)][key] = value
    return dicts
</code></pre>
<p>If you want to maintain the ordering of the first dict being the dictionary of true evaluated conditions, and the second dictionary being the dictionary of false evaluated conditions, replace <code>return dicts</code> with <code>return dicts[::-1]</code>.</p>
<p><a href=""https://ato.pxeger.com/run?1=pZLfSsMwFMbBy176BOeuLXRCOwUJThAfo5SStakLtklIT6dD9iTe7EbfaYLvYv6MWrZdCBbaJl_yO-c7J3n_VBtcSbHbQ6NlB7hRXDwB75TUCI-0bemyZQk8iM3HgM3sdv9dswZqXmGpqEaOXIqICzUgcWoClRS1k8nI57nhXZAigaWUbRHD7B5wUGbNU_ZbkADMY4c9LOBtm5jXSY3U8MxMiDVtBwZcgEt5xZF1fRR7bmTz0UL0C8VFbiaFieumjtAMBy0OECGztPBFfl1c2iqR9VgelWpyOdTltybH1CmBUAoWJqOSGQVf5ESZW2Wl2XTXtdEaOeiJdGMlvmahU7Y-Y-ScpL5VZRab5OeOIYGWdsuaTvpF7BjuYB4HY4PLtGSvilXI6j9WMfXiLZyP8J8aad8zc--8QVgsjq0mEB7WGspbd0BQ0f4QZEpnI52d0NkJHZw96kBpLjAKa9uQ2F-N3c7_fwA"" rel=""nofollow noreferrer"">Attempt This Online!</a></p>
","2024-02-11 18:36:27","2","Answer"
"77977943","77977777","","<p>Maybe I'm missing something but you can do this in one loop:</p>
<pre class=""lang-py prettyprint-override""><code>def dict_partition(dct, condition):
    d1, d2 = {}, {}
    for k, v in dct.items():
        if condition(v):
            d1[k] = v
        else:
            d2[k] = v
    return d1, d2


dct = {&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3, &quot;d&quot;: 4}
print(dict_partition(dct, lambda x: x &gt; 2))
</code></pre>
<p>Prints:</p>
<pre><code>({'c': 3, 'd': 4}, {'a': 1, 'b': 2})
</code></pre>
<hr />
<p>If you want to modify input dictionary, you can use <code>dict.pop</code>:</p>
<pre class=""lang-py prettyprint-override""><code>dct1 = {&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3, &quot;d&quot;: 4}
dct2 = {k: dct1.pop(k) for k in [*dct1] if dct1[k] &gt; 2}

print(dct1)
print(dct2)
</code></pre>
<pre><code>{'a': 1, 'b': 2}
{'c': 3, 'd': 4}
</code></pre>
","2024-02-11 18:32:03","2","Answer"
"77977934","77977777","","<p>I'm not convinced this is the best approach. It works, but requires writing a helper function.</p>
<pre><code>def dict_partition(input: dict, condition: Callable[[Any, Any], bool]) -&gt; tuple[dict, dict]:

    dict_1 = {
        key: value
            for key, value in input.items()
                if condition(key, value)
    }

    dict_2 = {
        key: value
            for key, value in input.items()
                if not condition(key, value)
    }

    return (dict_1, dict_2)
</code></pre>
<p>Which would then be used with a <code>lambda</code>, like so:</p>
<pre><code>(dict_1, dict_2) = \
    dict_partition(map, lambda key, value: key &lt; 3)
</code></pre>
<p>This test case demonstrates that it works.</p>
<pre><code>from .dict_partition import dict_partition

def test_dict_partition():

    input = {
        1: 'one',
        2: 'two',
        3: 'three',
        4: 'four',
        5: 'five'
    }

    (dict_1, dict_2) = dict_partition(input, lambda key, value: key &lt; 3)

    dict_1_expected = {
        1: 'one',
        2: 'two'
    }

    dict_2_expected = {
        3: 'three',
        4: 'four',
        5: 'five'
    }

    assert dict_1 == dict_1_expected, 'dict_1 fail test case'
    assert dict_2 == dict_2_expected, 'dict_2 fail test case'
</code></pre>
<p>But pehaps there is some better solution which doesn't require us to write our own helper function to do it?</p>
","2024-02-11 18:29:15","1","Answer"
"77977777","","How to partition a dictionary in Python?","<p>Many languages provide a standard library which provides a dictionary or binary tree map type. Many of these data structure implementations provide a function to split the data structure into a pair of data structures based on some condition.</p>
<p>This is known as a partition operation. Rust calls it &quot;split off&quot;. C++ <code>map</code> types have &quot;lower bound&quot; and &quot;upper bound&quot; operation for comparison to keys. The standard library also provides a &quot;partition&quot; operation which exists in <code>std::algorithm</code>.</p>
<p>I can't see an ideomatic way of doing this in Python. I have managed to come up with a manual way of doing it, but I don't really like this code, because it doesn't split a <code>dict</code> into two parts, but splits part of it and then splits another part of it, resulting in fragile (and duplicated) code.</p>
<pre><code>map = {
   ...
}

map_part_1 = {
    key: value for key, value in map.items() if &lt;condition&gt;
}

map_part_2 = {
    key: value for key, value in map.items() if not &lt;condition&gt;
}
</code></pre>
<p>Not great, right? Is there a better way?</p>
","2024-02-11 17:49:56","0","Question"
"77976858","77976740","","<p>Preprocess and load the list of strings into a set for faster membership checks:</p>
<pre><code>import jsonlines

set_of_strings = set(list_of_strings)
key = &quot;field_1&quot;
matching_dicts = []

# Open the JSONL file and iterate over its lines
with jsonlines.open(file_path) as reader:
    for line_number, obj in enumerate(reader):
        # Check if the object has the target field and its value is in the set_of_strings
        if key in obj and obj[key] in set_of_strings:
            matching_dicts.append((obj, line_number))

</code></pre>
","2024-02-11 13:05:07","2","Answer"
"77976740","","Efficiently comparing list of dictionaries in JSONL file with list of keys","<ul>
<li>I have a jsonl file containing around 1,000,000 dictionaries</li>
<li>I am interested in discionaries where the values of field_1 is a string
from list_of_strings which contains around 100,000 strings.</li>
</ul>
<p>I can hold both in memory at the same time, and i'd like to quickly and efficiently compare them.</p>
<p>my first attempt was</p>
<pre><code>matching_dicts = []
key = &quot;field_1 &quot;

# Open the JSONL file and iterate over its lines
with jsonlines.open(file_path) as reader:
    for line_number, obj in enumerate(reader):
        # Check if the object has the target field and its value is in the list_of_strings
        if key in obj and obj[key] in list_of_strings :
            # If so, append the line to the list
            matching_articles.append((obj, line_number))
</code></pre>
<p>this is slow what would be faster?</p>
","2024-02-11 12:23:04","-1","Question"
"77975641","","SolidJS + Leaflet: Picking Location on Map","<p>The <code>handlePicker</code> function is not fully working. It does not pick the location with marker. Is there any library for Solidjs or Solution</p>
<pre><code>import { Title } from &quot;@solidjs/meta&quot;;
import L, { LatLng } from &quot;leaflet&quot;;
import { FaSolidLocationCrosshairs } from &quot;solid-icons/fa&quot;;
import { createEffect, createSignal, onMount } from &quot;solid-js&quot;;
import useMap, { buildMap } from &quot;~/components/useMap&quot;;
export default function PublishPage() {
    const [latlng, setLatlng] = createSignal&lt;LatLng&gt;()
    let mapDiv: HTMLDivElement;
    let map: L.TileLayer | undefined;
    let pin: any;

    onMount(() =&gt; {
        map = buildMap(mapDiv)
    })

    function handlePicker(ev: any) {
        console.log(ev.latlng)
        setLatlng(new LatLng(ev.latlng.lat, ev.latlng.lng))
        if (typeof pin == &quot;object&quot;) {
            pin.setLatLng(ev.latlng);
        } else {
            pin = L.marker(ev.latlng, { riseOnHover: true, draggable: true });
            pin.addTo(map);
            pin.on('drag', function (ev: any) {
                setLatlng(ev.latlng)
            });
        }
    }

    createEffect(() =&gt; {

        if (map) {
            map.on(&quot;click&quot;, handlePicker)

            return () =&gt; {
                map?.off(&quot;click&quot;, handlePicker)
            }
        }
    }, [])

    return (
        &lt;div&gt;
            &lt;Title&gt;Publish App&lt;/Title&gt;
            &lt;div class=&quot;h-[90vh] flex items-center justify-center text-[#222]&quot;&gt;
                &lt;div class=&quot;shadow border rounded-lg p-6 w-[80dvh]&quot;&gt;
                    &lt;div class=&quot;text-center&quot;&gt;
                        &lt;h2 class=&quot;text-3xl font-bold&quot;&gt;
                            Publish
                        &lt;/h2&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;my-4&quot;&gt;
                        &lt;div class=&quot;cursor-[pointer_!important]&quot;&gt;
                            &lt;div class=&quot;w-full h-[20rem] rounded-lg&quot; ref={mapDiv} /&gt;
                        &lt;/div&gt;
                        &lt;div class=&quot;mt-2 flex justify-end&quot;&gt;
                            &lt;button class=&quot;border shadow px-4 py-2&quot;&gt;
                                &lt;FaSolidLocationCrosshairs /&gt;
                            &lt;/button&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    )
}
</code></pre>
","2024-02-11 04:57:35","0","Question"
"77974118","77966524","","<p>Maybe this lines helps you. I didn't have enough time, so sorry for not adding comments for my code.</p>
<pre><code>from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import time
#a testing url
url = 'https://www.google.com/search?q=war&amp;oq=war&amp;gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIHCAEQABiABDIHCAIQABiABDIHCAMQABiABDIHCAQQABiABDIHCAUQABiABDINCAYQLhjHARjRAxiABDIGCAcQRRg90gEHNTgyajBqN6gCALACAA&amp;sourceid=chrome&amp;ie=UTF-8'

driver = webdriver.Chrome()
driver.get(url)
body = driver.find_element(By.CSS_SELECTOR, &quot;body&quot;)
while True:
    old_height = driver.execute_script(&quot;return document.body.scrollHeight&quot;)
    body.send_keys(Keys.END)
    time.sleep(1.5)
    new_height = driver.execute_script(&quot;return document.body.scrollHeight&quot;)
    if new_height == old_height:
        break
more_bottom = driver.find_element(By.ID, &quot;botstuff&quot;).find_elements(By.TAG_NAME, &quot;span&quot;)
for index in range(len(more_bottom)-1, -1, -1):
    if more_bottom[index].text == 'More results':
        more_bottom = more_bottom[index]
        break
max_try = 4
while not not True:
    try_number = 0
    while True:
        try:
            more_bottom.click()
            break
        except:
            if try_number &gt; max_try:
                try_number = -1
                break
            time.sleep(1.5)
            try_number += 1
    if try_number == -1:
        break
    time.sleep(1.5)
    body.send_keys(Keys.END)
</code></pre>
","2024-02-10 17:48:45","0","Answer"
"77969573","77969431","","<p>Yes it is guaranteed that no copies of the array storage are made. <a href=""https://developer.apple.com/documentation/swift/array"" rel=""nofollow noreferrer""><code>Array</code></a> has copy-on-write behaviour:</p>
<blockquote>
<p>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies.</p>
<p>[...]</p>
<p>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.</p>
</blockquote>
<p>Though <code>let p = stuff[on]</code> copies the value of <code>stuff[on]</code> to <code>p</code>, the value of the <code>Array</code> struct is small - only 8 bytes on my machine (see <code>MemoryLayout&lt;[[String]]&gt;.size</code>).</p>
<p>The 8-byte struct value includes a pointer to some storage location for the array, and <code>p</code> and <code>stuff[on]</code> would be pointing to the same storage location, as the documentation says. From the standard library source, this would be an instance of the class <a href=""https://github.com/apple/swift/blob/21fd18f802ce8ae61a1ff14f4dd9d686b1df52aa/stdlib/public/core/SwiftNativeNSArray.swift#L511"" rel=""nofollow noreferrer""><code>__ContiguousArrayStorageBase</code></a>.</p>
<p>The array storage will only be copied if you modify <code>stuff[on]</code> by e.g. adding another <code>[String]</code> to it. <code>p</code> and <code>stuff[on]</code> would now point to different storage locations. But even then, the <em>inner</em> arrays will still share storage, since you didn't modify the inner arrays.</p>
<p>Related: <a href=""https://stackoverflow.com/questions/77349445/how-are-updates-to-var-arrays-handled-in-swift-memory-confused-about-cow"">How are updates to var arrays handled in Swift memory (confused about CoW)</a></p>
<hr>
<p>As for comparing the pointers, your code is comparing the locations of the elements in the inner array. As I said above, the outer array's storage could be copied even when the inner arrays are not, and vice versa, so you might want to compare <code>&amp;stuff[&quot;Cats&quot;][0]</code> and <code>&amp;p[&quot;Cats&quot;][0]</code> too.</p>
","2024-02-09 16:35:43","1","Answer"
"77969562","77969102","","<p>just go by-lines and add what you want between 'em</p>
<p>*untested</p>
<pre class=""lang-py prettyprint-override""><code>block_headers = [&quot;hpa&quot;, &quot;secret&quot;, &quot;service&quot;]
indent   = None  # cause an Exception if used for slicing outside block
in_block = None  # secret ternary
block_start = False
with open(path_src) as fh_src, open(path_dest, &quot;w&quot;) as fh_dest:
    for line in fh_src:
        # see if we've entered a block
        for header in block_headers:
            position = line.find(f&quot;{header}:&quot;)
            if position &gt;= 0:  # -1 for didn't find
                block_start = True
                in_block    = True
                indent = position
                break  # no need to check other headers

        # test if still in a block
        if block_start or (in_block is True and line[:indent].startswith(&quot; &quot;)):
            fh_dest.write(line)
            block_start = False
            continue  # go to next line

        # exited block
        indent   = None
        in_block = False
        block_start = False  # can this be True?

        # writing destination file
        fh_dest.write(&quot;\n&quot;)  # add that newline
        fh_dest.write(line)
</code></pre>
","2024-02-09 16:33:35","0","Answer"
"77969431","","Is it absolutely the case that Swift >will not< deep copy a large array, when one ""guard let"" the array?","<pre><code>typealias Stuff = [[String]] // typically zillions of items
var stuff: [String: Stuff] = [:] // tens of these
</code></pre>
<p>When I deep copy† a <code>Stuff</code>,</p>
<pre><code>spare: Stuff = original{
    let line = $0.map{ $0 }
    return line
}
</code></pre>
<p>it takes 1/2 sec on a new phone, so of course to avoid.</p>
<p>Now say I am working with a <code>Stuff</code>, like this <code>calculations(on: &quot;Cats&quot;)</code>, strictly reading from <code>stuff[&quot;Cats&quot;]</code></p>
<pre><code>///Strictly reading from Stuff
func calculations(on: String) {
  guard stuff[on] != nil else { return }
  .. = stuff[on]!.blah.blah
  .. = stuff[on]!.blah.blah
  ..
  .. dozens and dozens of reads from stuff[on]!
}
</code></pre>
<p>Of course it is much tidier if you</p>
<pre><code>///Strictly reading from Stuff
func calculations(on: String) {
  guard let p = stuff[on] else { return }
  .. = p.blah.blah
  .. = p.blah.blah
  ..
  .. dozens and dozens of reads from p
}
</code></pre>
<p>If I do that,</p>
<ul>
<li><p>is it indeed <em><strong>not</strong></em> making a deep copy of <code>stuff[&quot;Cats&quot;]</code> ?</p>
</li>
<li><p>Is that truly reliable, and it will absolutely never do so?</p>
</li>
</ul>
<p>As a related question, I believe, but I'm not sure,</p>
<p>that this would be how you check if indeed <code>p</code> is not a deep copy of <code>stuff[&quot;Cats&quot;]</code> -&gt;</p>
<pre><code>withUnsafePointer(to: &amp;p[0][0]) {
    print(&quot;p is at \($0)&quot;)
}
withUnsafePointer(to: &amp;stuff[&quot;Cats&quot;][0][0]) {
    print(&quot;whereas stuff[&quot;Cats&quot;][0][0] is at \($0)&quot;)
}
</code></pre>
<p>Looks right?</p>
<hr />
<p>† <em>As an aside, I really don't know if that is the best way to deep copy a 2D string array in Swift.</em></p>
","2024-02-09 16:11:36","0","Question"
"77969385","77969102","","<p>Maybe it's a dumb idea, but why not open the file after it has been written, search for all lines that don't start with whitespace, and prepend a line break?</p>
","2024-02-09 16:02:55","-1","Answer"
"77969105","77968846","","<blockquote>
<p>Then I remove the items from the ArrayList so it can be used again to store the next pair of dates.</p>
</blockquote>
<p>That's not how it works. The ArrayList is <strong>not copied</strong> when you add it to the dictionary. Instead, you have one object, and gave the dictionary a reference to that object. Then you <em>removed the items</em>. This is done repeatedly, until the last item is added to the dictionary and the items are cleared. The result is a bunch of dictionary entries, each pointing to the <em>same empty ArrayList object</em>.</p>
<p>Instead, you need to <strong>create a new ArrayList</strong> for each item you want to add to the dictionary.</p>
","2024-02-09 15:15:04","1","Answer"
"77969102","","Python Dictionary - Yaml File Empty Line","<p>I have yaml file which I created from my dictionary. The format looks good but I want to add one line space between some keys that are kubernetes resources like:service, deployment, secret etc. How can I do that with python? Is there a way to work on this with python dicitonary or yaml files? This is what I have:</p>
<pre><code>   hpa:
    projectName:
      maxReplicas: 6
      minReplicas: 2
      targetCPUUtilizationPercentage: 250
  secret:
    projectName:
      name: projectName-secret
  service:
    projectName:
      name: projectName-service
      selector:
        app: projectName
</code></pre>
<p>This is what I want:</p>
<pre><code>      hpa:
        projectName:
          maxReplicas: 6
          minReplicas: 2
          targetCPUUtilizationPercentage: 250

      secret:
        projectName:
          name: projectName-secret

      service:
        projectName:
          name: projectName-service
          selector:
            app: projectName
</code></pre>
","2024-02-09 15:14:55","-1","Question"
"77969005","77968846","","<h2>Nest Arraylists in Dictionary</h2>
<ul>
<li>For each dictionary key, create a new arraylist.</li>
</ul>
<pre class=""lang-vb prettyprint-override""><code>Function myDict() As Object
    
    Dim keyList As Object:
    Set keyList = CreateObject(&quot;System.Collections.ArrayList&quot;)
    keyList.Add (&quot;Hey&quot;)
    keyList.Add (&quot;Hello&quot;)
    
    Dim dateToday As Date: dateToday = Date
    
    Dim dict As Object: Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    
    Dim arrList As Object, i As Long, date1 As Date, date2 As Date
    
    For i = 0 To keyList.Count - 1
        date1 = DateAdd(&quot;d&quot;, Int(20000 * Rnd), dateToday)
        date2 = DateAdd(&quot;d&quot;, Int(20000 * Rnd), dateToday)
        Set arrList = CreateObject(&quot;System.Collections.ArrayList&quot;)
        arrList.Add (date1)
        arrList.Add (date2)
        dict.Add Key:=keyList(i), Item:=arrList
        ' or:
        'Set dict(keyList(i)) = arrList
    Next i
    
    Set myDict = dict

End Function
</code></pre>
<pre class=""lang-vb prettyprint-override""><code>Sub Test()
    Dim dict As Object: Set dict = myDict
    Dim Key As Variant, Item As Variant
    For Each Key In dict.Keys
        Debug.Print Key
        For Each Item In dict(Key)
            Debug.Print vbTab &amp; Item
        Next Item
    Next Key
End Sub
</code></pre>
","2024-02-09 14:56:53","2","Answer"
"77968846","","VBA storing an ArrayList in Dictionary","<p>I need a dictionary that contain a key with a corresponding pair of dates. I created below code to illustrate what I'm doing now. So basically, I store the pair of dates in an ArrayList which I then add to my dictionary. Then I remove the items from the ArrayList so it can be used again to store the next pair of dates.
When I want to use myDict on other parts of the code, the dictionary contains the key but it doesn't contain the corresponding pair with dates.
I assume that has to do with passing by reference of ArrayList (?) and the Clear function that I apply.</p>
<p>How can I resolve this? I don't specifically need to use an ArrayList to store the pair of dates.</p>
<pre><code>Function myDict() As Object

    Dim dict As Object, keyList As Object, arrListToDict As Object
    Dim keyListCount As Long, iLoop As Long
    Dim dateToday As Date, date1 As Date, date2 As Date
    Dim x As Long
    
    Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    Set keyList = CreateObject(&quot;System.Collections.ArrayList&quot;)
    Set arrListToDict = CreateObject(&quot;System.Collections.ArrayList&quot;)
    
    keyList.Add (&quot;Hey&quot;)
    keyList.Add (&quot;Hello&quot;)
    keyListCount = keyList.Count
    dateToday = Date

    
    For iLoop = 0 To keyListCount - 1
        date1 = DateAdd(&quot;d&quot;, Int(20000 * Rnd), dateToday)
        date2 = DateAdd(&quot;d&quot;, Int(20000 * Rnd), dateToday)
        arrListToDict.Add (date1)
        arrListToDict.Add (date2)
        dict.Add key:=keyList(iLoop), Item:=arrListToDict
        
        arrListToDict.Clear
    Next iLoop
    
    Set myDict = dict

End Function
</code></pre>
<p>I googled but couldn't find a solution.</p>
","2024-02-09 14:33:23","1","Question"
"77968774","77967794","","<p>You appear to want to put <code>1</code> in the map if no value exists, otherwise add <code>1</code> to the current value. I agree that using <code>computeIfAbsent</code> is not the best substitute for your current code. However, your use-case sounds like it would be perfectly solved by <a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#merge(K,V,java.util.function.BiFunction)"" rel=""nofollow noreferrer""><code>Map#merge(K,V,BiFunction)</code></a>:</p>
<blockquote>
<p>If the specified key is not already associated with a value or is associated with null, associates it with the given non-null value. Otherwise, replaces the associated value with the results of the given remapping function, or removes if the result is null.</p>
</blockquote>
<p>For example:</p>
<pre class=""lang-java prettyprint-override""><code>static void method(Integer key, Map&lt;Integer, Integer&gt; map) {
    map.merge(key, 1, Math::addExact);
}
</code></pre>
<p>I used <code>Math::addExact</code> to prevent silent overflows. Whether you decide to keep that or use something like <code>Integer::sum</code> is up to you.</p>
<hr />
<p>Also, a benefit of <code>merge</code> is that it's thread-safe for <code>ConcurrentMap</code> implementations, if that matters here.</p>
","2024-02-09 14:20:24","4","Answer"
"77968065","77967794","","<p>Yet another way to implement it that sonar will like, using <code>getOrDefault(Object key, V defaultValue)</code> :</p>
<pre class=""lang-java prettyprint-override""><code>private static void method(Integer key, final Map&lt;Integer, Integer&gt; aMap) {
    aMap.put(key, aMap.getOrDefault(key, 0) + 1);
}
</code></pre>
","2024-02-09 12:14:07","1","Answer"
"77967908","77967794","","<p>I would go with <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/Map.html#putIfAbsent-K-V-"" rel=""nofollow noreferrer"">putIfAbsent()</a> -- passed Sonar here :)</p>
<pre class=""lang-java prettyprint-override""><code>private static void method(Integer key, final Map&lt;Integer, Integer&gt; aMap) {
    aMap.putIfAbsent(key, 0);  
    var value = aMap.get(key);
    aMap.put(key, value + 1);
}
</code></pre>
<p>Two simple JUnit test cases:</p>
<pre class=""lang-java prettyprint-override""><code>@Test
void testWithAbsentKey() {
    final var map = new HashMap&lt;Integer, Integer&gt;();
    method(1, map);

    assertEquals(1, map.get(1));
}

@Test
void testWithKeyPresent() {
    final var map = new HashMap&lt;Integer, Integer&gt;();
    map.put(1, 1);
    method(1, map);

    assertEquals(2, map.get(1));
}
</code></pre>
<p>Please bear in mind - just like the original code provided by OP - this solution is not thread-safe!</p>
","2024-02-09 11:49:20","2","Answer"
"77967892","77967794","","<p>Using computeIfAbsent would be easier if you could change the map value to <code>AtomicInteger</code> so you'd change to <code>aMap.computeIfAbsent(key, AtomicInteger::new).incrementAndGet()</code>:</p>
<pre><code>private static void method(Integer key, final Map&lt;Integer, AtomicInteger&gt; aMap) {
    aMap.computeIfAbsent(key, AtomicInteger::new).incrementAndGet();
  }
</code></pre>
<p>The above has benefit of thread-safe counter updates when used with <code>ConcurrentHashMap</code>, as there is no risk of two threads using get-put inconsistently.</p>
","2024-02-09 11:46:42","1","Answer"
"77967794","","Sonar use computeIfAbsent","<p>I have this method:</p>
<pre><code>private static void method(Integer key, final Map&lt;Integer, Integer&gt; aMap) {
  var value = aMap.get(key);
  if(value == null) {
    value = 0;
  }
  aMap.put(key, value + 1);
}
</code></pre>
<p>and Sonar analysis is telling me I should use <code>Map#computIfAbsent</code>, but I don't really know how to ensure the same result, since computeIfAbsent will update the map with 0, something which is not done as it is right now</p>
","2024-02-09 11:28:25","1","Question"
"77966524","","Can anyone suggest a way to inifnite scroll of google search reseult python selenium","<p>I have tried below code but it's not working. This was previously suggested by someone here. But don't works.</p>
<pre><code>def load_companies(self, url):
    print(&quot;Getting business info&quot;, url)
    self.driver.get(url)
    time.sleep(5)
    panel_xpath = '//*[@id=&quot;QA0Szd&quot;]/div/div/div[1]/div[2]/div/div[1]/div/div/div[2]/div[1]'
    scrollable_div = self.driver.find_element(By.XPATH, panel_xpath)
    # scrolling
    flag = True
    i = 0
    while flag:
        print(f&quot;Scrolling to page {i + 2}&quot;)
        self.driver.execute_script('arguments[0].scrollTop = arguments[0].scrollHeight', scrollable_div)
        time.sleep(2)

        if &quot;You've reached the end of the list.&quot; in self.driver.page_source:
            flag = False

        self.get_business_info()
        i += 1
</code></pre>
<p>Solution for infinite scroll of google maps in python selenium</p>
","2024-02-09 07:14:45","0","Question"
"77965491","77965378","","<p>You want to use <code>SortedDict</code> in the sortedcontainers package.  It behaves just like a dictionary, but has additional methods.
You will have to install it via pip.</p>
<pre><code># Binary search to find the index of the first element larger than now
index = dates.bisect_right(now)
# Delete everything now or below
del dates.keys()[:index]
</code></pre>
","2024-02-09 00:37:58","3","Answer"
"77965440","77965378","","<p>You can get all the keys and sort them, then loop over that.</p>
<pre><code>for date in sorted(dates):
    if date &gt;= now:
        break
    del dates[date]
</code></pre>
","2024-02-09 00:19:57","2","Answer"
"77965391","77965378","","<p>You could form a new Dictionary using a comprehension; order does not matter:</p>
<pre><code>dates2 = {k:v for k, v in dates.items() if k &gt; now}
</code></pre>
<p>which gives</p>
<pre><code>{datetime.datetime(2024, 3, 17, 0, 0): 'f', datetime.datetime(2024, 4, 3, 0, 0): 'g'}
</code></pre>
","2024-02-09 00:00:41","3","Answer"
"77965378","","is there a way to delete several items at once in a dictionary?","<p>I'm working with Python 3.11. I have a dictionary whose keys are datetime objects and whose values are strings.</p>

<pre class=""lang-python prettyprint-override""><code>dates = {datetime.datetime(2022, 1, 1): &quot;a&quot;, 
         datetime.datetime(2022, 5, 4): &quot;b&quot;,
         datetime.datetime(2022, 9, 25): &quot;c&quot;,
         datetime.datetime(2023, 5, 17): &quot;d&quot;,
         datetime.datetime(2023, 12, 15): &quot;e&quot;,
         datetime.datetime(2024, 3, 17): &quot;f&quot;,
         datetime.datetime(2024, 4, 3): &quot;g&quot;} 
</code></pre>
<p>I would like to know if there is a way to remove all the elements that have already passed (other than iterating through all the elements). For example in this case <code>datetime.datetime.now() = datetime.datetime(2024, 2, 9)</code> so the result dictionary will be:</p>
<pre class=""lang-python prettyprint-override""><code>dates = {datetime.datetime(2024, 3, 17): &quot;f&quot;,
         datetime.datetime(2024, 4, 3): &quot;g&quot;} 
</code></pre>
<p>This code works in case the dictionary is ordered by date (which may not be the case):</p>
<pre class=""lang-python prettyprint-override""><code>new_dates = {}
now = datetime.datetime.now()
for k, v in reversed(dates.items()):
    if k &lt; now:
        break
    new_dates[k] = v
</code></pre>
<p>But I would like to know if there is any other way without a loop or thay might work in a disorderly dictionary.</p>
","2024-02-08 23:53:39","2","Question"
"77964949","77964822","","<p>To invert your cat_dic, if an item can only belong to a single category:</p>
<pre class=""lang-py prettyprint-override""><code>inv_cat_dict = {}
for k,v in cat_dict.items():
    for x in v:
        inv_cat_dict.update([(x,k)])

print(inv_cat_dict)
# output: {'cloth': 'shopping', 'watch': 'shopping', 'shoes': 'shopping', 'shirt':...

</code></pre>
<p>... or if you want to consider the possibility that an item could belong to several categories:</p>
<pre class=""lang-py prettyprint-override""><code>inv_cat_dict = {}
for k,v in cat_dict.items():
    for x in v:
        inv_cat_dict.setdefault(x, []).append(k)

print(inv_cat_dict)
# output: {'cloth': ['shopping', 'rent'], 'watch': ['shopping', 'travel'],...

</code></pre>
","2024-02-08 21:50:03","0","Answer"
"77964822","","if-elif-else statement (>10 lines), how to shorten it? Can we use dictionary as an alternative?","<p>I'm writing a function for budgeting. This part will assign a category for the input item from a user.</p>
<p>The function works but when I come back and look at my code. I wonder how to make this if-elif-else statement shorter.</p>
<p>My <strong>objective</strong> of this part is to <strong>get the category name for the input item. If the input is not listed there, it should be labeled as &quot;other&quot;</strong></p>
<pre><code>desc = input(&quot;what have you spent on? &quot;)

if desc in ['cloth', 'watch', 'shoes', 'shirt', 'pants','skirt', 'dress', 'hat']:
    cat = 'shopping'
elif desc in ['lidl', 'kaufland', 'food', 'veggies', 'meat', 'eggs', 'milk']:
    cat = 'food &amp; grocery'
elif desc in ['meals', 'drink','coffee','bakery', 'cake']:
    cat = 'bar &amp; restaurants'
elif desc in ['bus', 'flight','train','transport','car']:
    cat = 'transport &amp; car'
elif desc in ['rent']:
    cat = 'rent'
elif desc in ['withdraw', 'cash']:
    cat = 'cash'
elif desc in ['ATM']:
    cat = 'ATM'
elif desc in ['accommodation','room','hostel','hotel']:
    cat = 'travel'
elif desc in ['internet']:
    cat = 'household &amp; utilities'
elif desc in ['rossmann', 'dm']:
    cat = 'healthcare &amp; drug'     
elif desc in ['donation']:
    cat = 'giving'       
else:
    cat = 'other'
</code></pre>
<p>I've researched and tried some solutions but I don't know how to make it work.
I've been trying to use a dictionary (like below) but I can't get it right.</p>
<pre><code>desc=input(&quot;what have you spent on? &quot;)
cat_dict = {'shopping': ['cloth', 'watch', 'shoes', 'shirt', 
                         'pants','skirt', 'dress', 'hat', 'H&amp;M', 'C&amp;A', 'Zalando'],
            'food &amp; grocery': ['lidl', 'kaufland', 'food', 
                               'veggies', 'meat', 'eggs', 'milk'],
            'bar &amp; restaurants':['meals', 'drink','coffee','bakery', 'cake'],
            'transport &amp; car':['bus', 'flight','train','transport','taxi'],
            'rent':['rent'],
            'cash':['withdraw', 'cash'],
            'ATM':['ATM'],
            'travel':['accommodation','room','hostel','hotel'],
            'household &amp; utilities':['internet'],
            'healthcare &amp; drug':['rossmann', 'dm'],
            'giving' :['donation']
           } 
for key, val in cat_dict.items():
    if desc in val:
        category = key
        return category
    else:
        category='other'
        return category
</code></pre>
<p>I want to it return the 'key' as the category.
But, for example, if I enter 'taxi' it returns 'other' instead of 'transport &amp; car'.</p>
<hr />
<p>Thanks all for your help! I'll report back later &lt;3</p>
","2024-02-08 21:20:32","0","Question"
"77964725","","Ansible - compare values from two different dictionaries and output when there is a match","<p>I have two Ansible dictionaries</p>
<pre><code>    &quot;small_d&quot;: {
        &quot;cluster-c8836&quot;: [
            &quot;aaaa-111&quot;,
            &quot;bbbb-222&quot;,
            &quot;cccc-222&quot;
        ]
    }
</code></pre>
<p>and</p>
<pre><code>    &quot;big_d&quot;: {
        &quot;2cc5b2fbe6c6&quot;: [
            &quot;dddd-asda&quot;,
            &quot;aaaa-111&quot;,
            &quot;ddd-2411&quot;,
            &quot;bbbb-222&quot;,
            &quot;dddd-76543&quot;,
            &quot;cccc-222&quot;,
            &quot;dddd-66666&quot;
        ],
        &quot;0a722267a5bd&quot;: [
            &quot;dddd-2468&quot;
        ]
    }
</code></pre>
<p>I want to loop through the values of small_d to see if the same value exists in big_d.
If it does, i'd like to output the relevant key from big_d and a list of the matching values
e.g.</p>
<pre><code>&quot;2cc5b2fbe6c6&quot;: [&quot;aaaa-111&quot;, &quot;bbbb-222&quot;, &quot;cccc-222&quot;]
</code></pre>
<p>I'm trying this with a Jinja2 template</p>
<pre><code>- name: try Jinja2 filtering
  set_fact:
    worth_a_try: |
      {% for cluster_id, node_ids in small_d.items() %}
      {% for node_id in node_ids %}
      {% for group_id, member_ids in big_d.items() %}
      {% if node_id in member_ids %}
        - {{group_id}}:
            {{node_id}}
      {% endif %}
      {% endfor %}
      {% endfor %}
      {% endfor %}
- debug: var=worth_a_try
</code></pre>
<p>The output that i'm getting is</p>
<pre><code>    worth_a_try|from_yaml&quot;: [
        {
            &quot;2cc5b2fbe6c6&quot;: &quot;aaaa-111&quot;
        },
        {
            &quot;2cc5b2fbe6c6&quot;: &quot;bbbb-222&quot;
        },
        {
            &quot;2cc5b2fbe6c6&quot;: &quot;cccc-222&quot;
        }
</code></pre>
<p>How best can I clean up this output ?</p>
","2024-02-08 20:52:30","0","Question"
"77961597","77960915","","<p>As <a href=""https://stackoverflow.com/users/16649550/pepijn-kramer"">@Pepijn Kramer</a> mentioned you can use a struct containing vectors of int and float -</p>
<pre><code>struct IntsAndFloats
{
    std::vector&lt;int&gt; Ints;
    std::vector&lt;float&gt; Floats;
};
</code></pre>
<p>Then you can initialize it like this -</p>
<pre><code>std::vector&lt;IntsAndFloats&gt; outer_dict = {
    // 0 :
    {
        {0, 1}, // Ints
        {0.0, 1.2} // Floats
    },
    // 1 :
    {
        {0}, // Ints
        {0.5} // Floats
    }
};
</code></pre>
<p>See full code <a href=""https://godbolt.org/z/obce18qGd"" rel=""nofollow noreferrer"">here</a></p>
","2024-02-08 12:19:37","2","Answer"
"77961387","77961358","","<p>The simplest answer is <code>find()</code>.</p>
<p>Here's why:</p>
<p>Imagine you're playing hide and seek. Map would check every hiding spot even if it finds the person you're looking for right away. Filter goes through every possible spot too, making sure no one is left behind. But find is the quickest. It stops looking as soon as it finds the person. So, if you just need the first match, go with find. It doesn't waste time and gets you the result fast.</p>
<p>But actually, the question of &quot;which one is faster?&quot; can indeed be somewhat meaningless without context. The efficiency of these methods varies based on what exactly you're trying to achieve: whether it's finding a single item quickly, gathering all items that match a condition, or transforming data.</p>
<p>It's crucial to understand that each of these methods serves distinct purposes and choosing the right one depends on the specific requirements of your scenario:</p>
<ul>
<li><strong><code>find</code></strong> is designed to locate the first matching item in an array and stops once it finds a match. This characteristic generally makes it faster for scenarios where you only need the first matching element.</li>
<li><strong><code>filter</code></strong>, on the other hand, is used to obtain an array of all elements that match the given condition. If your objective is to gather all matches, <code>filter</code> is the appropriate choice, though it may be slower compared to <code>find</code> when only one item is needed.</li>
<li><strong><code>map</code></strong> is intended for transformations; it applies a function to each element in the array and returns an array of the results. It's not suitable for searching or finding purposes and was less relevant to the comparison on finding items.</li>
</ul>
","2024-02-08 11:43:50","3","Answer"
"77961358","","How do map, filter, and find compare in terms of performance in JavaScript?","<p>To perform a performance test for JavaScript's built-in higher-order functions for map, filter, find, you can use the performance.now() method to measure the time it takes to execute each operation. Here's a basic example of how you can do it:</p>
<pre><code>    const data = [...]; // Your data array
    
    // Test map function
    const mapStart = performance.now();
    const mappedData = data.map(item =&gt; item * 2); // Modify the operation based on your data structure
    const mapEnd = performance.now();
    console.log('Time taken for map operation:', mapEnd - mapStart, 'milliseconds');
    
    // Test filter function
    const filterStart = performance.now();
    const filteredData = data.filter(item =&gt; item % 2 === 0); // Modify the operation based on your data structure
    const filterEnd = performance.now();
    console.log('Time taken for filter operation:', filterEnd - filterStart, 'milliseconds');



 // Test find function
    const findStart = performance.now();
    const foundItem = data.find(item =&gt; item === targetValue); // Modify the operation based on your data structure
    const findEnd = performance.now();
    console.log('Time taken for find operation:', findEnd - findStart, 'milliseconds');
</code></pre>
<p>Replace data with your actual data array, and modify the operations inside the callbacks for map, filter, and find based on your data structure and requirements.</p>
<p>How measuring the performance taken for each operation, Example compare the performance of map, filter, and find functions for your specific use case. can that performance may vary depending on the size of your data and the complexity of the operations?.</p>
","2024-02-08 11:40:24","-1","Question"
"77960915","","Nested maps in C++ with vectors of different types as values","<p>I am trying to convert the following Python code into C++:</p>
<pre><code>outer_dict = {}

outer_dict[0] = {}
outer_dict[0][&quot;ints&quot;] = [0]
outer_dict[0][&quot;floats&quot;] = [0.0]

outer_dict[0][&quot;ints&quot;].append(1)
outer_dict[0][&quot;floats&quot;].append(1.2)

outer_dict[1] = {}
outer_dict[1][&quot;ints&quot;] = [0]
outer_dict[1][&quot;floats&quot;] = [0.5]
</code></pre>
<p>Essentially, the data structure is a nested dictionary in python where the values of the inner dictionary are lists of different data types. The overall data structure looks as follows:</p>
<pre><code>outer_dict 
{
  0: 
  {
    &quot;ints&quot;: [0, 1]        // list of ints
    &quot;floats&quot;: [0.0, 1.2]  // list of floats
  }
  1:
  {
    &quot;ints&quot;: [0]          // list of ints
    &quot;floats&quot;: [0.5]      // list of floats
  }
}
</code></pre>
<p>How can such a code be converted to C++?</p>
","2024-02-08 10:31:19","0","Question"
"77960092","77960054","","<p>The key is to understand how to sort the keys of a dictionary as <em>integers</em> and not in lexigraphical order as strings, because according to that ordering, <code>'11'</code> does come before <code>'2'</code>.</p>
<p>Consider:</p>
<pre><code>&gt;&gt;&gt; d = {'1': 'asdf', '11': 'asdfasd', &quot;2&quot;: 'afds'}
&gt;&gt;&gt; {k: d[k] for k in sorted(d.keys(), key=int)}
{'1': 'asdf', '2': 'afds', '11': 'asdfasd'}
</code></pre>
<p>Fortunately in modern Python (3.6+) dictionaries are insertion ordered, so once this sorting is done, it will remain in the same order.</p>
","2024-02-08 08:07:13","0","Answer"
"77960054","","Dump a dictorary as json with numeric ordered keys","<pre><code>I have a dictonary dumped to json like this
dict({'abc1': {'1': 'asdf', '11': 'asdfasd', &quot;2&quot;: 'afds'}, 'abc2': {'1': 'asdf', '11': 'asdfasd', '2': 'afds'}})
</code></pre>
<p>How can I dump the dictionary to json with ordered keys.
Because of the alphabetic prefix I can't use the following code:</p>
<pre><code>import json

d = dict({'2':'two', '11':'eleven'})
json.dumps({int(x):d[x] for x in d.keys()}, sort_keys=True)
</code></pre>
<p>Can you give me a hint, how to integrate string based keys in the lines?</p>
<p>Thank you :)</p>
","2024-02-08 07:59:34","-1","Question"
"77957337","77957309","","<p>It can be done by sorting the resulted keys after removing keys with <code>len(value)!=3</code> and then create a new dictionary with desired keys :</p>
<pre><code>a = {0:[1,2],1:[3,4,5],2:[6,7,8]}

for i in range(len(a)):
    if len(a[i]) != 3:
        del a[i]
        
reordered = {i:a[k] for i, k in enumerate(sorted(a.keys()))}
print(reordered)
</code></pre>
<p>the reordered dictionary will be :</p>
<pre><code>{0: [3, 4, 5], 1: [6, 7, 8]}
</code></pre>
","2024-02-07 19:11:15","1","Answer"
"77957309","","Removing nested dictionary and reordering keys?","<p>I have nested dictionaries and I am trying to remove some of them while reordering the keys after removing.</p>
<pre><code>a = {0:[1,2],1:[3,4,5],2:[6,7,8]}`

for i in range(len(a)):
    if len(a[i]) != 3:
        del a[i]
</code></pre>
<p>The returning dictionary is
<code>a = {1:[3,4,5],2:[6,7,8]}</code></p>
<p>I need to reorder the keys so that I end up with
<code>a = {0:[3,4,5],1:[6,7,8]}</code></p>
","2024-02-07 19:03:09","0","Question"
"77955701","77955650","","<p>You could always try to simplify it to get some shorter program that will reproduce your behavior, or you can sprinkle some <code>print</code> across your loop to see what is happening, or even use <code>pdb</code> debugger.</p>
<p>In this case, the way I see it, the only way out of your loop is</p>
<pre class=""lang-py prettyprint-override""><code>        if extracted_calibre_test == extracted_calibre_data:
            switch = 0
        else:
            continue
</code></pre>
<p>But right before that, you modify <code>extracted_calibre_data</code></p>
<pre class=""lang-py prettyprint-override""><code>        extracted_calibre_data[ends_counter] = extracted_calibre_data_subdict
</code></pre>
<p>And your <code>extracted_calibre_test</code> is set right before the <code>for</code> loop, so looks like there is no way for your loop to end. It is a bit hard to answer how exactly to solve this with limited information, but you can start looking there.</p>
","2024-02-07 14:43:23","0","Answer"
"77955650","","I don't understand why this python loop goes infinit","<p>I'm an absolute beginner at coding and only took some python courses at codecadamy. For the company I work, I now want to write a little script that generates pdf forms that can be filled out and whichs data later can be analyzed again (want to feed it to matplotlib). I'm done with the basics of the pdf form generator and editing the script for the toll that should extract data from it. Unfortunately this section of the code goes infinite and I can't wrap my head around why. Any help is highly appreciated!<br />
fyi: data is a dictionary that contains specific key, value pairs I extracted from the pdf forms and of which I'm trying to group the keys as outlined in the latter code.</p>
<pre><code>switch = 1
ends_counter = 1
extracted_calibre_data = {}
extracted_calibre_data_subdict = {}
while switch != 0:
    extracted_calibre_test = extracted_calibre_data.copy()
    for key in data:
        letter_check = [&quot;e&quot;, &quot;c&quot;]
        if key[0] == letter_check[0]:
            if key[1] == str(ends_counter):
                if key[2] == letter_check[1]:
                    extracted_calibre_data_subdict[key[3]+key[4]] = data[key]
                else:
                    continue
            else:
                continue
        else:
            continue
        extracted_calibre_data[ends_counter] = extracted_calibre_data_subdict
        ends_counter = ends_counter + 1
        if extracted_calibre_test == extracted_calibre_data:
            switch = 0
        else:
            continue
</code></pre>
<p>I tried writing a loop in python that groups keys and value pairs from a dictionary in differen sub dictionaries in order to plot them with matplotlib.However the loop goes infinite and i don't understand why.</p>
","2024-02-07 14:37:02","0","Question"
"77952019","","React Leaflet: Resize point marker not being dragged","<p>A resizeable rectangle in place automatically on the map with some bounds.</p>
<p>when I drag the rectangle, it drags but the resizeable points is still on the same place.</p>
<p>Is there something i am missing here.</p>
<p>Here is my code below</p>
<pre><code>const handleMapCreated = useCallback(
    (map: Map) =&gt; {
      const rectangle = L.rectangle(rectangleBounds, { draggable: true });
      rectangle.addTo(map);

      const updateRectangleBounds = (newBounds: L.LatLngBounds) =&gt; {
        const [sw, ne] = [newBounds.getSouthWest(), newBounds.getNorthEast()];
        setRectangleBounds([
          [sw.lat, sw.lng],
          [ne.lat, ne.lng],
        ]);
      };

      rectangle.on('pm:dragend', (e: any) =&gt; {
        const newBounds = rectangle.getBounds();
        console.log(newBounds);
        updateRectangleBounds(newBounds);
      });

      // Function to enable editing for the rectangle
      const enableRectangleEdit = (rect: L.Rectangle) =&gt; {
        rect.on('pm:edit', (e: any) =&gt; {
          const newBounds = rect.getBounds();
          updateRectangleBounds(newBounds);
        });
        rect.pm.enable();
      };

      // Initial setup
      enableRectangleEdit(rectangle);
    },
    [rectangleBounds],
  );
</code></pre>
<p><a href=""https://i.sstatic.net/rVpra.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/rVpra.png"" alt=""the output image"" /></a></p>
<p>I tried the draggable rectangle, but the resizeable point is not dragging along the rectangle.</p>
","2024-02-07 03:12:08","0","Question"
"77951620","77949817","","<p>tl;dr: You can fix it by changing <code>String</code> to <code>string</code>.</p>
<p><code>String</code> and <code>Object</code> types refer values on &quot;heap&quot;, it is same as Java.
However, in TypeScript, the type of string literals are <code>string</code>. <code>String</code> refers objects, and <code>string</code> refers &quot;primitive values&quot;. For more information, MDN published <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_primitives_and_string_objects"" rel=""nofollow noreferrer"">article in detail</a>.</p>
<p><code>Object</code> is defined as follows (you may not understand its signature, but don't worry it - that is not relevant):</p>
<pre><code>interface Object {
    constructor: Function;
    toString(): string;
    toLocaleString(): string;
    valueOf(): Object;
    hasOwnProperty(v: PropertyKey): boolean;
    isPrototypeOf(v: Object): boolean;
    propertyIsEnumerable(v: PropertyKey): boolean;
}
</code></pre>
<p>(I assume you are familar with Java's <code>interface</code>, so I will omit what <code>interface</code> is)</p>
<p>On the other hand, <code>string</code> has following members:</p>
<ul>
<li>index signature of number which is similar to <code>charAt(int)</code> method in Java,</li>
<li><code>Symbol.iterator</code>, which is mostly identical to <code>CharSequence</code>'s <code>codePoint</code> method in Java,</li>
<li>and various methods that is named by <code>string</code>s</li>
</ul>
<hr />
<p>TypeScript is going on &quot;structural typing&quot;, which is not same as Java (Java's type system is &quot;nominal typing&quot;).
A major difference between those type systems is that structural typing judges sub-typing by type's property. In other words, <code>Hello</code> and <code>Hi</code> are interchangeable types:</p>
<pre><code>interface Hello {}

interface Hi {}

const hello: Hello = {};
// no compile errors
const hi: Hi = hello;
</code></pre>
<p>TypeScript sees intersection set of property to test if the value can be assignable and/or be able to pass. But, there are no common property between <code>Object</code> and <code>string</code>! TypeScript complains about it to indicate that it is not what you may not wanted to be.</p>
<p>You can fix it by changing <code>String</code> to <code>string</code> as other users suggestion.</p>
","2024-02-07 00:37:54","1","Answer"
"77949817","","TS2559: Type string has no properties in common with type Object","<p>In typescript, I have a map defined such as below which I want to accept (key, value) pairs of (string, anything).</p>
<pre><code>let map= new Map&lt;String, Object&gt;()
</code></pre>
<p>when I try to insert a (key, value) pair to the map with a code that looks like below:</p>
<pre><code>map.set(&quot;name&quot;, &quot;someName&quot;);
</code></pre>
<p>I get this error <code>TS2559: Type  string  has no properties in common with type  Object</code>. I guess String does not inherit from Object here.</p>
<p>What is the best way to do this in typescript?</p>
<p>This would pass in Java.</p>
","2024-02-06 17:44:43","1","Question"
"77949035","77944065","","<p>Proposed answer is in the question.  Feel free to recommend alternatives.</p>
","2024-02-06 15:48:00","0","Answer"
"77944065","","Python Logging Configuration from both Dict and file","<p>I looked all morning for a solution.  Nothing seemed to fit.  If anyone has one, I'll be glad to close this. I offer a solution at the end, feel free to let me know if there is anything better.  Not sure why this is not a common issue.</p>
<p>I have a relatively complex testing module that I want to do logging on.  One of the things I want to add is the ability to easily change logging parameters for specific module loggers, etc..  For example, turn on a custom TRACE level for just the USB module, or limit logging from the BLE module(s) to just INFO and above.  It would be nice to change anything, not just level. Some of the modules I use (like Bleak) have logging, but need some configuring from outside the module and so modifying that module is unrealistic.</p>
<p>My test program sets a reasonable set of defaults in the code as a dictionary, but occasionally I would like to, for example turn on TRACE logging for BLE.  Instead of modifying the the dictionary in the original code, I would like to override or update the configuration from a separate configuration file.  I understand why this is not easy from logger.py itself, as it would require the actual logger object factories to re-issue some of the objects (i.e. loggers).</p>
<p>What I came up with is a function to do a deep update of the default configuration dictionary from a configuration update dictionary.  The dictionary update() method is close, but can't handle the nested dictionaries in logging.</p>
<p>For example.  Given the default configuration:</p>
<pre><code>debugConfig = {
    'version':1, 
    'loggers':{
...
        'usb_interface':{
            'handlers':['default', 'error', 'file'], 
            'level': 'DEBUG',
            'propagate':False}, 
...
}
</code></pre>
<p>And an update configuration dictionary (read from a file config.py) with:</p>
<pre><code>conf.logger = {
    'loggers':{
        'usb_interface':{
            'level':'TRACE',
        },
    },
}
</code></pre>
<p>I then have the code:</p>
<pre><code>def updateConfig(conf, updates):
    for key in updates:
        if key in conf:
            # keys match, update
            if isinstance(updates[key], dict) and isinstance(conf[key], dict):
                updateConfig(conf[key], updates[key])
            else:
                conf[key]=updates[key]

updateConfig(debugConfig, config.logger)
logging.config.dictConfig(debugConfig)
</code></pre>
<p>The updateConfig function walks through the conf dictionary and updates dictionary trees and overrides matching elements.  I realize there is a possible situation where the conf and update elements would possible have a type mismatch, resulting with, for example an embedded dictionary being overwritten with a simple string, but I deemed that as a feature, not a fault.</p>
<p>This results in the dict:</p>
<pre><code>debugConfig = {
    'version':1, 
    'loggers':{
...
        'usb_interface':{
            'handlers':['default', 'error', 'file'], 
            'level': 'TRACE',
            'propagate':False}, 
...
}
</code></pre>
<p>Hope this helps someone not miss lunch searching around.</p>
","2024-02-05 21:18:25","2","Question"
"77937432","77937417","","<p>You need to wrap it in <code>()</code> so js knows that it is returned value rather than just function block. E.g.</p>
<p><code>() =&gt; ({yourProp: val})</code></p>
","2024-02-04 20:13:06","1","Answer"
"77937417","","Why does creating an array of objects within a map call result in a syntax error with the colons?","<p>I wrote a function in Google Apps Script for getting the date and subject of all emails with a given label in Gmail. However, when I try to store each result as an object, I get  a <code>SyntaxError: unexpected token ':'</code> error. If I create a list to store each pair of data, then there is no problem, but I want to have each be a key-value pair so the data is accessible by lable.</p>
<p>Here is a simple version of the function showing what works and what doesn't:</p>
<pre><code>function displayEmailParts() {
    var labelName = 'foo';
    var threads = GmailApp.getUserLabelByName(labelName).getThreads();
    var initialMessages = threads.map((x) =&gt; x.getMessages()[0]);
    
    // this works:
    var messageParts = initialMessages.map(
        (x) =&gt; [x.getSubject(), x.getDate()]
    );

    // this gives a syntax error:
    var messageParts = initialMessages.map(
        (x) =&gt; {subject: x.getSubject(), date: x.getDate()}
    );

    return messageParts
}
</code></pre>
<p>is there any reason why having an object as the output of a map call over an array is not valid?</p>
","2024-02-04 20:09:12","0","Question"
"77936402","77935460","","<p>Using below I am able to get the desired output:</p>
<pre><code>def output(self) -&gt; str:
        data = ''
        data += 'Books: [\n'
        for bookid, firstname, lastname in zip(self.book_id, self.first_name, self.last_name):
          data += '{'
          data += f'book_id: &quot;{bookid}&quot;,'
          data += f'firstname: &quot;{firstname}&quot;,'
          if last_name:
            data += f'lastname: &quot;{lastname}&quot;'
         data += '}'
        data = data [:-2] + '\n'
        data += ']\n'
        return data
</code></pre>
","2024-02-04 15:32:30","0","Answer"
"77935502","77935460","","<p>One way is to get the Books and omit those values which are <code>None</code>.</p>
<pre><code>Books = [ { book_id: &quot;123&quot;, first_name: &quot;John&quot;, last_name: &quot;None&quot; } ]
</code></pre>
<p>You can have any number of elements in Books list.</p>
<pre><code>new_Books = [{k:v for k,v in Books[x].items() if v != 'None'} for x in range(len(Books))]
</code></pre>
<p>if it is not a string then:</p>
<pre><code>new_Books = [{k:v for k,v in Books[x].items() if v is not None} for x in range(len(Books))]
</code></pre>
<p>Another way can be to use <code>if</code> condition in the <code>for loop</code> but, I am exactly not sure how to implement it since do not have the actual data.</p>
","2024-02-04 11:02:18","1","Answer"
"77935460","","Manage None values in F String","<p>I am creating a string using f string and need to avoid fields which are None.</p>
<p>I am currently using below code</p>
<pre><code>def output(self) -&gt; str:
        data = ''
        data += 'Books: [\n'
        for bookid, firstname, lastname in zip(self.book_id, self.first_name, self.last_name):
            data += f'{{book_id: &quot;{bookid}&quot;, first_name: &quot;{firstname}&quot;,last_name : &quot;{lastname}&quot;}},\n'
        data = data [:-2] + '\n'
        data += ']\n'
        return data
</code></pre>
<p>I get below output:</p>
<blockquote>
<p>Books: [    {
book_id: &quot;123&quot;,
first_name: &quot;John&quot;,
last_name: &quot;None&quot;    },
{
book_id: &quot;567&quot;,
first_name: &quot;Merry&quot;,
last_name: &quot;Jones&quot;    } ]</p>
</blockquote>
<p>How to ensure that None fields should not be part of the string in the for loop. I want the output as below:</p>
<blockquote>
<p>Books: [    {
book_id: &quot;123&quot;,
first_name: &quot;John&quot;},
{
book_id: &quot;567&quot;,
first_name: &quot;Merry&quot;,
last_name: &quot;Jones&quot;} ]</p>
</blockquote>
","2024-02-04 10:50:37","1","Question"
"77935397","","Python InfiniteDefaultRevisionDictionary, any implementations?","<p>In programming, certain dictionary-based data structures are very useful and important. For example:</p>
<ol>
<li><p>Revision dictionary:
Revision dictionary is a sub-type of dictionary that keeps keys sorted in the order of last modification. It is commonly used in cache handling which remembers most recently used items.</p>
</li>
<li><p>Default dictionary:
Default dictionary can return a default element when the dictionary is accessed with a key that is not present in the dictionary. It already has an implementation in <code>collections.defaultdict</code>.</p>
</li>
<li><p>Infinite dictionary:
An infinite dictionary can be accessed with infinitely layer of nested recursion, i.e., infinite chaining of keys, e.g., <code>dct[person_name][gender], dct[company_name][employees]</code>, it can be used to create dynamic data structures, or even modeling file-system structures.</p>
</li>
</ol>
<p>So my question is that: in Python, is it possible to write a dictionary that has all the 3 features, i.e., an infinite default revision dictionary? In particular, one can specify options during creation, e.g., whether the items should be sorted in the order of insertion, or keys' order, or revision order. And how to implement if possible?</p>
<p>It would be very cool if future-version Python has a built-in Dictionary class that supports all of these features and options.</p>
<p><strong>Edits</strong>:
Point 2 might not be in contradiction with Point 3, that in principle, an InfiniteDefaultRevisionDictionary can have a default key other than lambda of itself. For example, if the default key is 0, then:</p>
<pre><code>dd=InfiniteDefaultRevisionDictionary(default=0, {})
print(dd['a']['b']['c']) # should give 0
dd['b']['c'][2] = [1, '2', 3.5] # should work fine
</code></pre>
","2024-02-04 10:29:39","0","Question"
"77929666","77929307","","<p>Certainly, you can sort the values within the df dictionary before writing to the file. You can use the sorted function with a custom key to achieve the desired sorting.</p>
<p>Here's an updated version of your code:</p>
<pre><code>def bag_to_svmlight(bag):
    # Your bag_to_svmlight implementation goes here
    pass

df = {
    78: [(20.0, 1.0), (164.0, 1.0), (12.0, 1.0), (419.0, 1.0)],
    11: [(175.0, 1.0), (17.0, 1.0), (879.0, 1.0), (1466.0, 1.0)],
    190: [(175.0, 1.0), (2.0, 1.0), (12.0, 1.0), (9.0, 1.0)]
}

hf = {33: 1, 64: 1, 1141: 1, 1152: 1, 190: 1, 3287: 1, 3290: 1, 3331: 1}

# Sort df by key
sorted_df = dict(sorted(df.items()))

with open('your_file.txt', 'wb') as deliverable:
    for key in sorted_df:
        if key in hf:
            # Sort the list within df[key] by the first element of each tuple
            sorted_values = sorted(sorted_df[key], key=lambda x: x[0])
            deliverable.write(bytes(f&quot;{1} {bag_to_svmlight(sorted_values)}\n&quot;, 'utf-8'))
        else:
            # Sort the list within df[key] by the first element of each tuple
            sorted_values = sorted(sorted_df[key], key=lambda x: x[0])
            deliverable.write(bytes(f&quot;{0} {bag_to_svmlight(sorted_values)}\n&quot;, 'utf-8'))
</code></pre>
<p>In this version, sorted_df is created by sorting the items of df by key. Then, within the loop, the values corresponding to each key are sorted before writing to the file. The sorting is done using the sorted function with a lambda function as the key argument, which sorts the tuples based on their first element.</p>
","2024-02-02 20:22:49","0","Answer"
"77929661","77929307","","<p>Do the sorting in the <code>for</code> construction:</p>
<pre><code>for key in sorted(df):
</code></pre>
<p>This will output to the file in the sorted order of the keys.</p>
","2024-02-02 20:21:27","0","Answer"
"77929455","77929264","","<p>That's because you're using <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_dict.html"" rel=""nofollow noreferrer""><code>pd.DataFrame.to_dict</code></a> and not <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.to_dict.html"" rel=""nofollow noreferrer""><code>pd.Series.to_dict</code></a> and the former gives you a nested dict in the format <code>{column -&gt; {index -&gt; value}}</code> :</p>
<pre><code>&gt;&gt;&gt; cen_columns[[&quot;VARIABLE&quot;, &quot;LABEL_CLEAN&quot;]].set_index(&quot;VARIABLE&quot;)

# &lt;class 'pandas.core.frame.DataFrame'&gt;
# `.to_dict` gives {'LABEL_CLEAN': {'B01001_001E': 'Total', ...

&gt;&gt;&gt; cen_columns.set_index(&quot;VARIABLE&quot;)[&quot;LABEL_CLEAN&quot;]

# &lt;class 'pandas.core.series.Series'&gt;
# `.to_dict` gives {'B01001_001E': 'Total', 'B01001_002E': 'Male', ...
</code></pre>
<p>To get a flattened mapper, you can fix/simplify your code this way :</p>
<pre><code>mapper = cen_columns.set_index(&quot;VARIABLE&quot;)[&quot;LABEL_CLEAN&quot;].to_dict()

census_age.rename(columns=mapper, inplace=True)
</code></pre>
","2024-02-02 19:33:39","1","Answer"
"77929307","","Sort values for each key in the dictionary","<p>I have two dictionaries <code>df</code> and <code>hf</code>. The key in both dictionaries is the same <code>id</code> field.
I have written code that writes values from hf and value from df into a file matched by the 'id'.</p>
<p>However, before I write to the file, I need the df dictionary sorted by the key and (!!!) the lists within the value ordered ascendingly by the first number of each list.</p>
<p>Here is data in <code>df</code>:</p>
<pre><code>{78: [(20.0, 1.0),
  (164.0, 1.0),
  (12.0, 1.0),
  (419.0, 1.0)],
 11: [(175.0, 1.0),
  (17.0, 1.0),
  (879.0, 1.0),
  (1466.0, 1.0)],
 190: [(175.0, 1.0),
  (2.0, 1.0),
  (12.0, 1.0),
  (9.0, 1.0)]}
</code></pre>
<p>Here's the data in <code>hf</code></p>
<pre><code>{33: 1,
 64: 1,
1141: 1,
 1152: 1,
 190: 1,
3287: 1,
 3290: 1,
 3331: 1}
</code></pre>
<p>Sorted df should look like this:</p>
<pre><code>{11: [(17.0, 1.0),
  (175.0, 1.0),
  (879.0, 1.0),
  (1466.0, 1.0)],
78: [(12.0, 1.0),
  (20.0, 1.0),
  (164.0, 1.0),
  (419.0, 1.0)],
190: [(2.0, 1.0),
  (9.0, 1.0),
  (12.0, 1.0),
  (175.0, 1.0)]}
</code></pre>
<p>Here is my code:</p>
<pre><code>for key in df:
    if key in hf: 
       deliverable.write(bytes(f&quot;{1} {bag_to_svmlight(df[key])}\n&quot;, 'utf-8'))
    else: 
       deliverable.write(bytes(f&quot;{0} {bag_to_svmlight(df[key])}\n&quot;, 'utf-8'))
</code></pre>
<p>I was hoping the sorting could happen between for condition and if. I was thinking I could just sort items in the value of df[key] before inserting it to the write statement.</p>
<p>Any help would be appreciated</p>
","2024-02-02 19:02:06","-1","Question"
"77929264","","Python Dictionary from pd.DataFrame","<p>How come this method results in an embedded dictionary which then I can not use to rename columns.</p>
<pre><code># Rename columns
cen_columns = cen_columns[['VARIABLE','LABEL_CLEAN']].set_index(&quot;VARIABLE&quot;).to_dict()
census_age.columns = census_age.columns.to_series().map(cen_columns['LABEL_CLEAN'])
</code></pre>
<p>Resulting in:</p>
<pre><code>{'LABEL_CLEAN': {'B01001_001E': 'Total',
  'B01001_002E': 'Male',
  'B01001_003E': 'Male_Under_5',
</code></pre>
<p>where as this method is a single level dictionary that I then can use to rename columns:</p>
<pre><code>#Rename Columns 
cen_columns = dict(zip(cen_columns['VARIABLE'], cen_columns['LABEL_CLEAN']))
census_age.rename(columns=cen_columns,inplace=True)
census_age.head(2)
</code></pre>
<p>Resulting in a straightforward dict</p>
<pre><code>{'B01001_001E': 'Total',
  'B01001_002E': 'Male',
  'B01001_003E': 'Male_Under_5'....}
</code></pre>
","2024-02-02 18:54:42","0","Question"
"77929076","77929049","","<pre><code>df.set_index('a').to_dict()['b']
</code></pre>
<p>gives:</p>
<pre><code>{1: 2, 3: 4}
</code></pre>
","2024-02-02 18:12:13","1","Answer"
"77929075","77929049","","<p>You can try:</p>
<pre><code>df.set_index('a')['b'].to_dict()
</code></pre>
<p>Or</p>
<pre><code>dict(zip(df['a'], df['b']))

#output
{1: 2, 3: 4}
</code></pre>
","2024-02-02 18:12:05","0","Answer"
"77929049","","Convert a DataFrame of 2 columns into a dict ColA -> ColB","<p>If I had a DataFrame of 2 columns(a and b)
How do I convert this into a dictionary mapping a-&gt;b?
(None of the DataFrame.to_dict() options is doing what I want</p>
<pre><code>pd.DataFrame(data={ 'a':[1,3], 'b':[2,4]})
   a  b
0  1  2
1  3  4
</code></pre>
<p>and I want a resulting dictionary like</p>
<pre><code>{ 1:2, 3:4 }
</code></pre>
<p>This works but there must be a better way?</p>
<pre><code>&gt;&gt;&gt; df = pd.DataFrame(data={ 'a':[1,3], 'b':[2,4]})
&gt;&gt;&gt; { r[1][0] : r[1][1] for r in df.iterrows() }
{1: 2, 3: 4}
</code></pre>
","2024-02-02 18:04:40","1","Question"
"77928567","77928146","","<p>Assuming this is not a data cleaning exercise and that your data is accurately represented by:</p>
<pre class=""lang-py prettyprint-override""><code>rows = &quot;&quot;&quot;
La La Land, Ryan Gosling, Emma Stone
Blade Runner 2049, Harrison Ford, Ryan Gosling, Ana de Armas
Cruella, Emma Stone, Emma Thompson, Joel Fry
Iron Man, Robert Downey Jr., Gwyneth Paltrow, Terrence Howard
Avatar, Sam Worthington, Zoe Saldana, Sigourney Weaver
Star Wars A New Hope, Mark Hamil, Carrie Fisher, Harrison Ford
Air Force One, Harrison Ford, Gary Oldman, Glen Close
Pretty Woman, Richard Gere, Julia Roberts, Jason Alexander
My Best Friend's Wedding, Julia Roberts, dermont Multroney, Cameron Diaz
There's Something About Mary, Cameron Diaz, Matt Dillon, Ben Stiller
Meet the Parents, Ben Stiller, Robert De Niro, Teri Polo
Top Gun Maverick, Tom Cruse, Jennifer Connelly, Miles Teller
Black Panther: Wakanda Forever, Letitia Wright, Lupita Nyong'o, Danai Gurira
Thor: Love and Thunder, Chris Hemsworth, Natalie Portman, Christian Bale
Notting Hill, Hugh Grant, Julia Roberts, Richard McCabe
&quot;&quot;&quot;.strip().split(&quot;\n&quot;)
</code></pre>
<p>Then you can process these rows one by one and capture the movie and list of actors. Then you can iterate over the list of actors and use the <code>setdefault()</code> method of a dictionary to ensure that new actor keys are properly initialized to an empty list to append into:</p>
<pre class=""lang-py prettyprint-override""><code>appears_in = {}
for row in rows:
    movie, *actors = row.split(&quot;,&quot;)
    for actor in actors:
        appears_in.setdefault(actor.strip(), []).append(movie.strip())
</code></pre>
<p>Finally we can use the name of an actor to print their movies:</p>
<pre><code>actor = &quot;Harrison Ford&quot;
print(f&quot;{actor} has appeared in {', '.join(appears_in[actor])}&quot;)
</code></pre>
<p>The result should be:</p>
<pre><code>Harrison Ford has appeared in Blade Runner 2049, Star Wars A New Hope, Air Force One
</code></pre>
<p>On the other hand, if this exercise invloves a data cleaning step becuase your data is actually as you stated:</p>
<pre class=""lang-py prettyprint-override""><code>rows = &quot;&quot;&quot;
La La Land, Ryan Gosling, Emma Stone
Blade Runner 2049, Harrison Ford, Ryan Gosling, Ana de Armas
Cruella, Emma Stone, Emma Thompson, Joel Fry
Iron Man, Robert Downey Jr., Gwyneth Paltrow, Terrence Howard
Avatar, Sam Worthington, Zoe Saldana, Sigourney Weaver
Star Wars A New Hope, Mark Hamil, Carrie Fisher, Harrison Ford
Air Force One, Harrison Ford, Gary Oldman, Glen Close
Pretty Woman, Richard Gere, Julia Roberts, Jason Alexander
My Best Friend's Wedding, Julia Roberts, dermont Multroney, 
Cameron Diaz
There's Something About Mary, Cameron Diaz, Matt Dillon, Ben 
Stiller
Meet the Parents, Ben Stiller, Robert De Niro, Teri Polo
Top Gun Maverick, Tom Cruse, Jennifer Connelly, Miles Teller
Black Panther: Wakanda Forever, Letitia Wright, Lupita Nyong'o, 
Danai Gurira
Thor: Love and Thunder, Chris Hemsworth, Natalie Portman, 
Christian Bale
Notting Hill, Hugh Grant, Julia Roberts, Richard McCabe
&quot;&quot;&quot;.strip().split(&quot;\n&quot;)
</code></pre>
<p>Then we can iterate the rows looking for rows with only one &quot;entry&quot; and if we find one, append it to the prior row.</p>
<pre class=""lang-py prettyprint-override""><code>rows_fixed = []
prior_row = &quot;&quot;
for row in rows:
    parts = row.split(&quot;,&quot;)
    if len(parts) == 1:
        prior_row += row
        continue
    if prior_row:
        rows_fixed.append(prior_row)

    prior_row = row

if prior_row:
    rows_fixed.append(prior_row)

rows = rows_fixed
for row in rows:
    print(row)
</code></pre>
<p>That should give you a result like:</p>
<pre><code>La La Land, Ryan Gosling, Emma Stone
Blade Runner 2049, Harrison Ford, Ryan Gosling, Ana de Armas
Cruella, Emma Stone, Emma Thompson, Joel Fry
Iron Man, Robert Downey Jr., Gwyneth Paltrow, Terrence Howard
Avatar, Sam Worthington, Zoe Saldana, Sigourney Weaver
Star Wars A New Hope, Mark Hamil, Carrie Fisher, Harrison Ford
Air Force One, Harrison Ford, Gary Oldman, Glen Close
Pretty Woman, Richard Gere, Julia Roberts, Jason Alexander
My Best Friend's Wedding, Julia Roberts, dermont Multroney, Cameron Diaz
There's Something About Mary, Cameron Diaz, Matt Dillon, Ben Stiller
Meet the Parents, Ben Stiller, Robert De Niro, Teri Polo
Top Gun Maverick, Tom Cruse, Jennifer Connelly, Miles Teller
Black Panther: Wakanda Forever, Letitia Wright, Lupita Nyong'o, Danai Gurira
Thor: Love and Thunder, Chris Hemsworth, Natalie Portman, Christian Bale
Notting Hill, Hugh Grant, Julia Roberts, Richard McCabe
</code></pre>
","2024-02-02 16:38:19","0","Answer"
"77928566","77928432","","<p>After fixing the single equals-sign in <code>if i = len(path.split('/')) - 1:</code>, your code works just fine for me:</p>
<pre><code>paths = [
    &quot;Properties/Static/E&quot;,
    &quot;Properties/Static/Category1/A&quot;,
    &quot;Properties/Static/Category2/Subcategory1/A&quot;,
    &quot;Properties/Static/Category3/C&quot;
]

hierarchy_dict = {}
for path in paths:                
    current_dict = hierarchy_dict
    for i, level in enumerate(path.split('/')):
        if level:
            # Check if item is the last level, and set to a value
            # In this case I try setting to an empty string for testing purposes
            if i == len(path.split('/')) - 1:
                current_dict[level] = &quot;&quot;
            else:
                current_dict = current_dict.setdefault(level, {})

print(hierarchy_dict)
# {'Properties': {'Static': {'E': '', 'Category1': {'A': ''}, 'Category2': {'Subcategory1': {'A': ''}}, 'Category3': {'C': ''}}}}
</code></pre>
<p>I do however get the same error if I have paths like so:</p>
<pre><code>paths = [
    &quot;Properties/Static/Category1/A&quot;,
    &quot;Properties/Static/Category1/A/B&quot;,
]

...

# TypeError: 'str' object does not support item assignment
</code></pre>
<p>But I believe those should be invalid according to your description:</p>
<blockquote>
<p>Where the last component of each path is some string (and not a dictionary themselves).</p>
</blockquote>
<p>And while it might not fix your error (it's unclear what should happen), you can simplify your code like so:</p>
<pre><code>hierarchy_dict = {}
for path in paths:                
    current_dict = hierarchy_dict
    *parents, last = path.split('/')
    for parent in parents:
        current_dict = current_dict.setdefault(parent, {})
    current_dict[last] = &quot;&quot;
</code></pre>
","2024-02-02 16:38:05","0","Answer"
"77928432","","How to create a hierarchy of a list of given paths that point so some value","<p>This is <strong>not</strong> a duplicate question, other questions that have already been asked do <strong>not</strong> solve this issue.</p>
<p>I want to be able to assign any value I want to the last item of each path as they represent some property that is a string. All solutions I have seen in other threads are either not compatible with my input or create a dictionary in a format that is not suitable for my use case. Therefore, I am asking my own question in <em>hope</em> for some guidance.</p>
<p>I have a list of paths like so:</p>
<pre><code>paths = [
    &quot;Properties/Static/E&quot;,
    &quot;Properties/Static/Category1/A&quot;,
    &quot;Properties/Static/Category2/Subcategory1/A&quot;,
    ...
    &quot;Properties/Static/Category3/C&quot;
]
</code></pre>
<p>Where the last component of each path is some string (and not a dictionary themselves).</p>
<p>And I want to create dictionary that represents the hierarchy of the paths - and the properties within - like so:</p>
<pre><code>{
    &quot;Properties&quot;: {
        &quot;Static&quot;: {
            &quot;E&quot;: *some_value*,
            &quot;Category1&quot;: {
                &quot;A&quot;: *some_value*,
                &quot;Subcategory&quot;: {
                    &quot;A&quot;: *some_value*
                }
            },
            ...
            &quot;Category3&quot;: {
                &quot;C&quot;: *some_value*
            }
        }
    }
}
</code></pre>
<p>Where <em>some_value</em> would be fetched from some other function, but for this question though it can be assume it's an empty string.</p>
<p>I have tried using the following algorithm:</p>
<pre><code>hierarchy_dict = {}
for path in paths:                
    current_dict = hierarchy_dict
    for level in path.split('/'):
        if level:                 
            current_dict = current_dict.setdefault(level, {})
</code></pre>
<p>Where it loops through each path and creates a dictionary for each level of the path but as it can be seen it creates the hierarchy like so:</p>
<pre><code>{
    &quot;Properties&quot;: {
        &quot;Static&quot;: {
            &quot;E&quot;: {},
            &quot;Category1&quot;: {
                &quot;A&quot;: {},
                &quot;Subcategory&quot;: {
                    &quot;A&quot;: {}
                }
            },
            ...
            &quot;Category3&quot;: {
                &quot;C&quot;: {}
            }
        }
    }
}
</code></pre>
<p>Where each last item is an empty dictionary which is obviously not what I want.</p>
<p>I tried this solution - albeit a bit messy:</p>
<pre><code>hierarchy_dict = {}
for path in paths:                
    current_dict = hierarchy_dict
    for i, level in enumerate(path.split('/')):
        if level:
            # Check if item is the last level, and set to a value
            # In this case I try setting to an empty string for testing purposes
            if i = len(path.split('/')) - 1:
                current_dict[level] = &quot;&quot;
            else:
                current_dict = current_dict.setdefault(level, {})
</code></pre>
<p>But I get the following error <code>TypeError: 'str' object does not support item assignment</code>.</p>
<p>Any help would be greatly appreciated!</p>
<p>Thank you.</p>
","2024-02-02 16:17:54","1","Question"
"77928146","","Reverse keys and values in dictionary if values are a list","<p>I am trying to reverse the keys and values in the dictionary created by the values are lists. How can I approach this?
Here is the assignment:</p>
<p>Write Python program that will use the data from this file and create a dictionary with actor/actresses names as keys and the values being lists of movies with this actor/actress.  After creating a dictionary your program should ask user for actor/actress name and then, using the information in the dictionary, print the movies with this actor/actress.</p>
<pre><code>in_file = open(&quot;movie and actors.txt&quot;, &quot;r&quot;)

movie_dictionary = {}
for line in in_file:
    movies_and_actors = line.strip().split(', ')
    movie = movies_and_actors[0]
    actor = movies_and_actors[1:]
    movie_dictionary[movie] = actor

s = input(&quot;Enter an actor/actress name: &quot;)
d = [i for i in movie_dictionary if s in movie_dictionary[i]]
listToStr = ' and '.join([elem for elem in d])
print(&quot;The movies that&quot;, s, &quot;starred in are&quot;, listToStr)

in_file.close()
</code></pre>
<p>movies and actors.txt</p>
<pre><code>La La Land, Ryan Gosling, Emma Stone
Blade Runner 2049, Harrison Ford, Ryan Gosling, Ana de Armas
Cruella, Emma Stone, Emma Thompson, Joel Fry
Iron Man, Robert Downey Jr., Gwyneth Paltrow, Terrence Howard
Avatar, Sam Worthington, Zoe Saldana, Sigourney Weaver
Star Wars A New Hope, Mark Hamil, Carrie Fisher, Harrison Ford
Air Force One, Harrison Ford, Gary Oldman, Glen Close
Pretty Woman, Richard Gere, Julia Roberts, Jason Alexander
My Best Friend's Wedding, Julia Roberts, dermont Multroney, 
Cameron Diaz
There's Something About Mary, Cameron Diaz, Matt Dillon, Ben 
Stiller
Meet the Parents, Ben Stiller, Robert De Niro, Teri Polo
Top Gun Maverick, Tom Cruse, Jennifer Connelly, Miles Teller
Black Panther: Wakanda Forever, Letitia Wright, Lupita Nyong'o, 
Danai Gurira
Thor: Love and Thunder, Chris Hemsworth, Natalie Portman, 
Christian Bale
Notting Hill, Hugh Grant, Julia Roberts, Richard McCabe
</code></pre>
","2024-02-02 15:30:38","-3","Question"
"77927472","77927456","","<p>your sample json is wrong please below json
{
&quot;name&quot;: &quot;gitlab_pipeline_success_total&quot;,
&quot;description&quot;: &quot;blah blah blah&quot;,
&quot;type&quot;: &quot;counter&quot;,
&quot;labels&quot;: [
&quot;project&quot;,
&quot;something-else&quot;
],
&quot;data&quot;: [
{
&quot;value&quot;: 1.0,
&quot;timestamp&quot;: 0,
&quot;operation&quot;: &quot;increment&quot;,
&quot;labelValues&quot;:
{
&quot;project&quot;: &quot;opoe&quot;,
&quot;something-else&quot;: &quot;junk&quot;
}</p>
<pre><code>    },
    {
        &quot;value&quot;: 3,
        &quot;timestamp&quot;: 0,
        &quot;operation&quot;: &quot;set&quot;,
        &quot;labelValues&quot;: 
            {
                &quot;project&quot;: &quot;dex&quot;
            }
        
    }
]
</code></pre>
<p>}</p>
","2024-02-02 13:51:08","1","Answer"
"77927456","","Problem converting JSON data into a Java Map","<p>I am experimenting with serializing and deserializing between YAML and JSON formats to/from Java objects. I am using the Jackson library to do the heavy lifting. I ran into a problem when trying to parse JSON into an object and came to the realization that JSON does not seem to support a map structure.</p>
<p>Here is the Java class:</p>
<pre><code>public class MetricData {

  public enum Operation {
    INCREMENT, DECREMENT, SET;

    @JsonCreator
    public static Operation getType(String value) {
      return valueOf(value.toUpperCase());
    }

    @JsonValue
    public String value() {
      return name().toLowerCase();
    }
  }

  private Double              value;
  private Long                timestamp;
  private Operation           operation = Operation.INCREMENT;
  private Map&lt;String, String&gt; labelValues;

  // getters/setters removed
}
</code></pre>
<p>Note the field <code>labelValues</code>, which is a map with string keys and values.</p>
<p>I then set up a test JSON file and attempted to translate the JSON into a Java object.</p>
<pre><code>{
    &quot;name&quot;: &quot;gitlab_pipeline_success_total&quot;,
    &quot;description&quot;: &quot;blah blah blah&quot;,
    &quot;type&quot;: &quot;counter&quot;,
    &quot;labels&quot;: [
        &quot;project&quot;,
        &quot;something-else&quot;
    ],
    &quot;data&quot;: [
        {
            &quot;value&quot;: 1.0,
            &quot;timestamp&quot;: 0,
            &quot;operation&quot;: &quot;increment&quot;,
            &quot;labelValues&quot;: [
                {
                    &quot;project&quot;: &quot;opoe&quot;
                },
                {
                    &quot;something-else&quot;: &quot;junk&quot;
                }
            ]
        },
        {
            &quot;value&quot;: 3,
            &quot;timestamp&quot;: 0,
            &quot;operation&quot;: &quot;set&quot;,
            &quot;labelValues&quot;: [
                {
                    &quot;project&quot;: &quot;dex&quot;
                }
            ]
        }
    ]
}
</code></pre>
<p>As far as I can tell, this is valid JSON, but when I ran the program, I get an exception:</p>
<pre><code>[ERROR] 2024-02-02 07:41:20.550 [main] org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:851) - Application run failed
com.fasterxml.jackson.databind.RuntimeJsonMappingException: Cannot deserialize value of type `java.util.LinkedHashMap&lt;java.lang.String,java.lang.String&gt;` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (File); line: 14, column: 19] (through reference chain: com.beastcode.devops.prometheusbroker.domain.Metric[&quot;data&quot;]-&gt;java.util.ArrayList[0]-&gt;com.beastcode.devops.prometheusbroker.domain.MetricData[&quot;labelValues&quot;])
</code></pre>
<p>Is there a way to structure JSON such that it can be &quot;converted&quot; into the Java map structure? Or, looking at it from the other direction, should I refactor my class to be more JSON &quot;friendly&quot;, and if so, what should I do?</p>
","2024-02-02 13:48:23","0","Question"
"77924656","77921727","","<p>First, your <code>get_nested_object</code> function is overly complicated, so I offer a simpler version without any error safeguarding. Next is the function <code>find_all</code>, which given a target value, it will find all the (path, value). The <code>find_first</code> function is built on top of <code>find_all</code>. Finally, <code>find_all</code> is built on top of <code>iter_values</code>, which given a nested data structure, generates all the paths and data.</p>
<pre class=""lang-py prettyprint-override""><code>import json


def get_nested_object(data, path):
    &quot;&quot;&quot;Give a path, return the value&quot;&quot;&quot;
    for key in path:
        data = data[key]
    return data


def iter_values(data, path=None):
    &quot;&quot;&quot;Returns all paths, values&quot;&quot;&quot;
    path = path or []
    if isinstance(data, (int, str, float, bool)):
        yield path, data
    elif isinstance(data, (dict)):
        for key, value in data.items():
            yield from iter_values(value, path + [key])
    elif isinstance(data, list):
        for key, value in enumerate(data):
            yield from iter_values(value, path + [key])
    else:
        raise TypeError(f&quot;Cannot handle object {data}&quot;)


def find_all(data, target):
    &quot;&quot;&quot;Given a target, find all paths&quot;&quot;&quot;
    for path, value in iter_values(data):
        if value == target:
            yield path, value


def find_first(data, target, default=None):
    &quot;&quot;&quot;Given a target, first find path&quot;&quot;&quot;
    found = next(find_all(data, target), None)
    if found is None:
        return [], default
    return found


def main():
    &quot;&quot;&quot;Entry&quot;&quot;&quot;
    data = {
        &quot;People&quot;: [{&quot;name&quot;: &quot;Alice&quot;}, {&quot;name&quot;: &quot;Bob&quot;}],
        &quot;Animal&quot;: {
            &quot;Cats&quot;: [
                {&quot;name&quot;: &quot;Tristan&quot;},
                {&quot;name&quot;: &quot;Bob&quot;},
                {&quot;name&quot;: &quot;Alice&quot;},
            ],
            &quot;Dogs&quot;: [
                {&quot;name&quot;: &quot;Bob&quot;},
                {&quot;name&quot;: &quot;Scooby&quot;},
            ],
        },
    }
    print(&quot;\n# Data:&quot;)
    print(json.dumps(data, indent=4))

    print(&quot;\n# get_nested_object:&quot;)
    path = [&quot;Animal&quot;, &quot;Dogs&quot;, 1, &quot;name&quot;]
    value = get_nested_object(data, path)
    print(f&quot;get_nested_object(data, {path}) -&gt; {value!r}&quot;)

    print(&quot;\n# iter_values:&quot;)
    for path, value in iter_values(data):
        print(f&quot;{path=}, {value=}&quot;)

    print(&quot;\n# find_all:&quot;)
    for path, value in find_all(data, &quot;Bob&quot;):
        print(f&quot;{path=}, {value=}&quot;)

    print(&quot;\n# find_first:&quot;)
    print(f&quot;Find first Bob: {find_first(data, 'Bob')}&quot;)
    print(f&quot;Find first Anna: {find_first(data, 'Anna', 'Anna not found')}&quot;)


if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
<p>Output:</p>
<pre class=""lang-none prettyprint-override""><code># Data:
{
    &quot;People&quot;: [
        {
            &quot;name&quot;: &quot;Alice&quot;
        },
        {
            &quot;name&quot;: &quot;Bob&quot;
        }
    ],
    &quot;Animal&quot;: {
        &quot;Cats&quot;: [
            {
                &quot;name&quot;: &quot;Tristan&quot;
            },
            {
                &quot;name&quot;: &quot;Bob&quot;
            },
            {
                &quot;name&quot;: &quot;Alice&quot;
            }
        ],
        &quot;Dogs&quot;: [
            {
                &quot;name&quot;: &quot;Bob&quot;
            },
            {
                &quot;name&quot;: &quot;Scooby&quot;
            }
        ]
    }
}

# get_nested_object:
get_nested_object(data, ['Animal', 'Dogs', 1, 'name']) -&gt; 'Scooby'

# iter_values:
path=['People', 0, 'name'], value='Alice'
path=['People', 1, 'name'], value='Bob'
path=['Animal', 'Cats', 0, 'name'], value='Tristan'
path=['Animal', 'Cats', 1, 'name'], value='Bob'
path=['Animal', 'Cats', 2, 'name'], value='Alice'
path=['Animal', 'Dogs', 0, 'name'], value='Bob'
path=['Animal', 'Dogs', 1, 'name'], value='Scooby'

# find_all:
path=['People', 1, 'name'], value='Bob'
path=['Animal', 'Cats', 1, 'name'], value='Bob'
path=['Animal', 'Dogs', 0, 'name'], value='Bob'

# find_first:
Find first Bob: (['People', 1, 'name'], 'Bob')
Find first Anna: ([], 'Anna not found')
</code></pre>
<h1>Update</h1>
<p>As discussed, I did not place any error checking into:</p>
<pre class=""lang-py prettyprint-override""><code>def get_nested_object(data, path):
    &quot;&quot;&quot;Give a path, return the value&quot;&quot;&quot;
    for key in path:
        data = data[key]
    return data
</code></pre>
<p>The caller then can catch any exception which might arise:</p>
<pre class=""lang-py prettyprint-override""><code>try:
    obj = get_nested_object(data, path)
except (KeyError, IndexError) as error:
    print(&quot;ERROR:&quot;, error)
</code></pre>
<p>An alternative is to redesign the function <code>get_nested_object</code> to return a default value in case of error:</p>
<pre class=""lang-py prettyprint-override""><code>def get_nested_object(data, path, default=None):
    &quot;&quot;&quot;Give a path, return the value&quot;&quot;&quot;
    try:
        for key in path:
            data = data[key]
        return data
    except (KeyError, IndexError) as error:
        return default
</code></pre>
<p>Then, the usages would be:</p>
<pre class=""lang-py prettyprint-override""><code>if (obj := get_nested_object(data, path)) is None:
    # Handle error
else:
    print(obj)

# or...
if (obj := get_nested_object(data, path, &quot;NOTFOUND&quot;)) == &quot;NOTFOUND&quot;:
    # Handle error
else:
    print(obj)

</code></pre>
<p>Of the two implementations, I still like the original implementation for two reasons</p>
<ol>
<li>It is simple</li>
<li>If the caller does not catch the <code>KeyError</code> and <code>IndexError</code>, then the script/app will crash and we know that we have a problem. This type of error is easier to detect than the silent/non-crash errors.</li>
</ol>
","2024-02-02 04:19:41","1","Answer"
"77923967","77923910","","<p>You can group by 'pid' then aggregate with <code>zip</code>:</p>
<pre><code>result = (
    df.groupby('pid')
      .apply(lambda f: list(zip(f['idx'].tolist(), f['value'].tolist())))
      .to_dict()
)
</code></pre>
","2024-02-01 23:45:56","0","Answer"
"77923946","77923910","","<p>Iterate on the rows, adding new entry <code>row['pid']</code> to the dictionary at each iteration.</p>
<p>You can use <code>d.setdefault(k, []).append(v)</code> to avoid a tedious <code>if k in d: d[k].append(v) else: d[k] = [v]</code>.</p>
<pre class=""lang-py prettyprint-override""><code>import pandas as pd

df = pd.DataFrame({'pid': [78,78,78,99971,99971,99971], 'idx': [20,164,175,1451,1452,1453], 'value': [0.0,0.0,0.0,0.090909,0.090909,0.090909]})

d = {}
for i, row in df.iterrows():
    d.setdefault(row['pid'], []).append((row['idx'], row['value']))

print(d)
# {78.0: [(20.0, 0.0), (164.0, 0.0), (175.0, 0.0)], 99971.0: [(1451.0, 0.090909), (1452.0, 0.090909), (1453.0, 0.090909)]}
</code></pre>
","2024-02-01 23:36:49","0","Answer"
"77923910","","Turn dataframe to a dictionary","<p>I have a dataframe with three columns: pid, idx and value, like this...
<a href=""https://i.sstatic.net/nGQXb.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/nGQXb.png"" alt=""enter image description here"" /></a></p>
<p>I need to convert it to a dictionary where the key is pid and the value is array of tuples(idx, value)</p>
<p>It should look something like this</p>
<pre class=""lang-none prettyprint-override""><code>1 2:0.5 3:0.12 10:0.9 2000:0.3
0 4:1.0 78:0.6 1009:0.2
1 33:0.1 34:0.98 1000:0.8 3300:0.2
1 34:0.1 389:0.32
</code></pre>
<p>I'm really stuck on this. Please help</p>
","2024-02-01 23:21:21","-2","Question"
"77922398","77921755","","<p>Below is a way of creating an object <code>res</code> containing the maps a, b, c, e, and f. In the console output below I use a quick &quot;map to object&quot; conversion in order to list each map's content as if it were an object:</p>
<pre><code>Object.fromEntries(map.entries())
</code></pre>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const mainMap = new Map();
//Fill map with data
//In the map it has been filled from api
//The data is dynamic below is just sample 
mainMap.set(1,'a');
mainMap.set(2,'b');
mainMap.set(3,'c');
mainMap.set(4,'a');
mainMap.set(5,'c');
mainMap.set(6,'b');
mainMap.set(7,'c');
mainMap.set(8,'a');
mainMap.set(9,'c');
mainMap.set(10,'c');
mainMap.set(11,'a');
mainMap.set(12,'c');
mainMap.set(13,'a');
mainMap.set(14,'c');
mainMap.set(15,'c');
mainMap.set(16,'e');
mainMap.set(17,'f');

const res={};
mainMap.forEach((v,k)=&gt;(res[v]??=[]).push([k,v]));
Object.entries(res).forEach(([k,arr])=&gt;
  res[k]=new Map(arr))
 
// Show the results 
Object.entries(res).forEach(([k,map])=&gt;{
 console.log(k);
 console.log(Object.fromEntries(map.entries()));
});</code></pre>
</div>
</div>
</p>
","2024-02-01 17:56:51","0","Answer"
"77922179","77922007","","<p>Using</p>
<pre><code>import dis
dis.dis(check_map)
</code></pre>
<p>I see <strong>some</strong> optimization in CPython 3.11.4, but a new dict is built every time:</p>
<pre><code>  1           0 RESUME                   0

  2           2 LOAD_CONST               1 ('newval1')
              4 LOAD_CONST               2 ('newval2')
              6 LOAD_CONST               3 ('newval3')
              8 LOAD_CONST               4 (('val1', 'val2', 'val3'))
             10 BUILD_CONST_KEY_MAP      3
             12 STORE_FAST               1 (value_map)

  3          14 ... (rest of the function)
</code></pre>
","2024-02-01 17:20:22","2","Answer"
"77922007","","Is creating a constant dictionary inside a function efficient in Python?","<p>Say, I have a function that creates a dictionary just to look up a value, e.g.:</p>
<pre><code>def check_map(val):
   value_map = {&quot;val1&quot;: &quot;newval1&quot;, &quot;val2&quot;: &quot;newval2&quot;, &quot;val3&quot;: &quot;newval3&quot;}
   val = value_map.get(val, val)
   # other stuff
   return val
</code></pre>
<p>Will Python optimize the dictionary creation in any way since it's basically a constant?</p>
","2024-02-01 16:55:40","3","Question"
"77921755","","how to find the same value in a javascript map","<p>I have one javascript map, in the map the values have the same value, i want to create new map for each map value to store all the same values key pair. I mean based on the map values to create new map, each value create one new map in the new map the key still the key and the value still the same.</p>
<pre><code>//map is dynamics created base on data from api call
const mainMap = new map();
//Fill map with data
//In the map it has been filled from api
//The data is dyanmic below is just sample 
mainMap.set(1,a);
mainMap.set(2,b);
mainMap.set(3,c);
mainMap.set(4,a);
mainMap.set(5,c);
mainMap.set(6,b);
mainMap.set(7,c);
mainMap.set(8,a);
mainMap.set(9,c);
mainMap.set(10,c);
mainMap.set(11,a);
mainMap.set(12,c);
mainMap.set(13,a);
mainMap.set(14,c);
mainMap.set(15,c);
mainMap.set(16,e);
mainMap.set(17,f);
......

//find out the same values key and create new map, basically each value will create one new map
const newMap1 = new map();
newMap1.set(1,a)
newMap1.set(4,a);
newMap1.set(8,a);
newMap1.set(11,a);
newMap1.set(13,a);

const newMap2 = new map();
newMap2.set(2,b);
newMap2.set(6,b);

const newMap3 = new map();
newMap3.set(3,c);
newMap3.set(5,c);
newMap3.set(7,c);
newMap3.set(9,c);
newMap3.set(10,c);
newMap3.set(12,c);
newMap3.set(14,c);
newMap3.set(15,c);

const newMap4 = new map();
newMap4.set(16,e);

const newMap5 = new map();
newMap5.set(17,f);


......



</code></pre>
<p>Thank you guys in advance</p>
<p>I tried to divide the main map into small sub maps by finding the same value but not able to do it.</p>
","2024-02-01 16:12:44","0","Question"
"77921727","","Python function to get value (str or object) in deep nested dictionary","<p>I'm sharing a <strong>working</strong> function that is able to return a value from a dictionary disregarding the depth of the nested object.
For example:
my_dict = {&quot;People&quot;: [{&quot;name&quot;: &quot;Alice&quot;}, {&quot;name&quot;: &quot;Bob&quot;}]}
If I wanted to get the value of &quot;People&quot; id write: <strong>my_dict[&quot;People&quot;]</strong> (path length is 1)
And to get &quot;Bob&quot;: <strong>my_dict[&quot;People&quot;][1]</strong> (path length is 2)
**notice the difference between retrieving a value in a dict vs list.</p>
<p>The problem arises when you don't know ahead of time the depth (path length) of the value.
I've searched for a function that does this but failed to find one.
I'm posting this to share the function for anyone else trying to achieve this and is having trouble.</p>
<p>The following function solves this problem:
Input:</p>
<ul>
<li>data: dictionary to search in</li>
<li>path: path to the object in list format (e.g. Bob's path will be [&quot;People&quot;, 1]
**this way the depth doesn't matter and can be determined at runtime.</li>
</ul>
<pre><code>def get_nested_object(data: dict, path: list):
    # Get outermost key from path
    key = path[0]
    # if data is type dictionary
    if isinstance(data, dict):
        # if key is found
        if key in data:
            # if path length == 1 -&gt; this is the object we need to return
            if len(path) == 1:
                return {key: data[key]}
            # else try to find value in current key
            else:
                return get_nested_object(data[key], path[1:])
        # else if data is type list
    elif isinstance(data, list):
        # if path length == 1 -&gt; this is the object we need to return
        if len(path) == 1:
            return data[key]
        else:
            return get_nested_object(data[key], path[1:])
    else:
        return &quot;Invalid data&quot;
</code></pre>
<p>** note that this code does not have data validation and error handling</p>
","2024-02-01 16:08:59","-1","Question"
"77921681","77908202","","<p>I solved the problem:</p>
<pre><code>export class FiletClientPipe implements PipeTransform {

  transform(clients: Observable&lt;ClientModel[]&gt;, i1 : string): Observable&lt;ClientModel[]&gt; {

    if (i1){
        clients = clients.pipe(map( o=&gt; o.filter(f=&gt; f.i1.toUpperCase() === i1)))
    }

  }
    return clients;

  }
}
</code></pre>
","2024-02-01 16:02:11","0","Answer"
"77919879","77913257","","<p>Standard swift dictionaries are not ordered, however Apple provides the <a href=""https://github.com/apple/swift-collections"" rel=""nofollow noreferrer"">Collections</a> library which contains an <code>OrderedDictionary</code> that maintains the order the keys were inserted and can be sorted manually:</p>
<pre class=""lang-swift prettyprint-override""><code>import OrderedCollections

var dict = OrderedDictionary&lt;String, [Interests]&gt;()
dict[&quot;9&quot;] = [Interests(id: 9, name: &quot;Lorem&quot;, isSelected: nil)]
dict[&quot;1&quot;] = [Interests(id: 1, name: &quot;Ipsum&quot;, isSelected: nil)]
dict[&quot;5&quot;] = [Interests(id: 5, name: &quot;Dolor&quot;, isSelected: nil)]
dict.sort { lhs, rhs in
    lhs.key &lt; rhs.key
}
print(dict)
/// Order will be 1,5,9
</code></pre>
","2024-02-01 11:38:21","0","Answer"
"77917223","77916513","","<p>The below expressions</p>
<pre class=""lang-yaml prettyprint-override""><code>  new_list_keys: &quot;{{ tor_vlan_list|json_query('[].keys(@)') }}&quot;
  new_list_vals: &quot;{{ tor_vlan_list|json_query('[].*.*.id') }}&quot;
  new_list: |
    [{% for i in new_list_keys|zip(new_list_vals) %}
    {{ dict(i.0|zip(i.1|map('map', 'int'))) }},
    {% endfor %}]
</code></pre>
<p>give what you want</p>
<pre class=""lang-yaml prettyprint-override""><code>  new_list:
    - switch_01: [1, 10, 20, 30]
    - switch_02: [1, 10, 20, 30]
</code></pre>
<pre class=""lang-yaml prettyprint-override""><code>  new_list_keys:
    - [switch_01]
    - [switch_02]

  new_list_vals:
    - - ['1', '10', '20', '30']
    - - ['1', '10', '20', '30']
</code></pre>
<hr>
<sup>
<p>Example of a complete playbook for testing</p>
<pre class=""lang-yaml prettyprint-override""><code>- hosts: localhost

  vars:

    tor_vlan_list:
    - switch_01:
        Vlan1: {id: '1', ip: unassigned, ok: 'NO', protocol: down, status: up}
        Vlan10: {id: '10', ip: 10.10.10.2/24, ok: 'YES', protocol: up, status: up}
        Vlan20: {id: '20', ip: 10.10.20.2/24, ok: 'YES', protocol: up, status: up}
        Vlan30: {id: '30', ip: 10.10.30.2/24, ok: 'YES', protocol: up, status: up}
    - switch_02:
        Vlan1: {id: '1', ip: unassigned, ok: 'NO', protocol: down, status: up}
        Vlan10: {id: '10', ip: 10.10.10.3/24, ok: 'YES', protocol: up, status: up}
        Vlan20: {id: '20', ip: 10.10.20.3/24, ok: 'YES', protocol: up, status: up}
        Vlan30: {id: '30', ip: 10.10.30.3/24, ok: 'YES', protocol: up, status: up}

    new_list_keys: &quot;{{ tor_vlan_list|json_query('[].keys(@)') }}&quot;
    new_list_vals: &quot;{{ tor_vlan_list|json_query('[].*.*.id') }}&quot;
    new_list: |
      [{% for i in new_list_keys|zip(new_list_vals) %}
      {{ dict(i.0|zip(i.1|map('map', 'int'))) }},
      {% endfor %}]

  tasks:

    - debug:
        var: new_list_keys|to_yaml
    - debug:
        var: new_list_vals|to_yaml
    - debug:
        var: new_list|type_debug
    - debug:
        var: new_list|to_yaml
</code></pre>
</sup>
","2024-02-01 01:08:05","4","Answer"
"77916683","77916513","","<p>Ansible isn't great at manipulating data structures, but you could do something like this:</p>
<pre><code>- set_fact:
    new_list: &gt;
      {{
        new_list + [
          {
            switch[0]: switch[1].values()|list|map(attribute='id')|map('int')
          }
        ]
      }}
  vars:
    new_list: []
    switch: &quot;{{ item.items()|first|list }}&quot;
  loop: &quot;{{ tor_vlan_list }}&quot;
  loop_control:
    label: &quot;{{ switch[0] }}&quot;

- debug:
    var: new_list
</code></pre>
<p>This makes somewhat complicated use of <code>set_fact</code> in a loop. Given your example input, the <code>debug</code> task prints your desired data structure:</p>
<pre><code>ok: [localhost] =&gt; {
    &quot;new_list&quot;: [
        {
            &quot;switch_01&quot;: [
                1,
                10,
                20,
                30
            ]
        },
        {
            &quot;switch_02&quot;: [
                1,
                10,
                20,
                30
            ]
        }
    ]
}
</code></pre>
<p>Alternately, you could place your logic into a custom filter in <code>filter_plugins/switches.py</code>, like this:</p>
<pre><code>def transform_vlan_list(vlan_list):
    return [
        {switch[0]: [int(vlan[&quot;id&quot;]) for vlan in switch[1].values()]}
        for x in vlan_list
        for switch in x.items()
    ]


class FilterModule:
    def filters(self):
        return {&quot;transform_vlan_list&quot;: transform_vlan_list}
</code></pre>
<p>The advantage here is that you've moved your logic into Python, which is much better at <em>manipulating</em> data.</p>
<p>With this custom filter plugin, you can produce the same output as the first example like this:</p>
<pre><code>- set_fact:
    new_list: &quot;{{ tor_vlan_list | transform_vlan_list }}&quot;

- debug:
    var: new_list
</code></pre>
","2024-01-31 22:07:55","2","Answer"
"77916513","","Ansible - parse a list of nested dictionaries to create a new list","<p>I have the following list of dictionaries</p>
<pre><code>&quot;tor_vlan_list&quot;: [
    {
        &quot;switch_01&quot;: {
            &quot;Vlan1&quot;: {
                &quot;id&quot;: &quot;1&quot;,
                &quot;ip&quot;: &quot;unassigned&quot;,
                &quot;ok&quot;: &quot;NO&quot;,
                &quot;protocol&quot;: &quot;down&quot;,
                &quot;status&quot;: &quot;up&quot;
            },
            &quot;Vlan10&quot;: {
                &quot;id&quot;: &quot;10&quot;,
                &quot;ip&quot;: &quot;10.10.10.2/24&quot;,
                &quot;ok&quot;: &quot;YES&quot;,
                &quot;protocol&quot;: &quot;up&quot;,
                &quot;status&quot;: &quot;up&quot;
            },
            &quot;Vlan20&quot;: {
                &quot;id&quot;: &quot;20&quot;,
                &quot;ip&quot;: &quot;10.10.20.2/24&quot;,
                &quot;ok&quot;: &quot;YES&quot;,
                &quot;protocol&quot;: &quot;up&quot;,
                &quot;status&quot;: &quot;up&quot;
            },
            &quot;Vlan30&quot;: {
                &quot;id&quot;: &quot;30&quot;,
                &quot;ip&quot;: &quot;10.10.30.2/24&quot;,
                &quot;ok&quot;: &quot;YES&quot;,
                &quot;protocol&quot;: &quot;up&quot;,
                &quot;status&quot;: &quot;up&quot;
            }
        }
    },
    {
        &quot;switch_02&quot;: {
            &quot;Vlan1&quot;: {
                &quot;id&quot;: &quot;1&quot;,
                &quot;ip&quot;: &quot;unassigned&quot;,
                &quot;ok&quot;: &quot;NO&quot;,
                &quot;protocol&quot;: &quot;down&quot;,
                &quot;status&quot;: &quot;up&quot;
            },
            &quot;Vlan10&quot;: {
                &quot;id&quot;: &quot;10&quot;,
                &quot;ip&quot;: &quot;10.10.10.3/24&quot;,
                &quot;ok&quot;: &quot;YES&quot;,
                &quot;protocol&quot;: &quot;up&quot;,
                &quot;status&quot;: &quot;up&quot;
            },
            &quot;Vlan20&quot;: {
                &quot;id&quot;: &quot;20&quot;,
                &quot;ip&quot;: &quot;10.10.20.3/24&quot;,
                &quot;ok&quot;: &quot;YES&quot;,
                &quot;protocol&quot;: &quot;up&quot;,
                &quot;status&quot;: &quot;up&quot;
            },
            &quot;Vlan30&quot;: {
                &quot;id&quot;: &quot;30&quot;,
                &quot;ip&quot;: &quot;10.10.30.3/24&quot;,
                &quot;ok&quot;: &quot;YES&quot;,
                &quot;protocol&quot;: &quot;up&quot;,
                &quot;status&quot;: &quot;up&quot;
            }
        }
    }
]
</code></pre>
<p>from this, i need to extract the list of vlan IDs for each switch and store these as follows</p>
<pre><code>&quot;new_list&quot;: [
    { 
     &quot;switch_01&quot;: [1,10,20,30]
    },
    {
     &quot;switch_02&quot;: [1,10,20,30]
    }
]
</code></pre>
<p>I would like to pass the list values as a var in the command *show vlan {{item}}&quot;</p>
<p>I've tried getting the needed detail using combinations of selectattr, map, combine, json_query, etc to set a new ansible fact but, all have eluded me.</p>
","2024-01-31 21:27:30","0","Question"
"77915295","77915269","","<p>One way to merge two dicts <code>d1</code> and <code>d2</code> is <code>{**d1, **d2}</code>. Instead of <code>**d2</code>, or in addition to <code>**d2</code>, you can also explicitly write the new values you want to add to <code>d1</code>.</p>
<p>And then using a list comprehension for <code>my_new_dicts</code>:</p>
<pre class=""lang-py prettyprint-override""><code>my_new_dicts = [{**d, 'value': v} for d, v in zip(my_dicts, my_values)]
</code></pre>
","2024-01-31 17:27:52","2","Answer"
"77915269","","Add element of list in dictionary of other list at the same index","<p>I have a list of values, and a list of dictionaries such as:</p>
<pre><code>my_values = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;]
my_dicts = [{...}, {...}, {...}]
</code></pre>
<p>I would like to unpack my values into my dictionaries so that the value in position <em>n</em> goes in the <em>nth</em> dictionary, such as:</p>
<pre><code>my_new_dicts = [{&quot;value&quot;: &quot;A&quot;, ...}, {&quot;value&quot;: &quot;B&quot;, ...}, {&quot;value&quot;: &quot;C&quot;, ...}]
</code></pre>
<p>My list/dict comprehension attempts so far yield a new list of <em>n*n</em> dictionaries.</p>
","2024-01-31 17:22:59","-2","Question"
"77914752","77913634","","<blockquote>
<p><strong>Why is it failing?</strong></p>
</blockquote>
<p>We know that for:</p>
<pre><code>x = [73,74,75,71,69,72,76,73, 99]  # note the additional list item
</code></pre>
<p>The result:</p>
<pre><code>{73: 7, 74: 1, 75: 2, 71: 3, 69: 4, 72: 5, 76: 6, 99: 8}
</code></pre>
<p>is <em>&quot;bad&quot;</em> for at least the first key in the dictionary. The reason it is bad (as others have pointed out) is that there are duplicate entries in the list <code>x</code> and as we process them we are conceptually doing:</p>
<pre><code>idx = {}
idx[73] = 0
idx[73] = 7
print(idx)
</code></pre>
<blockquote>
<p><strong>What should be done?</strong></p>
</blockquote>
<p>We don't know what you actually expect for the key of <code>73</code>. I think there is a good chance you want the value <code>0</code> but perhaps you want the value <code>[0, 7]</code> showing both indexes of <code>73</code> in the original list.</p>
<p>The other wrinkle is not knowing how the additional item <code>99</code> (occurring after the duplicated <code>73</code>) should be assigned a value. Do we keep the existing index entry <code>8</code> or do we want that to be a new <code>7</code> effectively replacing the duplicate?</p>
<p>Determining how to get some other result is fairly straight forward and I'll give you several things you can try.</p>
<p><strong>Option 1:</strong></p>
<p>I want the keys to have their actual first list indexes:</p>
<pre><code>73 --&gt; 0
99 --&gt; 8
</code></pre>
<pre class=""lang-py prettyprint-override""><code>idx_expected = {73: 0, 74: 1, 75: 2, 71: 3, 69: 4, 72: 5, 76: 6, 99: 8}
idx_actual = {}
for index, value in enumerate(x):
    if value not in idx_actual:
        idx_actual[value] = index
print(idx_actual == idx_expected)
</code></pre>
<p><strong>Option 2:</strong></p>
<p>I want the keys to have their first list indexes but if there is a duplicate, I just want to pretend it did not exist:</p>
<pre><code>73 --&gt; 0
99 --&gt; 7
</code></pre>
<pre class=""lang-py prettyprint-override""><code>## -------------
idx_expected = {73: 0, 74: 1, 75: 2, 71: 3, 69: 4, 72: 5, 76: 6, 99: 7}
idx_actual = {n:i for i, n in enumerate(dict.fromkeys(x))}
print(idx_actual == idx_expected)
## -------------
</code></pre>
<p><strong>Option 3:</strong></p>
<p>I want to capture the fact that there could be duplicates in the original list by setting the values in the resulting dictionary to a list of original indexes.</p>
<pre><code>73 --&gt; [0, 7]
99 --&gt; [8]
</code></pre>
<pre class=""lang-py prettyprint-override""><code>## -------------
idx_expected = {73: [0, 7], 74: [1], 75: [2], 71: [3], 69: [4], 72: [5], 76: [6], 99: [8]}
idx_actual = {}
for index, value in enumerate(x):
    idx_actual.setdefault(value, []).append(index)
print(idx_actual == idx_expected)
## -------------
</code></pre>
","2024-01-31 16:02:23","3","Answer"
"77914181","77914136","","<p>I'd create temporary index to ease the search:</p>
<pre class=""lang-py prettyprint-override""><code>list1 = [
    {&quot;time&quot;: &quot;2024-01-29T18:32:24.000Z&quot;, &quot;value&quot;: &quot;abc&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:47:48.000Z&quot;, &quot;value&quot;: &quot;def&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:24:20.000Z&quot;, &quot;value&quot;: &quot;ghi&quot;},
]

list2 = [
    {&quot;time&quot;: &quot;2024-01-30T18:34:44.000Z&quot;, &quot;value&quot;: &quot;xyz&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:47:48.000Z&quot;, &quot;value&quot;: &quot;pqr&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:24:20.000Z&quot;, &quot;value&quot;: &quot;jkl&quot;},
]

tmp = {d[&quot;time&quot;]: d for d in list1}

out = {}
for d in list2:
    if d[&quot;time&quot;] in tmp:
        out[tmp[d[&quot;time&quot;]][&quot;value&quot;]] = d[&quot;value&quot;]

print(out)
</code></pre>
<p>Prints:</p>
<pre><code>{'def': 'pqr', 'ghi': 'jkl'}
</code></pre>
","2024-01-31 14:36:19","6","Answer"
"77914174","77914136","","<p>Instead of a list comprehension, use a dictionary comprehension to get keys and values directly:</p>
<pre><code>&gt;&gt;&gt; {x['value'] : y['value']  if x['time'] == y['time'] else None for (x, y) in itertools.product(list1, list2)}
{'abc': None, 'def': None, 'ghi': 'jkl'}
</code></pre>
<p>Then, move the conditional to the comprehension, so it skips the Nones:</p>
<pre><code>&gt;&gt;&gt; {x['value']: y['value'] for (x, y) in itertools.product(list1, list2) if x['time'] == y['time']}
{'def': 'pqr', 'ghi': 'jkl'}
</code></pre>
","2024-01-31 14:35:14","5","Answer"
"77914173","77914136","","<p>dict comprehension has an <code>if</code> clause (at the end), to also filter out elements, like this:</p>
<pre class=""lang-py prettyprint-override""><code>output = {x['value']: y['value'] for x, y in itertools.product(list1, list2) if x['time'] == y['time']}
</code></pre>
<p>Output:</p>
<p><code>{'def': 'pqr', 'ghi': 'jkl'}</code></p>
","2024-01-31 14:34:58","4","Answer"
"77914136","","Dictionary Comparison/Conditional check in Python","<p>I have two list of dictionaries in the format:</p>
<pre><code>list1 = [
    {&quot;time&quot;: &quot;2024-01-29T18:32:24.000Z&quot;, &quot;value&quot;: &quot;abc&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:47:48.000Z&quot;, &quot;value&quot;: &quot;def&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:24:20.000Z&quot;, &quot;value&quot;: &quot;ghi&quot;}
]

list2 = [
    {&quot;time&quot;: &quot;2024-01-30T18:34:44.000Z&quot;, &quot;value&quot;: &quot;xyz&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:47:48.000Z&quot;, &quot;value&quot;: &quot;pqr&quot;},
    {&quot;time&quot;: &quot;2024-01-30T19:24:20.000Z&quot;, &quot;value&quot;: &quot;jkl&quot;}
]
</code></pre>
<p><strong>Requirement</strong> : I need to compare value of &quot;time&quot; key of each dictionary in list1 with &quot;time&quot; key of each dictionary in list2  and if they are equal, will need to form a key value pair dictionary for subsequent lookups.<br />
In the above, list1 and list2  have 2 dictionaries with same time :<br />
&quot;2024-01-30T19:47:48.000Z&quot; <br />
&quot;2024-01-30T19:24:20.000Z&quot; <br />
I need to combine value of these 2 to form output as below :</p>
<p><strong>Output</strong> :</p>
<pre><code>{&quot;def&quot; : &quot;pqr&quot;, &quot;ghi&quot; : &quot;jkl&quot;}
</code></pre>
<p>using itertools.product function , i am able to list as below so far but not in the key value pair dictionary as required .</p>
<pre><code>import itertools

list1 = [{&quot;time&quot;: &quot;2024-01-29T18:32:24.000Z&quot;, &quot;value&quot;: &quot;abc&quot;}, {&quot;time&quot;: &quot;2024-01-30T19:47:48.000Z&quot;, &quot;value&quot;: &quot;def&quot;}, {&quot;time&quot;: &quot;2024-01-30T19:24:20.000Z&quot;, &quot;value&quot;: &quot;ghi&quot;}]
list2 = [{&quot;time&quot;: &quot;2024-01-30T18:34:44.000Z&quot;, &quot;value&quot;: &quot;xyz&quot;}, {&quot;time&quot;: &quot;2024-01-30T19:47:48.000Z&quot;, &quot;value&quot;: &quot;pqr&quot;}, {&quot;time&quot;: &quot;2024-01-30T19:24:20.000Z&quot;, &quot;value&quot;: &quot;jkl&quot;}]

output = [f&quot;{x['value']} : {y['value']}&quot;  if x['time'] == y['time'] else None for (x, y) in itertools.product(list1, list2)]
print(output)
</code></pre>
<p><strong>Current Output :</strong></p>
<pre><code>[None, None, None, None, 'def : pqr', None, None, None, 'ghi : jkl']
</code></pre>
<p>I'm wondering if i can use lambda function to achieve output as : <code>{&quot;def&quot; : &quot;pqr&quot;, &quot;ghi&quot; : &quot;jkl&quot;}</code><br />
Any help or suggestions is appreciated.</p>
","2024-01-31 14:30:16","6","Question"
"77913932","77913760","","<p>For pattern-matching like this, I suggest a double <code>for</code>-loop for simplicity.</p>
<pre class=""lang-r prettyprint-override""><code>for (nm1 in names(data)) {
  for (nm2 in grep(nm1, names(sub), value=TRUE)) {
    data[[nm1]] &lt;- merge(data[[nm1]], sub[[nm2]], by = &quot;id&quot;, all = TRUE)
  }    
}
data
# $foo
#   id bodyPart  side device length mwID Duo:length
# 1 AA      leg  LEFT    LLI     12  a12         23
# 2 BB      arm RIGHT    LSM    476  k87         54
# 3 CC     knee  LEFT    GHT      7  j98         77
# 4 NN      eye  LEFT    LLM      2 &lt;NA&gt;         NA
# $bar
#   id bodyPart  side device tqID Duo:side
# 1 DC      ARM RIGHT    RWS fg12     &lt;NA&gt;
# 2 DD      ear  LEFT    LSM ll23    RIGHT
# 3 FF     knee  LEFT    YYY sc26     LEFT
# 4 ZZ    ankel  LEFT    GOM  kj8     LEFT
</code></pre>
<p>Your <code>output$foo</code> includes <code>Duo:bodyPart</code>, but that isn't clear from where that data is sourced, I've skipped it for now.</p>
<hr />
<p>Data</p>
<pre class=""lang-r prettyprint-override""><code>data &lt;- list(foo = structure(list(bodyPart = c(&quot;leg&quot;, &quot;arm&quot;, &quot;knee&quot;, &quot;eye&quot;), side = c(&quot;LEFT&quot;, &quot;RIGHT&quot;, &quot;LEFT&quot;, &quot;LEFT&quot;), device = c(&quot;LLI&quot;, &quot;LSM&quot;, &quot;GHT&quot;, &quot;LLM&quot;), length = c(12, 476, 7, 2), id = c(&quot;AA&quot;, &quot;BB&quot;, &quot;CC&quot;, &quot;NN&quot;), mwID = c(&quot;a12&quot;, &quot;k87&quot;, &quot;j98&quot;, NA)), class = &quot;data.frame&quot;, row.names = c(NA, -4L)), bar = structure(list(bodyPart = c(&quot;ankel&quot;, &quot;ear&quot;, &quot;knee&quot;, &quot;ARM&quot;), side = c(&quot;LEFT&quot;, &quot;LEFT&quot;, &quot;LEFT&quot;, &quot;RIGHT&quot;), device = c(&quot;GOM&quot;, &quot;LSM&quot;, &quot;YYY&quot;, &quot;RWS&quot;), id = c(&quot;ZZ&quot;, &quot;DD&quot;, &quot;FF&quot;, &quot;DC&quot;), tqID = c(&quot;kj8&quot;, &quot;ll23&quot;, &quot;sc26&quot;,  &quot;fg12&quot;)), class = &quot;data.frame&quot;, row.names = c(NA, -4L)))
sub &lt;- list(foo.new = structure(list(&quot;Duo:length&quot; = c(23, 54, 77), id = c(&quot;AA&quot;, &quot;BB&quot;, &quot;CC&quot;)), class = &quot;data.frame&quot;, row.names = c(NA, -3L)), bar.excel.km = structure(list(&quot;Duo:side&quot; = c(&quot;LEFT&quot;, &quot;RIGHT&quot;, &quot;LEFT&quot;), id = c(&quot;ZZ&quot;, &quot;DD&quot;, &quot;FF&quot;)), class = &quot;data.frame&quot;, row.names = c(NA, -3L)))
</code></pre>
","2024-01-31 14:00:15","2","Answer"
"77913760","","How to merge data fames in different lists including based on partial match in name with no one to one equivalent","<p>I have two lists of dataframes that I need to merge based on the matching names in in the two lists.
Here is the data:</p>
<pre><code>data &lt;- list(foo = structure(list(bodyPart = c(&quot;leg&quot;, &quot;arm&quot;, &quot;knee&quot;, &quot;eye&quot;), side = c(&quot;LEFT&quot;, &quot;RIGHT&quot;, &quot;LEFT&quot;, &quot;LEFT&quot;), device = c(&quot;LLI&quot;, &quot;LSM&quot;, &quot;GHT&quot;, &quot;LLM&quot;), length = c(12, 476, 7, 2), id = c(&quot;AA&quot;, &quot;BB&quot;, &quot;CC&quot;, &quot;NN&quot;), mwID = c(&quot;a12&quot;, &quot;k87&quot;, &quot;j98&quot;, NA)), class = &quot;data.frame&quot;, row.names = c(NA, -4L)), bar = structure(list(bodyPart = c(&quot;ankel&quot;, &quot;ear&quot;, &quot;knee&quot;, &quot;ARM&quot;), side = c(&quot;LEFT&quot;, &quot;LEFT&quot;, &quot;LEFT&quot;, &quot;RIGHT&quot;), device = c(&quot;GOM&quot;, &quot;LSM&quot;, &quot;YYY&quot;, &quot;RWS&quot;), id = c(&quot;ZZ&quot;, &quot;DD&quot;, &quot;FF&quot;, &quot;DC&quot;), tqID = c(&quot;kj8&quot;, &quot;ll23&quot;, &quot;sc26&quot;,  &quot;fg12&quot;)), class = &quot;data.frame&quot;, row.names = c(NA, -4L)))
</code></pre>
<p>Here is the list I would like to merge to the data:</p>
<pre><code>sub &lt;- list(foo.new = structure(list(&quot;Duo:length&quot; = c(23, 54, 77), id = c(&quot;AA&quot;, &quot;BB&quot;, &quot;CC&quot;)), class = &quot;data.frame&quot;, row.names = c(NA, -3L)), bar.excel.km = structure(list(&quot;Duo:side&quot; = c(&quot;LEFT&quot;, &quot;RIGHT&quot;, &quot;LEFT&quot;), id = c(&quot;ZZ&quot;, &quot;DD&quot;, &quot;FF&quot;)), class = &quot;data.frame&quot;, row.names = c(NA, -3L)))
</code></pre>
<p>here is the desired output:</p>
<pre><code>  output &lt;- list(foo = structure(list(id = c(&quot;AA&quot;, &quot;BB&quot;, &quot;CC&quot;, &quot;NN&quot;), bodyPart = c(&quot;leg&quot;, 
  &quot;arm&quot;, &quot;knee&quot;, &quot;eye&quot;), side = c(&quot;LEFT&quot;, &quot;RIGHT&quot;, &quot;LEFT&quot;, &quot;LEFT&quot;
  ), device = c(&quot;LLI&quot;, &quot;LSM&quot;, &quot;GHT&quot;, &quot;LLM&quot;), length = c(12, 476, 
  7, 2), mwID = c(&quot;a12&quot;, &quot;k87&quot;, &quot;j98&quot;, NA), `Duo:length` = c(23, 
  54, 77, NA)), row.names = c(NA, -4L), class = &quot;data.frame&quot;), 
  bar = structure(list(id = c(&quot;DC&quot;, &quot;DD&quot;, &quot;FF&quot;, &quot;ZZ&quot;), bodyPart = c(&quot;ARM&quot;, 
  &quot;ear&quot;, &quot;knee&quot;, &quot;ankel&quot;), side = c(&quot;RIGHT&quot;, &quot;LEFT&quot;, &quot;LEFT&quot;, 
  &quot;LEFT&quot;), device = c(&quot;RWS&quot;, &quot;LSM&quot;, &quot;YYY&quot;, &quot;GOM&quot;), tqID = c(&quot;fg12&quot;, 
  &quot;ll23&quot;, &quot;sc26&quot;, &quot;kj8&quot;), `Duo:side` = c(NA, &quot;RIGHT&quot;, &quot;LEFT&quot;, 
  &quot;LEFT&quot;)), row.names = c(NA, -4L), class = &quot;data.frame&quot;))
      
</code></pre>
<p>I used the code below but the problem is there I can't specify that all the dataframes starting with &quot;foo&quot; in &quot;sub&quot; table should be merged to the &quot;foo&quot; table in Data.</p>
<pre><code>Map(merge, data, sub, by='id', all=TRUE)
</code></pre>
","2024-01-31 13:36:21","2","Question"
"77913654","77913634","","<p><code>73</code> is contained twice in vector <code>x= [73,74,75,71,69,72,76,73]</code>, which results in ambiguity (the same key corresponds to two different index values.)</p>
","2024-01-31 13:21:06","1","Answer"
"77913634","","Weird response with enumerate and dict in python","<p>Using the <code>dict(enumerate(x))</code>, we get the <code>{ (index, value) }</code>. Instead, I need <code>{ (value, index) }</code>.
So, I've written this code...</p>
<pre><code>idx= { n:i for i, n in enumerate(x)}
</code></pre>
<p>It works with some inputs and fails with others.
Here's an input where it is failing.</p>
<pre><code>x= [73,74,75,71,69,72,76,73]
</code></pre>
<p>, Why is it failing? and what should be done?</p>
","2024-01-31 13:17:55","-3","Question"
"77913318","77913257","","<p>As dictionary is unordered collection (it cannot be sorted/ordered), you can only to use array of custom KeyValuePairs:</p>
<pre><code>import Foundation
import AppKit

struct InterestsData: Codable {
   let message: String?
   let data: [CustKeyValuePair&lt;String, [Int]&gt;]
    
   func sortedByKey() -&gt; InterestsData {
       let sortedData = data.sorted(by: { $0.key &lt; $1.key })
    
       return InterestsData(message: message, data: sortedData )
   }
}

struct CustKeyValuePair&lt;T1, T2&gt;: Codable where T1: Codable, T2: Codable {
    let key: T1
    var value: T2
}

////// TESTING of solution on real data:

let data = [
    &quot;1asdf&quot; : [1,2,3],
    &quot;5asdf&quot; : [1,2,3,4,5,6],
    &quot;4asdf&quot; : [1,2,3,1,2],
    &quot;3asdf&quot; : [1,2,3,2],
    &quot;2asdf&quot; : [1,2,3,0]
].map{ CustKeyValuePair(key: $0.key, value: $0.value) }

let a = InterestsData(message: &quot;message&quot;, data: data )

let b = a.sortedByKey().data.map{ $0.key }

print(b)
</code></pre>
<p>Console output:</p>
<pre><code>[&quot;1asdf&quot;, &quot;2asdf&quot;, &quot;3asdf&quot;, &quot;4asdf&quot;, &quot;5asdf&quot;]
Program ended with exit code: 0
</code></pre>
<p>so data is sorted</p>
","2024-01-31 12:27:27","0","Answer"
"77913257","","Trying to sort a dictionary but then it gets mixed up again","<p>Trying to sort this property by its key <code>let data: [String: [Interests]]</code> but it gets mixed up again after saving the data. How can I solve this issue.</p>
<p>Here is the struct model</p>
<pre><code>// MARK: - InterestsData
struct InterestsData: Codable {
   let message: String?
   let data: [String: [Interests]]


   func sortedByKey() -&gt; InterestsData {
       let sortedKeys = data.keys.sorted()
    
       print(&quot;SORTED KEYS:&quot;,sortedKeys) // Sorted Alphabetically 
    
       var sortedData: [String: [Interests]] = [:]
            
       for key in sortedKeys {
           sortedData[key] = data[key]
       }
    
       print(&quot;SORTED KEYS WITH DATA &quot;, sortedData) //Now keys not sorted
    
       return InterestsData(message: message, data: sortedData)
   }


}



// MARK: - Interests
   struct Interests: Codable {
       let id: Int
       let name: String
       let isSelected: Int?
   }
</code></pre>
","2024-01-31 12:18:15","0","Question"
"77910299","77908261","","<p>Simulating your <code>getAnimals</code> function as a generator that yields random choices of species and names in a one-key dictionary:</p>
<pre><code>import random

species = ['Cat','Dog','Bird','Cow','Frog']
names  = ['Ted','Aaron','Jed','Fluffy','Tom','Max']
def getAnimals(count):
    for _ in range(count):
        yield {random.choice(species):random.choice(names)}
</code></pre>
<p>Example run:</p>
<pre><code>print(*getAnimals(5),sep='\n')
{'Cat': 'Ted'}
{'Frog': 'Jed'}
{'Bird': 'Max'}
{'Frog': 'Fluffy'}
{'Dog': 'Max'}
</code></pre>
<p>You can fill your 25 cat list using a while loop that asks for the missing number of items in the result list:</p>
<pre><code>result = []
while len(result)&lt;25:
    for animal in getAnimals(25-len(result)):
        if 'Cat' in animal:
            result.append(animal)

print(result)

[{'Cat': 'Ted'}, {'Cat': 'Jed'}, {'Cat': 'Ted'}, {'Cat': 'Tom'}, 
 {'Cat': 'Tom'}, {'Cat': 'Ted'}, {'Cat': 'Max'}, {'Cat': 'Max'}, 
 {'Cat': 'Ted'}, {'Cat': 'Fluffy'}, {'Cat': 'Jed'}, {'Cat': 'Tom'}, 
 {'Cat': 'Ted'}, {'Cat': 'Aaron'}, {'Cat': 'Max'}, {'Cat': 'Aaron'}, 
 {'Cat': 'Tom'}, {'Cat': 'Tom'}, {'Cat': 'Max'}, {'Cat': 'Jed'}, 
 {'Cat': 'Aaron'}, {'Cat': 'Ted'}, {'Cat': 'Tom'}, {'Cat': 'Tom'}, 
 {'Cat': 'Aaron'}]
</code></pre>
<p>If there is a benefit to generating larger batches but you don't want to systematically request too many (e.g. if you're getting this from a web service or database), you can start with an estimated count and refine the estimate at each iteration based on the ratio of Cats found so far:</p>
<pre><code>target    = 25
result    = []
generated = 0
estimate  = target
while len(result)&lt;target:
    for animal in getAnimals(round(estimate) or target):
        generated += 1
        if 'Cat' in animal:
            result.append(animal)
            if len(result) == target:
                break
    estimate = (target-len(result))*generated/max(1,len(result))
</code></pre>
","2024-01-31 01:17:45","0","Answer"
"77910092","77910046","","<p>You can do:</p>
<pre class=""lang-py prettyprint-override""><code>to_delete = {&quot;description&quot;, &quot;market_value&quot;, &quot;cost&quot;}

positions_list = [{k: d[k] for k in d.keys() - to_delete} for d in positions_list]
print(positions_list)
</code></pre>
<p>Prints:</p>
<pre><code>[
    {&quot;quantity&quot;: 18.0, &quot;symbol&quot;: &quot;ARDX&quot;},
    {&quot;quantity&quot;: 2.0, &quot;symbol&quot;: &quot;GCT&quot;},
    {&quot;quantity&quot;: 90.0, &quot;symbol&quot;: &quot;IMPP&quot;},
    {&quot;quantity&quot;: 21.0, &quot;symbol&quot;: &quot;MREO&quot;},
]
</code></pre>
","2024-01-31 00:00:46","1","Answer"
"77910046","","More Pythonic Code for Dictionary Deletions","<p>I have the following code that produces the result I'm after, but I feel like there is probably a more Pythonic way to do this. Is there a dict comprehension or other approach that's a better way to write this code? Thanks.</p>
<pre><code>positions_list = [{'symbol': 'ARDX',
  'description': 'ARDELYX INC',
  'quantity': 18.0,
  'cost': 162.18,
  'market_value': 163.08},
 {'symbol': 'GCT',
  'description': 'GIGACLOUD TECHNOLOGY I FCLASS A',
  'quantity': 2.0,
  'cost': 51.4,
  'market_value': 51.24},
 {'symbol': 'IMPP',
  'description': 'IMPERIAL PETROLEUM INC F',
  'quantity': 90.0,
  'cost': 312.3,
  'market_value': 303.3},
 {'symbol': 'MREO',
  'description': 'MEREO BIOPHARMA GROUP FUNSPONSORED ADR 1 ADR REPS 5 ORD SHS',
  'quantity': 21.0,
  'cost': 82.32,
  'market_value': 82.32}]

d, m, c = 'description', 'market_value', 'cost'

for key in positions_list:
    if d in key:
        del key[d]
        del key[m]
        del key[c]

positions_list
</code></pre>
<h4>Output</h4>
<h4>[{'symbol': 'ARDX', 'quantity': 18.0},{'symbol': 'GCT', 'quantity': 2.0},{'symbol': 'IMPP', 'quantity': 90.0},{'symbol': 'MREO', 'quantity': 21.0}]</h4>
","2024-01-30 23:46:37","1","Question"
"77908274","77908202","","<pre><code>export class FilterClientPipe implements PipeTransform {

  transform(clients: Observable&lt;ClientModel[]&gt;, i1 : string): ClientModel[] {

    return clients.pipe(
      take(1),
      map(data=&gt; {
        if(i1){
          return data.filter(client =&gt; client.i1.toLowerCase().include(i1))
         }
        return data;
       })
     ).toPromise()
 }
</code></pre>
<p>I hope this will help you. But will be great you can share more information what exactly you want to achieve, then only I will create stackblitz example for you.
Cheers 🥂</p>
","2024-01-30 17:22:35","0","Answer"
"77908261","","How to structure an algorithm in Python that populates a list with filtered values that are sourced from random generation?","<p>I want to create a list of 25 items all with a specific key in a key/value pair, but the pairs that I'm receiving from the API function call are somewhat random in nature. I'm not sure what the most efficient way to populate the list is.</p>
<p>Take this arbitrary example:</p>
<p>A function generates a specified number of random animals with names as a key/value pair, so</p>
<p><code>getAnimals(3)</code></p>
<p>generates</p>
<pre><code>{'Cat':'Ted'}
{'Horse': 'Fred'}
{'Bird': 'Jed}

</code></pre>
<p>So if I want a dictionary of 25 animals that are all cats the desired result would look like:</p>
<pre><code>[
    {'Cat': 'Ted'}, 
    {'Cat': 'Aaron'}, 
    {'Cat': 'Fluffy'},
    ...
]
</code></pre>
<p>I know generating one item at a time is definitely not ideal. Right now I'm theorizing that I should generate 25 items at once, filter out the non-cat entries, and then call the function again for the remaining number of spots to fill. Repeat until dict is full. Is this the most efficient way to go about this? If not, what would be the best way to structure this algorithm?</p>
","2024-01-30 17:20:40","0","Question"
"77908202","","Angular - PipeTransform - Filter observable array","<p>I have a problem when creating a PipeTransform, the input is Observable&lt;Array&gt; and I want to filter this Array it based on another parameter, but it doesn't work.
Any help where I'm going wrong?</p>
<pre><code>export class FilterClientPipe implements PipeTransform {
  transform(clients: Observable&lt;ClientModel[]&gt;, i1: string): any {

    if (i1 !== '') {
      clients = clients.pipe(
        map((data: ClientModel[]) =&gt;
          data
            .filter(i =&gt; i.i1.toLowerCase() === i1)
        ));
      return clients;
    }
    return clients;
  }
}
</code></pre>
","2024-01-30 17:10:37","0","Question"
"77905414","77905407","","<p>Here's all you need to do to fix this -</p>
<p>Locate and Delete this folder on your computer</p>
<p><code>%userprofile%\.azure</code>
or you can also use
<code>C:\Users\&lt;Your username&gt;\.azure</code></p>
<p>Once deleted, you can try <code>az login</code> in any CMD/Powershell and it will work!</p>
","2024-01-30 09:57:49","0","Answer"
"77905407","","Azure CLI - Error on az login : 'dict' object has no attribute 'append'","<p>Azure CLI for Windows :
I had been struggling with this error from few weeks, that occurred everytime I ran <code>az login</code>.</p>
<p>I have found a solution, so I thought of publishing it here. I had come across another thread where somebody was running into same situation without a fix.</p>
<pre><code>The command failed with an unexpected error. Here is the traceback:
'dict' object has no attribute 'append'
Traceback (most recent call last):
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\knack/cli.py&quot;, line 233, in invoke
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/commands/__init__.py&quot;, line 663, in execute
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/commands/__init__.py&quot;, line 726, in _run_jobs_serially
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/commands/__init__.py&quot;, line 697, in _run_job
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/commands/__init__.py&quot;, line 333, in __call__
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/commands/command_operation.py&quot;, line 121, in handler
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/command_modules/profile/custom.py&quot;, line 139, in login
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/_profile.py&quot;, line 154, in login
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/auth/identity.py&quot;, line 153, in login_with_auth_code
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/auth/identity.py&quot;, line 112, in _msal_app
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/auth/identity.py&quot;, line 95, in _msal_app_kwargs
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/auth/identity.py&quot;, line 122, in _load_msal_http_cache
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/auth/binary_cache.py&quot;, line 28, in __init__
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/auth/binary_cache.py&quot;, line 44, in load
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/decorators.py&quot;, line 102, in _wrapped_func
  File &quot;D:\a\_work\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/core/auth/binary_cache.py&quot;, line 35, in _load
AttributeError: 'dict' object has no attribute 'append'
</code></pre>
<p>I tried :</p>
<ul>
<li>uninstalling and reinstalling Azure CLI</li>
<li>Installing latest and little older versions of Azure CLI</li>
<li>uninstalling all Python versions from my computer and then installing CLI alone</li>
<li>Installing Python 3.10 (which appears to be highest supported version) and then installing Azure CLI</li>
<li>Reboots 😉</li>
</ul>
<p>All I needed was a login page from azure CLI and a token back.</p>
<p>But to no avail. I kept running into this same error.</p>
<p>In the end, a basic step worked, i.e. to clean the azure cli's working directory.</p>
<p>Its not a &quot;solution&quot; kind of solution, but one that bugged me a lot and forced me to rely on VMs to do my automation tasks.
Also, if you lookup this error, you'll only find answers asking you to fix your Python code (unrelated to Azure CLI)</p>
<p>So Here's all you need to do -</p>
<p>Locate and Delete this folder on your computer</p>
<p><code>%userprofile%\.azure</code>
or you can also use
<code>C:\Users\&lt;Your username&gt;\.azure</code></p>
<p>Once deleted, you can try <code>az login</code> in any CMD/Powershell and it will work.</p>
","2024-01-30 09:57:00","0","Question"
"77904164","77904091","","<p>In code snippet (1), the issue lies in the line:</p>
<pre><code>final_dictionary = starting_dictionary[&quot;c&quot;] = 7
</code></pre>
<p>This line of code doesn't achieve what you're intending. It actually assigns the value 7 to the key &quot;c&quot; in the starting_dictionary and then assigns the same value 7 to final_dictionary. It does not create a new dictionary with the added key-value pair.</p>
<p>Because:</p>
<p>starting_dictionary[&quot;c&quot;] = 7: This modifies the starting_dictionary by adding the key &quot;c&quot; with the value 7.</p>
<p>final_dictionary = starting_dictionary[&quot;c&quot;] = 7: It is equivalent to the below two steps-</p>
<p>starting_dictionary[&quot;c&quot;] = 7: Modifies starting_dictionary.
final_dictionary = 7: Assigns the value 7 to final_dictionary.
So, after executing this line, both starting_dictionary and final_dictionary are pointing to the value 7, not to dictionaries.</p>
<p>On the other hand, code snippet (2)
correctly adds the key-value pair to starting_dictionary and then assigns the reference of starting_dictionary to final_dictionary. Therefore, both dictionaries will have the same content after the execution of the code in snippet (2).</p>
","2024-01-30 05:58:24","0","Answer"
"77904091","","why does final_dictionary = starting_dictionary[""c""] = 7 not assign starting_list with added key-value pair to final_dictionary","<p>**How are these two different.
**
(1)</p>
<pre><code>starting_dictionary = {
    &quot;a&quot;: 9,
    &quot;b&quot;: 8,
}
final_dictionary = {
    &quot;a&quot;: 9,
    &quot;b&quot;: 8,
    &quot;c&quot;: 7,
}
final_dictionary = starting_dictionary[&quot;c&quot;] = 7
print(starting_dictionary)
print(final_dictionary)
</code></pre>
<p>(2)</p>
<pre><code>starting_dictionary = {
    &quot;a&quot;: 9,
    &quot;b&quot;: 8,
}
final_dictionary = {
    &quot;a&quot;: 9,
    &quot;b&quot;: 8,
    &quot;c&quot;: 7,
}
starting_dictionary[&quot;c&quot;] = 7
final_dictionary = starting_dictionary
print(starting_dictionary)
print(final_dictionary)
</code></pre>
<p>My main doubt is regarding the (1) code snippet, why does it not work like this :
*starting_dictionary should add a new key-value pair of &quot;c&quot;:7
*starting_dictionary should be assigned to final_dictionary
*And now final_dictionary should have all of starting_dictionary with added key-value pair</p>
","2024-01-30 05:33:40","1","Question"
"77903512","77903034","","<p>Without VBA or python you can use this:</p>
<pre><code>=SUM(--ISNUMBER(SEARCH($E$1:$E$3,A1)))
</code></pre>
<p><code>SEARCH</code> to check if any of the strings are contained in the company name</p>
<p><code>--</code> and <code>ISNUMBER</code> to convert matches and non-matches to 1 and 0</p>
<p><code>SUM</code> to combine the matches into a single result.</p>
<p>You could also add a <code>=1</code> at the end to convert to <code>TRUE</code> / <code>FALSE</code></p>
<p><a href=""https://i.sstatic.net/aNiNr.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/aNiNr.png"" alt=""enter image description here"" /></a></p>
","2024-01-30 01:51:39","1","Answer"
"77903034","","create array of strings, then check occurrence of those strings in cells","<p>I have a very long list of company names in a column A as strings. They contain “LLC”, “llc”, “limited”, “Ltd.” etc in all combinations. I need to create a list (dictionary) and check for the incidence of any of these combinations in the cell string, then output a Boolean yes/no to the adjacent cell in Column B if any of the dictionary entry is present in the name.</p>
<p>Couldn’t create a dynamic array with a python type list.append command.</p>
","2024-01-29 22:44:48","-2","Question"
"77902817","77902753","","<p>You will want to clean up the keys to have consistent types first.</p>
<pre><code>&gt;&gt;&gt; x, y, z, x1, y1, z1, x2, y2, z2 = (0,) * 9
&gt;&gt;&gt; d = {1: [x, y, z], 2: [x1, y1, z1], '1e': [x2, y2, z2]}
&gt;&gt;&gt; d2 = {str(k): v  for k, v in d.items()}
&gt;&gt;&gt; d3 = {k: d2[k]  for k in sorted(d2)}
&gt;&gt;&gt; d3
{'1': [0, 0, 0], '1e': [0, 0, 0], '2': [0, 0, 0]}
</code></pre>
","2024-01-29 21:52:30","0","Answer"
"77902797","77902753","","<p>To change the order of keys, you need to re-create the dictionary from its items sorted in the desired order:</p>
<pre><code>d = {1: [&quot;x&quot;, &quot;y&quot;, &quot;z&quot;], 2: [&quot;x1&quot;, &quot;y1&quot;, &quot;z1&quot;], '1e': [&quot;x2&quot;, &quot;y2&quot;, &quot;z2&quot;]}

d = dict(sorted(d.items(),key=lambda k:str(k[0])))

print(d)
{1: ['x', 'y', 'z'], '1e': ['x2', 'y2', 'z2'], 2: ['x1', 'y1', 'z1']}
</code></pre>
","2024-01-29 21:47:18","1","Answer"
"77902793","77902753","","<p>Since python 3.6, <code>dict</code>s are insertion ordered. This allows us to insert keys into a <code>dict</code> in any order and have that order preserved:</p>
<pre><code>d = {1: '[x, y, z]', 2: '[x1, y1, z1]'}
d['1e'] = '[x2, y2, z2]'

print(d)

keys = [1, '1e', 2]
d = {k:d[k] for k in keys}
print(d)
</code></pre>
<p>Output:</p>
<pre><code>{1: '[x, y, z]', 2: '[x1, y1, z1]', '1e': '[x2, y2, z2]'}
{1: '[x, y, z]', '1e': '[x2, y2, z2]', 2: '[x1, y1, z1]'}
</code></pre>
<p>As you can see the order has been changed to what you require.</p>
","2024-01-29 21:46:58","0","Answer"
"77902753","","Change key index in dictionary with lists Py3.8","<p>I have got dict like this:</p>
<pre class=""lang-py prettyprint-override""><code>dict = {1: [x, y, z], 2: [x1, y1, z1]}
</code></pre>
<p>further I add another key '1e' to dict and it becomes like this:</p>
<pre class=""lang-py prettyprint-override""><code>dict = {1: [x, y, z], 2: [x1, y1, z1], '1e': [x2, y2, z2]}
</code></pre>
<p>in the end I need dict in order 1, 1e, 2.</p>
<p>so the expected result must be like that:</p>
<pre class=""lang-py prettyprint-override""><code>dict = {1: [x, y, z], '1e': [x2, y2, z2],2: [x1, y1, z1]}
</code></pre>
<p>how can I change index of 1e from 2 to 1?</p>
<p>p.s.: x value is date as a str, tried to use order by value x with different methods but nothing works. returns an error that float and str can't be sorted.
I've tried smh like this:</p>
<pre class=""lang-py prettyprint-override""><code>new_dict = OrderedDict(sorted(dict.items(), key=lambda t: t[1]))
</code></pre>
<p>and that:</p>
<pre class=""lang-py prettyprint-override""><code>new_dict = sorted(dict.items(), key=lambda x: datetime.strptime(x[1],'%Y-%m-%d'), reverse=True)
</code></pre>
<p>in the second method error is to find strptime.</p>
","2024-01-29 21:36:29","-2","Question"
"77897048","77887118","","<p>You could reduce the amount of Python code by building the dictionary using built-in functions:</p>
<pre><code>return dict(zip(ns,map(self.method,ds)))
</code></pre>
<p>I don't think this  will make a big difference though.</p>
","2024-01-29 01:33:54","0","Answer"
"77896651","77896603","","<p>The declaration of your <code>myMessages</code> variable isn't valid Swift:</p>
<ol>
<li><p>The type doesn't make sense. It looks like you want an array of dictionaries, but <code>[Dictionary : Any?]</code> would give you a single dictionary, which would be mapping keys of type <code>Dictionary</code> (which itself is not valid without generic parameters) to <code>Any?</code> values. What you probably want is <code>[[String : Any]]</code>, which would be an array (hence the outer brackets) of dictionaries with String keys (i.e. <code>[String : Any]</code>).</p>
</li>
<li><p>Curly braces are correct to define a dictionary in raw JSON, but not in Swift. Swift uses square brackets for that. Replace the <code>{</code> and <code>}</code> with <code>[</code> and <code>]</code>.</p>
</li>
<li><p>Your dictionary keys need to be correctly formatted as strings; i.e. <code>&quot;role&quot;:</code> rather than <code>role:</code>, unless of course <code>role</code> is a variable pointing to some string key.</p>
</li>
</ol>
","2024-01-28 22:27:18","2","Answer"
"77896603","","Convert array of dictionaries into usable JSON","<p>I am having trouble creating a JSON object that embeds an array of dictionaries. Here is non-working code of what I want to do. The myMessages in parameters throws an error:</p>
<pre><code>let myMessages: [Dictionary: Any?] = [
    { role: &quot;system&quot;, content: &quot;You’re a social media manager writing Instagram captions.&quot; },
    { role: &quot;user&quot;, content: &quot;I want to post something on Instagram on Mother’s day. Brainstorm some ideas.&quot; },
]
 
let parameters: [String: Any?] = [
    &quot;model&quot;: model,
    &quot;messages&quot;: myMessages,
]
guard let parametersJson = try? JSONSerialization.data(withJSONObject: parameters, options: .prettyPrinted) else { 
    return
}
</code></pre>
<p><strong>Edit:</strong></p>
<p>I can get it to compile and run if I change myMessages to a dict as follows but the API requires an array.</p>
<pre><code>var myMessages = [&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;How many days in a week&quot;]
</code></pre>
<p><strong>Edit 2</strong>
Using the accepted answer and comments below the following code works properly. As pointed out the problems were: Proper way to declare the array is [[String: Any?]], curly braces do not work in Swift and keys if strings not variables need to be in quotes.</p>
<pre><code>var myMessages: [[String: Any?]] = [
            [ &quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You love pizza.&quot; ],
            [ &quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;What do you think of pizza&quot; ]
        ]
</code></pre>
","2024-01-28 22:09:08","0","Question"
"77894252","77894149","","<p>The <code>+=</code> operator is used to extend a list with the elements of another iterable. However, when you want to add a single element to a list (not an iterable), you should use the append method.</p>
<p>so if you use <code>+=</code> with 2 list it will concatenate them.</p>
<p><code>+=</code>: Extends the list with the elements of another iterable.
<code>append()</code>: Adds a single element to the end of the list.</p>
<p>That is why <code>append</code> is working.</p>
<p>example:</p>
<pre><code>   travel_log = [ { &quot;country&quot;: &quot;France&quot;, &quot;visits&quot;: 12, &quot;cities&quot;: [&quot;Paris&quot;, &quot;Lille&quot;, &quot;Dijon&quot;] }, { &quot;country&quot;: &quot;Germany&quot;, &quot;visits&quot;: 5, &quot;cities&quot;: [&quot;Berlin&quot;, &quot;Hamburg&quot;, &quot;Stuttgart&quot;] }, ]
    
   new_country = [{ &quot;country&quot;: country, &quot;visits&quot;: int(visits), &quot;cities&quot;: list_of_cities, }]

   travel_log+=new_country
</code></pre>
<p>This should work using <code>+=</code>
and if you want to use exact with append it will be:</p>
<pre><code>travel_log.append(new_country[0])
</code></pre>
<p>otherwise you will have a list appended instead of a dict</p>
","2024-01-28 09:32:33","0","Answer"
"77894149","","When to use append() and when the += operator in Python?","<p>This is my first question on Stack Overflow.</p>
<p>I want to add a new dictionary at the end of an existing list with multiple dictionaries (see example below):</p>
<pre><code>travel_log = [
  {
    &quot;country&quot;: &quot;France&quot;,
    &quot;visits&quot;: 12,
    &quot;cities&quot;: [&quot;Paris&quot;, &quot;Lille&quot;, &quot;Dijon&quot;]
  },
  {
    &quot;country&quot;: &quot;Germany&quot;,
    &quot;visits&quot;: 5,
    &quot;cities&quot;: [&quot;Berlin&quot;, &quot;Hamburg&quot;, &quot;Stuttgart&quot;]
  },
]

new_country = {
    &quot;country&quot;: country,
    &quot;visits&quot;: int(visits),
    &quot;cities&quot;: list_of_cities,
  }
</code></pre>
<p><code>new_country</code> needs to be added to the list of <code>travel_log</code>, but for a certain reason if I write:</p>
<p><code>travel_log += new_country</code></p>
<p>It does not work, while</p>
<p><code>travel_log.append(new_country)</code></p>
<p>will give the correct result.</p>
<p>I thought until now that the <code>+=</code> operator could be used in lists quite easily, but I am now a bit confused. Thank you in advance for your answers.</p>
","2024-01-28 08:57:28","0","Question"
"77893977","77826981","","<p>I solved this problem using the BFS(BReadth first search) technique.</p>
<p>I know it's not an optimized approach but somehow a solution. So idea is, try to explore all possible reachable nodes from the beginning.</p>
<pre><code>    bool IsLastElementReachable(int[] array, int lastElementIndex, Queue&lt;int&gt; 
    queue, HashSet&lt;int&gt; visited)
    {
       var Count = array.Length;
       visited.Add(0);

       queue.Enqueue(0);

       while (queue.Count() == 0)
       {
        var start = queue.Dequeue();

        if (start == Count - 1)
            return true;

        var end = start + array[start];

        end = end &gt;= Count ? Count - 1: end;

        for (int i = start + 1; i &lt; end; i++)
        {
            if (i &lt;= lastElementIndex)
            {
                if (!visited.Contains(i))
                {
                    visited.Add(i);
                    queue.Enqueue(i);
                }
            }
        }
    }

    return false;
   }
</code></pre>
","2024-01-28 07:34:17","0","Answer"
"77892909","77892725","","<pre><code>public abstract class ICharacterBody3DState
{
    public static Dictionary&lt;StateInput, ICharacterBody3DState&gt; State = new Dictionary&lt;StateInput, ICharacterBody3DState&gt;()
    {
        { StateInput.sprint, new StateInput() },
    };
}
</code></pre>
<p>put each key and value inside curly braces <code>{}</code> and separated them with a <code>comma</code>. This is the right way to add items to your dictionary.</p>
","2024-01-27 21:41:38","1","Answer"
"77892725","","Cant initialize a dictionary list in c# in abstract class where dictionary is static","<p>i have this abstract class where i try to initialize dictionary with Objects
but someone it wont let me</p>
<pre><code>public abstract class ICharacterBody3DState
{
    
    public static Dictionary&lt;StateInput, ICharacterBody3DState&gt; State = new Dictionary&lt;StateInput, ICharacterBody3DState&gt;()
    {
        StateInput.sprint=new StateInput(),

    };

}
</code></pre>
<p>Each state is inheriting from this abstract class :</p>
<pre><code>public class WalkingState : ICharacterBody3DState
{
}
</code></pre>
<p>but it gives me :
CS0747: Invalid initializer member declarator.
is there any way to initilize the abstract class Dictionary with Objects ?</p>
","2024-01-27 20:33:01","-3","Question"
"77889020","77888636","","<p>If you like the one-liner solutions, then you can use the following:</p>
<pre class=""lang-py prettyprint-override""><code>{k: [v[0] + 1] + v[1:] for k, v in mydict.items()}
</code></pre>
<p><strong>A minimal test code:</strong></p>
<pre><code>mydict_1 = {&quot;abc&quot;: [1, 2, 3], &quot;def&quot;: [4, 5, 6], &quot;ghi&quot;: [7, 8, 9]}
mydict_2 = {&quot;abc&quot;: [1, 2, 3, 4, 6], &quot;def&quot;: [4, 5], &quot;ghi&quot;: [0, 8, 9]}

mydict_1 = {k: [v[0] + 1] + v[1:] for k, v in mydict_1.items()}
mydict_2 = {k: [v[0] + 1] + v[1:] for k, v in mydict_2.items()}

print(mydict_1)
print(mydict_2)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'abc': [2, 2, 3], 'def': [5, 5, 6], 'ghi': [8, 8, 9]}
{'abc': [2, 2, 3, 4, 6], 'def': [5, 5], 'ghi': [1, 8, 9]}
</code></pre>
<p>As you can see above the one-liner can handle the different size of lists, so it's a generic solution.</p>
","2024-01-26 21:12:35","1","Answer"
"77888927","77885839","","<p>You have a clear understanding of the JSON response received from the GET request.</p>
<h3>Array and Item</h3>
<p>start with <code>[</code>. it means <code>array</code> of object data.
So next character will start <code>{</code>. It means first item of object.</p>
<p><a href=""https://i.sstatic.net/uCpCk.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/uCpCk.png"" alt=""enter image description here"" /></a></p>
<h3>Hierarchy (Parent -&gt; Child -&gt; Grand Child)</h3>
<p>If you want to get &quot;A large body of salt water.&quot; definition</p>
<p>To retrieve it this syntax will get it.</p>
<pre><code>Data[0][&quot;meanings&quot;][0][&quot;definitions&quot;][0][&quot;definition&quot;]
</code></pre>
<p><a href=""https://i.sstatic.net/sZPP7.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/sZPP7.png"" alt=""enter image description here"" /></a></p>
<h4>Preparation</h4>
<p>#1 Install Chrome <a href=""https://chromewebstore.google.com/detail/gbmdgpbipfallnflgajpaliibnhdgobh"" rel=""nofollow noreferrer"">JSON Viewer</a> extension for viewing JSON data in Chrome</p>
<p>#2 VS Code extension <a href=""https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"" rel=""nofollow noreferrer"">Live Server</a> for running HTML local server</p>
<h4>Demo HTML</h4>
<p>Save as &quot;word.html&quot;</p>
<pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;Dictionary App&lt;/title&gt;
    &lt;style&gt;
        #meaning {
            margin-top: 20px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;input type=&quot;text&quot; id=&quot;wordInput&quot; placeholder=&quot;Enter a word&quot;&gt;
    &lt;button id=&quot;button&quot;&gt;Get Meaning&lt;/button&gt;
    &lt;div id=&quot;meaning&quot;&gt;&lt;/div&gt;

    &lt;script&gt;
        const button = document.querySelector(&quot;#button&quot;);
        const meaning = document.querySelector(&quot;#meaning&quot;);

        button.addEventListener(&quot;click&quot;, async () =&gt; {
            const word = document.querySelector(&quot;#wordInput&quot;).value;
            const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${word}`;

            try {
                const response = await fetch(url);
                const data = await response.json();

                displayMeanings(data);
            } catch (error) {
                meaning.innerHTML = `&lt;p&gt;Error fetching data: ${error.message}&lt;/p&gt;`;
            }
        });

        function displayMeanings(data) {
            meaning.innerHTML = '';

            data.forEach(entry =&gt; {
                entry.meanings.forEach(meaningEntry =&gt; {
                    const partOfSpeech = document.createElement('h3');
                    partOfSpeech.textContent = meaningEntry.partOfSpeech;

                    meaning.appendChild(partOfSpeech);

                    meaningEntry.definitions.forEach(def =&gt; {
                        const definition = document.createElement('p');
                        definition.textContent = `Definition: ${def.definition}`;

                        meaning.appendChild(definition);

                        if (def.example) {
                            const example = document.createElement('p');
                            example.textContent = `Example: ${def.example}`;
                            example.style.fontStyle = 'italic';

                            meaning.appendChild(example);
                        }
                    });
                });
            });
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h4>Running html</h4>
<p>By clicking &quot;Go Live&quot; from VS Code with &quot;word.html&quot;
<a href=""https://i.sstatic.net/Ub8Bd.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Ub8Bd.png"" alt=""enter image description here"" /></a></p>
<h4>Opening by Chrome</h4>
<pre><code>Enter `sea` word then press `Get Meaning` button
</code></pre>
<p><a href=""https://i.sstatic.net/lT9sQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/lT9sQ.png"" alt=""enter image description here"" /></a></p>
<h3>Relation data source, code and display</h3>
<p>A collection of name/value pairs (often realized as an object in various programming languages).
An ordered list of values (often realized as an array).</p>
<p>When you have a JSON array, you're dealing with the second structure: an ordered list of values. These values can be numbers, strings, booleans, other arrays, or objects. In JavaScript, the forEach() method is commonly used to iterate over arrays, including arrays in JSON format.</p>
<p>Here's a breakdown of how forEach() is used for data extraction from a JSON array:</p>
<p><a href=""https://i.sstatic.net/MsWkc.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/MsWkc.png"" alt=""enter image description here"" /></a></p>
","2024-01-26 20:51:09","0","Answer"
"77888737","77888636","","<p>You don't need to modify the <em>dict</em>, only the lists contained within it (its values).</p>
<pre><code>for nums in mydict.values():
    nums[0] += 1
</code></pre>
<p><code>mydict</code> is then:</p>
<pre><code>{'abc': [2, 2, 3], 'def': [5, 5, 6], 'ghi': [8, 8, 9]}
</code></pre>
<p>Lists are mutable, which means they can be modified instead of replaced (as opposed to, say, tuples).</p>
","2024-01-26 20:03:14","2","Answer"
"77888662","77888636","","<p>It's simple:</p>
<pre class=""lang-py prettyprint-override""><code>mydict = {&quot;abc&quot;: [1, 2, 3], &quot;def&quot;: [4, 5, 6], &quot;ghi&quot;: [7, 8, 9]}

for key in mydict:
    mydict[key][0] += 1

print(mydict)
</code></pre>
<p>Prints:</p>
<pre><code>{'abc': [2, 2, 3], 'def': [5, 5, 6], 'ghi': [8, 8, 9]}
</code></pre>
","2024-01-26 19:45:11","2","Answer"
"77888636","","Using a for loop on a dict to change/ update the first value using the index","<p>Let's say I have this dictionary.</p>
<pre><code>mydict = {&quot;abc&quot;:[1, 2, 3], &quot;def&quot;:[4, 5, 6], &quot;ghi&quot;:[7, 8, 9]}
</code></pre>
<p>I can't get my head around how I use a for loop in this case to update only the first number by +1. So essentially the outcome would be:</p>
<pre><code>mydict = {&quot;abc&quot;:[2, 2, 3], &quot;def&quot;:[5, 5, 6], &quot;ghi&quot;:[8, 8, 9]}
</code></pre>
<p>Searching online I cannot seem to find how to do this with an index and the +1. The only thing I find is, if the values are known how to replace them, or if the keys are known that those are written down, like this:</p>
<pre><code>mydict[&quot;abc&quot;] = [2, 2, 3]
</code></pre>
","2024-01-26 19:39:05","1","Question"
"77887394","77885853","","<p>This could be done using traditional for loop, or fancy stream with functional style.</p>
<p>But the first thing is how do we define the key, which can be as simple as</p>
<p><code>record ItemKey(int year, Month month, BigDecimal value) {}</code>
using record.</p>
<h3>For loop approach</h3>
<p>This is quite straight forward, we use a Set to keep track <code>ItemKey</code><br />
If the <code>ItemKey</code> is visited continue to next <code>Item</code>
otherwise add the <code>ItemKey</code> to the Set, and keep the <code>Item</code></p>
<h3>Functional style:</h3>
<ol>
<li>Group the Item with same ItemKey to a Map&lt;ItemKey, List</li>
<li>In each Entry&lt;ItemKey, List, we get the first Item</li>
</ol>
<p>For this problem, there is no absolute answer on which approach is better, I would recommend choosing the way you are more comfortable with. For doing simple filtering, mapping, functional approach is handy and less error prone. But for more complex problem, it is usually easier to find a solution using loop.</p>
<pre class=""lang-java prettyprint-override""><code>import static java.util.stream.Collectors.collectingAndThen;
import static java.util.stream.Collectors.groupingBy;
import static java.util.stream.Collectors.mapping;
import static java.util.stream.Collectors.toList;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.Month;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Set;
import java.util.function.Function;

public class GroupFindFirst {
    // define how your key
    record ItemKey(int year, Month month, BigDecimal value) {
    }

    public static void main(String[] args) {
        List&lt;Item&gt; items = List.of(
                new Item(LocalDateTime.parse(&quot;2024-01-10T00:20:00&quot;), new BigDecimal(&quot;105.50&quot;), &quot;I&quot;),
                new Item(LocalDateTime.parse(&quot;2024-01-15T02:30:00&quot;), new BigDecimal(&quot;105.50&quot;), &quot;A&quot;),
                new Item(LocalDateTime.parse(&quot;2024-01-16T10:45:00&quot;), new BigDecimal(&quot;110.50&quot;), &quot;A&quot;),
                new Item(LocalDateTime.parse(&quot;2024-02-01T12:20:00&quot;), new BigDecimal(&quot;111.25&quot;), &quot;I&quot;),
                new Item(LocalDateTime.parse(&quot;2024-02-04T04:35:00&quot;), new BigDecimal(&quot;111.25&quot;), &quot;A&quot;),
                new Item(LocalDateTime.parse(&quot;2024-02-25T02:15:00&quot;), new BigDecimal(&quot;112.25&quot;), &quot;A&quot;)
        );
        System.out.println(&quot;filter using for loop&quot;);
        filterUsingForLoop(items).forEach(System.out::println);
        System.out.println(&quot;filter using stream&quot;);
        filterUsingStream(items).forEach(System.out::println);
    }

    private static List&lt;Item&gt; filterUsingForLoop(List&lt;Item&gt; items) {
        Set&lt;ItemKey&gt; itemKeys = new HashSet&lt;&gt;();
        List&lt;Item&gt; filtered = new ArrayList&lt;&gt;();
        for (Item item : items) {
            // add return true when ItemKey not exist before
            if (itemKeys.add(new ItemKey(item.timestamp.getYear(), item.timestamp.getMonth(), item.value))) {
                filtered.add(item);
            }
        }
        return filtered;
    }

    private static List&lt;Item&gt; filterUsingStream(List&lt;Item&gt; items) {
        return items.stream().collect(collectingAndThen(
                groupingBy(
                        item -&gt; new ItemKey(item.timestamp.getYear(), item.timestamp.getMonth(), item.value),
                        LinkedHashMap::new, // to preserve order
                        mapping(Function.identity(), toList())),
                itemKeyToListMap -&gt; itemKeyToListMap.values().stream().map(list -&gt; list.get(0)).toList()
        ));
    }

    public static class Item {
        public Item(LocalDateTime timestamp, BigDecimal value, String code) {
            this.timestamp = timestamp;
            this.value = value;
            this.code = code;
        }

        @Override
        public String toString() {
            return &quot;Item{&quot; +
                    &quot;timestamp=&quot; + timestamp +
                    &quot;, value=&quot; + value +
                    &quot;, code='&quot; + code + '\'' +
                    '}';
        }

        private LocalDateTime timestamp;
        private BigDecimal value;
        private String code;
    }

}
</code></pre>
","2024-01-26 15:43:19","0","Answer"
"77887276","77887118","","<blockquote>
<p>Is there a faster way to write the above?</p>
</blockquote>
<p>Possibly, but finicky, and perhaps just not really worth it.</p>
<p>The underlying problem is likely:</p>
<blockquote>
<p>dict of dicts. the outer dict is probably around ~5000 keys</p>
</blockquote>
<p>The resulting (comprehension) dict grows rapidly, and every so often, Python needs to allocate new memory (depending also on the size of the 5000 values); possibly also shuffling the old data to its new memory location. If you can find a way to preallocate the memory beforehand, that will be faster. But I've no idea how to do that, and that's not really the intention when using Python (memory allocation should be invisible to a user/programmer).</p>
<p>The case to optimise a dict of a dict with 5000 keys (and then an inner dict), suggests it might be better to use a different data type altogether. Consider using NumPy (recarrays or perhaps just ordinary arrays) or Pandas. With Pandas, multi-index might be useful with your nested dict: the multi-index would consists of the several (3, afaict) layers of keys. You can then calculate the overall size beforehand, and allocate the necessary memory in one go, after which you start assigning values into the array or dataframe/series. Altogether, that will faster than what you're currently doing.</p>
","2024-01-26 15:25:47","1","Answer"
"77887156","77885853","","<ol>
<li>Create a [Java] <code>record</code> that contains a <code>LocalDateTime</code>, a <code>BigDecimal</code> and a <code>String</code>.</li>
<li>Override method <code>equals</code> in the <code>record</code>.</li>
<li>Override method <code>hashCode</code> in the <code>record</code>.</li>
<li>Create a <code>List</code> of the <code>record</code>s.</li>
<li>Stream the <code>List</code> and collect to a <code>LinkedHashSet</code> as it will remove duplicates (determined according to the overridden <code>equals</code> and <code>hashCode</code> methods) and maintain order of addition of <code>record</code>s.</li>
</ol>
<pre class=""lang-java prettyprint-override""><code>import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.Month;
import java.time.YearMonth;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.stream.Collectors;

public class MyClass {
    public static void main(String args[]) {
        List&lt;TsValCod&gt; list = new ArrayList&lt;&gt;();
        list.add(new TsValCod(LocalDateTime.of(2024, 1, 10, 0, 20, 0),  new BigDecimal(105.50), &quot;I&quot;));
        list.add(new TsValCod(LocalDateTime.of(2024, 1, 15, 2, 30, 0), new BigDecimal(105.50), &quot;A&quot;));
        list.add(new TsValCod(LocalDateTime.of(2024, 1, 16, 10, 45, 0), new BigDecimal(110.50), &quot;A&quot;));
        list.add(new TsValCod(LocalDateTime.of(2024, 2, 1, 12, 20, 0), new BigDecimal(111.25), &quot;I&quot;));
        list.add(new TsValCod(LocalDateTime.of(2024, 2, 4, 4, 35, 0), new BigDecimal(111.25), &quot;A&quot;));
        list.add(new TsValCod(LocalDateTime.of(2024, 2, 25, 2, 15, 0), new BigDecimal(112.25), &quot;A&quot;));
        Object temp = list.stream()
                          .collect(Collectors.toCollection(() -&gt; new LinkedHashSet()));
        Collection&lt;?&gt; set = (Collection&lt;?&gt;) temp;
        set.stream()
           .forEach(System.out::println);
    }
}

record TsValCod(LocalDateTime ts, BigDecimal val, String code) {
    public boolean equals(Object obj) {
        boolean equal = this == obj;
        if (!equal) {
            if (obj != null  &amp;&amp;  getClass().equals(obj.getClass())) {
                TsValCod other = (TsValCod) obj;
                LocalDateTime meTs = ts();
                LocalDateTime otherTs = other.ts();
                BigDecimal meVal = val();
                BigDecimal otherVal = other.val();
                if (meTs == null) {
                    if (otherTs == null) {
                        equal = true;
                    }
                    else {
                        equal = false;
                    }
                }
                else {
                    if (otherTs == null) {
                        equal = false;
                    }
                    else {
                        int meYear = meTs.getYear();
                        Month meMonth = meTs.getMonth();
                        int otherYear = otherTs.getYear();
                        Month otherMonth = otherTs.getMonth();
                        equal = meYear == otherYear  &amp;&amp;  meMonth.equals(otherMonth);
                    }
                }
                if (equal) {
                    if (meVal == null) {
                        if (otherVal == null) {
                            equal = true;
                        }
                        else {
                            equal = false;
                        }
                    }
                    else {
                        if (otherVal == null) {
                            equal = false;
                        }
                        else {
                            equal = meVal.equals(otherVal);
                        }
                    }
                }
            }
        }
        return equal;
    }

    @Override
    public int hashCode() {
        int year = ts.getYear();
        int month = ts.getMonthValue();
        YearMonth ym = YearMonth.of(year, month);
        return ym.hashCode() + val.hashCode();
    }
}
</code></pre>
<p>Output when running above code:<br />
(Override <code>toString</code> method of <code>TsValCod</code> to customize the output.)</p>
<pre class=""lang-none prettyprint-override""><code>TsValCod[ts=2024-01-10T00:20, val=105.5, code=I]
TsValCod[ts=2024-01-16T10:45, val=110.5, code=A]
TsValCod[ts=2024-02-01T12:20, val=111.25, code=I]
TsValCod[ts=2024-02-25T02:15, val=112.25, code=A]
</code></pre>
","2024-01-26 15:07:08","0","Answer"
"77887118","","Dict comprehension taking much longer than expected","<p>I'm profiling my simulation code, and I noticed a dict comprehension was taking quite a while.</p>
<p>The dict comprehension looks like this:</p>
<pre><code>
return {
  n : self.method(d) for n, d in zip(ns, ds)
}
</code></pre>
<p>The <code>self.method</code> took about 40% of the call, but this is expected because this method is expensive (it queries a database), and the other 60% appears to be from the overhead of the dict comprehension call according to `cProfile`.</p>
<p>Is there a faster way to write the above?</p>
<p>I was expecting dict comprehension to take a negligible amount of time.</p>
","2024-01-26 15:01:58","1","Question"
"77886938","77885853","","<p>Since stability is a requirement (order of list has to be preserved), the use of list.stream().distinct() is not an option.</p>
<p>In case your <code>equals</code> method checks exactly for the three columns mentioned, you could do something like:</p>
<pre><code>ArrayList result = new ArrayList();
original.stream().forEach(i -&gt; if (!result.contains(i)) result.add(i));
</code></pre>
<p>If the equals method is not suitable, all the items in result list can by checked by comparing the three values.</p>
<pre><code>ArrayList result = new ArrayList();
original.stream().forEach(i -&gt; {
   for (YourClass j : result) {
      if (&lt;all three values are equal&gt;) return;
   }
   result.add(i);
});
</code></pre>
<p>Note: If the list is huge and computation time (this code is in O(n^2)) is a problem, you could use the three column values to create a new value and put it to a HashSet. You would then call the contains on the HashSet and add the value i to the resultSet and the HashSet.</p>
","2024-01-26 14:28:11","1","Answer"
"77885853","","Needing to filter a list by a predicate","<p>I have a list containing several items, each containing a timestamp, a BigInt value and an alphabetic code, as follows:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">Timestamp</th>
<th style=""text-align: left;"">Value</th>
<th style=""text-align: left;"">Code</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">2024-01-10 00:20:00</td>
<td style=""text-align: left;"">105.50</td>
<td style=""text-align: left;"">I</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-01-15 02:30:00</td>
<td style=""text-align: left;"">105.50</td>
<td style=""text-align: left;"">A</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-01-16 10:45:00</td>
<td style=""text-align: left;"">110.50</td>
<td style=""text-align: left;"">A</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-02-01 12:20:00</td>
<td style=""text-align: left;"">111.25</td>
<td style=""text-align: left;"">I</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-02-04 04:35:00</td>
<td style=""text-align: left;"">111.25</td>
<td style=""text-align: left;"">A</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-02-25 02:15:00</td>
<td style=""text-align: left;"">112.25</td>
<td style=""text-align: left;"">A</td>
</tr>
</tbody>
</table>
</div>
<p>I need to select all records where the year, month and value are the same; would be the duplicate occurrences. Of these duplicates, I wanted to keep only the first one, and eliminate the others. The <code>Code</code> value can be &quot;A&quot; or &quot;I&quot;, and it is indifferent. Non-duplicate records must remain in the same order as the original list.</p>
<p>A example of filtered list:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">Timestamp</th>
<th style=""text-align: left;"">Value</th>
<th style=""text-align: left;"">Code</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">2024-01-10 00:20:00</td>
<td style=""text-align: left;"">105.50</td>
<td style=""text-align: left;"">I</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-01-16 10:45:00</td>
<td style=""text-align: left;"">110.50</td>
<td style=""text-align: left;"">A</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-02-01 12:20:00</td>
<td style=""text-align: left;"">111.25</td>
<td style=""text-align: left;"">I</td>
</tr>
<tr>
<td style=""text-align: left;"">2024-02-25 02:15:00</td>
<td style=""text-align: left;"">112.25</td>
<td style=""text-align: left;"">A</td>
</tr>
</tbody>
</table>
</div>
<p>How can I do this?</p>
<p>I have tryed .filter(), and .map(), without satisfactory results.</p>
","2024-01-26 11:21:39","1","Question"
"77885839","","How to get value from input element and use it dynamically in async fetch function?","<p>Here in the URL the word should be dynamic, but when I get the value from the input tag with <code>id=search</code>. It returns 404 error but the API link is correct. Can anyone help me to achieve my task in fetch API.</p>
<pre><code>const meaning = document.querySelector(&quot;#meaning&quot;);
const button = document.querySelector(&quot;#button&quot;);

button.addEventListener('click', () =&gt; {
window.location.href = &quot;/&quot;
})

async function getWord() {
    const search = document.querySelector(&quot;#search&quot;).value;
    const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${search}`
try {
    const getUrl = await fetch(url, {
        method: &quot;GET&quot;,
    });
    // console.log(getUrl);
    const jsonUrl = await getUrl.json();
    console.log(jsonUrl);
    return jsonUrl
} catch (error) {
    alert(&quot;Please enter the correct word&quot;)
}
}
 
const word = await getWord();
console.log(word);

</code></pre>
<p>I am unable to get a meaning of the word that I have been searching.</p>
","2024-01-26 11:18:59","0","Question"
"77884653","77884408","","<p>You can try this:</p>
<p>I must say it is not a good practice since panic \ error due to wrong types are not validated. I would consider another way to do so.</p>
<pre><code>package main

import &quot;fmt&quot;

type GeneralFunc func(args ...interface{})

func main() {
    // Create a map of functions with the type GeneralFunc
    functionsMap := map[string]GeneralFunc{
        &quot;MyPrintf&quot;: func(args ...interface{}) { fmt.Println(args[0].(string)) },
        &quot;MyAdd&quot;:    func(args ...interface{}) { fmt.Println(args[0].(int), args[1].(int)) },
    }

    // Use the functions from the map
    functionsMap[&quot;MyPrintf&quot;](&quot;Hello World&quot;)
    functionsMap[&quot;MyAdd&quot;](2, 3)
}
</code></pre>
","2024-01-26 07:18:34","3","Answer"
"77884408","","Multiple function types in a map, Golang","<p>I hope to connect user input to functions. The user inputs are string. For example,
<code>&quot;func_name=MyPrintf&amp;s1=Hello, world\!&quot;</code>
or
<code>&quot;func_name=MyAdd&amp;i1=1&amp;i2=2&quot;</code></p>
<p>Each function's code is,</p>
<pre><code>func MyPrintf(s1 string) {
    fmt.Println(s1)
}

func MyAdd(i1, i2 int) {
    fmt.Println(i1, i2)
}
</code></pre>
<p>I want a map like below,</p>
<pre><code>type Myfunc func(string) | func(int, int)   // &lt;- Of course, it's wrong code, just I hope like this.

myMap := make(map[string]Myfunc)

myMap[&quot;MyPrintf&quot;] = MyPrintf
myMap[&quot;MyAdd&quot;] = MyAdd
</code></pre>
<p>myMap is possible to call function by func_name string from user input.</p>
<p><code>myMap[func_name](s1)</code>
Output: Hello, world!
<code>myMap[func_name](i1, i2)</code>
Output: 3</p>
<p>Is it possible?
Maybe It's possible by using 'eval' I think, but I heard using 'eval' is not good. So, I thought using function pointer, however there's no function pointer in Golang.</p>
<p>I tried some generic programming for Golang,</p>
<pre><code>type Myfunc interface {
    func(string) | func(int, int)
}

myMap := make(map[string]Myfunc)
</code></pre>
<p>Output: error occurred: cannot use type Myfunc outside a type constraint: interface contains type constraints</p>
<p>another try,</p>
<pre><code>myMap := make(map[string]interface{})

myMap[&quot;MyPrintf&quot;] = interface{}(MyPrintf)
myMap[&quot;MyPrintf&quot;].(func(string))(&quot;Hello, world!&quot;)
</code></pre>
<p>Output: Hello, world!</p>
<pre><code>myMap[&quot;MyAdd&quot;] = interface{}(MyAdd)
myMap[&quot;MyAdd&quot;].(func(int,int))(1, 2)
</code></pre>
<p>Output: 3</p>
<p>It works but must specify right func type, it's not comfortable. I think this way is not proper to my scenario. Please give me help.
I'm sorry for my bad English writing.</p>
","2024-01-26 06:00:31","1","Question"
"77882934","77880933","","<p>The polar module certainly is interesting.</p>
<p>The NC-file is now being processed into a SQlite db, to make the data better and faster approachable. NC is not specifically build for speed.</p>
<p>I'll see where I'll take it from there.</p>
<p>Thanks for all the help.</p>
","2024-01-25 21:04:43","0","Answer"
"77881441","77880933","","<p>Depending on your use-case I can recommend many things.</p>
<p>A DB is the obvious fix here as others have recommended.</p>
<p>But since things are relatively vague I'm going to assume:</p>
<ul>
<li>You don't want to use a Database</li>
<li>Mainly struggle with OOM issues</li>
<li>Care mostly about speed</li>
</ul>
<p>Have you tried using <a href=""https://github.com/pola-rs/polars/tree/main"" rel=""nofollow noreferrer""><code>polars</code></a> with the <code>bigidx</code> feature flag?</p>
<p>Just <code>pip install polars-u64-idx</code> and put all your data in a polars dataframe.
Using the &quot;bigger than memory&quot; feature, you should keep very good speed while avoiding any OOM issues.</p>
<p>To start with, you'd have to have your document in a format that can easily be read by polars. CSV, JSON, etc...</p>
<p>Then assuming the following dataframe in Polars:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th>l1</th>
<th>l2</th>
<th>z</th>
<th>m</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.234598</td>
<td>1.111111</td>
<td>6.123789</td>
<td>1.234598</td>
</tr>
<tr>
<td>5.895478</td>
<td>2.222222</td>
<td>9.568712</td>
<td>1.234598</td>
</tr>
<tr>
<td>8.365968</td>
<td>3.333333</td>
<td>3.333333</td>
<td>5.895478</td>
</tr>
</tbody>
</table>
</div>
<p>You'd be able to make a <code>giveme</code> function like so:</p>
<pre class=""lang-py prettyprint-override""><code>import polars as pl

def giveme(df, l1, l2):
    data = df.filter(
        (pl.col(&quot;l1&quot;) == l1)
        &amp; (pl.col(&quot;l2&quot;) == l2)
    )
    return data[&quot;z&quot;].item(), data[&quot;m&quot;].item()
</code></pre>
<p>Assuming there is always one and only one answer.
If not you'll have to edit the function or deal with those cases separately</p>
","2024-01-25 16:17:23","1","Answer"
"77880972","77880901","","<p>The trick is here is Forms are classes, which have a defined initialization order where fields (like <code>MAP</code>) are initialized <em>before</em> the constructor runs. This makes sense. If you have a complex constructor, you would want and expect to be able to use defined field values there.</p>
<p>However, form controls are initialized in the <code>InitializeComponent()</code> method called at the end of the constructor. Therefore, at the time the <code>MAP</code> variable is initialized, the <code>Foo</code> and <code>Bar</code> member variables exist, but they are not yet initialized to refer to the actual control objects they are intended to represent.</p>
<p>To fix this, you need to change the code so items are added to the <code>MAP</code> collection <em>after</em> the <code>InitializeComponent()</code> method runs.</p>
","2024-01-25 15:03:35","4","Answer"
"77880933","","Python dict over 3 billion records to store","<p>I have a dataset in a document (7.5 GB), ordered in arrays of 43200 x 86400 (meaningless) keys (over 3 billion) containing four floats (l1, l2, z, m). These floats are rounded to 6 decimal digits.</p>
<p>You can approach the data like:</p>
<pre><code>stuff(y, x) 
&gt;&gt; (l1, l2, z, m) 
</code></pre>
<p>Things are simplified here, but this is how it works. Y and X are zeo-based and, as stated, meaningless.</p>
<p>What I need to do is store these data the other way round, where l1 and l2 are meaningfull keys:</p>
<pre><code>betterstuff(l1, l2)
&gt;&gt; (z, m)
</code></pre>
<p>Conversion itself is not the problem (although it might take a few days). The matter is: how do I store these data, so that they are approchable in the fastest way.</p>
<p>I would like to be able to approach them with a call like:</p>
<pre><code>z, m = giveme(l1, l2)
</code></pre>
<p>I considered a <strong>pickle</strong>, but the isue is that this always loads completely in the memory.</p>
<p>I considered <strong>shelve</strong> (build upon pickle) but that can only handle a single key and we have double keys here.</p>
<p>How else? Some db or so?</p>
<p>Thanks for the help.</p>
","2024-01-25 14:57:28","0","Question"
"77880901","","Member variable no initializing","<p>I have started a new job and I need to write in vb.net</p>
<p>For the code I am writing, I need to map from an integer to a panel. I would like this mapping to have scope for the entire file, not just a single subroutine, so I have tried declaring it as such:</p>
<pre><code>Private ReadOnly MAP = New Dictionary(Of Integer, Panel) From {
    {0, Nothing},
    {1, Foo},
    {2, Bar},
    ...
}
</code></pre>
<p>Then, I have a subroutine something like this (simplified)</p>
<pre><code>Private Sub Thing(ID As Integer)
    If MAP.Item(ID) IsNot Nothing
        MAP.Item(ID).Visible = True
    End If
End Sub
</code></pre>
<p>and let say I call <code>Thing(1)</code>, that should make <code>Foo</code> visible, but instead nothing happens. If I <code>Dim MAP</code> <em>inside</em> of <code>Thing</code>, it works as expected. I obviously don't want to be constructing my map everytime I call the sub though, as that kinda defeats the purpose of a map by adding the overhead of constructing it at every use (although it is more readable).</p>
<p>Basically what I'm wondering is why the construction of <code>MAP</code> doesn't remain when I use it? Shouldn't all member variables be constructed before we begin executing any of the methods of a class, if declared in this way?</p>
","2024-01-25 14:53:35","3","Question"
"77877237","77876326","","<p>As of Julia 1.9, <code>sizehint!</code> shrinks dictionaries (see <a href=""https://github.com/JuliaLang/julia/blob/8e630552924eac54c809aa7bc30871c7df1582d3/base/dict.jl#L219"" rel=""nofollow noreferrer"">https://github.com/JuliaLang/julia/blob/8e630552924eac54c809aa7bc30871c7df1582d3/base/dict.jl#L219</a>).</p>
","2024-01-25 02:25:19","1","Answer"
"77876326","","Shrinking dictionaries in Julia","<p>I'm interested in using dictionaries in an application where the contents of the dictionaries are modified very frequently, i.e. <code>key =&gt; value</code> pairs are created, deleted, and moved from one dictionary to another. An issue I see is that Julia dictionaries don't shrink, and am afraid of the memory usage getting very bad if these dictionaries become large.</p>
<p>Are there better datatypes, or packages, that I could look towards in this scenario? A dictionary like datatype that is better suited to dynamic modification?</p>
<p>I've seen that <code>sizehint!</code> now supports shrinking for arrays, but I don't believe the same is true for dicts? Perhaps a custom datatype based on arrays with the functionality I am after is a way to go...?</p>
<p><strong>Edit</strong>:</p>
<p>The application is to model dynamic, weighted, multi-layer graphs. I'm interested in modelling multi-layer graphs with hundreds of nodes and edges, where the connectivity and weights of each layer may rapidly change. Changes on one layer lead to changes on other layers (movement of data between layers).</p>
","2024-01-24 21:29:07","1","Question"
"77869648","77866436","","<p>Here is modified version that compiles with <a href=""/questions/tagged/numba"" class=""post-tag"" title=""show questions tagged &#39;numba&#39;"" aria-label=""show questions tagged &#39;numba&#39;"" rel=""tag"" aria-labelledby=""tag-numba-tooltip-container"">numba</a> (it uses <code>nb.types.Tuple</code> and <code>nb.typed.Dict</code>):</p>
<pre class=""lang-py prettyprint-override""><code>import numba as nb
import numpy as np
import scipy as sp

dict_key_type = nb.types.Tuple((nb.types.uint16, nb.types.uint16))
dict_value_type = nb.types.int32


@nb.njit(parallel=True)
def process_uids(uid, data, XYtoBCID):
    indices = np.where(data == uid)
    uid_row = np.zeros(data.size, dtype=nb.types.uint8)
    hitCnt, misCnt = 0, 0
    for idx in nb.prange(indices[0].size):
        t = (np.uint16(indices[0][idx]), np.uint16(indices[1][idx]))
        if t in XYtoBCID:
            bcid = XYtoBCID[t]
            uid_row[bcid - 1] = True
            hitCnt += 1
        else:
            misCnt += 1
    return hitCnt, misCnt, uid_row



def work_numba(data, XYtoBCID):
    values, counts = np.unique(data, return_counts=True)
    mtxCellBarcode = sp.sparse.lil_matrix((values[-1], data.size), dtype=bool)
    hitCnt, misCnt = 0, 0
    for uid in values[1:]:
        hit, miss, uid_row = process_uids(uid, data, XYtoBCID)
        hitCnt += hit
        misCnt += miss
        mtxCellBarcode[uid - 1, :] = uid_row
    return hitCnt, misCnt


def main():
    np.random.seed(42)
    data = np.random.choice([0, 1, 2, 3], size=(20, 20))
    random_values = np.random.choice(
        np.arange(1, 301), size=(20, 20), replace=True
    ).astype(np.int32)
    indices_to_replace = np.random.choice(range(20 * 20), size=100, replace=False)
    random_values_flat = random_values.flatten()
    random_values_flat[indices_to_replace] = 0
    random_values = random_values_flat.reshape((20, 20))

    XYtoBCID = nb.typed.Dict.empty(dict_key_type, dict_value_type)

    for idx, value in enumerate(random_values.flatten(), start=1):
        posX, posY = np.unravel_index(idx - 1, random_values.shape)
        if value &gt; 0:
            XYtoBCID[(np.uint16(posX), np.uint16(posY))] = value

    hitCnt, misCnt = work_numba(data, XYtoBCID)
    print(f&quot;Hit:{hitCnt}, Miss:{misCnt}&quot;)


if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
<p>Running this code prints:</p>
<pre><code>Hit:224, Miss:81
</code></pre>
","2024-01-23 22:39:11","0","Answer"
"77866436","","How to use numba with readonly dict as input?","<p>I tried <code>typed.Dict.empty(types.uint8[:], types.int32)</code>, but it is not working.</p>
<pre><code>import struct
import scipy as sp
import numpy as np
import numba as nb

#@nb.njit(parallel=True)
def process_uids(uid, data, XYtoBCID ):
    indices = np.where(data == uid)
    uid_row = np.zeros(data.size, dtype=bool)
    hitCnt, misCnt = 0, 0
    for idx in nb.prange(indices[0].size):
        ptX, ptY = indices[0][idx], indices[1][idx]
        #ptStr = struct.pack(&quot;@HH&quot;, ptX, ptY)
        ptS = np.array([ptX, ptY], dtype=np.uint16)
        ptS.setflags(write=0, align=0)
        ptStr = ptS.tobytes()
        if ptStr in XYtoBCID:
            bcid = XYtoBCID[ptStr]
            uid_row[bcid-1] = True
            hitCnt += 1
        else:
            misCnt += 1
    return hitCnt, misCnt, uid_row

def main():
    np.random.seed(42)
    data = np.random.choice([0, 1, 2, 3], size=(20, 20))
    print(data)
    random_values = np.random.choice(np.arange(1, 301), size=(20, 20), replace=True)
    indices_to_replace = np.random.choice(range(20 * 20), size=100, replace=False)
    random_values_flat = random_values.flatten()
    random_values_flat[indices_to_replace] = 0
    random_values = random_values_flat.reshape((20, 20))
    XYtoBCID = {}
    #XYtoBCID = nb.typed.Dict.empty(nb.types.uint8[:], nb.types.int32)
    for idx, value in enumerate(random_values.flatten(), start=1):
        posX, posY = np.unravel_index(idx-1, random_values.shape)
        #posStr = struct.pack(&quot;@HH&quot;, posX, posY)
        posStr = np.array([posX, posY], dtype=np.uint16)
        if value &gt; 0:
            XYtoBCID[posStr.tobytes()] = value
    #print(XYtoBCID)
    values, counts = np.unique(data, return_counts=True)
    mtxCellBarcode = sp.sparse.lil_matrix((values[-1], data.size), dtype=bool)
    hitCnt,misCnt = 0,0
    for uid in values[1:]:
        hit, miss, uid_row = process_uids(uid, data, XYtoBCID)
        hitCnt += hit
        misCnt += miss
        mtxCellBarcode[uid-1, :] = uid_row
    print(f'Hit:{hitCnt}, Miss:{misCnt}.')

if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
","2024-01-23 12:49:26","1","Question"
"77863189","77862963","","<p>I can't compile or test this, but it should give you some idea on how to handle compiling the &quot;change&quot; and &quot;delete&quot; data.</p>
<pre><code>Sub tester()
    Dim ubR As Long, ubC As Long, changes, deletes
    
    '...
    ubR = UBound(ProductionArray, 1)
    ubC = UBound(ProductionArray, 2)
    
    'resize output arrays to max possible required size
    ReDim changes(1 To ubR, 1 To ubC)
    changeNum = 0
    ReDim deletes(1 To ubR, 1 To ubC)
    deleteNum = 0
    
    
    For i = 1 To ubR '1 indicates upper-bound of rows
        
        'should realy use a separator here
        Production_Item = Join(Array(Production_Array(i, ProductionID_1), _
                                     Production_Array(i, ProductionID_2), _
                                     Production_Array(i, ProductionID_3)), &quot;~~&quot;)
        
        If Not Development_Dictionary.Exists(Production_Item) Then 'If Production Item not found in Development
            CopyRow Production_Array, i, deletes, deleteNum 'add to deletes array
        Else
            ItemRow = Development_Dictionary(Production_Item)
            'Find Changed Records
            For x = 1 To Last_Column_Production 'Checking all fields for changes - Only for records found in each data set
                If Production_Array(i, x) &lt;&gt; Development_Array(ItemRow, x) Then
                    CopyRow Production_Array, i, changes, changeNum
                    Exit For 'stop checking column values
                End If
            Next x
        End If
    Next i
    
    'put deletes on worksheet
    If deleteNum &gt; 0 Then
        With Delete_Sheet.Cells(Delete_Sheet.Range(&quot;A1&quot;).CurrentRegion.rows.count + 1, &quot;A&quot;)
            .Resize(deleteNum, UBound(deletes, 2)).Value = deletes
        End With
    End If
    
    'same for changes...
    
End Sub

'Given two 2D 1-based arrays, copy row `srcRow` from `arrSrc` over to `arrDest`
'  Handles incrementing `destRow` on each call; hence explicit `ByRef`
Sub CopyRow(arrSource, srcRow As Long, arrDest, ByRef destRow As Long)
    Dim col As Long
    destRow = destRow + 1 'increment destination row to copy to
    For col = 1 To UBound(arrSource, 2)
        arrDest(destRow, col) = arrSource(srcRow, col)
    Next col
End Sub
</code></pre>
","2024-01-22 22:44:04","0","Answer"
"77862963","","How can I eliminate printing rows to an Excel sheet, and instead add the desired records (Rows) to an array (VBA)?","<p>I have code that does the following:</p>
<ul>
<li>Creates a dictionary for items in Production (<strong>Production_Dictionary</strong>) and Development (<strong>Development_Dictionary</strong>)</li>
<li>Loops over a production dataset that has been assigned to an array (<strong>Production_Array</strong>)</li>
<li>Using a key (<strong>Production Item</strong>), it checks if the development dataset contains the production record</li>
<li>If not, it prints the record (row) on a sheet for deleted items (<strong>Delete_Sheet</strong>)</li>
<li>If so, it checks if any of the columns (fields) have changed</li>
<li>If a field has changed, it will print the record (row) on a sheet for changed items (Change_Sheet) and highlight the changed fields</li>
</ul>
<p><strong>Here is the code, which functions as expected, but is slow:</strong></p>
<pre><code>
For i = 1 To UBound(Production_Array, 1) '1 indicates upper-bound of rows
    Production_Item = Production_Array(i, ProductionID_1) &amp; Production_Array(i, ProductionID_2) &amp; Production_Array(i, ProductionID_3)
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Find Deleted Records
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    If Not Development_Dictionary.exists(Production_Item) Then 'If Production Item not found in Development
        Delete_Row = Delete_Sheet.Range(&quot;A1&quot;).CurrentRegion.Rows.Count + 1
        Set Delete_Record = Delete_Sheet.Range(Delete_Sheet.Cells(Delete_Row, 1), Delete_Sheet.Cells(Delete_Row, Last_Column_Development))
        Delete_Record = Application.Index(Production_Array, i)
        GoTo LineNext
    End If
    
    ItemRow = Development_Dictionary(Production_Item)
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    'Find Changed Records
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    For x = 1 To Last_Column_Production 'Checking all fields for changes - Only for records found in each data set
        If Production_Array(i, x) &lt;&gt; Development_Array(ItemRow, x) Then

            If Not Pasted_Record Then
                Change_Row = Change_Sheet.Range(&quot;A1&quot;).CurrentRegion.Rows.Count + 1
                Set Change_Record = Change_Sheet.Range(Change_Sheet.Cells(Change_Row, 1), Change_Sheet.Cells(Change_Row, Last_Column_Production))
                Change_Record = Application.Index(Production_Array, i) 'Production_Record.Value
                Pasted_Record = True
            End If

            Change_Sheet.Cells(Change_Row, x).Interior.Color = vbRed
        End If
    Next x

Pasted_Record = False
LineNext:
Next i
</code></pre>
<p>I have tried everything I can find on stack overflow to avoid constantly referencing an Excel sheet for each changed/deleted record. My hope was to assign all changed/deleted records to a separate array, and then paste the array on the Excel sheet after I have finished with each dataset.</p>
<p>Application.Index methodologies have been great for returning a row, but not for adding that row to another array with unknown size. I could not get around this issue with Redim Preserve statements, though there was some type of transposing methodology (for application.index) that looked promising, but was too confusing to understand.</p>
","2024-01-22 21:46:45","0","Question"
"77861714","77861644","","<pre><code>def set_value(dictionary, key, value):
    if value is None:
        raise ValueError(&quot;None as values is not allowed&quot;)
    dictionary[key] = value


d = dict()
set_value(d, &quot;val1&quot;, None)
</code></pre>
<p>You can do this using the function, and this is the easiest way out.</p>
<p>And if you are deadest on overloading <code>__setitem__</code> you can use</p>
<blockquote>
<p>pyrsistent</p>
</blockquote>
<p>example :</p>
<pre><code>from pyrsistent import pmap

def non_rej_dict():
    def setitem(self, key, value):
        if value is None:
            raise ValueError(&quot;None as values is not allowed&quot;)
        return super(type(self), self).set(key, value)

    return pmap().evolver().extend({ '__setitem__': setitem }).persistent()


d = non_rej_dict()
d[&quot;val1&quot;] = None
</code></pre>
","2024-01-22 17:41:19","0","Answer"
"77861644","","raise ValueError if None as value in dict __setitem__","<p>Is it possible to raise a ValueError if a new value in dict is a None? Is it possible without creating a new class based on <code>dict</code> and overloading <code>__setitem__</code> or checking each value before setting?</p>
<pre class=""lang-py prettyprint-override""><code>d = dict()
d[&quot;va1&quot;] = None  # should to raise ValueError
</code></pre>
<p>Is there any out of the box <em>no Nones dict</em>?</p>
","2024-01-22 17:29:28","0","Question"
"77854790","77854766","","<p>Two million rows is an immediate tip off.</p>
<p>Use a relational database already! Postgres would be a good choice, but even the very simple sqlite that comes standard with pythons built-in libraries would be a big improvement on what you’re doing.</p>
<p>The magic of a DB table which  is indexed is you can often access just the subset of data that you need, while leaving most rows untouched on disk. This is quite different from being forced to load two  million rows before you can even begin to do anything with your data.</p>
<p>Pandas has good support for writing a dataframe to a table and for reading table rows into a new data frame.</p>
","2024-01-21 12:29:50","0","Answer"
"77854766","","Parse dict column and add new columns to dataframe","<p>The pandas df is created by reading CSV file with more than 100+ columns and 2+ mil rows which looks similar to</p>
<pre><code>project_code,dict_data
A001,{&quot;a&quot;: &quot;1&quot;, &quot;b&quot;: &quot;2&quot;, &quot;c&quot;: &quot;3&quot;}
B001,{&quot;a&quot;: &quot;4&quot;, &quot;b&quot;: &quot;5&quot;, &quot;c&quot;: &quot;6&quot;}
C001,{&quot;b&quot;: &quot;7&quot;, &quot;c&quot;: &quot;8&quot;}
D001,{&quot;c&quot;: &quot;9&quot;}
E001,{&quot;a&quot;: &quot;10&quot;, &quot;c&quot;: &quot;11&quot;}
</code></pre>
<p>Using for loop &amp; if conditions, the dict column key value data is parsed and the df looks as follow. And at times new keys get added and I have to update my if conditions to parse those keys</p>
<pre><code>project_code   dict_data                         a     b     c    d
A001           {&quot;a&quot;: &quot;1&quot;, &quot;b&quot;: &quot;2&quot;, &quot;c&quot;: &quot;3&quot;}    &quot;1&quot;   &quot;2&quot;   &quot;3&quot;  &quot;&quot;
B001           {&quot;a&quot;: &quot;4&quot;, &quot;b&quot;: &quot;5&quot;, &quot;d&quot;: &quot;6&quot;}    &quot;4&quot;   &quot;5&quot;   &quot;&quot;   &quot;6&quot;
C001           {&quot;b&quot;: &quot;7&quot;, &quot;c&quot;: &quot;8&quot;}              &quot;&quot;    &quot;7&quot;   &quot;8&quot;  &quot;&quot;
D001           {&quot;d&quot;: &quot;9&quot;}                        &quot;&quot;    &quot;&quot;    &quot;&quot;   &quot;9&quot;
E001           {&quot;a&quot;: &quot;10&quot;, &quot;c&quot;: &quot;11&quot;}            &quot;10&quot;  &quot;&quot;    &quot;11&quot; &quot;&quot;
</code></pre>
<p>The code takes hours to run and is not the best or efficient way for processing dict data column. Would appreciate if someone could guide or suggest me the better &amp; efficient way.</p>
","2024-01-21 12:22:28","0","Question"
"77854355","77854081","","<p>You can use regex to parse the text, e.g.:</p>
<pre class=""lang-py prettyprint-override""><code>import re

log_text = &quot;&quot;&quot;\
    Mon Jan 15 22:16:46 PST 2024  /vol/vol1  Sorting file  records (120 entries)
    Mon Jan 15 22:16:46 PST 2024  /vol/vol2  Sorting file  records (120 entries)
    Mon Jan 15 22:16:46 PST 2024 /vol/vol1  Sorting text records (120 entries)
    Mon Jan 15 22:16:46 PST 2024  /vol/vol2  Sorting file  records (120 entries)
    Mon Jan 15 22:16:47 PST 2024  /vol/vol1 Sort (0 entries)
    Mon Jan 15 22:16:47 PST 2024 /vol/vol1  Pass (0 entries)
    Mon Jan 15 22:16:47 PST 2024  /vol/vol2 Sort (0 entries)
    Mon Jan 15 22:16:47 PST 2024 /vol/vol2  Pass (0 entries)
    Mon Jan 15 22:16:47 PST 2024 /vol/vol1 ( Filtering start )
    Mon Jan 15 22:51:46 PST 2024  /vol/vol1  Sorting file  records (121 entries)
    Mon Jan 15 22:56:46 PST 2024 /vol/vol1 Sorting text records (122 entries)
    Mon Jan 15 22:56:47 PST 2024 /vol/vol2 ( Filtering start )
    Mon Jan 15 22:56:47 PST 2024  /vol/vol1 Sort (0 entries)
    Mon Jan 15 22:57:47 PST 2024 /vol/vol1 Pass (0 entries)&quot;&quot;&quot;

out = {}
for group in re.findall(
    r&quot;\( Filtering start \)$(.*?)(?=[^\n]+\( Filtering start \)$)&quot;,
    log_text,
    flags=re.S | re.M,
):
    for line, vol, k in re.findall(
        r&quot;([^\n]+(/vol/\S+)\s*(Sorting\s*\S+)[^\n]+)&quot;, group
    ):
        out.setdefault(vol, {}).setdefault(k, []).append(line.strip())

print(out)
</code></pre>
<p>Prints:</p>
<pre class=""lang-py prettyprint-override""><code>{
    &quot;/vol/vol1&quot;: {
        &quot;Sorting file&quot;: [
            &quot;Mon Jan 15 22:51:46 PST 2024  /vol/vol1  Sorting file  records (121 entries)&quot;
        ],
        &quot;Sorting text&quot;: [
            &quot;Mon Jan 15 22:56:46 PST 2024 /vol/vol1 Sorting text records (122 entries)&quot;
        ],
    }
}
</code></pre>
","2024-01-21 10:06:04","0","Answer"
"77854081","","Filter lines based on specific event and create a dictionary","<p>I have a log file which contains timestamps and events</p>
<pre><code>    Mon Jan 15 22:16:46 PST 2024  /vol/vol1  Sorting file  records (120 entries)
    Mon Jan 15 22:16:46 PST 2024  /vol/vol2  Sorting file  records (120 entries)
    Mon Jan 15 22:16:46 PST 2024 /vol/vol1  Sorting text records (120 entries)
    Mon Jan 15 22:16:46 PST 2024  /vol/vol2  Sorting file  records (120 entries)
    Mon Jan 15 22:16:47 PST 2024  /vol/vol1 Sort (0 entries)
    Mon Jan 15 22:16:47 PST 2024 /vol/vol1  Pass (0 entries)
    Mon Jan 15 22:16:47 PST 2024  /vol/vol2 Sort (0 entries)
    Mon Jan 15 22:16:47 PST 2024 /vol/vol2  Pass (0 entries)
   
    **Mon Jan 15 22:16:47 PST 2024 /vol/vol1 ( Filetering start )**
    Mon Jan 15 22:51:46 PST 2024  /vol/vol1  Sorting file  records (121 entries)
    Mon Jan 15 22:56:46 PST 2024 /vol/vol1 Sorting text records (122 entries)
   **Mon Jan 15 22:56:47 PST 2024 /vol/vol2 ( Filetering start )**
    Mon Jan 15 22:56:47 PST 2024  /vol/vol1 Sort (0 entries)
    Mon Jan 15 22:57:47 PST 2024 /vol/vol1 Pass (0 entries)
 
</code></pre>
<p>I am only interested in parsing lines and create dictionary of events with instance name and event that are after &quot;Filetering start&quot; event for each /vol/* instance.
Ex :</p>
<pre><code>For /vol/vol1:
   Mon Jan 15 22:51:46 PST 2024  /vol/vol1  Sorting file  records (121 entries)
   Mon Jan 15 22:56:46 PST 2024 /vol/vol1 Sorting text records (122 entries)

For /vol/vol2:
   No lines as after filetering start there arent any events logged.
</code></pre>
<p>I tried to open file and create dictionary events by</p>
<pre><code> r = {
        'vol':[],
        'Sorting file':[],
    }
    with open(file) as fh:
        for line in fh:
            if &quot;Sorting file records&quot; in line:
                line = line.split();
                r['Sorting File'].append(line[3])
                for i in line:
                    if &quot;/vol/&quot; in i:
                        r['vol'].append(i)   
</code></pre>
<p>But the dictionary seems to take events before the filtering start as well , and I am not sure how we can delete all such entries. Any suggestions please ?</p>
","2024-01-21 08:27:02","2","Question"
"77852952","77852755","","<p>You cannot access the <code>[Travel]</code> array this way. You have to add a struct for the root object.</p>
<pre><code>struct Root: Decodable {
    let photos : [Travel]
}
</code></pre>
<p>and change <code>Travel</code> to</p>
<pre><code>struct Travel : Hashable, Codable, Identifiable {
    let id: Int // not String
    let name: String
    let image_url : [URL] // or [String] but not String
    let description: String
    let positive_votes_count: Int // not String 
}
</code></pre>
<p>Then decode</p>
<pre><code>let response = try JSONDecoder().decode(Root.self, from: data)
DispatchQueue.main.async {
    self?.travels = response.photos
}
</code></pre>
","2024-01-20 22:19:02","0","Answer"
"77852896","77852535","","<p>The closest syntax I could find involves defining your own <code>namedtuple</code>.</p>
<h1>Defining a key type</h1>
<pre class=""lang-py prettyprint-override""><code>from collections import namedtuple
Key = namedtuple(&quot;Key&quot;, [&quot;k&quot;, &quot;q&quot;])
</code></pre>
<h1>Setting an item</h1>
<pre class=""lang-py prettyprint-override""><code>f = {}
f[Key(k=0, q=1)] = &quot;value&quot;
</code></pre>
<h1>Getting an item</h1>
<p>Any of the following methods should work.</p>
<pre class=""lang-py prettyprint-override""><code>f[0, 1]
f[(0, 1)]
f[Key(0, 1)]
f[Key(k=0, q=1)]
</code></pre>
","2024-01-20 21:57:48","-1","Answer"
"77852755","","JSON decoder TypeMismatch(Swift.Array<Any>","<p>typeMismatch(Swift.Array, Swift.DecodingError.Context(codingPath: [_JSONKey(stringValue: &quot;current_page&quot;, intValue: nil)], debugDescription: &quot;Expected to decode Array but found number instead.&quot;, underlyingError: nil))</p>
<p>ContentView</p>
<pre><code>import SwiftUI

struct URLImage: View {
    let urlString: String
    
    @State var data: Data?
    
    var body: some View{
        
        if let data = data, let uiimage = UIImage(data: data) {
            Image(uiImage: uiimage)
                    .resizable()
                    .aspectRatio(contentMode: .fit)
                    .frame(width: 150, height: 150)
                    .background(Color.gray)
                    .cornerRadius(3)
        }
        else{
            
        Image(systemName: &quot;video&quot;)
                .resizable()
                .frame(width: 50, height: 50)
                .background(Color.gray)
                .onAppear{
                    fetchData()
                }
              }
    }
    
    private func fetchData(){
        guard let url = URL(string: urlString) else {
            return
        }
        
        let task = URLSession.shared.dataTask(with: url){ data, _,
            _ in
            self.data = data
        }
        task.resume()
    }
}

struct ContentView: View {
    @StateObject var viewModel = ViewModel()
    
    var body: some View {
        NavigationView {
            List{
                ForEach(viewModel.travels){ travel in
                    HStack {
                        URLImage(urlString: travel.description)
                                            
                            Text(&quot;\(travel.name)&quot;)
                                    .bold()
                        
                            }
                            .padding(10)
                }
            }
            .navigationTitle(&quot;Travels&quot;)
            .onAppear{
                viewModel.fetch()
            }
        }
    }
}

#Preview {
    ContentView()
}
</code></pre>
<p>ViewModel</p>
<pre><code>struct Travel : Hashable, Codable, Identifiable {
    let id: String
    let name: String
    let image_url : String
    let description: String
    let positive_votes_count: String
}

class ViewModel : ObservableObject{
    @Published var travels: [Travel] = []
    
    func fetch() {
        guard let url = URL (string: &quot;https://api.500px.com/v1/photos?feature=popular&amp;page=1&quot;)
        else {
            return
        }
        
        let task = URLSession.shared.dataTask(with: url){ [weak self] data, _ ,
            error in
            guard let data = data, error == nil else {
                return
            }
            do{
                let response = try JSONDecoder().decode([String: [Travel]].self, from: data)
                            
                            if let travels = response[&quot;photos&quot;] {
                                DispatchQueue.main.async {
                                    self?.travels = travels
                                }
                            }
            }
            catch{
                print(error)
            }
           
        }
        task.resume()
    }
}
</code></pre>
<p>I would like to know how to decode it so that it can be displayed on a ContentView page.</p>
","2024-01-20 21:09:23","-1","Question"
"77852535","","Python dict with named key","<p>I need a very concise dict-like structure, but with named keys.
Suppose I have a value f(k, q).
I can create a nested dict like <code>f[0][1] = 'value'</code> or <code>f[(0,1)] = 'value'</code>.</p>
<p>But there is high probability that the user will mix up <code>f[0][1]</code> and <code>f[1][0]</code> .</p>
<p>Therefore, I want something like <code>f[k=0, q=0] = 'value'</code>.</p>
<p>If I create a class to implement it as a custom class with <code>f.get()</code> and <code>f.set(value)</code>, the code becomes much less readable, since these expressions are a part of convoluted formulas, for which readability is important, so that the 'set' should be done with the <code>=</code> operator and not by passing the value as a function parameter.</p>
<p>Is it possible to modify <code>__set__</code> and <code>__get__</code> magic methods to accept keyword arguments?</p>
","2024-01-20 20:04:34","2","Question"
"77851074","77851043","","<p>A possible solution (you should replace <code>left_on='title', right_on='author_name'</code> by <code>on='title'</code>):</p>
<pre><code>df1 = pd.DataFrame.from_dict(game_data)
df2 = pd.DataFrame.from_dict(author_data)

df1.merge(df2, on='author_id', how='inner')[['title', 'author_name']]
</code></pre>
<p>Output:</p>
<pre><code>   title      author_name
0    LOL   Graham McNeill
1  WH40K   Graham McNeill
2    WOW  Christie Golden
3    POE       Nick Jones
</code></pre>
","2024-01-20 12:50:34","1","Answer"
"77851043","","Pandas merge 2 columns from dict","<p>I've got two dictionaries:</p>
<pre><code>game_data = {
    'game_id': range(1, 6),                
    'title': ('LOL', 'WH40K',
              'WOW', 'POE',
              'KEK'),                      
    'author_id': (1, 1, 2, 3, 5),           
    'genre_id': (1, 2, 4, 4, 1),           
    'price': (0, 0, 14, 19, 100)           
}

author_data = {
    'author_id': (1, 2, 3, 4),     
    'author_name': ('Graham McNeill',
                    'Christie Golden',
                    'Nick Jones',
                    'Slaik')       
}
</code></pre>
<p>The task is to create the dataframe using dictionaries above in this way:
new dataframe should contain only two columns: <strong>title &amp; author_name</strong>:</p>
<pre><code>   title      author_name
0    LOL   Graham McNeill
1  WH40K   Graham McNeill
2    WOW  Christie Golden
3    POE       Nick Jones
</code></pre>
<p>I've tried</p>
<pre><code>print(pd.merge(
    df1, df2,
    left_on='title',
    right_on='author_name',
    how='inner'
))
</code></pre>
<p>but it doesn't work</p>
","2024-01-20 12:37:40","1","Question"
"77849542","77849479","","<p>Do you need to preserve the inner dictionary or are you free to mutate it. If the latter, just extract it and use it as a base adding in the missing members:</p>
<pre><code>inner = status['data']
del status['data']
inner.update(**status)
result = inner
</code></pre>
<p>Note, if any keys occur in both the inner and outer dict, the outer overwrites the inner key with the code above. If you need to not modify it in-place, just copy it first:</p>
<pre><code>from copy import copy

temp = copy(status)
inner = temp['data']
del temp['data']
inner.update(**temp)
result = inner
</code></pre>
<p>And finally, if inner should take precedence over outer, then reverse the last statement:</p>
<pre><code>temp.update(**inner)
result = temp
</code></pre>
<p>And you have your result.</p>
","2024-01-20 01:26:08","1","Answer"
"77849479","","Get key, value pair for nested dictionary","<p>how would I convert the following nested dictionary to a single dictionary</p>
<pre><code>status = {'data': {'isFault': False, 'isButton': False, 'battery': 'NORMAL', 'powerInput': 'NOT_PRESENT', 'powerInput5vIo': 'NOT_PRESENT'}, 'error': 'NO_ERROR'}
</code></pre>
<p>I want it to look like this:</p>
<pre><code>new_status = {'isFault': False, 'isButton': False, 'battery': 'NORMAL', 'powerInput': 'NOT_PRESENT', 'powerInput5vIo': 'NOT_PRESENT', 'error': 'NO_ERROR'}

for k, v in status['data'].items():
    print (k, &quot;:&quot;, v)
</code></pre>
<p>I managed to extract the key, value pairs from 'data' but I'm stuck.</p>
","2024-01-20 00:49:38","-1","Question"
"77846170","77846146","","<p>The <code>IndexError</code> you're encountering could be due to mismatched keys in the <code>photos</code> list and the keys in the <code>all_features</code> dictionary loaded from the <code>features.p</code> file. To debug this issue, you can add some print statements to understand which key is causing the problem. Here's an example of how you can modify your <code>load_features</code> function to include some debugging information:</p>
<pre class=""lang-py prettyprint-override""><code>def load_features(photos):
    all_features = load(open('features.p', 'rb'))
    features = {}
    for k in photos:
        try:
            features[k] = all_features[k]
        except KeyError:
            print(f&quot;Key '{k}' not found in the 'all_features' dictionary.&quot;)
    return features
</code></pre>
<p>When you run this modified function, it will print out the keys that are causing the <code>KeyError</code>. This information should help you identify any discrepancies between the keys in <code>photos</code> and the keys in <code>all_features</code>.</p>
","2024-01-19 12:45:21","1","Answer"
"77846146","","Dictionairy issue with string key","<p>I am currently working on a project where I'm implementing an Image Captioning problem using a CNN network. The issue is that whenever I try to pass an image name as a key to a dictionary, with the image features as a value, it's passing an Index error.</p>
<pre><code>def load_features(photos):
    all_features = load(open('features.p', 'rb'))
    features={k:all_features[k] for k in photos}
    return features
</code></pre>
<p>Here, features.p is a pickle file containing the features of all the images, and photos is meant to be a loaded text file with all of the image names. The image names are a combination of alphebetical and numeric values with the .jpg extension. How could I solve the issue?</p>
","2024-01-19 12:40:07","1","Question"
"77842745","77842409","","<p>I'm quite impressed by the pure-pandas answers already here, but I humbly suggest just using a list-comprehension, since you are owrking with <code>dtype=object</code> anyway:</p>
<pre><code>df = df.assign(
    RelatedPosts_type=[list(dict.fromkeys([d['Type'] for d in ds])) for ds in df['RelatedPosts']],
    RelatedPosts_section=[list(dict.fromkeys([d['Section'] for d in ds])) for ds in df['RelatedPosts']]
)
</code></pre>
","2024-01-18 22:25:31","0","Answer"
"77842658","77842409","","<p>You can probably use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html"" rel=""nofollow noreferrer""><code>json_normalize</code></a> and a custom <a href=""https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.DataFrameGroupBy.agg.html"" rel=""nofollow noreferrer""><code>groupby.agg</code></a>:</p>
<pre><code>meta = ['Id', 'Name']

out = (pd.json_normalize(list_payloads, meta=meta,
                         record_path='RelatedPosts')
       .groupby(meta, as_index=False)
       .agg(lambda x: list(dict.fromkeys(x)))
       )
</code></pre>
<p>Output:</p>
<pre><code>       Id   Name             Type                Section
0  320409  James  [daily, weekly]  [news, sports, shows]
1  334051  Scott          [daily]         [news, sports]
</code></pre>
<p>If you want a prefix for the non-meta columns:</p>
<pre><code>meta = ['Id', 'Name']

out = (pd.json_normalize(list_payloads, meta=meta,
                         record_path='RelatedPosts')
       .groupby(meta)
       .agg(lambda x: list(dict.fromkeys(x)))
       .add_prefix('RelatedPosts_').reset_index()
       )
</code></pre>
<p>Output:</p>
<pre><code>       Id   Name RelatedPosts_Type   RelatedPosts_Section
0  320409  James   [daily, weekly]  [news, sports, shows]
1  334051  Scott           [daily]         [news, sports]
</code></pre>
","2024-01-18 22:05:11","2","Answer"
"77842651","77842409","","<p>Quick and dirty hack (I don't like <code>apply(pd.Series)</code>):</p>
<pre><code>import numpy as np

df1 = (df.pop('RelatedPosts').explode().apply(pd.Series)
         .groupby(level=0).agg(np.unique).add_prefix('RelatedPosts_'))
df = pd.concat([df, df1], axis=1)
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; df
       Id   Name RelatedPosts_Type   RelatedPosts_Section
0  320409  James   [daily, weekly]  [news, shows, sports]
1  334051  Scott           [daily]         [news, sports]
</code></pre>
","2024-01-18 22:04:22","3","Answer"
"77842409","","Is there a way of expanding nested key-value pairs of a pandas dataframe column?","<p>Say I have a list of dictionaries of the following format:</p>
<pre><code>list_payloads = [
{
'Id': 320409,
'Name': 'James',
'RelatedPosts':[{'Type':'daily', 'Section':'news'},{'Type':'daily', 'Section':'sports'},{'Type':'weekly', 'Section':'shows'}]
},
{
'Id': 334051,
'Name': 'Scott',
'RelatedPosts':[{'Type':'daily', 'Section':'news'},{'Type':'daily', 'Section':'sports'}]
}
]
</code></pre>
<p>So first I need it on a pandas dataframe:</p>
<pre><code>df = pd.DataFrame(list_payloads)
df
</code></pre>
<p>Output:</p>
<p><a href=""https://i.sstatic.net/T76IC.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/T76IC.png"" alt=""enter image description here"" /></a></p>
<p>then I need to expand the keys of the 'RelatedPosts' column to new columns of the dataframe. So in this case 'Type', and 'Section' should be the new columns and, for example in the second row 'Scott' would hold only one value (avoid duplicates) for 'Type' where as 'James' would have two values. And same goes with 'Section'.</p>
<p>Desired output:</p>
<p><a href=""https://i.sstatic.net/MX62y.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/MX62y.png"" alt=""enter image description here"" /></a></p>
<p>Is there a way to accomplish this? Take in consideration the real use case the original dataframe could have 50-100k of much larger dictionaries.</p>
<p>I'm pretty new to pandas and only handle basic stuff, I have tried the json_normalize method but can't really understand how it works and the result is never what I need.
Thanks in advance!</p>
","2024-01-18 21:07:14","1","Question"
"77839591","77838855","","<blockquote>
<p><em>It is silly really because I can do it the other way around..</em></p>
</blockquote>
<p>If I understand you correctly, you need <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.notna.html"" rel=""nofollow noreferrer""><code>notna</code></a> that is the opposite of <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.isna.html"" rel=""nofollow noreferrer""><code>isna</code></a> :</p>
<pre><code>for i in range (0,10): 
    notna_columns = df.columns[df.iloc[i].notna()].tolist()
    xclean = [label_xpos[column] for column in notna_columns]
</code></pre>
<p>Note that you can avoid processing each row separately and use <a href=""https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.dot.html"" rel=""nofollow noreferrer""><code>@</code></a> <em>dot product</em> :</p>
<pre><code>from operator import itemgetter

notna_cols = (df.notna() @ (df.columns + &quot;,&quot;)).str[:-1].str.split(&quot;,&quot;).to_dict()
# {0: ['A', 'B', 'C'], 1: ['A', 'C'], 2: ['B', 'C']}

for index, cols in notna_cols.items():
    print(f&quot;{index=}:&quot;, itemgetter(*cols)(label_xpos))

# index=0: (11, 22, 33)
# index=1: (11, 33)
# index=2: (22, 33)
</code></pre>
<p>Used input :</p>
<pre><code>import pandas as pd

sensor_label = list(&quot;ABC&quot;)
sensor_x_coordinates = [11, 22, 33]
label_xpos = dict(zip(sensor_label, sensor_x_coordinates))

df = pd.DataFrame([[1, 2, 3], [4, None, 6], [None, 8, 9]], columns=sensor_label)

#      A    B  C
# 0 1.00 2.00  3
# 1 4.00  NaN  6
# 2  NaN 8.00  9

[3 rows x 3 columns]
</code></pre>
","2024-01-18 12:58:17","1","Answer"
"77839394","77839364","","<p>If I understand correctly, you could use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html"" rel=""nofollow noreferrer""><code>pandas.json_normalize</code></a>, then convert the <code>year.type</code> columns to a MultiIndex (with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.Series.str.split.html"" rel=""nofollow noreferrer""><code>str.split</code></a>):</p>
<pre><code>out = (
 pd.json_normalize(datalist)
   .set_index(['trial', 'location'])
   .pipe(lambda d: d.set_axis(d.columns.str.split('.', expand=True), axis=1))
)
</code></pre>
<p>Variant:</p>
<pre><code>out =  pd.json_normalize(datalist).set_index(['trial', 'location'])
out.columns = out.columns.str.split('.', expand=True)
</code></pre>
<p>Output:</p>
<pre><code>                 2010          2011          2012        
                yield quality yield quality yield quality
trial location                                           
efr1  aberdeen    100      97    90      87    88      90
efr2  bristol      88      90    75      82    77      80
axy1  newcastle    91      95    93      93    75      97
</code></pre>
<p>Note that setting the first two columns as index is optional, but if you don't the MultiIndex will be:</p>
<pre><code>  trial   location  2010          2011          2012        
    NaN        NaN yield quality yield quality yield quality
0  efr1   aberdeen   100      97    90      87    88      90
1  efr2    bristol    88      90    75      82    77      80
2  axy1  newcastle    91      95    93      93    75      97
</code></pre>
<p>Intermediate after <code>pd.json_normalize(datalist)</code>:</p>
<pre><code>  trial   location 2010.yield 2010.quality 2011.yield 2011.quality 2012.yield 2012.quality
0  efr1   aberdeen        100           97         90           87         88           90
1  efr2    bristol         88           90         75           82         77           80
2  axy1  newcastle         91           95         93           93         75           97
</code></pre>
","2024-01-18 12:28:32","1","Answer"
"77839364","","Unpacking dictionary data to create a multiindex panda dataframe","<p>I have a dataset including nested dictionaries that I would like to unpack and form a multiindex dataframe.</p>
<p>The dataframe should have columns for Years with sub columns for the Result Types in each year (yield and quality in this case).</p>
<p>Typical dataset:</p>
<pre><code>datalist= [
    {
        'trial': 'efr1',
        'location': 'aberdeen',
        '2010': {'yield': '100', 'quality': '97'},
        '2011': {'yield': '90', 'quality': '87'},
        '2012': {'yield': '88', 'quality': '90'}
    
    },
    {
        'trial': 'efr2',
        'location': 'bristol',
        '2010': {'yield': '88', 'quality': '90'},
        '2011': {'yield': '75', 'quality': '82'},
        '2012': {'yield': '77', 'quality': '80'}
    
    },
    {
        'trial': 'axy1',
        'location': 'newcastle',
        '2010': {'yield': '91', 'quality': '95'},
        '2011': {'yield': '93', 'quality': '93'},
        '2012': {'yield': '75', 'quality': '97'}
    }   
]

</code></pre>
<p>Using Dataframe.from_dict() produces a table with embedded dictionaries elements which I cannot figure out how to unpack and split to subcolumns.</p>
<p>On the other hand using json_normalize() produces a flat table with compound headings, and I cannot figure out how to to convert that into a multiindex frame with the structure I need...</p>
<p><a href=""https://i.sstatic.net/BWQrw.png"" rel=""nofollow noreferrer"">Results with Dataframe.from_dict() and json_normalize()</a></p>
","2024-01-18 12:25:23","1","Question"
"77838855","","Dictionary manipulation, retrieve from list problem","<p>I have a dictionary linking coordinates to a column name from a dataframe</p>
<p><code>label_xpos = dict(zip(sensor_label, sensor_x_coordinates))</code></p>
<p>I want to detect in my df, the empty column, and for each instance, create a list of valid coordinates</p>
<pre><code>for i in range (0,10): 
    nan_columns = df.columns[df.iloc[i].isna()].tolist()
    print(nan_columns)
    xclean = ??
</code></pre>
<p>It is silly really because I can do it the other way around (finding the points that are not correct)</p>
<p><code>xclean = [label_xpos[column] for column in nan_columns]</code></p>
<p>Thank you</p>
","2024-01-18 11:00:58","0","Question"
"77836540","77799971","","<p>You may use <a href=""https://learn.microsoft.com/en-us/dotnet/api/mapkit.mkmapview.convertcoordinate?view=xamarin-ios-sdk-12"" rel=""nofollow noreferrer"">MKMapView.ConvertCoordinate Method</a> for ios, which can convert a map coordinate to a point. For Android, you may refer to <a href=""https://stackoverflow.com/questions/14429877/how-to-get-screen-coordinates-from-marker-in-google-maps-v2-android"">How to get screen coordinates from marker in google maps v2 android</a></p>
<p>To use them, you may <a href=""https://learn.microsoft.com/en-us/dotnet/maui/platform-integration/invoke-platform-code?view=net-maui-8.0"" rel=""nofollow noreferrer"">invoke platform code</a>.</p>
<p>Suppose below is the click event handler for a pin,</p>
<pre><code>private void BoardwalkPin1_MarkerClicked(object? sender, PinClickedEventArgs e)
{
    var mypin = sender as Pin;
    float xPos;
    float yPos;

#if IOS
    var vc = UIApplication.SharedApplication.KeyWindow?.RootViewController;
    while(vc.PresentedViewController != null)
    {
        vc = vc.PresentedViewController;
    }

    CLLocationCoordinate2D Coordinate = new CLLocationCoordinate2D(mypin.Location.Latitude, mypin.Location.Longitude);

    var myPoint = (mymap.Handler.PlatformView as MKMapView).ConvertCoordinate(Coordinate,vc.View);
    xPos = (float)myPoint.X;
    yPos = (float)myPoint.Y;
#elif ANDROID
    var map = (mymap.Handler as MapHandler)?.Map as Android.Gms.Maps.GoogleMap;
    Projection projection = map.Projection;
    LatLng markerLocation = new LatLng(mypin.Location.Latitude, mypin.Location.Longitude);
    Android.Graphics.Point screenPosition = projection.ToScreenLocation(markerLocation);
    xPos = (float)screenPosition.X;
    yPos = (float)screenPosition.Y;

#endif
    Console.WriteLine(xPos);
    Console.WriteLine(yPos);
}
</code></pre>
<p><code>xPos</code> and <code>yPos</code> we get are the postition relative to the current view.</p>
<p>Hope it helps!</p>
","2024-01-18 02:22:03","1","Answer"
"77835425","77835408","","<p>You put an unnecessary for loop. The outermost loop and the loop inside do the exact same thing (loop through <code>shop_list</code>). So the modified code would be:</p>
<pre><code>shop_list = [{&quot;Apple&quot;:2}, {&quot;Banana&quot;:6}, {&quot;Soap&quot;:1}]

print(&quot;No. \t Items \t \tQuantity\n&quot;)
for dict in shop_list:
    for key, value in dict.items():
        print(&quot;%d \t&quot; %(i+1), &quot;%s\t&quot; %key, &quot;\t%d\t&quot; %value)
    print(&quot;&quot;)
</code></pre>
","2024-01-17 20:48:32","0","Answer"
"77835418","77835408","","<p>Use <code>enumerate</code> to access both the index and value instead of nesting loops.</p>
<pre class=""lang-py prettyprint-override""><code>for i, d in enumerate(shop_list):
    for key, value in d.items():
        print(f&quot;{i+1} \t {key}\t \t{value}\t&quot;)
    print()
</code></pre>
","2024-01-17 20:44:14","4","Answer"
"77835408","","I am trying to make a python list with dict items inside, to replicate a shopping list. I've written the code, but they're getting double displayed","<p>Here is my code</p>
<pre><code>shop_list = [{&quot;Apple&quot;:2}, {&quot;Banana&quot;:6}, {&quot;Soap&quot;:1}]

size = len(shop_list)

print(&quot;No. \t Items \t \tQuantity\n&quot;)
for i in range(size):
    for dict in shop_list:
        for key, value in dict.items():
            print(&quot;%d \t&quot; %(i+1), &quot;%s\t&quot; %key, &quot;\t%d\t&quot; %value)
        print(&quot;&quot;)
</code></pre>
<p>I want it to be displayed like this</p>
<p><a href=""https://i.sstatic.net/5hpsj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/5hpsj.png"" alt="""" /></a></p>
<p>But it is getting displayed like this</p>
<p><a href=""https://i.sstatic.net/TkJfl.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/TkJfl.png"" alt="""" /></a></p>
<p>Someone please help me with this one.</p>
","2024-01-17 20:42:01","1","Question"
"77828757","77828538","","<p>I tried to define a dictionary by assigning to it the value of each base (for example val1) with respect to key where I applied the regular expressions to pull the base value out of strings in the df and I allowed the sort of functionality when encountering a string such as val1(example). So when I find that the base value is present in the dictionary of the reverse mapping, I will find corresponding key and output their results; otherwise it is a no match.</p>
<pre><code>import pandas as pd
import re

my_dict = {
    'key1': ['val1', 'val2', 'val3'],
    'key2': ['val4', 'val5'],
    'key3': ['val6'],
    'key4': ['val7', 'val8', 'val9']
}

# I created hete a reverse mapping
value_to_key = {v: k for k, vals in my_dict.items() for v in vals}

df = pd.DataFrame({'values': ['val1(example)', 'val4', 'val9', 'val3']})

# the func to clean and match values
def match_value(val):
    # Extracting the base value (assuming format 'value(something)')
    base_val = re.match(r'([a-zA-Z0-9]+)', val).group(1)
    return value_to_key.get(base_val, 'No Match')

df['keys'] = df['values'].apply(match_value)

print(df)
</code></pre>
","2024-01-16 21:15:35","0","Answer"
"77828538","","Iterating dictionary and add column to dataframe","<p>I have a dictionary consisting of several keys that have multiple values assigned to them:</p>
<pre><code>dict ={
'key1':'val1(ex1)|val2',
'key2':'val3 (ex2)|val4',
'key3':'val5',
'key4':'val6|val7|val8|val9'
}
</code></pre>
<p>The single keys consist of values having different lengths, that means that the count of elements in a value expression separated by &quot;|&quot; differs for the keys.
Therefore, conversion to a dataframe is not possible as all arrays have to have the same length.</p>
<p>Then I have a dataframe in where one columns contains the values of the dictionary above.
So target is to iterate over all rows in the dataframe column, match the value with the dictionary values and enter the corresponding key to a new column in the dataframe.</p>
<p>So far I use the following loop:</p>
<pre><code>for key, val in dict.items():
    df.loc[(df['Values'].str.contains(val)),'new_col'] = key
</code></pre>
<p>This seems to work partly already but sometimes (not always) values are not matched, especially if they contain parenthesis (like 'val1(example)' ).</p>
<p>End result should look like this:
<a href=""https://i.sstatic.net/6lIBr.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<p>Would it be better to create a list of values in the dictionary?
How should it work as my first attempt got me an error saying list are not hashable?</p>
<p>Thanks a lot!</p>
<p>EDIT:
Apparently the loop didn't work well with &quot;str.contains(val)&quot; part.
As the values that are assigned to keys are constant, I converted the values to a list like this:</p>
<pre><code>'key1':['val1(ex1),val2'],
#and so on...
</code></pre>
<p>and changed the loop as follows:</p>
<pre><code>
for key, val in dict.items():
    for i in val:
        df.loc[(df['Values']== i),'new_col'] = key
</code></pre>
<p>This solved the problem.
Thanks for your answers!</p>
","2024-01-16 20:22:44","0","Question"
"77827642","77827572","","<p>You don't need to use the <code>json</code> module to parse the response. Just use the functionalities of <code>requests</code>:</p>
<pre><code>json_data = requests.get(url).json()
</code></pre>
<p>To print the response you could, for example, do this:</p>
<pre><code>for json_dict in json_data:  # Iterate through the list of JSON objects
    for key, value in json_dict.items():  # Display the key value pairs for each object
        print(key, &quot;: &quot;, value)
</code></pre>
","2024-01-16 17:31:59","2","Answer"
"77827572","","Converting JSON list (from an API) into a python dictionary","<p>I'm working on a REST API assignment in uni which <em>should</em> be simple, but I've become stuck and have been going round in circles for hours.</p>
<p>I've been tasked with writing python code which 'consumes' JSON data from an API. Scope and Easy enough, right? The scope is up to me, so I have decided to keep it simple.</p>
<ol>
<li>Get data JSON from: <a href=""https://api.openbrewerydb.org/v1/breweries?by_city=miami&amp;per_page=5"" rel=""nofollow noreferrer"">here</a></li>
<li>Parse it into a python list.</li>
<li>Iterate through the list to display the key value pairs for multiple objects.</li>
</ol>
<p>I thought <code>json.loads()</code> would parse my JSON data into a Python dictionary so that I could use <code>items()</code> in a for loop to produce the key value pairs, but I can only achieve the following:</p>
<p>I can do this in a manner using <code>enumerate()</code> on the list, but it does not format the results the way I would like.</p>
<p>I've used <code>.items()</code> in a for loop with <code>my_dict = {&quot;name&quot;: &quot;Alice&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot;}</code> successfully in another file - no problems at all there! The JSON response from the url is wrapped i and I thought it would be far easier to convert it than it is!</p>
<p>I feel I'm missing something extremely obvious here put cannot put my finger on it.</p>
<p>Could someone offer any advice? Code is below.</p>
<pre><code>import json
import requests

url = &quot;https://api.openbrewerydb.org/v1/breweries?by_city=miami&amp;per_page=3&quot;
response = requests.get(url)
print(&quot;\nhttp status code: &quot;,  response.status_code, &quot;- &quot;, response.reason)

json_data = json.loads(response.text)
print(&quot;JSON data type:&quot;, type(json_data))

print('\nResults using index method')
json_dict = json_data[0]
for key, value in json_dict.items():
print(key, &quot;: &quot;, value,)

print('\nResults using enumerate method')
for key, value in enumerate(json_data):
print(&quot;{} : {} &quot;.format(key, value))
</code></pre>
","2024-01-16 17:19:04","-1","Question"
"77827415","77826981","","<p>The order of <code>{Key, Value}</code> pairs is undefined in c# dictionary; assuming that we want them ordered by <code>Key</code> we can have <em>two dictionaries</em>: <code>direct</code> (having <code>Key</code> we want <code>Value</code>) and <code>reverse</code> (to obtain <code>Key</code> from <code>Value</code>), i.e. having</p>
<pre><code>Dictionary&lt;int, int[]&gt; original = new() {
  { 0, new int[] { 1 } },
  { 1, new int[] { 2, 3 } },
  { 2, new int[] {} },
  { 3, new int[] { 4, 5 } },
  { 4, new int[] { 5, 6, 7 } },
  { 5, new int[] { 6, 7 } },
  { 6, new int[] {} },
  { 7, new int[] { 8 } },
  { 8, new int[] {} },
};
</code></pre>
<p>We build</p>
<pre><code>var direct = original
  .Where(pair =&gt; pair.Value.Any())
  .ToDictionary(pair =&gt; pair.Key, pair =&gt; pair.Value.First());

var reverse = original
  .SelectMany(pair =&gt; pair.Value.Select(value =&gt; (key: pair.Key, value)))
  .OrderBy(item =&gt; item.key)
  .GroupBy(item =&gt; item.value, item =&gt; item.key)
  .ToDictionary(group =&gt; group.Key, group =&gt; group.First());
</code></pre>
<p>And then loop</p>
<pre><code>IEnumerable&lt;int&gt; Sequence(int item) {
  for (var dict = reverse; ; dict = dict == direct ? reverse : direct) {
    yield return item;

    if (!dict.TryGetValue(item, out item))
      break;
  }
}
</code></pre>
<p>Demo:</p>
<pre><code>Console.WriteLine(string.Join(&quot;, &quot;, Sequence(7).Take(10)));
</code></pre>
<p>Output:</p>
<pre><code>7, 4, 5, 3, 4, 3, 4, 3, 4, 3
</code></pre>
<p><a href=""https://dotnetfiddle.net/h9lTyP"" rel=""nofollow noreferrer"">Fiddle</a></p>
","2024-01-16 16:47:36","1","Answer"
"77827198","77826981","","<p>Reading the leet code problem you listed in the comments.</p>
<p>The problem is essentially a tree/graph search problem. But you do not need to go overboard with data structures/dictionaries. The important thing is to be able to efficiently go from one node to its children, and the original array works just fine for that:</p>
<pre><code>var nums = new []{ 2, 3, 1, 1, 4 };

IEnumerable&lt;int&gt; GetNextIndices(int i)
{
    var jump = nums[i];
    var nextIndices = new List&lt;int&gt;();
    if(i - jump &gt; 0) { nextIndices.Add(i - jump); }
    if (i + jump &lt; nums.Length){nextIndices.Add(i + jump);    }
    return nextIndices;
}
</code></pre>
<p>Given a index, it will return the next 0, 1 or 2 indices to check. The major inefficiencies here is needing to create a list, you can optimize away that list, but such optimizations tend to impair readability.</p>
<p>The next step is to traverse the graph:</p>
<pre><code>public static IEnumerable&lt;T&gt; DepthFirstLoopSafe&lt;T&gt;(T self, Func&lt;T, IEnumerable&lt;T&gt;&gt; getNextNodes)
{
    var stack = new Stack&lt;T&gt;();
    var visited = new HashSet&lt;T&gt;(EqualityComparer&lt;T&gt;.Default);
    stack.Push(self);
    while (stack.Count &gt; 0)
    {
        var current = stack.Pop();
        if (!visited.Add(current)) continue;
        yield return current;
        foreach (var node in getNextNodes(current))
        {
            stack.Push(node);
        }
    }
}
</code></pre>
<p>This is made a bit more complicated by the generic nature, but that makes it simpler to reuse for different kinds of tree structures. An important point here is to ignore already visited indices, since that could lead to an infinite loop. If you want a breadth first instead of depth first, just change the stack to a queue.</p>
<p>This will return a sequence of all reachable nodes, so we can just check if it contains the last index to determine if it is reachable:</p>
<pre><code>var reachedEnd = DepthFirstLoopSafe(0, GetNextIndices).Any(i =&gt; i == nums.Length-1);
</code></pre>
","2024-01-16 16:12:58","0","Answer"
"77827081","77826981","","<p>Dictionary entries in C# has no order to it.</p>
<p>Since your keys seem to be iterating in ascending order from 0 to 8, look into <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.sorteddictionary-2?view=net-8.0"" rel=""nofollow noreferrer"">SortedDictionary</a>. This sorts the elements based on its keys, since you want this to be sorted in reverse order, create the dictionary with a reverse comparer like:</p>
<pre class=""lang-cs prettyprint-override""><code>var dict = new SortedDictionary&lt;int, List&lt;int&gt;&gt;(
  Comparer&lt;int&gt;.Create((x, y) =&gt; y.CompareTo(x))
);
</code></pre>
<p>Credits to this answer: <a href=""https://stackoverflow.com/a/48622799/17985195"">link to thread.</a></p>
<p>That entire thread has other methods to create a reverse sorted dictionary but I am just providing the one liner which would be convenient for your use case.</p>
","2024-01-16 15:54:33","1","Answer"
"77826981","","How to reverse iterate the objects within the dictionary C#","<p>I have a similar structure as the dictionary in C# and I need to find first the required value. When the value is found, needs to get its corresponding key. Will then take that key and need to iterate backward the entire dictionary for scanning corresponding values.</p>
<p>Example. (<code>Dictionary&lt;int, List&lt;int&gt;&gt;</code>)</p>
<pre><code>|0 -&gt;1|
|1-&gt; 2,3|
|2-&gt; NUll|
|3-&gt; 4,5|
|4-&gt; 5,6,7|
|5-&gt; 6,7|
|6-&gt; NULL|
|7-&gt; 8|
|8-&gt; NULL|
</code></pre>
<p>For example, my target value is <code>'8'</code> which is found in the above dictionary at the 7th index. Now I have to backtrack until the whole dictionary is finished by surpassing the first key-value pair.</p>
<p>So, I want <code>8</code> as the value, its key would be <code>7</code>. From the 7th key, I should jump over back to the 5th key,( as the 7th value is present there), and from the 5th key, it should jump back to the 4th key as <code>5</code> is present in the values of <code>4</code>. From the 4th key, it should jump back to the 3rd key ( as <code>4</code> is present in the values of <code>3</code> and so on until I exhausted the dictionary traversal backward.</p>
<p>How can I achieve the above functionality?</p>
","2024-01-16 15:40:26","0","Question"
"77826778","77826658","","<p>In the original code snippet, the <code>hashtab</code> array is declared as <code>static</code>, which means its elements are automatically initialized to <code>NULL</code> at the program start. This is a key difference from dynamically allocated memory (like with <code>malloc</code>), where the contents are uninitialized.</p>
<p>When you declare a <code>static</code> array of pointers like <code>static struct nlist *hashtab[HASHSIZE];</code>, all the pointers in this array are initialized to <code>NULL</code> by default. This initialization is done by the system when the program starts, before any function is called. This is part of the C language standard, which specifies that objects with static storage duration are initialized to zero (or <code>NULL</code> for pointers) if no explicit initializer is provided.</p>
<p>Therefore, the <code>hashtab</code> array starts with all its elements set to <code>NULL</code>, and there is no need for additional initialization code for this array.</p>
<p>In the previous code snippet you provided, the situation is different:</p>
<pre class=""lang-c prettyprint-override""><code>struct Dict {
    struct nlist *hashtab[HASHSIZE];
};
</code></pre>
<p>In your code, <code>hashtab</code> is a member of a struct, and it is not declared as <code>static</code>. When you dynamically allocate memory for this struct using <code>malloc</code>, as in:</p>
<pre class=""lang-c prettyprint-override""><code>struct Dict *dtest = (struct Dict*)malloc(sizeof(struct Dict));
</code></pre>
<p>the <code>hashtab</code> array within <code>dtest</code> is not automatically initialized. The <code>malloc</code> function allocates memory without initializing it, so the contents of the allocated memory are indeterminate. In the case of <code>hashtab</code>, this means its pointers could point to any arbitrary memory location.</p>
<p>Thus, for this struct, you must explicitly initialize the <code>hashtab</code> array to ensure that each pointer in the array is set to <code>NULL</code> before you use them. Failure to do so can lead to undefined behavior, such as segmentation faults when you try to access or modify the data through these uninitialized pointers.</p>
<p>The initialization can be done like this:</p>
<pre class=""lang-c prettyprint-override""><code>// Initialize the hash table
for (int i = 0; i &lt; HASHSIZE; i++) {
    dtest-&gt;hashtab[i] = NULL;
}
</code></pre>
<p>This loop sets each pointer in the <code>hashtab</code> array to <code>NULL</code>, ensuring that they are properly initialized before use.</p>
","2024-01-16 15:11:21","0","Answer"
"77826658","","Segfault in C while Implementing a Simple Dictionary","<p>So I tried implementing a simple dictionary as shown in this <a href=""https://stackoverflow.com/questions/4384359/quick-way-to-implement-dictionary-in-c"">post</a>. However, I did modify the code:</p>
<p>a) The dictionary:</p>
<pre><code>/* String utility for duplication */
char *strdup(char *s) /* make a duplicate of s */
{
    char *p;
    p = (char *) malloc(strlen(s)+1); /* +1 for ’\0’ */
    if (p != NULL)
       strcpy(p, s);
    return p;
}

struct nlist {
    struct nlist *next;
    char *name;
    char *defn;
};

#define HASHSIZE 101
struct Dict {
    struct nlist *hashtab[HASHSIZE];
};

/* hash: form hash value for string s */
unsigned hash(char *s)
{
    unsigned hashval;
    for (hashval = 0; *s != '\0'; s++)
      hashval = *s + 31 * hashval;
    return hashval % HASHSIZE;
}

/* lookup: look for s in hashtab */
struct nlist *lookup(struct Dict *d, char *s)
{
    struct nlist *np;
    for (np = d-&gt;hashtab[hash(s)]; np != NULL; np = np-&gt;next)
        if (strcmp(s, np-&gt;name) == 0)
          return np; /* found */
    return NULL; /* not found */
}

struct nlist *insert(struct Dict *d, char *name, char *defn)
{
    struct nlist *np;
    unsigned hashval;
    if ((np = lookup(d, name)) == NULL) { /* not found */
        np = (struct nlist *) malloc(sizeof(*np));
        if (np == NULL || (np-&gt;name = strdup(name)) == NULL)
          return NULL;
        hashval = hash(name);
        np-&gt;next = d-&gt;hashtab[hashval];
        d-&gt;hashtab[hashval] = np;
    } else /* already there */
        free((void *) np-&gt;defn); /*free previous defn */
    if ((np-&gt;defn = strdup(defn)) == NULL)
       return NULL;
    return np;
}
</code></pre>
<p>b) Example:</p>
<pre><code>int main() {
    struct Dict *dtest = (struct Dict*)malloc(sizeof(struct Dict));
    insert(dtest, &quot;hello&quot;, &quot;world&quot;);
    // Look up a definition by name
    struct nlist *result = lookup(dtest, &quot;hello&quot;);
    
    if (result != NULL) {
        printf(&quot;Definition for 'hello': %s\n&quot;, result-&gt;defn);
    } else {
        printf(&quot;'hello' is not found in the dictionary.\n&quot;);
    }

    return 0;
}
</code></pre>
<p>When I tried debugging it, I received this error:</p>
<blockquote>
<p>Thread 1 received signal SIGSEGV, Segmentation fault.
0x00007ff6bc661626 in lookup (d=0x220924616e0, s=0x7ff6bc673006 &quot;hello&quot;) at dict.c:40
40              if (strcmp(s, np-&gt;name) == 0)</p>
</blockquote>
<p>I just don't understand how a simple modification of the code could produce this unexpected behavior, and quite frankly, not sure how to go about it.</p>
","2024-01-16 14:55:27","1","Question"
"77821532","77819492","","<p>I have managed to get all the 3 arrays printed on the dom with the same code.</p>
<p>Could you confirm your comparison is still returning multiple arrays?</p>
<pre><code>const TestComponent: React.FC = () =&gt; {
function getHoveredEventDetails() {
    const formattedDay = &quot;14-02-2024&quot;;
    const matchingDates: typeof apiData[0][] = [];

    apiData.forEach((event) =&gt; {
        if (event.date === formattedDay) {
            matchingDates.push(event);
        }
    });
    console.log({matchingDates});
    let countKey = 1010;
    if (matchingDates.length &gt; 0) {
        return matchingDates.map((event, index) =&gt; {
            const coursesDetails = event.courses;
            countKey = countKey + 1;
            return coursesDetails.map((course, courseIndex) =&gt; {
                return (
                    &lt;div className=&quot;eventDetails&quot; key={`${index}-${courseIndex}`}&gt;
                        &lt;div className=&quot;profile&quot;&gt;
                            &lt;h1 className=&quot;profile_title&quot;&gt;{course.courseName}&lt;/h1&gt;
                            &lt;p className=&quot;profile_para&quot;&gt;
                                On {course.startProgramDates} till {course.endProgramDates},
                                From {course.startTime} to {course.endTime}
                            &lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                );
            });
        });
    }
}

return (
    &lt;div&gt;
        {getHoveredEventDetails()}
    &lt;/div&gt;
)
}
</code></pre>
<p>I have used the below data to mock your API data.</p>
<pre><code>const apiData = [{
courseCount: 3,
courses: [
    { courseName: 'Course 1', startProgramDates: '14-02-2024', endProgramDates: '16-02-2024', startTime: '8:00 AM ET', endTime: '13:00 PM ET' },
    { courseName: 'Course 2', startProgramDates: '12-02-2024', endProgramDates: '16-02-2024', startTime: '11:00 AM ET', endTime: '12:00 AM ET' },
    { courseName: 'Course 3', startProgramDates: '13-02-2024', endProgramDates: '16-02-2024', startTime: '10:00 PM ET', endTime: '11:00 AM ET' }],
date: &quot;14-02-2024&quot;
},
{
    courseCount: 2,
    courses: [
        { courseName: 'Course 4', startProgramDates: '14-02-2024', endProgramDates: '16-02-2024', startTime: '8:00 AM ET', endTime: '13:00 PM ET' },
        { courseName: 'Course 5', startProgramDates: '12-02-2024', endProgramDates: '16-02-2024', startTime: '11:00 AM ET', endTime: '12:00 AM ET' }],
    date: &quot;14-02-2024&quot;
},
{
    courseCount: 2,
    courses: [
        { courseName: 'Course 6', startProgramDates: '14-02-2024', endProgramDates: '16-02-2024', startTime: '8:00 AM ET', endTime: '13:00 PM ET' },
        { courseName: 'Course 7', startProgramDates: '12-02-2024', endProgramDates: '16-02-2024', startTime: '11:00 AM ET', endTime: '12:00 AM ET' }],
    date: &quot;14-02-2024&quot;
},
]
</code></pre>
<p>And the dom looks like below.
<a href=""https://i.sstatic.net/mYLEa.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/mYLEa.png"" alt=""Output"" /></a></p>
","2024-01-15 17:53:34","0","Answer"
"77820856","77820733","","<p>Take care you are overwriting values of your <code>dict</code> because keys have to be unique - a unique key could be the url:</p>
<pre><code>all_data = {}
...
for url_in_list in reversed_url_list:
    ...
    all_data[url_in_list] = {}
    ...
    for row in soup.find_all('div', class_='info-table__row'):
       ...
       all_data[url_in_list].update({key:value})
</code></pre>
<hr />
<p>However you could also work with a <code>list</code> of <code>dicts</code> - Creating a <code>DataFrame</code> from this will create all columns also from missing keys and set them to <code>NaN</code>:</p>
<pre><code>all_data = []
...
for url_in_list in reversed_url_list:
    ...
    d = {'url':url_in_list}
    ...
    for row in soup.find_all('div', class_='info-table__row'):
       ...
       d.update({key:value})
    all_data.append(d)

pd.DataFrame(all_data)
</code></pre>
<h5>Example</h5>
<pre><code>import pandas as pd
pd.DataFrame(
    [
        {'url':'some_url','f1':'v1','f2':'v2'},
        {'url':'some_other_url','f2':'v2','f3':'v3'},
        {'url':'some_other_url','f5':'v5'}
    ]
)
</code></pre>
<p>Results in:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th style=""text-align: right;""></th>
<th style=""text-align: left;"">url</th>
<th style=""text-align: left;"">f1</th>
<th style=""text-align: left;"">f2</th>
<th style=""text-align: left;"">f3</th>
<th style=""text-align: left;"">f5</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: right;"">0</td>
<td style=""text-align: left;"">some_url</td>
<td style=""text-align: left;"">v1</td>
<td style=""text-align: left;"">v2</td>
<td style=""text-align: left;"">nan</td>
<td style=""text-align: left;"">nan</td>
</tr>
<tr>
<td style=""text-align: right;"">1</td>
<td style=""text-align: left;"">some_other_url</td>
<td style=""text-align: left;"">nan</td>
<td style=""text-align: left;"">v2</td>
<td style=""text-align: left;"">v3</td>
<td style=""text-align: left;"">nan</td>
</tr>
<tr>
<td style=""text-align: right;"">2</td>
<td style=""text-align: left;"">some_other_url</td>
<td style=""text-align: left;"">nan</td>
<td style=""text-align: left;"">nan</td>
<td style=""text-align: left;"">nan</td>
<td style=""text-align: left;"">v5</td>
</tr>
</tbody>
</table>
</div>","2024-01-15 15:45:18","2","Answer"
"77820801","77820733","","<p>Assuming you &quot;know&quot; the fields you need, the code below will work for you and padd the dict with <code>None</code></p>
<pre><code>import copy

# Assuming you are expecting to get 5 well know fields [f1...f5]
scraping_data = {'f1': 'f1_value', 'f3': 'f3_value'}
dict_template = {'f1': None, 'f2': None, 'f3': None, 'f4': None, 'f5': None}
data = copy.deepcopy(dict_template)
for k, v in scraping_data.items():
    data[k] = v
print(data)
</code></pre>
<p>output</p>
<pre><code>{'f1': 'f1_value', 'f2': None, 'f3': 'f3_value', 'f4': None, 'f5': None}
</code></pre>
","2024-01-15 15:34:12","0","Answer"
"77820733","","How to make dictionary values same across all keys?","<p>I am scraping a website for apartment sales market analysis. I have 100+ dictionary keys (price, location, URL, zip code, number of floors, etc.). For this, I am using <code>Selenium</code> to retrieve values for those parameters and appending the values to the dictionary.</p>
<p>However, I encounter issues where some ads don't have these attributes. This causes the dictionary values to not have the same length and become misaligned when converting them into a <code>Data frame</code>.</p>
<p>Here is my code:</p>
<pre><code>import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from time import sleep
from bs4 import BeautifulSoup

# Empty dictionary
all_data = {'URL': []}

# Counter variable
counter = 1

# url_list is the list of URLS where all data comes from.

# Open from old to new ads. 
reversed_url_list = url_list[::-1]
for url_in_list in reversed_url_list:

    # Initalizing the driver for Chrome browser 
    driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))
    # Maximizing windows
    driver.maximize_window()

    # Open the website
    driver.get(url_in_list)
    sleep(3)

    # Get all HTML source from web page
    html_source = driver.page_source
    soup = BeautifulSoup(html_source, 'html.parser')

    # Find all inactive ads by class tag
    inactive_listing = soup.find(class_=&quot;listing-inactive&quot;)

    # If ads are inacrive, then continue
    if inactive_listing:
        print(f'Skipping {url_in_list} due to inactivity.')
        continue
    else:
        # Else find all elements with class name 'info-table row'
        try:
            # For each row in 'info table'
            for row in soup.find_all('div', class_='info-table__row'): 

                # Find the title of this row and save as a key
                key_element = row.find('dt', class_='info-table__title') 
                # Find the corresponding value for this key and save it as a value
                value_element = row.find('dd', class_='info-table__value') 
                key = key_element.get_text(strip=True)
                value = value_element.get_text(strip=True)
                # If key is found in dictionary, the append value
                if key in all_data:
                    all_data[key].append(value)
                # Else create a dictionay key and append a value
                else:
                    all_data[key] = [value]
        except AttributeError:
            continue
        
    all_data['URL'].append(url_in_list)
    driver.quit()
    print(f'{str(counter)} data has been scrapped. {str(len(url_list) - counter)} remaining.')
    counter +=1
</code></pre>
<p>Using this approach, let's say if an ad doesn't have <code> No of floors</code>, then so this value won't be appended in the dictionary but the rest of values are. In the next iteration, if this value found, it will be appended in wrong position. This causes an issue when converting the <code>dict</code> to <code>DataFrame</code> because number of values won't be the same size and wrong values appended to wrong place.</p>
<p>Therefore, I would like to add <code>None</code> instead if any of dictionary key not found in the loop for each ads.</p>
","2024-01-15 15:17:59","0","Question"
"77819587","77819492","","<p>I think It is weird. Mybe it might works:</p>
<pre><code>function getHoveredEventDetails() {
  const formattedDay = day.format(&quot;DD-MM-YYYY&quot;);
  const matchingDates = [];

  eventsCountandDate.forEach((event) =&gt; {
    if (event.date === formattedDay) {
      matchingDates.push(event);
    }
  });
  let countKey = 1010;
  if (matchingDates.length &gt; 0) {
     matchingDates.forEach((event, index) =&gt; {
      const coursesDetails = event.courses;
      countKey = countKey + 1;
      coursesDetails.forEach((course, courseIndex) =&gt; {
        return (
          &lt;div className=&quot;eventDetails&quot; key={`${index}-${courseIndex}`}&gt;
            &lt;div className=&quot;profile&quot;&gt;
              &lt;h1 className=&quot;profile_title&quot;&gt;{course.courseName}&lt;/h1&gt;
              &lt;p className=&quot;profile_para&quot;&gt;
                On {course.startProgramDates} till {course.endProgramDates},
                From {course.startTime} to {course.endTime}
              &lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        );
      });
    });
  }
}
</code></pre>
","2024-01-15 11:52:43","0","Answer"
"77819514","77819492","","<p>You're returning an array-of-arrays. You're not telling us what it is you exactly want to return, but given you've tagged react.js, presumably a flat list of divs; in that case, use <code>flatMap</code>:</p>
<pre><code>return matchingDates.flatMap((event, index) =&gt; {
   ...
</code></pre>
<p>Your component further simplifies to something like</p>
<pre><code>function getHoveredEventDetails() {
  const formattedDay = day.format(&quot;DD-MM-YYYY&quot;);
  const matchingDates = eventsCountandDate.filter(
    (event) =&gt; event.date === formattedDay,
  );
  return matchingDates.flatMap((event, dateIndex) =&gt;
    event.courses.map((course, courseIndex) =&gt; (
      &lt;div className=&quot;eventDetails&quot; key={`${dateIndex}-${courseIndex}`}&gt;
        &lt;div className=&quot;profile&quot;&gt;
          &lt;h1 className=&quot;profile_title&quot;&gt;{course.courseName}&lt;/h1&gt;
          &lt;p className=&quot;profile_para&quot;&gt;
            On {course.startProgramDates} till {course.endProgramDates}, From{&quot; &quot;}
            {course.startTime} to {course.endTime}
          &lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    )),
  );
}
</code></pre>
","2024-01-15 11:38:06","0","Answer"
"77819492","","Map function not returning all the arrays","<p>So here I am trying to map through multiple arrays, and return all the data related to it. But only the first array is getting returned.
The strange thing here is that when I try console logging the same its working just fine. but the moment I put it inside any HTML tag the problem is coming up. What is wrong here? Any kinda help will be very useful.</p>
<pre><code>function getHoveredEventDetails() {
  const formattedDay = day.format(&quot;DD-MM-YYYY&quot;);
  const matchingDates = [];

  eventsCountandDate.forEach((event) =&gt; {
    if (event.date === formattedDay) {
      matchingDates.push(event);
    }
  });
  let countKey = 1010;
  if (matchingDates.length &gt; 0) {
    return matchingDates.map((event, index) =&gt; {
      const coursesDetails = event.courses;
      countKey = countKey + 1;
      return coursesDetails.map((course, courseIndex) =&gt; {
        return (
          &lt;div className=&quot;eventDetails&quot; key={`${index}-${courseIndex}`}&gt;
            &lt;div className=&quot;profile&quot;&gt;
              &lt;h1 className=&quot;profile_title&quot;&gt;{course.courseName}&lt;/h1&gt;
              &lt;p className=&quot;profile_para&quot;&gt;
                On {course.startProgramDates} till {course.endProgramDates},
                From {course.startTime} to {course.endTime}
              &lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        );
      });
    });
  }
}
</code></pre>
<p>Here is the API data, which I am trying to get.</p>
<pre><code>courseCount: 3, courses: (3) [{…}, {…}, {…}], date:&quot;14-02-2024&quot;
</code></pre>
<p>Further If I expland the courses array then</p>
<pre><code>courses: Array(3)
1:{courseName: 'Course 1', startProgramDates: '14-02-2024', endProgramDates: '16-02-2024', startTime: '8:00 AM ET', endTime: '13:00 PM ET'}
1:{courseName: 'Course 2', startProgramDates: '12-02-2024', endProgramDates: '16-02-2024', startTime: '11:00 AM ET', endTime: '12:00 AM ET'}
2:{courseName: 'Course 3', startProgramDates: '13-02-2024', endProgramDates: '16-02-2024', startTime: '10:00 PM ET', endTime: '11:00 AM ET'}
</code></pre>
","2024-01-15 11:33:29","0","Question"
"77815512","77814912","","<p>Assuming your txt file is something like this:</p>
<pre><code>title   director        cast    country release_year
a       b       c       d       e
a1      b1      c1      d1      e1
a2      b2      c2      d2      e2
</code></pre>
<p>where the separator is a <code>\t</code>, this code should work:</p>
<pre class=""lang-py prettyprint-override""><code>data = {}

with open(&quot;./file.txt&quot;, &quot;r+&quot;) as file:
    # read all lines
    lines = file.readlines()
    # slicing needed to remove legend
    for line in lines[1:]:
        tokens = line.strip().split(&quot;\t&quot;)
        title = tokens[0]
        actors = tokens[2]
        place = tokens[3]
        year = tokens[4]

        data[title] = {}
        data[title][&quot;actors&quot;] = actors
        data[title][&quot;place&quot;] = place
        data[title][&quot;year&quot;] = year

import json
print(json.dumps(data, indent=3))
</code></pre>
<p>Output of the script:</p>
<pre><code>{
   &quot;a&quot;: {
      &quot;actors&quot;: &quot;c&quot;,
      &quot;place&quot;: &quot;d&quot;,
      &quot;year&quot;: &quot;e&quot;
   },
   &quot;a1&quot;: {
      &quot;actors&quot;: &quot;c1&quot;,
      &quot;place&quot;: &quot;d1&quot;,
      &quot;year&quot;: &quot;e1&quot;
   },
   &quot;a2&quot;: {
      &quot;actors&quot;: &quot;c2&quot;,
      &quot;place&quot;: &quot;d2&quot;,
      &quot;year&quot;: &quot;e2&quot;
   }
}
</code></pre>
<p>If this is not what you were looking for, please add some detail about the first lines of the txt file.</p>
","2024-01-14 14:57:18","0","Answer"
"77815179","77814946","","<p>I read the complete deepdiff document from pypi.org. There is no such options available. For ignoring options, both should be number types. For instance one number can be float and another number can be integer. In this case, you can ignore type. So the way I suggest is:</p>
<pre><code>for x in dict1.keys():
    x = str(x)
for x in dic2.keys():
    x = str(x)
</code></pre>
<p>Convert into string as mentioned above and compare.</p>
","2024-01-14 13:16:18","0","Answer"
"77814946","","Comparing int and string in DeepDiff (Python)","<p>I use <code>deepdiff</code> package for comparing dictionaries.</p>
<p>When I make <code>DeepDiff({key: 0}, {key: &quot;0&quot;})</code> it returns an error about type, it's ok.</p>
<p>But when I try to ignore the type difference by parameter <code>ignore_type_in_groups=[(str, int)]</code> it also returns an error but now about value <code>Value of root changed from 0 to &quot;0&quot;.</code></p>
<p>Is it possible to ignore type difference fully by some native settings?</p>
<p>I found only parameter <code>number_to_string_func</code> in its manual, but it seems rather strange when there is not native ability for type ignoring.</p>
","2024-01-14 11:59:44","0","Question"
"77814912","","How to add items into a dictionary from a txt file","<p>I have a txt file (that I can't modify) with several thousands of movies in it and I'm supposed to pick out the actors, place and year specifically. I managed to turn it into data like so:</p>
<pre><code>f = open(&quot;/content/drive/My Drive/netflix.txt&quot;, &quot;r&quot;)
data = [i.strip('\n').split('\t') for i in open(&quot;/content/drive/My Drive/netflix.txt&quot;)]
print(data)
</code></pre>
<p>where it displays it as ['title', 'director', 'cast', 'country', 'release_year'] but I need it to ignore the first two entirely and check how many times each actor in the cast has been mentioned in the file between two years that it gets through inputs.</p>
<p>I can't figure out how I'm supposed to sort it according to the year and country, then count the times a name is mentioned. I'd appreciate some help.</p>
<p>I've only managed to write the part that takes the inputs of two years and the country and checks their validity.</p>
","2024-01-14 11:50:18","-1","Question"
"77814728","77814518","","<p>If you want to avoid intermediate list/dicts, you can always use a generator:</p>
<pre><code>my_dict.update((k, 0) for k in new_keys_to_add)
</code></pre>
<p>Whether this part is really worth optimizing is another question (spoiler: it's not).</p>
","2024-01-14 10:48:24","0","Answer"
"77814726","77814632","","<p>Why not use <a href=""https://github.com/pallets/jinja"" rel=""nofollow noreferrer""><code>jinja</code></a>'s templates in which you can incorporate <a href=""https://jinja.palletsprojects.com/en/3.1.x/switching/#loops"" rel=""nofollow noreferrer"">loop</a>s ?</p>
<p>You can make a <a href=""https://jinja.palletsprojects.com/en/3.1.x/api/#jinja2.Template"" rel=""nofollow noreferrer""><code>Template</code></a>, shape it the way you want and finally <a href=""https://jinja.palletsprojects.com/en/3.1.x/api/#jinja2.Template.render"" rel=""nofollow noreferrer""><code>render</code></a> it :</p>
<pre><code># pip install Jinja2
from jinja2 import Template

text = &quot;&quot;&quot;
a_var --&gt;
{% for obj in a -%}
{{ obj }}
{% endfor %}
b_var --&gt;
{% for obj in b -%}
{% for k, v in obj.items() -%}
{{ k }}: {{ v }}
{% endfor -%}
{% endfor %}
c_var --&gt;
{% for obj in c -%}
{% for k, v in obj.items() -%}
{{ k }}: {{ v }}
{% endfor %}
{% if not loop.last %}{% endif %}{% endfor %}
&quot;&quot;&quot;

tpl = Template(text).render(a=a, b=b, c=c)
</code></pre>
<p>Output :</p>
<pre><code>a_var --&gt;
1.1.1.1
2.2.2.2
3.3.3.3

b_var --&gt;
IP: 1.1.1.1
IP: 2.2.2.2
IP: 3.3.3.3

c_var --&gt;
ID: dasfsdfs
IP: 1.1.1.1
Name: me

ID: qwrfgvzx
IP: 2.2.2.2
Name: you
</code></pre>
","2024-01-14 10:47:54","1","Answer"
"77814632","","How to Format Lists of Strings and Dictionaries for Email Body in Python","<p>I'm working on a Python script where I need to format three different types of lists into a string that will be used as the body of an email. The lists are as follows:</p>
<p><strong>A list of strings:</strong></p>
<pre><code>a = ['1.1.1.1', '2.2.2.2', '3.3.3.3']
</code></pre>
<p><strong>A list of dictionaries, each containing a single key-value pair:</strong></p>
<pre><code>b = [{'IP': '1.1.1.1'}, {'IP': '2.2.2.2'}, {'IP': '3.3.3.3'}]
</code></pre>
<p><strong>A list of dictionaries with multiple key-value pairs:</strong></p>
<pre><code>c = [{'ID': 'dasfsdfs', 'IP': '1.1.1.1', 'Name': 'me'}, {'ID': 'qwrfgvzx', 'IP': '2.2.2.2', 'Name': 'you'}]
</code></pre>
<p>I want to format these lists so that each element (or key-value pair) appears on a separate line in the email body. Here's the structure I'm aiming for:</p>
<pre><code>a_var --&gt;
1.1.1.1
2.2.2.2
3.3.3.3

b_var --&gt;
IP: 1.1.1.1
IP: 2.2.2.2
IP: 3.3.3.3

c_var --&gt;
ID: dasfsdfs
IP: 1.1.1.1
Name: me

ID: qwrfgvzx
IP: 2.2.2.2
Name: you
</code></pre>
<p>I'm attempting to use inline for loops within an f-string to create this formatted string, but I'm not sure how to correctly apply this for each list, especially for the list of dictionaries with multiple key-value pairs.</p>
<pre><code>my_email = f'''
a_var --&gt;\n{inline for loop for {a}}

b_var --&gt;\n{inline for loop for {b}}

c_var --&gt;\ninline for loop for {c}}
'''
</code></pre>
<p>Can anyone suggest the correct way to achieve this formatting in Python?</p>
","2024-01-14 10:16:46","-1","Question"
"77814536","77814518","","<p>First off, they should have values.</p>
<p>You can use <code>dict.fromkeys()</code>. It accepts an iterable of keys and a value that is used for all the keys in that iterable. It's default to <code>None</code> if you don't specify.</p>
<pre class=""lang-py prettyprint-override""><code>new_keys_to_add = [&quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;]
my_dict = {&quot;a&quot;: 100, &quot;b&quot;: 51, &quot;c&quot;: 215}
my_dict.update(dict.fromkeys(new_keys_to_add, 0))
print(my_dict)
</code></pre>
<p>output:</p>
<pre class=""lang-none prettyprint-override""><code>{'a': 100, 'b': 51, 'c': 215, 'e': 0, 'f': 0, 'g': 0, 'h': 0}
</code></pre>
","2024-01-14 09:44:45","0","Answer"
"77814518","","How do I add a list of keys without values(or a single value) to an existing dictionary?","<p>I'd like to add a list of keys without values to an existing dictionary in python.</p>
<pre class=""lang-py prettyprint-override""><code>new_keys_to_add = ['e', 'f', 'g', 'h']
my_dict = {'a':100, 'b':51, 'c':215}
</code></pre>
<p>I guess I can do the following:</p>
<pre class=""lang-py prettyprint-override""><code>my_dict.update(zip(new_keys_to_add, [0 for i in new_keys_to_add]))
</code></pre>
<p>Is there any way that I can do better without creating a new list?</p>
<p>Or</p>
<pre class=""lang-py prettyprint-override""><code>for i in new_keys_to_add:
    my_dict[i]=0
</code></pre>
<p>But it seems there should be a way to avoid using loops for this..</p>
","2024-01-14 09:36:37","-1","Question"
"77812451","77812398","","<p>Make a list of all the keys you want in the dictionary. Then you can combine this with the split string to make each dictionary, using the technique in <a href=""https://stackoverflow.com/questions/209840/make-a-dictionary-dict-from-separate-lists-of-keys-and-values"">Make a dictionary (dict) from separate lists of keys and values</a></p>
<pre><code>keys = ['ID', 'payment_method', 'email', 'issue_date', 'payment_date', 'amount', 'currency']
resulting_list_of_dicts = [dict(zip(keys, item.split())) for item in list_of_strings]
</code></pre>
","2024-01-13 17:40:34","1","Answer"
"77812445","77812398","","<p>Loop over each line in the string list.</p>
<p>Use <code>split()</code> to get each separate part.</p>
<p>Build a new dictionary from those parts and append it to another list.</p>
<pre><code>list_of_dicts = [] 
for s in list_of_strings:
    parts = s.split()
    list_of_dicts.append({
        'id': parts[0],
        'payment_method': parts[1],
        ... and so on
    })
</code></pre>
","2024-01-13 17:39:32","0","Answer"
"77812398","","How do i convert a list of strings into a list of dictionaries in python?","<p>I'd like to convert a list of structurally similar strings into a list of dictionaries.</p>
<p>Example list of strings:</p>
<pre><code>list_of_strings = [
'ID payment_method email issue_date payment_date amount currency',
'ID payment_method email issue_date payment_date amount currency',
'ID payment_method email issue_date payment_date amount currency',
...
]
</code></pre>
<p>Each snippet of information is sperated by a whitespace inside the strings themselves.</p>
<p>Desired output:</p>
<pre><code>resulting_list_of_dicts = [
dict_1 = {&quot;ID&quot;: &quot;id1&quot;, &quot;payment_method&quot;: &quot;paymentmethod1&quot;, &quot;e_mail&quot;: &quot;email1&quot;, &quot;payment_date&quot;: &quot;paymentdate1&quot;, &quot;amount&quot;: &quot;amount1&quot;, &quot;currency&quot;: &quot;currecny1&quot;},
dict_2 = {&quot;ID&quot;: &quot;id2&quot;, &quot;payment_method&quot;: &quot;paymentmethod2&quot;, &quot;e_mail&quot;: &quot;email1&quot;, &quot;payment_date&quot;: &quot;paymentdate2&quot;, &quot;amount&quot;: &quot;amount2&quot;, &quot;currency&quot;: &quot;currecny2&quot;},
...
]
</code></pre>
<p>I've tried using the string split function, by I am running into trouble when trying to append the sub strings to a dict.</p>
","2024-01-13 17:26:48","-4","Question"
"77812164","77812156","","<p>Modify your <code>addBullet</code> function to use the <code>brands</code> dictionary correctly:</p>
<pre class=""lang-py prettyprint-override""><code>def addBullet():
    global brands  # Declare brands as a global variable
    name = str(input('Enter bullet name: '))
    print('Choose cartridge type')
    print_menu(cartridge_types)
    cType = cartridge_types.get(int(input()))
    if cType == cartridge_types.get(1):
        entries = (2, 3, 4, 6, 9, 10)
        entries_to_remove(entries, brands)
        brands = update_keys(brands)  # Update the global brands dictionary
    print('Choose brand')
    print_menu(brands)
    brand = brands.get(int(input()))
</code></pre>
<p>Now, when you call <code>brands = update_keys(brands)</code> inside the function, it should work without any errors, and your <code>brands</code> dictionary will be updated with the modified keys as you intended.</p>
<p>Update: I agree with @barmar comment. You should use list.</p>
","2024-01-13 16:20:45","1","Answer"
"77812156","","Reassign dictionary key values","<p>I have this dictionary</p>
<pre><code>brands = {
1: 'BPR Performance Rimfire',
2: 'M22',
3: 'M22 Subsonic',
4: 'Super Suppressed',
5: 'Super X',
6: 'USA',
7: 'Varmint HE',
8: 'Varmint LF',
9: 'Wildcat',
10: 'Xpert', }
</code></pre>
<p>and depending on some user selection I want to display a subset of this dictionary in the form of a menu, which I can do but I would like to update the keys so that if I'm only showing three elements such as</p>
<pre><code>1 -- BPR Performance Rimfire
5 -- Super X
7 -- Varmint HE
</code></pre>
<p>I could reassign the number corresponding to the option, for example</p>
<pre><code>1 -- BPR Performance Rimfire
2 -- Super X
3 -- Varmint HE
</code></pre>
<p>To do so, I have made these two functions</p>
<pre><code>def entries_to_remove(entries, dictionary):
    for key in entries:
        if key in dictionary:
            del dictionary[key]

def update_keys(dictionary):
    dict_copy = dictionary.copy()
    key_n = 1
    for k in dictionary:
        dict_copy[key_n] = dict_copy.pop(k)
        key_n = key_n + 1
    return dict_copy
</code></pre>
<p>then I define the entries to remove, which works</p>
<pre><code>entries = (2, 3, 4, 6, 9, 10)
entries_to_remove(entries, brands)
</code></pre>
<p>and then call</p>
<pre><code>brands = update_keys(brands)
</code></pre>
<p>which gives me an error in the function entries_to_remove</p>
<pre><code>  File &quot;C:\Users\teide\Documents\Guns\moa_clicks.py&quot;, line 70, in addBullet
entries_to_remove(entries, brands)
                           ^^^^^^
UnboundLocalError: cannot access local variable 'brands' where it is not associated with a value
</code></pre>
<p>If I comment out <code>brands = update_keys(brands)</code> the code executes normally and gives me the expected result</p>
<pre><code>Choose brand
1 -- BPR Performance Rimfire
5 -- Super X
7 -- Varmint HE
8 -- Varmint LF
</code></pre>
<p>I don't understand what I'm doing wrong and some help would be greatly appreciated.</p>
<p>I'm adding the full code that I have at the moment</p>
<pre><code>menu_options = {
    1: 'Add bullet type',
    2: 'Calculate MOA clicks',
    3: 'Exit',
}

cartridge_types = {
    1: '17 HMR',
    2: '17 Win Super Mag',
    3: '22 Long',
    4: '22 Long Rifle',
    5: '22 Short',
    6: '22 Win Mag',
    7: '22 WRF',
}

brands = {
    1: 'BPR Performance Rimfire',
    2: 'M22',
    3: 'M22 Subsonic',
    4: 'Super Suppressed',
    5: 'Super X',
    6: 'USA',
    7: 'Varmint HE',
    8: 'Varmint LF',
    9: 'Wildcat',
    10: 'Xpert',
}
      
def print_menu(menu):
    for key in menu.keys():
        print (key, '--', menu[key] )  
        

def entries_to_remove(entries, dictionary):
    for key in entries:
        if key in dictionary:
            del dictionary[key]

def update_keys(dictionary):
    dict_copy = dictionary.copy()
    key_n = 1
    for k in dictionary:
        dict_copy[key_n] = dict_copy.pop(k)
        key_n = key_n + 1
    return dict_copy

def addBullet():  
        name = str(input('Enter bullet name: '))
        print('Choose cartridge type')
        print_menu(cartridge_types)
        cType = cartridge_types.get(int(input()))
        if cType == cartridge_types.get(1):
            entries = (2, 3, 4, 6, 9, 10)
            entries_to_remove(entries, brands)
            #brands = update_keys(brands)
            
        print('Choose brand')
        print_menu(brands)
        brand = brands.get(int(input()))
        


while(True):
    print_menu(menu_options)
    option = int(input('Enter your choice: ')) 
    if option == 1:
        addBullet()
    elif option == 2:
        calculateMOA()
    elif option == 3:
        print('Goodbye')
        exit()
    else:
        print('Invalid option. Please enter a number between 1 and 3.')
        
</code></pre>
","2024-01-13 16:16:32","0","Question"
"77811825","77811689","","<p>Using a <em>hacky</em> <a href=""https://docs.python.org/3/library/collections.html#collections.defaultdict"" rel=""nofollow noreferrer""><code>defaultdict</code></a> :</p>
<pre><code>from collections import defaultdict

genid = defaultdict(lambda: len(genid) + 1)

out = {
    k: v if v in (&quot;VDD&quot;, &quot;GND&quot;)
    else genid[v] for k, v in my_dict.items()
}
</code></pre>
<p>Output (<em>before/after</em>) :</p>
<pre><code>{                    #    {
    &quot;1&quot;: &quot;VDD&quot;,      #        &quot;1&quot;: &quot;VDD&quot;,   # &lt; unchanged
    &quot;2&quot;: &quot;VDD&quot;,      #        &quot;2&quot;: &quot;VDD&quot;,   # &lt; unchanged
    &quot;7&quot;: &quot;VDD&quot;,      #        &quot;7&quot;: &quot;VDD&quot;,   # &lt; unchanged
    &quot;0&quot;: 0,          #        &quot;0&quot;: 1,       # &lt; updated : grp1
    &quot;3&quot;: 0,          #        &quot;3&quot;: 1,       # &lt; updated : grp1
    &quot;4&quot;: 0,          #        &quot;4&quot;: 1,       # &lt; updated : grp1
    &quot;6&quot;: 9,          #        &quot;6&quot;: 2,       # &lt; updated : grp2
    &quot;13&quot;: 9,         #        &quot;13&quot;: 2,      # &lt; updated : grp2
    &quot;GND&quot;: &quot;GND&quot;,    #        &quot;GND&quot;: &quot;GND&quot;, # &lt; unchanged
    &quot;15&quot;: &quot;GND&quot;,     #        &quot;15&quot;: &quot;GND&quot;,  # &lt; unchanged
    &quot;12&quot;: 12         #        &quot;12&quot;: 3       # &lt; updated : grp3
}                    #    }
</code></pre>
","2024-01-13 14:42:51","1","Answer"
"77811735","77811689","","<pre><code>def set_dict_keys():
    my_dict = {1: 'VDD', 2: 'VDD', 7: 'VDD', 0: 0, 3: 0, 4: 0, 6: 9, 13: 9, 'GND': 'GND', 15: 'GND', 12: 12}
    print(my_dict)
    output = {}
    mappings = {}
    current_value = 1
    for key, value in my_dict.items():
        if value not in ['VDD', 'GND']:
            if value not in mappings:
                mappings[value] = current_value
                current_value += 1
            output[key] = mappings[value]
        else:
            output[key] = value
    print(output)

set_dict_keys()
</code></pre>
<p>The idea is to keep a mapping of values to IDs, then loop through all <code>my_dict</code> items and update the <code>output</code> dict.</p>
","2024-01-13 14:12:19","1","Answer"
"77811689","","change and give id to values in dictionary","<p>I have many <strong>Dynamic</strong> dictionary like this:
<code>{1: 'VDD', 2: 'VDD', 7: 'VDD', 0: 0, 3: 0, 4: 0, 6: 9, 13: 9, 'GND': 'GND', 15: 'GND', 12: 12} </code>
I want to set ID as values for keys that they are not 'VDD' and 'GND' .
In this case the keys that have the same value must have the same ID .
IDs must start from 1 .</p>
<p>as you see I want Output like this:
<code>{1: 'VDD', 2: 'VDD', 7: 'VDD', 0: 1, 3: 1, 4: 1, 6: 2, 13: 2, 'GND': 'GND', 15: 'GND', 12: 3}</code></p>
<p>I try this :</p>
<pre><code>my_dict = {1: 'VDD', 2: 'VDD', 7: 'VDD', 0: 0, 3: 0, 4: 0, 6: 9, 13: 9, 'GND': 'GND', 15: 'GND', 12: 12}
i=1
for item in my_dict :
    if my_dict[item] != 'VDD':
        if my_dict[item] != 'GND':
            b = my_dict [item]
            my_dict[item] = i
            if b != :
                i+=1
</code></pre>
<p>but i cant figure out ...</p>
","2024-01-13 13:57:35","0","Question"
"77810771","77810230","","<p>I think below will help you.</p>
<pre><code>{k : dict(zip(A, bs)) for k, bs in zip(C, B)} 
</code></pre>
","2024-01-13 08:26:05","1","Answer"
"77810243","77810230","","<p>The command below gives the desired result:</p>
<pre class=""lang-py prettyprint-override""><code>{c: dict(zip(A, b)) for b in B for c in C}
</code></pre>
<p>It is not recommended to use this syntax <code>range(len(C))</code> to loop over iterables in Python.</p>
<p>Refer to this answer to another question <a href=""https://stackoverflow.com/a/209854"">https://stackoverflow.com/a/209854</a> for how the constructor <code>dict</code> works with the <code>zip</code> built-in function.</p>
","2024-01-13 03:47:50","1","Answer"
"77810230","","Create a nested dictionary in Python using nested lists","<p>I have three lists:</p>
<pre><code>A = ['a','b','c']
B = [[1,2,3],[4,5,6]]
C = ['A','B']
</code></pre>
<p>And I need to create a dictionary with the following characteristics:</p>
<pre><code>{'A':{'a':1, 'b':2, 'c':3}, 'B':{'a':4, 'b':5, 'c':6}}
</code></pre>
<p>This is my code but it fails because the second loop only shows me the latest iteration.</p>
<p><strong>My code:</strong></p>
<pre><code>{C[j]: {A[i]:B[j][i]} 
    for j in range(len(C))
        for i in range(len(A))}
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'A': {'c': 3},
 'B': {'c': 6}}
</code></pre>
<p>Any idea how to produce the desired dictionary?</p>
","2024-01-13 03:37:02","0","Question"
"77809920","77809818","","<p>You can take advantage of the fact that maps are sorted. This means you can iterate over both maps at the same time. If the keys are different, then you move to the next element of the map with the &quot;lesser&quot; key, to &quot;catch up&quot; with the other map. If the keys are identical, you check the value and then move to the next element of both maps.</p>
<p>In code, something like this:</p>
<pre class=""lang-cpp prettyprint-override""><code>using MyMap = map&lt;set&lt;int&gt;, vector&lt;int&gt;&gt;;

bool mergable(MyMap const&amp; a, MyMap const&amp; b) {
    auto aIt = a.begin();
    auto bIt = b.begin();

    while (aIt != a.end() &amp;&amp; bIt != b.end()) {
        if (aIt-&gt;first &lt; bIt-&gt;first) {
            // a's key is less than b's key -&gt; move to a's next entry
            ++aIt;
        } else if (bIt-&gt;first &lt; aIt-&gt;first) {
            // b's key is less than a's key -&gt; move to b's next entry
            ++bIt;
        } else {
            // the keys are equal -&gt; make sure the values are equal...
            if (aIt-&gt;second != bIt-&gt;second) {
                return false; // value mismatch -&gt; not mergable
            }
            // ...and advance to next entry of a and b
            ++aIt;
            ++bIt;
        }
    }

    return true; // no mismatches found -&gt; maps are mergable
}
</code></pre>
<p>This doesn't require copying anything and should run in <strong>O(max(n, m))</strong>, where <strong>n</strong> and <strong>m</strong> are the number of elements in the maps.</p>
","2024-01-13 00:38:54","2","Answer"
"77809846","77809818","","<h2>The easy way</h2>
<blockquote>
<p>I want to check if, on those keys, the corresponding values agree.</p>
</blockquote>
<p>You can implement that idea much more directly.
Simply go through all those keys the maps have in common and check if the values are the same.</p>
<p><a href=""https://en.cppreference.com/w/cpp/algorithm/all_any_none_of"" rel=""nofollow noreferrer""><code>std::all_of</code></a> is quite convenient in this case.</p>
<pre class=""lang-cpp prettyprint-override""><code>bool mergable(const map&lt;set&lt;int&gt;, vector&lt;int&gt;&gt; &amp;map1,
              const map&lt;set&lt;int&gt;, vector&lt;int&gt;&gt; &amp;map2)
{
    return all_of(map1.begin(), map1.end(), [&amp;map2](const auto&amp; pair) {
        auto it = map2.find(pair.first);
        // note: the it == map2.end() part means that keys which aren't found
        //       in both maps don't have to be equal; only the common keys must be.
        return it == map2.end() || *it == pair.second;
    };
}
</code></pre>
<p>This solution is amortized O(n log n)<sup>(1)</sup> because iterating over a <code>std::map</code> is amortized O(n), and the look-up through <code>.find()</code> is O(log n).</p>
<p><sup>(1)</sup> ignoring the cost of the <code>std::vector</code> comparisons</p>
<h2>The hard way</h2>
<p>With some extra work, you can squeeze out a faster solution.
Since you're working with <code>std::map</code>s, the the key-value pairs are ordered, and you can come up with an O(n) solution.</p>
<p>In essence, you perform something like a <code>std::set_union</code> except that you don't output anything, you just return early if equivalent keys don't have equal values.</p>
<pre class=""lang-cpp prettyprint-override""><code>using Iter = map&lt;set&lt;int&gt;, vector&lt;int&gt;&gt;::const_iterator;

bool mergable(Iter first1, Iter last1,
              Iter first2, Iter last2)
{
    while (first1 != last1 &amp;&amp; first2 != last2) {
        // this may be done faster in C++20 with a three-way comparison
        if (first1-&gt;first &lt; first2-&gt;first)
            ++first1;
        else if (first2-&gt;first &lt; first1-&gt;first)
            ++first2;
        // if neither key is lower, the keys are equivalent, and
        // the values must be equal
        else if (first1-&gt;second != first2-&gt;second)
            return false;
        else {
            ++first1;
            ++first2;
        }
    }
    // Finished either range; the rest doesn't matter
    return true;
}
</code></pre>
","2024-01-12 23:59:26","3","Answer"
"77809818","","Checking two std::map with some shared keys if overlapping keys map to the same values","<p>I have two maps that might have some overlapping keys. I want to check if, on those keys, the corresponding values agree. What is the best (fastest) way to implement this?</p>
<p>I have a rudimentary implementation using the insert function below:</p>
<pre><code>bool mergable(map&lt;set&lt;int&gt;, vector&lt;int&gt;&gt; map1, map&lt;set&lt;int&gt;, vector&lt;int&gt;&gt; map2) {
    map1.insert(map2.begin(), map2.end());
    map2.insert(map1.begin(), map1.end());
    if (map1 == map2) {
        return true;
    }
    cout &lt;&lt; &quot;Dictionaries not mergable&quot; &lt;&lt; endl;
    return false;
}
</code></pre>
<p>For this implementation, I have to pass copies of my maps to avoid modifying them. I'm sure that there's a faster way to do this. For me, one map is usually smaller than the other, but both have at most around 20 keys.</p>
","2024-01-12 23:49:09","1","Question"
"77807829","77807250","","<p>I would personally just flatten this by hand.</p>
<pre class=""lang-py prettyprint-override""><code>import pandas

data = {
   &quot;test&quot;: [
       {
           &quot;landje&quot;: &quot;ES&quot;,
           &quot;broodje&quot;: [
               {&quot;coupon&quot;: &quot;abcde&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;1234&quot;}], &quot;days_due&quot;: [&quot;1&quot;]},
               {&quot;coupon&quot;: &quot;zxcv&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;2345&quot;}], &quot;days_due&quot;: [&quot;2&quot;]}
           ]
       },
       {
           &quot;landje&quot;: &quot;FR&quot;,
           &quot;broodje&quot;: [
               {&quot;coupon&quot;: &quot;ergd&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;4567&quot;}], &quot;days_due&quot;: [&quot;3&quot;]},
               {&quot;coupon&quot;: &quot;tygh&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;7789&quot;}], &quot;days_due&quot;: [&quot;4&quot;]}
           ]
       }
   ]
}

data_flattened = [
    {
        &quot;landje&quot;: row[&quot;landje&quot;],
        &quot;broodje_coupon&quot;: broodje[&quot;coupon&quot;],
        &quot;broodje_aap_type&quot;: aap[&quot;type&quot;],
        &quot;broodje_aap_dirk_code&quot;: aap[&quot;dirk_code&quot;],
        &quot;broodje_aap_days_due&quot;: days_due,
    }
    for row in data[&quot;test&quot;]
    for broodje in row[&quot;broodje&quot;]
    for aap, days_due in zip(broodje[&quot;aap&quot;], broodje[&quot;days_due&quot;])
]

print(pandas.DataFrame(data_flattened))
</code></pre>
<p>That should give you:</p>
<pre><code>  landje broodje_coupon broodje_aap_type broodje_aap_dirk_code broodje_aap_days_due
0     ES          abcde             dirk                  1234                    1
1     ES           zxcv             dirk                  2345                    2
2     FR           ergd             dirk                  4567                    3
3     FR           tygh             dirk                  7789                    4
</code></pre>
","2024-01-12 16:01:02","0","Answer"
"77807749","77806087","","<h2>Nested Dictionary in Each Class Object Located in a Collection</h2>
<p><strong><code>Debug.Print</code> Result</strong></p>
<pre><code>Winner: Winner1
Present1       25000 
1 present(s) for 25000
Winner: Winner2
Present2       10000 
Present3       3000 
Present4       2000 
3 present(s) for 15000
Winner: Winner3
Present3       3000 
Present4       2000 
2 present(s) for 5000
</code></pre>
<p><strong>Standard Module e.g. <code>Module1</code></strong></p>
<pre class=""lang-vb prettyprint-override""><code>Option Explicit

Sub PrintTest()

    Dim winners As Collection: Set winners = CollWinners
    
    Dim obj As Class2, pKey As Variant
    
    For Each obj In winners
        Debug.Print &quot;Winner: &quot; &amp; obj.SellerName
        For Each pKey In obj.Presents.Keys
            Debug.Print pKey, obj.Presents(pKey)
        Next pKey
        Debug.Print obj.Presents.Count &amp; &quot; present(s) for &quot; &amp; obj.FillLevel
    Next obj

End Sub
</code></pre>
<pre class=""lang-vb prettyprint-override""><code>' Main Function
Function CollWinners() As Collection
    
    Dim winnersList As New Scripting.Dictionary
    winnersList.Add &quot;Winner1&quot;, 25000
    winnersList.Add &quot;Winner2&quot;, 15000
    winnersList.Add &quot;Winner3&quot;, 5000
    
    Dim presentsList As New Scripting.Dictionary
    presentsList.Add &quot;Present1&quot;, 25000
    presentsList.Add &quot;Present2&quot;, 10000
    presentsList.Add &quot;Present3&quot;, 3000
    presentsList.Add &quot;Present4&quot;, 2000
    
    'Just sorting presentsList in xlDescending order.
    'Set presentsList = SortDictionaryByValue(presentsList, xlDescending)
    
    Dim objectsCollection As Collection: Set objectsCollection = New Collection
    
    Dim eachPresentDict As Scripting.Dictionary
    Dim WinnerKey As Variant, PresentKey As Variant
    Dim WinnerValue As Long, PresentValue As Long, TotalSum As Long
    
    For Each WinnerKey In winnersList.Keys
        WinnerValue = winnersList(WinnerKey)
        TotalSum = 0
        Set eachPresentDict = New Scripting.Dictionary
        For Each PresentKey In presentsList.Keys
            PresentValue = presentsList(PresentKey)
            If PresentValue &lt;= WinnerValue - TotalSum Then
                eachPresentDict.Add PresentKey, PresentValue
                TotalSum = TotalSum + PresentValue
            End If
        Next PresentKey
        objectsCollection.Add GetSellerPresentsObject(CStr(WinnerKey), _
            eachPresentDict, CLng(TotalSum))
    Next WinnerKey
               
    Set CollWinners = objectsCollection
               
End Function
</code></pre>
<pre class=""lang-vb prettyprint-override""><code>' Class Object Creator
Function GetSellerPresentsObject( _
    ByVal SellerName As String, _
    ByVal Presents As Scripting.Dictionary, _
    ByVal FillLevel As Long) _
As Class2
    Dim obj As Class2: Set obj = New Class2
    obj.SellerName = SellerName
    Set obj.Presents = Presents
    obj.FillLevel = FillLevel
    Set GetSellerPresentsObject = obj
End Function
</code></pre>
<p><strong>Class Module <code>Class2</code></strong></p>
<pre><code>Option Explicit

Public SellerName As String   'Winner name
Public Presents As Scripting.Dictionary   'Dictionary of assigned presents
Public FillLevel As Long   'Total price of his presents
</code></pre>
","2024-01-12 15:48:50","1","Answer"
"77807250","","Flattening/normalizing a deeply nested dictionary with duplicate keys","<p>I am trying to flatten my deeply nested dictionary with duplicate keys so that finally I can create a pandas dataframe. I have tried several steps with normalization but I can't figure it out.</p>
<pre><code>from pandas import json_normalize

data = {
   &quot;test&quot;: [
       {
           &quot;landje&quot;: &quot;ES&quot;,
           &quot;broodje&quot;: [
               {&quot;coupon&quot;: &quot;abcde&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;1234&quot;}], &quot;days_due&quot;: [&quot;1&quot;]},
               {&quot;coupon&quot;: &quot;zxcv&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;2345&quot;}], &quot;days_due&quot;: [&quot;2&quot;]}
           ]
       },
       {
           &quot;landje&quot;: &quot;FR&quot;,
           &quot;broodje&quot;: [
               {&quot;coupon&quot;: &quot;ergd&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;4567&quot;}], &quot;days_due&quot;: [&quot;3&quot;]},
               {&quot;coupon&quot;: &quot;tygh&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;7789&quot;}], &quot;days_due&quot;: [&quot;4&quot;]}
           ]
       }
   ]
}

def flatten_dict(d, parent_key='', sep='_'):
   items = []
   if isinstance(d, dict):
       for k, v in d.items():
           new_key = f&quot;{parent_key}{sep}{k}&quot; if parent_key else k
           if isinstance(v, dict):
               items.extend(flatten_dict(v, new_key, sep=sep).items())
           elif isinstance(v, list):
               for i, item in enumerate(v):
                   items.extend(flatten_dict(item, f&quot;{new_key}&quot;, sep=sep).items())
           else:
               items.append((new_key, v))
   return dict(items)

# Extract the unique keys from the data dictionary
keys = data.keys()

for key in keys:
   flat_dicts = [flatten_dict(item) for item in data[key]]
   for flat_dict in flat_dicts:
       print(flat_dict)
</code></pre>
<p>This gives me the following output:</p>
<pre><code>{'landje': 'ES', 'broodje_coupon': 'zxcv', 'broodje_aap_type': 'dirk', 'broodje_aap_dirk_code': '2345'}
{'landje': 'FR', 'broodje_coupon': 'tygh', 'broodje_aap_type': 'dirk', 'broodje_aap_dirk_code': '7789'}
</code></pre>
<p>I  am missing two rows to fill my dataframe with.</p>
<p>I would like my final result to look like the example shown below. The column names are not that important but I want to extract all the information.</p>
<p>What is another way than flattening the dictionary but using for example pd.json_normalize?</p>
<p>I did not get that without hardcoding the record_path or meta.</p>
<pre><code>          landje          broodje_coupon          broodje_aap_type          broodje_aap_dirk_code          broodje_aap_days_due
0          ES                 abcde                      dirk                          1234                         1
1          ES                 zxcv                       dirk                          2345                         2
2          FR                 ergd                       dirk                          4567                         3
3          FR                 tygh                       dirk                          7789                         4
</code></pre>
","2024-01-12 14:26:01","0","Question"
"77807111","77806087","","<p>In addition to not using the <code>Set</code> keyword, you</p>
<ul>
<li><p>refer to the wrong dictionary in your loop</p>
</li>
<li><p><code>EachPresentDict.RemoveAll</code> is messing up what is stored in your <code>obj</code></p>
</li>
<li><p><em>I'm not sure what values you expect in your <code>obj</code> so you may have to adjust the loop</em></p>
</li>
</ul>
<p><em><strong>Edit:</strong><br>To show a distribution method where presents are picked in order of their entry in the presents dictionary, until the funds run out, the code has been modified to implement that logic</em></p>
<p>Try this modification:</p>
<pre><code>Option Explicit

Sub DistributePrize()
    
    Dim winnersList As New Scripting.Dictionary
    Dim presentsList As New Scripting.Dictionary
        
    'some test data for Winners Dictionary
    winnersList.Add &quot;Winner1&quot;, 25000
    winnersList.Add &quot;Winner2&quot;, 15000
    winnersList.Add &quot;Winner3&quot;, 5000
    
    'some test data for Presents Dictionary
    presentsList.Add &quot;Present1&quot;, 25000
    presentsList.Add &quot;Present2&quot;, 10000
    presentsList.Add &quot;Present3&quot;, 3000
    presentsList.Add &quot;Present4&quot;, 2000
    
    'Just sorting presentsList in xlDescending order.
    'Set presentsList = SortDictionaryByValue(presentsList, xlDescending)
            
    Dim winnerKey, presentsKey As Variant
    Dim objectsCollection As New Collection
    Dim EachPresentDict As New Scripting.Dictionary
    
    Dim totalSum As Long
    
    For Each winnerKey In winnersList
    Set EachPresentDict = New Scripting.Dictionary
    totalSum = 0
        For Each presentsKey In presentsList
            If totalSum + presentsList(presentsKey) &lt;= winnersList(winnerKey) Then
                EachPresentDict.Add presentsKey, presentsList(presentsKey)
                totalSum = totalSum + presentsList(presentsKey)
            End If
         Next presentsKey
            
         objectsCollection.Add GetSellerPresentsObject(CStr(winnerKey), EachPresentDict, CLng(totalSum))
         
    Next winnerKey
               
End Sub

Function GetSellerPresentsObject(slrname As String, prsnts As Dictionary, flevel As Long)
    Dim obj As New Class2
    obj.SellerName = slrname
    Set obj.Presents = prsnts
    obj.FillLevel = flevel
    Set GetSellerPresentsObject = obj
End Function
</code></pre>
<p><em>If you prefer using the <code>RemoveAll</code> method, put it just after the <strong>start</strong> of your <code>Each WinnerKey loop</code></em></p>
","2024-01-12 14:00:27","2","Answer"
"77807057","77806292","","<p>This works:</p>
<pre><code>mergewith!(+, mergewith!((x,y)-&gt;y, P, Q), R, S)
</code></pre>
<p>Inner <code>mergewith!</code> overwrites P with Q, the outer <code>mergewith!</code> adds the other Dicts' values.</p>
<p>There must be a pre-defined function for <code>(x,y)-&gt;y</code>. Someone in a comment help me out...</p>
<p>EDIT: Improved due to Gnimuc and BallpointBen comments:</p>
<pre><code>mergewith!(+, merge!(P, Q), R, S)
</code></pre>
<p>Ah, the benchmark:</p>
<pre><code>julia&gt; @btime mergewith!(+, merge!($P, $Q), $R, $S);
  100.487 ns (0 allocations: 0 bytes)
Dict{String, Int64} with 3 entries:
  &quot;c&quot; =&gt; 8
  &quot;b&quot; =&gt; 17
  &quot;a&quot; =&gt; 8
</code></pre>
<p>There are still more efficiency gains to be made if the dictionaries are the same concrete type.</p>
<p>ADDED: Per comment just above, here is another method to get comparable speed:</p>
<pre><code>foreach(keys(P)) do k
    P[k] = sum(D[k] for D in (Q,R,S))
end
</code></pre>
<p>and for the reckless and danger seeking (think racecars):</p>
<pre><code>foreach(keys(P)) do k
    index = Base.ht_keyindex(P, k)
    P.vals[index] = sum(D.vals[index] for D in (Q,R,S))
end
</code></pre>
<p>These benchmark:</p>
<pre><code>julia&gt; @btime foreach(keys($P)) do k
       $P[k] = sum(D[k] for D in ($Q,$R,$S))
       end
  103.624 ns (0 allocations: 0 bytes)

julia&gt; @btime foreach(keys($P)) do k
       index = Base.ht_keyindex($P, k)
       $P.vals[index] = sum(D.vals[index] for D in ($Q,$R,$S))
       end
  31.562 ns (0 allocations: 0 bytes)
</code></pre>
<p>That is, the first is comparable, and the second is significantly faster (but depends crucially on similarity of Dict implementation and construction).</p>
","2024-01-12 13:49:33","4","Answer"
"77806292","","Overwrite values of dictionary without memory allocation in Julia","<p>I am using Julia 1.9.0.</p>
<p><code>P</code>, <code>Q</code>, <code>R</code>, and <code>S</code> are dictionaries whose keys are the same such as</p>
<pre><code>P = Dict(&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2, &quot;c&quot;=&gt;3)
Q = Dict(&quot;a&quot;=&gt;2, &quot;b&quot;=&gt;4, &quot;c&quot;=&gt;2)
R = Dict(&quot;a&quot;=&gt;2, &quot;b&quot;=&gt;4, &quot;c&quot;=&gt;5)
S = Dict(&quot;a&quot;=&gt;4, &quot;b&quot;=&gt;9, &quot;c&quot;=&gt;1)
</code></pre>
<p>I want to overwrite the dict <code>P</code> with the sum of <code>Q</code>, <code>R</code>, <code>S</code> on the same keys. I mean, I would like to get</p>
<pre><code>P = merge(+, [Q,R,S]...)
</code></pre>
<p>Can we do that without memory allocation? I will use dicts <code>Q</code>, <code>R</code>, and <code>S</code> later, so they cannot be overwritten. But I do not need <code>P</code> anymore. That is why only <code>P</code> can be overwritten.</p>
<p>My current code <code>P = merge(+, [Q,R,S]...)</code> requires the memory allocation. I am finding alternatives without (or less) memory allocation.</p>
<pre><code>using BenchamrkTools
@btime P = merge(+, [Q,R,S]...)
1.583 μs (10 allocations: 736 bytes)
</code></pre>
<p><strong>Edit</strong></p>
<p>For simplicity, I am just describing a situation when the number of keys is 3. But actually, the number of keys is ~10k, and the number of dictionaries is ~20.</p>
","2024-01-12 11:38:42","2","Question"
"77806109","77805865","","<p>Your dictionary is incorrect. In dicts duplicate keys are not allowed. In your dictionary the keys <code>landje</code> and <code>broodje</code> are repeated. So the correct version would be:</p>
<pre><code>data = {
   &quot;test&quot;: [{
       &quot;landje&quot;: &quot;ES&quot;,
       &quot;broodje&quot;: [
           {
               &quot;coupon&quot;: &quot;abcde&quot;,
               &quot;aap&quot;: {&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;1234&quot;},
               &quot;days_due&quot;: &quot;1&quot;
           },
           {
               &quot;coupon&quot;: &quot;zxcv&quot;,
               &quot;aap&quot;: {&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;2345&quot;},
               &quot;days_due&quot;: &quot;2&quot;
           }
       ]},
       {&quot;landje&quot;: &quot;FR&quot;,
       &quot;broodje&quot;: [
           {
               &quot;coupon&quot;: &quot;qwer&quot;,
               &quot;aap&quot;: {&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;1234&quot;},
               &quot;days_due&quot;: &quot;3&quot;
           },
           {
               &quot;coupon&quot;: &quot;tyui&quot;,
               &quot;aap&quot;: {&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;2345&quot;},
               &quot;days_due&quot;: &quot;4&quot;
           }
       ]
   }]}
</code></pre>
<p>Then use <strong><a href=""https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html"" rel=""nofollow noreferrer""><code>json_normalize()</code></a></strong>:</p>
<pre><code>df_nested = json_normalize(data[&quot;test&quot;],record_path=[&quot;broodje&quot;],meta='landje')
</code></pre>
<p><strong>Out</strong>:</p>
<pre><code>  coupon days_due aap.type aap.dirk_code landje
0  abcde        1     dirk          1234     ES
1   zxcv        2     dirk          2345     ES
2   qwer        3     dirk          1234     FR
3   tyui        4     dirk          2345     FR
</code></pre>
","2024-01-12 11:06:14","1","Answer"
"77806087","","Class objects collection with nested Dictionary. Error: Object variable not set (VBA)","<p>I have some <strong>Winners</strong> list. Winners have their <strong>Names</strong> and <strong>Presents Budget</strong>:</p>
<p><a href=""https://i.sstatic.net/sLAAB.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/sLAAB.png"" alt=""enter image description here"" /></a></p>
<hr />
<p>And I have some <strong>Presents</strong> with their <strong>Prices</strong>:</p>
<p><a href=""https://i.sstatic.net/FrvpJ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/FrvpJ.png"" alt=""enter image description here"" /></a></p>
<hr />
<p>Need to create <strong>Class Objects Collection</strong>. Class Object has fields:</p>
<pre><code>Public SellerName As String   'Winner name
Public Presents As Scripting.Dictionary   'Dictionary of assigned presents
Public FillLevel As Long   'Total price of his presents
</code></pre>
<hr />
<p>So each Class Object stores <code>Winner name</code>, his <code>presents as Dictionary</code> and <code>total price</code> of his presents.</p>
<p><a href=""https://i.sstatic.net/qt2Hw.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/qt2Hw.png"" alt=""enter image description here"" /></a></p>
<p>Each winner's presents dictionary should store as much presents as it doesn't exceeds his budget.</p>
<ul>
<li>For example Winner1 have only one element in his Presents Dictionary.</li>
<li>Winner2 have 3 elements is his Presents Dictionary. And both within Budget.</li>
<li>Each winner receives presents starting from the highest price.</li>
</ul>
<hr />
<p>So as a result I have Objects Collection of 3 winners (3 elements in Collection).</p>
<hr />
<p><strong>Code:</strong></p>
<pre><code>Sub DistributePrize()
    
    Dim winnersList As New Scripting.Dictionary
    Dim presentsList As New Scripting.Dictionary
        
    'some test data for Winners Dictionary
    winnersList.Add &quot;Winner1&quot;, 25000
    winnersList.Add &quot;Winner2&quot;, 15000
    winnersList.Add &quot;Winner3&quot;, 5000
    
    'some test data for Presents Dictionary
    presentsList.Add &quot;Present1&quot;, 25000
    presentsList.Add &quot;Present2&quot;, 10000
    presentsList.Add &quot;Present3&quot;, 3000
    presentsList.Add &quot;Present4&quot;, 2000
    
    'Just sorting presentsList in xlDescending order.      
    Set presentsList = SortDictionaryByValue(presentsList, xlDescending)
            
    Dim winnerKey, presentsKey As Variant
    Dim objectsCollection As New Collection
    Dim EachPresentDict As New Scripting.Dictionary
    
    Dim totalSum As Long
    
    For Each winnerKey In winnersList
    totalSum = 0      
        For Each presentsKey In presentsList
            If EachPresentDict.Exists(presentsKey) = False Then
                If totalSum &lt;= winnersList(presentsKey) Then
                    EachPresentDict.Add presentsKey, presentsList(presentsKey)
                    totalSum = totalSum + CLng(presentsList(presentsKey))
                End If
            End If
         Next presentsKey
            
         objectsCollection.Add GetSellerPresentsObject(CStr(winnerKey), EachPresentDict, CLng(totalSum))
         EachPresentDict.RemoveAll
         
    Next winnerKey
               
End Sub
</code></pre>
<hr />
<p>Function for generating class objects:</p>
<pre><code>Function GetSellerPresentsObject(slrname As String, prsnts As Dictionary, flevel As Long)
    Dim obj As New Class2
    obj.SellerName = slrname
    obj.Presents = prsnts
    obj.FillLevel = flevel
    Set GetSellerPresentsObject = obj
End Function
</code></pre>
<hr />
<p>For some reason mistake:</p>
<p><a href=""https://i.sstatic.net/Ehujw.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Ehujw.png"" alt=""enter image description here"" /></a></p>
<p>Code seems correct, but have difficulty in this error: <code>Object varible or With block variable not set</code></p>
","2024-01-12 11:03:05","3","Question"
"77805865","","Normalizing a deeply nested JSON/Dictionary","<p>I am trying to normalize a deeply nested json/dictionary as per example below. Currently the record_path and meta are hardcoded but eventually i want to make it dynamical.</p>
<pre><code>from pandas import json_normalize

data = {
   &quot;test&quot;: [
       {
           &quot;landje&quot;: &quot;ES&quot;,
           &quot;broodje&quot;: [
               {&quot;coupon&quot;: &quot;abcde&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;1234&quot;}], &quot;days_due&quot;: [&quot;1&quot;]},
               {&quot;coupon&quot;: &quot;zxcv&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;2345&quot;}], &quot;days_due&quot;: [&quot;2&quot;]}
           ]
       },
       {
           &quot;landje&quot;: &quot;FR&quot;,
           &quot;broodje&quot;: [
               {&quot;coupon&quot;: &quot;ergd&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;4567&quot;}], &quot;days_due&quot;: [&quot;3&quot;]},
               {&quot;coupon&quot;: &quot;tygh&quot;, &quot;aap&quot;: [{&quot;type&quot;: &quot;dirk&quot;, &quot;dirk_code&quot;: &quot;7789&quot;}], &quot;days_due&quot;: [&quot;4&quot;]}
           ]
       }
   ]
}

# Use json_normalize with meta parameter
df_nested = json_normalize(data, record_path =[&quot;test&quot;,&quot;broodje&quot;], meta=[&quot;landje&quot;, &quot;coupon&quot;, &quot;type&quot;, &quot;dirk_code&quot;,&quot;days_due&quot;])

# Display the resulting DataFrame
print(df_nested)
</code></pre>
<p>However, i would like to look the result something similar to this, the column names are not important but i want to extract all this info:</p>
<pre><code>  landje coupon broodje[*].aap.type test.broodje[*].aap.dirk_code test.broodje[*].days_due
0          ES                  abcde                      dirk                          1234                         1
1          ES                   zxcv                      dirk                          2345                         2
2          FR                  ergd                       dirk                          4567                         3
3          FR                   tygh                      dirk                          7789                         4
</code></pre>
<p>However, i cannot solve the problem on how to extract the meta right. Especially trying to figure out the structure to do it eventually without hardcoding it. Currently i used hardcoding to determine the necessary syntax/structure for meta. Also there needs to be some kind of concat because of the two different &quot;landje&quot; and &quot;broodje&quot;. Any help is welcome and thanks in advance!</p>
","2024-01-12 10:22:04","0","Question"
"77799971","","How to get a map pins screen position in .net maui (Android/iOS)","<p>I wish to open a popup next to a map pin (when pressed), but cannot figure out how to get the screen position of the Pin.</p>
<p>Adding the Pins to the map works fine:</p>
<pre><code>  map.Pins.Add(nameOfPin);
</code></pre>
<p>..and creating an event handler is also straightforward:</p>
<pre><code>  nameOfPin.MarkerClicked += OnPinClickedAsync;
</code></pre>
<p>The event handler below should open the popup next to the Pin, but I cannot get the Pins screen position. Map location is included in the sender object, but as far as I can tell, the screen position is not.</p>
<p>async void OnPinClickedAsync(object? sender, PinClickedEventArgs args)
{
var selectedPin = (Pin)sender;
. . .and then what?? How to get the Pins screen position (Android/iOS)
}</p>
<p>Can anyone help pls?</p>
<p>PS. I have tried to extraxt all information of the Pin object created by the event, but unable to find the pins screen position</p>
","2024-01-11 12:19:37","0","Question"
"77794443","77793761","","<p>As far as I know, a dictionary doesn't guarantee any sorting order. My suggestion is not to sort the dictionary, but an array of the dictionary keys. Use that sorted array to access the elements of the dictionary. The dictionary itself remains untouched.</p>
<p>The code of your tester routine would look like</p>
<pre><code>'Calling sort by &quot;salary&quot;
Dim sortedkeys, key
sortedkeys = SortObjects(dict, &quot;Salary&quot;, False)
Debug.Print &quot;---------By Salary (Highest to Lowest)-------&quot;
For Each key In sortedkeys
    Dim e As Class1
    Set e = dict(key)
    Debug.Print key, e.Salary, e.Revenue, e.Position
Next key
</code></pre>
<p>The sorting routine (it is now a function) that returns the sorted keys keeps the dictionary as it is, reads the keys into an array and sorts that array by reading the given property of the items stored in the dictionary. I added an optional parameter so that the routine can sort ascending or descending - of course you could achieve this also by traveling backwards through the sorted array.</p>
<pre><code>' Sorting the keys of a dictionary using a given property 'propName'
Function SortObjects(dict As Dictionary, propName As String, Optional ascending As Boolean = True) As Variant
    Dim keys
    keys = dict.keys
    
    Dim i As Long, j As Long
    For i = LBound(keys) To UBound(keys) - 1
        For j = i + 1 To UBound(keys)
            Dim v1, v2
            v1 = CallByName(dict(keys(i)), propName, VbGet)
            v2 = CallByName(dict(keys(j)), propName, VbGet)
        
            If (v1 &gt; v2 And ascending) Or (v1 &lt; v2 And Not ascending) Then
                Dim vTmp
                vTmp = keys(j)          'swap positions in the &quot;comparison&quot; array
                keys(j) = keys(i)
                keys(i) = vTmp
            End If
        Next j
    Next i
    SortObjects = keys
End Function
</code></pre>
<hr />
<p>N.B.: I usually add the ID as property to the class itself.</p>
","2024-01-10 15:18:21","2","Answer"
"77793761","","Sorting Dictionary by nested class objects data [VBA]","<p>I have a <strong>Dictionary</strong> with a <strong>ID</strong> (string) as <code>Key</code> and nested Class <strong>object</strong> as its <code>Item</code>. Dictionary looks like this:</p>
<pre><code>Key: &quot;ID1&quot;, Item: obj1
Key: &quot;ID2&quot;, Item: obj2
Key: &quot;ID3&quot;, Item: obj3
</code></pre>
<p><em>and so on...</em></p>
<p>Each <strong>class object</strong> has fields:</p>
<pre><code>Public Salary As Double
Public Revenue As Double
Public Position As String
</code></pre>
<hr />
<p>Here is the code:</p>
<pre><code>Sub Tester()

    Dim dict As Object, i As Long, itms, e
    Set dict = CreateObject(&quot;scripting.dictionary&quot;)
    
    'some test data for Dictionary
    For i = 1 To 10
        dict.Add &quot;ID&quot; &amp; i, GetTestObject(i, -i, &quot;Job_&quot; &amp; i)
    Next i
    itms = dict.Items
     
    'Calling sort by &quot;salary&quot;
    SortObjects itms, &quot;Salary&quot;
    
    Debug.Print &quot;---------By Salary (Highest to Lowest)-------&quot;
    For Each e In itms
        Debug.Print e.Salary, e.Revenue, e.Position
    Next e
       
End Sub
</code></pre>
<hr />
<p><strong>Test class objects returned by Function:</strong></p>
<pre><code>Function GetTestObject(slr As Long, rvn As Long, pst As String)
    Dim obj As New Class1
    obj.Salary = slr
    obj.Revenue = rvn
    obj.Position = pst
    Set GetTestObject = obj
End Function
</code></pre>
<p><strong>Sorting of Items in Dictionary done by this:</strong></p>
<pre><code>'Sorting an array of objects using a given property 'propName'
Sub SortObjects(list, propName As String)
    Dim First As Long, Last As Long, i As Long, j As Long, vTmp, oTmp As Object, arrComp()
    First = LBound(list)
    Last = UBound(list)
    'fill the &quot;compare&quot; array...
    ReDim arrComp(First To Last)
    For i = First To Last
        arrComp(i) = CallByName(list(i), propName, VbGet)
    Next i
    'now sort by comparing on `arrComp` not `list`
    For i = First To Last - 1
        For j = i + 1 To Last
            If arrComp(i) &lt; arrComp(j) Then
                vTmp = arrComp(j)          'swap positions in the &quot;comparison&quot; array
                arrComp(j) = arrComp(i)
                arrComp(i) = vTmp
                Set oTmp = list(j)             '...and in the original array
                Set list(j) = list(i)
                Set list(i) = oTmp
            End If
        Next j
    Next i
End Sub
</code></pre>
<hr />
<p><strong>I print the dictionary:</strong></p>
<pre><code>    Debug.Print &quot;---------By Salary (Highest to Lowest)-------&quot;
    For Each e In itms
        Debug.Print e.Salary, e.Revenue, e.Position
    Next e
</code></pre>
<hr />
<p><strong>RESULT:</strong></p>
<pre><code>---------By Salary (Highest to Lowest)-------
 10           -10           Job_10
 9            -9            Job_9
 8            -8            Job_8
 7            -7            Job_7
 6            -6            Job_6
 5            -5            Job_5
 4            -4            Job_4
 3            -3            Job_3
 2            -2            Job_2
 1            -1            Job_1
</code></pre>
<p>So, it is sorted correctly by <strong>Salary</strong> and I printed corresponding values <strong>Salary</strong> <strong>Revenue</strong> and <strong>Job</strong>. And is printed in descending order <strong>correctly</strong>.</p>
<hr />
<p>But how can I also print each element with its <strong>ID (Key)</strong> in sorted order?
I got sorted array of <strong>Items (objects)</strong> and printed. How can I also access and print corresponding <code>ID (Key)</code> of each element in sorted Dicionary of <code>&lt;IDs&gt;, &lt;objects&gt;</code>?</p>
<hr />
<p>Basically, I got a sorted data of Dictionary but I lost elements connection with their <strong>IDs (Keys)</strong>. How can I resolve?</p>
","2024-01-10 13:31:10","2","Question"
"77790853","77790539","","<ul>
<li><code>ADO</code> is a suitable method for retrieving the TOP x records.</li>
</ul>
<pre class=""lang-vb prettyprint-override""><code>Option Explicit

Sub ADO_TOP()
    Dim sSrcFile As String
    Dim sSrcSht As String
    Dim oRSCon As Object, sRSData As Object, sDBCon As String, sSQL As String
    Dim i As Long, sSrcRng As String
    sSrcFile = ThisWorkbook.FullName
    sSrcSht = &quot;Sheet1&quot;
    If Val(Application.Version) &lt; 12 Then
        sDBCon = &quot;Provider=Microsoft.Jet.OLEDB.4.0;&quot; &amp; _
            &quot;Data Source=&quot; &amp; sSrcFile &amp; &quot;;&quot; &amp; _
            &quot;Extended Properties=&quot;&quot;Excel 8.0;HDR=YES&quot;&quot;;&quot;
    Else
        sDBCon = &quot;Provider=Microsoft.ACE.OLEDB.12.0;&quot; &amp; _
            &quot;Data Source=&quot; &amp; sSrcFile &amp; &quot;;&quot; &amp; _
            &quot;Extended Properties=&quot;&quot;Excel 12.0;HDR=YES&quot;&quot;;&quot;
    End If
    Set oRSCon = CreateObject(&quot;ADODB.Connection&quot;)
    Set sRSData = CreateObject(&quot;ADODB.Recordset&quot;)
    ' Modify top-left cell ref of table as needed
    sSrcRng = sSrcSht &amp; &quot;$&quot; &amp; Sheets(sSrcSht).Range(&quot;B1&quot;).CurrentRegion.Address(0, 0)
    oRSCon.Open sDBCon
    sSQL = &quot;SELECT TOP 3 * FROM (SELECT Name,Sum(Salary) as Salary, &quot; &amp; _
        &quot;Sum(Revenue) as Revenue FROM [&quot; &amp; sSrcRng &amp; &quot;] GROUP BY Name) ORDER BY Salary DESC &quot;
    sRSData.Open sSQL, oRSCon, 0, 1, 1
    ' Write the output data to newsheet
    ' TOP 3 Salray
    Sheets.Add
    Range(&quot;A1&quot;) = &quot;TOP 3 Salray&quot;
    For i = 0 To sRSData.Fields.Count - 1
        Cells(3, i + 1).Value = sRSData.Fields(i).Name
    Next i
    Range(&quot;A4&quot;).CopyFromRecordset sRSData
    
    sRSData.Close: Set sRSData = Nothing
    oRSCon.Close: Set oRSCon = Nothing
End Sub

</code></pre>
<ul>
<li>For Top 3 Revenue</li>
</ul>
<pre><code>    sSQL = &quot;SELECT TOP 3 * FROM (SELECT Name,Sum(Salary) as Salary, &quot; &amp; _
        &quot;Sum(Revenue) as Revenue FROM [&quot; &amp; sSrcRng &amp; &quot;] GROUP BY Name) ORDER BY Revenue DESC &quot;
</code></pre>
<p><a href=""https://i.sstatic.net/tLcqG.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/tLcqG.png"" alt=""enter image description here"" /></a></p>
","2024-01-10 03:58:50","1","Answer"
"77790539","","Sort a dictionary by a nested dictionary's items","<p>I have sample data in Excel:</p>
<p><a href=""https://i.sstatic.net/tR5SX.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/tR5SX.jpg"" alt=""enter image description here"" /></a></p>
<p>Trying to get Top-3 elements (names) by <strong>Salary</strong> and Top-3 elements (names) by <strong>Revenue</strong>.</p>
<hr />
<p>In <strong>Visual Basic (VBA)</strong> I created dictionary with Name as a <code>Key</code> and nested dictionary as <code>Item</code></p>
<p>Nested dictionary have &quot;<code>Salary</code>&quot;, &quot;<code>Revenue</code>&quot; and &quot;<code>Position</code>&quot; as <strong>Keys</strong>. And corresponding values as <strong>Items</strong>.</p>
<p>I created Dictionary as follows:</p>
<pre><code>Dim MainDict As New Scripting.Dictionary
Dim NestedDict As Scripting.Dictionary
    
Dim rngRange As Range
Set rngRange = wsMainWorkSheet.Range(&quot;B2:E8&quot;)

Dim rowCounter As Long
  
For rowCounter = 1 To rngRange.Rows.Count
    Set NestedDict = New Dictionary
    NestedDict.Add key:=&quot;Salary&quot;, Item:=rngRange(rowCounter, 2)
    NestedDict.Add key:=&quot;Revenue&quot;, Item:=rngRange(rowCounter, 3)
    NestedDict.Add key:=&quot;Position&quot;, Item:=rngRange(rowCounter, 4)
    
    Dim mainKey As String
    mainKey = CStr(rngRange(rowCounter, 1))
    If MainDict.Exists(mainKey) = False Then
        MainDict.Add key:=mainKey, Item:=NestedDict
    Else:
        MainDict.Item(mainKey)(&quot;Salary&quot;) = MainDict.Item(mainKey)(&quot;Salary&quot;) + rngRange(rowCounter, 2)
        MainDict.Item(mainKey)(&quot;Revenue&quot;) = MainDict.Item(mainKey)(&quot;Salary&quot;) + rngRange(rowCounter, 3)
    End If
Next rowCounter
</code></pre>
<hr />
<p>Now If I print <code>Key, Items</code> in the Dictionary by the code:</p>
<pre><code>Sub PrintDictionary(dict As Dictionary)
Dim key As Variant, subKey As Variant

For Each key In dict.Keys
    Debug.Print vbNewLine; &quot;Name: &quot; &amp; key
    For Each subKey In dict(key).Keys
        Debug.Print subKey &amp; &quot;: &quot; &amp; dict(key)(subKey)
    Next subKey
Next key
End Sub
</code></pre>
<p><strong>Result:</strong></p>
<blockquote>
<p>Name: Name1
Salary: 400
Revenue: 5000
Position: Manager</p>
</blockquote>
<blockquote>
<p>Name: Name2
Salary: 500
Revenue: 25000
Position: Associate</p>
</blockquote>
<p><em>(first 2 shown only)</em></p>
<hr />
<p>But I can't figure out the following:</p>
<ul>
<li><p>How to Get Top-3 elements (names) of the list by largest salaries (&quot;<strong>Salary</strong>&quot; key in nested dict).</p>
</li>
<li><p>How to Get Top-3 elements (names) of the list by largest revenues (&quot;<strong>Revenue</strong>&quot; key in nested dict).</p>
</li>
</ul>
<p>Is it possible to do sorting main dictionary based on nested dictionary's items in VBA without presorting data in the Excel table itself? Is it possible to sort data in such structures for further use later?</p>
<p><em><strong>Book1.xlsm</strong> (sample data) is available on DropBox: <a href=""https://www.dropbox.com/scl/fi/ecor8lt5ynq1crk6m8lqs/Book1.xlsm?rlkey=mi7d8bdfyxamynkiskghdn96j&amp;dl=0"" rel=""nofollow noreferrer"">Book1.xlsm</a></em></p>
","2024-01-10 01:44:08","0","Question"
"77789580","77789289","","<p>So, if you know that <code>lis</code> always has at least as many values as will need to be replaced, and the size of the lists in the dict are arbitrary, then you can use the following:</p>
<pre><code>import itertools
test_dict = {'aaa' : [1, 2], 'bbb' : [4, 5], 'ccc' : [7, 8]}
lis = [11, 22, 44, 55, 77, 88]

iterator = iter(lis)

for vs in test_dict.values():
    vs[:] = itertools.islice(iterator, len(vs))

print(test_dict)
</code></pre>
<p>If <code>lis</code> is potentially smaller, then you can do something to the effect of:</p>
<pre><code>iterator = iter(lis)

for vs in test_dict.values():
    for i, e in enumerate(vs):
        try:
            vs[i] = next(iterator)
        except StopIteration:
            # you could do something with e perhaps if you wanted
            pass
</code></pre>
<p>Which will only replace as many values are there are in <code>lis</code>. You could handle the <code>except</code> clause however you want, in this case, it just keeps what is there already (by doing nothing), but you could, for example, add a dummy value or whatever you want.</p>
<p>The above mutate the original dict. If you want to create a seperate, new dictionary, the approaches can be modified in the following way:</p>
<pre><code># we know lis has at least as many items as needed to replace
iterator = iter(lis)

new_dict = {k : list(itertools.islice(iterator, len(vs))) for k, vs in test_dict.items()}
</code></pre>
<p>Or, in case <code>lis</code> may have less items than will need to be replaced:</p>
<pre><code>iterator = iter(lis)
new_dict = {}
for k, vs in test_dict.items():
    new_dict[k] = sublist = []
    for i, e in enumerate(vs):
        try:
            sublist.append(next(iterator))
        except StopIteration:
            sublist.append(e)
</code></pre>
","2024-01-09 20:29:11","1","Answer"
"77789502","77789289","","<p>Use a loop and slice the list. The dictionary is updated <em>in-place</em>.</p>
<pre><code>n = 0
for k, l in test_dict.items():
    test_dict[k] = lis[n:n+len(l)]
    n += len(l)
</code></pre>
","2024-01-09 20:13:31","0","Answer"
"77789490","77789289","","<p>Python 3.12 introduces a function that lets you combine adjacent list entries. Combining this with the <code>zip</code> function and a dictionary comprehension gives you an elegant way to do what you seem to be describing.</p>
<pre><code>from itertools import batched


test_dict = {k: v for k, v in zip(test_dict, batched(lis, 2))}
</code></pre>
","2024-01-09 20:11:15","0","Answer"
"77789289","","Iteratively inputting a list of int into a dictionary of list","<p>I have this code:</p>
<pre><code>test_dict = {'aaa' : [1, 2], 'bbb' : [4, 5], 'ccc' : [7, 8]}
lis = [11, 22, 44, 55, 77, 88]
</code></pre>
<p>I am trying to iteratively update <code>test_dict</code> to become:</p>
<pre><code>test_dict = {'aaa' : [11, 22], 'bbb' : [44, 55], 'ccc' : [77, 88]}
</code></pre>
<p>The closest I've come to finding a solution is at:
<a href=""https://www.geeksforgeeks.org/python-iterate-through-value-lists-dictionary/"" rel=""nofollow noreferrer"">https://www.geeksforgeeks.org/python-iterate-through-value-lists-dictionary/</a>
(Method #1)
but I'm not sure where to break up that right side of the <code>res</code> variable to update <code>test_dict</code>.</p>
","2024-01-09 19:31:55","0","Question"
"77787607","77787084","","<p>Mozway's answer is entirely satisfying if you do not care about empty dictionaries replacing the ones that did not fill your conditions. You did not provide a lot of details, but I can imagine cases where you could care. As an example, if your original dict already contained empty dicts, then you would not be able to distinguish between those <em>original</em> empty dicts (maybe missing data ?) and the <em>created</em> empty dicts (deleted data).</p>
<p>To fix this, you could &quot;mark&quot; emptied dicts by replacing them by something else, in my example, I use the string <code>'This marks an emptied dict'</code>. To make sure I'm dealing with an emptied dict, I use copies, modify them, and then compare them to the original. The last two lines delete the marked items, but you could want to keep them as well.</p>
<pre><code>import copy

def parse(anything) :
    c = copy.copy(anything)
    
    if isinstance(anything, dict) :
        for key, value in anything.items() :
            if key == 'y3' or (isinstance(value, (int, float)) and value &gt; 50) :
                del c[key]
            else :
                c[key] = parse(value)
        if len(c) == 0 and len(anything) != 0 :
            return 'This marks an emptied dict'
    elif isinstance(anything, list) :
        c = [parse(item) for item in anything]
    elif isinstance(anything, str) :
        c = '-' + c + '-'

    if isinstance(c, list) :
        c = [item for item in c if not (isinstance(item, str) and item == 'This marks an emptied dict')]
    
    return c

parse(a)
</code></pre>
<p>Output :</p>
<pre><code>{'x': ['-x1-', '-x2-', '-x3-'],
 'y': [{'y1': 1}, {'y2': 2.0}],
 'z': {'x': ['-a1-', '-a2-', '-a3-'], 'y': [{'y2': False}, {'y4': 4.3}]}}
</code></pre>
","2024-01-09 14:46:29","1","Answer"
"77787186","77787084","","<p>The exact expected output is unclear, but since you are iterating a nested structure, better generate a new object.</p>
<p>Keeping your original recursive logic, you should add a <code>return</code> at each step to propagate your objects:</p>
<pre><code>def parse(d):
    if isinstance(d, dict):
        return {k: parse(v) for k, v in d.items()
                if k != 'y3' and not
                (isinstance(v, (int, float)) and v&gt;50)}
    elif isinstance(d, list):
        return [parse(x) for x in d]
    elif isinstance(d, str):
        return f'-{d}-'
    else:
        return d

out = parse(a)
</code></pre>
<p>Output:</p>
<pre><code>{'x': ['-x1-', '-x2-', '-x3-'],
 'y': [{'y1': 1}, {'y2': 2.0}, {}, {}],
 'z': {'x': ['-a1-', '-a2-', '-a3-'],
       'y': [{}, {'y2': False}, {}, {'y4': 4.3}]}}
</code></pre>
","2024-01-09 13:39:21","1","Answer"
"77787084","","Python: Iterate and modify a complex dict including lists","<p>I need to iterate through a complex dictionary and modify it according to several conditions.</p>
<p>This is a very basic example of the dict</p>
<pre><code>a = {
   'x' : [&quot;x1&quot;, &quot;x2&quot;, 'x3'],
   'y' : [
       {'y1' : 1},
       {'y2' : 2.0},
       {'y3' : True},
       {'y4' : 99},
   ],
   'z' : {
      'x' : [&quot;a1&quot;, &quot;a2&quot;, 'a3'],
      'y' : [
           {'y1' : 66},
           {'y2' : False},
           {'y3' : 3},
           {'y4' : 4.3},
       ]
   },
   'y3' : &quot;Delete Me&quot;
}
</code></pre>
<p>Îterating through it, is also no problem like:</p>
<pre><code> pTypes = [str, bool, int, float]
 def parse(d, c):
     t = type(d)
     if t == dict:
         for k, v in d.items():
             parse(v, c+[k])
     elif t == list:
         for i, p in enumerate(d):
             parse(p,c+[i])
     elif t in pTypes:
         print(c,'=&gt;',d)
     else:
         print('Error: ',c,d,t)


 parse(a,[])
</code></pre>
<p>My problem is, that I need to delete all items which have a key == 'y3' or a value &gt; 50</p>
<p>Additionally all strings need to be enclosed by '-' like 'x1' =&gt; '-x1-'</p>
<p>Just modifing the data does not work (is not persistent)</p>
<pre><code>...
elif t in pTypes:
   if t == str:
       d = '-'+d+'-'
...
</code></pre>
<p>And I have no idea how to remove items while iterating the dict itself.</p>
<p>Since the dict can be huge, i would prefer not to make a &quot;reduced&quot; copy of the original.</p>
<p>Can anybody help?</p>
","2024-01-09 13:21:08","-1","Question"
"77786265","77785237","","<p>There are two things to address here. Firstly, the specific reason that your code isn't working. Secondly, what you should be doing to make it work and work better.</p>
<p>The specific reason it's not working is that you are binding an empty <code>Dictionary</code> instead of the one you populate from the query. You declare a field here:</p>
<pre class=""lang-vb prettyprint-override""><code>Private CBFullList As Dictionary(Of String, Integer)
</code></pre>
<p>You then pointlessly create an empty <code>Dictionary</code> and assign it to that field here:</p>
<pre class=""lang-vb prettyprint-override""><code>CBFullList = New Dictionary(Of String, Integer)()
</code></pre>
<p>You then ignore that field and assign your populated <code>Dictionary</code> to a local variable that immediately goes out of scope here:</p>
<pre class=""lang-vb prettyprint-override""><code>Dim CBFullList = conn.Query(Of Dictionarytest)(sql).ToDictionary(Function(row) row.Result, Function(row) row.Key)
</code></pre>
<p>You then bind the empty <code>Dictionary</code> that you should not even have created here:</p>
<pre class=""lang-vb prettyprint-override""><code>ComboBox1.DataSource = New BindingSource(CBFullList.ToList(), Nothing)
</code></pre>
<p>Even if you fix that by assigning the populated <code>Dictionary</code> to the field instead of a local variable, your code is still not going to work, because your binding is wrong.</p>
<p>I would map the <code>Key</code> and <code>Result</code> properties of your query results to the <code>Key</code> and <code>Value</code> properties of the <code>Dictionary</code> items. That is unless the table may have duplicate values in the <code>Key</code> column, but that would be strange, given the name.</p>
<pre class=""lang-vb prettyprint-override""><code>Private CBFullList As Dictionary(Of Integer, String)
</code></pre>
<pre class=""lang-vb prettyprint-override""><code>CBFullList = conn.Query(Of Dictionarytest)(sql).ToDictionary(Function(row) row.Key, Function(row) row.Result)
</code></pre>
<p>I would then display the <code>Value</code> of the items in the <code>ComboBox</code>:</p>
<pre class=""lang-vb prettyprint-override""><code>With ComboBox1
    .DisplayMember = &quot;Value&quot;
    .ValueMember = &quot;Key&quot;
    .DataSource = CBFullList.ToArray()
End With
</code></pre>
<p>You can use a <code>BindingSource</code> if you want but, if it makes sense to use one, you should add it to the form in the designer.</p>
","2024-01-09 11:03:55","2","Answer"
"77785884","77783122","","<p>This is a solution I like.</p>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;class String, template &lt;class, class&gt; class Dict&gt;
class AnyDict
{
public:
    // constructors, destructor, etc.

    template &lt;class Type&gt;
    bool
    insert(const String&amp; name, Type&amp; item)
    {
        return m_dict.insert(name, (void*) &amp;item);
    }

    bool
    remove(const String&amp; name)
    {
        return m_dict.remove(name);
    }

    template &lt;class Type&gt;
    Type*
    find(const String&amp; name, Type* def)
    {
        void* addr = (void*) def;

        return (Type*) m_dict.find(name, addr);
    }

    template &lt;class Type&gt;
    Type*
    find(const String&amp; name)
    {
        return (Type*) m_dict.find(name);
    }

private:
    Dict&lt;String, void*&gt; m_dict;
};
</code></pre>
<p>This doesn't solve the problem of the caller's responsibility on the type casts but <strong>because</strong> of this: there's no ambiguity on the return type. The casts will always be around even with <code>std::any</code> or with a completely different language.</p>
<pre class=""lang-cpp prettyprint-override""><code>float def = 0.f;

auto* ptr = dict.find(&quot;Number&quot;s, &amp;def); // This is float thanks to &quot;def&quot;.
auto* str = dict.find&lt;std::string&gt;(&quot;String&quot;s, 0);
</code></pre>
<p>The usage is a bit inconvenient but for what I need this is enough.</p>
","2024-01-09 10:05:32","0","Answer"
"77785650","77783122","","<p>I think you should use <code>std::any</code> as the value type of your map, because it implements exactly the kind of type erasure that you need. No need to bother with scary void pointers. Here is a solution to get you started:</p>
<pre class=""lang-cpp prettyprint-override""><code>#include &lt;any&gt;
#include &lt;string&gt;
#include &lt;map&gt;
#include &lt;iostream&gt;


template &lt;typename key_type, template&lt;typename, typename&gt; typename Map&gt;
class AnyDict
{
public:

    AnyDict() = default;

    template &lt;typename value_type&gt;
    bool insert(key_type const&amp; k, value_type const&amp; v) {
        auto [it, rt] = m_values.insert(std::make_pair(k, std::any{v}));
        return rt;
    }

    template &lt;typename value_type&gt;
    value_type find(key_type const&amp; k, value_type const&amp; default_value) const 
    {
        if (auto it = m_values.find(k); it != m_values.end()) {

            if (it-&gt;second.type() != typeid(value_type)){
                throw std::logic_error(&quot;type mismatch&quot;);
            }

            return std::any_cast&lt;value_type&gt;(it-&gt;second);
        }
        else {
            return default_value;
        }
    }

    bool remove(key_type const&amp; k) {
        if (auto it = m_values.find(k); it != m_values.end()) {
            m_values.erase(k);
            return true;
        }
        return false;
    }

private:

    Map&lt;key_type, std::any&gt; m_values;
};

int main()
{
    AnyDict&lt;std::string, std::map&gt; dict;

    // If both inserts succeed this should evaluate to true.
    if ( dict.insert(std::string {&quot;Hello&quot;}, 0.5f) &amp;&amp;
        dict.insert(std::string {&quot;Other&quot;}, std::string {&quot;Value&quot;}) )
    {
        std::cout &lt;&lt; &quot;Success.\n&quot;;
    }

    // This should return true.
    std::cout &lt;&lt; std::boolalpha &lt;&lt; dict.remove(std::string {&quot;Hello&quot;}) &lt;&lt; &quot;\n&quot;;

    // This should return &quot;Other&quot;, but if
    // something goes wrong returns &quot;&quot;.
    auto value = dict.find(std::string {&quot;Other&quot;}, std::string {&quot;&quot;});
    std::cout &lt;&lt; value &lt;&lt; &quot;\n&quot;;

};
</code></pre>
<p><a href=""https://godbolt.org/z/GsrTE7975"" rel=""nofollow noreferrer"">https://godbolt.org/z/GsrTE7975</a></p>
<p>Now I think there are some minor discrepancies between your desired interface and your question. For one, the desired interface doesn't store any pointers, but values, that is, according to the interface, the <code>dict</code> owns the values. The code above let's you store any type, <em>including</em>, but not limited to pointers: <a href=""https://godbolt.org/z/sfhT68xK9"" rel=""nofollow noreferrer"">https://godbolt.org/z/sfhT68xK9</a></p>
","2024-01-09 09:28:15","0","Answer"
"77785237","","why doesn't appear Binding combobox using dictionary with the MS ACCESS database with dapper in VB.NET","<p>I'm trying binding combobox using dictionary with the MS ACCESS database with dapper in VB.NET.</p>
<p>so I want the binding using dictionary to appear in the combobox which is the <code>Result</code> of the table <code>Dictionarytest</code></p>
<p>Is there perhaps something wrong with my code implementation?</p>
<p>Please Guide Me</p>
<p>Thanks</p>
<pre><code>Public Class Form4
    Private bindingSource1 As BindingSource = Nothing
    Private connectionString As String = &quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=|DataDirectory|\dapperdemo.accdb;Persist Security Info=False;&quot;
    Private CBFullList As Dictionary(Of String, Integer)
  Private Sub BindcomboboxColorCode()
        Using conn = New OleDbConnection(connectionString)
            conn.Open()
            Dim sql = &quot;SELECT * FROM Dictionarytest&quot;
            Dim CBFullList = conn.Query(Of Dictionarytest)(sql).ToDictionary(Function(row) row.Result, Function(row) row.Key)
            conn.Close()
        End Using
        ComboBox1.DisplayMember = &quot;Key&quot;
        ComboBox1.ValueMember = &quot;Result&quot;
        ComboBox1.DropDownHeight = 80
        ComboBox1.DropDownStyle = ComboBoxStyle.DropDown
        ComboBox1.AutoCompleteMode = AutoCompleteMode.None
        ComboBox1.AutoCompleteSource = AutoCompleteSource.None
        ComboBox1.DataSource = New BindingSource(CBFullList.ToList(), Nothing)
    End Sub
Private Sub Form4_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        CBFullList = New Dictionary(Of String, Integer)()
        BindcomboboxColorCode()
    End Sub
End Class
Public Class Dictionarytest
    Public Property Key() As Integer
    Public Property Result() As String
End Class
</code></pre>
<p>Result db in ms access</p>
<p><a href=""https://i.sstatic.net/iugAz.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/iugAz.jpg"" alt=""db in ms access"" /></a></p>
<p>answer update code from @jmcilhinney</p>
<pre><code>Public Class Form4
    Private bindingSource1 As BindingSource = Nothing
    Private connectionString As String = &quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=|DataDirectory|\dapperdemo.accdb;Persist Security Info=False;&quot;
    Private CBFullList As Dictionary(Of Integer, String)
 Private Sub BindcomboboxColorCode()
        Using conn = New OleDbConnection(connectionString)
            conn.Open()
            Dim sql = &quot;SELECT * FROM Dictionarytest&quot;
            Dim CBFullList = conn.Query(Of Dictionarytest)(sql).ToDictionary(Function(row) row.Key, Function(row) row.Result)
            conn.Close()
        End Using
With ComboBox1
            .DisplayMember = &quot;Value&quot;
            .ValueMember = &quot;Key&quot;
            .DataSource = CBFullList.ToArray()
        End With
    End Sub
 Private Sub Form4_Load(sender As Object, e As EventArgs) Handles MyBase.Load
 BindcomboboxColorCode()
    End Sub
End Class
</code></pre>
<p>update code from @dr.null</p>
<pre><code>Private Sub BindcomboboxColorCode()
        Using conn = New OleDbConnection(connectionString)
            conn.Open()
            Dim sql = &quot;SELECT * FROM Dictionarytest&quot;
CBFullList = conn.Query(Of Dictionarytest)(sql).ToDictionary(Function(row) row.Key, Function(row) row.Result)
End Using
        With ComboBox1
            .DisplayMember = &quot;Value&quot;
            .ValueMember = &quot;Key&quot;
                .DropDownHeight = 80
                .DropDownStyle = ComboBoxStyle.DropDown
                .AutoCompleteMode = AutoCompleteMode.None
                .AutoCompleteSource = AutoCompleteSource.None
                .DataSource = CBFullList.ToArray()

            End With

    End Sub
</code></pre>
","2024-01-09 08:19:24","1","Question"
"77783950","77771807","","<p>Using <code>for</code> (and/or <code>given</code>) loops to get Array/index output:</p>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            given @a.kv { .put };'
0 First 1 Second 2 Third 3 Fourth
</code></pre>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            for @a.kv { .put };'
0
First
1
Second
2
Third
3
Fourth
</code></pre>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            for @a.kv -&gt; $k,$v { say $k =&gt; $v };'
0 =&gt; First
1 =&gt; Second
2 =&gt; Third
3 =&gt; Fourth
</code></pre>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            for @a { put &quot;Index of {$_.values} is &quot; ~ $++ ~ &quot;;&quot; };'
Index of First is 0;
Index of Second is 1;
Index of Third is 2;
Index of Fourth is 3;
</code></pre>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            for @a.kv -&gt; $k,$v { put &quot;Index of $v is $k;&quot; };'
Index of First is 0;
Index of Second is 1;
Index of Third is 2;
Index of Fourth is 3;
</code></pre>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            for @a.pairs { put &quot;Index of {$_.value} is {$_.key};&quot; };'
Index of First is 0;
Index of Second is 1;
Index of Third is 2;
Index of Fourth is 3;
</code></pre>
<hr />
<p>If you've read this far, you're probably wondering how this relates to the original <code>map</code> question. The answer is simple: add an imperative <code>do</code> to the <code>for</code>/<code>given</code> loop, drop the <code>put</code>, and now you have the same (stringified) return, just as if you were using <code>map</code> instead:</p>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            my @b = do for @a.pairs { &quot;Index of {$_.value} is {$_.key};&quot; };  \
            .put for @b;'
Index of First is 0;
Index of Second is 1;
Index of Third is 2;
Index of Fourth is 3;
</code></pre>
<pre><code>~$ raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;Fourth&quot;;  \
            @a = do for @a.pairs { &quot;Index of {$_.value} is {$_.key};&quot; };  \
           .put for @a;'
Index of First is 0;
Index of Second is 1;
Index of Third is 2;
Index of Fourth is 3;
</code></pre>
<p><em>Yet another trick in the Raku grab-bag of tricks!</em></p>
<p><a href=""https://docs.raku.org/syntax/do%20%28statement%20prefix%29"" rel=""nofollow noreferrer"">https://docs.raku.org/syntax/do%20%28statement%20prefix%29</a></p>
<p>HTH.</p>
","2024-01-09 01:41:30","2","Answer"
"77783122","","C++17 Dictionary of names to any","<p>I'm trying to create a dictionary in C++17 which associates a name to a pointer of any number of types simultaneously, and is able to deduce back the type on lookup without resorting to explicit casts on the caller side. These types can't be specified upfront in a variadic template.</p>
<p>The desired interface is the following:</p>
<pre class=""lang-cpp prettyprint-override""><code>AnyDict&lt;std::string, std::map&gt; dict;

float num = 0.5f;
std::string str = {&quot;Value&quot;};

// If both inserts succeed this should evaluate to true.
if ( dict.insert(&quot;Hello&quot;s, num) &amp;&amp;
     dict.insert(&quot;Other&quot;s, str) )
    ; // ...

// This should return true.
dict.remove(&quot;Hello&quot;s);

std::string def = {&quot;&quot;};

// This should return a pointer to &quot;Other&quot;, but
// if something goes wrong returns &quot;&quot;.
auto* value = dict.find(&quot;Other&quot;s, &amp;def);
</code></pre>
<p>Currently my closest solution involves:</p>
<ul>
<li>Conversion of types to numbers</li>
</ul>
<pre class=""lang-cpp prettyprint-override""><code>// Currently I'm not using dlls or anything, but...
class TypeIdx
{
public:
    template &lt;class Type&gt;
    static int get()
    {
        // ugly.
        static const int s_idx = s_count++;

        return s_idx;    
    }

private:
    static inline int s_count = 0;
};
</code></pre>
<ul>
<li>A wrapper around a dictionary that encapsulates the conversion and the operations of the dictionary itself</li>
</ul>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;template &lt;class, class&gt; class Dict&gt;
class AnyDict
{
public:
    // constructors, destructor, etc.

    template &lt;class Type&gt;
    bool
    insert(Type&amp; item)
    {
        int key = TypeIdx::get&lt;Type&gt;();
        
        // The delegate must return true on success
        // or false on failure.
        return m_dict.insert(key, (void*) &amp;item);
    }

    template &lt;class Type&gt;
    bool
    remove()
    {
        int key = TypeIdx::get&lt;Type&gt;();
        
        // The delegate must return true on success
        // or false on failure.
        return m_dict.remove(key);
    }

    template &lt;class Type&gt;
    Type*
    find(Type* def)
    {
        int key = TypeIdx::get&lt;Type&gt;();
        
        // The delegate must return a pointer to
        // the item found on success, or to &quot;def&quot;
        // on failure.
        return (Type*) m_dict.find(key, def);
    }

private:
    // Here the void* lets me save a pointer to
    // anything but i can't deduce back the type.
    Dict&lt;int, void*&gt; m_dict;
};
</code></pre>
<p>While this works and returns pointers of the correct type without casts, it still doesn't index them by name but by type, which is not what I'm looking for.</p>
<p>Do you know any solution? Maybe using <code>std::any</code> would improve the situation? Also if you could suggest a better name for this class it would be appreciated.</p>
","2024-01-08 20:55:57","0","Question"
"77777317","77774631","","<p>In order to solve this problem in a more robust manner, that correctly handles all three tests, I've put this code together:</p>
<pre><code>IEnumerable&lt;string&gt; Consume(string line, (string @from, string @to)[] mappings)
{
    if (!String.IsNullOrEmpty(line))
    {
        var mapping = mappings.FirstOrDefault(x =&gt; line.StartsWith(x.@from));
        if (mapping.@from != null)
        {
            yield return mapping.@to;
            line = line.Substring(mapping.@from.Length);
        }
        else
        {
            yield return line.Substring(0, 1);
            line = line.Substring(1);
        }
        foreach (var tail in Consume(line, mappings))
            yield return tail;
    }
}
</code></pre>
<p>It is consuming the input one element at a time until the string is empty. It's producing a list of strings from the source line as a series of tokens that can easily be concatenated to return the final string.</p>
<p>Here's the code to run it:</p>
<pre><code>    var lines = &quot;&quot;&quot;
mieux vaut prévenir que guérir
merci|thank you
que|than
malade|sick
mieux|better
guérir|to heal
chien|dog
vaut prévenir|to prevent
beurre|butter
s'il vous plaît|please
&quot;&quot;&quot;.Split(new[] { Environment.NewLine }, StringSplitOptions.None);

    var line = lines.First();
    var mappings = lines.Skip(1).Select(x =&gt; x.Split('|')).Select(x =&gt; (@from: x[0], @to: x[1])).ToArray();

    Console.WriteLine(String.Concat(Consume(line, mappings)));
</code></pre>
<p>That produces &quot;better to prevent than to heal&quot;.</p>
<p>With Test 3 it produces &quot;WHICH WAY THE WIND BLOWS&quot;.</p>
","2024-01-08 06:51:03","-1","Answer"
"77775729","77774631","","<p>Other than reading the input, there's also a problem with your approach, which seems to be attempting to only solve problems that look like the first example. In that example, you can take each untranslated word and it will have an entry in the Rosetta list.</p>
<p>However, in the second example, the input shows that spaces are allowed within the Rosetta list.</p>
<pre><code>mieux vaut prévenir que guérir
merci|thank you
que|than
malade|sick
mieux|better
guérir|to heal
chien|dog
vaut prévenir|to prevent // space allowed here
beurre|butter
s'il vous plaît|please
</code></pre>
<p>Additionally, in the third example input, the string to translate needs to be done several characters at a time. Translating <code>5748494348</code> is done by taking two characters at a time to find <code>WHICH</code> as its full translation.</p>
<p>What the last two examples show is that you need to evaluate the input one character at a time. If we take the second example input, the logic should be something like this:</p>
<ul>
<li><strong>Does my Rosetta list have any entries starting with 'm'?</strong> Yes (merci, malade, mieux).</li>
<li><strong>Is 'm' an entry in the Rosetta list?</strong> No, continue processing.</li>
<li><strong>Does my Rosetta list have any entries starting with 'mi'?</strong> Yes (mieux).</li>
<li><strong>Is 'mi' an entry in the Rosetta list?</strong> No, continue processing.</li>
<li>etc</li>
</ul>
<p>This continues until eventually you get <code>mieux</code> from the input. We can see this is an entry in the Rosetta list, and we place its translation into the output.</p>
<p>Knowing this, the best way to tackle this is with a <a href=""https://en.wikipedia.org/wiki/Trie"" rel=""nofollow noreferrer"">trie data structure</a>, also known as a prefix tree. The idea is to process all of your items into the tree and then perform a search, one character at a time. The items in this case are the left-side entries in your Rosetta stone.</p>
<p>The tree itself is composed of nodes which only know if they are the ending character of a word, and what characters they are connected to next.</p>
<p>Here's an example implementation of a Trie in C#. Feel free to modify to suit your needs:</p>
<pre class=""lang-cs prettyprint-override""><code>public class TrieNode
{
    public bool IsWord { get; set; }
    public Dictionary&lt;char, TrieNode&gt; Children { get; } = new Dictionary&lt;char, TrieNode&gt;();
}

public class Trie
{
    private readonly TrieNode _root = new TrieNode();

    public void AddWord(string word)
    {
        var node = _root;
        foreach (char c in word)
        {
            if (!node.Children.ContainsKey(c))
            {
                node.Children[c] = new TrieNode();
            }
            node = node.Children[c];
        }
        node.IsWord = true;
    }

    public bool Search(string word)
    {
        var node = _root;
        foreach (char c in word)
        {
            if (!node.Children.ContainsKey(c))
            {
                return false;
            }
            node = node.Children[c];
        }
        return node.IsWord;
    }
}
</code></pre>
<p>Problems like this can be a fun puzzle, so I'll leave the implementation details to you.</p>
","2024-01-08 01:24:40","0","Answer"
"77775314","77774631","","<p>You have a few issues. One, you need to build a list of lines before calling <code>RosettaStoneTranslate</code>.</p>
<p>Here's the <code>Main</code> method that does that:</p>
<pre><code>static void Main()
{
    var input = new List&lt;string&gt;();
    using (StreamReader reader = new StreamReader(Console.OpenStandardInput()))
    {
        while (!reader.EndOfStream)
        {
            string line = reader.ReadLine();
            if (line == &quot;&quot;)
                break;
            input.Add(line);
        }
    }
    Console.WriteLine(RosettaStoneTranslate(input.ToArray()));
}
</code></pre>
<p>Then there's a small change to the start of <code>RosettaStoneTranslate</code> as we're sending in the full list instead of a single string.</p>
<pre><code>static string RosettaStoneTranslate(string[] lines)
{
    string message = lines[0];
</code></pre>
<p>And finally, you had a small bug in the <code>for</code> loop. You needed <code>lines.Length</code> rather than <code>lines.Length - 1</code>.</p>
<pre><code>    for (int i = 1; i &lt; lines.Length; i++)
</code></pre>
<p>It now works.</p>
<hr />
<p>It is important to note that &quot;Test 3&quot; relies on pairing characters to do the replacement.</p>
<p>The whole groups, such as <code>544845</code>, do not appear in your dictionary, and a simple search as replace approach like <code>lines.Skip(1).Select(x =&gt; x.Split('|')).Aggregate(lines.First(), (a, x) =&gt; a.Replace(x[0], x[1]));</code> does not honour the character boundaries. The <code>44</code> in the middle of <code>544845</code> shouldn't be replaced.</p>
","2024-01-07 23:25:03","1","Answer"
"77774631","","How to solve Rosetta Stone Coding Challenge C#","<p>No matter how much I re-read and try to solve this question I simply cannot wrap my head around it. I don't understand how to make my code translate the needed text without hardcoding the entire thing.</p>
<p>Here is the question:</p>
<p><strong>Rosetta Stone</strong>
Programming challenge description:
The Rosetta stone is an ancient decree written into stone that was used by archeologists to translate between Greek and Ancient Egyptian languages.</p>
<p>Write a program to decode messages using a Rosetta for translation. The &quot;Rosetta&quot; will be a series of character sets paired with English words or characters. If you translate the encrypted message correctly, you will find the hidden message.</p>
<p>HINT: Spaces that are not part of a fragment must be preserved</p>
<p>Input:
Multiple lines of input will be given. The first line of input will be the message to translate to English.</p>
<p>All other lines of input will be the Rosetta needed to translate. The fragments of each pair will be separated by a pipe character, one pair per line of input.</p>
<p>For example:</p>
<pre><code>Hola Mundo
Mundo|World
Lunes|Monday
Hola|Hello
Translates:
Hola Mundo
</code></pre>
<p>into:</p>
<pre><code>Hello World
</code></pre>
<p>Output:
The translated text, which will be a real English phrase</p>
<p><strong>Test 1</strong></p>
<p>Test Input</p>
<pre><code>Hola Mundo
Mundo|World
Lunes|Monday
Hola|Hello
</code></pre>
<p>Expected Output</p>
<pre><code>Hello World
</code></pre>
<p><strong>Test 2</strong>
Test Input</p>
<pre><code>mieux vaut prévenir que guérir
merci|thank you
que|than
malade|sick
mieux|better
guérir|to heal
chien|dog
vaut prévenir|to prevent
beurre|butter
s'il vous plaît|please

Expected Output

better to prevent than to heal
</code></pre>
<p><strong>Test 3</strong>
Test Input</p>
<pre><code>5748494348 574159 544845 57494E44 424C4F5753
41|A
42|B
43|C
44|D
45|E
46|F
47|G
48|H
49|I
4A|J
4B|K
4C|L
4D|M
4E|N
4F|O
50|P
51|Q
52|R
53|S
54|T
55|U
56|V
57|W
58|X
59|Y
5A|Z
</code></pre>
<p>Expected Output</p>
<pre><code>WHICH WAY THE WIND BLOWS
</code></pre>
<p>Here is my current code:</p>
<pre><code>using System;
using System.IO;
using System.Collections.Generic;
using System.Text;

public static class Program {
  static void Main() 
  {
    using (StreamReader reader = new StreamReader(Console.OpenStandardInput()))
      
    while (!reader.EndOfStream) 
    {
      string input = reader.ReadLine();
      string output = RosettaStoneTranslate(input);
      
      Console.WriteLine(output);
    }
  }
  
  static string RosettaStoneTranslate(string input)
  {
    string[] lines = input.Split('\n');
    string message =lines[0];
    
    //parse Rosetta Stone pairs.  
    Dictionary&lt;string, string&gt; rosettaDict = new Dictionary&lt;string, string&gt;();
    for (int i = 1; i &lt; lines.Length - 1; i++)
    {
      string[] pair = lines[i].Trim().Split('|');
      rosettaDict[pair[0]] = pair[i];
    }
    
    string[] fragments = message.Split(' ');
    List&lt;string&gt; translatedFragments = new List&lt;string&gt;();
    
      foreach (string fragment in fragments)
      {
        if (rosettaDict.TryGetValue(fragment, out string translation))
        {
          translatedFragments.Add(translation);
        }
        else
        {
          translatedFragments.Add(fragment);
        }
      }
      
      //reconstruct translated message.
      string translatedMessage = string.Join(&quot; &quot;, translatedFragments);
        return translatedMessage;
    }
  }
</code></pre>

<p>Please could some explain to me the process of how to find a solution!</p>
","2024-01-07 19:56:16","-1","Question"
"77772593","77772560","","<p>Given that your dictionaries have the same keys, you can use <strong>Counter</strong> from <strong>Collections</strong></p>
<pre><code>from collections import Counter

dict_1 = {&quot;a&quot;: [&quot;1&quot;], &quot;b&quot;: [&quot;3&quot;]}
dict_2 = {&quot;a&quot;: [&quot;2&quot;], &quot;b&quot;: [&quot;3&quot;]}

# Use Counter to merge the dictionaries
new_dict = Counter(dict_1)
new_dict.update(dict_2)

# Convert the Counter back to a dictionary
new_dict = dict(new_dict)
</code></pre>
<p>Or/ If else write your own function</p>
<pre><code>dict_1 = {&quot;a&quot;: [&quot;1&quot;], &quot;b&quot;: [&quot;3&quot;]}
dict_2 = {&quot;a&quot;: [&quot;2&quot;], &quot;b&quot;: [&quot;3&quot;]}

new_dict = {}

# Iterate over the keys of both dictionaries
for key in set(dict_1.keys()) | set(dict_2.keys()):
    # Merge the lists if the key is present in both dictionaries
    new_dict[key] = dict_1.get(key, []) + dict_2.get(key, [])
</code></pre>
","2024-01-07 09:52:57","2","Answer"
"77772583","77772560","","<p>you can use <a href=""https://docs.python.org/3/library/collections.html#collections.defaultdict"" rel=""nofollow noreferrer""><code>defaultdict</code></a> with <a href=""https://docs.python.org/3/tutorial/datastructures.html#more-on-lists"" rel=""nofollow noreferrer""><code>extend</code></a> like this:</p>
<pre class=""lang-py prettyprint-override""><code>from collections import defaultdict

new_dict = defaultdict(list)
for d in [dict_1, dict_2]:
    for key, value in d.items():
        new_dict[key].extend(value)
</code></pre>
","2024-01-07 09:49:31","4","Answer"
"77772560","","Merge value lists of two dict in python","<p>I have several dictionary with equal keys. The values of the key are list. Now I would merge the values lists like.</p>
<p>Input, e.g.:</p>
<pre><code>dict_1 ={&quot;a&quot;:[&quot;1&quot;], &quot;b&quot;:[&quot;3&quot;]}
dict_2 = {&quot;a&quot;:[&quot;2&quot;], &quot;b&quot;:[&quot;3&quot;]}
</code></pre>
<p>Required output:</p>
<pre><code>new_dict = {'a':[&quot;1&quot;,&quot;2&quot;], 'b':[&quot;3&quot;,&quot;3&quot;]}
</code></pre>
<p>What is the fastest, pythonic way to get this result?</p>
<p>I found this, but this doesn’t fulfill my needs:</p>
<pre><code>merged_dic = {**dict_1, **dict_2}
</code></pre>
<p>and others, but nothing solve my wish.
Is there a built in function without loop over each element, because I have a lot of dictionaries and more complex as my example above?
Thanks for any help!</p>
","2024-01-07 09:42:13","2","Question"
"77772509","77771807","","<p>There is <a href=""https://docs.raku.org/type/List#routine_kv"" rel=""noreferrer""><code>.kv</code></a> to produce &quot;keys&quot; and values. For an array, the keys are the indexes 0, 1, 2...</p>
<pre class=""lang-perl prettyprint-override""><code> &gt;&gt;&gt; my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;First&quot;;
[First Second Third First]

&gt;&gt;&gt; @a.kv
(0 First 1 Second 2 Third 3 First)
</code></pre>
<p>This is a flat sequence of length 2N; we can tell <code>map</code> to take 2 things at a time, either via an explicit signature:</p>
<pre class=""lang-perl prettyprint-override""><code>&gt;&gt;&gt; @a.kv.map(-&gt; $index, $value { &quot;Index of $value is $index;&quot; })
(Index of First is 0; Index of Second is 1; Index of Third is 2; Index of First is 3;)
</code></pre>
<p>or via <a href=""https://docs.raku.org/language/variables#The_%5E_twigil"" rel=""noreferrer"">placeholder</a> variables:</p>
<pre class=""lang-perl prettyprint-override""><code>&gt;&gt;&gt; @a.kv.map({ &quot;Index of $^value is $^index;&quot; })
(Index of First is 0; Index of Second is 1; Index of Third is 2; Index of First is 3;)
</code></pre>
<p>Since <em>index</em> comes lexicographically before <em>value</em>, it works out as in the previous explicit signature case, i.e., the same signature is produced for us behind the scenes. We can see this:</p>
<pre><code>&gt;&gt;&gt; &amp;{ $^value, $^index }
-&gt; $index, $value { #`(Block|140736965530488) ... }
</code></pre>
<p>Note that what matters is the Unicode order of variable names, not the order of appearance.</p>
<hr />
<p>In the spirit of TIMTOWDI, some alternatives (IMO not better):</p>
<ul>
<li>Rely on the <a href=""https://docs.raku.org/syntax/state#The_$_variable"" rel=""noreferrer"">anonymous scalar state variable $</a> to produce a stream of 0, 1, 2...</li>
</ul>
<pre class=""lang-perl prettyprint-override""><code># Limitation: generated anew per closure and per mention,
# so cannot use, e.g., in string interpolations with closure and more than once
&gt;&gt;&gt; @a.map({ &quot;Index of $_ is &quot; ~ $++ ~ &quot;;&quot; })
(Index of First is 0; Index of Second is 1; Index of Third is 2; Index of First is 3;)
</code></pre>
<ul>
<li>Using <a href=""https://docs.raku.org/type/List#routine_pairs"" rel=""noreferrer""><code>.pairs</code></a>, cousine of <code>.kv</code> to produce &quot;key =&gt; value&quot; pairs instead of a flat list</li>
</ul>
<pre class=""lang-perl prettyprint-override""><code>&gt;&gt;&gt; @a.pairs
(0 =&gt; First 1 =&gt; Second 2 =&gt; Third 3 =&gt; First)

# Reach over .key &amp; .value
&gt;&gt;&gt; @a.pairs.map({ &quot;Index of $_.value() is $_.key();&quot; })
(Index of First is 0; Index of Second is 1; Index of Third is 2; Index of First is 3;)

# Unpack with signature
&gt;&gt;&gt; @a.pairs.map(-&gt; (:key($index), :$value) { &quot;Index of $value is $index;&quot; })
(Index of First is 0; Index of Second is 1; Index of Third is 2; Index of First is 3;)
</code></pre>
<ul>
<li>Instead of mapping the array's values themselves, we can map the keys of it:</li>
</ul>
<pre class=""lang-perl prettyprint-override""><code># Array.keys produces 0, 1, 2...
&gt;&gt;&gt; @a.keys.map({ &quot;Index of @a[$_] is $_;&quot; })
(Index of First is 0; Index of Second is 1; Index of Third is 2; Index of First is 3;)

# ^@a is equivalent to ^@a.elems === 0 ..^ @a.elems, i.e., 0, 1, 2... again
&gt;&gt;&gt; ^@a .map({ &quot;Index of @a[$_] is $_;&quot; })
(Index of First is 0; Index of Second is 1; Index of Third is 2; Index of First is 3;)
</code></pre>
<p>This last one is the least idiomatic I think.</p>
","2024-01-07 09:24:46","15","Answer"
"77772135","77772084","","<p>These were the fixes in the code</p>
<ol>
<li>Splitting <code>line</code> by <code>&lt;space&gt;</code> instead of <code>&lt;comma&gt;</code></li>
<li>Assigning the first item to <code>id_num</code>, and the remaining to <code>full_name</code>.</li>
<li>Maintaining two separate dictionaries for both lookups, alternatively you can also reverse the <code>keys, values</code> of the <code>employees</code> dict.</li>
</ol>
<p>Here's the running code:</p>
<pre><code>employees = {}
employees_names = {}

def load_employees():
    with open(&quot;employees.txt&quot;) as file:
        for line in file:
            words = line.strip().split()
            id_num, full_name = int(words[0]), words[1:]
            first_name, *_, last_name = full_name
            employees[id_num] = [(first_name, last_name)]
            employees_names[(first_name, last_name)] = id_num

def lookup_id(first_name, last_name):
    return employees_names.get((first_name, last_name), &quot;ID not found&quot;)


def lookup_employee(id_num):
    if id_num in employees:
        return employees[id_num]
    else:
        return &quot;Employee not found&quot;


def main():
    load_employees()

    while True:
        print(&quot;\nChoose an option:&quot;)
        print(&quot;1. Lookup name by ID number&quot;)
        print(&quot;2. Lookup ID number by name&quot;)
        print(&quot;3. Quit&quot;)

        choice = input(&quot;Enter your choice: &quot;)

        if choice == &quot;1&quot;:
            try:
                id_num = int(input(&quot;Enter the ID number: &quot;))
                result = lookup_employee(id_num)
                print(result)
            except ValueError:
                print(&quot;Invalid input. Please enter an integer ID number.&quot;)
        elif choice == &quot;2&quot;:
            first_name = input(&quot;Enter the first name: &quot;)
            last_name = input(&quot;Enter the last name: &quot;)
            result = lookup_id(first_name, last_name)
            print(result)
        elif choice == &quot;3&quot;:
            break
        else:
            print(&quot;Invalid choice. Please choose 1, 2, or 3.&quot;)

if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
","2024-01-07 06:32:52","2","Answer"
"77772084","","Python code that lets me lookup the name and ID from a text file","<pre><code>employees = {}

def load_employees():
    with open(&quot;employees.txt&quot;) as file:
        for line in file:
            id_num, full_name = line.strip().split(&quot;,&quot;)
            first_name, *_, last_name = full_name.split()  
            employees[(first_name, last_name)] = id_num  

def lookup_id(first_name, last_name):
    return employees.get((first_name, last_name), &quot;ID not found&quot;)


def lookup_employee(id_num):
    if id_num in employees:
        return employees[id_num]
    else:
        return &quot;Employee not found&quot;


def main():
    load_employees()

    while True:
        print(&quot;\nChoose an option:&quot;)
        print(&quot;1. Lookup name by ID number&quot;)
        print(&quot;2. Lookup ID number by name&quot;)
        print(&quot;3. Quit&quot;)

        choice = input(&quot;Enter your choice: &quot;)

        if choice == &quot;1&quot;:
            try:
                id_num = int(input(&quot;Enter the ID number: &quot;))
                result = lookup_employee(id_num)
                print(result)
            except ValueError:
                print(&quot;Invalid input. Please enter an integer ID number.&quot;)
        elif choice == &quot;2&quot;:
            first_name = input(&quot;Enter the first name: &quot;)
            last_name = input(&quot;Enter the last name: &quot;)
            result = lookup_id(first_name, last_name)
            print(result)
        elif choice == &quot;3&quot;:
            break
        else:
            print(&quot;Invalid choice. Please choose 1, 2, or 3.&quot;)

if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
<p>I am trying to write a code that lets you look up the name and ID of people from the project named employees.txt (saved in the same folder this Python file is saved) with the following data:</p>
<pre><code>123 Bob Smith
345 Anne Jones
256 Carol Lee
845 Steve Robert Anderson
132 Jill Thompson
</code></pre>
<p>From the program's main function, we need to give the user the following options: lookup a name based on ID number, lookup an ID number based on a name, and quit the program.</p>
<p><strong>OPTION 1</strong>: The user chooses to lookup a name based on ID number:
Use a try/except and ask the user to enter an integer.
If they don't enter an integer, print an error message.
If they do enter an integer, call a function named lookup_employee which takes the id as a parameter.
If an employee with the given id number is found, return the name.
Otherwise, return the string “Employee not found”
Back in the main, print the return result.</p>
<p><strong>OPTION 2</strong>: The user chooses to lookup an ID based on the name:
Ask the user to enter the first and last name (don't ask for the middle name).
Call a function named lookup_id, which takes the first and last name as two separate strings.
If an employee with the given first and last names is found, return the ID number.
Otherwise, return the string &quot;ID not found&quot;
Back in the main, print the return result.</p>
<p><strong>OPTION 3</strong>: Exit the loop and quit the program.</p>
<p>I ran the code several times, and it's giving me errors.</p>
<p>Thank you in advance.</p>
","2024-01-07 06:06:01","0","Question"
"77771807","","Is it possible to use the index of an array in a map block?","<p>I would like to use the index of the array in a map routine. For example, this Raku code:</p>
<p><code>raku -e 'my @a = &quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;, &quot;First&quot;; say @a.map({ &quot;Index of $_ is: ;&quot; })'</code></p>
<p>prints:</p>
<p><code>(Index of First is: ; Index of Second is: ; Index of Third is: ; Index of First is: ;)</code></p>
<p>Would it be possible to get the index of the array, like:</p>
<p><code>(Index of First is: 0; Index of Second is: 1; Index of Third is: 2; Index of First is: 3;)</code></p>
<p>Thanks!</p>
","2024-01-07 03:23:07","13","Question"
"77771168","77771015","","<p>Your data structure makes the logic more complicated than is needs to be.  Ideally, your list of courses and grades for a student should actually be a dictionary with the course names as key.  Also, the absence of completed courses should be represented by an empty list or dictionary rather than a string (which makes the content type irregular and requires additional conditions in your logic).</p>
<p>Without changing the data structure, the function could temporarily convert the list of courses to a dictionary, update the grade and turn it back into a list for the student:</p>
<pre><code>def add_course(students: dict,   name_student: str, course_info: tuple[str, float]):
    if name_student not in students:
        return &quot;Student not in the database&quot;
    course, newGrade = course_info
    courses          = students[name_student]
    grades           = dict()
    if courses != &quot;no completed courses&quot;:
        grades.update(courses)
    grades[course]   = max(grades.get(course,newGrade),newGrade)
    students[name_student] =  list(grades.items())
</code></pre>
<p>With a more appropriate data structure (i.e. values of students are {course:grade} dictionaries, empty when no courses completed), the function would be more straightforward:</p>
<pre><code>def add_course(students: dict,   name_student: str, course_info: tuple[str, float]):
    if name_student not in students:
        return &quot;Student not in the database&quot;
    course, newGrade = course_info
    grades           = students[name_student]
    grades[course]   = max(grades.get(course,newGrade),newGrade)
</code></pre>
","2024-01-06 21:54:39","0","Answer"
"77771015","","Update dictionary only when new entry is bigger than previous one","<p>I need to create a student database, where courses (in the format of a tuple (Course name: int, grade: int) are added to a dictionary (students: dict). However, if the student already completed the course (there is already a course with same name in database), this should only replace the previous value, if the new grade is bigger than old one.</p>
<p>I have tried several things, but am struggling to make sure only grades that were greater update the dictionary</p>
<pre><code>def add_course(students: dict,   name_student: str, course_info: tuple[str, float]):
    course_name = course_info[0]
    grade = course_info[1]
    courses = students[name_student ]

    if name_student in students.keys(): 
        if courses == &quot;no completed courses&quot;: #check whether has any entry
            students[name_student] = [course_info]
            return
        else: #= student is in database and has other entries 
            for i in range(len(courses)):
                if courses[i][0] == course_name: #if there is course name with other 
                    if int(courses[i][1]) &lt; int(grade):
                        courses[i][1] = grade
                        students[name_student] = courses
                        break
                    else: #if grade is smaller, do nothing 
                        break
             #if no course with same name
                elif course_name not in courses[i][0]:
                    print(&quot;courses&quot;, courses)
                    print(&quot;course name&quot;, course_name)
                    courses.append((course_name, grade))
                    students[name_student] = courses
                  print(&quot;students[name_student]&quot;,students[name_student])
                    return
    else:
        return &quot;Student not in the database&quot;


    #output
    # print(f&quot;{name_student}:&quot;)

if __name__ == &quot;__main__&quot;:
    students = {&quot;Peter&quot;: &quot;no completed courses&quot;}
    add_course(students, &quot;Peter&quot;, (&quot;Introduction to 
Programming&quot;, 5))
    add_course(students, &quot;Peter&quot;, (&quot;Advanced Programming&quot;, 7))
    add_course(students, &quot;Peter&quot;, (&quot;Advanced Programming&quot;, 5))
    print_student(students, &quot;Peter&quot;)
</code></pre>
","2024-01-06 21:03:58","0","Question"
"77767668","77767603","","<p>To memoize the function <code>gridTraveler</code> without converting keys to strings, you can serialize the parameters as a unique object key.</p>
<p>In JavaScript, objects or arrays used as keys in Maps are compared by their reference, not by their content <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#objects_vs._maps"" rel=""nofollow noreferrer"">MDN Documentation</a>. Therefore, you need a method to generate a consistent, unique object reference for each pair of parameters.</p>
<p>Here's an approach keeping integers only:</p>
<ol>
<li><p>Use a nested map: The outer map keys are <code>m</code>, and each <code>m</code> maps to another map where the keys are <code>n</code>.</p>
</li>
<li><p>Check and set values in this two-level map structure.</p>
</li>
</ol>
<p>Here's how you can implement it:</p>
<pre class=""lang-js prettyprint-override""><code>let map = new Map();

function gridTraveler(m, n) {
    if (m === 0 || n === 0) return 0;
    if (m === 1 &amp;&amp; n === 1) return 1;

    if (!map.has(m)) map.set(m, new Map());
    const mMap = map.get(m);

    if (mMap.has(n)) return mMap.get(n);

    let res = gridTraveler(m - 1, n) + gridTraveler(m, n - 1);
    mMap.set(n, res);
    return res;
}
</code></pre>
<p>In this version, <code>map</code> is a map where each key is an <code>m</code> value, and each value is another map (let's call it <code>mMap</code>). The <code>mMap</code> has keys of <code>n</code> and stores the results. This avoids the need for string conversion and keeps the benefits of memoization.</p>
","2024-01-05 23:25:20","0","Answer"
"77767637","77767603","","<h4>Updated:</h4>
<p>Guessing this is what you want:</p>
<pre><code>function hashKey(m, n) {
  return [m, n].sort().join();
}

let map = new Map();

function gridTraveler(m, n) {
  if (m === 0 || n === 0) return 0;
  if (m === 1 &amp;&amp; n === 1) return 1;

  const key = hashKey(m, n);
  if (map.has(key)) return map.get(key);

  let res = gridTraveler(m - 1, n) + gridTraveler(m, n - 1);
  map.set(key, res);

  return res;
}
</code></pre>
<h5>Origin:</h5>
<p>If you want to use array value as the key, you must keep the reference.</p>
<pre><code>const map = new Map();
const key1 = [1,2];
map.set(key1, 3);
</code></pre>
<blockquote>
<p>Map(1) {Array(2) =&gt; 3}</p>
</blockquote>
<pre><code>map.get(key1); // works
</code></pre>
<blockquote>
<p>3</p>
</blockquote>
<pre><code>map.get([1,2]);  // not work
</code></pre>
<blockquote>
<p>undefined</p>
</blockquote>
","2024-01-05 23:15:43","-1","Answer"
"77767603","","how to store a vector as key of a map","<p>I want to memoize the return result of my function that take two int. i know i could convert the vector as a string like <code>1-2</code> but is there another way to do it ?</p>
<p>I tried to set an array as a map but there is no comparison between array</p>
<pre><code>let map = new Map();

function gridTraveler(m, n){
    if (m === 0 || n === 0)
        return 0;
    if (m === 1 &amp;&amp; n === 1)
        return 1;
    if (map.has([m,n]))
        return map.get([m, n]);
    let res = gridTraveler(m-1, n) + gridTraveler(m, n-1);
    map.set([m, n], res);
    return res;
}
</code></pre>
","2024-01-05 23:07:10","1","Question"
"77764717","77764523","","<p>The best approach is probably to use the database instead of reinventing the wheel. Databases may run completely in memory, or efficiently cache tables in memory for fast queries. Some databases can also run in process. See for example <a href=""https://www.sqlite.org/inmemorydb.html"" rel=""nofollow noreferrer"">SQLite in memory</a>. Make sure to have indices for the columns used for searching. Replicating the same functionality is probably not worth the effort unless you have some very special requirements that are difficult to implement with a database.</p>
<p>If you insist on writing this yourself the simplest option is probably to just use multiple dictionaries. To avoid storing multiple copies of a row you can use dictionaries that map a key to a index in a common list used by all dictionaries. Note that regular dictionaries cannot store multiple values for the same key, see <a href=""https://github.com/dotnet/corefxlab/blob/archive/src/Microsoft.Experimental.Collections/Microsoft/Collections/Extensions/MultiValueDictionary.cs"" rel=""nofollow noreferrer"">MultiValueDictionary</a> if that is needed.</p>
","2024-01-05 12:49:42","1","Answer"
"77764523","","Search value in large table using C# (Dictionary with multiple keys)","<p>I have a table in RAM (from DB + file) with 20+ fields and 100K+ rows. So i need search rows by 6 differents fields. What the best structure for this task in C#?</p>
<ul>
<li>Using List is bad because searching too long.</li>
<li>Using external software (as elastic search) is not good because task used once per day, and no other reason to use external hard software</li>
<li>Using 6 tuples is possible but not nice solution</li>
</ul>
<p>I used 6 Dictionary and can merged it in one custom class, but may be .net has another structure (builded or nuget) about i dont know</p>
","2024-01-05 12:14:32","0","Question"
"77763020","77762898","","<p>I'd probably store the items themselves in a vector, then create an <code>unordered_map</code> from the UID to the index into the vector, something like this:</p>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;class UID, class Item&gt;
class DualMap {
    std::unordered_map&lt;UID, std::size_t&gt; m;
    std::vector&lt;Item&gt; items;
public:
    // insert an item, return its index:
    std::size_t insert(UID id, Item item) { 
        items.push_back(item);
        m.insert(id, items.size()-1);
        return items.size()-1;
    }

    Item *find_by_id(UID id) {
       auto pos = m.find(id);
       if (pos == m.end())
           return nullptr;
       return &amp;items[pos-&gt;second];
    }

    Item *find_by_index(std::size_t index) {
        return items[index];
    }
};
</code></pre>
<p>This isn't <em>drastically</em> different from the approach you outline in the question, but still strikes me as rather cleaner and simpler.</p>
","2024-01-05 07:18:33","3","Answer"
"77762963","77762898","","<p>Perhaps a variant can serve as your key, since you never have both UID and index</p>
<pre class=""lang-cpp prettyprint-override""><code>
struct UID {
  int value;
};

struct Index {
  int value;
};

std::unordered_map&lt;std::variant&lt;UID, Index&gt;, ItemType&gt; items;
</code></pre>
<hr />
<p><strong>Update</strong></p>
<p>This is a incomplete proposal. See the accept one.</p>
","2024-01-05 07:04:57","1","Answer"
"77762898","","How to make a std::unordered_map but with two keys?","<p>I have a list of items and each item has a UID and an index in the list. Depending on the situation I can only access the item via the UID or the index of the item, never both. To store these items I need a data type that can have two keys and behaves like <code>std::unordered_map</code>. Something like this: <code>std::multi_unordered_map&lt;int, int, ItemType&gt; items;</code>, where both <code>int</code>s are keys. The important thing is I should only need one of the two keys to access the item.</p>
<p>I have seen a few versions of &quot;maps with multiple keys&quot; but none fit my usecase.</p>
<ul>
<li><p><a href=""https://github.com/Tessil/ordered-map"" rel=""nofollow noreferrer"">Tessil's library</a> is great, but it only maintains order of insertion (which would be fine as it is always going to be equal to the index of the element) and does not allow to access elements using it.</p>
</li>
<li><p><a href=""https://stackoverflow.com/questions/1112531/what-is-the-best-way-to-use-two-keys-with-a-stdmap"">This question's</a> answer has a nice solution, but it required knowledge of both keys simultaneously, which I will not have. <a href=""https://www.geeksforgeeks.org/implementing-multidimensional-map-in-c/"" rel=""nofollow noreferrer"">This GeeksForGeeks article</a> has the same issue</p>
</li>
</ul>
<p>Is there a library or accepted (standard) solution for this issue?</p>
<p>The only solution I can think of is something like this:</p>
<pre><code>std::unordered_map&lt;int, int&gt; a; //UID, intermediate_value
std::unordered_map&lt;int, int&gt; b; //index, intermediate_value
std::unordered_map&lt;int, ItemType&gt; items; //intermediate_value, item
</code></pre>
<p>Then, I can access the intermediate value using the relevant structure and then use the intermediate value to find the item. Of course I am sure I can make this much more efficient using a <code>std::vector</code> instead of <code>std::unordered_map</code>, but regardless that is a lot of extra steps, which I would like to avoid.</p>
<p>Additionally, I am looking for small libraries (like <a href=""https://github.com/Tessil/ordered-map"" rel=""nofollow noreferrer"">Tessil's</a> I mentioned before). I prefer to avoid something like boost.</p>
","2024-01-05 06:45:49","0","Question"
"77762637","77761829","","<ol>
<li><p>Access &quot;Results&quot; with <code>question_data[&quot;results&quot;]</code></p>
</li>
<li><p>Iterate through its content</p>
</li>
<li><p>Get individual elements</p>
</li>
</ol>
<p>Could be done with this:</p>
<pre class=""lang-py prettyprint-override""><code># Iterate through the list of results
for question in question_data[&quot;results&quot;]:
  # Access the keys of the dictionary
  category = question[&quot;category&quot;]
  question_text = question[&quot;question&quot;]
  correct_answer = question[&quot;correct_answer&quot;]
  incorrect_answers = question[&quot;incorrect_answers&quot;]
  print(f&quot;Category: {category}&quot;)
  print(f&quot;Question: {question_text}&quot;)
  print(f&quot;Correct Answer: {correct_answer}&quot;)
  print(f&quot;Incorrect Answers: {incorrect_answers}&quot;)
</code></pre>
<pre><code>Category: Entertainment: Film
Question: Sign of death.
Correct Answer: Red Shirt
Incorrect Answers: ['Minions', 'Expendables', 'Cannon Fodder']
</code></pre>
","2024-01-05 05:18:02","1","Answer"
"77762435","77761903","","<p>Here's an alternate solution to the <code>Counter</code> solution and the nested for loop above that avoids using libraries but is slightly more efficient than the solution you posted. This solution improves time performance by using a dictionary as an intermediate data structure, which comes with the tradeoff that you have to use additional memory for that dictionary to be more efficient time-wise (depends which is more important to you). And obviously this is more verbose.</p>
<pre><code>def count_nested_values(my_dict: dict, my_list: list):
    counts = {}
    for list_val in my_list:
        if list_val in counts:
            counts[list_val] += 1
        else:
            counts[list_val] = 1

    new_dict = {}
    for k, dict_val in my_dict.items():
        new_dict[k] = 0

        # the following loop could be shortened to this line with
        # list comprehension, a ternary, and sum()
        # new_dict[k] = sum(counts[v] if v in counts else 0 for v in dict_val)
        for list_val in dict_val:
            if list_val in counts:
                new_dict[k] += counts[list_val]

    return new_dict
</code></pre>
<p>I should note that this is basically the same as wjandrea's solution above, just replacing the <code>Counter</code> library and dictionary comprehension with the intermediate dictionary and a for loop, respectively.</p>
<p>Why is this beneficial?</p>
<p>In your solution, you are calling the loop <code>for element in my_list</code> for each key in <code>my_dict</code>, which means that you are reprocessing those values a bunch of times you don't need to. Additionally, for lists in Python, <a href=""https://stackoverflow.com/a/46519854/22486304"">the <code>in</code> operator has O(n) performance</a>. It is O(1) for dictionaries and sets but lists are more expensive. So when you're calling <code>element in values</code>, you're reprocessing each <code>values</code> list for every element in <code>my_list</code>.</p>
<p>Overall, this is going to lead to O(n^3) performance, which is generally not desirable. The scaling factors are</p>
<ol>
<li>outer loop: number of keys in <code>my_dict</code></li>
<li>inner loop: number of values in <code>my_list</code></li>
<li><code>in</code> expression in the <code>if</code> block: number of values in the nested list (size will vary for each key-value pair in <code>my_dict</code>, so it will scale with whatever the largest value list is)</li>
</ol>
<p>So overall you will have <code>(keys in my_dict) * (values in my_list) * (values in nested lists)</code> iterations. In the example input, it's 3 * 6 * 2 = 36 iterations.</p>
<p>The <code>Counter</code> solution and my solution above improve performance by using the following algorithm:</p>
<ol>
<li>Preprocess <code>my_list</code> to count the occurrences of each value in <code>my_list</code> -&gt; the <code>Counter</code> object or the first for loop that builds the plain <code>counts</code> dictionary. Since dictionary reads and writes are constant time or O(1), the cost of this preprocessing is O(n) where n is the size of <code>my_list</code>.</li>
<li>Iterate over the key-value pairs in <code>my_dict</code> via <code>my_dict.items()</code> -&gt; the dictionary comprehension iterable in the <code>Counter</code> solution and the second for loop in mine. The cost of that iteration is O(n) where n is the number of keys in <code>my_dict</code>, so overall, our solution is now at O(n) where n is either the size of <code>my_list</code> and or the number of keys in <code>my_dict</code>, whichever is larger.</li>
<li>For each key-value pair in <code>my_dict</code>, iterate over the nested list value -&gt; input to <code>sum()</code> in the <code>Counter</code> solution and the nested for loop within the second for loop in mine. This means that overall, the number of iterations of the second for loop including the nested for loop is now the number of <em>nested values</em> in <code>my_dict</code>. So now our algorithm's overall performance is O(n) where n is either the size of <code>my_list</code> and or the number of nested values in <code>my_dict</code>, whichever is larger.</li>
<li>Have to look up the nested value in <code>counts</code> to avoid a <code>KeyError</code>. Because <code>counts</code> is a dictionary, lookup is O(1), so doesn't hurt.</li>
</ol>
<p>So the final performance is O(n) as opposed to O(n^3).</p>
<p>tl;dr if you don't care about the time efficiency of your solution – like if you know the input is never going to be large – your solution is correct and will get the job done. But if you care about performance for your solution or for educational purposes, this implementation will be somewhat more efficient, and it also shows roughly what the <code>Counter</code> solution does under the hood (there are likely some further optimizations there though).</p>
","2024-01-05 03:59:57","1","Answer"
"77762029","77761903","","<p><strong>Using nested loops and a count variable:</strong></p>
<pre><code>for key, values in my_dict.items():
    count = 0
    for element in my_list:
        if element in values:
            count += 1
    new_dict[key] = count
</code></pre>
","2024-01-05 01:10:18","0","Answer"
"77762013","77761829","","<p>You can use json to parse the data:</p>
<pre><code>
import pprint
import json

pp = pprint.PrettyPrinter(indent=4)

question_data =&quot;&quot;&quot;{
    &quot;response_code&quot;: 0,
    &quot;results&quot;: [
        {
            &quot;type&quot;: &quot;multiple&quot;,
            &quot;difficulty&quot;: &quot;medium&quot;,
            &quot;category&quot;: &quot;Entertainment: Film&quot;,
            &quot;question&quot;: &quot;Sign of death.&quot;,
            &quot;correct_answer&quot;: &quot;Red Shirt&quot;,
            &quot;incorrect_answers&quot;: [
                &quot;Minions&quot;,
                &quot;Expendables&quot;,
                &quot;Cannon Fodder&quot;
            ]
        }
    ]
}&quot;&quot;&quot;

print(&quot;Pretty Print for better overview:&quot;)
pp.pprint(question_data)

y = json.loads(question_data)
# print(y)

for k,v in y.items():
    print(f&quot;Key: {k} Value: {v}\n&quot;)
    
##############################################
print(&quot;VALUES:&quot;) # use list comprehensive loop
##############################################

# Access response_code
print(&quot;response_code:&quot;, [v for k,v in y.items() if k == &quot;response_code&quot;])

# Access e.g. category and the similar for other values in this list
print(&quot;category:&quot;, [v for k,v in y['results'][0].items() if k == &quot;category&quot;])

# Access incorrect answer level with list element 0
print(&quot;incorrect_answers:&quot;, y['results'][0]['incorrect_answers'][0])
</code></pre>
<p>Output:</p>
<pre><code>Pretty Print for better overview:
('{\n'
 '    &quot;response_code&quot;: 0,\n'
 '    &quot;results&quot;: [\n'
 '        {\n'
 '            &quot;type&quot;: &quot;multiple&quot;,\n'
 '            &quot;difficulty&quot;: &quot;medium&quot;,\n'
 '            &quot;category&quot;: &quot;Entertainment: Film&quot;,\n'
 '            &quot;question&quot;: &quot;Sign of death.&quot;,\n'
 '            &quot;correct_answer&quot;: &quot;Red Shirt&quot;,\n'
 '            &quot;incorrect_answers&quot;: [\n'
 '                &quot;Minions&quot;,\n'
 '                &quot;Expendables&quot;,\n'
 '                &quot;Cannon Fodder&quot;\n'
 '            ]\n'
 '        }\n'
 '    ]\n'
 '}')
Key: response_code Value: 0

Key: results Value: [{'type': 'multiple', 'difficulty': 'medium', 'category': 'Entertainment: Film', 'question': 'Sign of death.', 'correct_answer': 'Red Shirt', 'incorrect_answers': ['Minions', 'Expendables', 'Cannon Fodder']}]

VALUES:
response_code: [0]
category: ['Entertainment: Film']
incorrect_answers: Minions

</code></pre>
","2024-01-05 01:05:26","-1","Answer"
"77761947","77761903","","<p>You can use a <a href=""https://docs.python.org/3/library/collections.html#collections.Counter"" rel=""nofollow noreferrer""><code>Counter</code></a> to get the counts beforehand. This saves you having to count each element each loop; all you have to do is look up the count.</p>
<pre><code>from collections import Counter

counts = Counter(my_list)

new_dict = {k: sum(counts[e] for e in v) for k,v in my_dict.items()}
</code></pre>
<p>Result:</p>
<pre><code>{'A': 2, 'B': 2, 'C': 2}
</code></pre>
","2024-01-05 00:42:20","0","Answer"
"77761903","","Count from a list the number of values in a key","<p>I have one dictionary with keys and a list as a value. I want to create a new dictionary which will store the KEY of my_dict but as a value the count of letters that correlate with my_list. If KEY 'A' has 'A', 'B' then I want to count if I find the amount of 'A' or 'B' in my_list.</p>
<p>Also I would like to know how to do it in vanilla Python using nested for loops because I've seen people use:</p>
<pre><code>new_dict = [my_dict[x] for x in my_list if x in my_dict]
</code></pre>
<p>Which I don't really understand fully. I hope I expressed myself correctly.</p>
<pre><code>my_dict = {'A': ['A', 'B'], 'B': ['C', 'D'], 'C': ['E', 'F']}
my_list = ['A', 'D', 'A', 'C', 'F', 'F']
new_dict = {}
</code></pre>
<p>**Output:
**</p>
<pre><code>{'A': 2, 'B': 2, 'C': 2} 
</code></pre>
<p>Since key 'A' had as a value 'A', 'B' there was only two A's in my_list but no B's so the count is 2 and that's the value in case of confusion.</p>
<pre><code>new_dict = [my_dict[x] for x in my_list if x in my_dict]
</code></pre>
<p>And I tried to nested for loops but I struggle with nested for loops</p>
","2024-01-05 00:26:31","0","Question"
"77761829","","How to access key value pairs in mixed nested lists and dictionaries?","<p>someone please show me how to access key value pairs of this sort. I want to access the &quot;category&quot;, &quot;question&quot;, &quot;correct answer&quot;, &quot;incorrect answer&quot;. I could remove the &quot;response code&quot; and &quot;results&quot; and only work with the nested dict within a list, but I wanted to try without manipulating the data. I know a for loop will be used.</p>
<pre><code>question_data = {&quot;response_code&quot;: 0,
                 &quot;results&quot;: [
                     {&quot;type&quot;: &quot;multiple&quot;,
                      &quot;difficulty&quot;: &quot;medium&quot;,
                      &quot;category&quot;: &quot;Entertainment: Film&quot;,
                      &quot;question&quot;: &quot;Sign of death.&quot;,
                      &quot;correct_answer&quot;: &quot;Red Shirt&quot;,
                      &quot;incorrect_answers&quot;: [&quot;Minions&quot;, &quot;Expendables&quot;, &quot;Cannon Fodder&quot;]
                      }
                      ]
                        
</code></pre>
","2024-01-05 00:00:47","-1","Question"
"77761762","77761069","","<p>IIUC, you want the <a href=""https://en.wikipedia.org/wiki/Eulerian_path"" rel=""nofollow noreferrer"">Eulerian path</a> of each vehicle :</p>
<pre><code>import pandas as pd
import networkx as nx
from itertools import chain, groupby

NODE = 0

d = {}

for vehicle, routes in tours.items():
    G = nx.DiGraph()
    G.add_edges_from([[*map(int, x.split(&quot;,&quot;))] for x in routes])

    s = pd.Series(chain.from_iterable(nx.eulerian_path(G, source=NODE)))
       
    d[vehicle] = (s.groupby((s.eq(NODE) &amp; s.iloc[1:-1].duplicated()).cumsum())
                    .agg(lambda x: [k for k, _ in groupby(x)]).tolist())
</code></pre>
<p>Output :</p>
<pre><code>print(d) # {'V0': [[0, 3, 0]], 'V1': [[0, 3, 2, 0], [0, 8, 0]]}
</code></pre>
<p>Tours of both vehicles :</p>
<p><a href=""https://i.sstatic.net/MkeaB.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/MkeaB.png"" alt=""enter image description here"" /></a></p>
<p><strong>Update</strong> (<em>requested in the comments</em>) :</p>
<p>To conditionally color the nodes, you can use :</p>
<pre><code>colors = {
    k: &quot;black&quot; if k == 0
    else &quot;green&quot; if 1 &lt;= k &lt;= 4
    else &quot;red&quot; for k in range(10)
}

# to put inside the outer loop
for node in G.nodes:
    G.nodes[node][&quot;style&quot;] = &quot;filled&quot;
    G.nodes[node][&quot;fillcolor&quot;] = colors[node]
    if node == 0:
        G.nodes[node][&quot;fontcolor&quot;] = &quot;white&quot;
</code></pre>
","2024-01-04 23:35:12","1","Answer"
"77761216","77761069","","<p>Main idea is to organize the data into a tree and then do a depth-first-search to retrieve the valid routes.</p>
<p>Organize data into tree:</p>
<pre><code>tours = {'V0': ['0,3', '3,0'], 'V1': ['0,3', '0,8', '2,0', '3,2', '8,0']}

tours2 = {}

for vehicle, routes in tours.items():
    route_tree = {}
    for route in routes:
        frm,to = route.split(',')
        frm = int(frm)
        to = int(to)
        
        if frm in route_tree:
            route_tree[frm].append(to)
        else:
            route_tree[frm] = [to]
    tours2[vehicle] = route_tree
</code></pre>
<p>tours2:</p>
<pre><code>{'V0': {0: [3], 3: [0]}, 'V1': {0: [3, 8], 2: [0], 3: [2], 8: [0]}}
</code></pre>
<p>DFS for valid routes:</p>
<pre><code>routes = {}

for vehicle in tours2:
    running_routes = [[0]]
    completed_routes = []

    while running_routes:
        running_route = running_routes.pop()
        
        if running_route[-1] == 0 and len(running_route) &gt; 1:
            completed_routes.append(running_route)
        else:
            for nxt_node in tours2[vehicle][running_route[-1]]:
                running_routes.append(running_route + [nxt_node])

    routes[vehicle] = completed_routes
</code></pre>
<p>routes:</p>
<pre><code>{'V0': [[0, 3, 0]], 'V1': [[0, 8, 0], [0, 3, 2, 0]]} 
</code></pre>
","2024-01-04 21:08:18","1","Answer"
"77761193","77761069","","<p>Here is a working solution in O(N^2) where N is the number of nodes, if no point can be reached twice.</p>
<pre class=""lang-py prettyprint-override""><code>tours = {'V0': ['0,3', '3,0'], 'V1': ['0,3', '0,8', '2,0', '3,2', '8,0']}


def process(value):
    result = []  # the final result

    nodes = {}  # a dictionary in the form of start_node: end_node
    starts = []  # a list of pairs (start, end) where start is 0

    for val in value:  # goes through each step
        a, b = val.split(&quot;,&quot;)  # get start and end
        nodes[a] = b  # add the node to nodes
        if a == &quot;0&quot;:  # if the step is a start, add it to starts
            starts.append((a, b))

    for a, b in starts:  # go through each starts
        inter = [a, b]  # list representing one route
        while b != &quot;0&quot;:  # as long as we didn't return to 0, continue
            b = nodes[b]  # get the next node
            inter.append(b)  # add it to the route
        result.append(inter)

    return result


def convert():
    &quot;&quot;&quot;
    Goes through each truck and process it's routes.
    &quot;&quot;&quot;
    result = {}
    for k, v in tours.items():
        result[k] = process(v)
    return result


print(convert())
</code></pre>
<p>This gave the result:</p>
<p><code>{'V0': [['0', '3', '0']], 'V1': [['0', '3', '2', '0'], ['0', '8', '0']]}</code></p>
<p>If you want the second list to be of dimension 1, you can just add an if check in the process method like so:</p>
<pre class=""lang-py prettyprint-override""><code>def process(value):
    result = []  # the final result

    nodes = {}  # a dictionary in the form of start_node: end_node
    starts = []  # a list of pairs (start, end) where start is 0

    for val in value:  # goes through each step
        a, b = val.split(&quot;,&quot;)  # get start and end
        nodes[a] = b  # add the node to nodes
        if a == &quot;0&quot;:  # if the step is a start, add it to starts
            starts.append((a, b))

    for a, b in starts:  # go through each starts
        inter = [a, b]  # list representing one route
        while b != &quot;0&quot;:  # as long as we didn't return to 0, continue
            b = nodes[b]  # get the next node
            inter.append(b)  # add it to the route
        result.append(inter)

    if len(result) == 1:
        return result[0]
    return result

</code></pre>
","2024-01-04 21:02:54","1","Answer"
"77761148","77761035","","<p>Instead of using</p>
<pre><code>if accnuminput == (bank[&quot;sam&quot;][0]):
</code></pre>
<p>you can check if the bank number &quot;1234&quot; is present in the any of the account details (account details is the list containing the bank number and balance.</p>
<p>So the final code will look something like this:</p>
<pre><code>print(&quot;Welcome to the bank!\n&quot;)

bank = {
    &quot;sam&quot;: [1234, 150],
    &quot;bob&quot;: [1235, 250],
}

print(&quot;Please select an action:\n&quot;)
print(&quot;1. Check balance \n2. Withdraw money \n3. Deposit money \n4. Exit\n&quot;)

action = int(input(&quot;Selected action: &quot;))
accnuminput = int(input(&quot;Please enter account number: &quot;))

if action == 1:

    # Check if the account number exists in the bank dictionary
    if accnuminput in {acc[0] for acc in bank.values()}:

        # Access the balance using the entered account number
        for name, acc_details in bank.items():
            if acc_details[0] == accnuminput:
                print(f&quot;Balance for {name}: {acc_details[1]}&quot;)
                break
        else:
            print(&quot;Account not found.&quot;)

</code></pre>
<p>But the more appropriate solution would be to restructure your dictionary by using bank account number as key and name, balance as values:</p>
<pre class=""lang-py prettyprint-override""><code>print(&quot;Welcome to the bank!\n&quot;)

bank = {
    1234: {&quot;name&quot;: &quot;sam&quot;, &quot;balance&quot;: 150},
    1235: {&quot;name&quot;: &quot;bob&quot;, &quot;balance&quot;: 250},
}

print(&quot;Please select an action:\n&quot;)
print(&quot;1. Check balance \n2. Withdraw money \n3. Deposit money \n4. Exit\n&quot;)

action = int(input(&quot;Selected action: &quot;))
accnuminput = int(input(&quot;Please enter account number: &quot;))

if action == 1:

    # Check if the account number exists in the bank dictionary
    if accnuminput in bank:

        # Access the balance using the entered account number
        account_details = bank[accnuminput]
        print(f&quot;Balance for {account_details['name']}: {account_details['balance']}&quot;)
    else:
        print(&quot;Account not found.&quot;)
</code></pre>
<p>Here we are using dictionary of dictionaries but you could also use dictionary of lists.</p>
","2024-01-04 20:53:02","0","Answer"
"77761070","77761035","","<p>Put the user name into a variable (here, I'm prompting it from the user), and use it as a key for your <code>bank</code>.</p>
<p>I also changed the data structure a bit so it's easier for a single user to have multiple bank accounts; it's now (conceptually) <code>{user: {account: balance}}</code>.</p>
<p>This will crash with a KeyError if an user enters an invalid account number, but that's the next thing for you to solve.</p>
<pre><code>bank = {
    &quot;sam&quot;: {1234: 150, 1236: 800},
    &quot;bob&quot;: {1235: 250},
}

print(&quot;welcome to bank!\n&quot;)
user = input(&quot;please enter your name:&quot;)

if user not in bank:
    print(&quot;user not found&quot;)
    exit()

print(f&quot;hi {user}, your account numbers are {sorted(bank[user])}&quot;)

print(&quot;please select an action:\n&quot;)
print(&quot;1. check balance \n2. withdraw money \n3. deposit money \n4. exit\n&quot;)
action = int(input(&quot;selected action:&quot;))
accnuminput = int(input(&quot;please enter account number:&quot;))
if action == 1:
    print(
        f&quot;{user}, the balance of your account {accnuminput} is {bank[user][accnuminput]}&quot;
    )
</code></pre>
<p>An example run:</p>
<pre><code>welcome to bank!

please enter your name:sam
hi sam, your account numbers are [1234, 1236]
please select an action: (...)
selected action:1
please enter account number:1234
sam, the balance of your account 1234 is 150
</code></pre>
","2024-01-04 20:33:52","1","Answer"
"77761069","","Dictionary where values can be either a list or a list of lists","<p>I am trying to plot the result of truck routing optimization using networkx library. First I must prepare the data and I am stuck.</p>
<p>Here is small example of the initial data:</p>
<pre><code>Vehicle       Route  
0       V0   [0,3](V0) 
1       V0   [3,0](V0)  
2       V1   [0,3](V1) 
3       V1   [0,8](V1) 
4       V1   [2,0](V1) 
5       V1   [3,2](V1) 
6       V1   [8,0](V1) 
</code></pre>
<p>There are two trucks: V0 and V1. The route for V0 is: 0 to 3 to 0. But V1 has TWO routes: 0 to 8 to 0 AND 0 to 3 to 2 to 0.</p>
<p>Every tour must start and end at node 0.</p>
<p>I must solve two issues:</p>
<ol>
<li>For each truck (V0, V1) I must find all the tours within a given list that starts and end with zero</li>
<li>The flow of tours can not have breaks: the end of each sub-tour [0,8] must be the beginning of the next one [8,0]</li>
</ol>
<p>the final result must look:</p>
<pre><code>{'V0': [0,3,0], 'V1': [[0,3,2,0], [0,8,0]]}
</code></pre>
<p>I have a code but it does not produce what I want:</p>
<pre><code>tours = {'V0': ['0,3', '3,0'], 'V1': ['0,3', '0,8', '2,0', '3,2', '8,0']}


def convert_to_list(s):
    return list(map(int, s.split(',')))

# Function to process each value in the 'tours' dictionary
def process_value(value):
    result = []
    current_list = []

    for pair in value:
        pair_list = convert_to_list(pair)

        if not current_list or pair_list[0] == 0:
            current_list.extend(pair_list)
        elif pair_list[1] == 0:
            current_list.append(pair_list[0])
            current_list.append(0)
            result.append(current_list)
            current_list = [0]
        else:
            current_list.append(pair_list[0])

    if current_list:
        current_list.append(0)
        result.append(current_list)

    return result

# Create the 'tours1' dictionary using the processing functions
tours1 = {key: process_value(value) for key, value in tours.items()}

# Print the result
print(tours1)
</code></pre>
<p>OUTPUT:</p>
<pre><code>{'V0': [[0, 3, 3, 0], [0, 0]], 'V1': [[0, 3, 0, 8, 2, 0], [0, 3, 8, 0], [0, 0]]}
</code></pre>
<p>Any ideas?</p>
<p>Thank you!</p>
","2024-01-04 20:33:30","0","Question"
"77761035","","how do i make my for loop do the same thing for different arguments without writing more cases?","<p>so i wrote code that simulates a bank balance checker that what it does is output a number when you give it a account number.</p>
<pre><code>print(&quot;welcome to bank!\n&quot;)
bank = {
    &quot;sam&quot;: [1234, 150],
    &quot;bob&quot;: [1235, 250],
}

print(&quot;please select an action:\n&quot;)
print(
    &quot;1. check balance \n2. withdraw money \n3. deposit money \n4. exit\n&quot;
)
action = int(input(&quot;selected action:&quot;))
accnuminput = int(input(&quot;please enter account number:&quot;))
if action == 1:
    if accnuminput == (bank[&quot;sam&quot;][0]):
        print(bank[&quot;sam&quot;][1])
</code></pre>
<p>what i did before was just add another elif every time i added an account, like so:</p>
<pre><code>if accnuminput == (bank[&quot;sam&quot;][0]):
    print(bank[&quot;sam&quot;][1])
if accnuminput == (bank[&quot;bob&quot;][0]):
    print(bank[&quot;bob&quot;][1])
</code></pre>
<p>but i understood that if you have a lot of accounts that is not viable, so i wanted to ask is there any way to do this so that the same formula works for any account ask for and that i don't have to write a new case for every entry?
thank you.</p>
","2024-01-04 20:26:21","0","Question"
"77759490","77758565","","<p>For an iterator based approach, you could use the <code>tee</code> function from itertools to &quot;snapshot&quot; an iterator on the dictionary's keys.</p>
<pre><code>from itertools import tee

d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

iterd = iter(d)
for k in d:
    print(k+&quot;:&quot;)
    next(iterd)
    iterd,rest = tee(iterd)    
    for k in rest:
        print(&quot;\t&quot;,k)
</code></pre>
<p>output:</p>
<pre><code>a:
     b
     c
b:
     c
c:
</code></pre>
<p><em>note: This solution, while conceptually interesting, is probably quite bad from an efficiency perspective</em></p>
<p>A more efficient solution would be to use a queue:</p>
<pre><code>from collections import deque

d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

qd = deque(d)
while qd:
    print(qd.popleft()+&quot;:&quot;)  
    for k in qd:
        print(&quot;\t&quot;,k)
</code></pre>
<p>or a simple list (without deleting/popping items):</p>
<pre><code>d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

ld = list(d)
for i,k in enumerate(ld,1):
    print(k+&quot;:&quot;)  
    for j in range(i,len(d)):
        print(&quot;\t&quot;,ld[j])
</code></pre>
","2024-01-04 15:44:41","1","Answer"
"77758910","77758565","","<p>Two iterator solutions...</p>
<p>This one explicitly creates an iterator so we can access it (unlike the implicit iterator used by <code>for k in d:</code>). Then we iterate over that iterator. After getting each key via the <code>for k in keys:</code>, the iterator is an iterator over the remaining keys. A shallow copy lets us iterate over them without disturbing our main iterator and without copying the dict contents.</p>
<pre class=""lang-py prettyprint-override""><code>from copy import copy

d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

keys = iter(d)
for k in keys:
    print(k + &quot;:&quot;)
    for k in copy(keys):
        print(&quot;\t&quot; + k)
</code></pre>
<p>Output (<a href=""https://ato.pxeger.com/run?1=m72soLIkIz9vwYKlpSVpuhY3Z6QV5ecqJOcXVCpk5hbkF5WA2VxcKQq2CtUKSolKVgqGOgpKSUDaCEgnA2ljhVouruzUymKgksyS1CKNFE2utPwihWyFzDwFkLgVlwIQFBRl5pVoZCtoKyhZKWmCheCqQHZogJRqQtQi1CvFlCgBtWRrQtwHdSbMuQA"" rel=""nofollow noreferrer"">Attempt This Online!</a>):</p>
<pre><code>a:
    b
    c
b:
    c
c:
</code></pre>
<p>Alternatively, with <code>islice</code> (<a href=""https://ato.pxeger.com/run?1=RY49DoJAEIX7PcXLVBCxQBtD4hU8gQ3CEifIDlmGwhhPYkMjd_I2Lj_Gab5k8r6Z9xrbu17FDcO712p7-IyVlwas1qvIrQM3rXgFdzcurDEljniAcsqQJqBL4C6wCNzjaUwlHpygBjtY1zfW52qjMkEaZwZhWs9OoxobUEbxvJqcWVieTOlw4iTOrs7fo7NSUOt4abuW_pX_Ag"" rel=""nofollow noreferrer"">Attempt This Online!</a>):</p>
<pre class=""lang-py prettyprint-override""><code>from itertools import islice

d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

for i, k in enumerate(d, 1):
    print(k + &quot;:&quot;)
    for k in islice(d, i, None):
        print(&quot;\t&quot; + k)
</code></pre>
<p>Each <code>islice</code> &quot;skips&quot; the first <code>i</code> keys by quickly iterating over them, so that's somewhat wasteful double iteration overall. But it's pretty quick, especially compared to <code>print</code>s.</p>
<hr />
<p>Two more solutions, they do copy contents but are shorter than yours.</p>
<pre><code>d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

ks = list(d)
for i, k in enumerate(ks, 1):
    print(k + &quot;:&quot;)
    for k in ks[i:]:
        print(&quot;\t&quot; + k)
</code></pre>
<pre><code>d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

ks = list(d)
while ks:
    print(ks.pop(0) + &quot;:&quot;)
    for k in ks:
        print(&quot;\t&quot; + k)
</code></pre>
<p>The latter was inspired by <a href=""https://stackoverflow.com/a/77758739/12671057"">Guy's</a>.</p>
","2024-01-04 14:12:56","2","Answer"
"77758739","77758565","","<p>Since order is not important you can just pop a key every time and get the rest</p>
<pre><code>d = {&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3}
temp_d = d.copy()
while temp_d:
    print(temp_d.popitem()[0] + &quot;:&quot;, temp_d.keys())
</code></pre>
<p>you can get rid of <code>temp_d</code> if you don't need the original dictionary anymore.</p>
","2024-01-04 13:43:21","1","Answer"
"77758636","77758565","","<pre><code>d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }
k = list(d)
for i in range(len(k)):
    print(k[i], k[i+1:])
</code></pre>
","2024-01-04 13:27:20","2","Answer"
"77758565","","How to iterate over the remaining items in a dict while looping through that dict?","<p>Is there a cleaner way to iterate over the follow-up keys of a dict when iterating over a dict?</p>
<pre class=""lang-py prettyprint-override""><code>d = { &quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3 }

k = list(d.keys())

for i in range(len(k)):
    print(k[i] + &quot;:&quot;)
    for j in range(i+1, len(k)):
        print(&quot;\t&quot; + k[j])
</code></pre>
<pre class=""lang-none prettyprint-override""><code>a:
    b
    c
b:
    c
c:
</code></pre>
<p>It feels like it should be possible to use iterators.</p>
","2024-01-04 13:17:52","0","Question"
"77757385","77756326","","<p>Iterating on the columns can be efficient, since operation is on the whole columns, and not the rows. Ultimately, you'll need to test it on your data, especially as the size increases:</p>
<pre class=""lang-py prettyprint-override""><code>mapping = {'key1':['colA','colD'],'key2':'colB','key3':'colC'}
new_df = df.copy()
for key, value in mapping.items():
    out = df.loc[:, value]
    out = out.where(df['key']==key, 'NA')
    new_df.loc[:, value] = out

print(new_df)
    key     colA     colB     colC     colD
0  key1  value1A       NA       NA  value1D
1  key2       NA  value2B       NA       NA
2  key3       NA       NA  value3C       NA
3  key1  value4A       NA       NA  value4D
4  key2       NA  value5B       NA       NA
</code></pre>
","2024-01-04 10:04:57","1","Answer"
"77756405","77756326","","<p>IIUC, you can use <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.where.html"" rel=""nofollow noreferrer""><code>pandas.DataFrame.where</code></a> to replace the locations that don't have the correct column, key combination. I stored the combinations in a dictionary and looped through them. While loops are not very efficient, assuming you don't have a ton of columns/keys, it should be plenty fast enough and (more importantly) readable.</p>
<pre class=""lang-py prettyprint-override""><code>mappings = {&quot;key1&quot;:[&quot;colA&quot;, &quot;colD&quot;], &quot;key2&quot;:[&quot;colB&quot;], &quot;key3&quot;:[&quot;colC&quot;]}
for key, cols in mappings.items():
    for col in cols:
        df[col] = df.where(df[&quot;key&quot;] == key)[col]
</code></pre>
<p>Result:</p>
<pre><code>    key     colA     colB     colC     colD
0  key1  value1A      NaN      NaN  value1D
1  key2      NaN  value2B      NaN      NaN
2  key3      NaN      NaN  value3C      NaN
3  key1  value4A      NaN      NaN  value4D
4  key2      NaN  value5B      NaN      NaN
</code></pre>
<p>If it's important to have <code>&quot;NA&quot;</code> instead of <code>NaN</code>, you can add that to the <code>df.where</code> call.</p>
<pre class=""lang-py prettyprint-override""><code>mappings = {&quot;key1&quot;:[&quot;colA&quot;, &quot;colD&quot;], &quot;key2&quot;:[&quot;colB&quot;], &quot;key3&quot;:[&quot;colC&quot;]}
for key, cols in mappings.items():
    for col in cols:
        df[col] = df.where(df[&quot;key&quot;] == key, &quot;NA&quot;)[col]
</code></pre>
<p>Result:</p>
<pre><code>    key     colA     colB     colC     colD
0  key1  value1A       NA       NA  value1D
1  key2       NA  value2B       NA       NA
2  key3       NA       NA  value3C       NA
3  key1  value4A       NA       NA  value4D
4  key2       NA  value5B       NA       NA
</code></pre>
","2024-01-04 07:02:12","0","Answer"
"77756381","77756326","","<p>You could build a mask in a vectorial way with a dictionary of the key/columns, <a href=""https://pandas.pydata.org/docs/reference/api/pandas.get_dummies.html"" rel=""nofollow noreferrer""><code>get_dummies</code></a> and use it to <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mask.html"" rel=""nofollow noreferrer""><code>mask</code></a> the unwanted values:</p>
<pre><code>d = {'key1': ['colA', 'colD'],
     'key2': ['colB'],
     'key3': ['colC'],
    }

s = pd.Series(d).explode()
mask = pd.get_dummies(s, dtype=bool).groupby(level=0).max()

cols = df.columns.difference(['key'])

df[cols] = df[cols].where(mask.reindex(df['key']).to_numpy(), 'NA')
</code></pre>
<p>Output:</p>
<pre><code>    key     colA     colB     colC     colD
0  key1  value1A       NA       NA  value1D
1  key2       NA  value2B       NA       NA
2  key3       NA       NA  value3C       NA
3  key1  value4A       NA       NA  value4D
4  key2       NA  value5B       NA       NA
</code></pre>
<p>Intermediates:</p>
<pre><code># mask
       colA   colB   colC   colD
key1   True  False  False   True
key2  False   True  False  False
key3  False  False   True  False

# mask.reindex(df['key']).to_numpy()
[[ True False False  True]
 [False  True False False]
 [False False  True False]
 [ True False False  True]
 [False  True False False]]
</code></pre>
<hr />
<p>Another approach could be to use reshaping of your data, filtering with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.merge.html"" rel=""nofollow noreferrer""><code>merge</code></a>:</p>
<pre><code>d = {'key1': ['colA', 'colD'],
     'key2': ['colB'],
     'key3': ['colC'],
    }

(df.reset_index()
   .melt(['index', 'key'])
   .merge(pd.Series(d).explode().rename_axis('key')
            .reset_index(name='variable'))
   .set_index(['index', 'key', 'variable'])['value']
   .unstack('variable', fill_value='NA')
   .reset_index('key').rename_axis(index=None, columns=None)
)
</code></pre>
","2024-01-04 06:55:59","2","Answer"
"77756326","","How to map multiple columns in a dataframe based on the value of ""key"" column using numpy?","<p>Running this code:</p>
<pre><code>import pandas as pd
import numpy as np

# Create a sample DataFrame
data = {
    'key': ['key1', 'key2', 'key3', 'key1', 'key2'],
    'colA': ['value1A', 'value2A', 'value3A', 'value4A', 'value5A'],
    'colB': ['value1B', 'value2B', 'value3B', 'value4B', 'value5B'],
    'colC': ['value1C', 'value2C', 'value3C', 'value4C', 'value5C'],
    'colD': ['value1D', 'value2D', 'value3D', 'value4D', 'value5D']
}

df = pd.DataFrame(data)

# Create conditions
conditions = [df['key'] == 'key1',
            df['key'] == 'key2',
            df['key'] == 'key3']

# Apply conditions and choices to the respective columns
df['colA'] = np.select([df['key'] == 'key1'], [df['colA']], default= 'NA')
df['colD'] = np.select([df['key'] == 'key1'], [df['colD']], default= 'NA')
df['colB'] = np.select([df['key'] == 'key2'], [df['colB']], default= 'NA')
df['colC'] = np.select([df['key'] == 'key3'], [df['colC']], default= 'NA')

# Display the resulting DataFrame
print(df)
</code></pre>
<p>Produces this:</p>
<pre><code>         key     colA     colB     colC     colD
0  key1  value1A       NA       NA  value1D
1  key2       NA  value2B       NA       NA
2  key3       NA       NA  value3C       NA
3  key1  value4A       NA       NA  value4D
4  key2       NA  value5B       NA       NA
</code></pre>
<p>Is there a way to rewrite this efficiently so I don't have to do numpy.select for each column I want to map? The &quot;key&quot; column essentially determines which columns contain valid data for that particular row. If the data is invalid I want to mark it as NA, if it is valid I want to keep the value that's in the row. In my real dataset, the &quot;key&quot; column controls how I would map more than one column like how key1 controls the mapping to colA and colD above. I prefer to use numpy or other vectorized methods as from what I understand it is faster than other methods such as map but I'm open to hearing any and all ideas.</p>
","2024-01-04 06:43:18","0","Question"
"77752748","77752656","","<p>You could convert the structure into a flat one before transforming, then insert the indexes. Example:</p>
<pre class=""lang-js prettyprint-override""><code>%dw 2.0
output application/json
---
payload flatMap ((product) -&gt; 
    product.items map ((item) -&gt; {PNR: product.productNo, Color: item.color} ))
    map ((item, index) -&gt; item update {
        case .ID! -&gt; index
    })
</code></pre>
<p>Output:</p>
<pre class=""lang-json prettyprint-override""><code>[
  {
    &quot;PNR&quot;: &quot;00011111&quot;,
    &quot;Color&quot;: &quot;000000000006000060&quot;,
    &quot;ID&quot;: 0
  },
  {
    &quot;PNR&quot;: &quot;00011111&quot;,
    &quot;Color&quot;: &quot;000000000006000061&quot;,
    &quot;ID&quot;: 1
  },
  {
    &quot;PNR&quot;: &quot;00022222&quot;,
    &quot;Color&quot;: &quot;000000000006000060&quot;,
    &quot;ID&quot;: 2
  },
  {
    &quot;PNR&quot;: &quot;00022222&quot;,
    &quot;Color&quot;: &quot;000000000006000061&quot;,
    &quot;ID&quot;: 3
  }
]
</code></pre>
","2024-01-03 15:00:35","1","Answer"
"77752656","","How to create incremental counter in mulesoft dataweave","<p>We have multilevel array so we are using transformation of multiple map function. In this case how to assign a field ID with incremental value.</p>
<p>Input:</p>
<pre><code>[
  {
    &quot;productNo&quot;: &quot;00011111&quot;,
    &quot;items&quot;: [
      {
        &quot;color&quot;: &quot;000000000006000060&quot;,
      },
      {
        &quot;color&quot;: &quot;000000000006000061&quot;,
      }
    ]
  },      
  {
    &quot;productNo&quot;: &quot;00022222&quot;,
    &quot;items&quot;: [
      {
        &quot;color&quot;: &quot;000000000006000060&quot;
      },
      {
        &quot;color&quot;: &quot;000000000006000061&quot;
      }
    ]
  }
]
</code></pre>
<p>Dataweave code I tried for this:</p>
<pre><code>%dw 2.0
output application/json
---
flatten(payload map (item, index) -&gt; item.items map (subItem, subIndex) -&gt; {
    &quot;ID&quot;: subIndex,
    &quot;PNR&quot;: item.productNo,
    &quot;Color&quot;: subItem.color
})
</code></pre>
<p>Expected output:</p>
<pre><code>[
  {
    &quot;ID&quot;: 1,
    &quot;PNR&quot;: 00011111,
    &quot;Color&quot;: &quot;000000000006000060&quot;
  },
  {
    &quot;ID&quot;: 2,
    &quot;PNR&quot;: 00011111,
    &quot;Color&quot;: &quot;000000000006000061&quot;
  },
  {
    &quot;ID&quot;: 3,
    &quot;PNR&quot;: 00022222,
    &quot;Color&quot;: &quot;000000000006000060&quot;
  },
  { 
    &quot;ID&quot;: 4,
    &quot;PNR&quot;: 00022222,
    &quot;Color&quot;: &quot;000000000006000061&quot;
  }
]
</code></pre>
<p>Above subIndex is resetting to 0 for the next iteration as per dataweave so please let me know what we can use for incremental value.</p>
","2024-01-03 14:43:54","0","Question"
"77749749","77749734","","<p>You're using the same dictionary for each list element.  There is only one dictionary in the code, which is assigned to <code>o</code> at the start.  Assigning it to <code>m</code> doesn't copy the dictionary.  It just creates a new reference to the same dictionary.</p>
<p>If you want to copy the dictionary, try this:</p>
<pre><code>o = {'x':0, 'y':0}
mylist=[]
for i in range(6):
   m = o.copy()
   m['x'] = i
   m['y'] = i*2
   mylist.append(m)
print(mylist)
</code></pre>
<p>You can achieve the same effect by dispensing with <code>o</code> and its copies, and just creating the new dictionaries directly:</p>
<pre><code>mylist=[]
for i in range(6):
   mylist.append({'x':i, 'y':i*2})
print(mylist)
</code></pre>
<p>You can be even more concise by using a list comprehension:</p>
<pre><code>mylist=[{'x':i, 'y':i*2} for i in range(6)]
print(mylist)
</code></pre>
","2024-01-03 04:31:34","2","Answer"
"77749734","","Python Assigning Dictionary to a List","<p>I do not understand the results of this code:</p>
<pre><code>o = {'x':0, 'y':0}
mylist=[]
for i in range(6):
   m = o
   m['x'] = i
   m['y'] = i*2
   mylist.append(m)
print(mylist)
</code></pre>
<p>How does <code>mylist</code> end up with 5 identical elements?</p>
","2024-01-03 04:26:48","-1","Question"
"77748399","77745348","","<p><strong>Proposed script</strong></p>
<pre class=""lang-py prettyprint-override""><code>import pandas as pd

# create a sample dataframe
data = {'diagnosis': ['dementia', 'dementia', 'control', 'control', 'dementia'],
        'age': [66, 67, 45, 55, 90],
        'sex': ['M', 'M', 'F', 'M', 'F']}
df = pd.DataFrame(data)

# create an empty dictionary to store the group dictionaries
group_dicts = {}

# loop through the groups
for name, group in df.groupby('diagnosis'):
    # create a new dictionary for the current group
    group_dict = {'Group': name}
    # extract the values of the other columns and convert to list
    for col in df.columns[1:]:
        group_dict[col] = group[col].tolist()
    # add the group dictionary to the dictionary of group dictionaries
    group_dicts[name] = group_dict

# print the resulting dictionary of dictionaries
print(group_dicts)
</code></pre>
<p><strong>Result</strong></p>
<pre><code>{
'control': {'Group': 'control', 'age': [45, 55], 'sex': ['F', 'M']},
'dementia': {'Group': 'dementia', 'age': [66, 67, 90], 'sex': ['M', 'M', 'F']}
}

</code></pre>
","2024-01-02 20:22:56","0","Answer"
"77748317","77748167","","<p>You already have a solution that would solve your problem for a single string. Now it's just a matter of repeating it for every element. The natural approach would be to use a loop to build up a new array of transformed elements:</p>
<pre class=""lang-swift prettyprint-override""><code>let inputs = [&quot;House Dad&quot;, &quot;House Dog&quot;, &quot;House Wife&quot;]

var transformedStrings = [String]()

for input in inputs {
    let transformedString = input
        .replacingOccurrences(of: &quot; Dog&quot;, with: &quot;&quot;) // Not the most efficient...
        .replacingOccurrences(of: &quot; Dad&quot;, with: &quot;&quot;) // ...but it's a good first start
        .replacingOccurrences(of: &quot; Wife&quot;, with: &quot;&quot;)
    
    transformedStrings.append(transformedString)
}
</code></pre>
<p>This pattern is so common, that it's been extracted an given a name in the standard library. So instead of repeating that kind of code every time you need it, you would just use <a href=""https://developer.apple.com/documentation/swift/array/map(_:)-87c4d"" rel=""nofollow noreferrer""><code>Array.map(_:)</code></a>, like so:</p>
<pre class=""lang-swift prettyprint-override""><code>let inputs = [&quot;House Dad&quot;, &quot;House Dog&quot;, &quot;House Wife&quot;]

let transformedStrings = inputs.map { input in
    input
        .replacingOccurrences(of: &quot; Dog&quot;, with: &quot;&quot;) // Not the most efficient...
        .replacingOccurrences(of: &quot; Dad&quot;, with: &quot;&quot;) // ...but it's a good first start
        .replacingOccurrences(of: &quot; Wife&quot;, with: &quot;&quot;)
}
</code></pre>
","2024-01-02 20:08:07","1","Answer"
"77748167","","How to remove specific characters from an array in Swift","<p>I have this array:</p>
<pre><code>[&quot;House Dad&quot;, &quot;House Dog&quot;, &quot;House Wife&quot;]
</code></pre>
<p>I want to find the equivalent of <code>replacingOccurrences(of: &quot; Dad&quot;, with: &quot;&quot;)</code> so that I get:</p>
<pre><code>[&quot;House&quot;, &quot;House Dog&quot;, &quot;House Wife&quot;]
</code></pre>
<p>I also want to remove <code> Dog</code> and <code> Wife</code> so that the final result is:</p>
<pre><code>[&quot;House&quot;, &quot;House&quot;, &quot;House&quot;]
</code></pre>
<p>Is it possible to do that in Swift? Thanks</p>
","2024-01-02 19:30:25","0","Question"
"77748019","77745348","","<p>You can try something like this using @mozway input:</p>
<pre><code>             Group  Age Sex
0  healthy control   70   F
1         dementia   66   M
2         dementia   90   F
3  healthy control   62   M
4  healthy control   64   F
5         dementia   67   M
</code></pre>
<p>Create a dictionary of dataframe groups using groupby.</p>
<pre><code>df_dicts = dict(tuple(df.groupby('Group')))
</code></pre>
<p>To print each group using dictionary with Group as the key:</p>
<pre><code>df_dicts['dementia'].to_dict('list')
</code></pre>
<p>Output:</p>
<pre><code>{'Group': ['dementia', 'dementia', 'dementia'],
 'Age': [66, 90, 67],
 'Sex': ['M', 'F', 'M']}
</code></pre>
<p>and</p>
<pre><code>df_dicts['healthy control'].to_dict('list')
</code></pre>
<p>Output:</p>
<pre><code>{'Group': ['healthy control', 'healthy control', 'healthy control'],
 'Age': [70, 62, 64],
 'Sex': ['F', 'M', 'F']}
</code></pre>
","2024-01-02 18:54:05","0","Answer"
"77745395","77745348","","<p>Assuming such a input:</p>
<pre><code>             Group  Age Sex
0  healthy control   70   F
1         dementia   66   M
2         dementia   90   F
3  healthy control   62   M
4  healthy control   64   F
5         dementia   67   M
</code></pre>
<p>If you need the dictionary in a classical loop, just convert the group with <a href=""https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_dict.html"" rel=""nofollow noreferrer""><code>to_dict</code></a>:</p>
<pre><code>for key, group in df.groupby('Group'):
    d = group.to_dict('list')
</code></pre>
<p>Alternatively, you could use a simple dictionary comprehension to get a dictionary of dictionaries:</p>
<pre><code>out = {k: g.to_dict('list') for k, g in df.groupby('Group')}
</code></pre>
<p>Output:</p>
<pre><code>{'dementia': {'Age': [66, 90, 67],
              'Group': ['dementia', 'dementia', 'dementia'],
              'Sex': ['M', 'F', 'M']},
 'healthy control': {'Age': [70, 62, 64],
                     'Group': ['healthy control',
                               'healthy control',
                               'healthy control'],
                     'Sex': ['F', 'M', 'F']}}
</code></pre>
<p>Or, since the group is already present as key, dropping it from the inner dictionary:</p>
<pre><code>cols = df.columns.difference(['Group'])
out = {k: g.to_dict('list') for k, g in df.groupby('Group')[cols]}
</code></pre>
<p>Output:</p>
<pre><code>{'dementia': {'Age': [66, 90, 67], 'Sex': ['M', 'F', 'M']},
 'healthy control': {'Age': [70, 62, 64], 'Sex': ['F', 'M', 'F']}}
</code></pre>
","2024-01-02 10:18:46","0","Answer"
"77745348","","How to create dictionaries using pandas groupby?","<p>I have a dataframe containing values for several variables for each individual in different patient groups. For example, I have age, sex, weight etc. for multiple individuals in patient groups, e.g., dementia, healthy control etc. I want to ultimately create a dictionary for each group like the following:</p>
<pre><code>{'Group': ['dementia', 'dementia', 'dementia'],
   'Age': [66, 67, 90],
   'Sex': ['M', 'M', 'F']} 
</code></pre>
<p>How do I do I loop through my dataframe and create dictionaries for each? What I have so far is the beginnings of a for loop:</p>
<pre><code>for group in df.groupby('diagnosis'): 
</code></pre>
<p>Thank you!</p>
","2024-01-02 10:07:43","0","Question"