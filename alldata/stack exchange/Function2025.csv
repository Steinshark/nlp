Post Id,Parent Id,Body,Score,PostType
"79320968","","<p>I wrote two empty functions in rust with the hope of using each to test the use of retain on vectors or the use of filter on iterators, after writing the empty function for each case, on running the program, i noticed a huge dissimilarity between the duration of each function, this means that adding any logic to the currently empty function would lead to erroneous conclusions on their execution time.</p>
<pre class=""lang-rust prettyprint-override""><code>use std::time::Instant;

fn use_filter() {
    
}

fn use_retain() {
    
}

fn run_multiple(f: fn(), times: u64) {
    for _ in 0..times {
        f()
    }
} 

fn main() {
    let iter_count: u32 = 1_000_000_000;
    
    let _start_1 = Instant::now();
    run_multiple(use_filter, iter_count as u64);
    let duration = Instant::now() - _start_1;
    println!(&quot;Use Filter duration: {:?}&quot;, duration / iter_count);
    
    let _start_2 = Instant::now();
    run_multiple(use_retain, iter_count as u64);
    let duration = Instant::now() - _start_2;
    println!(&quot;Use Retain duration: {:?}&quot;, duration / iter_count);
}
</code></pre>
<p>Expected output</p>
<pre><code>Use Filter duration: xns
Use Retain duration: xns
</code></pre>
<p>where x is the same for both function, since they are both empty and do nothing</p>
<p>Actual Output</p>
<pre><code>Use Filter duration: 8ns
Use Retain duration: 10ns
</code></pre>
<p>what could explain empty functions having very different execution time in rust programming language.</p>
","-6","Question"
"79322933","","<p>Apologies in advance if this has been asked before or is too basic, but I am completely new to Haskell and have been experimenting in GHCi when I accidentally defined a function which I would have expected to throw an error.</p>
<p>I have two simple functions <code>f</code> and <code>g</code> defined as such</p>
<pre><code>f = (+)
</code></pre>
<pre><code>g = (-1)
</code></pre>
<p>Now obviously <code>f</code> takes two arguments and <code>g</code> takes one. <code>f</code> only returns one, however, and so I (incorrectly) tried composing them like so</p>
<pre><code>h x = g (f x)
</code></pre>
<p>To my surprise, this did not raise an error. The resulting type of <code>h</code> is claimed by GHCi to be <code>h :: (Num a, Num (a -&gt; a)) =&gt; a -&gt; a -&gt; a</code>. This type signature is cryptic to me. Does it mean <code>a</code> needs to be both a number and a function at the same time?</p>
<p>Moreover, when I try applying <code>h</code> to seemingly any numerical arguments it throws an error. So, I guess my question is - what have I actually defined? What is <code>h</code> and how does it work? Playing with it a bit more I see that it is equivalent to <code>h = g . f</code>. This is especially confusing because I was under the impression the composition operator <code>(.)</code> only accepts one-argument functions? I imagine there is a trick with currying happening here, but I'm not sure what it is exactly. As a corollary to the above, how can I <em>correctly</em> define the composition of <code>f</code> and <code>g</code> in point-free notation given that <code>f</code> takes two arguments and . expects one-argument functions only?</p>
","2","Question"
"79324508","","<pre class=""lang-bash prettyprint-override""><code>function test
{
    [CmdletBinding()]
    param
    (
        [Parameter(
            Mandatory = $true,
            ParameterSetName = &quot;MyArgument&quot;
        )]
        [ValidateSet(&quot;Value1&quot;, &quot;Value2&quot;)]
        [string[]]
        $MyArguments
    )

    foreach ($MyArgument in $MyArguments)
    {
        switch ($MyArgument)
        {
            Value1
            {
                write-host &quot;$parameter used&quot;
            }
            Value2
            {
                write-host &quot;$parameter used&quot;
            }
        }
    }
}
test -MyArgument Value1, Value2
</code></pre>
<p>How to get the actual argument passed by parameter if we use <code>switch</code>? I tried to catch it by <code>$MyInvocation.BoundParameters.Values</code> and <code>$PSCmdlet.MyInvocation.InvocationName</code>, but failed.</p>
<p>I want to get instead of a variable $parameter <code>Value1</code> if we call <code>Value1</code>, and <code>Value2</code> if we call <code>Value2</code>, but all approaches receive all values at once.</p>
<p>Thanks in advance.</p>
","2","Question"
"79327986","","<p>what can I do to make this function not work and give a warning when the device is offline? I would appreciate your help.</p>
<p>Code:</p>
<pre><code>if (adType == Sdkmanager.AD_REWARDED)
    Website2APK.showInterstitialAd();
{
</code></pre>
","-3","Question"
"79330732","","<p>I think this is a pure function as it abide by the rules to be a pure function.</p>
<ol>
<li>It always return the same output.</li>
<li>It has no side effects.</li>
</ol>
<p>But in a medium blog, they said that this is a impure function.</p>
<pre><code>function addNumbers(){
  let num1 = 100;
  let num2 = 1;
  return num1 + num2;
}

addNumbers();

</code></pre>
<p>Here is the link of the medium blog: <a href=""https://medium.com/@simba3310/the-essential-guide-to-mastering-javascript-functions-2149f101fb1e"" rel=""nofollow noreferrer"">https://medium.com/@simba3310/the-essential-guide-to-mastering-javascript-functions-2149f101fb1e</a></p>
<p><a href=""https://i.sstatic.net/CbT8h5Vr.png"" rel=""nofollow noreferrer"">screenshot of the code blocks from the blog</a></p>
","-3","Question"
"79331510","","<p>I have a large dynamic set of data that spans over 20 years. I need to create a function that will round correctly to 3 significant figures from numbers as small as 0.000600 to as large as 999. I have tried to use the signif function but came across a few minor discrepancies when it came to rounding with 5's. I started with this function below using if statements for &lt;10, then &lt;100, and &lt;1000, but I can't quite get it to work. Also, I am somewhat new to writing functions so this could be a simple fix. Once I can get this to function to work properly, I will add the other number ranges to it. How do I add this change back to my original data set called dat_merge?</p>
<pre><code>x = dat_merge$MPV

MPV_Round_1 &lt;- function(x, digits) {
  if(dat_merge$MPV &lt; 10) {
    x = dat_merge$MPV_Round
    digits = 2
    posneg = sign(x)
    z = abs(x)*10^digits
    z = z + 0.5 + sqrt(.Machine$double.eps)
    z = trunc(z)
    z = z/10^digits
    z*posneg
  }
   else if(dat_merge$MPV &lt; 100 ){
      x = dat_merge$MPV_Round
      digits = 1
      posneg = sign(x)
      z = abs(x)*10^(digits=1)
      z = z + 0.5 + sqrt(.Machine$double.eps)
      z = trunc(z)
      z = z/10^(digits=1)
      z*posneg
   }
    else if (dat_merge$MPV &lt; 1000){
        x = dat_merge$MPV_Round
        digits = 0
        posneg = sign(x)
        z = abs(x)*10^(digits=0)
        z = z + 0.5 + sqrt(.Machine$double.eps)
        z = trunc(z)
        z = z/10^(digits=0)
        z*posneg
   }
    else {
      round(dat_merge$MPV, 0)
  }
}   
</code></pre>
","0","Question"
"79334328","","<p>In the below script, there is passed <code>var1</code> by reference to <code>myDosFunc</code>, so it can change the value.</p>
<p>How can the value of the referenced variable be get within the function without having to pass the variable and its value?</p>
<pre><code>set &quot;var1=Hello world&quot;
Echo var1 before: %var1%
call :myDosFunc var1 &quot;%var1%&quot;
Echo var1 after : %var1%
goto :eof

:myDosFunc    -- passing a variable by reference, and changing value
echo   Notice that a variable passed by reference does NOT echo the value, and it echos the variable name instead.
echo   Arg1 variable name = '%~1' and Arg2 value = '%~2'
set &quot;%~1=Good bye world!!!&quot;
goto :eof
</code></pre>
<p>I tried the following variations, but none of them worked to get the value.</p>
<pre><code>set &quot;var1=Hello world&quot;
Echo var1 before: %var1%
call :myDosFunc var1
Echo var1 after : %var1%
goto :eof

:myDosFunc    -- passing a variable by reference, and changing value
set &quot;VarValue=%~1&quot;
set &quot;VarVal=%~1%&quot;
echo   Arg1 variable name = '%~1' and to get value, tried this '%%%VarValue%%%' and this '%%VarValue%%' and this '%VarValue%' and this '%%%VarVal%%%' and this '%%VarVal%%' and this '%VarVal%'
set &quot;%~1=Good bye world!&quot;
goto :eof
</code></pre>
","0","Question"
"79335736","","<pre><code>public class ExecutionUtility
{
    public static TIn2 ExecutionHelper&lt;TIn1, TIn2&gt;(Func&lt;TIn1, out TIn2, int&gt; function, TIn1 input)
    {
        TIn2 output = default(TIn2);
        int result = function(input, out output); // the out keyworkd is not accepted apparently

        if (result == 0)
        {
            return output;
        }
        else
        {
            throw new FunctionExecutionException(result);
        }
    }

}
</code></pre>
<p>Just some exeption code:</p>
<pre><code>public class FunctionExecutionException : Exception
{
    public int ErrorCode { get; }

    public FunctionExecutionException(int errorCode)
    : base($&quot;Function execution failed with error code: {errorCode}&quot;)
    {
        ErrorCode = errorCode;
    }
}
</code></pre>
<p>An example of a static function that returns a int resul and also a string output parameter</p>
<pre><code>public static int myfunction(int input, out string output)
{
    if (input &gt; 0)
    {
        output = &quot;OUTPUT_VALUE_1&quot;;
        return 0;
    }
    else
    {
        output = &quot;OUTPUT_VALUE_2&quot;;
        return -1;
    }
}
</code></pre>
<p>Now using the Execution Helper function. For some reason the out parameter doesn't seem to be authorized and my code does not compile.</p>
<pre><code>return ExecutionUtility.ExecutionHelper&lt;int, string&gt;(PRD_GCAPI.myfunction, this.Index);
</code></pre>
","-1","Question"
"79335824","","<p>I want to make a custom function that would replace/translate words (4000 words approx.). I managed to create and fill the dictionary inside the function, but that seems highly redundant, creating the dictionary each time the function is called. So I wanted to create the dictionary outside the function and then use it inside the function, like so:</p>
<pre><code>Option Explicit

Sub make_dict()

    Dim dict As Object
    Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
         
    With dict
    
        .Add &quot;house&quot;, &quot;Haus&quot;
        .Add &quot;dog&quot;, &quot;Hund&quot;
        .Add &quot;cat&quot;, &quot;Katze&quot;
    
    End With

End Sub

Function translate(ByRef a_word As String) As String
    
    '~~&gt; how to reference dictionary here ?
  
    If Len(a_word) = 0 Then
        translate = &quot;#NA&quot;
        Exit Function
    End If
    
    Dim found As Boolean
    found = False
    For Each k In dict.keys
        key = k
        If key = a_word Then
            translate = dRL.Item(k)
            found = True
            Exit Function
        End If
    Next k
    
    If found = False Then
        translate = &quot;#NA&quot;
    End If
    
End Function
</code></pre>
<p>However, I cant find the right way of referencing the dict, when calling the function as</p>
<p><code>=translate(A1)</code></p>
<p>with the string &quot;dog&quot; in cell A1</p>
","2","Question"
"79336318","","<p>I am working in R and I have the following data.</p>
<pre><code>data &lt;- data.frame(
  id = c(1, 2, 1, 2, 1, 2),
  name = c(&quot;jane&quot;, &quot;jane&quot;, &quot;lauran&quot;, &quot;lauran&quot;, &quot;james&quot;, &quot;james&quot;),
month = c(&quot;april&quot;, &quot;april&quot;, &quot;may&quot;, &quot;june&quot;, &quot;june&quot;,&quot;june&quot;))
)
</code></pre>
<p>data:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: center;"">id</th>
<th style=""text-align: center;"">name</th>
<th style=""text-align: center;"">month</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: center;"">1</td>
<td style=""text-align: center;"">jane</td>
<td style=""text-align: center;"">april</td>
</tr>
<tr>
<td style=""text-align: center;"">2</td>
<td style=""text-align: center;"">jane</td>
<td style=""text-align: center;"">april</td>
</tr>
<tr>
<td style=""text-align: center;"">1</td>
<td style=""text-align: center;"">lauran</td>
<td style=""text-align: center;"">may</td>
</tr>
<tr>
<td style=""text-align: center;"">2</td>
<td style=""text-align: center;"">lauran</td>
<td style=""text-align: center;"">june</td>
</tr>
<tr>
<td style=""text-align: center;"">1</td>
<td style=""text-align: center;"">james</td>
<td style=""text-align: center;"">june</td>
</tr>
<tr>
<td style=""text-align: center;"">2</td>
<td style=""text-align: center;"">james</td>
<td style=""text-align: center;"">june</td>
</tr>
</tbody>
</table></div>
<p>I am using a function to pivot it.
This is because I have many different input tables and the value I want to be pivoted are called something different in each of my tables. (in this example, the measure is called &quot;month&quot;)</p>
<pre><code>pivot_data &lt;- function(input_data,
                       measure_1){

output &lt;- input_data %&gt;%
          arrange(name, id) %&gt;%
          pivot_wider(names_from = id,
                      names_prefix =  paste0({{measure_1}}, &quot;_&quot;),  # not correct
                      values_from = {{measure_1}})   # not correct
}

</code></pre>
<p>Now I run the function:</p>
<pre><code>Not working: 

required_output &lt;- pivot_data(input_data = data,
                              measure_1 = month)

Error in paste0({ : 
  cannot coerce type 'closure' to vector of type 'character'

</code></pre>
<p>I think it is something to do with {{}} or !! or sym? in the names_prefix and values_from</p>
<p>Required output:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: center;"">name</th>
<th style=""text-align: center;"">month_1</th>
<th style=""text-align: center;"">month_2</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: center;"">james</td>
<td style=""text-align: center;"">june</td>
<td style=""text-align: center;"">june</td>
</tr>
<tr>
<td style=""text-align: center;"">jane</td>
<td style=""text-align: center;"">april</td>
<td style=""text-align: center;"">april</td>
</tr>
<tr>
<td style=""text-align: center;"">lauran</td>
<td style=""text-align: center;"">may</td>
<td style=""text-align: center;"">june</td>
</tr>
</tbody>
</table></div>
","1","Question"
"79337812","","<p>I have two functions combined and it should extract 8 values from stored procedures (originally PassThrough queries in MS Access VBA). It works correctly when I run the VBA code in MS Access and returns the expected values. But it returns only zeros for all 8 procedures in ASP.NET using VB.NET.</p>
<p>What is the issue with the following VB.NET code?</p>
<p>Thank you for any help in advance!</p>
<pre><code>Public Function GetSoldAsSystem3Years(soldData3YearsStart As Date, soldData3YearsEnd As Date) As Integer
    Dim soldAsSystem3YearsResult As Integer = 0
    Dim SoldDataUSA As Integer = 0
    Dim SoldDataNL As Integer = 0
    Dim SoldDataTW As Integer = 0
    Dim SoldDataTW_3806 As Integer = 0
    Dim SoldSysDataUSA As Integer = 0
    Dim SoldSysDataNL As Integer = 0
    Dim SoldSysDataTW As Integer = 0
    Dim SoldSysDataTW_3806 As Integer = 0

    ' Getting the sold data for the past 3 years
    SoldDataUSA = GetSoldData(&quot;GetSingleMBDSoldData_US&quot;, &quot;PDBS&quot;, soldData3YearsStart, soldData3YearsEnd)
    SoldDataNL = GetSoldData(&quot;GetSingleMBDSoldData_NL&quot;, &quot;PDBS_3888&quot;, soldData3YearsStart, soldData3YearsEnd)
    SoldDataTW = GetSoldData(&quot;GetSingleMBDSoldData_TW_2888&quot;, &quot;PDBS_2888&quot;, soldData3YearsStart, soldData3YearsEnd)
    SoldDataTW_3806 = GetSoldData(&quot;GetSingleMBDSoldData_TW_3806&quot;, &quot;PDBS_3806&quot;, soldData3YearsStart, soldData3YearsEnd)

    ' Summing the sold data
    soldAsSystem3YearsResult = SoldDataUSA + SoldDataNL + SoldDataTW + SoldDataTW_3806

    ' Getting the sold data within the system for the past 3 years
    SoldSysDataUSA = GetSoldData(&quot;GetSingleMBDInSystemSoldData_US&quot;, &quot;PDBS&quot;, soldData3YearsStart, soldData3YearsEnd)
    SoldSysDataNL = GetSoldData(&quot;GetSingleMBDInSystemSoldData_NL&quot;, &quot;PDBS_3888&quot;, soldData3YearsStart, soldData3YearsEnd)
    SoldSysDataTW = GetSoldData(&quot;GetSingleMBDInSystemSoldData_TW_2888&quot;, &quot;PDBS_2888&quot;, soldData3YearsStart, soldData3YearsEnd)
    SoldSysDataTW_3806 = GetSoldData(&quot;GetSingleMBDInSystemSoldData_TW_3806&quot;, &quot;PDBS_3806&quot;, soldData3YearsStart, soldData3YearsEnd)

    ' Summing the sold in-system data
    soldAsSystem3YearsResult += SoldSysDataUSA + SoldSysDataNL + SoldSysDataTW + SoldSysDataTW_3806

    ' Return the final result
    Return soldAsSystem3YearsResult
End Function

Public Function GetSoldData(queryName As String, dbName As String, soldData3YearsStart As Date, soldData3YearsEnd As Date) As Integer
    Dim soldData As Integer = 0
    Dim connectionString As String = &quot;MyConnection&quot;
    Dim query As String = &quot;SELECT SUM(Qty) AS SumOfQty FROM &quot; &amp; queryName &amp; &quot; ('MBD-X8,MBD-X9,MBD-X10,MBD-X11,MBD-X12,MBD-X13,MBD-H8,MBD-H9,MBD-H10,MBD-H11,MBD-H12,MBD-H13,MBD-A1,MBD-A2,MBD-A3,MBD-A4,MBD-B7,MBD-B8,MBD-B9,MBD-BH,MBD-B1,MBD-B2,MBD-B3,MBD-B4,MBD-C2,MBD-C7,MBD-C9,MBD-M1,MBD-P9', @StartDate, @EndDate)&quot;

    Using conn As New SqlConnection(connectionString)
        Using cmd As New SqlCommand(query, conn)
            ' Add parameters to avoid SQL injection
            cmd.Parameters.AddWithValue(&quot;@StartDate&quot;, soldData3YearsStart)
            cmd.Parameters.AddWithValue(&quot;@EndDate&quot;, soldData3YearsEnd)

            Try
                conn.Open()

                ' Debugging: Log the query to see it being executed
                Console.WriteLine(&quot;Executing query: &quot; &amp; query)
                Console.WriteLine(&quot;StartDate: &quot; &amp; soldData3YearsStart.ToString())
                Console.WriteLine(&quot;EndDate: &quot; &amp; soldData3YearsEnd.ToString())

                ' Execute query and retrieve the result
                Dim result = cmd.ExecuteScalar()
                If result IsNot Nothing AndAlso Not IsDBNull(result) Then
                    soldData = Convert.ToInt32(result)
                End If

                ' Debugging: Log the result fetched from the query
                Console.WriteLine(&quot;Query Result: &quot; &amp; soldData.ToString())

            Catch ex As Exception
                ' Handle any exceptions that occur
                Console.WriteLine(&quot;Error: &quot; &amp; ex.Message)
                soldData = 0
            End Try
        End Using
    End Using

    Return soldData
End Function
</code></pre>
","0","Question"
"79338676","","<p>I have a simple class Date with a few functions. One of them is SetMonthAndYear.</p>
<p>I export this class with module.export to make it accessible for other classes:</p>
<pre><code>class MyDateClass {
    currentMonth = 0;
    currentYear = 0;

    async SetMonthAndYear(timeStamp){
        var date = new Date(timeStamp);
        if(date.getFullYear() != this.currentYear || (date.getMonth() + 1) != this.currentMonth){
            this.currentYear = new Date(Date.now()).getFullYear();
            this.currentMonth = new Date(Date.now()).getMonth() + 1; // getMonth() gives 1 month earlier for some reason.
            console.log(&quot;New month and year is set: &quot; + this.currentMonth + &quot; - &quot; + this.currentYear)
            return true;
        }
        return false;
    }
}

module.exports = new MyDateClass();
</code></pre>
<p>In an other class I request this function to check if the month and year need to be updated like so:</p>
<pre><code>var dateClass = require(./MyDateClass.js);

class OtherClass
{
    var currentTimeStamp = ~some timestamp~;
    
    async main(){
       if (await dateClass.SetMonthAndYear(currentTimeStamp))
       {
           console.Log(&quot;The month and year are modified&quot;);
       }
       console.Log(&quot;Done.&quot;);
    }
    
    main();
}
</code></pre>
<p>Now the weird part:
The first run this code sets the month and year and gives this as output (which I expect):</p>
<pre><code>New month and year is set: 1 - 2025
The month and year are modified
Done.
</code></pre>
<p>The second run this is the output:</p>
<pre><code>The month and year are modified
Done.
</code></pre>
<p>So in the function the if statement is seen as false, but the function seems to be returning true while I expect false as a return value?</p>
<p>I'm new with Nodejs module exports and suspect I'm doing something wrong here, but can't figure out what exactly?</p>
","0","Question"
"79339548","","<p>I want to add odd numbers G11-G139,I11-I139,K11-K139,M11-M139,O11-O139 at end I need sum function for a P8:P139 for Excel 2016.</p>
<p>For example :</p>
<pre><code>    =SUM(G11;G13;G15;G17;G19;G21;G23;G25;G27;G29;G31;G33;G35;G37;G39;G41;
G43;G45;G47;G49;G51;G53;G55;G57;G59;G61;G63;G65;G67;G69;G71;G73;G75;
G77;G79;G81;G83;G85;G87;G89;G91;G93;G95;G97;G99;G101;G103;G105;G107;
G109;G111;G113;G115;G117;G119;G121;G123;G125;G127;G129;G131;G133;G135;
G137;G139;)
</code></pre>
<p>Do you have a short formula suggestion?</p>
<p><code>Sum</code> function exceeds its limit. I get a &quot;Too many arguments&quot; error.</p>
","0","Question"
"79339550","","<p>I am trying to dynamically form a formula to use in <code>dynlm</code>. I encounter a behaviour of <code>function</code> that I do not understand, which can be seen from this code:</p>
<pre class=""lang-r prettyprint-override""><code>library(data.table)
dt_test &lt;- data.table(&quot;a&quot;=rnorm(10), &quot;b&quot;=1:5)

dt_test[, .(.(
   formula(&quot;z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + tt + tt2&quot;)
 )), .(b)]
</code></pre>
<p>The code above is expected to produce (identical) formulas for each value of <code>b</code>. This formula is enclosed in <code>.(.(...))</code> to return a list, just so that it can be properly stored in a column from the original data.table.</p>
<p>However, the formula returned does not match the string originally provided, but adds a comma between the <code>+</code> and <code>tt</code>, as you can see from the ouput:</p>
<pre><code>       b                                                                           V1
   &lt;int&gt;                                                                       &lt;list&gt;
1:     1 z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + ,    tt + tt2
2:     2 z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + ,    tt + tt2
3:     3 z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + ,    tt + tt2
4:     4 z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + ,    tt + tt2
5:     5 z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + ,    tt + tt2
</code></pre>
<p>Essentially, it adds a comma where there is none. It does so even re-arranging the terms of the sum, but it stops doing it if I erase <code>q_val</code>, for example. The same goes for <code>as.formula</code>.</p>
<p>I would like to understand what is going on and avoid it.</p>
","4","Question"
"79341707","","<p>We have a SELECT statement that included a custom function call like this:</p>
<pre><code>SELECT 
    P.Identifier, P.IdentifierType,
    dbo.GetBinaryData(P.Identifier, P.IdentifierType) AS BinData 
FROM 
    Parts P
</code></pre>
<p>Now, for some reason we have to remove explicit schemas from the T-SQL code (so, remove the <code>dbo</code> from the code shown here).</p>
<p>Using dynamic SQL and the <code>EXEC sp_executesql</code> is only possible outside the <code>SELECT</code> statement, right?</p>
<p>We already tried this:</p>
<pre><code>DECLARE @SqlStmt nvarchar(4000);
DECLARE @params nvarchar(4000);
DECLARE @ret varbinary(max);

SELECT @sc = (select schema_name());
SELECT @SqlStmt= @sc + '.GetBinaryData(@Identifier,@IdentifierType)';
SELECT @params= N'@Identifier nvarchar(80), '
      + N'@IdentifierType int';
SELECT P.Identifier, P.IdentifierType, (EXEC @ret = sp_executesql @SqlStmt, @params,P.Identifier,P.IdentifierType) AS BinData
FROM Parts P
</code></pre>
<p>But I got the error</p>
<blockquote>
<p>Incorrect syntax near the keyword EXEC</p>
</blockquote>
<p>Is there an approach to have the function call inside the <code>SELECT</code> statement?</p>
","-2","Question"
"79343978","","<p>I've seen this a lot online but with no discernable rhyme or reason.
When creating an event binding, why call &quot;lambda: thefunction() &quot; instead of just passing &quot; thefunction&quot;? -- especially when nothing needs passed to said function?</p>
<p>ie. <code>self.button = tk.Button(root, command= lambda:arb_func_call()</code>
vs. <code>self.button = tk.Button(root, command= arb_func_call</code></p>
<p>is this a matter of style or is there a reason to use x over y?</p>
","0","Question"
"79346982","","<p>I try to create alias in H2 for function with two parameters of array.</p>
<p>parameters:    Array sourceArray,
Array subArray
Returns boolean:
TRUE if sourceArray contains all elements of subArray.
OR ELSE false</p>
<p>I declared function:</p>
<pre class=""lang-sql prettyprint-override""><code>CREATE ALIAS IF NOT EXISTS array_contains_all AS '
     boolean arrayContainsAll(java.util.HashSet sourceArray, java.util.HashSet subArray) {
           return sourceArray.containsAll(subArray);

}';
</code></pre>
<p>I call this function:</p>
<pre class=""lang-sql prettyprint-override""><code>SELECT array_contains_all (Array['HELLO',  'WORLD', 'FRIEND'],  Array['HELLO', 'WORLD']);
</code></pre>
<p>I expected TRUE.
But it throws error:</p>
<blockquote>
<p>Hexadecimal string contains non-hex character: &quot;[HELLO,  WORLD, FRIEND]&quot;.</p>
</blockquote>
<p>Then I tried:</p>
<pre class=""lang-sql prettyprint-override""><code>CREATE ALIAS IF NOT EXISTS array_contains_all AS '
     boolean arrayContainsAll(java.sql.Array sourceArray, java.sql.Array subArray) {
     java.util.List&lt;Object&gt; sourceArrayList = java.util.Arrays.asList((Object[]) sourceArray.getArray());
     java.util.List&lt;Object&gt; subArrayList  = java.util.Arrays.asList((Object[]) subArray.getArray());
     return sourceArrayList.containsAll(subArrayList);

}';
</code></pre>
<p>It throws the same error:</p>
<blockquote>
<p>Hexadecimal string contains non-hex character: &quot;[HELLO,  WORLD, FRIEND]&quot;.</p>
</blockquote>
<p>How to correct this?</p>
","0","Question"
"79351527","","<p>I have a very simple set of functions which take an input character variable (a word or phrase) and return a new one. Basically,
each of these functions performs a different encryption on the input word.</p>
<p>As both the input and the output of these functions is a character variable,
the output of a function can be used as the input for another one, so that
several sequential ciphers could be applied. For example:</p>
<pre><code>#install.packages(&quot;ciphertext&quot;)
library(ciphertext)

first_output &lt;- ciphertext::caesar(&quot;hello&quot;); first_output

[1] &quot;ifmmp&quot;

ciphertext::atbash(first_output)

[1] &quot;runnk&quot;
</code></pre>
<p>I was wondering if there is the possibility in R to create a function (which I named <code>combinef</code> below) which takes in input an initial character variable (&quot;hello&quot;, in my example) and applies sequentially other functions listed as additional arguments.</p>
<p>So the algorithm would be something like:</p>
<ol>
<li>Take initial word (&quot;hello&quot;)</li>
<li>Apply the first listed function to the initial word and obtain a new word</li>
<li>repeat step 1 with the new word until using all the arguments listed</li>
</ol>
<p>How I would like it to work, and the expected final output:</p>
<pre><code>combinef(&quot;hello&quot;, caesar, atbash) #apply caesar function to &quot;hello&quot;, and then atbash
[1] &quot;runnk&quot;


combinef(&quot;hello&quot;, caesar, atbash, polybius) #apply polybius after the atbash
&quot;42 45 33 33 25&quot;
</code></pre>
<p>All my attempts to create such a function are extremely verbose as I tried to make use of <code>if (argument2 == &quot;function_name&quot;)</code> structures,
but this came to be impracticable when the number of potential ciphering methods increased.</p>
<p>Any help or suggestion would be greatly appreciated!</p>
","2","Question"
"79352694","","<p>Here's a minimal example of my problem:</p>
<pre><code>innerFunc([2, 4, 5]) % works fine
outerFunc(innerFunc, [2, 4, 5]) % doesn't work

function out = innerFunc(my_vec) 
    my_vec % not recogniced when called from outerFunc
    out = -1;
end

function out = outerFunc(func, my_vec) 
    out = func(my_vec);
end

</code></pre>
<p>This is the output of the code:</p>
<pre><code>
my_vec =

     2     4     5


ans =

    -1

Not enough input arguments.

Error in nested_funcs_bug&gt;innerFunc (line 5)
    my_vec % not recogniced when called from outerFunc

Error in nested_funcs_bug (line 2)
outerFunc(innerFunc, [2, 4, 5]) % doesn't work

&gt;&gt; 
</code></pre>
<p>I don't know why the eror in line 2?</p>
<p>Especially since &quot;innerFunc&quot; usually works and I pass it an input in the outerFunc function.</p>
","4","Question"
"79356173","","<p>I am working on summarizing the amount of items between two dates in excel using functions. Sometimes there is no end date so the today function could serve as showing the item is still open. If its possible to further break out by the year that would be great. Sometimes items reopen and this is included in the example but they should be counted as individual items. If its possible to toggle between years that would help even more to compare the volume.</p>
<p>Data:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: right;"">Start Date</th>
<th style=""text-align: right;"">End Date</th>
<th style=""text-align: right;"">Progress Category</th>
<th style=""text-align: right;"">Start Date Month and Year</th>
<th style=""text-align: right;"">End Date Month and Year</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: right;"">4/19/2023</td>
<td style=""text-align: right;"">11/1/2023</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">4-2023</td>
<td style=""text-align: right;"">11-2023</td>
</tr>
<tr>
<td style=""text-align: right;"">4/3/2023</td>
<td style=""text-align: right;"">1/2/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">4-2023</td>
<td style=""text-align: right;"">1-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">1/4/2024</td>
<td style=""text-align: right;"">4/2/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">1-2024</td>
<td style=""text-align: right;"">4-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">5/17/2024</td>
<td style=""text-align: right;"">6/4/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">5-2024</td>
<td style=""text-align: right;"">6-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">5/17/2024</td>
<td style=""text-align: right;"">7/30/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">5-2024</td>
<td style=""text-align: right;"">7-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">9/4/2024</td>
<td style=""text-align: right;"">12/3/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">9-2024</td>
<td style=""text-align: right;"">12-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">1/3/2025</td>
<td style=""text-align: right;""></td>
<td style=""text-align: right;"">&lt;100%</td>
<td style=""text-align: right;"">1-2025</td>
<td style=""text-align: right;"">1-1900</td>
</tr>
<tr>
<td style=""text-align: right;"">1/4/2024</td>
<td style=""text-align: right;"">4/2/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">1-2024</td>
<td style=""text-align: right;"">4-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">5/17/2024</td>
<td style=""text-align: right;"">7/30/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">5-2024</td>
<td style=""text-align: right;"">7-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">1/3/2025</td>
<td style=""text-align: right;""></td>
<td style=""text-align: right;"">&lt;100%</td>
<td style=""text-align: right;"">1-2025</td>
<td style=""text-align: right;"">1-1900</td>
</tr>
<tr>
<td style=""text-align: right;"">4/2/2024</td>
<td style=""text-align: right;"">10/29/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">4-2024</td>
<td style=""text-align: right;"">10-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">2/1/2024</td>
<td style=""text-align: right;"">12/3/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">2-2024</td>
<td style=""text-align: right;"">12-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">12/9/2024</td>
<td style=""text-align: right;""></td>
<td style=""text-align: right;"">&lt;100%</td>
<td style=""text-align: right;"">12-2024</td>
<td style=""text-align: right;"">1-1900</td>
</tr>
<tr>
<td style=""text-align: right;"">4/3/2024</td>
<td style=""text-align: right;""></td>
<td style=""text-align: right;"">&lt;100%</td>
<td style=""text-align: right;"">4-2024</td>
<td style=""text-align: right;"">1-1900</td>
</tr>
<tr>
<td style=""text-align: right;"">7/27/2023</td>
<td style=""text-align: right;"">1/2/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">7-2023</td>
<td style=""text-align: right;"">1-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">7/27/2023</td>
<td style=""text-align: right;"">6/4/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">7-2023</td>
<td style=""text-align: right;"">6-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">7/27/2023</td>
<td style=""text-align: right;"">9/3/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">7-2023</td>
<td style=""text-align: right;"">9-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">7/27/2023</td>
<td style=""text-align: right;"">1/2/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">7-2023</td>
<td style=""text-align: right;"">1-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">4/5/2024</td>
<td style=""text-align: right;"">10/29/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">4-2024</td>
<td style=""text-align: right;"">10-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">4/2/2024</td>
<td style=""text-align: right;"">12/31/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">4-2024</td>
<td style=""text-align: right;"">12-2024</td>
</tr>
<tr>
<td style=""text-align: right;"">6/4/2024</td>
<td style=""text-align: right;"">12/3/2024</td>
<td style=""text-align: right;"">Complete</td>
<td style=""text-align: right;"">6-2024</td>
<td style=""text-align: right;"">12-2024</td>
</tr>
</tbody>
</table></div>
<p>Expecting:
<a href=""https://i.sstatic.net/wi1TsCdY.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/wi1TsCdY.png"" alt=""Expecting"" /></a></p>
<p>I tried using datediff function and sumproduct function but i would only get the sum of the months between the two dates.</p>
<p>Interesting, I know. Thank you!</p>
","-3","Question"
"79357529","","<p>I have many dataframes that all have the same variables and structure.  I would like to go from individual level data in each input dataframe, and using functions, summarize the input dataframe across all rows creating new variables.  I.e., for every input dataframe, I would like to create an output dataframe with one row summarizing the variables named in <code>regularVar_names</code> for every specified age group, with age group being flexibly implemented.  The function should estimate the number of rows where the variable is not-NA. Within the code below, I subset the variable X_AGE80 to be between 18-84. Ultimately I need this function to work for different age groups that are subsets of a master dataset of adults. Subsets include 18-20, 21-24, 25-84, 18 only, 19 only, etc. However, I was thinking along the lines of @margusl, and that this is easy to control from outside the function. It would be icing on the cake for the answer to account for age groups in an elegant way.</p>
<p>This is how I tried to implement it.</p>
<p>Data:</p>
<pre><code>input.ds.2018 = data.frame(Var1 = c(1,1,NA,NA,1,2),Var2 = rep(c(1,2),3),V3 = c(NA,rep(2,4),1),
                         y_4 = c(NA,&quot;y&quot;,&quot;z&quot;,&quot;l&quot;,&quot;m&quot;,&quot;n&quot;),X_AGE80 = c(17,18,NA,84,21,72))
</code></pre>
<p>This is my attempted solution, but apparently <code>.</code> does not supply the input dataframe like I assumed.</p>
<pre><code>calc_unwt_n_regularVar_fn = function(df,VAR){
  df %&gt;% filter(!is.na(eval(parse(text = VAR)))) %&gt;% nrow

}
# apply calc_unwt_n_regularVar_fn to age-group 18 to 84 for regular variables called Var1 and Var2
regularVar_names = c(&quot;Var1&quot;,&quot;Var2&quot;)
output = input.ds.2018 %&gt;%
  filter(X_AGE80 &lt;= 84) %&gt;%
  filter(X_AGE80 &gt;= 18)  %&gt;%
  summarize(across(all_of(regularVar_names), ~ calc_unwt_n_regularVar_fn(.,cur_column()),.names = &quot;unwt_denom_{.col}&quot;))
</code></pre>
<p>However it thinks <code>.</code> is equivalent to <code>cur_column()</code>, so it throws an error:</p>
<pre><code>Error in `summarize()`:
i In argument: `across(...)`.
Caused by error in `across()`:
! Can't compute column `unwt_denom_Var1`.
Caused by error in `UseMethod()`:
! no applicable method for 'filter' applied to an object of class &quot;c('double', 'numeric')&quot; 
</code></pre>
<p>I also tried replacing <code>.</code> with <code>.data</code> to try to pass in the input dataframe as a parameter, but that didnt' work either.</p>
<p>So my questions are:
(1) How do I input the dataframe as a parameter to the function, &quot;calc_unwt_n_regularVar_fn&quot;?
Or if this is a dumb way to go about it,
(2) How should I implement creating new summary variables for each input dataframe and various age groups, where the summary variables are required for each input dataframe/age group combination.</p>
","0","Question"
"79357998","","<p>I am developing a shopping assistant Chatbot. While using function calling APIs, I get an error. The &quot;auto&quot; does not seem to fetch any function. I use &quot;gpt-4o-mini&quot; model.</p>
<p>I attempted the following code. I expected a smooth flow of the chat process and a final recommendation from the list of laptops available in a .csv file. But I get error which is also posted here.</p>
<pre><code>from openai import OpenAI
import json

client = OpenAI()

# Define functions (tools)
tools = [
    {
        &quot;type&quot;: &quot;function&quot;,
        &quot;function&quot;: {
            &quot;name&quot;: &quot;initialize_conversation&quot;,
            &quot;description&quot;: &quot;Initialize the conversation for the shopping assistant chatbot.&quot;,
            &quot;parameters&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {},
                &quot;required&quot;: [],
                &quot;additionalProperties&quot;: False,
            },
        },
    },
    {
        &quot;type&quot;: &quot;function&quot;,
        &quot;function&quot;: {
            &quot;name&quot;: &quot;get_chat_completions&quot;,
            &quot;description&quot;: &quot;Fetch chat completions based on the user’s input.&quot;,
            &quot;parameters&quot;: {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                    &quot;input&quot;: {
                        &quot;type&quot;: &quot;string&quot;,
                        &quot;description&quot;: &quot;The user’s input or query to process.&quot;
                    },
                    &quot;json_format&quot;: {
                        &quot;type&quot;: &quot;boolean&quot;,
                        &quot;description&quot;: &quot;Flag to determine if the output should be in JSON format.&quot;
                    },
                },
                &quot;required&quot;: [&quot;input&quot;],
                &quot;additionalProperties&quot;: False,
            },
        },
    },

]
</code></pre>
<pre><code>import openai
import json

# Initialize OpenAI client
client = openai.OpenAI()

# Step 1: Initialize conversation (I have used a more detailed function here
def initialize_conversation():
    return [{&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a shopping assistant expert for laptops.&quot;}]

# Main function
def dialogue_mgmt_system_v2(tools):
    conversation = initialize_conversation()  # Start with system message. 
    
    print(&quot;Welcome to the Shopping Assistant! Type 'exit' to end the chat.\n&quot;)
    
    while True:
        # Step 3: Get user input
        user_input = input(&quot;You: &quot;)
        if user_input.lower() == &quot;exit&quot;:
            print(&quot;Goodbye! Have a great day!&quot;)
            break
        
        # Add user input to the conversation
        conversation.append({&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: user_input})
        
        try:
            **# Step 4: Call OpenAI API with tools**
            response = client.chat_completions.create(
                model=&quot;gpt-4-0613&quot;,
                messages=conversation,
                functions=tools,  # Pass the tools here
                function_call=&quot;auto&quot;  # Let the AI decide if a function is needed
            )
            
            # Step 5: Check if a function call is needed
            if &quot;function_call&quot; in response.choices[0].message:
                function_call = response.choices[0].message[&quot;function_call&quot;]
                function_name = function_call[&quot;name&quot;]
                function_args = json.loads(function_call[&quot;arguments&quot;])
                
                # Step 6: Execute the function
                if function_name in globals():
                    function_output = globals()[function_name](**function_args)
                    
                    # Add the function output to the conversation
                    conversation.append({&quot;role&quot;: &quot;function&quot;, &quot;name&quot;: function_name, &quot;content&quot;: json.dumps(function_output)})
                else:
                    print(f&quot;Error: Function '{function_name}' not found.&quot;)
            
            # Step 7: AI-generated response
            else:
                assistant_response = response.choices[0].message[&quot;content&quot;]
                print(f&quot;Assistant: {assistant_response}&quot;)
                conversation.append({&quot;role&quot;: &quot;assistant&quot;, &quot;content&quot;: assistant_response})
        
        except Exception as e:
            print(f&quot;An error occurred: {e}&quot;
)
</code></pre>
<p>**
When I execute, The Chatbot gives the welcome message but when user input is received, the following error is thrown.**</p>
<p>A glimpse of the execution output and error message.</p>
<p><strong>&lt;Chatbot&gt;</strong> Welcome! Type 'exit' to end the chat.</p>
<p><strong>&lt;User&gt;</strong> Hi!  I would like to buy a new laptop. Can you suggest me one please?
<strong>&lt;Chatbot&gt;</strong> I am executing Step 4: Call OpenAI API with tools .</p>
<p><strong>&lt;Chatbot&gt;</strong> I am executing Exception part .</p>
<p><strong>&lt;Chatbot&gt;</strong> An error occurred: Error code: 400 - {'error': {'message': &quot;Missing required parameter: 'functions[0].name'.&quot;, 'type': 'invalid_request_error', 'param': 'functions[0].name', 'code': 'missing_required_parameter'}}</p>
","0","Question"
"79360138","","<p>I'm using DataTables and I'm adding buttons to download the table. Since I have multiple buttons (csv, excel, etc.) and I want more than one of them to prompt for a file name with a proposed value, I want to use a common function for each to stay DRY.</p>
<p>When I use the code from <a href=""https://stackoverflow.com/a/52779767/26428"">this answer</a> with an anonymous function, it works as I expect.</p>
<pre class=""lang-none prettyprint-override""><code>filename: function(){
    const filename = prompt(&quot;Please enter your file name&quot;, &quot;&quot;);
    if (filename != null) {
        return filename;
    }
}
</code></pre>
<p>But when I move that to a named function, everything works except that when I cancel the prompt dialog, the file is downloaded with a default name <code>download.csv</code>. I want it to cancel the prompt and the download.</p>
<pre class=""lang-none prettyprint-override""><code>function propose_filename () {
    const date = new Date()
    const proposed = $(document).prop('title') + &quot; &quot; + date.toISOString()
    const filename = prompt(&quot;Please enter your file name&quot;, proposed)
    if (filename != null) {
        return filename;
    }
}
</code></pre>
<p>And I'm using it here:</p>
<pre class=""lang-none prettyprint-override""><code>layout: {
    bottomStart: {
        buttons: [
            {
                extend: 'csv',
                filename: propose_filename
            },
            {
                extend: 'excel',
                filename: propose_filename
            },
        ]
    }
}
</code></pre>
<p>For demonstration, these JSFiddles use a different table, etc., but have my <code>propose_filename</code> function. Both the anonymous function and the named function work correctly. One notable difference between these and my non-working code is that the JSFiddle uses the <code>dom</code> feature of DataTables which is <a href=""https://datatables.net/reference/option/dom"" rel=""nofollow noreferrer"">deprecated</a> while I'm using the <a href=""https://datatables.net/reference/option/layout"" rel=""nofollow noreferrer""><code>layout</code></a> feature. Since I tried to make it use <code>layout</code> without any luck it may imply that JSFiddle is using DataTables 1 (and I don't know how to tell or change it. My code is using DataTables 2 and the <code>layout</code> option.</p>
<p>The Excel button is the one that prompts for a filename.</p>
<p><a href=""https://jsfiddle.net/dtwilliamson/fnsa8mw3/"" rel=""nofollow noreferrer"">JSFiddle</a> Anonymous function</p>
<p><a href=""https://jsfiddle.net/dtwilliamson/avh4c9L6/"" rel=""nofollow noreferrer"">JSFiddle</a> Named function</p>
<h1>Reproducer</h1>
<p>The snippet is sandboxed so Chrome and Safari block downloads.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function propose_filename () {
    const date = new Date()
    const proposed = $(document).prop('title') + "" "" + date.toISOString()
    const filename = prompt(""Please enter your file name"", proposed)
    if (filename != null) {
        return filename;
    }
}

$(document).ready(function() {
    table = $(""#MainTable"").DataTable({
        columnDefs: [
            { type: ""natural"", target: 0 },
            { orderSequence: [""asc"", ""desc""], targets: ""_all"" },
        ],
        order: [[2, ""desc""]],
        paging: false,
        language: {searchPlaceholder: ""regex""},
        search: {regex: true, smart: false},
        scrollY: ""65vh"",
        layout: {
            bottomStart: {
                buttons: [
                    {
                        extend: 'csv',
                        filename: propose_filename
                    },
                    {
                        extend: 'excel',
                        filename: propose_filename
                    },
                ]
            }
        }
    });
    table
        .columns()                                                                                                                                                                  
        .every(function () {
            const column = this;
            const title = column.footer().textContent;
            $('&lt;input type=""text"" placeholder=""Filter ' + title + '"" /&gt;')
                  .appendTo($(column.footer()).empty())
                  .on(""keyup change clear"", function () {
                      if (column.search() !== this.value) {
                          column.search(this.value).draw();
                      }
                  });
        });
});</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset=""UTF-8""&gt;
&lt;title&gt;Stack Overflow Button Test&lt;/title&gt;

&lt;link rel=""stylesheet"" href=""https://cdn.datatables.net/2.2.1/css/dataTables.dataTables.min.css""&gt;                                                                                   
&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdn.datatables.net/2.0.3/js/dataTables.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://cdn.datatables.net/plug-ins/2.2.1/sorting/natural.js""&gt;&lt;/script&gt;

&lt;script src=""https://cdn.datatables.net/buttons/3.2.0/js/buttons.dataTables.min.js""&gt;&lt;/script&gt;

&lt;script src=""https://cdn.datatables.net/buttons/3.2.0/js/dataTables.buttons.min.js""&gt;&lt;/script&gt;

&lt;script src=""https://cdn.datatables.net/buttons/3.2.0/js/buttons.html5.min.js""&gt;&lt;/script&gt;

&lt;script src=""https://stuk.github.io/jszip/dist/jszip.min.js""&gt;&lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;h1&gt;Stack Overflow Button Test&lt;/h1&gt;
&lt;div class=""centerdiv""&gt;
&lt;table id=""MainTable"" class=""display compact data-order=""[[ 2, &amp;quot;desc&amp;quot; ]]""&gt;
&lt;thead&gt; 
 &lt;tr&gt;&lt;th&gt;SKU&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Qty&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tfoot&gt;
&lt;tr&gt;
&lt;th&gt;SKU&lt;input /&gt;
&lt;/th&gt;
&lt;th&gt;Description&lt;input /&gt;
&lt;/th&gt;
&lt;th&gt;Qty&lt;input /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/tfoot&gt;
&lt;tbody&gt;
 &lt;tr&gt;
  &lt;td&gt;A&lt;/td&gt;
  &lt;td&gt;Red Bike&lt;/td&gt;
  &lt;td&gt;200&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;B&lt;/td&gt;
  &lt;td&gt;Blue Wagon&lt;/td&gt;
  &lt;td&gt;100&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;C&lt;/td&gt;
  &lt;td&gt;Green Trike&lt;/td&gt;
  &lt;td&gt;82&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;D&lt;/td&gt;
  &lt;td&gt;Yellow Cart&lt;/td&gt;
  &lt;td&gt;53&lt;/td&gt;
 &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt; 
&lt;script src=""stackoverflow_test.js""&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>
<p>I did some additional testing by putting the files immediately above on my local system and testing them using Chrome, Opera, Thunderbird and Safari with a local URL <code>file:///Users/dennis/tmp/index.html</code> and got the same behavior in each. Canceling the filename dialog caused the file to be downloaded anyway.</p>
<p>How can I make the cancel flow all the way through?</p>
","2","Question"
"79360977","","<p>I am working in R and using the following data:</p>
<pre><code>  data &lt;- data.frame(
  id = c(1, 2, 1, 2, 1, 2),
  city = c(&quot;London&quot;, &quot;London&quot;, &quot;Lisbon&quot;, &quot;Lisbon&quot;, &quot;Paris&quot;, &quot;Paris&quot;),
  name = c(&quot;jane&quot;, &quot;janey&quot;,  &quot;jane&quot;, &quot;janee&quot;, &quot;lauran&quot;, &quot;laura&quot;))
  
</code></pre>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: center;"">id</th>
<th style=""text-align: center;"">city</th>
<th style=""text-align: center;"">name</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: center;"">1</td>
<td style=""text-align: center;"">London</td>
<td style=""text-align: center;"">jane</td>
</tr>
<tr>
<td style=""text-align: center;"">2</td>
<td style=""text-align: center;"">London</td>
<td style=""text-align: center;"">janey</td>
</tr>
<tr>
<td style=""text-align: center;"">1</td>
<td style=""text-align: center;"">Lisbon</td>
<td style=""text-align: center;"">jane</td>
</tr>
<tr>
<td style=""text-align: center;"">2</td>
<td style=""text-align: center;"">Lisbon</td>
<td style=""text-align: center;"">janee</td>
</tr>
<tr>
<td style=""text-align: center;"">1</td>
<td style=""text-align: center;"">Paris</td>
<td style=""text-align: center;"">lauran</td>
</tr>
<tr>
<td style=""text-align: center;"">2</td>
<td style=""text-align: center;"">Paris</td>
<td style=""text-align: center;"">laura</td>
</tr>
</tbody>
</table></div>
<p>My function pivots the data (section 1), but I <strong>also</strong> want it to go on to stringdist the pivoted table (section 2)</p>
<pre><code>pivot_and_string_dist &lt;- function(input_data,
                                  measure_1,
                                  string_dist_method){

# section 1 - works fine
# see (1) below for output after this section
data_pivoted &lt;- input_data %&gt;%
                pivot_wider(names_from = id,
                            names_glue =  &quot;{.value}_{id}&quot;,
                            values_from = c({{measure_1}}))

# section 2 - does not work
# see (2) below for required output after this section 
data_string_dist &lt;- data_pivoted %&gt;%
                    mutate(string_dist_1 = 
                                 stringdist((paste0(!!{{measure_1}}, &quot;_1&quot;)),
                                            (paste0(!!{{measure_1}}, &quot;_2&quot;)),
                                            method = string_dist_method,
                                            p = 0.1))
return(data_string_dist)
}

</code></pre>
<p>(1) output after section 1 of function <strong>- works fine</strong></p>
<pre><code>data &lt;- data.frame(
  city = c(London, Lisbon, Paris),
  name_1 = c(&quot;jane&quot;, &quot;jane&quot;, &quot;lauran&quot;)
  name_2 = c(&quot;janey&quot;, &quot;janee&quot;, &quot;laura&quot;))
</code></pre>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: center;"">city</th>
<th style=""text-align: center;"">name_1</th>
<th style=""text-align: center;"">name_2</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: center;"">London</td>
<td style=""text-align: center;"">jane</td>
<td style=""text-align: center;"">janey</td>
</tr>
<tr>
<td style=""text-align: center;"">Lisbon</td>
<td style=""text-align: center;"">jane</td>
<td style=""text-align: center;"">janee</td>
</tr>
<tr>
<td style=""text-align: center;"">Paris</td>
<td style=""text-align: center;"">lauran</td>
<td style=""text-align: center;"">laura</td>
</tr>
</tbody>
</table></div>
<p>(2) required output after section 2 of function <strong>- not working</strong></p>
<pre><code>  x &lt;- pivot_and_string_dist(input_data = data,
                             measure_1 = name,
                             string_dist_method = &quot;jw&quot;)
  
Error in quos(..., .ignore_empty = &quot;all&quot;) : object 'name' not found
</code></pre>
<p>(NOTE: I am showing dummy stringdist numbers here!)</p>
<p>x:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: center;"">city</th>
<th style=""text-align: center;"">name_1</th>
<th style=""text-align: center;"">name_2</th>
<th style=""text-align: center;"">stringdist</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: center;"">London</td>
<td style=""text-align: center;"">jane</td>
<td style=""text-align: center;"">janey</td>
<td style=""text-align: center;"">0.4</td>
</tr>
<tr>
<td style=""text-align: center;"">Lisbon</td>
<td style=""text-align: center;"">jane</td>
<td style=""text-align: center;"">janee</td>
<td style=""text-align: center;"">0.5</td>
</tr>
<tr>
<td style=""text-align: center;"">Paris</td>
<td style=""text-align: center;"">lauran</td>
<td style=""text-align: center;"">laura</td>
<td style=""text-align: center;"">0.6</td>
</tr>
</tbody>
</table></div>
","0","Question"
"79365181","","<blockquote>
<p>Any variable that is declared inside a task or function without
specifying type will be considered automatic. To specify that a
variable is static place the &quot;static&quot; keyword in the declaration
before the type, e.g., &quot;static int x;&quot;. The &quot;automatic&quot; keyword is
used in the same way.</p>
</blockquote>
<p><a href=""https://en.wikipedia.org/wiki/SystemVerilog"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/SystemVerilog</a></p>
<p>This is what I found on Wikipedia article.</p>
<p>But, I'm getting an error in below scenario.</p>
<pre><code>module MouduleName ();
function int getNumberDivisableValue(int divisibleNumber);
     int number_divisable_value = 0;  // Not explicitly declared as automatic
     // automatic int number_divisable_value = 0;  // working as expected if it's explicitly declared as automatic
    while (!number_divisable_value) begin
      number_divisable_value = $urandom_range(URANDOM_MIN_RANGE, URANDOM_MAX_RANGE);
      if (number_divisable_value % divisibleNumber == 0) begin
        return number_divisable_value;
      end else begin
        number_divisable_value = 0;
      end
    end
  endfunction

 initial begin
    //function call
 end

endmodule
</code></pre>
<p><strong>Error (suppressible): array_manipulation.sv(18): (qverilog-2244) Variable 'number_divisable_value' is implicitly static. You must either explicitly declare it as static or automatic or remove the initialization in the declaration of variable.</strong></p>
<p>But, if the variable is declared explicitly as <code>automatic</code>, I'm not getting above error. If the variable inside a function or task is automatic by default, then why I am getting an error and why not if it is explicitly declared as automatic?</p>
<p>If we can't initialize an automatic variable while declaring in SystemVerilog, but how can we do in programming language like Java or other software languages (dynamic variable)?</p>
<p>Tool : I've been using <strong>QuestaSim</strong></p>
","2","Question"
"79366045","","<p>Having a function that returns a list:</p>
<pre><code>def func1(list1):
    func1_result = list1 * 2  # This is just an illustrative example to simply show that the function returns a list resulting from any function calculation.
    return func1_result
</code></pre>
<p>And getting the whole list returned by the function with:</p>
<p>Example 1:</p>
<pre><code>list1_1 = [5, 4, 3, 2, 1]

print(f&quot;{func1(list1_1)}&quot;)  # &quot;[5, 4, 3, 2, 1, 5, 4, 3, 2, 1]&quot;
</code></pre>
<p>Or also getting the value of a specific index of the list returned by the function, with:</p>
<p>Example 2:</p>
<pre><code>list1_1 = [5, 4, 3, 2, 1]

print(f&quot;{func1(list1_1)[0]}&quot;)  # &quot;5&quot;
</code></pre>
<p>Then, the question is about, <strong>is there any way where the function <code>func1</code> could detect if the calling instruction syntax/format is including or not the indexing part <code>[n]</code>? and also, when including the indexing part <code>[n]</code>, then, how to know what specific index value is in the function calling instruction?</strong></p>
<pre><code>def func1(list1):
    func1_result = []
    
    '''
    if  the function calling instruction is about getting the whole resulting list:
        do the function calculations to get the whole resulting list `func1_result`.
    elif  the function calling instruction is about getting one specific index value of the resulting list:
        do the function calculations to get only the resulting value for the specified index.
        # In this case the result could be a 1-element list.
        # Main goal for this case: saving memory during calculations when working with large lists and with many function's calls.
    '''
    
    return func1_result
</code></pre>
<p>My understanding is that the indexing access specified in the calling instruction takes place after the function returns the resulting list, but maybe there would be a kind of way (ideally a direct way) which the function could get this calling format information from the calling instruction, without the need to specify it manually with an additional function parameter.</p>
","2","Question"
"79366909","","<p>I am trying to fit an exponential decay curve to some biological data using <code>nls()</code> within a function (I want to do this multiple times).</p>
<p>I receive an error with the way I am specifying <code>nls()</code> which I can't work out:</p>
<pre><code>Error in str2lang(x) : &lt;text&gt;:2:0: unexpected end of input
1: ~ 
   ^
</code></pre>
<p>A small dummy dataset and the code I have written is below - any help would be greatly appreciated.</p>
<pre><code>dat_small &lt;-  structure(list(actual_time = c(5, 9, 30, 59, 119, 171, 216), 
                             activity = c(7158, 7386, 5496, 3884, 1502, 819, 409)), row.names = c(NA, 
                                                                                                  -7L), class = c(&quot;tbl_df&quot;, &quot;tbl&quot;, &quot;data.frame&quot;))
curve_fit &lt;-  function(x, y, df) {
  #browser()
  # Mono-exponential model for activity using actual sampling time
  mod &lt;-  lm(log(df[[y]]) ~ df[[x]], data = df) # get starting values from log-linear model
  C0 &lt;-  as.numeric(exp(mod$coef[1])) # exponential of log-linear intercept
  lambda1 &lt;-  as.numeric(abs(mod$coef[2])) # absolute value of slope of log-linear model
  nls_mod_mono &lt;-  nls(df[[y]] ~ C0*exp(-lambda1*df[[x]]), start = c(C0 = C0, lambda1 = lambda1), data = df)
  summary(nls_mod_mono) # estimate model
  xNew &lt;- seq(0, 240, length.out = 100) # new grid of times
  yNew &lt;- predict(nls_mod_mono, list(x = xNew)) # predict activity
  dfNew &lt;-  data.frame(x = xNew, y = yNew)
  p_mono &lt;-  ggplot(dfNew, aes(x = x, y = y)) +
    geom_line() +
    geom_point(data = df, aes(x = x, y = y), size = 3) +
    xlab(&quot;Actual Sampling Time (mins)&quot;) + ylab(&quot;Activity (Bq)&quot;) +
    theme_bw(base_size = 20)
  mono_half_life &lt;-  0.693/as.numeric(coef(nls_mod_mono)[2]) # half-life
  mono_auc &lt;-  as.numeric(coef(nls_mod_mono)[1])/as.numeric(coef(nls_mod_mono)[2]) # AUC to infinity (can be estimated in mono case by simply dividing the intercept by lambda)
  results &lt;-  c(p_mono, mono_half_life, mono_auc)
}
curve_fit(&quot;actual_time&quot;, &quot;activity&quot;, dat_small)
</code></pre>
","2","Question"
"79367871","","<p>I am working on a program I wrote a while ago and have come across something I can't figure out why I did it.</p>
<pre><code>__fortify_function void DoLog(const char* format,...)
</code></pre>
<p>As suggested by the name the function puts a log message out with the destination depending on some status variables.</p>
<p>What I can't figure out is what the &quot;__fortify_function&quot; is for. Searching online makes it clear it has something to do with the &quot;FORTIFY_SOURCE&quot; definition (which this code does not use) but I can't find anything online or off that says what __fortify_function is for. Everywhere I find it, it is just there with no explanation. It is possible that when I wrote DoLog I was cookbooking and so included it simply because the example I was working from did.</p>
<p>So what does &quot;__fortify_function&quot; specifically do?</p>
","0","Question"
"79368152","","<p>I am new to using Azure App functions and i am exploring of using queue storage with my function. my runtime is python. i am  deploying my function via Vscode. i am facing a challenge when i add my configuration such as my evns and endpoints at the global level and deploy my function, my function is no longer available.  here is my code,</p>
<pre><code>import os
import requests
import logging
from datetime import datetime
from azure.storage.blob.aio import BlobServiceClient
import azure.functions as func
import asyncio
import json
import aiohttp
from isodate import parse_duration
import numpy as np
from ruptures.detection import Pelt
import librosa
import tempfile
import time

# --- Azure Function Configuration ---
# Replace with your actual values
STORAGE_CONNECTION_STRING = os.environ[&quot;AzureWebJobsStorage&quot;]  # Use single connection string if same
SOURCE_CONTAINER_NAME = os.environ[&quot;STORAGE_CONNECTION_STRING&quot;]
DESTINATION_CONTAINER_NAME = os.environ[&quot;DESTINATION_CONTAINER_NAME&quot;]
SPEECH_API_KEY = os.environ[&quot;SPEECH_API_KEY&quot;]
YOUR_SAS_TOKEN = os.environ[&quot;YOUS_SAS_TOKEN&quot;]

# --- Logging Configuration ---
logging.basicConfig(level=logging.INFO)

# --- Speech to Text API Configuration (with v3.2) ---
endpoint = &quot;https://my-speech-name.cognitiveservices.azure.com/speechtotext/v3.2/transcriptions&quot;
headers = {
    &quot;Content-Type&quot;: &quot;application/json&quot;,
    &quot;Ocp-Apim-Subscription-Key&quot;: SPEECH_API_KEY
}

app = func.FunctionApp()

@app.function_name(name=&quot;sttqueue&quot;)
@app.queue_trigger(arg_name=&quot;msg&quot;,
                   queue_name=&quot;transcription-queue&quot;,
                   connection=&quot;AzureWebJobsStorage&quot;)
async def sttqueue(msg: func.QueueMessage):
    logging.info('Python Queue trigger function processed a queue item: %s', msg.get_body().decode('utf-8'))

    try:
        batch = json.loads(msg.get_body().decode('utf-8'))
        logging.info(f&quot;Processing batch: {batch}&quot;)

        source_blob_client = BlobServiceClient.from_connection_string(STORAGE_CONNECTION_STRING)
        destination_blob_client = BlobServiceClient.from_connection_string(STORAGE_CONNECTION_STRING)

        async with source_blob_client, destination_blob_client:
            source_container_client = source_blob_client.get_container_client(SOURCE_CONTAINER_NAME)
            destination_container_client = destination_blob_client.get_container_client(DESTINATION_CONTAINER_NAME)

            async with aiohttp.ClientSession() as session:
                for blob_name in batch:
                    blob_url = f&quot;https://{source_container_client.account_name}.blob.core.windows.net/{source_container_client.container_name}/{blob_name}?{YOUR_SAS_TOKEN}&quot;
                    await transcribe_audio(blob_name, blob_url, session, destination_container_client, endpoint, headers)

    except Exception as e:
        logging.error(f&quot;Error processing queue message: {e}&quot;)

async def transcribe_audio(blob_name, blob_url, session, destination_container_client, endpoint, headers):
    try:
        # . endpoint and headers)

    except aiohttp.ClientError as e:
        logging.error(f&quot;Error communicating with Speech API: {e}&quot;)
    except azure.core.exceptions.AzureError as e:
        logging.error(f&quot;Error accessing Azure Storage: {e}&quot;)
    except Exception as e:
        logging.error(f&quot;Error transcribing {blob_name}: {e}&quot;)

return app  # Return the Function App object
</code></pre>
<p><a href=""https://i.sstatic.net/DettY04E.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/DettY04E.png"" alt=""no available func"" /></a></p>
<p>however, when i comment out  my env and endpoints, my function is deployed without any issues.</p>
<p><a href=""https://i.sstatic.net/BA7Skxzu.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/BA7Skxzu.png"" alt=""enter image description here"" /></a></p>
<p>as you can see after removing the config envs and endpoint, the function is available along with the trigger. what am i doing wrong ? Any suggestions to fix this issue ?</p>
","-2","Question"
"79373335","","<p>I'm populating Col A, Col B, and Col C with random text drawn from a current list of words in Col E. The words are supposed to populate 25 rows down in A, B, and C.</p>
<p><code>=INDEX(SORTBY(E2:E26, RANDARRAY(ROWS(E2:E26))), SEQUENCE(25))</code></p>
<p>The above function works as desired, however, the issue I'm having is every IF function I try to come up with to not have cells populate with duplicated words fail. No words are supposed to duplicate on any of the 25 rows. For example: if Col A has the word &quot;Josh&quot; in row 12, Col B and Col C are not to have the word Josh in their cells and are supposed to display an empty cell.</p>
<p>The latest attempt is below (I know it's ugly and definitely not correct but I'm pretty new to Excel):</p>
<p><code>=IF(INDEX(SORTBY(E2:E26, RANDARRAY(ROWS(E2:E26))), SEQUENCE(25))=A2:A101,&quot; &quot;, INDEX(SORTBY(E2:E26, RANDARRAY(ROWS(E2:E26))), SEQUENCE(25)))</code></p>
<p>The above works somewhat but it only produces one word and not 25 as needed and I need it to compare every row in each col (A, B, and C) to ensure no duplicates exist on that particular row.</p>
<p>Here is an example of columns producing undesired duplicates.</p>
<p><a href=""https://i.sstatic.net/lTc5i79F.png"" rel=""nofollow noreferrer"">Col A, B, and C outputs with duplicates showing</a></p>
<p>NOTE: The empty cells showing in the image are NOT produced from the function working, they are produced because the list this information is pulled from intentionally has blank cells.</p>
<p>I've searched on Stackoverflow as well as searched extensively online but have not been able to find a working solution.</p>
<p>Any help or suggestions to guide me to a working function that does what it's supposed to, I'd be very appreciative.</p>
<p>I've tried testing various forms of the IF function with no success.</p>
","1","Question"
"79374445","","<p>I need an Excel function that operated essentially like a <code>vlookup</code>, but it also copies the color of the searched cell to the active cell.</p>
<p>I ended up with the following function:</p>
<pre><code>    Sub ChangeColor(addr, colorindex_result As Integer)
        addr.Interior.ColorIndex = colorindex_result
    End Sub
    
Public Function VLookupCC(lookup_value As Variant, lookup_range As Range, column_index As Long) As Variant
    
    Dim i As Long
    Dim found As Boolean
    
    found = False
      
    If column_index &lt; 1 Or column_index &gt; lookup_range.Columns.Count Then
        VLookupCC = CVErr(xlErrValue)
        Exit Function
      End If
    
    For i = 1 To lookup_range.Rows.Count
        If lookup_range.Cells(i, 1).Value = lookup_value Then
          VLookupCC = lookup_range.Cells(i, column_index).Value
          colorindex_result = lookup_range.Cells(i, column_index).Interior.ColorIndex
          Evaluate &quot;ChangeColor(&quot; &amp; ActiveCell.Address &amp; &quot;, &quot; &amp; colorindex_result &amp; &quot;)&quot;
          found = True
          Exit Function
        End If
      Next i
    
    If Not found Then
        VLookupCC = CVErr(xlErrNA)
        Evaluate &quot;ChangeColor(&quot; &amp; ActiveCell.Address &amp; &quot;, &quot; &amp; xlColorIndexNone &amp; &quot;)&quot;
      End If
    
    End Function
</code></pre>
<p>A for that handles the <code>vlookup</code> functionality, and a sub trick to handle colorindex.</p>
<p>However, this is REALLY slow, and the color functionality doesn't run unless I type the function on the cell directly. For example, if a type the function on the cell A3 and then autofill to the cells A4 and A5, it only gets the color for the cell A3. I'd have to click on the A4 and A5 cells and press enter for that to work there too.</p>
<p>Any help would be appreciated</p>
","0","Question"
"79375994","","<p>I have tried the following to turn my <code>DATA</code> into my <code>Desired_output</code> (reproducible code below). But as you can see, I get a bunch of <code>NA</code> in my output.</p>
<p>Is there a way to obtain my <code>Desired_output</code>?</p>
<p><strong>Tried:</strong></p>
<pre><code>library(tidyverse)
DATA %&gt;%
  mutate(
    category = case_when(
      str_detect(Discription, &quot;CTE&quot;) ~ &quot;CTE&quot;,
      str_detect(Discription, &quot;AP/IB&quot;) ~ &quot;AP_IB&quot;,
      TRUE ~ &quot;Other&quot;
    ),
    group = case_when(
      str_detect(Discription, &quot;ELs&quot;) ~ &quot;ELs&quot;,
      str_detect(Discription, &quot;Former ELs&quot;) ~ &quot;Former ELs&quot;,
      str_detect(Discription, &quot;Monitor ELs&quot;) ~ &quot;Monitor ELs&quot;,
      str_detect(Discription, &quot;Never ELs&quot;) ~ &quot;Never ELs&quot;,  # Explicitly include Never ELs
      TRUE ~ &quot;Other&quot;
    ),
    value_type = case_when(
      str_detect(Discription, &quot;^Total&quot;) ~ &quot;Total&quot;,  # Identify rows with Total values
      str_detect(Discription, &quot;Percent&quot;) ~ &quot;Percent&quot;,  # Identify rows with Percent values
      TRUE ~ &quot;Value&quot;  # Identify rows with regular values
    )
  ) %&gt;%
  # Separate the Total rows and use them in the &quot;Total&quot; column for each group
  filter(value_type != &quot;Percent&quot; &amp; value_type != &quot;Other&quot;) %&gt;%
  pivot_wider(
    names_from = value_type, 
    values_from = value, 
    values_fn = list(value = sum), 
    values_fill = list(value = NA)
  ) %&gt;%
  # Pivot the Total values separately
  mutate(
    Total = case_when(
      str_detect(Discription, &quot;Total&quot;) ~ Value,  # Take &quot;Total&quot; values for each group
      TRUE ~ NA_real_
    )
  ) %&gt;%
  # Now calculate Percent based on (Value / Total) * 100 for each group
  group_by(group) %&gt;%
  mutate(
    Percent = ifelse(!is.na(Value) &amp; !is.na(Total), (Value / Total) * 100, NA)
  ) %&gt;%
  ungroup() %&gt;%
  # Remove rows where Description contains 'Percent' because we already have a Percent column
  filter(!str_detect(Discription, &quot;Percent&quot;)) %&gt;%
  # Select the columns for the final output
  select(ResdDistInstID, InstNm, category, group, Discription, Value, Total, Percent) %&gt;%
  arrange(InstNm, category, group)
</code></pre>
<pre><code>DATA &lt;- structure(list(
  ResdDistInstID = c(1894, 1894, 1894, 1894, 1894, 
                     1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894, 
                     1894, 1894, 1894, 1894), 
  InstNm = c(&quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, 
             &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, 
             &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, 
             &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, 
             &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;), 
  Discription = c(&quot;ELs in an AP/IB Class&quot;, 
                  &quot;ELs CTE Class&quot;, &quot;Total ELs&quot;, &quot;Percent ELs in AP/IB Class&quot;, &quot;Percent ELs in CTE Class&quot;, 
                  &quot;Never ELs in an AP/IB Class&quot;, &quot;Never ELs in a CTE Class&quot;, &quot;Total Never ELs&quot;, 
                  &quot;Percent Never ELs in AP/IB&quot;, &quot;Percent Never ELs in CTE&quot;, &quot;Former ELs CTE Class&quot;, 
                  &quot;Former ELs in an AP/IB Class&quot;, &quot;Total Former ELs&quot;, &quot;Percent Former ELs in AP/IB&quot;, 
                  &quot;Percent Former ELs in CTE&quot;, &quot;Monitor ELs CTE Class&quot;, &quot;Monitor ELs in an AP/IB Class&quot;, 
                  &quot;Total Monitor ELs&quot;, &quot;Percent Monitor ELs in AP/IB&quot;, &quot;Percent Monitor ELs in CTE&quot;
  ), 
  value = c(1, 6, 83, 1.2, 7.2, 95, 329, 4845, 1.9, 6.7, 12, 
            5, 129, 3.8, 9.3, 2, 0, 29, 0, 6.8)), 
  row.names = c(NA, -20L), 
  class = &quot;data.frame&quot;
)

</code></pre>
<pre><code>Desired_Output &lt;- structure(list(
  ResdDistInstID = c(1894, 1894, 1894, 1894, 1894, 1894, 1894, 1894), 
  InstNm = c(&quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, 
             &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;, &quot;Baker SD 5J&quot;), 
  category = c(&quot;AP_IB&quot;, &quot;CTE&quot;, &quot;AP_IB&quot;, &quot;CTE&quot;, &quot;AP_IB&quot;, &quot;CTE&quot;, &quot;AP_IB&quot;, &quot;CTE&quot;), 
  group = c(&quot;ELs&quot;, &quot;ELs&quot;, &quot;Former ELs&quot;, &quot;Former ELs&quot;, &quot;Never ELs&quot;, &quot;Never ELs&quot;, 
            &quot;Monitor ELs&quot;, &quot;Monitor ELs&quot;), 
  Discription = c(&quot;ELs in an AP/IB Class&quot;, &quot;ELs CTE Class&quot;, &quot;Former ELs in an AP/IB Class&quot;, 
                  &quot;Former ELs CTE Class&quot;, &quot;Never ELs in an AP/IB Class&quot;, &quot;Never ELs in a CTE Class&quot;, 
                  &quot;Monitor ELs in an AP/IB Class&quot;, &quot;Monitor ELs CTE Class&quot;), 
  Value = c(1, 6, 5, 12, 95, 329, 2, 0), 
  Total = c(83, 83, 129, 129, 4845, 4845, 29, 29), 
  Percent = c(1.2, 7.2, 3.9, 9.3, 1.9, 6.8, 6.9, 0)
), row.names = c(NA, -8L), class = &quot;data.frame&quot;)
</code></pre>
","0","Question"
"79377843","","<p>I want to use <code>breakout(var)</code> instead of typing that if statement a million times. How do I make that work? <code>Return</code> returns from the function but I want to end the hotkey.</p>
<pre><code>f::{
    send &quot;a&quot;
    sleep 1000

    if (A_PriorKey!=&quot;f&quot; and A_PriorKey!=&quot;&quot;){
      return ;does the desired behaviour, but I want to use breakout(&quot;f&quot;) instead of 3 liner if statments
    }
    ;breakout(&quot;f&quot;)

    send &quot;a&quot;
    sleep 1000
}


breakout(var){
    if (A_PriorKey!=var and A_PriorKey!=&quot;&quot;){
        return
    }
}
</code></pre>
<p>If I press <kbd>F</kbd>, after 1000ms it checks if I pressed any other key since the hotkey began. If I did it ends the hotkey early.</p>
","0","Question"
"79379410","","<p><a href=""https://i.sstatic.net/p48he5fg.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<p>Could someone help me turn the following equation in Column I into one where it does not use Vlookup but rather Index/Match functions and gives me desired result please. I am struggling with it and getting some #N/A values.</p>
<p>The formula in column I6 currently is:</p>
<p>=IF(AND(E6=&quot;fav&quot;,(VLOOKUP(D6,B6:C7,2,FALSE)-F6)&gt;VLOOKUP(H6,B6:C7,2,FALSE)),&quot;W&quot;,IF(AND(E6=&quot;dog&quot;,D6=G6),&quot;W&quot;,IF(AND(E6=&quot;dog&quot;,D6=H6,((VLOOKUP(D6,B6:C7,2,FALSE)+F6)&gt;VLOOKUP(G6,B6:C7,2,FALSE))),&quot;W&quot;,&quot;L&quot;)))</p>
<p>I want to have a formula in column/cell I6 that uses Index/Match functions and returns a &quot;W&quot; if at least one of the 3 scenarios below is true. If at least one of them are not true, then return &quot;L&quot; in cell I6:</p>
<ol>
<li>If E6 has the text &quot;fav&quot;, then the following equation described in part A and B below has to be true in order to return a &quot;W&quot; in cell I6 .
A. Lookup the name located in cell D6 inside of column B6:B7 and take that score that belongs to it from Column C and subtract the value located in cell F6 from it.
B. Then Lookup the name located in cell H6 inside of column B6:B7 and record that score.</li>
</ol>
<p>If the result of part A above is &gt; value recorded in part B, then return &quot;W&quot; in I6,  else go to step #2 below</p>
<ol start=""2"">
<li><p>If E6 has the text &quot;dog&quot; AND cell D6 = G6, then return a &quot;W&quot; in cell I6.  Else go to step #3 below</p>
</li>
<li><p>If E6 has the text &quot;dog&quot; AND cell D6 = H6, then the following equation described in part C and D below has to be true in order to return a &quot;W&quot; in cell I6 .
C. Lookup the name located in cell D6 inside of column B6:B7 and take that score that belongs to it and add the value in cell F6 to it.
D. Then Lookup the name located in cell G6 inside of column B6:B7 and record its score from column C.</p>
</li>
</ol>
<p>If the result of part C above is &gt; value recorded in part D, then return &quot;W&quot; in I6,</p>
<p>else return &quot;L&quot; in cell I6.</p>
<p>I appreciate the help. Thanks.</p>
<p>I tried using different variations of Index and Match together but it worked for a couple of rows but returned #N/A for others.  I do not think I am using the Index / Match function correctly when trying to add or subtract the score in F6 from it in order to get the results desired.</p>
","1","Question"
"79382038","","<p>I put a button on my report to output it to pdf but I keep getting error <code>2501 output was canceled</code>.  Below is the code I placed in a button on my form.</p>
<pre class=""lang-vb prettyprint-override""><code>' Note Report opened from form button - cmdOpenRpt

Private sub cmdOpenRpt
Dim sRptName as string
    sRptName = Me.Name
    DoCmd.OpenReport sRptName, acViewPreview ' Report shows
    ' Note:Changed acViewPreview to acViewReport so I could click my button
End Sub   

Private Sub cmdSavePDF_Click()
Dim sRptName, sDateStamp, sTimeStamp, sFilename, sPath, sFilespec As String

    On Local Error GoTo ERR_cmdSavePDF_Click

    sRptName = Me.Name
    ' Create filename
    sTimeStamp = Format(Time, &quot;hhmmss&quot;)
    sDateStamp = Format(Date, &quot;yyyymmdd&quot;)
    sFilename = sRptName &amp; &quot;_&quot; &amp; sDateStamp &amp; &quot;_&quot; &amp; sTimeStamp &amp; &quot;.pdf&quot;
    sPath = AppPath &amp; &quot;PDF\&quot;
    'Public Function AppPath() As String
        'AppPath = Application.CurrentProject.Path &amp; &quot;\&quot;
    'End Function
    sFilespec = sPath &amp; sFilename
    DoCmd.OutputTo acOutputReport, sRptName, acFormatPDF, sFilespec, True

EXIT_cmdSavePDF_Click:
    Exit Sub
ERR_cmdSavePDF_Click:
    ShowError msRptName &amp; &quot;_cmdSavePDF_Click&quot;
    Resume EXIT_cmdSavePDF_Click

End Sub
' Update: Was getting error:2501.  
' Now processing appears on the screen and then 
' execution jumps to exit sub (not to error handler) 
' no error code is displayed and the 
' report does not get saved as a 'pdf file' 
' I was hoping a pdf file would be made in my app path folder

Public Sub ShowError(WhereAt As String, Optional XtraMsg As String)
Dim sTitle, sDesc As String

    sTitle = &quot;Error #&quot; &amp; CStr(Err) &amp; &quot; @ &quot; &amp; WhereAt
    sDesc = Err.Description &amp; vbCrLf &amp; &quot;Source: &quot; &amp; Err.Source
    If Len(XtraMsg) &gt; 0 Then sDesc = sDesc &amp; vbCrLf &amp; XtraMsg
    MsgBox sDesc, vbExclamation, sTitle
    
End Sub
</code></pre>
","0","Question"
"79382054","","<p>I am trying to split a string in SQLite into 4 separate integers. I found online someone doing it with 3 but i am needing 4. I have tried to make comments as I have gone to figure out what each part is doing however this is completely new to me. If someone is able to explain this better then that would be really helpful along with how exactly I will be able to get the last set of numbers after the final delimiter.</p>
<p>This is my code at the moment with the comments. If someone is able to edit ip4 so that it would get the last string. It is an IP address so could be any combination [0-255].[0-255].[0-255].[0-255]</p>
<pre><code>-- takes the ip address and splits it on the delimiter . starting at position 1 in the string
    CAST(SUBSTRING(ip_address, 1, INSTR(ip_address, '.'))AS int) as ip1,
    
    -- takes the ip address and splits it on the delimiter . 
    -- +1 starts at the first position to the right of the found .
    -- 1 starting at the first position from the .
    CAST(SUBSTRING(SUBSTRING(ip_address, INSTR(ip_address, '.') + 1), 1,
                   -- find the 2nd . by the additional arguments
                   -- the -1 starts at the left of the found
              INSTR(SUBSTRING(ip_address, INSTR(ip_address, '.') + 1), '.') - 1) AS int) as ip2,
    -- +1 starts at the first position to the right of the found .
    CAST(SUBSTRING(SUBSTRING(ip_address, INSTR(ip_address, '.') + 1),
                   -- the first +1 captures the additional digit to the right of the . found where 3 numbers are present
                   -- the 2nd +1 takes everything to the right of the found .
              INSTR(SUBSTRING(ip_address, INSTR(ip_address, '.')+1), '.') +1) AS int) as ip3,
              
    CAST(SUBSTRING(SUBSTRING(ip_address, INSTR(ip_address, '.')+1 ),-1,
              INSTR(SUBSTRING(ip_address, INSTR(ip_address, '.') +1), '.') -1) AS int) as ip4,
</code></pre>
","0","Question"
"79382796","","<p>The code below is what I am currently using. It will take a tibble of population data and join a separate tibble with three different variables. I then am only running the process of taking three different lags of &quot;variable_a&quot;, testing the correlation of them to the target variable &quot;population, and then saving any of the lags that have a greater than 0.5 correlation as values in a &quot;variable_a_lag&quot; list.</p>
<p>The problem I am trying to solve is because some datasets are tested against variables a, b, c..., others are tested against variables i, j, k.... and so on. **Instead of hardcoding a different script for different variables, I want to be able to have code that pulls the variable column names into a list and then a loop is ran over all of those variables, similiar to what I demonstrated with &quot;variable_a&quot;. I want to be able to save all the lag correlation figures as values exactly as I have here.</p>
<p>If there is a better idea, please let me know. If this is the correct thinking, please let me know how I can call the column names from the list in a loop that will allow me to perform the function below. Preemptive thank you.</p>
<pre><code>library(dplyr)

population_data &lt;- tibble(date = c(&quot;2024-01-01&quot;, &quot;2024-02-01&quot;, &quot;2024-03-01&quot;, &quot;2024-04-01&quot;, &quot;2024-05-01&quot;, &quot;2024-06-01&quot;, &quot;2024-07-01&quot;, &quot;2024-08-01&quot;, &quot;2024-09-01&quot;, &quot;2024-10-01&quot;, &quot;2024-11-01&quot;, &quot;2024-12-01&quot;),
                          population = c(15066061, 15549704, 18687056, 18206234, 18948074, 19424572, 19786907, 19545826, 18139647, 19633439, 17136602, 15589939)) %&gt;%
                          mutate_if(is.character, as.Date)

external_variables &lt;- tibble(date = c(&quot;2024-01-01&quot;, &quot;2024-02-01&quot;, &quot;2024-03-01&quot;, &quot;2024-04-01&quot;, &quot;2024-05-01&quot;, &quot;2024-06-01&quot;, &quot;2024-07-01&quot;, &quot;2024-08-01&quot;, &quot;2024-09-01&quot;, &quot;2024-10-01&quot;, &quot;2024-11-01&quot;, &quot;2024-12-01&quot;),
                     variable_a = c(0.317307116, 0.352468819, 0.366432676, 0.368892142, 0.365603593, 0.367213977, 0.384769145, 0.423860447, 0.460068567, 0.462793275, 0.415102119, 0.353779592),
                     variable_b = c(0.172175256, 0.187336159, 0.2064973, 0.225618438, 0.226878513, 0.225218414, 0.236999116, 0.241679394, 0.249559864, 0.264060727, 0.278541589, 0.293562483),
                     variable_c = c(0.326591281, 0.338010556, 0.341884545, 0.344272213, 0.348808904, 0.355742496, 0.363469639, 0.372550879, 0.387764013, 0.414237696, 0.453669722, 0.480433344)) %&gt;%
                     mutate_if(is.character, as.Date)

data_variable_merge &lt;- population_data %&gt;%
  left_join(external_variables, by = c(&quot;date&quot; = &quot;date&quot;))

variable_a_lags &lt;- data_variable_merge %&gt;%
  select(population, variable_a) %&gt;%
  mutate(lag_1 = lag(variable_a, n =1)) %&gt;%
  mutate(lag_2 = lag(variable_a, n =2)) %&gt;%
  mutate(lag_3 = lag(variable_a, n =3))

variable_a_correlation_table &lt;- data.frame(variable_a_lags = numeric(),
                                              correlation = numeric(),
                                              stringsAsFactors = FALSE)

for (col_name in names(variable_a_lags)) {
variable_a_correlation &lt;- cor(variable_a_lags$population, variable_a_lags[[col_name]], use = &quot;complete.obs&quot;)

variable_a_correlation_table &lt;- rbind(variable_a_correlation_table, 
data.frame(variable_a_lags = col_name,
                                                                                           
correlation = variable_a_correlation,
                                                                                           
stringsAsFactors = FALSE))
}

variable_a_lags &lt;- variable_a_correlation_table %&gt;%
 slice(-c(1:2)) %&gt;%
 mutate(correlation = abs(correlation - 0 )) %&gt;%
 filter(correlation &gt; &quot;0.5&quot; ) %&gt;%
 pull(variable_a_lags) 
</code></pre>
","0","Question"
"79383749","","<p>I am trying to compare elements of array to variables, but I always get this error and I don't know what to do to fix it.</p>
<pre><code>using System;
using System.Linq;

public string[] groups = new string[120] { &quot;hydrogenScreen&quot; , &quot;heliumScreen&quot;, &quot;menu&quot;, &quot;li&quot;, &quot;be&quot;, &quot;b&quot;, &quot;c&quot;, &quot;n&quot;, &quot;o&quot;, &quot;f&quot;, &quot;ne&quot;, &quot;na&quot;, &quot;mg&quot;, &quot;al&quot;, &quot;si&quot;, &quot;p&quot;, &quot;s&quot;, &quot;cl&quot;, &quot;ar&quot;, &quot;k&quot;, &quot;ca&quot;,&quot;sc&quot;, &quot;ti&quot;,&quot;v&quot;, &quot;cr&quot;,&quot;mn&quot;,&quot;fe&quot;,&quot;co&quot;, &quot;ni&quot;, &quot;cu&quot;, &quot;zn&quot;, &quot;ga&quot;, &quot;ge&quot;, &quot;as&quot;, &quot;se&quot;, &quot;br&quot;, &quot;kr&quot;, &quot;rb&quot;, &quot;sr&quot;, &quot;y&quot; , &quot;zr&quot;, &quot;nb&quot;, &quot;mo&quot;, &quot;tc&quot;, &quot;ru&quot; , &quot;rh&quot;, &quot;pd&quot;, &quot;ag&quot;, &quot;cd&quot;, &quot;in&quot; , &quot;sn&quot;, &quot;sb&quot; , &quot;te&quot;, &quot;i&quot;, &quot;xe&quot;, &quot;cs&quot;, &quot;ba&quot;, &quot;la&quot;, &quot;ce&quot;, &quot;pr&quot;, &quot;nd&quot;, &quot;pm&quot;, &quot;sm&quot;, &quot;eu&quot;, &quot;gd&quot;, &quot;tb&quot;, &quot;dy&quot;, &quot;ho&quot;, &quot;er&quot;, &quot;tm&quot;, &quot;yb&quot;, &quot;hf&quot;, &quot;ta&quot;, &quot;w&quot;, &quot;re&quot;, &quot;os&quot;, &quot;ir&quot;, &quot;pt&quot;, &quot;au&quot;, &quot;hg&quot;, &quot;tl&quot;, &quot;pb&quot;, &quot;bi&quot;, &quot;po&quot;, &quot;at&quot;, &quot;rn&quot;, &quot;fr&quot;, &quot;ra&quot;, &quot;ac&quot;, &quot;th&quot;, &quot;pa&quot;, &quot;u&quot;, &quot;np&quot;, &quot;pu&quot;, &quot;am&quot;, &quot;cm&quot;, &quot;bk&quot;, &quot;cf&quot;, &quot;es&quot;, &quot;fm&quot;, &quot;md&quot;, &quot;no&quot;, &quot;lr&quot;, &quot;rf&quot;, &quot;db&quot;, &quot;sg&quot;, &quot;bh&quot;, &quot;hs&quot;, &quot;mt&quot;, &quot;ds&quot;, &quot;rg&quot;, &quot;cn&quot;, &quot;nh&quot;, &quot;fl&quot;, &quot;mc&quot;, &quot;lv&quot;, &quot;ts&quot;, &quot;og&quot; };

public void efficientTabChange(CanvasGroup group, string groups)
{
    
    for (int n = 0; n &lt; 119; n++)
    {
        string check;
        check = group.ToString();
        string check1 = groups[n].ToString();
        if (check.Equals(check1))
        {
            ActivateTabs(group);
        }
        else
        {
            DeactivateTabs(group);
        }

    }
}
</code></pre>
<p>It is for button in unity to change tabs, but when I click it also gives me error for index being out of bounds</p>
","0","Question"
"79384924","","<p>I would like to match a regular expression in a string and add the character <code>0</code> after all occurrences.  That is, each match will be replaced with itself followed by <code>0</code>.  But because <code>0</code> is a digit, I don't know how to write it in the replacement pattern given as the second argument to <code>re.sub</code>.</p>
<p>Let me give an example of an easier problem: add the character <code>X</code> after all vowels.</p>
<pre><code>import re
s = 'hello'
r = re.sub('([aeiou])', r'\1X', s)
print(r)
</code></pre>
<p>This prints <code>heXlloX</code>.</p>
<p>But suppose instead of adding the character <code>X</code> I want to add the character <code>0</code>.  If I try to write this</p>
<pre><code>r = re.sub('([aeiou])', r'\10', s)
</code></pre>
<p>then it thinks I am making a backreference to the capturing group numbered 10, and fails with <code>invalid group reference 10</code>.</p>
<p>I know for this particular pattern I could rework it as a lookbehind assertion, so that the replacement pattern would no longer need a backreference.</p>
<pre><code>r = re.sub('(?&lt;=[aeiou])', '0', s)
</code></pre>
<p>That works -- but not all regular expressions can be used as lookbehind in this way.</p>
<p>Another approach would be to manually break apart the input string at match locations, perhaps with <code>re.finditer</code>, then paste it back together with the <code>0</code> character at the places I want.  But I'm hoping to avoid that.</p>
<p>While writing this question I have found the answer, which I will post below.</p>
","0","Question"
"79391085","","<p>I want to be able to create an option menu where the user can select between running two functions, which I have been able to do but want to add in a timeout and default option to run if there is no response. I asked ChatGPT for some code on how to add this in and it works but when there is no response it runs the default option but then asks for input again.</p>
<p>How can I get it to not ask for another input if it times out and runs the default option?</p>
<p><strong>My Code</strong></p>
<pre><code>def function_1():
    print('Function 1 is running!')

def function_2():
    print('Function 2 is running!')

# Map user choices to functions
function_map = {'1': function_1,
                '2': function_2}

def main():
    while True:
        print('Choose an option:\n 1: Run Function 1 \n 2: Run Function 2 \n q: Quit')
        user_choice = input('Enter your choice: ').strip().lower()

        if user_choice == 'q':
            print('Exiting program.')
            break
        elif user_choice in function_map:
            # Call the selected function
            function_map[user_choice]()
            break
        else:
            print('Invalid choice. Please try again.')

if __name__ == '__main__':
    main()
</code></pre>
<p><strong>ChatGPT</strong></p>
<pre><code>import threading

def function_1():
    print(&quot;Function 1 is running!&quot;)

def function_2():
    print(&quot;Function 2 is running!&quot;)

# Map user choices to functions
function_map = {
    &quot;1&quot;: function_1,
    &quot;2&quot;: function_2
}

# Timeout handler
def input_with_timeout(prompt, timeout, default):
    user_input = [None]

    def get_input():
        user_input[0] = input(prompt).strip().lower()

    thread = threading.Thread(target=get_input)
    thread.start()
    thread.join(timeout)
    if thread.is_alive():
        print(f&quot;\nNo input detected within {timeout} seconds. Defaulting to option {default}.&quot;)
        return default

    return user_input[0]

def main():
    while True:
        print(&quot;Choose an option:&quot;)
        print(&quot;1: Run Function 1&quot;)
        print(&quot;2: Run Function 2&quot;)
        print(&quot;q: Quit&quot;)
        
        # Prompt user with a 5-second timeout
        user_choice = input_with_timeout(&quot;Enter your choice: &quot;, timeout=5, default=&quot;1&quot;)
        
        if user_choice == &quot;q&quot;:
            print(&quot;Exiting program.&quot;)
            break
        elif user_choice in function_map:
            # Call the selected function
            function_map[user_choice]()
            break  # Exit after a valid choice
        else:
            print(&quot;Invalid choice. Please try again.&quot;)

if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
","0","Question"
"79391953","","<p>I'm new to C#. I'm trying to make game in Unity. These functions are necessary for changing in-game tabs with help of a button.</p>
<pre><code>public string check;
public CanvasGroup hydrogenScreen;
public CanvasGroup heliumScreen;
private void EfficientTabChange(CanvasGroup group)
{
    string[] groupName = new string[2] { &quot;hydrogenScreen&quot; , &quot;heliumScreen&quot;};
    check = group.ToString();
    
    foreach (string nos in groupName)
    {
        
        if (check.Equals(nos))
        {
            ActivateTabs(group);
        }
        else
        {
            DeactivateTabs(group);
        }

    }
}
public void SwitchTabs(int id)
{
    switch (id)
    {
        case 0:
            EfficientTabChange(hydrogenScreen);
            break;
        case 1:
            EfficientTabChange(heliumScreen);
    }
}
private void ActivateTabs(CanvasGroup group)
{
    group.alpha = 1;
    group.interactable = true;
    group.blocksRaycasts = true;
}

private void DeactivateTabs(CanvasGroup group)
{
    group.alpha = 0;
    group.interactable = false;
    group.blocksRaycasts = false;
}
</code></pre>
<p>I don't know what is the problem in here. I'm just checking if the CanvasGroup is one of the names in array to find the right tab to change.</p>
","1","Question"
"79395181","","<p>I have a data set with different groups and many columns with different variables. For each column I want to calculate the range of values in one group, then count how many rows have a value that is above or below that range in the other groups. I have written an R scipt that does this for a single column, but as the dataframe has multiple columns I want to either create a function or loop that would allow me to apply this code to multiple column in the datafame without having to copy and paste the code.</p>
<p>a simplified example data frame.</p>
<pre><code>sample &lt;- c(1, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15)
change &lt;- c('normal1', 'normal2', 'normal3', 'normal4', 'high', 'high', 'high',                  'low', 'low', 'medium', 'medium', 'medium')
x &lt;- c(10, 15, 12, 13, 7, 25, 15, 5, 11, 21, 28, NA)
y &lt;- c(0.6, 0.5, 0.3, 0.8, 0.2, 0.9, 0.5, 0.5, 0.3, 0.8, 1.0, 0.1)
z &lt;- c(100, 200, 150, 110, 90, 500, 50, 40, 150, 100, 75, NA)
data &lt;- data.frame(sample, change, x, y, z)
</code></pre>
<p>find the min and max values in the &quot;normal&quot; group</p>
<pre><code>normal &lt;- c('normal1', 'normal2', 'normal3', 'normal4')

minmax_normal &lt;- data %&gt;% 
  filter(change %in% normal) %&gt;%
  group_by(change %in% normal) %&gt;% 
  summarise(across(where(is.numeric), list(min=min, max=max), na.rm = TRUE))
</code></pre>
<p>count the number of samples in other groups (low, medium, high) where x is higher or lower than the range found in the &quot;normal&quot; groups. Store in dataframe outliers_count</p>
<pre><code>outliers_count &lt;- data %&gt;% 
  filter(!is.na(x)) %&gt;%
  group_by(change) %&gt;%
  mutate(lower_bound= minmax_normal$x_min,
         upper_bound= minmax_normal$x_max)%&gt;%
  mutate(is_pos_outlier=if_else(x&gt;upper_bound,TRUE,FALSE))%&gt;%
  mutate(is_neg_outlier=if_else(x&lt;lower_bound,TRUE,FALSE))%&gt;%   
summarise(x_pos_outliers=sum(is_pos_outlier),x_neg_outliers=sum(is_neg_outlier))
</code></pre>
<p>I need to perform the same calculation on all columns (x, y, z) either by converting this to a function to make it easier to apply to other columns, or a way to perform on all columns at the same time or write as a loop instead.</p>
<p>I've tried creating the below function</p>
<pre><code>count_outliers &lt;- function(data, column, min, max) {
  data %&gt;% 
    filter(!is.na(column)) %&gt;%
    group_by(change) %&gt;%
    mutate(lower_bound= min,
     upper_bound= max)%&gt;%
    mutate(is_pos_outlier=if_else(column&gt;upper_bound,TRUE,FALSE))%&gt;%
    mutate(is_neg_outlier=if_else(column&lt;lower_bound,TRUE,FALSE))%&gt;%
    summarise(x_pos_outliers=sum(is_pos_outlier), x_neg_outliers=sum(is_neg_outlier))
}
</code></pre>
<p>call function to calculate outliers above and below range in x</p>
<pre><code> x_outliers &lt;- count_outliers(data, x, minmax_normal$x_min,minmax_normal$x_max)
</code></pre>
<p>which returns the error</p>
<pre><code>Error in `mutate()`:
ℹ In argument: `is_pos_outlier = if_else(data$x &gt; upper_bound,     TRUE, FALSE)`.
ℹ In group 1: `change = &quot;high&quot;`.
Caused by error:
! `is_pos_outlier` must be size 3 or 1, not 12.
</code></pre>
<p>Part of the issue seems to be that I'm trying to pull values from two different dataframes in one function I think, I also tried joining data with minmax_normal so everything was in one data.frame but I coulndt get that to work either. Trying to get better at not copy pasting code and I thought this would be straight forward but I've tried a few different approaches and no luck yet. Any help appreciated.</p>
","1","Question"
"79395577","","<p>My goal is to take a dataframe that contains individual level data of many variables and apply a user defined function to return those variables' survey-adjusted weighted means and create new columns called, <code>wt_mean_VAR</code>, where each entry is the <code>svymean</code> for that <code>VAR</code>.</p>
<p>In my attempt to do so, I have defined a function, <code>calc_wt_mean_var_fn_df_ex</code>,  that takes a dataframe (<code>data</code>) and variable name (<code>VAR</code>) as parameters. The function is then supposed to create the svydesign object (<code>svydes</code>) from <code>data</code>, and then calculate the <code>svymean</code> of <code>VAR</code>. The function should return the <code>svymean</code> of this <code>VAR</code>.</p>
<p>I am then try to combine this user-defined function with a vector of variable names, i.e., <code>dplyr::mutate:across:any_of(regularVar_names_ex)</code>, to create columns called <code>wt_mean_VAR</code>, where every entry for each particular column is the <code>svymean</code> calculated in my user defined-function for that <code>VAR</code>.</p>
<p>Example data:</p>
<pre><code>input.ds.2018 = tibble(
  Var1 = c(1, 1, NA, NA, 1, 0),
  Var2 = rep(c(1, 0), 3),
  V3 = c(NA, rep(2, 4), 1),
  y_4 = c(NA, &quot;y&quot;, &quot;z&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;),
  X_AGE80 = c(17, 18, NA, 84, 21, 72),
  WT = c(2,3,8,4,0.1,5),
  X_PSU = c(1,2,3,4,5,6),
  X_STSTR = c(1,2,1,2,1,2)
)

regularVar_names_ex = c(&quot;Var1&quot;,&quot;Var2&quot;) 

calc_wt_mean_var_fn_df_ex = function(data,VAR){
  #only proceed if there are at least 2 unique answers to the variable of interest, VAR
  if(data %&gt;% filter(!is.na(eval(parse(text = VAR)))) %&gt;% group_by(eval(parse(text = VAR))) %&gt;% count %&gt;%  nrow &gt; 1){
    #create survey design object using dataframe, data
    svydes = svydesign(id =~X_PSU,strata =~ X_STSTR, weights =~WT, data =data %&gt;% filter(!is.na(WT) &amp; !is.na(X_PSU)),nest = TRUE )
    #calculate survey-adjusted mean and SE and return results as tibble
    res = svymean((~eval(parse(text = VAR))), svydes, na.rm = TRUE) %&gt;%  as_tibble()
    #extract the answer, the survey-adjusted mean weight stored in res, as ans
    ans = res %&gt;% select(mean) %&gt;% pull 
  } else{
    ans = NA
  }
  return(ans)
}
</code></pre>
<p>The survey-adjusted weighted mean of Var1 in input.ds.2018 = 0.505 and weighted mean of Var2 = 0.457.</p>
<p>When I do:</p>
<pre><code>output.ds.2018 = input.ds.2018 %&gt;%
  mutate(across(all_of(regularVar_names_ex), 
                \(x) calc_wt_mean_var_fn_df_ex(pick(x,X_PSU,X_STSTR,WT), VAR = x), 
                .names = &quot;wt_mean_{.col}&quot;))
</code></pre>
<p>I would like to get the following:</p>
<pre><code>output.desired = tibble(
  Var1 = c(1, 1, NA, NA, 1, 0),
  Var2 = rep(c(1, 0), 3),
  V3 = c(NA, rep(2, 4), 1),
  y_4 = c(NA, &quot;y&quot;, &quot;z&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;),
  X_AGE80 = c(17, 18, NA, 84, 21, 72),
  WT = c(2,3,8,4,0.1,5),
  X_PSU = c(1,2,3,4,5,6),
  X_STSTR = c(1,2,1,2,1,2),
  wt_mean_Var1 = c(0.505,0.505,0.505,0.505,0.505,0.505),
  wt_mean_Var2 = c(0.457,0.457,0.457,0.457,0.457,0.457)
)
&gt; output.desired
# A tibble: 6 x 10
   Var1  Var2    V3 y_4   X_AGE80    WT X_PSU X_STSTR wt_mean_Var1 wt_mean_Var2
  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;
1     1     1    NA NA         17   2       1       1        0.505        0.457
2     1     0     2 y          18   3       2       2        0.505        0.457
3    NA     1     2 z          NA   8       3       1        0.505        0.457
4    NA     0     2 l          84   4       4       2        0.505        0.457
5     1     1     2 m          21   0.1     5       1        0.505        0.457
6     0     0     1 n          72   5       6       2        0.505        0.457
</code></pre>
<p>but instead I get NAs for the weighted means.  What am I doing wrong?</p>
<pre><code>&gt; output.ds.2018
# A tibble: 6 x 10
   Var1  Var2    V3 y_4   X_AGE80    WT X_PSU X_STSTR wt_mean_Var1 wt_mean_Var2
  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;lgl&gt;        &lt;lgl&gt;       
1     1     1    NA NA         17   2       1       1 NA           NA          
2     1     0     2 y          18   3       2       2 NA           NA          
3    NA     1     2 z          NA   8       3       1 NA           NA          
4    NA     0     2 l          84   4       4       2 NA           NA          
5     1     1     2 m          21   0.1     5       1 NA           NA          
6     0     0     1 n          72   5       6       2 NA           NA
</code></pre>
","1","Question"
"79397778","","<p>I have written this example to try and explain the problem.</p>
<p>I have defined a function as follows:</p>
<pre><code>// Return name from given user.
typedef char *(name)(void *user);
</code></pre>
<p>And then implemented this function as follows:</p>
<pre><code>// Return name for a System 1 User.
char * system1_user_name(System1User *user)
{
    return user-&gt;name;
}
</code></pre>
<p>And then I have a function which takes an argument of type void which it then passes to the second argument of type name (the function).</p>
<pre><code>void say_hello(void *user, name *name)
{
    printf(&quot;Hello %s\n&quot;, (name)(user));
}
</code></pre>
<p>I then call the <code>say_hello</code> function as follows:</p>
<pre><code>say_hello(&amp;system1user, system1_user_name);
</code></pre>
<p>The solution compiles and run as expected, however during compilation it gives the warning &quot;assignment of different pointers&quot; specifically because the <code>name</code> function expects a void argument but the argument of the implemented function <code>system1_user_name</code> takes an argument of type <code>System1User</code>.</p>
<p>Now I know I can resolve the warning by doing this:</p>
<pre><code>char * system1_user_name(void *user)
{
    System1User *u = (System1User)user;
    return u-&gt;name;
}
</code></pre>
<p>However I was wondering if there is any way how I could keep the function signature as is because <code>system1_user_name</code> expects an argument of type System1User and assuming this function is used for example in other areas of the solution (not just as a callback for the <code>say_hello</code> function) it would either potentially be misleading (as it expects an argument of type void *) or else require to stay writing a second function just to be used as an argument to the <code>say_hello</code> function.</p>
<p>Given that passing anything to a void * argument works I was expecting that having a callback function with arguments set to void * would also work. However, while the compiled solution does work as expected, the compiler still gives warnings. For me the function definition saying it accepts anything (therefore void *) makes sense, but implementing that function using void * feels wrong and misleading as the implementation is working on an actual type. I wonder if there is a clean solution to the problem.</p>
","3","Question"
"79401196","","<p>I have program that looks like below. I want to initialize a dictionary that stores functions. However, the compiler does not allow me to do it, as is shown below. I get the error:</p>
<blockquote>
<p>CS1950    The best overloaded Add method 'Dictionary&lt;Func, string&gt;.Add(Func, string)' for the collection initializer has some invalid arguments   FuncDictonaryTest</p>
</blockquote>
<p>But it works fine if I try to do in in the constructor. Why?</p>
<pre><code>namespace FuncDictonaryTest
{
    internal class Program
    {
        private Dictionary&lt;Func&lt;bool&gt;,
                           string&gt; FunctionDictonary = new()
                           {
                                { TestA, &quot;Hello&quot; },
                                { TestB, &quot;Byebye&quot; }, // Not working
                            };        
        
        private Dictionary&lt;Func&lt;bool&gt;,
                           string&gt; FunctionDictonaryTwo;

        Program()
        {
            FunctionDictonaryTwo = new() // Working
            {   
                { TestA, &quot;Hello&quot; },
                { TestB, &quot;Byebye&quot; }
            };
        }

        static void Main(string[] args)
        {
            Console.WriteLine(&quot;Hello World!&quot;);
        }

        private bool TestA()
        {
            return true;
        }        
        
        private bool TestB()
        {
            return false;
        }
    }
}
</code></pre>
","1","Question"
"79402412","","<p>I need to create a PostgreSQL function that will execute a query depending on the input value.</p>
<p>Like this on</p>
<pre><code>FUNCTION public.get_data( in_param smallint)
...

BEGIN

WITH cte1 as ( 
  select * from tbl1),

  IF in_param=1 THEN
  cte2 as (
  select * from tbl2
  where tbk2.col1 &gt; 5 
  )
  ELSE 
  cte2 as (
  select * from tbl2
  where tbl2.col3 &lt; 0 
  )
  END IF


  select * from cte1, cte2
  ...

END  
</code></pre>
<p>How I can do it?</p>
","0","Question"
"79404016","","<p>I am trying to manipulate two dataframes called <code>df1</code> and <code>df2</code>, which have the following structures:</p>
<pre><code>df1 &lt;- data.frame(center_x = c(1, 2, 3),
                  center_y = c(4, 5, 6),
                  label = c(1, 2, 3))

df2 &lt;- data.frame(x = c(1, 2),
                  y = c(1, 1),
                  name = c(&quot;A&quot;, &quot;B&quot;))

</code></pre>
<p>I also have this formula <code>euc.dist</code></p>
<pre><code>euc.dist &lt;- function(v1, v2){
  
  x.val &lt;- ( v1[1] - v2[1] )^2
  y.val &lt;- ( v1[2] - v2[2] )^2
  
  d.val &lt;- sqrt( x.val + y.val )
  
  ## Add d.val to v1 input as column d.val
  out.df &lt;- cbind(v1, as.numeric(d.val))
  
  ## Rename the last column of out.df as d.val
  names(out.df)[length(out.df)] &lt;- &quot;d.val&quot;
  
  ## Return out.df
  return(out.df)
  
}
</code></pre>
<p>I want to have an output that looks like this across all the values in <code>df1</code>, stored as <code>df3</code></p>
<p>R Code</p>
<pre><code>x &lt;- euc.dist(v1 = df1[1, ], v2 = df2[1, ])
y &lt;- euc.dist(v1 = df1[1, ], v2 = df2[2, ])

df3 &lt;- rbind(x , y)
</code></pre>
<p>df3</p>
<pre><code>  center_x center_y label    d.val
1        1        4     1 3.000000
2        1        4     1 3.162278

</code></pre>
<p>I tried using apply, but it does not look like this:</p>
<pre><code>&gt; apply(df1, 1,
+       function (x) euc.dist(v1 = x,
+                             df2[1, ])) |&gt;
+     t()
</code></pre>
<p>How can I change this apply() function?</p>
","1","Question"
"79405451","","<p>I want to implement the following for more than one (i.e. many) functions (function1(), function2(), ...etc.).</p>
<p>Currently I have it separately as follows:</p>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;typename T&gt;
concept iterator_1 = requires(T const&amp; t) {
  t.function1();
};
</code></pre>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;iterator_1 R&gt;
static float getterFunction(R const&amp; r)
{
  return r.function1();
}
</code></pre>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;typename T&gt;
concept iterator_2 = requires(T const&amp; t) {
  t.function2();
};
</code></pre>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;iterator_2 R&gt;
static float getterFunction(R const&amp; r)
{
  return r.function2();
}
</code></pre>
<p>I want to use a general getterFunction to choose function1(), function2(), ...etc. with an if condition, such as follows:</p>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;typename A&gt;
float getterFunction(A const&amp; a)
{
  auto i = -1;
  if (something==0) {
    i = a.function1();
  } 
  else if (something==1) {
    i = a.function2();
  }
  else if {
    ...
  }
  return i;
}
</code></pre>
<p>I would like to use this general getterFunction as follows:</p>
<pre class=""lang-cpp prettyprint-override""><code>template &lt;typename B&gt; 
void DoSomething(typename B::iterator const&amp; b)
{
  float value = getterFunction(b);
  ...
}
</code></pre>
<p>I was wondering if there is a more general way of doing this, instead of writing many concepts for each of the many functions?</p>
","1","Question"
"79405560","","<p>Going through the Javascript for Web Warriors book, Chapter 3 Project 5. It's an assignment to debug the code so that it displays cell phone sales in a barchart. The error: &quot;Uncaught TypeError TypeError: <Code>.insertAdjacentHTML is not a function.</p>
<pre><code>// Array of phone models sold by the company
/* Changed parenthesis to braces to define an array - Debugged */
let phones = [&quot;Photon 6E&quot;, &quot;Photon 6X&quot;, &quot;Photon 7E&quot;, &quot;Photon 7X&quot;, &quot;Photon 8P&quot;];

// Units sold in the previous quarter
/* Changed parenthesis to braces to define an array - Debugged */
let sales = [10281, 12255, 25718, 21403, 16142];

// Variable to calculate total sales
let totalSales = 0;

// Use the forEach() method to sum the sales for each phone model and add it to the totalSales variable
/* addtoTotal needed to be capitalized to addToTotal - Debugged */
sales.forEach(addToTotal);

// For loop to generate bar chart of phone sales
/* Changed the i value from 1 to 0 - AA */
for (let i = 0; i &lt;= phones.length; i++) {
   
   let barChart = &quot;&quot;;   // Variable to store HTML code for table cells used to create bar chart
   
   // Calculate the percent of total sales for a particular phone model
   let barPercent = 100*sales/totalSales;
   
   
   let cellTag;   // Variable that will define the class of td elements used in creating the bar chart cells.
   
   // Determine the table cell based on the value of the phone model
   /* The switch case did not include a colon after each switch statement - Debugged */
   switch (phones[i]) {
      case &quot;Photon 6E&quot;:
        cellTag = &quot;&lt;td class='group1'&gt;&quot;;
        break;
      case &quot;Photon 6X&quot;:
        cellTag = &quot;&lt;td class='group2'&gt;&quot;;
        break;
      case &quot;Photon 7E&quot;:
        cellTag = &quot;&lt;td class='group3'&gt;&quot;;
        break;
      case &quot;Photon 7X&quot;:
        cellTag = &quot;&lt;td class='group4'&gt;&quot;;
          break;
      case &quot;Photon 8P&quot;:
        cellTag = &quot;&lt;td class='group5'&gt;&quot;;
        break;         
   }
   
   // Table cell containing information on phone and total sales (formatted using a thousands-separator)
   barChart += &quot;&lt;tr&gt;&lt;th&gt;&quot; + phones[i] + &quot; (&quot; + formatNumber(sales[i]) + &quot;)&lt;/th&gt;&quot;;
   
   // For loop to create a table cell, 1 for each percentage value in the barPercent variable
   for (let j = 0; j &lt;= barPercent; j++) {
      barChart += cellTag + &quot;&lt;/td&gt;&quot;;
   }
   barChart += &quot;&lt;/tr&gt;&quot;;

   // Insert the bChart HTML code into first tbody element in the web document
   /* beforeEnd was capitalized, changed to beforeend. - Debugged */
   document.getElementsByTagName(&quot;tbody&quot;).insertAdjacentHTML(&quot;afterbegin&quot;, barChart);
}


// Callback function that adds the value of each array element to the totalSales variable
function addToTotal(arrValue) {
   totalSales += arrValue;
}


// Function that takes a number value and returns it as a text string with a thousands separator
function formatNumber(value) {
   return value.toLocaleString();
}
</code></pre>
<p>I tried analyzing the HTML and CSS files to see if there was any kind of clue as to where I could potentially be messing up. I understand that I need to insert the code inbetween the <code>&lt;tbody&gt;&lt;/tbody&gt;</code> section of the HTML file.
So I tried rewriting the code as shown below to see if it would do anything different.</p>
<pre>   let TableCell = document.getElementsByTagName(&quot;tbody&quot;);
   TableCell.insertAdjacentHTML(&quot;beforeend&quot;, barChart)
</code></pre>
<p>I still get the exact same error: &quot;insertAdjacentHTML is not a function&quot;.</p>
<p>Why this is so frustrating and confusing for me is that in a previous assignment, we used EXACTLY what I just tried rewriting the code to and it worked perfectly fine. I'm at an absolute dead end as to what to even try now, and the professor takes weeks to respond where I'm stuck between a rock and a hard place.</p>
","0","Question"
"79406093","","<p>I have a very simple iOS SwiftUI app that has API calls to 7 endpoints.  I've written a function to do the API call and decode the data response.  In order to reuse the function I will need to replace the endpoint URL string and the class that the data gets decoded to.  Passing the endpoint URL string is simple enough, but I don't know how to pass different data classes for each endpoint to the API function.</p>
<p>I have searched high and low for an example, but have found none for my use case.  I considered using an enum, but I'm not sure how to implement that either.</p>
<p>Below is the code for my API call function, with the code to pass the URL string, and the data class.</p>
<pre class=""lang-swift prettyprint-override""><code>func apiLoader(urlString: String) {
    
    // Create API URL
    //let url = URL(string: &quot;https://api-hockey.p.rapidapi.com/timezone&quot;)
    let url = URL(string: urlString)
    guard let requestUrl = url else { fatalError() }
    
    // Create URL Request
    var request = URLRequest(url: requestUrl)
    
    // Specify Headers to use
    let headers = [
        &quot;x-rapidapi-key&quot;: &quot;REDACTED&quot;,
        &quot;x-rapidapi-host&quot;: &quot;REDACTED.p.rapidapi.com&quot;
    ]
    
    // Specify HTTP Method to use
    request.httpMethod = &quot;GET&quot;
    request.allHTTPHeaderFields = headers
    
    // Send HTTP Request
    let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
        
        // Check if Error took place
        if let error = error {
            print(&quot;Error took place \(error)&quot;)
            return
        }
        
        // Convert HTTP Response Data to a simple String
        if let data = data.self {
            do {
                
                let dateFormatter = DateFormatter()
                dateFormatter.dateFormat = &quot;yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'&quot;
                
                let decoder = JSONDecoder()
                decoder.keyDecodingStrategy = .convertFromSnakeCase
                decoder.dateDecodingStrategy = .formatted(dateFormatter)
                
                let hockeyTimeZones = try decoder.decode(HockeyTimeZones.self, from: data)
                hockeyTimeZones.response!.forEach { timezone in print(timezone) }

                //return hockeyTimeZones

                
            } catch {
                print(&quot;Failed to load: \(error)&quot;)
                //return Void()
            }
            
        }
    }
    
    task.resume()

    //return HockeyTimeZones()
</code></pre>
<pre class=""lang-swift prettyprint-override""><code>@Observable class HockeyTimeZones: ObservableObject, Codable {

  var get        : String?   = nil
  var parameters : [String]? = []
  var errors     : [String]? = []
  var results    : Int?      = nil
  var response   : [String]? = []

  enum CodingKeys: String, CodingKey {

    case _get        = &quot;get&quot;
    case _parameters = &quot;parameters&quot;
    case _errors     = &quot;errors&quot;
    case _results    = &quot;results&quot;
    case _response   = &quot;response&quot;
  
  }

    required init(from decoder: Decoder) throws {
    let values = try decoder.container(keyedBy: CodingKeys.self)

    get        = try values.decodeIfPresent(String.self   , forKey: ._get        )
    parameters = try values.decodeIfPresent([String].self , forKey: ._parameters )
    errors     = try values.decodeIfPresent([String].self , forKey: ._errors     )
    results    = try values.decodeIfPresent(Int.self      , forKey: ._results    )
    response   = try values.decodeIfPresent([String].self , forKey: ._response   )
 
  }

  init() {

  }
}
</code></pre>
","0","Question"
"79408554","","<p>I have a df with multiple columns that look like this:</p>
<p><code>mydata &lt;- data.frame(&quot;Code_1&quot; = c(&quot;x000&quot;, &quot;x001&quot;, &quot;x002&quot;, &quot;y003&quot;), &quot;Code_2&quot; = c(&quot;y000&quot;, &quot;y001&quot;, &quot;y002&quot;, &quot;y003&quot;), &quot;Code_3&quot; = c(&quot;z000&quot;, &quot;z001&quot;, &quot;z002&quot;, &quot;z003&quot;))</code></p>
<p>I need to check the number of characters in each column (I have 24 in total) and would like to do this efficiently. Ideally I'd like the output in tablular form.</p>
<p>I have tried the following:</p>
<p><code>fun_nchar &lt;- function(mydata, x) { mydata[[nchar(x, type = &quot;chars&quot;, allowNA=TRUE, keepNA=NA]] &lt;= table(x) }</code></p>
<p>When I try to run this with the first column I keep getting an error message saying: 'object 'Code_1' not found.</p>
<p>Ideally, I would like a table to check that all 24 columns contain either 3 or 4 characters (this is part of data cleaning).</p>
","0","Question"
"79408993","","<p>I was trying to implement the <code>Function.call</code> without using call in any form. The idea was to create an object whose <code>this</code> is the value passed as <code>thisArg</code> to the call method. Initially <code>Object.create(thisArg)</code> came to mind, however that doesn't really work since it only sets the prototype of the object to <code>thisArg</code>.
The answer basically boils down to using <code>Object()</code> constructor, and then setting the function with arguments as a 'method' on some key for that object.</p>
<p>Something along this lines:</p>
<pre><code> thisArg = thisArg || window;
 thisArg = Object(thisArg); 

 const methodSymbol = Symbol();
 thisArg[methodSymbol] = this; // this is the function on which call is executed.
</code></pre>
<p>My query is that I am a bit confused on the working of the Object constructor - it seems it sets the <code>this</code> of the object method to the value passed in the constructor, but there is some other malarkey in the spec/MDN docs that basically confuses me.
Is there a better explanation on why this works? any other way to implement the same? maybe this is some hacky JS workings that I am not aware of.</p>
","1","Question"
"79411357","","<p>I have a dataset, <code>input_ds_wt</code> that contains values for <code>RSE_VAR</code> and <code>wt.mean_VAR</code> for many variables, VAR.</p>
<pre><code>input_ds_wt = structure(list(id = c(1, 2, 3, 4, 5, 6), wt.mean_v1 = c(1, 1, 
1.3, 2.3, 1, 0), wt.mean_v2 = c(0.8, 0.2, 0.8, 0.2, 0.8, 0.2), 
    wt.SE_v1 = c(0.1, 0.01, 0.2, 0.02, 0.3, 0.03), wt.SE_v2 = c(0.03, 
    0.3, 0.01, 0.1, 0.4, 0.04), RSE_v1 = c(0.1, 0.01, 0.153846153846154, 
    0.00869565217391304, 0.3, Inf), RSE_v2 = c(0.0375, 1.5, 0.0125, 
    0.5, 0.5, 0.2)), class = &quot;data.frame&quot;, row.names = c(NA, 
-6L))
gives

 input_ds_wt
  id wt.mean_v1 wt.mean_v2 wt.SE_v1 wt.SE_v2      RSE_v1 RSE_v2
1  1        1.0        0.8     0.10     0.03 0.100000000 0.0375
2  2        1.0        0.2     0.01     0.30 0.010000000 1.5000
3  3        1.3        0.8     0.20     0.01 0.153846154 0.0125
4  4        2.3        0.2     0.02     0.10 0.008695652 0.5000
5  5        1.0        0.8     0.30     0.40 0.300000000 0.5000
6  6        0.0        0.2     0.03     0.04         Inf 0.2000
</code></pre>
<p>For every VAR I want the user-defined function <code>suppress_fn()</code> to return a 0 if <code>RSE_VAR &lt; 0.3</code> and <code>wt.mean_VAR &gt; 0.9</code>, and 1 else.  Therefore I want it to return:</p>
<pre><code>output_supress
  id wt.mean_v1 wt.mean_v2 wt.SE_v1 wt.SE_v2      RSE_v1 RSE_v2 suppress_v1 suppress_v2
1  1        1.0        0.8     0.10     0.03 0.100000000 0.0375           0           1
2  2        1.0        0.2     0.01     0.30 0.010000000 1.5000           0           1
3  3        1.3        0.8     0.20     0.01 0.153846154 0.0125           0           1
4  4        2.3        0.2     0.02     0.10 0.008695652 0.5000           0           1
5  5        1.0        0.8     0.30     0.40 0.300000000 0.5000           1           1
6  6        0.0        0.2     0.03     0.04         Inf 0.2000           1           1`
</code></pre>
<p>which I have created using the following statement, but I want to do it for all variables in VAR without specifying same suppress_VAR function the same number of times as the dimension of VAR.  Can anyone show me how to do it using dplyr:: <code>pivot_longer</code> followed by <code>pivot_wider</code>? Other methods welcome too.</p>
<pre><code>output_supress  = input_ds_wt %&gt;%
  mutate(suppress_v1 = if_else(RSE_v1 &lt; 0.3 &amp; wt.mean_v1 &gt; 0.9,0, 1 ),
         suppress_v2 = if_else(RSE_v2 &lt; 0.3 &amp; wt.mean_v2 &gt; 0.9,0, 1 ) )
 output_supress
  id wt.mean_v1 wt.mean_v2 wt.SE_v1 wt.SE_v2      RSE_v1 RSE_v2 suppress_v1 suppress_v2
1  1        1.0        0.8     0.10     0.03 0.100000000 0.0375           0           1
2  2        1.0        0.2     0.01     0.30 0.010000000 1.5000           0           1
3  3        1.3        0.8     0.20     0.01 0.153846154 0.0125           0           1
4  4        2.3        0.2     0.02     0.10 0.008695652 0.5000           0           1
5  5        1.0        0.8     0.30     0.40 0.300000000 0.5000           1           1
6  6        0.0        0.2     0.03     0.04         Inf 0.2000           1           1
</code></pre>
","1","Question"
"79416777","","<p>I am looking to create a function where I can input four numbers, order them to find the two smallest, and then perform calculations on the two smallest in a single line if possible (I don't want to do a bunch of if-else statements) and I feel like there should be a faster way even without a lambda function.</p>
<p>Ex of what I would like it to work like:</p>
<pre><code>def square(a, b, c, d): 
    return [x*2 for x in min(a, b, c, d)]
</code></pre>
<p>I tried a couple attempts to use sort() on a list, or use pop to get rid of the max numbers, but I can't figure out how to do this in a single line.</p>
","1","Question"
"79421902","","<p>I'm trying to make a function that counts the number of lines in a txt file. I have made the file readable earlier in the program.
Here is what I've done:</p>
<p>Allow the program to open the file:</p>
<pre class=""lang-py prettyprint-override""><code>datahandle = open(&quot;dataset.txt&quot;)
</code></pre>
<p>&quot;dataset.txt&quot; is a notepad document with 10 rows of numbers:</p>
<pre class=""lang-none prettyprint-override""><code>18
3
10
42
50
13
100
40
77
67
</code></pre>
<p>Here is the function I defined:</p>
<pre class=""lang-py prettyprint-override""><code>def findn():
        global count
        count = 0
        for countingdata in datahandle:
            countingdata = countingdata.rstrip()
            count = count + 1
</code></pre>
<p>I then call this function later with:</p>
<pre class=""lang-py prettyprint-override""><code>findn()
print(count)
</code></pre>
<p>When I do this the first time, it returns the correct answer (10 lines). However, if I run this again it returns 0. If I keep running it afterwards it keeps returning 0.</p>
<p>I've tried making a variable that changes from true to false depending on if I've run the function before, and if I have I then just have it print &quot;count&quot; as it was.</p>
<p>I've also tried moving the place where I define count as 0 at the start outside of the function but this just doesn't work.</p>
<p>Obviously, the program should always return the number of lines in the file (10).</p>
","-1","Question"
"79422336","","<p>I am working on an Azure Function that uses a ServiceBusTrigger and queries Azure Table Storage. In order to process multiple messages as quickly as possible we're using the MaxConcurrentCalls setting to enable parallel message processing (e.g. we set MaxConcurrentCalls to 200).
We're using Managed Identity to access the Service bus and the Azure Table Storage via DefaultAzureCredential.</p>
<p>Performance testing shows that multiple instances of the Function app are instantiated and are processing messages as expected, however each instance makes a call to the Azure /msi/token endpoint to obtain a ManagedIdentityCredential, and this call is the bottleneck, taking anywhere from 200ms to 5000ms. I.e using the above setting, if 200 messages get dropped onto the service bus then 200 &quot;instances&quot; of the azure function will start processing them, and make 200 calls to get a ManagedIdentityCredential.</p>
<ol>
<li>What is the mechanism behind how Azure functions are processing messages concurrently, will it create multiple processes or multiple threads within the same process?</li>
<li>is there a way to share/cache the credential once it's obtained to be used by the other message processing instances as well and eliminate the redundant calls to /msi/token ?</li>
</ol>
<p>We're using Python as programming language.</p>
<p>this is the code to initialize the Azure resources</p>
<pre><code># helper function to initialize global table service client
def init_azure_resource_clients(config_settings: EligibilitySettings):
    &quot;&quot;&quot;get table service client for Azure Table Storage and service bus client&quot;&quot;&quot;

    non_aio_credential = DefaultAzureCredential()

    # initialize global Service Bus client
    global _azure_servicebus_client
    _azure_servicebus_client = ServiceBusClient(fully_qualified_namespace=config_settings.serviceBusNamespaceFQ, credential=non_aio_credential)

    # initialize global Table Service Client
    global _azure_table_service_client
    # prefer connection string if available
    if config_settings.tableStorageConnectionString:
        _azure_table_service_client = TableServiceClient.from_connection_string(conn_str=config_settings.tableStorageConnectionString)
    else:
        _azure_table_service_client = TableServiceClient(endpoint=f&quot;https://{config_settings.tableStorageAccount}.table.core.windows.net&quot;, credential=non_aio_credential)
</code></pre>
<p>And here is some sample code on how is it called:</p>
<pre><code>import logging
import azure.functions as func

# global reference to the azure resources we need to access
_azure_table_service_client = None
_azure_servicebus_client = None

app = func.FunctionApp()

@app.function_name(name=&quot;ServiceBusQueueTrigger1&quot;)
@app.service_bus_queue_trigger(arg_name=&quot;msg&quot;, 
                           queue_name=&quot;&lt;QUEUE_NAME&gt;&quot;, 
                           connection=&quot;&lt;CONNECTION_SETTING&gt;&quot;)
def test_function(msg: func.ServiceBusMessage):
    
    logging.info('ServiceBus queue trigger processed message: %s',
             msg.get_body().decode('utf-8'))
            
    # initialize global azure resources
    init_azure_resource_clients(config_settings)

    # parse incoming message
    message_body = msg.get_body().decode('utf-8')
    message_json = json.loads(message_body)

    result = process_message(message_json) 
</code></pre>
","1","Question"
"79423916","","<p>I'm in google sheets. I wrote a formula that outputs data into two columns. I am hoping to essentially insert a blank column between as ultimately the first column will get merged with the 2nd column. I have tried using an output variable and then nesting and two index functions referring each to filterstatus between {} but with no luck. Any ideas? I'm trying to keep the formula as dynamic as possible.</p>
<pre class=""lang-cpp prettyprint-override""><code>    =LET(
      filtertype,
        IFERROR(SORT(IFNA(FILTER({Set[CardName], CHOOSE(MATCH(G52,{&quot;All&quot;,&quot;Base&quot;,&quot;Master&quot;},0),Set[AllOwn],Set[BaseOwn],Set[MasterOwn])},Set[Player]=F42),&quot;No Match&quot;))),
      filterstatus,
        ArrayFormula(IFNA(IF(G53=&quot;All&quot;, filtertype, FILTER(filtertype,INDEX(filtertype,0,2)= G53)), &quot;Blank&quot;)),
      filterstatus
    )
</code></pre>
","0","Question"
"79424061","","<p>I have a custom function that takes as input a data frame and then a selection of columns from that data frame, like this:</p>
<pre><code>library(dplyr)
df &lt;- data.frame(x = c(1, 2, 3, 4, 5), y = c(11, 12, 13, 14, 15))

sample_fun &lt;- function(df, x, y) {
  df &lt;- df %&gt;% 
    mutate(z = {{x}} * {{y}})
  }

df_out &lt;- sample_fun(df, x, y)
</code></pre>
<p>I'd like to make one of the data frame columns optional, and then have the function test for its presence using <code>!if.null()</code>. If this was an object, rather than a data frame column, I would do this:</p>
<pre><code>sample_fun &lt;- function(df, x, y = NULL) {
  if(!is.null(y)) {
    df &lt;- df %&gt;% 
      mutate(z = {{x}} * y)
  }
  else(df &lt;- df %&gt;%
         mutate(z = {{x}}))
}

df_out &lt;- sample_fun(df, x) 
df_out2 &lt;- sample_fun(df, x, y)
</code></pre>
<p>However, I can't figure out how to check for the presence of the data column. Both <code> if(!is.null(y))</code> and <code>if(!is.null({{y}}))</code> return <code>Error: object 'y' not found</code>. What is the best way to check for the presence of y, when y is a data frame column rather than an independent object?</p>
","4","Question"
"79425735","","<p>I have a custom function that calls ggplot. I'd like to make one of the ggplot arguments optional - for example, changing the color of geom_point. I know two ways to do this, as shown below; one is to specify a default if the optional argument is not provided, and the other is to wrap the whole ggplot function (here, <code>geom_point()</code>) in an if statement. Neither of these is ideal in my case - the argument I'm using has no easy default, and the ggplot function itself is already in an if/else if/else statement in my code, meaning that I'd end up with a lot of nested if statements. Is there any way to pass an argument saying essentially, &quot;ignore this argument, use your default behavior&quot;?</p>
<p>Here's a very basic example of the two ways that do work:</p>
<pre><code>library(ggplot2)
library(dplyr)

# Opt 1 - specify a default; not viable in my actual problem due to lack of default

fun_default &lt;- function(df, x, y, color=&quot;red&quot;){
  p &lt;- df %&gt;%
    ggplot(aes({{x}}, {{y}})) + 
    geom_point(color=color)
  
  p
}

# Opt 2 - use an if statement for the whole argument
# workable but cumbersome in my actual problem, since I'd have to repeat the if/else multiple times throughout the code

fun_if &lt;- function(df, x, y, color=NULL){
  p &lt;- df %&gt;%
    ggplot(aes({{x}}, {{y}})) +
    {if(is.null(color)) { geom_point() }
    else { geom_point(color = color)}}
  p
}

fun_default(mtcars, wt, mpg, color=&quot;blue&quot;)
fun_if(mtcars, wt, mpg, color=&quot;blue&quot;)
fun_if(mtcars, wt, mpg)
</code></pre>
<p>What I'd like to do is either nest an if statement <em>inside</em> the geom_point call, or set a color argument that would default to whatever ggplot's default is, without specifying the default on my own.  In my head this would look something like one of the following (obviously neither of these actually work):</p>
<pre><code># if statement inside of geom_point()
fun_wish1 &lt;- function(df, x, y, color=NULL){
  p &lt;- df %&gt;%
    ggplot(aes({{x}}, {{y}})) +
    geom_point( {if(!is.null(color)) {color=color}} )
  p
}

# somehow tell geom_point to ignore color or use its default for color
fun_wish2 &lt;- function(df, x, y, color=NULL){
  if(is.null(color)) {color = NA}
  p &lt;- df %&gt;%
    ggplot(aes({{x}}, {{y}})) +
    geom_point(color=color)
  p
}

</code></pre>
","1","Question"
"79427852","","<p>Sometimes I write functions that involve renaming/relabeling a lot of variables in different places, using a relabeller. The relabeller is used in multiple contexts, both directly in my code (e.g. for titles) and passed to other functions (e.g. facet_wrap). This is fine for typical uses:</p>
<pre><code>library(ggplot2)
library(dplyr)

plotfcn &lt;- function(df, x, y, facet, fancy_labs){
  # Strings of x &amp; y (for axis titles)
  xStr &lt;- fancy_labs(deparse(substitute(x)))
  yStr &lt;- fancy_labs(deparse(substitute(y)))
  
  #base plot
  p &lt;- ggplot(df, aes({{x}}, {{y}})) + 
    geom_point()
  
  #add facets (with labels) and axis labels
  p + facet_wrap(vars({{facet}}), labeller=fancy_labs) +
    labs(x=xStr, y=yStr)
}

mylabs &lt;- as_labeller(c(
  'compact' = 'Small Family Car',
  'midsize' = 'Medium Family Car',
  'minivan' = 'For the Kids',
  'pickup' = 'For the Stuff',
  'displ' = 'Engine Displacement (L)',
  'hwy' = 'Highway Mileage (mpg)'))

classlist &lt;- c('compact', 'midsize', 'minivan', 'pickup')

mpg_lim &lt;- mpg %&gt;% filter(class %in% classlist) 

mpg_lim %&gt;% plotfcn(displ, hwy, class, fancy_labs = mylabs)

</code></pre>
<p>Now I'd like to make the labeller argument optional. Wrapping anything involving labels in an if/else statement is easy:</p>
<pre><code>plotfcn &lt;- function(df, x, y, facet, fancy_labs=NULL){
  # Strings of x &amp; y (for axis titles)
  if(!is.null(fancy_labs)) {
    xStr &lt;- fancy_labs(deparse(substitute(x)))
    yStr &lt;- fancy_labs(deparse(substitute(y)))
  } 
  
  #base plot
  p &lt;- ggplot(df, aes({{x}}, {{y}})) + 
    geom_point() 
  
  #optional: add labels using labeller
  if(!is.null(fancy_labs)) { 
    p + 
      facet_wrap(vars({{facet}}), labeller=fancy_labs) +
      labs(x=xStr, y=yStr)
    } else { 
      p + facet_wrap(vars({{facet}}))  
    }
}

mpg_lim %&gt;% plotfcn(displ, hwy, class, fancy_labs = mylabs)

mpg_lim %&gt;% plotfcn(displ, hwy, class)

</code></pre>
<p>However, if possible I'd like to avoid putting the facet_wrap() argument into the if/else statement. (In my real code, it's already in an if/else sequence, so adding this additional if/else will add a lot of branches and repeated copy/pasting, which is cumbersome to work with. ) <a href=""https://stackoverflow.com/questions/79425735/pass-an-optional-argument-to-ggplot-inside-a-custom-function/79425770#79425770"">This answer</a> suggests using an ellipse construct to pass the labeller argument to facet_wrap, which works great - except that I can't figure out how to then call the same labeller function for the axis labels. Would I need to pass the same argument into my code twice under two different names, as shown below, or is there any way to call the labeller argument both through the ellipses construct and independently in my code?</p>
<pre><code>plotfcn &lt;- function(df, x, y, facet, fancy_labs=NULL, ...){
  # Strings of x &amp; y (for axis titles)
  if(!is.null(fancy_labs)) {
    xStr &lt;- fancy_labs(deparse(substitute(x)))
    yStr &lt;- fancy_labs(deparse(substitute(y)))
  } 
  
  #base plot - calls labeller using ...
  p &lt;- ggplot(df, aes({{x}}, {{y}})) + 
    geom_point() +
    facet_wrap(vars({{facet}}), ...)
  
  #optional: add labels using labeller
  if(!is.null(fancy_labs)) { 
    p + labs(x=xStr, y=yStr)
    } else { 
      p
    }
}

#this works, but involves calling the same parameter (mylabs) twice under two different names, which is annoying
mpg_lim %&gt;% plotfcn(displ, hwy, class, fancy_labs = mylabs, labeller=mylabs)
mpg_lim %&gt;% plotfcn(displ, hwy, class)

</code></pre>
<p>If I set the function up with one labeller argument <code>function(df, x, y, facet, labeller = NULL, ...)</code>, the ellipsis construct doesn't trigger, and my facets are unlabelled. But if I set it up with just the ellipses <code>function(df, x, y, facet, ...)</code>, I can't check for its presence using <code>is.null()</code> or <code>missing()</code> to trigger my if statements. Is there any way to get the if statements to recognize the presence/absence of the labeller argument?</p>
","4","Question"
"79430235","","<p>I want to create a <code>custom function</code> in Google Sheets and have it available in all my spreadsheets, including new ones I create in the future—just like the <code>built-in functions</code>.</p>
<p>Is there a way to achieve this natively in Google Sheets, or is the only option to manually add the function to each sheet?</p>
","-3","Question"
"79431960","","<p>I would like clicking div-1 and div-2 to do the same thing but please how can I combine the 2 eventlisteners functions into 1</p>
<pre><code>var div_1 = document.getElementById(&quot;div-1&quot;);
var div_2 = document.getElementById(&quot;div-2&quot;);

div_1.addEventListener('click', function() {
 // clicking div_1 and div_2 does the same thing
});

div_2.addEventListener('click', function() {
 // clicking div_1 and div_2 does the same thing
});
</code></pre>
<p>Any help would be much appreciated!</p>
","0","Question"
"79433157","","<p>I have a Logic App expression that evaluates the condition correctly, but outputs <em>True</em> instead of <em>true</em>.</p>
<p>A subsequent POST HTTP action fails as the JSON payload that contains this value cannot parse <em>True</em> and requires <em>true</em>.</p>
<p><strong>Key-value pair containing the expression:</strong></p>
<p><code>&quot;apiTicket&quot;: @{equals(body('Get_Ticket_Details')?['takenby'], 'Integration Agent')}</code></p>
<p><strong>Runtime output:</strong></p>
<p>&quot;apiTicket&quot;: True</p>
<p><strong>Error:</strong></p>
<pre><code>{
  &quot;error&quot;: {
    &quot;code&quot;: &quot;InvalidRequestContent&quot;,
    &quot;message&quot;: &quot;The request content is not valid and could not be deserialized: 'Unexpected character encountered while parsing value: T. Path 'params.apiTicket', line 15, position 17.'.&quot;
  }
}
</code></pre>
<p>Microsoft reference guide states the equals function should return <em>true</em> or <em>false</em>, not <em>True</em> or <em>False</em></p>
<p><a href=""https://learn.microsoft.com/en-us/azure/logic-apps/workflow-definition-language-functions-reference#equals"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/azure/logic-apps/workflow-definition-language-functions-reference#equals</a></p>
<p>I understand how to work around this error, but does anyone know why this function works like this?</p>
","0","Question"
"79433601","","<p>I'm using PowerQuery within Excel, not PowerBI.</p>
<p>I've got a column full of application dates.</p>
<p>If the application date is within the last week I want to return 1, if not I want to return 0.</p>
<p>Then I can simply sum the number of applications made in the week, and repeat this process for the month, and the year.</p>
<p>I'm using the <code>Date.IsInCurrentWeek</code> function, and trying to combine it with a logical expression, like below:</p>
<pre><code>= Table.AddColumn(#&quot;Reordered Columns&quot;, &quot;App.CurrentWeek&quot;, if each Date.IsInCurrentWeek([Application Date]) = &quot;FALSE&quot; then 0 else 1)
</code></pre>
<p>But the error I'm receiving is</p>
<p>Expression.Error: We cannot convert a value of type Function to type Logical.
Details:
Value=[Function]
Type=[Type]</p>
","1","Question"
"79433967","","<p>I'm working in a card game. where I want the cards to have generic upgrades that could be applied to any card.</p>
<p>My cards have a Play() function, and I would want upgrades like</p>
<ul>
<li>Whenever you play it Mill a card</li>
<li>When you play it, play it twice instead</li>
</ul>
<p>When one of these upgrades is applied to a card that card play function should do something similar to this to the PlayFunction()</p>
<pre><code>PlayFunction(){
    formerPlayFunction()
    millCard()
}
</code></pre>
<p>How could I achieve this??</p>
<p>I was trying to do it with a lambda function that could be modified by the upgrades but didnt seemed like the better option.</p>
","-2","Question"
"79434419","","<pre><code>createBranch() {
  git pull
  git checkout -b $1
  git push --set-upstream origin $1
}
createBranchOffFeature() {
  git checkout master
  git pull
  git checkout feature-branch
  git pull
  git merge master
  # there are conflicts and I need to do a merge commit and push before continuing
  git push
  createBranch &quot;$1&quot;
}
</code></pre>
<p>I'm working on a project, and several of us are merging to master every day. My feature branch was branched off master. When I work a new story in the feature, I need to create a new branch off feature-branch, but I need to make sure that master has been merged into feature-branch before I make the new branch.</p>
<p>I almost always have merge conflicts in my package.json, because I have updated a package for this feature, and my coworkers have updated the same package for continued development on that package. We need to deploy my changes to that package at the same time as this feature deploys, but not before, so I can't just merge the package on that end (yet). There is another package under development as well, and I do need the updates they are making to that package. So if the merge conflict looks like:</p>
<pre><code>&lt;&lt;&lt;&lt;&lt; HEAD
7 &quot;@proprietary/package&quot;: &quot;https://gitlab.proprietary/@example/package-110-feature.tgz&quot;,
8 &quot;@proprietary/package2&quot;: &quot;https://gitlab.proprietary/@example/package2-1.0.0.tgz&quot;,
=====
7 &quot;@proprietary/package&quot;: &quot;https://gitlab.proprietary/@example/package-113.tgz&quot;,
8 &quot;@proprietary/package2&quot;: &quot;https://gitlab.proprietary/@example/package2-1.0.2.tgz&quot;,
&gt;&gt;&gt;&gt;&gt; master
</code></pre>
<p>Then I keep my package and their package2, and delete the other 5 lines.</p>
<p>Sometimes there are other conflicts as well, so generally I am going to have to fix merge conflicts manually, and then I perform the git commit, and at that point, I want my function to pick back up and finish making the branches.</p>
<p>Is this possible?
If so, what do I need to do on the commented line of the function in order to do it?</p>
<p>Right now I'm using <code>read</code> on that line to wait for any input.</p>
<p>It works fine, but because I've been testing iterative versions of this function, there are no longer any merge conflicts, so it's just pausing after the merge says &quot;Already up-to-date&quot;. I press Enter and it continues as I expect.</p>
<p>Will this work if I type <code>git commit</code> there instead?</p>
<p>Could I do something like:</p>
<pre><code>read
git commit -am &quot;merging master into feature&quot;
</code></pre>
<p>But what if there wasn't a merge conflict, because I finished a small story before anyone else merged to master? Can I conditionally do the <code>git commit</code>?</p>
","0","Question"
"79434508","","<p>I would like to make a function which can get some simple stats together and then iterate over different variables within a dataframe, producing a dataframe with stats for each variable.</p>
<p>I've written a function that produces some common stats for a numeric variable.</p>
<pre><code>describe_stats &lt;- function(x) {
  ## define output
  output &lt;- list()
  ## relevant stats of interest
  median_x &lt;- tibble(name=&quot;median&quot;, value=median(x)) 
  min_x &lt;- tibble(name=&quot;min&quot;, value=min(x)) 
  max_x &lt;- tibble(name=&quot;max&quot;, value=max(x)) 
  lower_quantile_x &lt;- tibble(name=&quot;lower_quantile&quot;, value=quantile(x, 0.25)) 
  upper_quantile_x &lt;- tibble(name=&quot;upper_quantile&quot;, value=quantile(x, 0.75))
  ## join all stats
  output &lt;- full_join(median_x, 
                      full_join(min_x, 
                                full_join(max_x,
                                          full_join(lower_quantile_x, 
                                                    upper_quantile_x))))
  ## return output
  return(output)
}
</code></pre>
<p>What I would like is to get a function that runs the above on all numeric variables within a dataframe, e.g. run the above on mtcars and produce a dataframe with median, minimum etc for mpg, cyl etc. allowing me to extract stats for certain variables easily.</p>
<p>P.S. I am aware of the summary function</p>
<p>Tried map and loops but struggling to get it right. I'm relatively inexperienced in functions and have instead done lots of things through repetition - unfortunately having a brain block so would appreciate any help.</p>
","1","Question"
"79441877","","<p>Every time I think I've figured out the details of <a href=""https://stackoverflow.com/questions/79135577/different-methods-for-passing-column-names-to-custom-functions-vs-data"">passing data frame columns into functions</a>, I find a new situation that complicates the process.</p>
<p>I have a custom function in which I'm passing the data frame columns using curly brackets {{}}. This works great for calling them as part of dplyr sequences, as shown in sampfun1 below. However, if I want to use a very simple function on a single column (for example, <code>sd(mtcars$disp)</code>), I run into difficulties, as it does not seem possible to use the curly brackets directly on the dataframe (<code>df${{col}}</code> or any similar alternative I've tried).</p>
<p>Right now I'm getting around this by using <code>df[[deparse(substitute(col))]]</code>, as shown in sampfun2 below. This is fine, but is a bit clunky, especially in complex functions where multiple columns are being passed and then being used in different ways. Is there a simpler way to achieve the output for sampfun2? I know I could just pass the column name as a string and go directly to <code>df[[col]</code>, but I'd like to avoid that since I'm using the column in other ways elsewhere in the function.</p>
<pre><code>library(dplyr)

sampfun1 &lt;- function(df, col){
  df %&gt;% 
    mutate(xsd = sd({{col}}))
}

sampfun2 &lt;- function(df, col){
  colStr &lt;- deparse(substitute(col))
  dat_sd &lt;- sd(df[[colStr]])
}

disp_sd1 &lt;- sampfun1(mtcars, disp)
disp_sd2 &lt;- sampfun2(mtcars, disp)
</code></pre>
<p>EDIT for clarification: This is a very simplified function just to display the issue of passing a column into a function and then calling just the column (rather than e.g. something through dplyr that calls first the data frame and then the function). My goal isn't to pass a large number of columns to the same function, just to simplify the syntax if I need to repeatedly call that column in different contexts. When calling a subset of the data frame using <code>dplyr</code>, this isn't a problem - it only arises when trying to extract the column. Here is another example to maybe better illustrate what I'm trying to do:</p>
<pre><code>sampfun3 &lt;- function(df, col){
  single_col &lt;- df %&gt;% select({{col}}) %&gt;% pull()
  dat_sd &lt;- sd(single_col)
}
</code></pre>
<p>This also works for what I'm trying to do, though it's a little more cumbersome than sampfun2. I was just wondering if there's a simpler way to extract a specific column when it's been passed using {{}}.</p>
","4","Question"
"79446582","","<pre><code>#include &lt;iostream&gt;
#include &lt;concepts&gt;


struct Sound { int amplitude; };
struct Light { int brightness; };

template &lt;typename T&gt;
concept Alert = std::derived_from&lt;T, Sound&gt; &amp;&amp; std::derived_from&lt;T, Light&gt;;


struct FirstSound : Sound{};
struct FirstLight : Light{};
struct FirstSoundLight : FirstSound, FirstLight{};

struct LastSound : Sound{};
struct LastLight : Light{};
struct LastSoundLight : LastSound, LastLight{};

template &lt;typename T&gt;
concept FirstAlert = std::derived_from&lt;T, FirstSound&gt; &amp;&amp; std::derived_from&lt;T, FirstLight&gt;;

template &lt;typename T&gt;
concept LastAlert = std::derived_from&lt;T, LastSound&gt; &amp;&amp; std::derived_from&lt;T, LastLight&gt;;


void warn(FirstAlert auto const&amp; a, LastAlert auto const&amp; b)
{ std::cout &lt;&lt; &quot;Special warning&quot;; }

void warn(Alert auto const&amp; a, LastAlert auto const&amp; b) = delete;
//{ std::cout &lt;&lt; &quot;Deleted warning&quot;; }

void warn(Alert auto const&amp; a, Alert auto const&amp; b)
{ std::cout &lt;&lt; &quot;General warning&quot;; }

int main() 
{
    warn(FirstSoundLight{}, LastSoundLight{});
    return 0;
}
</code></pre>
<p>The code above is a simplified version of my problem. How can I make the compiler select functions unambigiously in the given order without explicitly casting the parameters?</p>
","0","Question"
"79448103","","<p>I'm trying to create a custom function to fill selected cells with unique random numbers. My problem is to get the range of selected cells eg.</p>
<p>=randm()</p>
<p>My problem is that I don't know the cells range to fill</p>
<p><a href=""https://i.sstatic.net/3Rrz9FlD.png"" rel=""nofollow noreferrer"">I need to get the range address H16:J24</a></p>
<p>Is it possible ?</p>
<p>Regards.</p>
","0","Question"
"79448911","","<p>In this code, hitting the weightpos/weightneg buttons should change the value by 5. When using the original buttons that arent created from the addrow() function, it works fine, but using the created buttons it only increments by 1.</p>
<p>Code:</p>
<pre><code>import tkinter as tk
from tkinter import ttk
from tkinter import *
from PIL import ImageTk, Image
import os
weight_entry='0'
root=tk.Tk()

movement_chest = [&quot;Flat Bench&quot;, 'Incline Bench', 'Decline Bench', 'Flat DB Press', &quot;Incline DB Press&quot;, 'High-Low Cable Raise', &quot;Low-High Cable Raise&quot;,]
files_movement_chest = [&quot;flat_bench.gif&quot;, 'incline_bench.gif', 'decline_bench.gif', 'db_flat.gif', &quot;db_incline.gif&quot;, 'high_low_cable.gif', &quot;low_high_cable.gif&quot;,]
row_counter=1

class Toolbar(Frame):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.master.title(&quot;Workout Tracker&quot;)
        menubar = Menu(self.master)
        self.master.config(menu=menubar)

        fileMenu = Menu(menubar)
        fileMenu.add_command(label=&quot;Exit&quot;, command=self.onExit)
        menubar.add_cascade(label=&quot;File&quot;, menu=fileMenu)

    def onExit(self):
        self.quit()

# Create a variable to hold the image reference
image_label = None
img = None

# Set button function
def plusminus(increment, entry, row_counter):
    if entry.get() == '': 
        new_value = 0
    else:
        current_value = int(entry.get())  # Get the current value from the entry widget
        if entry == weight_entry:
            # If the entry widget is the weight field, change the value by 5
            if increment:
                new_value = current_value + 5
            else:
                new_value = current_value - 5
        else:
            # For other fields like sets, change by 1
            if increment:
                new_value = current_value + 1
                print(entry)
            else:
                new_value = current_value - 1
        
    if new_value &lt; 0:
        new_value = 0

    entry.delete(0, tk.END)  # Clear the entry
    entry.insert(0, str(new_value))  # Insert the new value


def on_combobox_select(event=None, row_counter=0):  # Allow for manual function call (no event)
    global image_label, img  # Use global variables
    motion = Dropdown.get()
    
    # Remove the old image if it exists
    if image_label:
        image_label.destroy()
    
    # Find the index of the selected motion in movement_chest
    if motion in movement_chest:
        index = movement_chest.index(motion)  # Get the index of the selected motion
        
        # Get the corresponding filename for the selected motion
        img_path = files_movement_chest[index]
        
        # Check if the image file exists and load it
        if os.path.exists(img_path):
            img = ImageTk.PhotoImage(Image.open(img_path))
        else:
            print(f&quot;Image file '{img_path}' not found.&quot;)
            img = None
        
        # Only add the label if the image is loaded correctly
        if img:
            image_label = Label(root, image=img)
            image_label.grid(row=row_counter, column=0, columnspan=3, sticky=&quot;nsew&quot;)  # Use grid here with spanning
    else:
        img_path = &quot;workout.gif&quot;
        if os.path.exists(img_path):
            img = ImageTk.PhotoImage(Image.open(img_path))
        else:
            print(&quot;Image file 'workout.gif' not found.&quot;)
            img = None
        if img:  # Only add the label if the image is loaded correctly
            panel = Label(root, image=img)
            panel.grid(row=row_counter, column=0, columnspan=3, sticky=&quot;nsew&quot;)  # Use grid here with spanning

# Create a function that adds a new row of widgets
def add_row():
    global row_counter
    
    # Add row-specific widgets like motion dropdown, weight entry, set entry, etc.
    label_dropdown = tk.Label(root, text='Motion')
    label_dropdown.grid(row=row_counter, column=4, pady=(15, 0), sticky='n')

    # Create a new row of widgets for motion
    motion_dropdown = ttk.Combobox(
        root,
        values=movement_chest,
        state=&quot;readonly&quot;,
    )
    motion_dropdown.grid(row=row_counter, column=4, padx=5, pady=5)
    motion_dropdown.bind(&quot;&lt;&lt;ComboboxSelected&gt;&gt;&quot;, lambda event: on_combobox_select(event, row_counter))
    
    # Create weight entry for this row
    label_weight = tk.Label(root, text='Weight')
    label_weight.grid(row=row_counter, column=5, pady=(15, 0), sticky='n')

    weight_entry = ttk.Entry(root)
    weight_entry.grid(row=row_counter, column=5, padx=5, pady=5)
    
    # Buttons for incrementing/decrementing weight
    btn_weightpos = tk.Button(root, text='+', command=lambda: plusminus(True, weight_entry, row_counter)) 
    btn_weightpos.grid(row=row_counter, column=5, padx=(0, 19), pady=(0, 8), sticky='s')
    
    btn_weightneg = tk.Button(root, text='-', command=lambda: plusminus(False, weight_entry, row_counter))
    btn_weightneg.grid(row=row_counter, column=5, padx=(19, 0), pady=(0, 8), sticky='s')
    
    # Create set entry for this row
    label_set = tk.Label(root, text='Sets')
    label_set.grid(row=row_counter, column=6, pady=(15, 58), sticky='n')

    set_entry = ttk.Entry(root)
    set_entry.grid(row=row_counter, column=6, padx=5, pady=5)
    
    # Buttons for incrementing/decrementing sets
    btn_setpos = tk.Button(root, text='+', command=lambda: plusminus(True, set_entry, row_counter)) 
    btn_setpos.grid(row=row_counter, column=6, padx=(0, 19), pady=(0, 8), sticky='s')
    
    btn_setneg = tk.Button(root, text='-', command=lambda: plusminus(False, set_entry, row_counter))
    btn_setneg.grid(row=row_counter, column=6, padx=(19, 0), pady=(0, 8), sticky='s')

    # Create an image label placeholder for each row (so that we can update it later)
    image_label = None
    img = None

    # Increment row_counter for the next row
    row_counter += 1

# Dropdown (Combobox)
Dropdown = ttk.Combobox(
    root,
    values=movement_chest,
    state=&quot;readonly&quot;,
)
label_dropdown = tk.Label(root, text='Motion')
label_dropdown.grid(row=0, column=4, pady=(70, 0), sticky='n')
Dropdown.grid(row=0, column=4, padx=5, pady=5)
Dropdown.bind(&quot;&lt;&lt;ComboboxSelected&gt;&gt;&quot;, on_combobox_select)

# Weight field
label_weight = tk.Label(root, text='Weight')
weight_entry = ttk.Entry(root, text='Weight')
label_weight.grid(row=0, column=5, pady=(70, 0), sticky='n')
weight_entry.grid(row=0, column=5, padx=5, pady=5)
# button to increment the weight value
btn_weightpos = tk.Button(root, text='+', command=lambda: plusminus(True, weight_entry, 0))  # Using lambda to pass argument
btn_weightpos.grid(row=0, column=5, padx=(0, 19), pady=(0, 65), sticky='s')
# button to decrement the weight value
btn_weightneg = tk.Button(root, text='-', command=lambda: plusminus(False, weight_entry, 0))
btn_weightneg.grid(row=0, column=5, padx=(19, 0), pady=(0, 65), sticky='s')

# Set field
label_set = tk.Label(root, text='Sets')
set_entry = ttk.Entry(root, text='Sets')
label_set.grid(row=0, column=6, pady=(70, 0), sticky='n')
set_entry.grid(row=0, column=6, padx=5, pady=5)
# button to increment the set value
btn_setpos = tk.Button(root, text='+', command=lambda: plusminus(True, set_entry, 0))  # Using lambda to pass argument
btn_setpos.grid(row=0, column=6, padx=(0, 19), pady=(0, 65), sticky='s')
# button to decrement the set value
btn_setneg = tk.Button(root, text='-', command=lambda: plusminus(False, set_entry, 0))
btn_setneg.grid(row=0, column=6, padx=(19, 0), pady=(0, 65), sticky='s')

# Manually trigger the combobox selection to load the default image (workout.gif)
on_combobox_select()
# Add &quot;Add Row&quot; button
add_row_button = tk.Button(root, text=&quot;Add Row&quot;, command=add_row)
add_row_button.grid(row=0, column=7, padx=5, pady=5)

# Initial row setup (first row)

root.mainloop()
</code></pre>
<p>I tried using variables instead of weight_entry when calling the function and it did not work</p>
","0","Question"
"79449755","","<p>The following code snippet is part of an exercise in which I need to guess the output of the code:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>let length = 4;
function callback(){
  console.log(this.length);
}
const object = {
  length: 5,
  method(callback){
    callback();
  },
};
object.method(callback, 1, 2);</code></pre>
</div>
</div>
</p>
<p>From what I understood so far, the following is the process going on behind the scenes:</p>
<p>From the current understanding:</p>
<p>--&gt; line 11: <code>callback</code> definition is passed as <code>arg</code>.</p>
<p>--&gt; line 7: <code>callback</code> definition is used as input for <code>param</code>.</p>
<p>--&gt; line 8: <code>callback</code> keyword is called.</p>
<p>--&gt; line 11: <code>callback()</code> defined on line 2 is executed as a function with global scope.</p>
<p>--&gt; line 3: <code>this.length</code> refers to <code>window.length</code> and <code>output = 0</code> is obtained.</p>
<p>--&gt; And the <code>args</code> <code>1</code> and <code>2</code> are irrelevant.</p>
<p>Please help me verify if the above explanation is correct or not. Thank you!</p>
","0","Question"
"79453066","","<p>I am looking for how to modify a function to find the second largest divisor and not the largest as it is outputting for me:</p>
<pre class=""lang-py prettyprint-override""><code>n = int(input(&quot;Enter an integer:&quot;))
result = 1
for i in range(2, n):
    if ((n % i) == 0):
        result = i
print(result)
</code></pre>
<pre><code>Enter an integer:36
18
</code></pre>
<p>Using an example input of <code>36</code> the output will be <code>18</code>. I'm wanting to find the next largest divisor instead, which would be <code>12</code>.</p>
<p>How would I go about modifying my function to make the output <code>12</code> instead of <code>18</code> (assuming the input is <code>36</code>)?</p>
","3","Question"
"79454077","","<p>Can anyone please help me with how to pass a function to a function pointer inside struct in C?
I have a function as below</p>
<pre><code>typedef struct LOAD_DRV_DATA
{
   uint8_t LoadDrvId;
   uint8_t dataLength;
   uint8_t DataBuffer[8];
}LOAD_DRV_DATA;

typedef struct LOAD_DRV_MAP
{
    uint8_t rspRemoteNum;
    uint8_t loadDrvID;
    uint8_t loadDrvComIf;
    void (*loadDrvFnPtr)(void);
}LOAD_DRV_MAP;
        
void LoadDrv_writeConfigData(LOAD_DRV_DATA *configData)
{
   uint8_t chipSel = 0x00;
   uint8_t buff    = 0xFF;
   LOAD_DRV_MAP configLoadDrvMap;
   
   configLoadDrvMap.rspRemoteNum = configData-&gt;LoadDrvId;
   configLoadDrvMap.loadDrvFnPtr = &amp;write_SpiConfig(configLoadDrvMap.rspRemoteNum, chipSel, buff);
}
</code></pre>
<p>I have a structure member called <em>loadDrvFnPtr</em> to which I have to assign the function. This has to be void because more functions will be assigned to this with different arguments so that the basic data type kept is void.</p>
","2","Question"
"79456587","","<p>Yesterday I came across a question on the Spanish site, which I found interesting for the challenge it proposes (it has no practical relevance), so I took the liberty of reposting it here:</p>
<p>Make a program in C++ that asks for 10 numbers, displays them, shows the sum of these and also the average.</p>
<p>The restrictions are:</p>
<pre><code>Not to use variables of any type
Not to use any data structure
Not to use loops and conditionals
ONLY FUNCTIONS MUST BE USED
</code></pre>
<p>Parameters can be used.</p>
<p>The original post is <a href=""https://es.stackoverflow.com/questions/630132/solo-funciones-en-c"">here</a></p>
<p>This is as close as I've come....</p>
<pre><code>#include &lt;functional&gt;
#include &lt;iostream&gt;
#include &lt;string&gt;

using namespace std;

int getSum( int suma ) {
   cin &gt;&gt; suma;
   return suma;
}

void message( int sum, int count, int limit ) {
    cout &lt;&lt; &quot;Sum = &quot; &lt;&lt; sum &lt;&lt; endl;
    cout &lt;&lt; &quot;average = &quot; &lt;&lt; sum / limit;
}

void calculate( int sum, int count, int limit ) {
   sum = sum + getSum(sum ); 

     // we create a boolean that tells us if we are inside the iteration values 
     // of the iteration values  
     // bool isGreater = limit &gt; count;
   
     // this line gives us an integer, which will serve as index 
     // to our array of functions
     // int value = isGreater - true + 1;

     // create the array of functions
   function&lt; void( int, int, int )&gt; array[ 2 ] {
        message,
        calculate
   };
   
     // we execute the corresponding one, 
     // &quot;limit &gt; count - true + 1&quot; replaces “isGreater - true + 1”
   array[ limit &gt; count - true + 1 ]( sum, ++count, limit );
}

int main() {
   int amount = 3;
   std::cout &lt;&lt; &quot;Enter &quot; &lt;&lt; amount &lt;&lt; &quot; values: &quot;;
   calculate( 0, 1, amount );    
   return 0;
}
</code></pre>
<p>Explanation:
In the operation sum + getSum(), this the trick, since by the way of working of the language, sum maintains the original value, although getSum() modifies it, and here we discover that there is a small trap... yes... we use a variable, the one that getSum() creates, only that it is created “on the fly”, therefore it does not appear in the code.</p>
<p>As long as limit is greater than quantity, value will be “1” (remember that false is “0” and true is “1”), so recursion will be done by increasing the value of quantity until it equals limit, then value will be “0” and message is called which does its job, and execution is finished.</p>
<p>The only thing left to do is to eliminate the array of functions, that's as close as I've come....</p>
","0","Question"
"79458345","","<p>I have a dataset like this:</p>
<pre><code>  tdf &lt;- data.frame(
    A = c(1, 2, 5, 4),
    B = c(NA, 3, 4, 5),
    C = c(NA, NA, NA, NA),
    D = c(NA, NA, NA, NA),
    E = c(10, 20, 30, 40))
</code></pre>
<p>And I need to replace the last non NA value going from left to right, with a value from another column, say E, to give this:</p>
<pre><code>  enddf &lt;- data.frame(
    A = c(10, 2, 5, 4),
    B = c(NA, 20, 30, 40),
    C = c(NA, NA, NA, NA),
    D = c(NA, NA, NA, NA),
    E = c(10, 20, 30, 40))

</code></pre>
<p>I'm reading multiple dfs of varying numbers of columns, so I'm thinking a function which reads across all rows but the last one would work?</p>
<p>I tried something like this, but I feel like I'm going the wrong direction:</p>
<pre><code>df &lt;- tdf %&gt;%
    rowwise() %&gt;%
    mutate(
      A = ifelse(is.na(A), A, ifelse(!is.na(B), C, A)),
      B = ifelse(!is.na(A) &amp; is.na(B), C, B)
    )
</code></pre>
","6","Question"
"79461412","","<p>I've been trying to reimplement the <code>nom</code> crate (for learning about parsing) and I cannot figure out how to implement a trait for a closure returned by a function.</p>
<h3>The trait</h3>
<p>The trait is meant to be implemented for functions which take some bytes as input, returning the new input (without the consumed tokens) and some output:</p>
<pre class=""lang-rust prettyprint-override""><code>trait Parser&lt;O, E&gt; {
    fn parse&lt;'a&gt;(&amp;self, data: &amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], O), E&gt;;
}
</code></pre>
<h3>The implementation</h3>
<p>The blanket implementation looks like this:</p>
<pre class=""lang-rust prettyprint-override""><code>impl&lt;O, E, F&gt; Parser&lt;O, E&gt; for F
where
    F: Fn(&amp;[u8]) -&gt; Result&lt;(&amp;[u8], O), E&gt;,
{
    fn parse&lt;'a&gt;(&amp;self, data: &amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], O), E&gt; {
        self(data)
    }
}

</code></pre>
<p>This works well enough for functions on their own, for example</p>
<pre class=""lang-rust prettyprint-override""><code>fn be_u32(data: &amp;[u8]) -&gt; Result&lt;(&amp;[u8], u32), ParseError&gt; {
    let value = u32::from_be_bytes([data[0], data[1], data[2], data[3]]);
    Ok((&amp;data[size_of::&lt;u32&gt;()..], value))
}
...
let (data, _) = be_u32.parse(data)?;  // This works as expected
</code></pre>
<p>Now, when trying to implement the trait for a higher order function returning a closure, I get an error:</p>
<pre class=""lang-rust prettyprint-override""><code>fn tag&lt;'a&gt;(
    _tag: &amp;'a str,
) -&gt; impl Fn(&amp;'a [u8]) -&gt; Result&lt;(&amp;'a [u8], String), ParseError&gt; {
    move |data: &amp;'a [u8]| {
        // Parsing logic
    }
}
...
let t = tag(&quot;tag&quot;);
let (data, _) = t.parse(data)?;
</code></pre>
<p>This gives me the error:</p>
<pre><code>error[E0599]: the method `parse` exists for opaque type `impl Fn(&amp;[u8]) -&gt; Result&lt;(&amp;[u8], String), ParseError&gt;`, but its trait bounds were not satisfied
   --&gt; src/qoi_vanilla.rs:180:33
    |
180 |         let (data, _) = qoi_tag.parse(data)?;
    |                                 ^^^^^ method cannot be called due to unsatisfied trait bounds
    |
note: the following trait bounds were not satisfied:
      `&lt;impl Fn(&amp;[u8]) -&gt; Result&lt;(&amp;[u8], std::string::String), ParseError&gt; as FnOnce&lt;(&amp;[u8],)&gt;&gt;::Output = Result&lt;(&amp;[u8], _), _&gt;`
      `impl Fn(&amp;[u8]) -&gt; Result&lt;(&amp;[u8], std::string::String), ParseError&gt;: Fn&lt;(&amp;[u8],)&gt;`
   --&gt; src/byteparser.rs:44:8
    |
42  | impl&lt;O, E, F&gt; Parser&lt;O, E&gt; for F
    |               ------------     -
43  | where
44  |     F: Fn(&amp;[u8]) -&gt; Result&lt;(&amp;[u8], O), E&gt;,
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |        |            |
    |        |            unsatisfied trait bound introduced here
    |        unsatisfied trait bound introduced here
</code></pre>
<p>What are the trait bounds I'm not satisfying?</p>
<p>I've tried adding lifetime variables and different combinations of <code>dyn</code> and <code>impl</code>.</p>
","1","Question"
"79462210","","<p>I have read in some other questions here why <code>do { } while (0)</code> is good for function-like macros in C. Also, this form provides the <code>break</code> instruction in order to simulate a <code>return</code> statement.</p>
<p>But in those other questions, I never read anything &quot;clear&quot; about <code>if (1) { } else</code>.</p>
<p>For me, this is almost equal to <code>do { } while (0)</code> with the difference being that here we don't have the <code>break</code> statement.</p>
<p>And I guess it’s better than <code>if (1) { } else { }</code> because it allows us to use <code>;</code>.</p>
<p>Is it really &quot;safe&quot;? Are there any reasons for choosing this over <code>do { } while (0)</code>?</p>
","4","Question"
"79463536","","<p>I have 3 slicers <code>Period</code>, <code>Year</code>, and <code>Month</code>.</p>
<p>Period has values 'MTD', 'QTD', and 'YTD'; 'Year' and 'Month' are self-explanatory I guess.</p>
<p>I created a measure which is supposed to calculate values for month 1 and 2 commulatively when QTD is selected along with a year, and month 2 is selected, but it is calculating data for month 2 only.</p>
<p><a href=""https://i.sstatic.net/WiaFl79w.png"" rel=""nofollow noreferrer"">Dashboard screenshot on month 1</a></p>
<p><a href=""https://i.sstatic.net/gF5YUUIz.png"" rel=""nofollow noreferrer"">Dashboard screenshot on month 2</a></p>
<p>For instance, in attached screenshot, Disbursement KPI is 3.63 B in 1st month (Ach. QTD 7) but when I select month 2, it becomes 3.53 B. Correct value for month 2 should be <code>3.63</code> + <code>3.53</code> = <code>7.06 B</code>.</p>
<p>I displayed the dates while debugging and they seem ok. What is wrong here? Please help!</p>
<pre><code>Ach. QTD 6 = 
VAR SelectedPeriod = SELECTEDVALUE('P. Table'[Period])
VAR SelectedMonth = SELECTEDVALUE(PMS_BW[Month])
VAR SelectedYear = SELECTEDVALUE(PMS_BW[Year])
VAR SelectedDate = DATE(SelectedYear, SelectedMonth, 1)
VAR EOM = EOMONTH(SelectedDate, 0)

VAR QuarterStartDate = 
    SWITCH(
        TRUE(),
        SelectedMonth &lt;= 3, DATE(SelectedYear, 1, 1),
        SelectedMonth &lt;= 6, DATE(SelectedYear, 4, 1),
        SelectedMonth &lt;= 9, DATE(SelectedYear, 7, 1),
        DATE(SelectedYear, 10, 1)
    )

VAR Val = 
    SWITCH(
        SelectedPeriod,
        &quot;MTD&quot;, 
            CALCULATE(SUM(PMS_BW[Ach_CM]), 
                PMS_BW[BusinessDate] &lt;= EOM &amp;&amp; PMS_BW[BusinessDate] &gt;= SelectedDate
            ),
        &quot;QTD&quot;, 
            CALCULATE(SUM(PMS_BW[Ach_CM]), 
                PMS_BW[BusinessDate] &lt;= EOM &amp;&amp; PMS_BW[BusinessDate] &gt;= QuarterStartDate
            ),
        &quot;YTD&quot;, 
            CALCULATE(SUM(PMS_BW[Ach_CM]), 
                PMS_BW[BusinessDate] &lt;= EOM &amp;&amp; PMS_BW[BusinessDate] &gt;= DATE(SelectedYear, 1, 1)
            ),
        SUM(PMS_BW[Ach_CM])
    )

VAR Denom = 
    SWITCH(
        SelectedPeriod,
        &quot;MTD&quot;, 
            CALCULATE(SUM(PMS_BW[Recovered_CM]), 
                PMS_BW[BusinessDate] &lt;= EOM &amp;&amp; PMS_BW[BusinessDate] &gt;= SelectedDate
            ),
        &quot;QTD&quot;, 
            CALCULATE(SUM(PMS_BW[Recovered_CM]), 
                PMS_BW[BusinessDate] &lt;= EOM &amp;&amp; PMS_BW[BusinessDate] &gt;= QuarterStartDate
            ),
        &quot;YTD&quot;, 
            CALCULATE(SUM(PMS_BW[Recovered_CM]), 
                PMS_BW[BusinessDate] &lt;= EOM &amp;&amp; PMS_BW[BusinessDate] &gt;= DATE(SelectedYear, 1, 1)
            ),
        SUM(PMS_BW[Recovered_CM])
    )

VAR FVal =
    SWITCH(
        TRUE(),
        SELECTEDVALUE(PMS_BW[KPI]) IN {&quot;CCR&quot;},
            ROUND(DIVIDE(Denom, Val, 0) * 100, 2) &amp; &quot; %&quot;,
        SELECTEDVALUE(PMS_BW[KPI]) IN {&quot;Retail&quot;, &quot;Corporate&quot;},
            ROUND(DIVIDE(Val, Denom, 0) * 100, 2) &amp; &quot; %&quot;,
        SELECTEDVALUE(PMS_BW[KPI]) IN {&quot;Disbursement&quot;, &quot;GLP&quot;, &quot;NPL&quot;, &quot;Green Financing&quot;, &quot;SME&quot;, &quot;CA&quot;, &quot;SA&quot;, &quot;TD&quot;, &quot;Total Deposits&quot;},
            SWITCH(
                TRUE(),
                Val &gt;= 1000000000, FORMAT(Val / 1000000000, &quot;#,0.00&quot;) &amp; &quot; B&quot;,
                Val &gt;= 1000000, FORMAT(Val / 1000000, &quot;#,0.00&quot;) &amp; &quot; M&quot;,
                FORMAT(Val, &quot;#,0&quot;)
            ),
        FORMAT(Val, &quot;#,0&quot;)
    )

RETURN FVal
</code></pre>
","0","Question"
"79467216","","<p>I am trying to create a function in R that creates a geometric sequence based on the inputs of 'start' (the starting value), 'by' (the common ratio) and two arguments that depending on which one is given decides how the sequence is generated either;</p>
<ul>
<li>'times' which is the number of times the starting value should be multiplied by the common ratio, or</li>
<li>'end' which is the last term in the sequence.</li>
</ul>
<p>this is the code I have written so far:</p>
<pre><code>geomSeq &lt;- function(start, by, times = log(end/start, base = by), 
                    end = start * by^(times)){
  start * by^(0:times)
}
</code></pre>
<p>Note that I have defined the default arguments of 'times' and 'end' by each other, so if both are missing then I get a recursion error. I want to throw an error if both of these arguments are missing, without the horrible recursion error popping up.</p>
<p>So I was wondering if there is a better way of defining two arguments where either of them, but at least one of them, can be inputted.</p>
<p>This was my attempt at doing this myself;</p>
<pre><code>geomSeq &lt;- function(start, by, times = log(end/start, base = by), 
                            end = start * by^(times)){
  if(is.null(times) &amp;&amp; is.null(end)) stop(&quot;either 'times' or 'end' argument must be given&quot;)
  start * by^(0:times)
}
</code></pre>
<p>and when I tested this and ran the function without the times or end arguments this is the error that I got, which I don't want to show up.</p>
<pre><code>&gt; geomSeq(start = 10, by = 10)
Error in geomSeq(start = 10, by = 10) : 
  promise already under evaluation: recursive default argument reference or earlier problems?
</code></pre>
<p>I also tried to remove the arguments from within the function specification</p>
<pre><code>geomSeq &lt;- function(start, by, times = log(end/start, base = by), end = NULL){
  if(is.null(times) &amp;&amp; is.null(end)) stop(&quot;either 'times' or 'end' argument must be given&quot;)
  if(is.null(times)){
    times &lt;- log(end/start, base = by)
    result &lt;- start * by^(0:times)
  } else{
    result &lt;- start * by^(0:times)
  }
  return(result)
}
</code></pre>
<p>but I wasn't sure how to get this to work either.</p>
","1","Question"
"79467473","","<p>In SBCL when I describe a lambda I get a bunch of detail:</p>
<pre><code>* (setf f (lambda (a b) (* a b)))
#&lt;FUNCTION (LAMBDA (A B)) {535B3C3B}&gt;                                                                                                               
* (describe f)
#&lt;FUNCTION (LAMBDA (A B)) {535B3C3B}&gt;
 [compiled function]
Lambda-list: (A B)
Derived type: (FUNCTION (T T) (VALUES NUMBER &amp;OPTIONAL))
Documentation: T                                                                                                                                                 
Source form: (LAMBDA (A B) (* A B))                                                                                                                            
</code></pre>
<p>How can I access these objects? In particular, I want to access the lambda-list.</p>
<p>Thanks!</p>
","1","Question"
"79468512","","<p>I have a list of many combinations of model variables that I'm testing for model fit. I need to figure out how to write an R code that iterates through each one in the model fit. This is what I have so far:</p>
<p>This chunk makes a string with all of the formulas for the model:</p>
<pre><code># example list of the variables
var &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;)

n = length(var)

# make list of all possible combinations
id &lt;- unlist(
  lapply(1:n,
         function(i) combn(1:n,i,simplify = FALSE)), recursive = FALSE)

# make the combinations into formulas
frmlas &lt;- (sapply(id, function(i)
  paste(&quot;DV ~ &quot;, paste(var[i], collapse = &quot;+&quot;))))

</code></pre>
<p>This chunk is where I am stuck:</p>
<pre><code># Add ID's to the model combinations for naming the outputs numerically:
frmlasnum &lt;- as.data.frame(frmlas)
frmlasnum$ID &lt;- seq.int(nrow(frmlasnum))

# Now make a function that fits the models while outputting an .rds file for each:

modelfit &lt;- function(frmlasnum) {
  for (x in 1:length(frmlasnum)) {
    name &lt;- df[x,&quot;ID&quot;]
    model &lt;- ssn_lm(formula = x, ssn.object = df)
    write_rds(model, paste(name,&quot;.rds&quot;))
  }
}

# I omitted the rest of the ssn_lm functions after ssn.object for simplicity, not running the model without them
</code></pre>
<p>I know I have a bunch of wrong things in there, and I'm sorry this isn't reproducible but I'm hoping someone can give me advice on how to fix the function. Thank you in advance.</p>
","2","Question"
"79470956","","<p>let's take this short example:</p>
<pre class=""lang-cpp prettyprint-override""><code>std::expected&lt;std::any, Fault&gt; doN(int n) 
{
    switch (n) 
    {
        case 1: return do1();
        case 2: return do2();
        // ...
    }
}

std::expected&lt;int, Fault&gt; do1()
{
    if (error)
    {
        return std::unexpected&lt;Fault&gt;({/* ... */});
    }
    return 23;
}
</code></pre>
<p>If I do it this way and call <code>auto result = doN(1)</code> without errors, then <code>result.value()</code> type is <code>std::expected&lt;int, Fault&gt;</code> and not <code>int</code> (without mentioning the <code>any_cast</code>).</p>
<p>The way I found to solve this is to destruct the result of the inner call:</p>
<pre class=""lang-cpp prettyprint-override""><code>std::expected&lt;std::any, Fault&gt; doN(int n)
{
    switch (n) 
    {
        case 1: 
            auto value = do1();
            if (value.has_value()) {
                return value.value();
            }
            return std::unexpected(value.error());
        // ...
    }
}
</code></pre>
<p>The type <code>doN(1).value()</code> is <code>int</code>.</p>
<p>So my question is: How can I simplify that? Is there a way to return the function call result?</p>
","7","Question"
"79471224","","<p>I've looked through various postings on this, but haven't found them to be practical for more complex situations when not adding two numbers (<a href=""https://stackoverflow.com/questions/28370249/correct-way-to-specifiy-optional-arguments-in-r-functions"">&quot;Correct&quot; way to specifiy optional arguments in R functions</a>).</p>
<p>If I wanted to define an optional argument (in my function to select a variable from the dataset), most responses point to doing something like below. However, when you have a longer function, it just seems impractical, and then you're essentially repeating things twice, which is the whole point of using a function in the first place.</p>
<pre><code>select_fun_cars = function(df, var){
  if(missing(var)){
  df%&gt;%
  select(hp, cyl)
  }
  df%&gt;%
  select({{var}}, hp, cyl)
}

select_fun_cars(mtcars, mpg)
</code></pre>
<p>For instance, in my select statement, I am wanting to rename a variable and then select other variables. I would have to do this (as far as I know). It seems like there should be an easier way in this instance.</p>
<pre><code>tab_output_fun_sd &lt;- function(df, df_ov, df_74, df_75, Domains){
  if(missing(Domains)){
  return(df%&gt;%
      select(
        !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_ov$`new_timing_of_assessment = First.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := initial_overall, 
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_ov$`new_timing_of_assessment = Last.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := last_overall, 
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_74$`new_timing_of_assessment = First.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `initial_4274`, 
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_74$`new_timing_of_assessment = Last.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `last_4274`,
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_75$`new_timing_of_assessment = First.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `initial_4275`,
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_75$`new_timing_of_assessment = Last.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `last_4275`)%&gt;%
        gt() %&gt;%
  opt_stylize(style= 2, color = &quot;blue&quot;)%&gt;%
  as_raw_html())
  }
  
 return(df%&gt;%
    select(Domains = label,
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_ov$`new_timing_of_assessment = First.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := initial_overall, 
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_ov$`new_timing_of_assessment = Last.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := last_overall, 
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_74$`new_timing_of_assessment = First.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `initial_4274`, 
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_74$`new_timing_of_assessment = Last.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `last_4274`,
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_75$`new_timing_of_assessment = First.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `initial_4275`,
           !!paste(&quot;Intake&quot;, &quot;(&quot;, &quot;N=&quot;, max(df_75$`new_timing_of_assessment = Last.N.Valid`), &quot;)&quot;,&quot;† Mean (Std. Deviation)&quot;) := `last_4275`)%&gt;%
  gt() %&gt;%
  opt_stylize(style= 2, color = &quot;blue&quot;)%&gt;%
  as_raw_html())
}
</code></pre>
","1","Question"
"79471410","","<p>I have a struct called UpgradeProperties that takes a <code>Box&lt;dyn FnMut(&amp;mut Self)&gt;</code> as a field. However, when I try to create a function to call it I get an error.</p>
<p>Relevant Code:</p>
<pre><code>pub struct UpgradeProperties {
    pub name: String,
    pub description: String,
    pub cost: u32,
    pub cost_increase: u8,
    pub icon: Texture2D,
    pub current: f32,
    pub buy: Box&lt;dyn FnMut(&amp;mut Self)&gt;,
}

impl UpgradeProperties {
    pub fn call_buy(&amp;mut self) {
        (self.buy)(self);
    }
}
</code></pre>
<pre><code>buy: Box::new(move |s| {
    s.cost *= s.cost_increase as u32;
    s.current += 1.0;
}),
</code></pre>
<p>Result:</p>
<pre><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time
  --&gt; src/upgrade.rs:22:20
   |
22 |         (self.buy)(self);
   |         ---------- ^^^^ second mutable borrow occurs here
   |         |
   |         first mutable borrow occurs here
   |         first borrow later used by call

For more information about this error, try `rustc --explain E0499`.
</code></pre>
<p>Note: I  want to have multiple instances with different &quot;buy&quot; functions</p>
","2","Question"
"79474009","","<p>As an example from the <code>TTR</code> package, the function <code>runMin()</code> is returned as:</p>
<pre><code>function (x, n = 10, cumulative = FALSE) 
{
    x &lt;- try.xts(x, error = as.matrix)
    if (n &lt; 1 || n &gt; NROW(x)) 
        stop(sprintf(&quot;n = %d is outside valid range: [1, %d]&quot;, 
            n, NROW(x)))
    if (NCOL(x) &gt; 1) {
        stop(&quot;ncol(x) &gt; 1. runMin only supports univariate 'x'&quot;)
    }
    if (cumulative) {
        NAs &lt;- sum(is.na(x))
        if (NAs &gt; 0) {
            if (any(is.na(x[-(1:NAs)]))) 
                stop(&quot;Series contains non-leading NAs&quot;)
            if (NAs + n &gt; NROW(x)) 
                stop(&quot;not enough non-NA values&quot;)
        }
        beg &lt;- 1 + NAs
        result &lt;- double(NROW(x))
        result[beg:NROW(x)] &lt;- cummin(x[beg:NROW(x)])
        is.na(result) &lt;- seq_len(n - 1 + NAs)
    }
    else {
        result &lt;- .Call(C_runmin, x, n)
    }
    reclass(result, x)
}
&lt;bytecode: 0x0000027e2e75cb70&gt;
&lt;environment: namespace:TTR&gt;
</code></pre>
<p><code>try.xts</code> and <code>reclass</code> are from the package <code>xts</code>, so I load that first (<code>library(xts)</code>) and everything seems to work except &quot;C_runmin&quot; is not found:</p>
<pre><code>library(xts)
RunMin&lt;-function (x, n = 10, cumulative = FALSE) 
{
  x &lt;- try.xts(x, error = as.matrix)
  if (n &lt; 1 || n &gt; NROW(x)) 
    stop(sprintf(&quot;n = %d is outside valid range: [1, %d]&quot;, 
                 n, NROW(x)))
  if (NCOL(x) &gt; 1) {
    stop(&quot;ncol(x) &gt; 1. runMin only supports univariate 'x'&quot;)
  }
  if (cumulative) {
    NAs &lt;- sum(is.na(x))
    if (NAs &gt; 0) {
      if (any(is.na(x[-(1:NAs)]))) 
        stop(&quot;Series contains non-leading NAs&quot;)
      if (NAs + n &gt; NROW(x)) 
        stop(&quot;not enough non-NA values&quot;)
    }
    beg &lt;- 1 + NAs
    result &lt;- double(NROW(x))
    result[beg:NROW(x)] &lt;- cummin(x[beg:NROW(x)])
    is.na(result) &lt;- seq_len(n - 1 + NAs)
  }
  else {
    result &lt;- .Call(C_runmin, x, n)
  }
  reclass(result, x)
}


&gt; RunMin(x=rnorm(10,1,1),5)
Error in RunMin(x = rnorm(10, 1, 1), 5) : object 'C_runmin' not found
</code></pre>
<p>Even though the original runs fine:</p>
<pre><code>&gt; TTR::runMin(x=rnorm(10,1,1),5)
 [1]         NA         NA         NA         NA 0.06589477 0.06589477 0.21588468 0.21588468 0.21588468 0.21588468
</code></pre>
<p>Is this an environment issue? Where can I find where 'C_runmin' is defined? Any help is appreciated.</p>
","1","Question"
"79475346","","<p>I have created the following function in my $PROFILE script file :</p>
<pre class=""lang-bash prettyprint-override""><code>function host($name, $server, $type) {
    $FUNCNAME = $MyInvocation.MyCommand.Name
    $argc = $args.Count
    if ( $argc -eq 0 ) {
        &quot;=&gt; Usage : $FUNCNAME `$name [`$server] [`$type=A]&quot;
    } elseif ( $argc -eq 1 ) {
        $fqdn = $name -Replace('https?://|s?ftps?://','') -Replace('/.*$','')
        (Resolve-DnsName $fqdn)[0].Name
        (Resolve-DnsName $fqdn).IP4Address
    } elseif ( $argc -eq 2 ) {
        $fqdn = $name -Replace('https?://|s?ftps?://','') -Replace('/.*$','')
        (Resolve-DnsName -name $fqdn -server $server)[0].Name
        (Resolve-DnsName -name $fqdn -server $server).IP4Address
    } elseif ( $argc -eq 3 ) {
        $fqdn = $name -Replace('https?://|s?ftps?://','') -Replace('/.*$','')
        if ( $type -eq &quot;-4&quot; ) {
            $type = &quot;A&quot;
        } elseif ( $type -eq &quot;-6&quot; ) {
            $type = &quot;AAAA&quot;
        } else {
            $type = &quot;A_AAAA&quot;
        }
        (Resolve-DnsName -type $type -name $fqdn -server $server)[0].Name
        (Resolve-DnsName -type $type -name $fqdn -server $server).IP4Address
    } else {
        Write-Warning &quot;=&gt; Not supported for the moment.&quot;
    }
}
</code></pre>
<p>I tried to fetch the value of <code>argc</code> C equivalent.</p>
<p>So I tried <code>$args.Count</code> but it always return <code>0</code> from inside my function.</p>
<p>Can you help me ?</p>
","1","Question"
"79476715","","<p>I am working with curried functions in TypeScript, and I want to figure out a way to automatically detect if a function is curried and, if it is, decurry it into a non-curried function.</p>
<p>Problem:</p>
<ul>
<li>A curried function is a function that takes arguments one at a time and returns a new function for each argument.</li>
<li>I need a method to detect whether a function is curried (i.e., returns a function when called with one argument), and if it is, I want to decurry it into a function that can accept all arguments at once.</li>
</ul>
<p>For example, given the following curried function:<br><br>
FROM</p>
<pre><code>const curriedAdd = (a: number) =&gt; (b: number) =&gt; (c: number) =&gt; a + b + c;
</code></pre>
<p>TO</p>
<pre><code>const add = (a: number, b: number, c: number) =&gt; a + b + c;
</code></pre>
<p>I’ve experimented with some basic heuristics to detect currying, such as calling the function with one argument and checking if the result is another function. However, I’m unsure how to automatically decurry a function at runtime. Specifically, I’m struggling with how to handle functions that take multiple arguments or have a more complex curried structure. I've tried seeking help from AI also but unfortunately it keeps responding with total non-sense that doesn't work.</p>
<ul>
<li>I need this solution to work for simple curried functions as well as more complex ones (if possible).</li>
<li>I am aware of currying and decurrying techniques, but I’m specifically looking for a runtime solution that works in TypeScript.</li>
</ul>
","1","Question"
"79478003","","<p>Google sheets workbook and Apps Script- How can I add more than one Apps Script function to my workbook? I added 'AddColumn' for adding column to 1 sheet and it adds this column to all other sheets, success. I tried to add 'MainSheet' apps script but it removed/replaced the Add Columns function.</p>
","0","Question"
"79478673","","<p>I'm working on a class project to build a drawing app using p5.js. One of my features is a tool to draw different shapes and includes using a dropdown menu to select a shape to draw to the canvas. I'm using the createSelect() function to build the menu. It works fine and draws each shape option when used outside the draw function, but this means the dropdown menu is visible even when the shape tool isn't selected. (Not allowed)</p>
<p>If I hide the createSelect within its own function and call that in the draw function, it hides the dropdown, but not will not select any option other than the default and no longer draws any of the shapes. I've been staring at this for hours and can't figure out where I went wrong. The console isn't showing any errors when I try to draw or select a different shape. Does anyone have any advice on where to start fixing this? Or what I'm missing?</p>
<p>Any help is greatly appreciated!</p>
<p>(I'm sorry for my messy code. I usually don't bother cleaning up until I get something finished. I also think this text editor added extra comments? This is my first post...)</p>
<pre><code>   //Draws various shapes to canvas based on user selections

function drawShapesTool(){
//set an icon and a name for the object
this.icon = &quot;assets/shapes.jpg&quot;;
this.name = &quot;shapes&quot;;


var previousMouseX = -1;
var previousMouseY = -1;
var w;
var h;
var shapeOptions = [&quot;rectangle&quot;, &quot;circle&quot;, &quot;triangle&quot;, &quot;rhombus&quot;];
var selectedShape;     
var shapeSelect;

//Adapted from mirrorDrawTool and p5.js library 
this.shapePicker = function(){
    shapeSelect = createSelect();
    shapeSelect.position(350, 700);    
   
    shapeSelect.option('rectangle');
    shapeSelect.option('circle');
    shapeSelect.option('triangle');
    shapeSelect.option('rhombus');

   shapeSelect.selected('rectangle');
 };

this.draw = function(){
//      this.shapePicker();
    var shapeSelect = createSelect();
    shapeSelect.position(350, 700);    
   
    shapeSelect.option('rectangle');
    shapeSelect.option('circle');
    shapeSelect.option('triangle');
    shapeSelect.option('rhombus');

//       shapeSelect.selected('rectangle');
  selectedShape = shapeSelect.value();
  var drawRect = function(){
      rect(previousMouseX,previousMouseY, w, h);
  }
  var drawCircle = function(){
      ellipse (previousMouseX, previousMouseY, Math.max(w, h) * 1.5);
  }
        var drawTri = function(){
           triangle(mouseX, mouseY - h, mouseX - w, mouseY + h, mouseX + w, mouseY +h);                
        }
        var drawRhom = function(){
         quad(mouseX, mouseY, w / 2, h / 2, previousMouseX,previousMouseY, w * 0.5, h);                
        }
    
  if(mouseIsPressed){
      if (previousMouseX == -1 &amp;&amp; previousMouseY == -1){
          previousMouseX = mouseX;
          previousMouseY = mouseY;
      }
      else {
        w = mouseX - previousMouseX;
        h = mouseY - previousMouseY;
        updatePixels();
            
          if (selectedShape == 'rectangle'){
              drawRect();
          }
          else if (selectedShape == 'circle'){
              drawCircle();
          }
          else if (selectedShape == 'triangle'){
              drawTri();
          }
          else if (selectedShape == 'rhombus') {
              drawRhom();
          }
      }
  }
    else {
      previousMouseX = -1;
      previousMouseY = -1;
      loadPixels();
    }              
 };

}
</code></pre>
","2","Question"
"79478942","","<p>I would like to implement a <code>CHECK()</code> function that can work like this:</p>
<pre class=""lang-cpp prettyprint-override""><code>int a = 1;
int b = 2;
int c = 1;

CHECK(a == b) &lt;&lt; &quot;check failed&quot; &lt;&lt; endl; // this will abort the program and print &quot;check failed&quot;
CHECK(a == c) &lt;&lt; &quot;check failed&quot; &lt;&lt; endl; // this will do nothing since CHECK is valid
</code></pre>
<p>I do not know how could I abort the program but still print out something. Do you know how to implement some function that works like this?</p>
","2","Question"
"79479061","","<p>One of my functions in my function app is throwing an exception after it is upgraded to run on Java runtime 11.</p>
<p>The function works as designed, and completes the whole flow it is built to.</p>
<pre><code>Error building configuration in an external startup class. One or more loaded extensions do not meet the minimum requirements. For more information see https://aka.ms/func-min-extension-versions.
ExtensionStartupType AzureStorageWebJobsStartup from assembly 'Microsoft.Azure.WebJobs.Extensions.Storage, Version=3.0.4.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' does not meet the required minimum version of 4.0.4.0. Update your NuGet package reference for Microsoft.Azure.WebJobs.Extensions.Storage to 4.0.4 or later.
</code></pre>
<p>The exception is not occurring consistently.</p>
<p>It is a Java project built with Maven and all necessary dependency is updated to the latest</p>
<pre><code>version.
        &lt;dependency&gt;
            &lt;groupId&gt;com.microsoft.azure.functions&lt;/groupId&gt;
            &lt;artifactId&gt;azure-functions-java-library&lt;/artifactId&gt;
            &lt;version&gt;3.1.0&lt;/version&gt;
        &lt;/dependency&gt;
</code></pre>
<p>Since the exception contains the following message
<em>Maven dependency is identically  with the NuGet package reference for Microsoft.Azure.WebJobs.Extensions.Storage to 4.0.4.</em></p>
<p>I have already tried with the following maven dependency since it is a Java Project,</p>
<pre><code>   &lt;!-- https://mvnrepository.com/artifact/com.microsoft.azure/azure-storage --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;
        &lt;artifactId&gt;azure-storage&lt;/artifactId&gt;
        &lt;version&gt;5.1.0&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>
<p>But it results in error 500 internal server error:</p>
","0","Question"
"79479639","","<p>I am creating this very simple function in Oracle 23ai using the client SQLPro for Oracle, which is not being compiled due to errors.</p>
<pre><code>create or replace function test_func (data1 varchar2, data2 varchar2)
return varchar2
is
    data3 varchar2(200);
begin
    data3 := data1||data2;
    return data3;
end;
/
</code></pre>
<p>The error:</p>
<pre><code>Statement completed successfully. 0.211 seconds. (Line 1).
ORA-06550: line 2, column 2:
PLS-00201: identifier 'DATA3' must be declared
ORA-06550: line 2, column 2:
PL/SQL: Statement ignored
ORA-06550: line 3, column 2:
PLS-00372: In a procedure, RETURN statement cannot contain an expression
ORA-06550: line 3, column 2:
PL/SQL: Statement ignored. 0.028 seconds. (Line 5).
</code></pre>
<p>I have follow the guidance of the Oracle documentation and internet samples but it remains a puzzle. Thank you for your help.</p>
","0","Question"
"79479831","","<p>I have a column in a table that has values like below and I'd like to get the numeric value after the keyword APP and before the next space after <code>APP*</code>.  Thanks so much in advance!</p>
<pre><code>Data Service B2B **APP#1234** Rehearsal 03/01/2025
Office 365 **APP 23456** for project 123
Office 365 **APP555** for project 123
</code></pre>
<ul>
<li>Desired output for line 1: <code>1234</code></li>
<li>Desired output for line 2: <code>23456</code></li>
<li>Desired output for line 3: <code>555</code></li>
</ul>
<p>I am using the following function from this website:  <a href=""https://blog.sqlauthority.com/2008/10/14/sql-server-get-numeric-value-from-alpha-numeric-string-udf-for-get-numeric-numbers-only/"" rel=""nofollow noreferrer"">https://blog.sqlauthority.com/2008/10/14/sql-server-get-numeric-value-from-alpha-numeric-string-udf-for-get-numeric-numbers-only/</a></p>
<p>For #2 (<code>Data Service B2B APP#1234 Rehearsal 03/01/2025</code>) above, it output 2 from B2B as well.</p>
<pre><code>CREATE FUNCTION dbo.udf_GetNumeric
    (@strAlphaNumeric VARCHAR(256))
RETURNS VARCHAR(256)
AS
BEGIN
    DECLARE @intAlpha INT
    SET @intAlpha = PATINDEX('%[^0-9]%', @strAlphaNumeric)

    BEGIN
        WHILE @intAlpha &gt; 0 
        BEGIN
            SET @strAlphaNumeric = STUFF(@strAlphaNumeric, @intAlpha, 1, '' )
            SET @intAlpha = PATINDEX('%[^0-9]%', @strAlphaNumeric )
        END
    END

    RETURN ISNULL(@strAlphaNumeric,0)
END
</code></pre>
","1","Question"
"79483505","","<p>It's a simple if greater than, then make it the value of BigHigh/BigLow, however it does not return successfully to main for the printout of the respective data. Instead, the printout reads 0 for both functions. Any tips on where I go wrong?</p>
<pre><code>#include&lt;iostream&gt;
using namespace std;

double getData(double tempmatrix[][2], double BigHigh, double BigLow) {

    for(int x=0;x&lt;12;++x) {
            cout &lt;&lt; &quot;Enter the highest temperature for Month &quot; &lt;&lt; x+1 &lt;&lt; &quot;: &quot;;
            cin &gt;&gt; tempmatrix[x][0];
            
            if(tempmatrix[x][0] &gt; BigHigh) {
                BigHigh = tempmatrix[x][0];
                }
            
            cout &lt;&lt; &quot;Enter the lowest temperature for Month &quot; &lt;&lt; x+1 &lt;&lt; &quot;: &quot;;
            cin &gt;&gt; tempmatrix[x][1];
            
            if(tempmatrix[x][1] &gt; BigLow) {
                BigLow = tempmatrix[x][1];
                }
            }
return BigHigh, BigLow;
}

double indexHighTemp(double BigHigh) {
    cout &lt;&lt; &quot;\nHighest recorded temperature (according to you) was: &quot; &lt;&lt; BigHigh &lt;&lt; endl;
}

double indexLowTemp(double BigLow) {
    cout &lt;&lt; &quot;\nLowest recorded temperature (according to you) was: &quot; &lt;&lt; BigLow &lt;&lt; endl;
}

main () {
double tempmatrix[12][2];
double BigHigh = 0, BigLow = 0;

getData(tempmatrix, BigHigh, BigLow);
indexHighTemp(BigHigh);
indexLowTemp(BigLow);

return 0;
}
</code></pre>
<p>I tried float and double as data types to no avail, I'm completely stumped at this point.</p>
","-5","Question"
"79484514","","<p>I am trying to develop or apply a built-in function for the <code>OnSelect</code>  property of a button to let the user press on it and automatically export a screenshot of the powerapps canvas app to a powerpoint slide.</p>
<p>Currently, the user needs to take a screenshot through windows snipping tool and copy and paste the image manually to powerpoint.</p>
<p>Is there any way to automate this process?</p>
","0","Question"
"79486294","","<p>I implemented something like this:</p>
<pre><code>   template&lt;typename F, typename... Args&gt;
    static auto run_func(F&amp;&amp; f, const string&amp; msg, Args&amp;&amp;... args) -&gt; decltype(f(args...)) {
        using T = decltype(f(args...));
        cout &lt;&lt; msg &lt;&lt; endl;
        auto timer = Timer(); // something that can record time


        auto res = std::invoke(f, args...); // here is the position of failure 
        cout &lt;&lt; &quot;\t- time used: &quot; &lt;&lt; timer.time_duration() &lt;&lt; endl;

        return res;
    }
</code></pre>
<p>This works as what I want it to work only if <code>f</code> is not <code>void f(...)</code>:</p>
<pre><code>    int func1(a, b) {return a + b;} 
    void func2(a, b, c) {cout &lt;&lt; a + b + c &lt;&lt; endl;} 
    
    cout &lt;&lt; run_func(func1, 1, 2); // this works
    run_func(func2, 2, 3, 4); // this fails
</code></pre>
<p>Do you know how could I make this <code>run_func</code> work in all manners?</p>
","3","Question"
"79487186","","<p>I've been writing some tests for the arithmetic of complex numbers.</p>
<p>I've tried to write them in a way where I don't have to rewrite a code section for each operator. I am trying to store <code>std::complex</code> overloaded operators such as <code>operator+</code>, <code>operator+=</code>, <code>operator-</code>, <code>operator-=</code> in a <code>std::function</code> variable. The reason why I need the <code>std::complex</code> operators is because I need to check them against my own implementation of complex numbers.</p>
<p>However, I can't get it to work, mostly because there seems to be a mismatch between the type of the variable (<code>std::function</code>) and the type of the value (<code>std::complex</code> operators). How should I write the code so that I can store these operator functions in a <code>std::function</code> variable?</p>
<p>This is my attempt, but alas it doesn't work:</p>
<pre class=""lang-cpp prettyprint-override""><code>std::function&lt;void(std::complex&lt;double&gt;&amp;, const std::complex&lt;double&gt;&amp;)&gt; var = 
                                               &amp;std::complex&lt;double&gt;::operator+=;
</code></pre>
","4","Question"
"79496550","","<p>I have a large form with radio buttons. I want to be able to click on a button and change its setting in the database using ajax. I initially coded it to use onclick and it all worked except that the buttons appearance wasn't changed. I found here that I should use the on method. I added that and the click is being recognized but I have to get the ID and the type of button clicked in order to change the database and I can't figure out how to get those. So, for example, in my code below if the first button is clicked on, I need to get the id of 1 and the type of &quot;wh-active&quot;. My jsfiddle is <a href=""https://jsfiddle.net/user3052443/9cavsx86/3/"" rel=""nofollow noreferrer"">here</a> but it is not working for some reason, though the code does work on my computer. Would someone explain how to do this, please?</p>
<pre><code>    &lt;link rel=&quot;stylesheet&quot; href=&quot;//use.fontawesome.com/releases/v6.7.2/css/all.css&quot;&gt;

    &lt;div&gt;
    &lt;div class=&quot;wh-loc&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;wh-active&quot;&gt;&lt;i id=&quot;1&quot; class=&quot;fa-solid fa-circle fa-on&quot;&gt;&lt;/i&gt;&lt;/div&gt;  
    &lt;div class=&quot;wh-name&quot;&gt;&lt;i id=&quot;2&quot; class=&quot;fa-solid fa-circle fa-on&quot;&gt;&lt;/i&gt;&lt;/div&gt;  
    &lt;div class=&quot;wh-address&quot;&gt;&lt;i id=&quot;3&quot; class=&quot;fa-solid fa-circle fa-on&quot;&gt;&lt;/i&gt;&lt;/div&gt;  
    &lt;/div&gt;

    &lt;script&gt;
    $(document).on('click', function() {
      var oldstatus = ($(this).hasClass(&quot;fa-on&quot;) ? 'fa-on' : 'fa-off');
      var id = $(this).attr('id');
      console.log('status '+oldstatus+' id '+id);
    });
    &lt;/script&gt;
</code></pre>
","1","Question"
"79504095","","<p>I am currently building a program that allows the user to play rock-paper-scissors against the computer through the console log. The goal is for the game to terminate after five rounds.</p>
<p>I was able to set up one round of the game, but I am struggling to loop it. The for loop is in line 14 of the code.</p>
<p>I have tried placing <code>getComputerChoice()</code> and <code>getHumanChoice()</code> both inside and outside the for loop and outside of <code>playGame()</code>. I was expecting the game to ask for user input, display console message with a winner and increment the round winner's score, then repeat four more times before terminating and displaying a console message with the overall winner.</p>
<p>Instead, after accepting user input, no message displays in the console. There is also no error or warning to indicate issues with the code.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function playGame() {
  var humanScore = 0;
  var computerScore = 0;

  for (let i = 0; i &lt; 5; i++) {
    function getComputerChoice() {
      let result = Math.ceil(Math.random() * 3);
      if (result === 1) {
        return ""rock"";
      } else if (result === 2) {
        return ""paper"";
      } else {
        return ""scissors""
      }
    }

    const computerChoice = getComputerChoice();

    function getHumanChoice() {
      let humanResult = prompt(""Let's play Rock, Paper, Scissors! Enter your choice:"");
      if (humanResult.toLowerCase() === ""rock"") {
        return ""rock"";
      } else if (humanResult.toLowerCase() === ""paper"") {
        return ""paper"";
      } else if (humanResult.toLowerCase() === ""scissors"") {
        return ""scissors"";
      } else {
        return ""to not follow the rules"";
      }
    };

    const humanChoice = getHumanChoice();

    function playRound(humanChoice, computerChoice) {
      if (humanChoice === ""rock"" &amp;&amp; computerChoice === ""paper"") {
        computerScore++;
        console.log(`Paper beats rock! AI wins! AI:${computerScore} Human:${humanScore}`);
      } else if (humanChoice === ""rock"" &amp;&amp; computerChoice === ""scissors"") {
        humanScore++;
        console.log(`Rock beats scissors! You win! AI:${computerScore} Human:${humanScore}`);
      } else if (humanChoice == ""rock"" &amp;&amp; computerChoice === ""rock"") {
        console.log(""Y'all both picked rock! Let's try again!"");
      } else if (humanChoice === ""paper"" &amp;&amp; computerChoice === ""scissors"") {
        computerScore++;
        console.log(`Scissors beats paper! AI wins! AI:${computerScore} Human:${humanScore}`);
      } else if (humanChoice === ""paper"" &amp;&amp; computerChoice === ""rock"") {
        humanScore++;
        console.log(`Paper beats rock! You win! AI:${computerScore} Human:${humanScore}`);
      } else if (humanChoice === ""paper"" &amp;&amp; computerChoice === ""paper"") {
        console.log(""Y'all both picked paper! Let's try again!"");
      } else if (humanChoice === ""scissors"" &amp;&amp; computerChoice === ""scissors"") {
        console.log(""Y'all both picked scissors! Let's try again!"");
      } else if (humanChoice === ""scissors"" &amp;&amp; computerChoice === ""rock"") {
        computerScore++;
        console.log(`Rock beats scissors! AI wins! AI:${computerScore} Human:${humanScore}`);
      } else if (humanChoice === ""scissors"" &amp;&amp; computerChoice === ""paper"") {
        humanScore++;
        console.log(`Scissors beats paper! You win! AI:${computerScore} Human:${humanScore}`);
      } else {
        console.log(""Try again! That's not a choice."");
      }
    }
  }
};

playGame();</code></pre>
</div>
</div>
</p>
","0","Question"
"79505132","","<p>On this table i have a column that features all hashtags i used per post, as for example, cell E2 has 30 hashtags, cell E3 another 30 hashtags and so on untill i reach cell E254. I want to count how many times a specific hashtag it appears on column HASHTAGS. What is the best Google Sheets function to apply this?</p>
<p>Example:
E2 - #maisonvalentina #luxuryhouses #luxurybathroom #dreambathroom #bathtub #vanitycabinet #luxurymirror #inspiration #decorinspo #dailyinspo #london #londonliving #timelesselegance #dreambath #signaturedesign #moderndesign #timeout #archdaily #residential #resortdesign #wooden #marble #homesociety #homesocietystudio #luxuryhouses #homesocietycollection #homeinspirationideas #covetgroup #insplosion #luxxu</p>
<p>E3 - #maisonvalentina #luxurybathroom # #luxuryhomes #bathtub #sidetable #inspiration # #dailyinspo #unitedarabemirates #abudhabidesign #timelesselegance #dreambath #signaturedesign #moderndesign # #timeout #elledecor #residential #resortdesign #marblebathroom #marble #homesociety #homesocietystudio #homesocietycollection #homeinspirationideas #covetgroup #luxuryhomes #insplosion #brabbu</p>
<p>After delete duplicates i want to have a final count of how many times it shows:
#maisonvalentina
#luxurybathroom
(and so on...)</p>
<p>Thank you in advance</p>
<p>I tried some functions like:</p>
<p>=SUM(ArrayFormula((LEN(E2:E255) - LEN(SUBSTITUTE(E2:E255, &quot;#luxury&quot;, &quot;&quot;))) / LEN(&quot;#luxury&quot;)))</p>
<p>=ARRAYFORMULA(IF(U2:U=&quot;&quot;, &quot;&quot;, SUM((LEN(E$2:E$255) - LEN(SUBSTITUTE(E$2:E$255, U2:U, &quot;&quot;))) / LEN(U2:U))))</p>
<p>But none of those worked</p>
","-6","Question"
"79512758","","<p>I need to make a function that returns a sentence with variables in it. But how do I exclude all the special string characters that I don't need? (e.g. <code>(</code> or <code>,</code> or <code>'</code>)</p>
<pre><code>ef area_of_triangle( bottom, height ):
    area = 0.5 * bottom * height
    return 'The area of a triangle with a bottom of', bottom, 'and a height of', height, 'is', area, '.'
</code></pre>
<p>this is my code for now but, the output always includes brackets, commas and apostrophes.</p>
<p>So when i do: <code>print(area_of_triangle(2, 1))</code></p>
<p>the output is: <code>('The area of a triangle with a bottom of', 2.0, 'and a height of', 1.0, 'is', 1.0, '.') </code></p>
<p>instead of: <code>The area of a triangle with a bottom of 2.0 and a height of 1.0 is 1.0.</code></p>
<p>How do i fix this?</p>
","-5","Question"
"79516990","","<p>For a particular JAX function <code>func</code>, one can define non-differentiable arguments by using the decorator <code>@partial(jax.custom_jvp, nondiff_argnums=...)</code>. However, in order to make it work, one must also explicitly define the differentiation rules in a custom <code>jvp</code> function by using the decorator <code>@func.defjvp</code>. I'm wondering if there is a generic way to define non-differentiable arguments for any given <code>func</code>, without defining a custom <code>jvp</code> (or <code>vjp</code>) function? This will be useful when the differentiation rules are too complicated to write out.</p>
","1","Question"
"79517971","","<p>I need to find a way to write an independent routine to add a particular constraint to a minimization problem in solnl()</p>
<p>With a concrete example, one has this</p>
<pre><code>##### for optimization
library(MASS)
library(NlcOptim)

##############################

###objective function to minimize

objfun=function(x){
return(x[1]^2+x[2]^2+1)  
}

### our initial constraint to be improved

constraint = function(x){
f = NULL
f = rbind(f, x[2] - 2)

return(list(ceq = f, c= NULL))

}

#### solve now
x0 = c(1,1)
solnl(x0,objfun=objfun,confun=constraint)
</code></pre>
<p>Say that we want to add the new constraint</p>
<pre><code>h(x) = x[1] - 1
</code></pre>
<p>which makes the problem easy to solve.</p>
<p>I would like to have a function named add_constraint(h) that would generate the same usable output as</p>
<pre><code>constraint = function(x){
 f = NULL
 f = rbind(f, x[2] - 2)
 f = rbind(f,x[1] - 1 )
 return(list(ceq = f, c= NULL))

}
</code></pre>
<p>I have tried the following without success</p>
<pre><code>f = paste0(&quot;x[1] - 1&quot;)
h = paste0(&quot;x[2] - 2&quot;)

local = rbind(f,h)

# then the routine
add_constraint = function(local){

 function(x){
  f= NULL
  for( i in 1:2)
  f = rbind(f, local[i])
  return(list(ceq=f, c= NULL))
  }
 }

 constraint = add_constraint(local)
</code></pre>
","2","Question"
"79521678","","<p>Here is a piece of code from the book “Learn You a Haskell for Great Good!” by Miran Lipovača:</p>
<pre><code>addStuff :: Int -&gt; Int
addStuff = do
    a &lt;- (*2)
    b &lt;- (+10)
    return (a+b)
</code></pre>
<p>What is bound to the parameter <code>b</code> in the expression <code>b &lt;- (+10)</code> in the do-expression? If it were a value like <code>Just 7</code> or <code>[7]</code>, the seven would get bound; if it were a call of <code>getLine</code>, then it would be a string. What about functions? Or is it incorrect to view such instructions with functions in terms of extracting and wrapping something? And a more general question. If monadic values are values with context, then what is considered the context in the case of functions?</p>
","3","Question"
"79524371","","<p>I am currently trying to code a circle that moves once I run a function. Here is my code:</p>
<pre><code>function move(element, direction, distance = 20, duration = 1000) { //the move function
    var topOrLeft = (direction == &quot;left&quot; || direction == &quot;right&quot;) ? &quot;left&quot; : &quot;top&quot;;
    var isNegated = (direction == &quot;up&quot; || direction == &quot;left&quot;);
    if (isNegated) { distance *= -1; }
    var elStyle = window.getComputedStyle(element);
    var value = elStyle.getPropertyValue(topOrLeft).replace(&quot;px&quot;, &quot;&quot;);
    var destination = Number(value) + distance;
    var frameDistance = distance / (duration / 10);
    function moveAFrame() {
        elStyle = window.getComputedStyle(element);
        value = elStyle.getPropertyValue(topOrLeft).replace(&quot;px&quot;, &quot;&quot;);
        var newLocation = Number(value) + frameDistance;
        var beyondDestination = ((!isNegated &amp;&amp; newLocation &gt;= destination) || (isNegated &amp;&amp; newLocation &lt;= destination));
        if (beyondDestination) {
            element.style[topOrLeft] = destination + &quot;px&quot;;
            clearInterval(movingFrames);
        }
        else {
            element.style[topOrLeft] = newLocation + &quot;px&quot;;
        }
    }
    var movingFrames = setInterval(moveAFrame, 10);
}

function draw() //draws the circle
{
    var canvas = document.getElementById('circle');
    if (canvas.getContext) {
        var ctx = canvas.getContext('2d');
        var X = canvas.width / 2;
        var Y = canvas.height / 2;
        var R = 400;
        ctx.beginPath();
        ctx.arc(X, Y, R, 0, 2 * Math.PI, false);
        ctx.lineWidth = 3;
        ctx.strokeStyle = '#000000';
        ctx.stroke();
    }
}
move(circle, &quot;right&quot;, 20, 200) //move function
    
</code></pre>
<p>As you can see in the code, i first drew the circle (works) and made a function that moves the circle. However, when i run the function the circle does not move. Please help thanks</p>
","1","Question"
"79525693","","<p>This is my uni homework but I am currently stuck. We have to incorporate several different functions in our code in order to learn about lists in C++.
We didn't use so many libraries yet, that's why we have to keep it simple.
The code ran well until I wanted to delete the first element of my list. I think the mistake is that head gets 'lost' after running the remove function and I am helpless. When I change the function to deleting the second element of the list, everything works fine, just the first element just won't work. Maybe you can help me finding the mistake.</p>
<pre><code>#include &lt;iostream&gt;
using namespace std;

struct lelem
{
    int data;
    lelem* next;
};

void print (lelem* head)
{
    if (head == nullptr)
    {
        cout &lt;&lt; &quot;Liste ist leer.&quot; &lt;&lt; endl;
        return;
    }
    
    while (head)
    {
        cout &lt;&lt; head-&gt;data &lt;&lt; &quot; ,&quot;;
        head = head-&gt;next;
    }
    return;
}

int size (lelem* head)
{
    int size = 0;
    
    while (head)
    {
        size ++;
        head = head-&gt;next;
    }
    return size;
}

void insert_back(lelem*&amp; head, int e)
{
    if (!head)
    {
        head = new lelem;
        head-&gt;data = e;
        head-&gt;next = nullptr;
        return;
    }
    lelem* tmp = head;
    
    while (tmp-&gt;next)
    {
        tmp = tmp-&gt;next;
    }
    
    lelem* neu = new lelem;
    neu-&gt;data = e;
    neu-&gt;next = nullptr;
    tmp-&gt;next = neu;
    return;
}

void insert_sort(lelem* &amp;head, int d)
{
    lelem* neu = new lelem;
    neu-&gt;data = d;
    
    if (!head || d &lt; head-&gt;data)
    {
        neu-&gt;next = head;
        head = neu;
        return;
    }
    
    lelem* tmp = head;
    
    while (tmp-&gt;next)
    {
        if (d &lt; tmp-&gt;next-&gt;data)
        {
            neu-&gt;next = tmp-&gt;next;
            tmp-&gt;next = neu;
            return;
        }
        tmp = tmp-&gt;next;
    }
}

void remove (lelem* &amp;head)
{
    lelem* loesch = head;
    head = head-&gt;next;
    delete loesch;
    return;
}

int main ()
{
    lelem* const start = new lelem;
    lelem* head = start;
    
    int* anz = new int;
    
    cout &lt;&lt; &quot;Anzahl der Listenelemtete eigeben: &quot;;
    cin &gt;&gt; *anz;
    
    for (int i=0; i&lt;*anz; i++)
    {
        head-&gt;data = i+1;
        if(i&lt;*anz-1)
        {
            head-&gt;next = new lelem;
            head = head-&gt;next;
        }
        else
        {
            head-&gt;next = nullptr;
        }
    }
    
    head = start;
    print (head);
    
    head = start;
    cout &lt;&lt; &quot;Liste hat &quot; &lt;&lt; size(head) &lt;&lt; &quot; Elemente.&quot; &lt;&lt; endl;
    
    head = start;
    cout &lt;&lt; &quot;Sortiertes einfügen des Wertes 5&quot; &lt;&lt; endl;

    insert_sort(head, 5);
    
    head = start;
    print (head);
    
    head=start;
    remove(head);
    
    head = start;
    print (head);
    
    return 0;
}
</code></pre>
","-1","Question"
"79534957","","<p>If I have a text-based game, and I transition through game states by calling a function corresponding to each game state like the following</p>
<pre><code>def go_to_lobby(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The start of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    print(&quot;You are in the lobby of the dungeon. What do you do?&quot;)
    print(&quot;1. Examine the lobby.&quot;)
    print(&quot;2. Go to the throne hall.&quot;)
    print(&quot;3. Leave.&quot;)
    option = int(input())
    if option==1:
        examine_lobby(gold_coins)
    elif option==2:
        go_to_throne_hall(gold_coins)
    else:
        leave(gold_coins)

def examine_lobby(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The user examines the lobby &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    rob_amount = 10
    print(&quot;A band of goblins rob &quot; + str(rob_amount) + &quot; gold from you.&quot;)
    gold_coins-=rob_amount
    go_to_lobby(gold_coins)

def leave(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The end of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    if gold_coins&lt;0:
        go_to_kitchen(gold_coins)
    else:    
        print(&quot;You leave the dungeon.&quot;)

def go_to_throne_hall(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The middle of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    print(&quot;You are in the throne hall. What do you do?&quot;)
    print(&quot;1. Examine the throne hall.&quot;)
    print(&quot;2. Go back to the lobby.&quot;)
    option = int(input())
    if option==1:
        examine_throne_hall(gold_coins)
    else:
        go_to_lobby(gold_coins)

def examine_throne_hall(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The user examines the throne hall &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    rob_amount = 40
    print(&quot;You disturb the dungeon keeper who makes you pay &quot; + str(rob_amount) + &quot; gold.&quot;)
    gold_coins-=rob_amount
    go_to_throne_hall(gold_coins)

def print_gold_amount(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; Prints to the user their current amount of gold &quot;&quot;&quot;
    print(&quot;You have &quot; + str(gold_coins) + &quot; gold.&quot;)

def go_to_kitchen(gold_coins: int) -&gt; None:
    print_gold_amount(gold_coins)
    print(&quot;You are in the kitchen. What do you do?&quot;)
    print(&quot;1. Wash the dishes to earn money.&quot;)
    print(&quot;2. Enter the dungeon and go back to the lobby.&quot;)
    option = int(input())
    if option==1:
        print(&quot;You washed the dishes and earnt a coin!&quot;)
        go_to_kitchen(gold_coins)
    else:
        if gold_coins&lt;0:
            go_to_lobby(gold_coins-10)
        else:
            go_to_lobby(gold_coins)

go_to_lobby(50)
</code></pre>
<p>It will be memory inefficient (I think) because each function has to remember where it was when I started the new one. However this memory will never be useful to me because I am never going to return. Is there a way to make this approach memory efficient in Python or is it inherently going to have the memory issue? (I'm aware of how I could fix this issue, but I am wondering if there's a solution that still allows me to operate by jumping between functions, Python has a good garbage collector system so I thought there might be some way to do it.)</p>
","2","Question"
"79538078","","<p>I’m developing an Android chat assistant app, which can convert an user query to tool calls by invoking a backend service API on cloud. In my case, many tools must be run on mobile client side (i.e. on Android OS), and some of them are time-consuming, e.g. switching Bluetooth on/off, setting an alarm, making a phone call to somebody on behalf of user, etc. That means the problem is, agents on cloud must trigger a tool call running on mobile client side.</p>
<p>Is MCP server applicable for implement those tools running on mobile client side?
In my opinion, the answer is NO. It's not a good idea to start a http server on mobile phone, because it is power-consuming, vulnerable, and also mobile network is unstable.</p>
<p>If not applicable, what is the best way to call tools on mobile side from cloud side?
The only way I can think of is, forwarding LLM output of <code>response.choices.message.tool_calls</code> to mobile client side, then client parses the function name and arguments to invoke the tool.</p>
","0","Question"
"79545959","","<p>I'm trying to debug my azure functions (Python) in VS Code for macOS. Everything was working fine until last week when I started getting this error when trying to debug using 'Attach to Python functions'</p>
<p>Reverting my code to older commits (where it was definitively working) did not help. I also re-installed VS Code, still getting the error.</p>
<p><strong>Building into a docker container and running the container works</strong>, it's just the debugging in VS Code that does not work.</p>
<pre><code>[2025-03-31T09:40:13.208Z] A host error has occurred during startup operation 'fea6e68a-2e7f-43ca-b8e4-3e32814d60fa'.
[2025-03-31T09:40:13.208Z] System.Private.CoreLib: Exception has been thrown by the target of an invocation. Could not load file or assembly 'System.Memory.Data, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.
[2025-03-31T09:40:13.208Z] .
Value cannot be null. (Parameter 'provider')
[2025-03-31T09:40:13.233Z] Host startup operation has been canceled
</code></pre>
<p>I'd be grateful for any hints on how to fix this</p>
<p>UPDATE:
After a month, this problem keeps appearing and disappearing with no obvious reason or cause. I successfully started a function half an hour ago, while now after restarting VS Code, it throws this exact error. Any help is appreciated.</p>
","2","Question"
"79548710","","<p>I use Advanced Hunting in Defender XDR and regular look at the EmailEvents table.  I often do something like this:</p>
<pre><code>EmailEvents
| where Subject == &quot;test email for Stackoverflow question&quot;
| extend SPF = parse_json(AuthenticationDetails).SPF
| extend DKIM = parse_json(AuthenticationDetails).DKIM
| extend DMARC = parse_json(AuthenticationDetails).DMARC
| project-reorder Timestamp, Subject, SenderFromAddress, RecipientEmailAddress, LatestDeliveryLocation, DeliveryLocation, ThreatTypes, SPF, DKIM, DMARC
</code></pre>
<p>What I would like to do is save all the lines starting from &quot;<code>| extend</code>&quot; and including the line &quot;<code>| project-reorder...</code>&quot;, so that I can reuse them often, like a user-defined function.  But I am struggling with how to define the function.</p>
<p>I think I would use the wishfully-hoped-for function like this, where &quot;projectEmails&quot; is the name of the function:</p>
<pre><code>let emails = EmailEvents| where Subject == &quot;test email for Stackoverflow question&quot;;
projectEmails(emails)
</code></pre>
<p>I feel like the function needs to be like this but I'm not having a lot of luck, where emlEvt is a parameter saved for the function and is of data type &quot;dynamic&quot;:</p>
<pre><code>{emlEvt} | extend DKIM = parse_json(AuthenticationDetails).DKIM
| extend SPF = parse_json(AuthenticationDetails).SPF
| extend DMARC = parse_json(AuthenticationDetails).DMARC
| project-reorder Timestamp, Subject, SenderFromAddress, RecipientEmailAddress, LatestDeliveryLocation, DeliveryLocation, ThreatTypes, SPF, DKIM, DMARC
</code></pre>
<p>But this does not work.  KQL error for {emlEvt} is &quot;Client parameters are not supported or enabled.(KS213)&quot;.</p>
<p>I've tried a few things, none of them seem to work or make as much sense as what I've shown above.</p>
","0","Question"
"79551262","","<p>I have a question regarding R function syntax. I've noticed that the following function works fine without curly braces <code>{}</code>:</p>
<pre class=""lang-r prettyprint-override""><code>sign_function &lt;- function(x) 
  if (x &gt; 0) &quot;Positive&quot; else if (x &lt; 0) &quot;Negative&quot; else &quot;Zero&quot;
</code></pre>
<p>However I asked the professor and she said it is not right and that I should always add <code>{</code> after <code>sign_function &lt;- function(x) {</code>.
The code above works  though.</p>
<p>A colleague coded the same problem as shown below, so I thought the difference is in the print part.  If I add a <code>print()</code> statement, I need to use <code>{}</code> for it to work correctly:</p>
<pre class=""lang-r prettyprint-override""><code>sign_function &lt;- function(x) {
  if (x &gt; 0) {
    print(&quot;Positive&quot;)
    &quot;Positive&quot;
  } else if (x &lt; 0) {
    print(&quot;Negative&quot;)
    &quot;Negative&quot;
  } else {
    print(&quot;Zero&quot;)
    &quot;Zero&quot;
  }
}
</code></pre>
<ol>
<li>Do I understand correctly that R allows omitting <code>{}</code> when the function consists of a single expression? I'd like to confirm:</li>
<li>Is there an official explanation in R's documentation about this behavior?</li>
<li>Are there any edge cases where omitting <code>{}</code> might cause unexpected behavior?</li>
</ol>
","21","Question"
"79552279","","<p>I try to compare two fields in COBOL after using the intrinsic functions upper-case and trim.</p>
<p>When I compare these two fiels without moving the result into new fields the compare says the fields are equal though they are not, e.g. &quot;Wert1&quot; &lt;&gt; &quot;wert1 x&quot; as in my example.</p>
<p>Why does the compare works as I expect when I use fields but not when I use the intrinsic functions directly?</p>
<p>example program:</p>
<pre class=""lang-none prettyprint-override""><code>       program-id. tintr.
       data division.
       working-storage section.

       01  ws-feld1   pic x(10).
       01  ws-feld2   pic x(10).
       01  ws-feld3   pic x(10).
       01  ws-feld4   pic x(10).

       procedure division.

           move &quot;Wert1 &quot; to ws-feld1
           move &quot;wert1 x&quot; to ws-feld2
      *
           display &quot;&lt;&quot; function upper-case(ws-feld1) &quot;&gt;&quot;
           display &quot;&lt;&quot; function upper-case(ws-feld2) &quot;&gt;&quot;
      *
           display &quot;&lt;&quot; function trim(ws-feld1) &quot;&gt;&quot;
           display &quot;&lt;&quot; function trim(ws-feld2) &quot;&gt;&quot;
      *
           display &quot;&lt;&quot; function upper-case
           (function trim(ws-feld1)) &quot;&gt;&quot;
           display &quot;&lt;&quot; function upper-case
           (function trim (ws-feld2)) &quot;&gt;&quot;
      * Compare WS-Feld1/WS-Feld2
           if ws-feld1 = ws-feld2
           then
              display &quot; felder1-2 identical&quot;
           else
              display &quot; felder1-2 not identical&quot;
           end-if
      * Compare Functions uppercase/Trim
           if function upper-case
           (function trim(ws-feld1))
           =
            function upper-case
           (function trim(ws-feld2))
           then
              display &quot; felder1-2/function identical&quot;
           else
              display &quot; felder1-2/function not identical&quot;
           end-if
      * moving result of functions into field
           move function upper-case
           (function trim(ws-feld1))
           to ws-feld3
           
           move function upper-case
           (function trim(ws-feld2))
           to ws-feld4
      * Compare WS-Feld3/WS-Feld4
           if ws-feld3 = ws-feld4
           then
              display &quot; felder3-4 identical&quot;
           else
              display &quot; felder3-4 not identical&quot;
           end-if
      *

           stop run.

      *
</code></pre>
<p>This is the result:</p>
<pre><code>&lt;WERT1     &gt;
&lt;WERT1 X   &gt;
&lt;Wert1&gt;
&lt;wert1 x&gt;
&lt;WERT1&gt;
&lt;WERT1 X&gt;
felder1-2 not identical
felder1-2/function identical
felder3-4 not identical
</code></pre>
<p>What I didn't expect is the result &quot;felder1-2/function identical&quot;:</p>
<p>Any explanations for this behaviour?</p>
","2","Question"
"79563686","","<p>while running my azure functions, I am getting this exception in startup class. Even after installing this package error persist.
System.IO.FileNotFoundException: 'Could not load file or assembly 'Microsoft.Extensions.Configuration.Abstractions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'. The system cannot find the file specified.'
this is my startup class. Project is using .net8 with v4</p>
<pre><code>#region Dependency
using Microsoft.Azure.Functions.Extensions.DependencyInjection;
#endregion

[assembly: FunctionsStartup(typeof(HROne.Events.FunctionApp.Startup))]
namespace HROne.Events.FunctionApp;

public class Startup : FunctionsStartup
{
public override void Configure(IFunctionsHostBuilder builder)
{
    FunctionsHostBuilderContext context = builder.GetContext();
    builder.Services.RegisterApplicationServices(context.ApplicationRootPath);
}
}
</code></pre>
<p>Below is the .csproj file code</p>
<pre><code>&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;
&lt;PropertyGroup&gt;
&lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;
&lt;AzureFunctionsVersion&gt;v4&lt;/AzureFunctionsVersion&gt;
&lt;/PropertyGroup&gt;
&lt;ItemGroup&gt;
&lt;None Remove=&quot;AzureAppConfigurationMapper.json&quot; /&gt;
&lt;None Remove=&quot;EmailTemplate\CommonNotificationMail.html&quot; /&gt;
&lt;None Remove=&quot;EmailTemplate\DeadLetterInfo.html&quot; /&gt;
&lt;None Remove=&quot;EmailTemplate\TimesheetReminderMail.html&quot; /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;

&lt;Content Include=&quot;EmailTemplate\CommonNotificationMail.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/Content&gt;
&lt;Content Include=&quot;EmailTemplate\DeadLetterInfo.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/Content&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
&lt;Content Include=&quot;AzureAppConfigurationMapper.json&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/Content&gt;
&lt;Content Include=&quot;EmailTemplate\TimesheetReminderMail.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/Content&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
&lt;PackageReference Include=&quot;Azure.Messaging.EventHubs&quot; Version=&quot;5.11.5&quot; /&gt;
&lt;PackageReference Include=&quot;Microsoft.Azure.Functions.Extensions&quot; Version=&quot;1.1.0&quot; /&gt;
&lt;PackageReference Include=&quot;Microsoft.Azure.WebJobs.Extensions.DurableTask&quot; Version=&quot;2.13.5&quot; /&gt;
&lt;PackageReference Include=&quot;Microsoft.Azure.WebJobs.Extensions.ServiceBus&quot; Version=&quot;5.16.4&quot; /&gt;
&lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration.AzureAppConfiguration&quot; Version=&quot;7.3.0&quot; /&gt;
&lt;PackageReference Include=&quot;Microsoft.NET.Sdk.Functions&quot; Version=&quot;4.4.1&quot; /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
&lt;ProjectReference Include=&quot;..\..\HROne.BusinessLayer\HROne.Events.Services\HROne.Events.Services.csproj&quot; /&gt;
&lt;ProjectReference Include=&quot;..\..\HROne.BusinessLayer\HROne.Redis\HROne.Redis.csproj&quot; /&gt;
&lt;ProjectReference Include=&quot;..\..\HROne.BusinessLayer\HROne.Shared.Services\HROne.Shared.Services.csproj&quot; /&gt;
&lt;ProjectReference Include=&quot;..\..\HROne.DataModels\HROne.Events.Models\HROne.Events.Models.csproj&quot; /&gt;
&lt;ProjectReference Include=&quot;..\..\HROne.Repositories\HROne.Events.Repositories\HROne.Events.Repositories.csproj&quot; /&gt;
&lt;ProjectReference Include=&quot;..\..\HROne.Shared\HROne.Common\HROne.Common.csproj&quot; /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
&lt;Using Include=&quot;HROne.Constants&quot; /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
&lt;None Update=&quot;AppSettings.json&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;AppSettings.Test.json&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\ImportException.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\ImportPartial.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\MailTemplateImages\hrone_btn.png&quot;&gt;
&lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\MailTemplateImages\Welcome_header.jpg&quot;&gt;
&lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\NotificationMail.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\SingleSignOnWelcome.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\Welcome.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;EmailTemplate\WelcomeValidationMail.html&quot;&gt;
&lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;host.json&quot;&gt;
&lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
&lt;None Update=&quot;local.settings.json&quot;&gt;
&lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
&lt;CopyToPublishDirectory&gt;Never&lt;/CopyToPublishDirectory&gt;
&lt;/None&gt;
&lt;/ItemGroup&gt;
&lt;Target Name=&quot;PostBuild&quot; AfterTargets=&quot;PostBuildEvent&quot;&gt;
&lt;Exec Command=&quot;xcopy &amp;quot;$(TargetDir)newrelic\*.*&amp;quot; &amp;quot;$(TargetDir)..\newrelic&amp;quot; /Y /I /S&quot; /&gt;
&lt;/Target&gt;
&lt;/Project&gt;
</code></pre>
","0","Question"
"79567065","","<p>trying to make this a minimal reproduction of the problem.  If I run the following code as follows:</p>
<ol>
<li>select client (enter 2)</li>
<li>select client from list (enter 2)</li>
<li>hit return twice</li>
</ol>
<p>The program terminates instead of reprinting the top_menu.</p>
<p>here's the code:</p>
<pre><code>import os
from time import sleep
from pprint import pprint
import json
import traceback

os.chdir(os.path.dirname(__file__))

active_client = {}
flag = True
menus = {
            'top_menu': ['Create Client', 'Select Client'],            
            'select_menu':['dynamic'],
            'action_menu':['Transactions', 'View Portfolio', 'View Transactions'],
            'trans_menu':['Buy', 'Sell', 'Contribution', 'Withdrawal'],
            'port_menu': ['Current Portfolio', 'Portfolio History']            
}
menu_stack = []  # Stack to hold function references

def top_menu():     
    print('enter top')
    pprint(menu_stack)
    
    header =&quot;Equity Portfolio Management System&quot;
    msg = &quot;Select Task : &quot;
    tasks = menus['top_menu']
    
    choice = print_menu(header, msg, tasks, False)  

    if choice == 2:
        print('before')
        menu_stack.append(top_menu)
        print(menu_stack)
        
        select_client()
        print('after')
        pprint(menu_stack)
    elif choice == &quot;&quot;:
        # If return is pressed and we're at the top menu, exit directly
        print(&quot;Exiting...&quot;)
        with open('clients.json', 'w') as json_file:
            json.dump(clients, json_file, indent=4) 
            
        if flag: print(1)
        return
    
        
    if flag: print(2)

    pprint(menu_stack)
    traceback.print_stack()    
    menu_stack.pop()()
   
    return
    
    
    
        


def select_client():
    global active_client
    print('appending')
    #menu_stack.append(top_menu)
    pprint(menu_stack)
    if not clients:
        print(&quot;\nNo clients available. Please create one first.&quot;)
        sleep(2)
        # Pop the current menu and return to the previous menu
        if flag: print(5)
        return  # Go back to the previous menu        
    
    names = []
    for index, client in enumerate(clients, 1):
        names.append(client['first name'] + ' ' + client['last name'])

    header = 'Client Names'
    msg = ' Select client : '

    choice = print_menu(header, msg, names, False)    

    if choice == &quot;&quot;:
        # If return is pressed, go back to the top menu
        if flag: print(6)
        pprint(menu_stack)
        traceback.print_stack()
        return  # Go back to the previous menu
    
    active_client = clients[choice-1]
    action_menu()
    
    if flag: print(7)
    pprint(menu_stack)
    traceback.print_stack()
    return
           
            

def action_menu():
    menu_stack.append(select_client)
    pprint(menu_stack)
    header = 'Actions for ' + active_client['first name'] + ' ' + active_client['last name']
    msg = 'Select Action : '
    tasks = menus['action_menu']    

    choice = print_menu(header, msg, tasks, False) 

    if choice == &quot;&quot;:             
        if flag: print(8) 
        pprint(menu_stack)  
        return  # Go back to select_client if input is empty
    
    
    if flag: print(9)
    return

def print_menu(header, msg, items, header_only):
    
    # Get the terminal width
    terminal_width = os.get_terminal_size().columns

    # Field sizes
    item_no_size = 10
    item_size = 40

    # Calculate the starting position to center the content
    center_padding = ((terminal_width - item_no_size - item_size) // 2 ) 

    # Input validation loop
    
    while True:
        #clear_terminal()


        print(&quot;\n&quot; + &quot;Babson Enterprises&quot;.center(terminal_width))
        print(header.center(terminal_width, &quot;*&quot;))
        print(&quot;*&quot; * terminal_width + &quot;\n&quot;)

        if header_only: return

        print(&quot; &quot; * center_padding + &quot;Task No&quot;.ljust(item_no_size) + &quot;    Task&quot;.ljust(item_size))
        print(&quot; &quot; * center_padding + &quot;-&quot; * (item_no_size + item_size) ) # Print a line underneath the headers        

        # Print tasks with extra spacing
        for index, item_name in enumerate(items):
            print(&quot; &quot; * center_padding + str(index+1).center(item_no_size) + item_name.ljust(item_size))
        print(&quot;\n&quot;)

        return  int_input(&quot; &quot; * center_padding + msg, items)

def int_input(msg, items):
    while True:
        item_selected = input(msg)
        if item_selected == '':
            return ''
        try:
            item_selected = int(item_selected)
            if 1 &lt;= item_selected &lt;= len(items):                
                return item_selected  # Valid input, exit loop
            else:
                msg = &quot;******Invalid choice. Please enter a number &quot; + \
                      &quot;between 1 and &quot; + str(len(items)) + &quot; : &quot;
        except ValueError:
            msg = &quot;Please enter a valid integer.&quot;



if __name__ == &quot;__main__&quot;:
   
    # Start at the top_menu and add it to the stack
    with open('clients.json', 'r') as json_file:
        clients = json.load(json_file)
    top_menu()
    print('program end')

    #traceback.print_stack()
</code></pre>
","0","Question"
"79567991","","<p>I am trying to write a function that, using <strong>tidyverse</strong> tools, will load two CSVs, join them on some key column, and write the joined result to a CSV. I am passing in the names of the key columns as character, and using double braces (<code>{{ ... }}</code>) to make the column name usable in the <code>inner_join</code>.</p>
<p>I have a function that works on the data frames. But I'm writing another function that takes filenames, loads the CSVs into data frames, and calls function 1. The &quot;outer&quot; function also assumes that the first column in the CSV is the key column, and passes that column name to the inner function.</p>
<p>The problem is that unless the column name is hard-coded, the code breaks. It appears that the outer function is passing in the argument unevaluated. If I read the column name into a variable, I get an error message like this:</p>
<pre><code>Error in `inner_join()`:
! Join columns in `x` must be present in the data.
✖ Problem with `df1_key`.
Run `rlang::last_trace()` to see where the error occurred.
</code></pre>
<p>If I use <code>colnames(df_loaded_from_csv)[1]</code> as the function argument, I get an error message like this:</p>
<pre><code>Error in `join_by()`:
! Expressions can't contain computed columns, and can only reference columns by name or by explicitly specifying
  a side, like `x$col` or `y$col`.
ℹ Expression 1 contains `colnames(df1)[1]`.
Run `rlang::last_trace()` to see where the error occurred.
</code></pre>
<p>In each case, it appears that the variable or the expression is not being evaluated, and is ending up in as an argument to the <code>inner_join</code> in the inner function. I can't even begin to understand how this is even possible.</p>
<p>Here is a small reproducible example:</p>
<pre class=""lang-r prettyprint-override""><code>library(tidyverse)

# Create example CSVs
df1 = tibble(
  key = LETTERS,
  value = sample.int(100, 26)
)
write_csv(df1, &quot;df1.csv&quot;)

df2 = tibble(
  key = LETTERS[1:13],
  value = sample.int(100, 13)
)
write_csv(df2, &quot;df2.csv&quot;)

# Function to join two data frames and return the joined data frame
join_dfs = function(x, y, x_key = &quot;key&quot;, y_key = &quot;key&quot;) {
  
  df = x |&gt;
    inner_join(y, by = join_by({{ x_key }} == {{ y_key }} ))
  
}

# This works:
df3 = join_dfs(df1, df2, &quot;key&quot;, &quot;key&quot;)

# Function to load to CSVs and call join_dfs on the loaded data frames
join_csvs = function(x, y, file) {
  df1 = read_csv(x)
  df1_key = colnames(df1)[1]
  print(df1_key)
  
  df2 = read_csv(y)
  df2_key = colnames(df2)[1]
  print(df2_key)
  
  df3 = join_dfs(df1, df2, df1_key, df2_key)
  write_csv(df3, file)
  
}

# This fails:
join_csvs(&quot;df1.csv&quot;, &quot;df2.csv&quot;, &quot;df3.csv&quot;)
</code></pre>
<p>How can I get this to work?</p>
","3","Question"
"79568223","","<p>Let's have 3 files :</p>
<ul>
<li>Personne.h :</li>
</ul>
<pre><code>#include &lt;iostream&gt;
#include &lt;string&gt;

using namespace std;

struct Personne {
    string nom;
    string prenom;
    int age;
    Personne();
    Personne(string nom, string prenom, int age);
    Personne(Personne const*);
    virtual ~Personne();
    void set(Personne);
};

</code></pre>
<ul>
<li>Personne.cpp :</li>
</ul>
<pre><code>#include &quot;Personne.h&quot;

Personne::Personne() : nom(NULL) {}

Personne::Personne(string nom0, string prenom0, int age0) :
    nom(nom0),
    prenom(prenom0),
    age(age0)
{}

Personne::Personne(Personne const* copied) :
    nom(copied-&gt;nom),
    prenom(copied-&gt;prenom),
    age(copied-&gt;age)
{}

Personne::~Personne() {}

void Personne::set(Personne copied) {
    cout &lt;&lt; &quot;copied.nom = &quot; &lt;&lt; copied.nom &lt;&lt; endl;
    nom = copied.nom;
    prenom = copied.prenom;
    age = copied.age;
}

</code></pre>
<ul>
<li>main.cpp :</li>
</ul>
<pre><code>#include &quot;Personne.h&quot;

int main()
{
    cout &lt;&lt; &quot;Dinguerie !&quot; &lt;&lt; endl;
    Personne moi(&quot;Gustin&quot;, &quot;Didier&quot;, 34);
    Personne* moi_pointeur(&amp;moi);
    moi_pointeur-&gt;set(moi_pointeur);
    moi_pointeur-&gt;set(*moi_pointeur);
    return 0;
}

</code></pre>
<p>In main.cpp, line 8 should generate a compilation error as it doesn't fit the signature of the function declared in Personne.h and implemented in Personne.cpp. Line 8 uses the set function with Personne* instead of Personne as argument.
But no error at compilation and moreover line 8 do exactly the same as the line 9 at execution.</p>
<p>Can someone explain to me why this code compiles ?</p>
","0","Question"
"79568940","","<p>I got a setup where I would like to call a function once per group and apply the result to multiple rows (multiple eans). However, the function is called as many times as I have eans. This might be some internal statement rewriting, but I would like to avoid this. Can you help out?</p>
<pre><code>drop table dummy_data;
drop table dummy_log;
drop function write_dummy_log;

create table dummy_data(ean VARCHAR2(10), my_group VARCHAR2(10), ean_list VARCHAR2(1000), return_val int);
create table dummy_log(log_entry VARCHAR2(1000));

insert into dummy_data (ean, my_group) values ('ean11', 'groupA');
insert into dummy_data (ean, my_group) values ('ean22', 'groupA');
commit ;
select *  from dummy_data;
select *  from dummy_log;



create function write_dummy_log(p_ean_list VARCHAR2, p_group VARCHAR2) return int
as
pragma autonomous_transaction;
begin
    insert into dummy_log (log_entry) values ( 'I use ' || p_ean_list || ' and ' || p_group);
    commit ;
    return 0;
end;

merge into dummy_data t1
using ( select /*+ no_merge */ my_group
                      , ean_list
                      , write_dummy_log(ean_list, my_group) as ret_val
                   from ( select my_group
                               , listagg(ean, ',') as ean_list
                            from dummy_data
                           where 1 = 1
                           group by my_group
               )
      ) t2
on ( t1.my_group = t2.my_group )
when matched then
    update
       set
           t1.return_val = t2.ret_val
         , t1.ean_list   = t2.ean_list
     where 1 = 1;

commit ;
select *  from dummy_data; -- will show expected values anyways
select *  from dummy_log;  -- will show expected values because of /*+ no_merge */ hint
</code></pre>
<p>Running the above will end up in two entries within the logging table dummy_log. I would like to have only one entry per group. Can you explain why this happens? How can I rewrite this to call the function only once per group? Solution: with no_merge hint this is okay.</p>
<p>Best, Peter</p>
<p>Edit 4/22/2025: added an executable minimal example. Added the solution within the code.</p>
","1","Question"
"79572009","","<p>When compiling my program, I get the following error:</p>
<blockquote>
<p>No matching function for call to 'fillWithRandomNum'
Candidate function not viable: no known conversion from 'double[10][Globals::MAX_COL]' to 'double (*)[Globals::MAX_COL]'</p>
</blockquote>
<p>Whenever I change <code>Globals::MAX_COL</code> to a number (i.e. 10), it works properly. How would I move forward with using the namespace variable <code>Globals::MAX_COL</code>?</p>
<p>Matrix.h:</p>
<pre class=""lang-cpp prettyprint-override""><code>#include &quot;namespaces.h&quot;

#ifndef MATRIX_H
#define MATRIX_H

void fillWithRandomNum(double[][Globals::MAX_COL], const int);

#endif
</code></pre>
<p>namespaces.h:</p>
<pre class=""lang-cpp prettyprint-override""><code>#ifndef namespaces_h
#define namespaces_h

namespace Globals {
    int MAX_COL = 10;
};

#endif
</code></pre>
<p>main.cpp:</p>
<pre class=""lang-cpp prettyprint-override""><code>#include &lt;iostream&gt;
#include &quot;Matrix.h&quot;
#include &quot;namespaces.h&quot;

int main() {
    double matrix[10][Globals::MAX_COL];
    
    fillWithRandomNum(matrix, 10);
    
    return 0;
}
</code></pre>
<p>I tried using pointers by changing the function declaration and the code to the following, but I get the same error:</p>
<pre class=""lang-cpp prettyprint-override""><code>void fillWithRandomNum(double (*matrix)[Globals::MAX_COL], const int);
</code></pre>
","0","Question"
"79573449","","<p>I have a complex nested dictionary structure and I need to remove elements based on the values in a nested dictionary. My dictionary looks like this:</p>
<pre><code>my_dict = {
    'item1': {'name': 'Apple', 'price': 1.0, 'category': {'id': 1, 'name': 'Fruit'}},
    'item2': {'name': 'Banana', 'price': 0.5, 'category': {'id': 1, 'name': 'Fruit'}},
    'item3': {'name': 'Carrot', 'price': 0.75, 'category': {'id': 2, 'name': 'Vegetable'}},
    'item4': {'name': 'Broccoli', 'price': 1.5, 'category': {'id': 2, 'name': 'Vegetable'}}
}
</code></pre>
<p>I want to filter this dictionary to only include items belonging to the 'Fruit' category. I tried the following code:</p>
<pre><code>new_dict = {}
for key, value in my_dict.items():
    if value['category']['name'] == 'Fruit':
        new_dict[key] = value
print(new_dict)
</code></pre>
<p>This works, but I'm wondering if there's a more concise or Pythonic way to achieve this, perhaps using dictionary comprehension or a filtering function like <code>filter()</code>.</p>
","7","Question"
"79573784","","<p>im doing a little project for my own to my portfolio. Im a beginner programmer and i have a problem with import function js from another file. This function is necessary because i need this to use in another logic of my code. These two files are in the same folder named scripts. Scripts are added to index.html before the body closing tag with defer attibute.</p>
<p>ProductsDb.mjs:</p>
<pre><code>import axios from &quot;axios&quot;;

const productsDb = process.env.DB_BASE_URL;
let products;

export const fetchProducts = async () =&gt; {
  const productsDb = process.env.DB_BASE_URL;
  try {
    const res = await axios.get(productsDb);
    products = res.data;
    //console.log(&quot;value of products:&quot;, products);
    return products;
  } catch (err) {
    console.err(&quot;Error fetching products: &quot;, err);
    throw err;
  }
};
const createProductCart = async () =&gt; {
  await fetchProducts();
  const shopList = document.querySelector(&quot;.shop-list&quot;);
  shopList.innerHTML = &quot;&quot;;
  console.log(products);

  products.forEach((element) =&gt; {
    const shoppingCart = document.createElement(&quot;li&quot;);
    shoppingCart.classList.add(&quot;shop-list-item&quot;);

    let imgURL = `http://127.0.0.1:3000${element.image}`;
    shoppingCart.innerHTML = `
        &lt;a href=&quot;#&quot;&gt;
          &lt;img class=&quot;item-image&quot; height=&quot;320px&quot; width=&quot;320px&quot; src=&quot;${imgURL}&quot; alt=&quot;${element.name}&quot; /&gt;
          &lt;div class=&quot;shop-list-info&quot;&gt;
            &lt;p&gt;${element.category}&lt;/p&gt;
            &lt;h3&gt;${element.name}&lt;/h3&gt;
          &lt;/div&gt;
        &lt;/a&gt;
        &lt;button class=&quot;openCartModal&quot; data-id=&quot;${element.id}&quot;&gt;Wybierz opcje&lt;/button&gt;
      `;

    shopList.appendChild(shoppingCart);
  });
  return;
};

document.addEventListener(&quot;DOMContentLoaded&quot;, async () =&gt; {
  try {
    createProductCart();
  } catch (err) {
    console.error(&quot;Error&quot;, err);
  }
});
</code></pre>
<p>modal.mjs:</p>
<pre><code>import { fetchProducts } from &quot;./productsDb.mjs&quot;;

// Open quick shopping modal window
const shopList = document.querySelector(&quot;.shop-list&quot;);
shopList.addEventListener(&quot;click&quot;, function (ev) {
  const modal = document.querySelector(&quot;[modalOpen]&quot;);
  const modalClose = document.querySelector(&quot;[modalClose]&quot;);

  if (ev.target.closest(&quot;.openCartModal&quot;)) {
    openModal(modal, modalClose);
  }
});

function openModal(modal, modalClose) {
  modal.classList.toggle(&quot;isHidden&quot;);

  function close() {
    modal.classList.toggle(&quot;isHidden&quot;);
    document.removeEventListener(&quot;keydown&quot;, keyClose);
    modal.removeEventListener(&quot;click&quot;, clickOutClose);
    modalClose.removeEventListener(&quot;click&quot;, close);
  }

  function keyClose(ev) {
    if (ev.key === &quot;Escape&quot; &amp;&amp; !modal.classList.contains(&quot;isHidden&quot;)) {
      close();
    }
  }

  function clickOutClose(ev) {
    if (ev.target === modal || ev.target.classList.contains(&quot;isHidden&quot;)) {
      close();
    }
  }
  document.addEventListener(&quot;keydown&quot;, keyClose);
  modal.addEventListener(&quot;click&quot;, clickOutClose);
  modalClose.addEventListener(&quot;click&quot;, close);
}
</code></pre>
<p>I need to use the fetchProducts function in modal logic to pass value from database to the opening modal. Im trying change my script type to module, also in package.json changing type to module but with no positive results.
When Im restarting my frontend only the name of module in console changing every each of time.</p>
<p>I receive that something like that:</p>
<pre><code>Uncaught Error: Cannot find module '92Na4'
    at newRequire (kk-js.6bb1462e.js:74:19)
    at newRequire (kk-js.57740558.js:66:18)
    at newRequire (kk-js.8b89b8d5.js:66:18)
    at newRequire (kk-js.8b89b8d5.js:58:18)
    at localRequire (kk-js.8b89b8d5.js:97:35)
    at fsaaM../productsDb.mjs (modal.mjs:1:1)
    at newRequire (kk-js.8b89b8d5.js:84:24)
    at kk-js.8b89b8d5.js:144:5
    at kk-js.8b89b8d5.js:163:3

</code></pre>
<p>Any ideas will be very helpful for me.</p>
","-1","Question"
"79574309","","<p>In javascript, I want to make a (shallow) copy of a <code>Function</code>, so that the properties of the new object will not be affected by the original object:</p>
<pre class=""lang-js prettyprint-override""><code>function func(...) { ... } // to say, function func(x, y) { return [x,y] }
func.a = 1
let func1 = func       // without copy, func1 and func IS the same object
let func2 = copy(func) // need to be implemented

func.a = 2
func1.a        // becomes 2
func2.a        // shall still be 1
func2(&quot;abc&quot;)   // shall return the same result as func(&quot;abc&quot;)
</code></pre>
<p>Is it possible?</p>
<hr />
<p>The best way I've found at present is defining a wrapper function:</p>
<pre><code>function f0(x, y) { return [x,y] }
f0.a = 1

function copy(fn){
  function wrapper(){
    return fn.apply(wrapper, arguments)
  }
  Object.assign(wrapper,fn)
  return wrapper
}

let f2 = copy(f0)

f0.a = 2
f2.a        // is still 1
f0.length   // gives 2
f2.length   // gives 0
</code></pre>
<p>However, there are some problems with this solution:</p>
<ol>
<li>Chain appling of <code>copy</code> will lead to multiple levels of wrapper. for example, <code>copy(copy(copy(fn)))</code> will return a function with three wrappers.</li>
<li>the <code>length</code> of the origin function is lost, <code>wrapper.length</code> is alaways <code>0</code>.</li>
</ol>
","1","Question"
"79575184","","<pre><code> win.bind(&quot;&lt;Key&gt;&quot;,menuKeys)

def menuKeys(event):
    global canvas, canwidth, canheight, blockwidth, blockheight
    if event.keysym == settings[&quot;keys&quot;][&quot;other&quot;][&quot;stop&quot;]: 
        x,y = blockPoint(&quot;center&quot;)
        x -= 6
        y -= 3
        for i in range(5):
            for j in range(10):
                Spot(x+j,y)
            y += 1
        Text(x+3.5,y-2,&quot;[Y/N]&quot;,color=&quot;blue&quot;,size=2)
        Text(x,y-5,&quot;Are you sure you want&quot;,color=&quot;black&quot;,size=2)
        Text(x,y-4,&quot;to quit?&quot;,color=&quot;black&quot;,size=2)
        win.bind(&quot;&lt;Key&gt;&quot;,stop)
        
def stop(event):
    if event.keysym == settings[&quot;keys&quot;][&quot;prompt-keys&quot;][&quot;yes&quot;]:
        win.destroy()
    elif event.keysym == settings[&quot;keys&quot;][&quot;prompt-keys&quot;][&quot;no&quot;]:
        x,y = blockPoint(&quot;center&quot;)
        x -= 6
        y -= 3
        for i in range(5):
            for j in range(10):
                Spot(x+j,y,color=&quot;#232627&quot;,outline=&quot;#232627&quot;)
            y += 1
        win.unbind(&quot;&lt;Key&gt;&quot;,stop)
    else:
        win.bind(&quot;&lt;Key&gt;&quot;,stop)
</code></pre>
<p>The menukeys function, when the key is pressed, calls the stop function. When pressing 'no', it deletes the area, but then I can't press 'quit' again to do this. What is the problem?</p>
","1","Question"
"79577864","","<p>I would like to create a dataset in the format below of workbook names and sheet names of all the excel files in a folder.</p>
<pre><code>workbook    sheetname
a           aphid1
a           aphid2
b           melon1
b           melon2
b           melon3
b           melon4

</code></pre>
<p>I used the code below but don't know how to get the data from the list into the format that I want above, and it is also not giving me the workbook names, and is just calling the workbook names [[1]], [[2]], etc., which is not what I want.</p>
<pre><code>all_files &lt;- list.files(path=&quot;filepath&quot;, pattern = &quot;*.xlsx&quot;, full.names = T)

sheet_names &lt;- lapply(all files, excel_sheets)

&gt; print(sheet_names)
[[1]]
[1] &quot;About&quot;

[[2]]
 [1] &quot;About&quot;                          &quot;General&quot;   
 [3] &quot;Data&quot;
</code></pre>
<p>What I want:</p>
<pre><code>workbook    sheetname
a           About
b           About
b           General
b           Data

</code></pre>
","0","Question"
"79578263","","<p>I'm working on a college assignment and need to figure out how to transfer an item from one dictionary (item) to another (inventory). This needs to be done by finding an item in a room, using the search_for_items function. Here's the code I have thus far:</p>
<pre><code>rooms = {
    'Main Entry': {'East': 'Main Floor'},
    'Main Floor': {'North': 'North Hall', 'South': 'South Hall', 'East': 'Clothes Store', 'West': 'Main Entry'},
    'South Hall': {'East': 'Food Court', 'North': 'Main Floor'},
    'North Hall': {'East': 'Storage Room', 'South': 'Main Floor'},
    'Clothes Store': {'North': 'Theater', 'West': 'Main Floor'},
    'Theater': {'South': 'Clothes Store'}
}

item = {
     'Gas Mask',
     'Stuffed Shark',
     'Bubble Wrap',
     'Knowledge of Toaster Store',
     'Block of Old Cheese',
     'Baseball Bat'
}

has_item = {
     'Main Floor': {'Gas Mask'},
     'North Hall': {'Stuffed Shark'},
     'Storage Room': {'Bubble Wrap'},
     'South Hall': {'Knowledge of Toaster Store'},
     'Food Court': {'Block of Old Cheese'},
     'Clothes Store': {'Baseball Bat'}
}

inventory = {
     
}

def search_for_items():
     if room has_item = true:
          add item to inventory
          print('Got item: {}'.format(item))
          has_item = false
     else:
          print('No items here')
</code></pre>
<p>So, I need to figure out how to map each item to each room, and I need to find a way to have the search_for_items function transfer an item from the list of items to the player's inventory.</p>
","0","Question"
"79580146","","<p>Suppose I have a dataframe <code>df</code> in R like this:</p>
<pre><code>    A    B    C    D
   1.4  4.0  6.0  1.0
   2.5  1.5  2.4  2.3
   3.0  1.7  2.5  3.4
</code></pre>
<p>Say I want to write a function that checks the value of each cell in every row in several specified columns, and performs calculations on them depending on the value, and puts the results in new columns.</p>
<p>Take a simple example. I want to do the following for columns <code>A</code>, <code>B</code> and <code>D</code>: if the corresponding value, call it x, of the row of the corresponding column is <code>x &lt; 2</code>, I want to add 1, if <code>2 &lt;= x &lt; 3</code>, I want to add 3, if <code>3 &lt;= x &lt; 4</code>, I want to add 5, and do nothing otherwise. I want to store results in 3 new columns called <code>A_New</code>, <code>B_New</code>, <code>D_New</code>.</p>
<p>So this is what I want to get:</p>
<pre><code>   A    B     C    D      A_New   B_New   D_New
 1.4   4.0   6.0   1.0     2.4     4.0     2.0
 2.5   1.5   2.4   2.3     5.5     2.5     5.3
 3.0   1.7   2.5   3.4     8.0     2.7     8.4
</code></pre>
<p>I am struggling to create R code that will do this (preferably using <code>dplyr</code> / <code>tidyverse</code> library). Please help.</p>
","4","Question"
"79581058","","<p>I am trying to solve a problem using analytical functions but I am stuck.</p>
<ol>
<li>I have a list of coupons that I can use. The usage sequence is in alphabetical order of the coupon name</li>
</ol>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Coupons</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>100</td>
</tr>
<tr>
<td>B</td>
<td>40</td>
</tr>
<tr>
<td>C</td>
<td>120</td>
</tr>
<tr>
<td>D</td>
<td>10</td>
</tr>
<tr>
<td>E</td>
<td>200</td>
</tr>
</tbody>
</table></div>
<ol start=""2"">
<li>There is a limit (cap) on the total value across all coupons that can be used in a day</li>
</ol>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Cap Name</th>
<th>Cap Limit</th>
</tr>
</thead>
<tbody>
<tr>
<td>Cap 1</td>
<td>150</td>
</tr>
<tr>
<td>Cap 2</td>
<td>70</td>
</tr>
</tbody>
</table></div>
<ol start=""3"">
<li>Each coupon is subject to 1 or 2 caps. If it is subject to 2 caps, there is a specified sequence to apply caps.</li>
</ol>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Coupon</th>
<th>Cap Sequence</th>
<th>Cap Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>1</td>
<td>Cap 1</td>
</tr>
<tr>
<td>A</td>
<td>2</td>
<td>Cap 2</td>
</tr>
<tr>
<td>B</td>
<td>1</td>
<td>Cap 2</td>
</tr>
<tr>
<td>C</td>
<td>1</td>
<td>Cap 2</td>
</tr>
<tr>
<td>C</td>
<td>2</td>
<td>Cap 1</td>
</tr>
<tr>
<td>D</td>
<td>1</td>
<td>Cap 1</td>
</tr>
<tr>
<td>E</td>
<td>1</td>
<td>Cap 1</td>
</tr>
<tr>
<td>E</td>
<td>2</td>
<td>Cap 2</td>
</tr>
</tbody>
</table></div>
<ol start=""4"">
<li>I have to now find how much coupon value could be utilized before my daily cap was reached. i.e. find &quot;coupon usage&quot;  and “Cap Remaining” below.</li>
</ol>
<p>So, if I join the tables above.</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>#</th>
<th>Coupon</th>
<th>Value</th>
<th>Cap Name</th>
<th>Cap Sequence</th>
<th>Cap Limit</th>
<th>Coupon Usage</th>
<th>Cap Rem</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>A</td>
<td>100</td>
<td>Cap 1</td>
<td>1</td>
<td>150</td>
<td>100</td>
<td>50</td>
</tr>
<tr>
<td>2</td>
<td>A</td>
<td>100</td>
<td>Cap 2</td>
<td>2</td>
<td>70</td>
<td>0</td>
<td>70</td>
</tr>
<tr>
<td>3</td>
<td>B</td>
<td>40</td>
<td>Cap 2</td>
<td>1</td>
<td>70</td>
<td>40</td>
<td>30</td>
</tr>
<tr>
<td>4</td>
<td>C</td>
<td>120</td>
<td>Cap 2</td>
<td>1</td>
<td>70</td>
<td>30</td>
<td>0</td>
</tr>
<tr>
<td>5</td>
<td>C</td>
<td>120</td>
<td>Cap 1</td>
<td>2</td>
<td>150</td>
<td>50</td>
<td>0</td>
</tr>
<tr>
<td>6</td>
<td>D</td>
<td>10</td>
<td>Cap 1</td>
<td>1</td>
<td>150</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>7</td>
<td>E</td>
<td>200</td>
<td>Cap 1</td>
<td>1</td>
<td>150</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>8</td>
<td>E</td>
<td>200</td>
<td>Cap 2</td>
<td>2</td>
<td>70</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table></div>
<ol start=""5"">
<li><strong>Explanation</strong>:</li>
<li>Row #1 : Coupon A has a value of 100 and that is less than the first cap i.e. Cap 1 with a limit of 150. So we use all of Coupon A. Cap 1 has a limit of 50 remaning.</li>
<li>Row #2: Coupon A was all used against Cap 1 and we did not have to consume Cap 2.</li>
<li>Row #3: Coupon B of value 40 and it is less than Cap 2 with a limit of 70. So we use all of Coupon B. Cap 2 has now 30 remaining.</li>
<li>Row #4: Coupon C has a value of 120. It is subject to Cap 2 first that has 30 remaining.  So we use 30 and Cap 2 now has 0 remaining. Coupon C has (120 - 30) i.e. 90 residual value remaining.</li>
<li>Row #5: Coupon C has a 90 value remaning that is now capped against Cap 1 with a 50 limit. So we use 50 and Cap 1 becomes 0</li>
<li>Row #6 - #8: Caps have become 0. Nothing can be used.</li>
</ol>
<p>I am able to make this work using analytical function with a single cap. The 2 caps with a possibly different usage sequence has me stuck.</p>
<pre><code>with coupon_data(coupon, value)as 
(
select 'A',100 from dual union all
select 'B',40 from dual union all
select 'C',120 from dual union all
select 'D',10 from dual union all
select 'E',200 from dual 
)
, cap_data(cap_name, cap_limit) as
(
select 'Cap1', 150 from dual union all
select 'Cap2', 70 from dual 
)
, coupon_cap_mapping(coupon, cap_sequence, cap_name) as
(
select 'A',1,'Cap1' from dual union all
select 'A',2,'Cap2' from dual union all
select 'B',1,'Cap2' from dual union all
select 'C',1,'Cap2' from dual union all
select 'C',2,'Cap1' from dual union all
select 'D',1,'Cap1' from dual union all
select 'E',1,'Cap1' from dual union all
select 'E',2,'Cap2' from dual 
)
SELECT cd.coupon,
       cd.value,
       cap_d.cap_name,
       ccm.cap_sequence,
       cap_d.cap_limit
       --, coupon_usage, cap_remaining 
FROM coupon_data cd
JOIN coupon_cap_mapping ccm ON ( cd.coupon = ccm.coupon )
JOIN cap_data           cap_d ON ( cap_d.cap_name = ccm.cap_name )
ORDER BY cd.coupon,
         ccm.cap_sequence;
</code></pre>
","5","Question"
"79581931","","<p>I'm trying to write code that lets you get an item from a room and puts it in your inventory, but no matter what I try the function either doesn't execute or gets an error. Here's what I have as of this post:</p>
<pre><code>room = {
    'Main Entry': {'East': 'Main Floor'},
    'Main Floor': {'North': 'North Hall', 'South': 'South Hall', 'East': 'Clothes Store', 'West': 'Main Entry', 'item': 'Gas Mask'},
    'South Hall': {'East': 'Food Court', 'North': 'Main Floor', 'item': 'Knowledge of Toaster Store'},
    'North Hall': {'East': 'Storage Room', 'South': 'Main Floor', 'item': 'Stuffed Shark'},
    'Food Court': {'West': 'South Hall', 'item': 'Block of Old Cheese'},
    'Clothes Store': {'North': 'Theater', 'West': 'Main Floor', 'item': 'Baseball Bat'},
    'Theater': {'South': 'Clothes Store'}
}

item = {
     'Gas Mask',
     'Stuffed Shark',
     'Bubble Wrap',
     'Knowledge of Toaster Store',
     'Block of Old Cheese',
     'Baseball Bat'
}

inventory = {
     
}

#The current_room function tracks which &quot;room&quot; the user is in, and starts them in the Main Entry
current_room = 'Main Entry'
print('Allister &amp; Doodle enter the mall. The word was, one of their recurring enemies-Lumina the jellyfish lady-was putting' \
'together a makeshift doomsday device! They figured it was unlikely to do actual doomsday levels of damage, but they had the day' \
'off and figured they might as well try and put a stop to it. Because they''re just that nice!' \
'Input Search to look for items! You''ll need Bubble Wrap, a Baseball Bat, and a Block of Old Cheese to win the game.' \
'Once-and only once-you have all three, make your way to the Theater (North of the Clothes Store) for the final showdown!' \
'Input North, South, East, or West to have them move through the mall! Or input exit, if you have something better to do.')

#The while loop plays until the user enters exit, to which it then ends the game.
while current_room != 'exit':
    print(f&quot;Allister &amp; Doodle are in the {current_room}&quot;)
    command = input(&quot;Enter command: &quot;)
    if command == 'exit':
        current_room = 'exit'
    if command == 'Search':
        if item in room[current_room]['item']:
            inventory.append(item)
        else:
            print(f&quot;Nothin'.&quot;)
    elif command in ['North', 'South', 'East', 'West']:
        direction = command
        if direction in room[current_room]:
            current_room = room[current_room][direction]
        else:
            print(&quot;Can't go that way&quot;)
    else:
        print(&quot;No can do&quot;)

print(&quot;You have exited the game.&quot;)
</code></pre>
<p>Right now, I'm consistently getting this error:</p>
<pre><code>Traceback (most recent call last):
  File &quot;c:\Users\name\folder\folder1\folder2\file.py&quot;, line 43, in &lt;module&gt;
    if **item in room[current_room]['item']:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^**
TypeError: 'in &lt;string&gt;' requires string as left operand, not set
</code></pre>
<p>What do I need to do to fix this?</p>
","-2","Question"
"79583403","","<p>I'm trying to display the shortcode [products] on a new page I created. The products don't display, (but the shortcode itself doesn't show as text (as it would if it didn't render, meaning the shortcode functions but doesn't display anything). I checked the logs and it gives these errors:</p>
<pre><code>Function is_post_type_archive was called incorrectly. Conditional query tags do not work before the query is run. Before then, they always return false.

Function is_page was called incorrectly. Conditional query tags do not work before the query is run. Before then, they always return false.

Function is_singular was called incorrectly. Conditional query tags do not work before the query is run. Before then, they always return false.

Function is_post_type_archive was called incorrectly. Conditional query tags do not work before the query is run. Before then, they always return false.
</code></pre>
<p>The errors happens
in /home/miiriya/public_html/wp-includes/functions.php on line 6121</p>
<p>Is there a workaround I can add to my functions.php to allow for the products to be added to a page?</p>
<p>Let's say the page where I'm trying to display it is ex: <a href=""https://www.example.com/fashion-beauty/"" rel=""nofollow noreferrer"">https://www.example.com/fashion-beauty/</a></p>
<p>I saw something similar here, but I don't know how to implement it:</p>
<p><a href=""https://wordpress.stackexchange.com/questions/242910/is-search-was-called-incorrectly"">https://wordpress.stackexchange.com/questions/242910/is-search-was-called-incorrectly</a></p>
<p>I apologize for the trouble.</p>
","-1","Question"
"79586636","","<p>I experienced an interesting behavior of g++ in versions 13 and 14. The following code works fine in g++14 (MSYS2, MinGW, Windows):</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;thread&gt;

class A
{
public:
    void f()
    {
        std::cout&lt;&lt;&quot;Okay!\n&quot;;
    }
};

int main(int argc,char **argv)
{
    A a;
    std::thread t(A::f,&amp;a);
    t.join();
    return 0;
}
</code></pre>
<p>Trying to compile with g++13 (Linux), however, yields:</p>
<pre><code>error: invalid use of non-static member function 'void A::f()'
</code></pre>
<p>Changing just</p>
<pre><code>std::thread t(A::f,&amp;a);
</code></pre>
<p>to</p>
<pre><code>std::thread t(&amp;A::f,&amp;a);
</code></pre>
<p>solves the issue. Seemingly, under the non-MSYS2 variant a member function could not be used in place of a function argument, but a pointer to a member function could?</p>
<p>This was tested under g++14 under MSYS2 (Windows 10). Apparently, other g++14 versions do not work.</p>
<pre><code>$ g++ --version
g++.exe (Rev2, Built by MSYS2 project) 14.2.0
</code></pre>
","9","Question"
"79588481","","<p>I'm writing a terminal based text-game as a mini practice project, and I've written a function that waits for an amount of seconds to display another line of text, <em>unless</em> it's not the first playthrough (an int playthrough is declared at the top of the code, and if the user chooses to play again - playthrough ++), then the user can skip the waiting with a keystroke. The function looks like this:</p>
<pre><code>void waitOrEnter(double seconds) {
    auto start = std::chrono::steady_clock::now();
    while (true) {
        // Check if the specified time has passed if the playthrough is equal to 0
        if (playthrough == 0) {
            auto now = std::chrono::steady_clock::now();
            auto elapsed = std::chrono::duration_cast&lt;std::chrono::seconds&gt;(now - start).count();
            if (elapsed &gt;= seconds) {
                cout &lt;&lt; &quot;\n&quot;;
                break;
            }
         }
         // Check for key press if the playthrough is equal to or greater than 1
         if (playthrough &gt;= 1) {
      
             if (_kbhit()) {
                 getch();
                 break;
             }
         // Sleep for a short amount of time
         std::this_thread::sleep_for(std::chrono::milliseconds(10));
         }

    }
}
</code></pre>
<p>And I'm calling it after every line of text:</p>
<pre><code>    std::cout &lt;&lt; &quot;You wake up confused in a tiny, unfamiliar room. It's dark and the air is heavy and thick.\n&quot;;
    waitOrEnter(3);
    std::cout &lt;&lt; &quot;You see a door right in front of you.\n&quot;;
    waitOrEnter(3);
</code></pre>
<p>Now I would like to break that function into 2 and put in separate file to call, and I would like to avoid doing if else statements after every line like</p>
<pre><code>cout &lt;&lt; &quot;You wake up confused in a tiny, unfamiliar room. It's dark and the air is heavy and thick.\n&quot;;
if (playthrough == 0) {
    wait(3);
} else {
    enter(3);
}
std::cout &lt;&lt; &quot;You see a door right in front of you.\n&quot;;
if (playthrough == 0) {
    wait(3);
} else {
    enter(3);
}
</code></pre>
<p>Is there a way to maybe use a different function to replace the wait function with the enter function if a condition is met, so that I would only have to declare the condition once?</p>
<p>Or maybe even a better way to do it?</p>
<p>I've searched far and wide but only thing I found it to replace a string or a portion of it.</p>
","3","Question"
"79589121","","<p>I have the following code. The compiler complains about the last line. I am wondering why. The <code>WrappedFunction</code> case class takes a function object with trait arguments. When I try to construct a <code>WrappedFunction</code> object, I provide it with a function that has case classes that extend the trait as arguments. Intuitively this should work but for some reason it doesn't.</p>
<p>I have multiple functions, each combining two case classes and combining them into one. All of these, both argument types as well as the result types are subclasses of the trait Wrapped. I would like to have all these functions under one umbrella. Is it possible to do this in Scala? What's the best way to solve this?</p>
<pre><code>trait Wrapped {
  def name: String
}

case class WrappedInt1(i: Int) extends Wrapped {
  override def name: String = &quot;wrapped1&quot;
}
case class WrappedInt2(i: Int) extends Wrapped {
  override def name: String = &quot;wrapped2&quot;
}
case class WrappedInt3(i: Int) extends Wrapped {
  override def name: String = &quot;wrapped3&quot;
}

case class WrappedFunction(function: (Wrapped, Wrapped) =&gt; Wrapped)

def plus(w1: WrappedInt1, w2: WrappedInt2): WrappedInt3 = WrappedInt3(w1.i + w2.i)

val f1 = WrappedFunction(plus)
</code></pre>
","2","Question"
"79589888","","<p>I looking for a way to find empty cells in for example <code>A1:A6</code> from bottom to start and replace them with first none-empty value above them. i want to use it with filter function to show the result in <code>D1:E6</code>. help me pls, Thanks!
<a href=""https://imgur.com/a/wavFOyI"" rel=""nofollow noreferrer"">I added an image in the link you can see it for better understanding</a></p>
","-1","Question"
"79591160","","<p>Hello I basically need to implement a recursive function for insertion of a binary tree. I already implemented the chunk of insertion function (wether it's largest or smaller than root) but there's an aspect of confusion.</p>
<pre><code> public void insert(E data) {
     root = insert(root, data);
}

private Node&lt;E&gt; insert(Node&lt;E&gt; value, E data) {
    if(value == null) {
       return new Node&lt;E&gt;(data);
    }
    else if (data.compareTo(value.data) &gt; 0 )  {
        value.right = insert(value.right, data); 
    }
    else if(data.compareTo(value.data) &lt;= 0) {
        value.left = insert(value.left, data);
    }
    return value; 

}
</code></pre>
<p>The problem I have is this line:</p>
<pre><code>  public void insert(E data) {
      root = insert(root, data);
  }
</code></pre>
<p>Why do I need that line of code? Is the root actively changing? My partner tried explaining to me how it doesn't change except for the first root.</p>
<p>Is the private function for the recursion always returning the first parent root as the root?</p>
<p>Thank you.</p>
","0","Question"
"79593252","","<p>It is more question than a problem.
I make my header file with a function declaration like this:</p>
<pre><code>void fw_iteracja_wsk_rows_a(float (*tab)[COLUMNS], int ROWS);
</code></pre>
<p>How can I adjust/change the COLUMNS value depending on the array size in other files?</p>
<p>Currently, no matter what I try, COLUMNS takes the value from the header file, making the function not universal.</p>
<p>To be clear im using VS2022 with my travel to learn C.
This is a definition of the function:</p>
<pre><code>void fw_iteracja_wsk_rows_a(float (*tab)[COLUMNS], int ROWS)
{
    float (*p_rows)[COLUMNS];
    float* p_columns;
    p_rows = tab;
    p_columns = *p_rows;
    for (p_rows; p_rows &lt; tab + ROWS; p_rows++)
    {
        for (p_columns; p_columns &lt; *p_rows + COLUMNS; p_columns++)
        {
            printf(&quot;%.1f, &quot;, *p_columns);
        }
        printf(&quot;\n&quot;);
    }
}
</code></pre>
<p>Declaration is in file: C_PATMY_2DARRAY.h
Also in this file is: #define COLUMNS 12.
Definition is in file: C_PATMY_2DARRAY.c</p>
<p>When I #include &quot;C_PATMY_2DARRAY.h in other .c file and  try to use this function with array with diffrent columns number. I cant becouse function is getting COLUMNS value form header file.
I did try #ifndef #undef but it is not working.</p>
<p>Grateful for the tip.</p>
<p>@babon - i can agree with overcomplicating.
But, did it becouse i need this pointer on array: float (*tab)[COLUMNS] for being able to make iteration with pointers.</p>
<p>Maybe someone can tell me how to declare universal functions using a pointer to an array. When I need to specify the number of columns in the declaration and definition.</p>
","-3","Question"
"79593836","","<p>My question looks very strange, but I'll try my best to explain it.
I got this function</p>
<pre><code>def combine_hex_values(d):
  d_items = sorted(d)
  tot_weight = 2
  red = int(sum([int(k[:2], 16) for k in d_items])/tot_weight)
  green = int(sum([int(k[2:4], 16) for k in d_items])/tot_weight)
  blue = int(sum([int(k[4:6], 16) for k in d_items])/tot_weight)
  zpad = lambda x: x if len(x)==2 else '0' + x
  return zpad(hex(red)[2:]) + zpad(hex(green)[2:]) + zpad(hex(blue)[2:])
</code></pre>
<p>you paste 2 colors like this:</p>
<pre><code>print(combine_hex_values({&quot;FF79FF &quot;, &quot;4c34eb&quot;}))
</code></pre>
<p>and you get resulting color <code>a556f5</code>.
So basically it works like this: <code>color1+color2 = result</code>.
What I want is to find <strong>color2</strong> when <strong>color1</strong> and <strong>result</strong> are known. So, imagine we know the <strong>result color</strong> is white and <strong>color1</strong> is blue. How to make a function which would calcuate <strong>color2</strong> to mix with <em>color1</em> to get <em>result color</em>? <em>(the color we mix with color1)</em> ?</p>
","0","Question"
"79598067","","<p>I am working in <code>R</code> trying to create a wrapper function that calls a specified internal function (which is some existing function) and does some things with it.  My wrapper function will include an argument <code>func</code> for the internal function I want to call and this function will always have a particular standard structure with a particular argument of interest, but the argument might be called by a different name in different cases, so I also want an argument in my wrapper function <code>arg.name</code> that specifies the name of one of the arguments in the internal function.  I also want to be able to specify additional arguments with the ellipses <code>...</code> to allow other general inputs to the internal function.  Here is an outline of what I want to do (but this code doesn't work):</p>
<pre><code>#Example of the internal function
#This would be an existing function - not one that I program myself
#The variable n might be named something different in some cases
EXISTING.FUNCTION &lt;- function(a, n) { a + n^2 }

#Example of the wrapper function
#It includes arg.name to specify the name of the variable
MY.WRAPPER.FUNCTION &lt;- function(value, func, arg.name, ...) {
  
  #Evaluate the internal function using inputs wrapper inputs
  OUTPUT &lt;- func(arg.name = value, ...)
  
  #Return the output
  OUTPUT }
</code></pre>
<p>I want to be able to call the wrapper function like this:</p>
<pre><code>MY.WRAPPER.FUNCTION(value = 4, func = EXISTING.FUNCTION, arg.name = 'n', a = 3)

#What I want to get
[1] 19

#What I actually get
Error in func(arg.name = value, ...) : unused argument (arg.name = value)
</code></pre>
<p>I am not sure how to get <code>R</code> to recognise the character string <code>arg.name</code> as the name of the variable in the internal use of the specified internal function within the wrapper function.  I think this uses one or more of the evaluation functions (e.g., <code>substitute</code>, <code>quote</code>, <code>as.name</code>, etc.) but I have not yet had any success in modifying the above code to have <code>arg.name</code> recognised as identifying the argument name in the internal function.</p>
<hr />
<p><strong>Additional information:</strong> The above is written to strip the problem back to essentials, but if it matters, the existing functions I want to work with are quantile functions for probability distributions.  Usually these will have a probability argument called <code>p</code> but I want to allow for the possibility that someone programs a quantile function with a different name for the probability argument.  I'm not sure if this context matters for the solution, but that is the motivation for the problem.</p>
","4","Question"
"79599307","","<p>I have seen a lot of questions involving reading in all the Excel files from folder and merging them all together, however my situation is a bit different where each Excel file contains different data. I would like to write a function to read in all the Excel files from the folder, but I would like a separate dataset created for each Excel file that merges all the sheets in that Excel file.</p>
<p>I have tried the function below, but I am not sure what I need to edit in my function to merge instead of bind the sheets. Additionally, because I have many different Excel sheets with different variables, I do not want to have to specify what column names I want the datasets to be merged by, I would like R to figure that out itself (much like a left join in dplyr).</p>
<pre><code>library(openxlsx)
library(dplyr)

# create fake excel file for demonstration, code borrowed from this question:
https://stackoverflow.com/questions/61601575/create-multiple-sheets-in-excel-workbook-from-r-tables-using-xlsx-package

data(mtcars)
data(ChickWeight)

# making the two datasets the same size and creating a fake id variable to merge by
ChickWeight2&lt;-ChickWeight %&gt;% head(32) %&gt;% mutate(id=c(1:32))
mtcars2&lt;-mtcars %&gt;% mutate(id=c(1:32))

xl_lst &lt;- list('df1_name' = ChickWeight2, 'df2_name' = mtcars2)

write.xlsx(xl_lst, file = &quot;xl_with_2_worksheets.xlsx&quot;)

# function to read in the file and bind the excel sheets, but this is not what I want, I want to merge the excel sheets. 
importFunction &lt;- function(x) {
  

  df_list &lt;- mget(ls(.GlobalEnv,pattern =   paste0(noquote(x),&quot;.*&quot;)), envir = .GlobalEnv)
  
  
# I would like to merge the datasets here, not bind.
  df&lt;-bind_cols(df_list)

  assign(paste(x),df,envir=.GlobalEnv)

}

importFunction(&quot;xl&quot;)
</code></pre>
","2","Question"
"79602239","","<p>I'm trying to automate a bunch of annual tables in my workplace that require the last column to be &quot;Change&quot; and shows the previous year taken away from this year.</p>
<p>I'd like to choose the last column and penultimate column dynamically so that I can build it into a function and use it everywhere reliably.</p>
<p>The closest I've come to it is using last_col():</p>
<pre><code>
library(tidyverse)

lakers |&gt; 
  mutate(year = ymd(date) |&gt; year()) |&gt; 
  count(year,type) |&gt; 
  pivot_wider(names_from = year, values_from = n) |&gt; 
  mutate(change = pick(last_col()) - pick(last_col(offset= 1)))

what I get:

# A tibble: 74 × 4
#type                    `2008` `2009` change$`2009`
#&lt;chr&gt;                    &lt;int&gt;  &lt;int&gt;         &lt;int&gt;
#  1 &quot;&quot;                        3852   6530          2678
#2 &quot;3pt&quot;                     1114   1940           826
#3 &quot;alley oop dunk&quot;            46     51             5
#4 &quot;alley oop layup&quot;           20     40            20
#5 &quot;away from play&quot;             1      2             1
#6 &quot;def&quot;                     1734   3034          1300
#7 &quot;defense 3 second&quot;          12     26            14
#8 &quot;defensive goaltending&quot;     13     28            15
#9 &quot;delay of game&quot;              7     13             6
#10 &quot;double personal&quot;            1      1             0
</code></pre>
<p>But that still leaves the name as change$[last_col_name] rather than just change. The column needs to be named col for some later styling I am doing in the flextable package.</p>
<p>What I want is:</p>
<pre><code>
#type                    `2008` `2009`     Change
#&lt;chr&gt;                    &lt;int&gt;  &lt;int&gt;
#  1 &quot;&quot;                        3852   6530 2678
#2 &quot;3pt&quot;                       1114   1940 826
#3 &quot;alley oop dunk&quot;            46     51   5
#4 &quot;alley oop layup&quot;           20     40   20
#5 &quot;away from play&quot;             1      2   2 
#6 &quot;def&quot;                       1734   3034 1300
#7 &quot;defense 3 second&quot;          12     26   14
#8 &quot;defensive goaltending&quot;     13     28   15
#9 &quot;delay of game&quot;              7     13   6
#10 &quot;double personal&quot;           1      1   0

</code></pre>
<p>I understand this might be possible with multiple assignments in magrittr but I would like to keep this to the native pipe rather than magrittr because I don't want to add the added complexity.</p>
","0","Question"
"79602252","","<p>I am working on a HealthCheck script that will check if a specific application is installed and verify the version number of the app, and verify id the service for that app is running.  For testing purposes I am manually setting the application name (appName) look look for as well as the desired version (appTargetVer) and the service name(appSvc).  Once working, I will pull this data from a CSV so I can check multiple apps we feel are critical on each workstation, I set it manually to one specific app for development\testing purposes.</p>
<p>In my script I am passing the the $appName and $appTargetVer to the AppInstallStatus function, determining if the app is installed, checking that the installed version is &gt;= to the appTargetVer, and then saving the desired data to a PSCustomObject.  I then return that object in hopes of being able to use that data.</p>
<p>Unfortunately, I am unable to access any of the properties of that returned object.  I know the function works as I tested and it does the check properly.  But once i assign the function to a variable in order to store the returned object, I can not access any of the object properties.</p>
<p>Testing like this returns good results:</p>
<pre><code>#Test that function working
AppInstallStatus $appName $appTargetVer 
</code></pre>
<p><a href=""https://i.sstatic.net/ThAmAVJj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ThAmAVJj.png"" alt=""enter image description here"" /></a></p>
<p>But when I assign to a variable, I can not access any of the properties.</p>
<pre><code>$InstallInfo = AppInstallStatus $appName $appTargetVer 
Write-host &quot;why is there no data in here:  $($InstallInfo.ApplicationName)&quot;
</code></pre>
<p><a href=""https://i.sstatic.net/GPdNEmSQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/GPdNEmSQ.png"" alt=""enter image description here"" /></a></p>
<p>Any assistance you can provided would be greatly appreciated.  Ultimately I will be assigning some of the properties from this object, as well as other objects from other functions, to an object that will store all the needed results that can let our techs know that a workstation is missing an app or requires an updates version, etc.  I will then output that all to a file that can be stored as evidence.  But First I need to be able to access the individual properties of the object before I move on to doing anything else.  FYI - I know there are application that will do compliance checking but the boss wants something like this for some silly reason, so I'm stuck cobbling together a script to do what Intune/Tanium/etc should all already be able to do for us.</p>
<p>Here is the full code for this part of the health check:</p>
<pre><code>$appName = &quot;Trend&quot;
$appTargetVer = 14.0
$appSvc = &quot;ntrtscan&quot;



Function AppInstallStatus{
    param(
    $appName,
    $appTargetVer
    )
    
    $AppInstTest =  Get-CimInstance Win32_Product | Where-Object {$_.Name -match $appName} |Select-Object -Property Name,Vendor,Version,Caption


    if($AppInstTest.Name -match $appName){
        $InstallStatus = $true        
        if($AppInstTest.Version -ge $appTargetVer){
            $VerStatus = $true
            $CurVer = $AppInstTest.Version
            }
            else{
                $VerStatus = $false
                }
        }
        else{
            $InstallStatus = $false
            }
    #$AppStatObj = New-Object -TypeName psobject -Property @{
    $AppStatObj = [PSCustomObject]@{            
        AppNameTest=$appName
        AppTargetVerTest=$appTargetVer
        ApplicationName = $AppInstTest.Name
        ApplicationCurrentVer = $AppInstTest.Version
        AppInstallStatus = $InstallStatus
        ApplicationVersionStatus = $VerStatus
        } | Format-List
                    
        return $AppStatObj
}

Function AppService{
    param(
    $appSvc
    )
    
    $AppTest = Get-Service -Name $appSvc
    if($AppTest.Status -match &quot;running&quot;){
        $AppSvcStatus = $true
        }
        else{
            $AppSvcStatus = $false
            }
        
        return $AppSvcStatus
}


#Test that function working
#AppInstallStatus $appName $appTargetVer 

#save to a variable to access individual properties of returned object
$InstallInfo = AppInstallStatus $appName $appTargetVer 
AppService $appSvc

Write-host &quot;why is there no data in here:  $($InstallInfo.ApplicationName)&quot;
</code></pre>
","2","Question"
"79605941","","<p>Haven't attempted to play around or make a site in over 20 years so still rusty. I am trying to get my code to be able to saveData to localStorage on a server I just bought. I'm not sure how to set up storage onto the server. I am trying to get my 'Add-message-button' To add the message to the scrolling chat box that I have and save. It will display the message but on refresh everything disappears and I need it to stay. Any help would be greatly appreciated.</p>
<pre><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/    TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
    &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
    &lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot; /&gt;
    &lt;title&gt;CURRENT WARNINGS&lt;/title&gt;
    &lt;/head&gt;
    &lt;style type=&quot;text/css&quot;&gt;
    &lt;!--
.style1 {
    font-size: 36px;
    font-weight: bold;
}
--&gt;
    &lt;/style&gt;
    &lt;/head&gt;&lt;div align=&quot;center&quot;&gt;&lt;span class=&quot;style1&quot;&gt;&lt;h1 style=font-size:300%&gt;&lt;h1 style=&quot;background-color:#000000;&quot;&gt;&lt;font color=#7CFC00&gt;&lt;p style=&quot;background-image: url('awsa.jpg');background-size: 100% 100%;&quot;&gt;American Severe Weather Advisors&lt;/header&gt;&lt;/font&gt;&lt;/h1&gt;&lt;/span&gt;&lt;/div&gt;

     &lt;div class=&quot;topnav&quot;&gt;
      &lt;a class=&quot;active&quot; href=&quot;#HOME&quot;&gt;&lt;h1 style=font-size:250%&gt;&lt;font color=#7CFC00&gt;&lt;P align=&quot;center&quot;&gt;Home&lt;/font&gt;&lt;/a&gt;
      &lt;a href=&quot;#NEWS&quot;&gt;&lt;font color=#7CFC00&gt;News&lt;/font&gt;&lt;/a&gt;
      &lt;a href=&quot;#RADARS&quot;&gt;&lt;font color=#7CFC00&gt;Radars&lt;/font&gt;&lt;/a&gt;
      &lt;a href=&quot;#FORUMS&quot;&gt;&lt;font color=#7CFC00&gt;Fourms&lt;/font&gt;&lt;/a&gt;
      &lt;a href=&quot;#CONTACT&quot;&gt;&lt;font color=#7CFC00&gt;Contact&lt;/font&gt;&lt;/a&gt;
      &lt;a href=&quot;#ABOUT&quot;&gt;&lt;font color=#7CFC00&gt;About&lt;/a&gt;&lt;br /&gt;
      &lt;a href=&quot;#CURRENT WARNINGS&quot;&gt;&lt;font color=#7CFC00&gt;CURRENT WARNINGS&lt;/p&gt;&lt;/h1&gt;&lt;/font&gt;&lt;/a&gt;
&lt;body&gt;
&lt;body style=background-color:#000000&gt;

    &lt;div align=&quot;center&quot;&gt;&lt;span class=&quot;style1&quot;&gt;&lt;h1 style=font-size:150%&gt;&lt;font color=#FF0000&gt;****CURRENT WARINGS BELOW****&lt;/font&gt;&lt;/div&gt;

    &lt;div align=&quot;center&quot;&gt;
    &lt;div id=&quot;scrollable-box&quot; style=&quot;width: 1400px; height: 300px; border: 1px solid black; overflow-y: scroll;color:#FF0000;;background-color: aqua;text-align: left;&quot;&gt;
    &lt;div id=&quot;message-container&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;input type=&quot;text&quot; id=&quot;message-input&quot; placeholder=&quot;Enter message&quot;&gt;
    &lt;button id=&quot;add-message-button&quot;&gt;Add Message&lt;/button&gt;
    &lt;/div&gt;
    &lt;h1 style=font-size:200%&gt;&lt;font color=#7CFC00&gt;&lt;time id=&quot;current-time&quot;&gt;&lt;/time&gt;&lt;/font&gt;&lt;/h1&gt;
    &lt;script&gt;
function updateTime() {
            const now = new Date();
            const timeElement = document.getElementById('current-time');
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            timeElement.dateTime = now.toISOString();
            timeElement.innerHTML = `Today is: ${now.toLocaleDateString(undefined, options)}, 
                                     Time: ${now.toLocaleTimeString()}`;
        }

        setInterval(updateTime, 1000);
        updateTime();



  const messageContainer = document.getElementById('message-container');
  const messageInput = document.getElementById('message-input');
  const addButton = document.getElementById('add-message-button');
  const scrollableBox = document.getElementById('scrollable-box');
  let scrollPosition = 0;
  const scrollSpeed = 1; 
  
 
document.body.style.color = &quot;darkred&quot;;

 
  function autoScroll() {
    scrollPosition += scrollSpeed;
    scrollableBox.scrollTop = scrollPosition;


    if (scrollPosition &gt;= scrollableBox.scrollHeight - scrollableBox.clientHeight) {
      scrollPosition = 0;
    }
  }

  const scrollInterval = setInterval(autoScroll, 50);

  addButton.addEventListener('click', () =&gt; {
    const messageText = messageInput.value;
    if (messageText.trim() !== '') {
      const messageElement = document.createElement('div');
      messageElement.textContent = messageText;
      messageContainer.appendChild(messageElement);
      messageInput.value = '';
    
      scrollableBox.scrollTop = scrollableBox.scrollHeight;
    }
  });

    &lt;/script&gt;
    &lt;/body&gt;
    &lt;/html&gt;
</code></pre>
<p>I have tried to change the button to</p>
<pre><code>&lt;button onclick=&quot;saveData()&quot;&gt;Add Message&lt;/button&gt;

with scripting

function saveData() {
    const inputValue = document.getElementById('message-input').value;
    localStorage.setItem('userData',inputValue);
    displaySavedData();
}
function displaySavedData() {
    const savedData = localStorage.getItem('userData');
    const savedDataElement = document.getElementById('savedData');
    if (savedData) {
        savedDataElement.textContent = savedData;
} else {
        savedDataElement.textContent = 'No data saved yet.';
window.onload = displaySavedData;
</code></pre>
<p>Every time that I try to edit the actual <code>&lt;button&gt;&lt;/button&gt;</code>, it doesn't allow me to click the <em>add message</em> <code>button</code> to make the chat appear in the box; it just sits there.</p>
<p>I will later need that chat in the chat box to be timestamped and some how put a duration time on it to where the message saves but deletes itself after about an hour. We are posting tornado and thunderstorm warnings for the US, and with the chat scrolling I don't want members to log on and see chat on there from a weather warning that was posted 3 weeks prior.</p>
","0","Question"
"79612816","","<p>Here is a basic Java Code which I wrote. I want to know how I can calculate 0! as it can calculate every other number.</p>
<pre><code>import java.util.*;
public class main {

  public static int calcFactorial(int n) {
     int fact = 1;
     for (int i = 1; i &lt;= n; i++) {
     fact = fact * i;
     }

     return fact;
  }

  public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      System.out.print(&quot;Enter the number : &quot;);
      int n = sc.nextInt();

      if(n &gt; 0) {
        int factorial = calcFactorial(n);
        System.out.println(&quot;Factorial = &quot;+ factorial);
      }

      else {
      System.out.println(&quot;Factorial for negative numbers do not exists!&quot;);
      }
  }
}
</code></pre>
","1","Question"
"79616687","","<p>I was watching a youtube video on doubly linked lists in C. One of the functions made for the doubly linked list was an &quot;insert_after_node&quot; function, which as the name suggests inserts a new node after an existing one.</p>
<p>For context node_t is a typedef for this struct:</p>
<pre><code>struct node {
    int value;
    struct node* next;
    struct node* prev;
};
</code></pre>
<p>Here is the function:</p>
<pre><code>void insert_after_node(node_t *node_to_insert_after, node_t* newnode) {
    newnode-&gt;next = node_to_insert_after-&gt;next;
    if (newnode-&gt;next != NULL) {
        newnode-&gt;next-&gt;prev = node_to_insert_after;
    }
    newnode-&gt;prev = node_to_insert_after;
    node_to_insert_after-&gt;next = newnode;
}
</code></pre>
<p>Logically Im thinking that the <code>newnode-&gt;next-&gt;prev = node_to_insert_after;</code> line of the function is incorrect and should instead be <code>newnode-&gt;next-&gt;prev = newnode;</code>. I mean isnt the previous node of the new nodes next node just the new node? No one seems to have commented on this which makes me think I might be wrong.</p>
<p>Am I wrong and if so why is the initial function correct?</p>
","1","Question"
"79617667","","<p>I'm new to programming and am designing a game for a school assignment. I have made a small animation in CSS of a dice being shaken, then displaying the number of eyes of the throw. What I want is to call on the function playYourTurn() once (linked to a button), and then it would run the animation twice with some delay inbetween and move the players accordingly.</p>
<p>As it is now, only the second animation, playSpino(), runs. I have tried many variations with not having them as separate functions, change the intervals etc but to no avail. Sometimes it's only the first animation, playSasha(), that runs. Borth markers move accordingly to their throws, I have checked by writing it out in the log, so it's just the animations I'm struggling with.</p>
<p>The functions and the function in which they're being called:</p>
<pre><code>function playYourTurn() 
{
    playSasha();

    window.setTimeout(() =&gt; { }, 1500);
  
    playSpino(); 
}

function playSasha() 
{
    var diceResultSasha = rollDice();
    window.setTimeout(() =&gt; { moveSasha(diceResultSasha) }, 1000)

    window.setTimeout(resetDice, 3000)   
}

function playSpino() 
{
    var diceResultSpino = rollDice();
    window.setTimeout(() =&gt; { moveSpino(diceResultSpino) }, 4000)

    window.setTimeout(resetDice, 7000)
}
</code></pre>
<p>The function with the animation that currently only runs once:</p>
<pre><code>function rollDice() 
{  
    resetDice();
    
    var diceresult = document.getElementById('diceresult')

    var dice = Math.floor(Math.random() * 6) + 1;

    document.getElementById('shakebox').className = 'diceAnimation';

    diceresult.className = 'resultVisible';
</code></pre>
<p>(a switch statement follows here).</p>
<p>Here is the CSS code for the animation:</p>
<pre><code>.diceAnimation
{
   animation: shake 0.2s;
   animation-iteration-count: 5;
}
 
 @keyframes shake 
 {
   0% { transform: translate(1px, 1px) rotate(0deg); }
   10% { transform: translate(-2px, -3px) rotate(-20deg); }
   20% { transform: translate(-4px, 0px) rotate(20deg); }
   30% { transform: translate(3px, 2px) rotate(0deg); }
   40% { transform: translate(1px, -1px) rotate(10deg); }
   50% { transform: translate(-1px, 2px) rotate(-10deg); }
   60% { transform: translate(-3px, 1px) rotate(0deg); }
   70% { transform: translate(3px, 1px) rotate(-20deg); }
   80% { transform: translate(-1px, -1px) rotate(20deg); }
   90% { transform: translate(1px, 2px) rotate(0deg); }
   100% { transform: translate(1px, -2px) rotate(-10deg); }
 }
</code></pre>
<p>There is also a CSS effect that makes the default dice fade in to the number of eyes thrown that looks like this:</p>
<pre><code>#diceresult
{
   opacity: 0;
   position: absolute;
}

.resultVisible
{
   opacity: 1 !important;
   transition: all 1s ease;
}
</code></pre>
","1","Question"
"79618007","","<p>I'm working on a new pet project and i came across this error when trying to store functions in a hash in zig.<br />
the error happens on the try p.nud_handlers.put(Tokens.IDENT, p.parseIdentifier); line</p>
<p>the thing is, i do have the parseIdentifier defined inside of the Parser struct</p>
<p><strong>Stuff that i tried:</strong></p>
<ul>
<li>Defining the function outside of the parse struct. (Whilst this did work, i would like to declare the function inside of the struct)</li>
<li>Appending the function to the hash inside of some other function that isnt init (Did not work, same error)</li>
</ul>
<p>Zig version is 0.15.0 (Master)</p>
<pre><code>error:
parser.zig:102:48: error: no field named 'parseIdentifier' in struct 'parser.Parser'
        try p.nud_handlers.put(Tokens.IDENT, p.parseIdentifier);
</code></pre>
<pre><code>const NudParseFn = *const fn (*Parser) *AST.Expression;
const LedParseFn = *const fn (*Parser, *AST.Expression) *AST.Expression;

pub const Parser = struct {
    lexer: *Lexer,
    cur_token: Token = undefined,
    peek_token: Token = undefined,
    nud_handlers: std.AutoHashMap(Tokens, NudParseFn) = undefined,
    led_handlers: std.AutoHashMap(Tokens, LedParseFn) = undefined,

    pub fn init(lexer: *Lexer) !Parser {
        var parser: Parser = Parser{ .lexer = lexer };

        parser.nud_handlers = std.AutoHashMap(Tokens, NudParseFn).init(std.heap.page_allocator);
        parser.led_handlers = std.AutoHashMap(Tokens, LedParseFn).init(std.heap.page_allocator);

       // ... some other code here

        try p.nud_handlers.put(Tokens.IDENT, parser.parseIdentifier); // the error happens here

        return parser;
    }

    pub fn parseIdentifier(p: *Parser) *AST.Expression {
        return &amp;AST.Expression{ .identifier_expr = AST.Identifier{ .token = p.cur_token, .literal = p.cur_token.literal } };
    }
    // Other definitions below...

}
</code></pre>
","0","Question"
"79630584","","<p>In my React project, the TaskForm component is showing an error saying that the return is outside the function. Even though I've reviewed and &quot;fixed&quot; it, the same error persists. Can someone help me?</p>
<pre><code>import { useState } from &quot;react&quot;;
export default function Taskform ({onAdd}) {
const [text,setText] = useState(&quot;&quot;);

const formEnviado = (e) =&gt; {
    e.preventDefault();

    if (text.trim()) {
        onAdd(text);
        setText(&quot;&quot;);
    }
}
return (

&lt;form onSubmit= {formEnviado}&gt;
    &lt;input
    type=&quot;text&quot;
    placeholder=&quot;Digite sua tarefa&quot;
    value={text}
    onChange={(e) =&gt; setText(e.target.value)}
    /&gt;
    &lt;button type=&quot;submit&quot;&gt; Adicionar Tarefa &lt;/button&gt;
&lt;/form&gt;
);
}
</code></pre>
","0","Question"
"79631070","","<p>I'm trying to calculate the average amount each customer has spent based on an array of purchase objects. Here's the sample data:</p>
<pre><code>const purchases = [
  { customer: &quot;Alice&quot;, amount: 250 },
  { customer: &quot;Bob&quot;, amount: 400 },
  { customer: &quot;Alice&quot;, amount: 150 },
  { customer: &quot;David&quot;, amount: 300 },
  { customer: &quot;Bob&quot;, amount: 200 },
  { customer: &quot;Charlie&quot;, amount: 100 },
  { customer: &quot;David&quot;, amount: 100 }
];
</code></pre>
<p>Here's what I have tried so far:</p>
<pre><code>function averageAmountSpent(arr) {
  const result = {};
  arr.forEach(item =&gt; {
    const customer = item.customer;
    result[customer] = (result[customer] || 0) + item.amount;
  });

  const average = {};
  for (const amount in result) {
    if (result.hasOwnProperty(amount) &amp;&amp; typeof amount === 'number') {
      average[amount] = result[amount] / 2; // Not sure what to divide by
    }
  }

  return average;
}

console.log(averageAmountSpent(purchases));
</code></pre>
<p>This gives me the total amount spent per customer, but I’m not sure how to calculate the average amount spent by each customer (i.e., total spent divided by number of times they made a purchase). How should I modify this code to return each customer along with their average spend?</p>
<p><strong>What I’ve tried:</strong></p>
<ul>
<li>I successfully grouped totals by customer.</li>
<li>I don’t know how to count how many times each customer appears in the
array to compute the average.</li>
</ul>
<p><strong>What I want:</strong></p>
<p>An object like this:</p>
<pre><code>{
  Alice: 200,
  Bob: 300,
  David: 200,
  Charlie: 100
}
</code></pre>
<p>Each value should be the average of all amounts for that customer.</p>
<p><strong>Any help or suggestions would be appreciated. Thanks!</strong></p>
","1","Question"
"79636838","","<p>I want to create a list of lists, and this list will be filled by calls to various functions. The output is awkward and unworkabe, so there must be a better way than the one I used. Here is a simplified code to illustrate the idea</p>
<pre><code>choices &lt;- list()

###############
add_wealth &lt;- function(ch, wealth) {
  a &lt;- list(type=&quot;wealth&quot;, parameter =wealth)
  list(ch, a)
}

wealth &lt;- 1
choices &lt;- add_wealth(choices, wealth)

##############
add_diversification &lt;- function(ch, div) {
  a &lt;- list(type=&quot;diversification&quot;, parameter =div)
  list(ch, a)
}

div &lt;- .7
choices &lt;- add_diversification(choices, div)

##############
add_margin &lt;- function(ch, bounds) {
  a &lt;- list(type=&quot;margin&quot;, parameter=bounds)
  list(ch, a)
}

bounds &lt;- c(1, 3)
choices &lt;- add_margin(choices, bounds)

choices
</code></pre>
<p>Ideally, here is the output I need (or something close enough)</p>
<pre><code> [[1]]
 [[1]]$type
 [1] &quot;wealth&quot;
 [[1]]$parameter
 [1] 1

 [[2]]
 [[2]]$type
 [1] &quot;diversification&quot;
 [[2]]$parameter
 [1] .7

 [[3]]
 [[3]]$type
 [1] &quot;margin&quot;
 [[3]]$parameter
 [1] 1 3
</code></pre>
","3","Question"
"79640794","","<p>I'm stacking multiple columns containing same/similar data into one column.  I'm also using the Filter function to then select a specific column as the output, using the following Excel Formula:</p>
<p><code>=FILTER(LET(data,A2:O26,cols,5, rc,ROWS(data), ss,COLUMNS(data)/cols, ri,WRAPROWS(TOCOL(IF(SEQUENCE(,cols),TOCOL(IF(SEQUENCE(,ss),SEQUENCE(rc)),,1))),cols), ci,WRAPROWS(TOCOL(TOCOL(IF(SEQUENCE(rc),SEQUENCE(,cols)))-1+SEQUENCE(,ss,,cols),,1),cols), r,INDEX(data,ri,ci), r),{0,0,1,0,0})</code></p>
<p>I want the returned output of the formula to ignore the blanks (i.e. &lt;&gt; &quot;&quot;).
I am unable to attach a CSV file, so I am providing a photo of the data range below.</p>
<p><a href=""https://i.sstatic.net/9Qhyc8jK.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9Qhyc8jK.png"" alt=""Data Range"" /></a></p>
<p>The resultant output I have so far does not ignore the blanks cells.  This is the output I have up to this point:</p>
<p><a href=""https://i.sstatic.net/26FbTkzM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/26FbTkzM.png"" alt=""Output of Formula thus far"" /></a></p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>GNI</th>
<th>GNI PPP</th>
<th>SCHOOL</th>
<th>TD</th>
<th>GDP</th>
<th>GNI</th>
<th>GNI PPP</th>
<th>SCHOOL</th>
<th>TD</th>
<th>GDP</th>
<th>GNI</th>
<th>GNI PPP</th>
<th>SCHOOL</th>
<th>TD</th>
<th>GDP</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>r</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>sdf</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>b</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>g</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>sdf</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>c</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>h</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>dfhg</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>d</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>jk</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>fgh</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>e</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>k</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>ghj</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>f</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>l</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>ret</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>g</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>u</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>h</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>y</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>i</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>t</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>j</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>r</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>k</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>e</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>l</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>w</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>m</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>q</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>n</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>e</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>o</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>d</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>p</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>f</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>q</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>gbv</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>r</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>d</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>s</td>
<td>1</td>
<td></td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>s</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>t</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>df</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>u</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>gf</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>v</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>g</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>w</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>d</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>x</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>sd</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td>y</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>s</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td></td>
<td>1</td>
<td>2</td>
</tr>
</tbody>
</table></div>
<p>I'd love to attach the example CSV file, but I just can't find an attachment tool.</p>
","2","Question"
"79641287","","<p>While, &quot;strong_beat.play()&quot; is in the while loop, it stops running</p>
<pre><code>*import simpleaudio, time, math 

temp = 0
strong_beat = simpleaudio.WaveObject.from_wave_file('metronome2.wav')
while temp&lt;20:
    strong_beat.play()
    time.sleep(0.5)
    temp = temp + 1
    print (temp)*
</code></pre>
<p>however if I remove it it continues to run properly</p>
<p>With:<a href=""https://i.sstatic.net/KPbefq7G.png"" rel=""nofollow noreferrer"">With the function</a></p>
<p>Without:<a href=""https://i.sstatic.net/7oyLwKCe.png"" rel=""nofollow noreferrer"">Without the function</a></p>
<p>I don't know if there's a fundamental thing I don't understand, but the internet was not helping and I don't really know what to do.</p>
<p>I have limited knowledge of python, but I don't remember this being a problem in the past.</p>
","-1","Question"
"79644367","","<p>the below outputs true, meaning that new memory is not allocated for different objects, but they point to the same prototype Noob.</p>
<pre><code>   function Noob(name, game) {
      this.name = name;
      this.game = game;
    }
    
    Noob.prototype.jersey = function () {
      console.log(this.game);
    };
    
    let p1 = new Noob(&quot;adam&quot;, &quot;volleyball&quot;);
    let p2 = new Noob(&quot;eve&quot;, &quot;cricket&quot;);
    
    p1.jersey();
    p2.jersey();
    
    console.log(p1.jersey === p2.jersey);
</code></pre>
<p>This one outputs false, meaning new memory is created for different objects. If I were to remove this keyword from the jersey function, then it returns true.</p>
<pre><code>function Noob(name, game) {
  this.name = name;
  this.game = game;
  this.jersey = function () {
    console.log(this.game);
  };
}

let p1 = new Noob(&quot;adam&quot;, &quot;volleyball&quot;);
let p2 = new Noob(&quot;eve&quot;, &quot;cricket&quot;);

console.log(p1.jersey === p2.jersey);
</code></pre>
<p>I am confused whether this is related to the lexical scope of the this keyword or something with the new keyword.</p>
","0","Question"
"79644683","","<p>i define the function &quot;player&quot; and inside, assign the variable &quot;health&quot;.</p>
<pre><code>def player():
   health = 100
player()
print(health)  
</code></pre>
<p>but when i try to run the program, i recieve this
<a href=""https://i.sstatic.net/3GNqFC4l.png"" rel=""nofollow noreferrer"">error</a>.</p>
<p>i tried to make the variable health global like this</p>
<pre><code>global health
def player():
    health = 100   
player()
print(health)
</code></pre>
<p>and it still doesn't work.</p>
","0","Question"
"79648443","","<p>I have some MATLAB functions with a large number of optional parameters, that I want to specify as name/value arguments to keep the interfaces clear and avoid the confusion that comes with a large number of positional arguments.</p>
<p>There is a hierarchy of functions, where higher-level functions have all the same arguments as lower-level functions, plus some additional ones (in fact the functions are constructors in a class hierarchy - I don't think that is relevant, but including it here in case it is).</p>
<p>An example would be something like the below. As you can see, there is a lot of repeated code (typically there are dozens of name/value arguments, not just the few shown here, and dozens of different functions). The main problems with this approach are:</p>
<ol>
<li>I need to repeat the low level arguments in every <code>arguments</code> block, together with their default initializations. I would prefer to only list the arguments in the lower level functions, and have the defaults be set by lower level functions in the case that they are not set by higher level functions.</li>
<li>I need to explicitly name every single argument when calling a lower level function from a higher level function. This leads to a lot of pain if I ever need to e.g. add a new low-level argument, as it requires modifying every single higher level function, and doing this in an untyped language is very error prone!</li>
</ol>
<pre class=""lang-matlab prettyprint-override""><code>function highLevelFunc(opts)

    arguments
        opts.highLevelArg_1 = [];
        opts.highLevelArg_2 = [];
        opts.highLevelArg_3 = [];
        opts.midLevelArg_1  = [];
        opts.midLevelArg_2  = [];
        opts.midLevelArg_3  = [];
        opts.lowLevelArg_1  = [];
        opts.lowLevelArg_2  = [];
        opts.lowLevelArg_3  = [];
    end

    midLevelResult = midLevelFunc(...
        midLevelArg_1 = opts.midLevelArg_1, ...
        midLevelArg_2 = opts.midLevelArg_2, ...
        midLevelArg_3 = opts.midLevelArg_3, ...
        lowLevelArg_1 = opts.lowLevelArg_1, ...
        lowLevelArg_2 = opts.lowLevelArg_2, ...
        lowLevelArg_3 = opts.lowLevelArg_3 ...
    );

    % high level code goes here
end

function midLevelFunc(opts)

    arguments
        opts.midLevelArg_1 = [];
        opts.midLevelArg_2 = [];
        opts.midLevelArg_3 = [];
        opts.lowLevelArg_1 = [];
        opts.lowLevelArg_2 = [];
        opts.lowLevelArg_3 = [];
    end

    lowLevelResult = lowLevelFunc(...
        lowLevelArg_1 = opts.lowLevelArg_1, ...
        lowLevelArg_2 = opts.lowLevelArg_2, ...
        lowLevelArg_3 = opts.lowLevelArg_3 ...
    );

    % mid-level code goes here
end

function lowLevelFunc(opts)

    arguments
        opts.lowLevelArg_1 = [];
        opts.lowLevelArg_2 = [];
        opts.lowLevelArg_3 = [];
    end

    % low-level code goes here
end
</code></pre>
<p>I hoped that I could use <code>varargin</code> to avoid repeating argument names, but it seems that the language does not allow this if I want to use it in combination with name/value arguments. The code below gives me an error &quot;Positional arguments must be defined before name-value arguments&quot;.</p>
<pre class=""lang-matlab prettyprint-override""><code>function midLevelFunc(opts, varargin)

    arguments
        opts.midLevelArg_1 = [];
        opts.midLevelArg_2 = [];
        opts.midLevelArg_3 = [];
    end

    arguments (Repeating)
        varargin
    end

    lowLevelResult = lowLevelFunc(varargin{:});

    % mid-level code goes here
end
</code></pre>
<p>I could put the <code>varargin</code> before the name/value block, but I think this then forces the calling function to put lower-level arguments before higher-level arguments when calling the higher-level function, which feels unintuitive:</p>
<pre><code>function midLevelFunc(varargin, opts)

    arguments (Repeating)
        varargin
    end

    arguments
        opts.midLevelArg_1 = [];
        opts.midLevelArg_2 = [];
        opts.midLevelArg_3 = [];
    end

    lowLevelResult = lowLevelFunc(varargin{:});

    % mid-level code goes here
end
</code></pre>
<p>Are there better solutions here?</p>
","8","Question"
"79651798","","<p>I’m trying to deploy an Azure Function App (running on the Flex Consumption Plan) with an HTTP trigger. The function app is configured with:
•   VNet integration for outbound traffic
•   Private endpoint for inbound access</p>
<p>Our environment requires all outbound traffic to go through a corporate internet proxy (Bluecoat).</p>
<p>When I try to deploy my code using either:
func azure functionapp publish &lt;app_name&gt; or ax functionapp deployment source config-zip ...</p>
<p>The deployment fails, and the Azure portal shows an error stating that the Function App cannot access the Oryx endpoint, which is required for builds.
How can I configure my Azure Function App (Flex Consumption Plan) to route outbound internet traffic through our corporate proxy so it can access the Oryx build service and other necessary endpoints? Is there a supported way to set environment variables like HTTP_PROXY or HTTPS_PROXY, or use VNet features to achieve this?
I tried to configure the But it didn't work</p>
","0","Question"
"79652882","","<p>I have the following powershell script, which I call from the command line:</p>
<pre><code>param(    
    [Parameter(Mandatory = $true)]
    [string]$Name,
    [Parameter(Mandatory = $true)]
    [ValidateScript(
        { $_ -in (Get-ChildItem &quot;..\src\Services&quot; -Directory | Where-Object { $_.Name -ne &quot;obj&quot; }).Name }
    )]
    [ArgumentCompleter(
        {
            param($Command, $Parameter, $WordToComplete, $CommandAst, $FakeBoundParams)
            $ValidValues = (Get-ChildItem &quot;..\src\Services&quot; -Directory | Where-Object { $_.Name -ne &quot;obj&quot; }).Name
            return @($ValidValues) -like &quot;$WordToComplete*&quot;
        }
    )]
    [string]$Project
)

&amp; dotnet ef migrations add $Name `
    --project &quot;..\src\Services\$Project\$Project.Infrastructure&quot; `
    --startup-project &quot;..\src\Services\$Project\$Project.WebApi&quot;
</code></pre>
<p>As you can see, <code>..\src\Services</code> is used in multiple places. The main issue is its use in <code>ValidateScript</code> and <code>ArgumentCompiler</code>.</p>
<p>I have tried solving this by passing in an optional param <code>$PathPrefix = &quot;..\src\Services&quot;</code>, but this does not become available in the above-mentioned script decorators, so my argument validation and tab-completion don't work.</p>
<p>Is what I am trying to do possible?</p>
<p>Also is there a name for such functions which encompass an entire file (rather than being defined using <code>function</code>)?</p>
","0","Question"
"79654940","","<p>I apologise if the answer to my question is facile, but I'm new to Mathematica and normally use Matlab.</p>
<p>I have two variables that I define as follows:</p>
<p>delta = Sqrt[u^2 - 4<em>DC</em>(theta - lambda)];
xi = Sqrt[u^2 - 4<em>DC</em>((theta + delta) - lambda)];`</p>
<p>I then define a function f with multiple arguments:</p>
<p>f[x_, t_, u_, greek_, pm1_, DC_] =
Exp[x*(u + pm1<em>greek)/(2</em>DC)]<em>Erfc[(x - pm1</em>t<em>greek)/Sqrt[2</em>DC*t]];`</p>
<p>where <strong>greek</strong> takes the value either delta or xi. <strong>pm1</strong> is either +1 or -1. x is a spacial variable 0-500 and t takes a value 0-20000. u at present is always zero (but later may take a small value, say 0.1). DC is a constant 35.</p>
<p>Once f is evaluated I need to use it in another function Conc defined as follows:</p>
<pre><code>Conc[f_, x_, t_, u_, C0_, DC_, theta_, gamma_] = 
C0/2*Exp[-theta*t]*[f[x, t, u, delta, -1, DC] + 
  f[x, t, u, delta, 1, DC]] - 
C0/2*Exp[-(gamma + theta)*t]*[f[x, t, u, xi, -1, DC] + 
  f[x, t, u, xi, 1, DC]];`
</code></pre>
<p>theta and gamma are constants. As things stand when I try to run this I obtain:</p>
<p>-- Syntax &quot;C0/2<em>Exp[-theta</em>t]*&quot;cannot be followed by &quot;[f[x,t,u,delta,-1,DC]+f[x,t,u,delta,1,DC]]&quot;</p>
<p>I evaluated f[x_, t_, u_, greek_, pm1_, DC_] and that gave me a correct symbolic expression. Running Conc[f_, x_, t_, u_, C0_, DC_, theta_, gamma_] gave the syntax error.</p>
<p>Any assistance on sorting this out would be greatly appreciated. Thank you.</p>
","0","Question"
"79659577","","<p>I am new to React. I am working on a simple project where clicking a +/- button will increment or decrement the date by one day but am having trouble getting the two functions to work for a click event, please see code below. I am not sure why error message 'newDate is undefined' keeps coming up when the variable is defined and the state has been set. If anybody has any solutions please let me know. Thanks.
*** N.b I am just working on the 'minus' button for now.</p>
<pre><code>import React from &quot;react&quot;;
import ReactDOM from &quot;react-dom/client&quot;;
import { useState } from &quot;react&quot;;

function App() {
  const date = new Date(&quot;june 21 2027&quot;);
  const [newDate, setNewDate] = useState(date);
  const [count, setCount] = useState(1);

  return (
    &lt;div&gt;
      {/* &lt;div&gt;
        &lt;button&gt;-&lt;/button&gt;
        &lt;span&gt;Step : Step 1&lt;/span&gt;
        &lt;button&gt;+&lt;/button&gt;
      &lt;/div&gt; */}
      &lt;div&gt;
        &lt;button
          className={&quot;minus&quot;}
          id={1}
          onClick={function () {
            setCount(function (c) {
              return c - 1;
            });
            setNewDate(function (d) {
              d.setDate(date.getDate() - count);
              return;
            });
          }}
        &gt;
          -
        &lt;/button&gt;
        &lt;span&gt;Count : {count}&lt;/span&gt;
        &lt;button
          className={&quot;plus&quot;}
          id={2}
          onClick={function () {
            return setCount(function (c) {
              return c + 1;
            });
          }}
        &gt;
          +
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;span&gt;Today is {`${newDate.toDateString()}`}&lt;/span&gt;
    &lt;/div&gt;
  );
}

const root = ReactDOM.createRoot(document.getElementById(&quot;root&quot;));

root.render(&lt;App /&gt;);
</code></pre>
<p>I have tried returning the setNewDate function into the setCount function but that didn't work.</p>
","0","Question"
"79662939","","<p>Below is the code I've written. I want to add something so the same card doesn't get printed more than once. I've tried using booleans so when it sees a repeated card, it rolls back the for loop but it didn't work. What can I add here?</p>
<pre class=""lang-c prettyprint-override""><code>#include &lt;stdio.h&gt;
#include &lt;time.h&gt;
#include &lt;stdlib.h&gt;

#define SUITS 4
#define RANKS 13

int main()
{
    int num_cards, rank, suit;

    const char rank_code[] = {'2', '3', '4', '5', '6', '7', '8',
                              '9', 't', 'j', 'q', 'k', 'a'};

    const char suit_code[] = {'c', 'd', 'h', 's'};

    srand(time(NULL));

    printf(&quot;Enter number of cards in hand: &quot;);
    scanf(&quot;%d&quot;, &amp;num_cards);

    printf(&quot;Your hand: \n&quot;);

    for (int i = 0; i &lt; num_cards; i++)
    {
        suit = rand() % SUITS;
        rank = rand() % RANKS;

        printf(&quot;%c%c &quot;, rank_code[rank], suit_code[suit]);
    }
    return 0;
}
</code></pre>
","5","Question"
"79663868","","<p>I am using the following code to round to 3 sig figs, keep whole integers only if greater than or equal to 100, and maintain trailing zeros. It is working beautifully. I would like to make one change. If I have a number that is zero, I want the default to display as 0.00 and not just 0. How do I modify my code to do this?</p>
<pre><code>sig &lt;- \(x, dig = 3) formatC(signif(x, digits = dig), digits = dig, format = &quot;fg&quot;, flag = &quot;#&quot;)

sigfig &lt;- function(x, dig = 3) {ifelse(abs(x) &gt;= 100, round(x),sig(x, dig = 3))}
</code></pre>
","2","Question"
"79320992","79320968","<p>The result as given in the question is entirely due to noise, and carries no useful information. What the code compiles down to is</p>
<pre class=""lang-none prettyprint-override""><code>    movq    std::time::Instant::now@GOTPCREL(%rip), %r14
    callq   *%r14       // First call to `Instant::now()`
    movq    %rax, %rbx
                        // `use_filter` went away entirely, as one would expect
    movl    %edx, %ebp
    callq   *%r14       // Second call to `Instand::now()`
    movq    %rax, %rdi
    movl    %edx, %esi
    movq    %rbx, %rdx
    movl    %ebp, %ecx
    callq   *&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub@GOTPCREL(%rip)
                        // [...] print result
    callq   *%r14       // Third call to `Instant::now()`
    movq    %rax, %rbx
                        // `use_retention` went away entirely
    movl    %edx, %ebp
    callq   *%r14       // Third call to `Instant::now()`
    movq    %rax, %rdi
    movl    %edx, %esi
    movq    %rbx, %rdx
    movl    %ebp, %ecx
    callq   *&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub@GOTPCREL(%rip)
                        // [...] print result
</code></pre>
<p>That is, the time difference you are <em>measuring</em> is the time it took to issue the two calls to <code>Instant::now()</code>, with <em>nothing</em> in between. There is no difference. The time difference you are <em>seeing</em> is caused by inaccuracies in the implementation of <code>Instant::now()</code>, thread-scheduling, or general noise.</p>
","7","Answer"
"79321838","79320968","<p>Micro-benchmarking can sometimes achieve reproducible <a href=""https://github.com/rust-lang/rust/pull/124774"" rel=""nofollow noreferrer"">sub-nanosecond precision</a> results, but this requires doing time measurements across multiple loop iterations, reducing system noise, accounting for things like the compiler eliminating your code, ILP, <a href=""https://github.com/JuliaCI/BenchmarkTools.jl/blob/main/docs/src/linuxtips.md"" rel=""nofollow noreferrer"">variable CPU clocks</a>, thermal throttling and many other confounders.</p>
<p>It's best to use a benchmarking harness for this, <a href=""https://doc.rust-lang.org/std/hint/fn.black_box.html"" rel=""nofollow noreferrer"">black_box</a>ing inputs and then looking at the generated assembly in-situ¹.</p>
<p>And even then a microbenchmark may not be representative of real performance because it'll be measuring your code in isolation and not account for cache pressure and branch prediction effects of the surrounding code in a real program.</p>
<p>¹extracting the code from the harness will change the generated assembly</p>
","1","Answer"
"79322992","79322933","<p>There are a number of things here that I think are leading to confusion.</p>
<p>To start: <code>g</code> is probably not what you think it is. By your description it seems you think it is the function that subtracts <code>1</code> from the input. This would have type</p>
<pre class=""lang-hs prettyprint-override""><code>g :: Num a =&gt; a -&gt; a
</code></pre>
<p>It is however the number negative one, and it has type</p>
<pre class=""lang-hs prettyprint-override""><code>g :: Num a =&gt; a
</code></pre>
<p>This is an annoying fact about the ambiguity of the subtraction sign in mathematics that Haskell inherits. To write the function which subtracts one you should write</p>
<pre><code>g :: Num a =&gt; a -&gt; a
g = subtract 1
</code></pre>
<p>You could also write:</p>
<pre><code>g :: Num a =&gt; a -&gt; a
g x = x - 1
</code></pre>
<p>I would strongly suggest, that you add type signatures to functions you define. This way you get a check that the type signature you predict is the same as the one the compiler finds (or at least the two unify). This is a good idea for beginners and experience Haskell users. It's just really helpful.</p>
<p>Now I'm not going to go through the steps to how the compiler arrives at the final type of <code>(Num a, Num (a -&gt; a)) =&gt; a -&gt; a -&gt; a</code>, since it is a bit tedious and not very enlightening.</p>
<p>I will talk about what it means and why it is allowed. You ask:</p>
<blockquote>
<p>Does it mean a needs to be both a number and a function at the same time?</p>
</blockquote>
<p>Which is very close but not the case. It requires two preconditions:</p>
<ul>
<li><code>a</code> is a number.</li>
<li><code>a -&gt; a</code> is a number.</li>
</ul>
<p>The latter is both a function and a number at the same time. Which is allowed in Haskell. In Haskell you can add new <code>instance</code>s to existing types. So for example you could make a new type, <code>MyInt</code>, and define an <code>instance</code> of <code>Num</code> for it, this would mean it acts like a number. Similarly if you wanted to add an instance for an existing type you could. You could make certain types of function or even all functions into <code>Num</code>s if you wanted to.</p>
<p>And so Haskell allows you to make functions which take things that are both numbers and functions at the same time. This particular case is sort of silly. I can't think of a practical scenario where you would ever want to use <code>h</code>, but the language isn't checking that, it's just checking that it follows the rules of the type system.</p>
<p>Lastly you ask:</p>
<blockquote>
<p>This is especially confusing because I was under the impression the composition operator <code>(.)</code> only accepts one-argument functions? I imagine there is a trick with currying happening here, but I'm not sure what it is exactly.</p>
</blockquote>
<p>You are correct that this has to do with currying. In Haskell two-argument functions are also one-argument functions. For example:</p>
<pre><code>(+) :: a -&gt; a -&gt; a
</code></pre>
<p>is also:</p>
<pre><code>(+) :: a -&gt; (a -&gt; a)
</code></pre>
<p>(the function arrow <code>-&gt;</code> is &quot;right associative&quot; meaning that when there are two of them in sequence without parentheses, the parentheses are implicitly placed around the right arrow)</p>
<p>You can describe <code>(+)</code> as a function which takes a number and produces the function which adds that number. This is the core concept in currying. Functions which take multiple arguments can be thought of as functions which take one argument and produce another function.</p>
<p>If this explanation is still confusing try looking around online. There are people who are probably better at explaining it than me. (You can ask in the comments too, I can <em>try</em> to help).</p>
<p>It is possible to have functions types which must have one argument. For example <code>Int -&gt; Int</code> cannot except two arguments because <code>Int</code> cannot be a function.</p>
<p>However if the output of a function is polymorphic, then there's no way to exclude the possibility of functions. So in the example <code>subtract 1</code> has the type:</p>
<pre><code>g :: Num a =&gt; a -&gt; a
</code></pre>
<p>That <code>a</code> is polymorphic so there could be a scenario where it is a function.</p>
<p>I can get how this might be a but uncomfortable. As you get better with Haskell however, this discomfort will go away.</p>
","5","Answer"
"79322993","79322933","<p><code>(-1)</code> is the number negative one, not an operator section. If you want a pointfree version of <code>g x = x - 1</code>, then write <code>g = subtract 1</code>.</p>
<p>Anyway, your original expression was accepted because of the &quot;open-world assumption&quot;. That means that GHC assumes that if some instance is possible in principle to write, that somebody somewhere will write it. And it is possible to write such a <code>Num</code> instance, e.g.:</p>
<pre class=""lang-hs prettyprint-override""><code>instance Num a =&gt; Num (a -&gt; a) where
    (+) = liftA2 (+)
    (-) = liftA2 (-)
    (*) = liftA2 (*)
    negate = fmap negate
    abs = fmap abs
    signum = fmap signum
    fromInteger = pure . fromInteger
</code></pre>
<p>Although it's almost certainly not one that you'd <em>want</em>.</p>
","2","Answer"
"79323550","79322933","<p>GHC infers a type signature for <code>h</code> from its definition, and the unexpected type signature is the result. You won't be able to use <code>h</code> though until you have matching instances around.</p>
","-1","Answer"
"79323691","79322933","<p>As others already pointed out, <code>(-1)</code> is <em>not</em> a function that subtracts one from the value of the parameter.</p>
<p>I want to add that Haskell <em>can</em> however generate type signatures that do not make much sense, like:</p>
<pre><code>f :: (Integral a, Fractional a) =&gt; a -&gt; a
f a = a `mod` 2 / 2
</code></pre>
<p>The type <code>a</code> here is both <code>Integral</code> and <code>Fractional</code>, which does not make much sense since everything fractional is normally not <code>Integral</code>, and everything <code>Integral</code> is normally not <code>Fractional</code>. We can make such type, but that type would be more <a href=""https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)#Pure_fabrication"" rel=""nofollow noreferrer"">&quot;pure fabrication&quot;</a> to just let it work.</p>
<p>Haskell just looks at the functions and operators being applied, and does reasoning about types, it does not check if there exists any of these instances. That is also not useful: it is not because there does not exist a <code>Num (a -&gt; a)</code> currently, that a programmer might not define one in the future.</p>
<p>That being said, <code>Num (a -&gt; a)</code> is strictly speaking not that much of a problem to implement. Indeed, we can use:</p>
<pre><code>{-# LANGUAGE FlexibleInstances #-}

instance Num a =&gt; Num (a -&gt; a) where
  fromInteger = const . fromInteger
  f + g = \x -&gt; f x + g x
  f * g = \x -&gt; f x * g x
  abs f = abs . f
  signum = (signum .)
  negate = (negate .)
</code></pre>
<p>Here we thus make a <code>Num</code> instances of a function that maps to a <code>Num</code> type, and thus adding two such functions will add up the result of the two function calls.</p>
<p>I think it often is useful to give each (top-level defined) function a type signature, since that will usually avoid constructing functions like <code>h</code> in the first place.</p>
<pre><code>g :: Num a =&gt; a -&gt; a
g = (-1)
</code></pre>
<p>would have raise a compiler error (at least if we don't make functions an instance of <code>Num</code>).</p>
","2","Answer"
"79324586","79324508","<p>Because you're using a <code>foreach</code> loop in your function, the <em>current</em> argument can be represented as <code>$MyArgument</code>, however the item you're <em>switching on</em> is always represented as <code>$_</code> or <code>$PSItem</code> in the action script block, so in this case both options are valid:</p>
<pre class=""lang-bash prettyprint-override""><code>Write-Host &quot;$MyArgument used&quot;
# or
Write-Host &quot;$_ used&quot;
</code></pre>
<p>Something worth noting about <code>switch</code> in PowerShell is that it can also enumerate collections, so you can also get rid of your loop and this becomes valid code too:</p>
<pre class=""lang-bash prettyprint-override""><code>function test {
    [CmdletBinding()]
    param(
        [Parameter(
            Mandatory = $true,
            ParameterSetName = 'MyArgument'
        )]
        [ValidateSet('Value1', 'Value2')]
        [string[]] $MyArguments
    )

    switch ($MyArguments) {
        Value1 {
            Write-Host &quot;$_ used&quot;
        }
        Value2 {
            Write-Host &quot;$_ used&quot;
        }
    }
}

test -MyArguments Value1, Value2
</code></pre>
<p>Relevant docs:</p>
<ul>
<li><a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_switch?view=powershell-7.4"" rel=""nofollow noreferrer""><strong>about_Switch</strong></a></li>
<li><a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_psitem?view=powershell-7.4"" rel=""nofollow noreferrer""><strong>about_PSItem</strong></a></li>
</ul>
","3","Answer"
"79328047","79327986","<p>First, ensure your app has permission to access the network state by adding the following line to your <code>AndroidManifest.xml</code>:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;
</code></pre>
<p>Next, modify your code to check for internet connectivity before attempting to show the ad:</p>
<pre class=""lang-java prettyprint-override""><code>import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.widget.Toast;

public class AdHandler {

    private Context context;

    public AdHandler(Context context) {
        this.context = context;
    }

    private boolean isOnline() {
        ConnectivityManager cm = 
            (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
        if (cm != null) {
            NetworkInfo netInfo = cm.getActiveNetworkInfo();
            return (netInfo != null &amp;&amp; netInfo.isConnected());
        }
        return false;
    }

    public void showAd(int adType) {
        if (adType == Sdkmanager.AD_REWARDED) {
            if (isOnline()) {
                Website2APK.showInterstitialAd();
            } else {
                // No internet connection
                // ...
            }
        }
    }
}
</code></pre>
","0","Answer"
"79330745","79330732","<p>Yes, it's a pure function because it follows two key rules :</p>
<ul>
<li><p>No side effects</p>
</li>
<li><p>Same input, same output</p>
</li>
</ul>
","-1","Answer"
"79331084","79330732","<p>The function you provided is an example of a <strong>pure nullary</strong> function, read <a href=""https://stackoverflow.com/questions/5806229/what-is-a-function-that-takes-no-arguments-called"">this answer</a> for more details.</p>
<p>According to <a href=""https://www.geeksforgeeks.org/pure-functions-in-javascript/"" rel=""nofollow noreferrer"">this article</a>:</p>
<blockquote>
<ul>
<li>Pure functions return consistent results for identical inputs.</li>
<li>They do not modify external states or depend on mutable data.</li>
</ul>
</blockquote>
<p>Since the function does not take any inputs, it will always return the exact same ouput, and it does not modify any external states, hence the function is pure.</p>
","0","Answer"
"79331128","79330732","<p>Your function is not pure.
In your case your are adding up two non constant values together. The let variables are not constant values and more importantly they can change overtime depending on the functions internal logic. In your case they don't change but however the use of variable declaration <code>let num1, num2</code> will make your function impure.</p>
<pre><code>let num1 = 100
let num2 = 1
</code></pre>
<p>Updating to following will make your function pure</p>
<pre><code>function addNumbers(){
    const num1 = 100
    const num2 = 1
    return num1 + num2
}
</code></pre>
<p>Check following similar post for further details,
<a href=""https://stackoverflow.com/questions/77516467/how-to-correctly-identify-pure-functions-in-functional-programming"">How to correctly identify pure functions in functional programming?</a></p>
","-4","Answer"
"79332200","79331510","<p><a href=""https://stackoverflow.com/questions/79322370/why-is-r-not-rounding-up-using-the-signif-function"">As noted in the prior question</a>, non-integer numbers in R are stored as floating point numbers, which <a href=""https://stackoverflow.com/questions/9508518/why-are-these-numbers-not-equal"">do not always exactly match their decimal representation</a>.</p>
<p>If you run <code>signif(1.275, digits = 3)</code>, you get 1.27, because R (like many programming languages) stores 1.275 as a floating point number, in this case very slightly less than 1.275. This results in unexpected rounding behavior.</p>
<pre><code>sprintf(&quot;%.20f&quot;, 1.275)
[1] &quot;1.27499999999999991118&quot;
</code></pre>
<p>We can get around this by first scaling up the value before doing the rounding. R recognizes that this scaled value is as close as possible to an integer, so coerces it to be one:</p>
<pre><code>&gt; sprintf(&quot;%.20f&quot;, 1.275*10^3)
[1] &quot;1275.00000000000000000000&quot;
</code></pre>
<p>You could use this function to make a version of your data which rounds 5's as you expect, for numbers of any order of magnitude.</p>
<pre><code>sig &lt;- function(x, dig = 3) { signif(round(x * 10^dig), dig) / 10^dig }
dat_merge$MPV2 = sig(dat_merge$MPV)
</code></pre>
<p>EDIT: I added the <code>round</code> step because there are some cases, like <code>1.015 * 1000</code> where the value is not coerced to an integer before <code>signif</code> is applied. I expect that should take care of those situations, but would welcome any suggestion for improvement.</p>
","4","Answer"
"79334386","79334328","<p>Does this solve your problem?</p>
<pre><code>@ECHO OFF
SETLOCAL
set &quot;var1=Hello world&quot;
Echo var1 before: %var1%
call :myDosFunc var1 
Echo var1 after : %var1%
goto :eof

:myDosFunc    -- passing a variable by reference, and changing value
echo   Notice that a variable passed by reference does NOT echo the value, and it echos the variable name instead.

CALL SET &quot;arg2=%%%~1%%&quot;
echo %arg2%
echo   Arg1 variable name = '%~1' and Arg2 value = '%~2'
set &quot;%~1=Good bye world!!!&quot;
goto :eof
</code></pre>
","2","Answer"
"79334425","79334328","<p>Just to clarify, I changed the variable names in the <a href=""https://stackoverflow.com/a/79334386/3074564"">solution provided by Magoo</a>.</p>
<pre><code>set &quot;var1=Hello world&quot;
Echo var1 before: %var1%
call :myDosFunc var1
Echo var1 after : %var1%
goto :eof

:myDosFunc    -- passing a variable by reference, and changing value
CALL SET &quot;arg1Value=%%%~1%%&quot;
echo   Arg1 variable name = '%~1' and Arg1 value = %arg1Value%
set &quot;%~1=Good bye world!&quot;
goto :eof
</code></pre>
","0","Answer"
"79335788","79335736","<p>You are able to define delegate types:</p>
<pre><code>public delegate int FuncHelper&lt;TIn1, TIn2&gt;(TIn1 a, out TIn2 b);

public static TIn2 ExecutionHelper&lt;TIn1, TIn2&gt;(FuncHelper&lt;TIn1, TIn2&gt; function, TIn1 input)
</code></pre>
","3","Answer"
"79335877","79335824","<p>You could use a static variable:</p>
<pre><code>Option Explicit

Sub make_dict(dict As Object)
    Debug.Print &quot;called&quot;
    Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
         
    With dict
    
        .Add &quot;house&quot;, &quot;Haus&quot;
        .Add &quot;dog&quot;, &quot;Hund&quot;
        .Add &quot;cat&quot;, &quot;Katze&quot;
    
    End With

End Sub

Function translate(ByRef a_word As String) As String
    Static dict As Object
    If dict Is Nothing Then make_dict dict
    '~~&gt; how to reference dictionary here ?
  
    If Len(a_word) = 0 Then
        translate = &quot;#NA&quot;
        Exit Function
    End If
    
    Dim found As Boolean
    found = False
    Dim k
    For Each k In dict.keys
        If k = a_word Then
            translate = dict.Item(k)
            found = True
            Exit Function
        End If
    Next k
    
    If found = False Then
        translate = &quot;#NA&quot;
    End If
    
End Function
</code></pre>
","4","Answer"
"79335885","79335824","<p>Your dictionary could be assigned to a global variable, and you can use something like below to return or create and return the dictionary if it doesn't exist.</p>
<pre><code>Dim GlobalDict as Object

Function GetDict() as Object
    If GlobalDict is Nothing then
        'populate global dictionary
    End If
    Set GetDict = GlobalDict
End Function
</code></pre>
","0","Answer"
"79335919","79335824","<pre class=""lang-vb prettyprint-override""><code>Option Explicit

Dim dict As Object

Sub make_dict()

    Set dict = CreateObject(&quot;Scripting.Dictionary&quot;)
    With dict
        .Add &quot;house&quot;, &quot;Haus&quot;
        .Add &quot;dog&quot;, &quot;Hund&quot;
        .Add &quot;cat&quot;, &quot;Katze&quot;
    End With

End Sub

Function translate(rng As Range) As String
    
    Dim k As String
    k = rng.Value
    If Len(k) = 0 Then Exit Function
    
    If dict Is Nothing Then
        make_dict
    End If
  
    If dict.exists(k) Then
        translate = dict(k)
    Else
        translate = &quot;#NA&quot;
    End If
    
End Function
</code></pre>
","2","Answer"
"79336355","79336318","<p><code>paste0</code> expects strings or unevaluted names. To get a name from an unevaluted expression passed via an argument, you can use <code>rlang::ensym()</code>. Or you can directly use <code>rlang::englue()</code>:</p>
<pre class=""lang-r prettyprint-override""><code>pivot_data &lt;- function (input_data, measure_1) {
    input_data %&gt;%
        arrange(name, id) %&gt;%
        pivot_wider(
            names_from = id,
            names_prefix =  rlang::englue(&quot;{{measure_1}}_&quot;),
            values_from = {{measure_1}}
        )
}
</code></pre>
","3","Answer"
"79336747","79336318","<p>Thanks to @Ihora for the help. The <code>names_glue</code> argument seems a bit more appropriate to me (instead of <code>names_prefix</code>) in this situation. It no longer becomes necessary to use <code>englue()</code> or <code>ensym()</code>, since <code>.value</code> is use: <code>names_glue =  &quot;{.value}_{id}&quot;</code>.</p>
<pre class=""lang-r prettyprint-override""><code>library(tidyverse)
data &lt;- data.frame(
  id = c(1, 2, 1, 2, 1, 2),
  name = c(&quot;jane&quot;, &quot;jane&quot;, &quot;lauran&quot;, &quot;lauran&quot;, &quot;james&quot;, &quot;james&quot;),
  month = c(&quot;april&quot;, &quot;april&quot;, &quot;may&quot;, &quot;june&quot;, &quot;june&quot;,&quot;june&quot;))

pivot_data &lt;- function (input_data, measure_1) {
  input_data %&gt;%
    arrange(name, id) %&gt;%
    pivot_wider(
      names_from = id,
      names_glue =  &quot;{.value}_{id}&quot;,
      values_from = {{measure_1}}
    )
}
pivot_data(input_data = data,
           measure_1 = month)
#&gt; # A tibble: 3 × 3
#&gt;   name   month_1 month_2
#&gt;   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  
#&gt; 1 james  june    june   
#&gt; 2 jane   april   april  
#&gt; 3 lauran may     june
</code></pre>
<p><sup>Created on 2025-01-07 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.0</a></sup></p>
","4","Answer"
"79337392","79335824","<p>Evidently, the vocabulary should not be hardcoded:</p>
<p><a href=""https://i.sstatic.net/5188Aj8H.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/5188Aj8H.png"" alt=""enter image description here"" /></a></p>
<p>Thus,</p>
<pre><code>Option Explicit

Dim dict As Collection

Sub make_dict()
  Dim r, i&amp;
  r = Worksheets(&quot;Vocabulary&quot;).[A1].CurrentRegion
  Set dict = New Collection
  On Error Resume Next
  For i = 1 To UBound(r, 1)
    dict.Add r(i, 2), r(i, 1)
  Next
End Sub

Function translate(rng As Range) As String
    Dim k As String
    k = rng.Value
    translate = &quot;#NA&quot;
    If Len(k) = 0 Then Exit Function
    If dict Is Nothing Then make_dict
    On Error GoTo ErrHndlrNA
    translate = dict(k)
ExitFun:
    Exit Function
ErrHndlrNA:
    Resume ExitFun
End Function
</code></pre>
<p>VBA's Collection is the dictionary and can be used instead of any external library object.</p>
","1","Answer"
"79337902","79337812","<p>Do check the database, and ensure that the two date columns you are using are in fact defined in the database as datetime (or date).</p>
<p>Also, do NOT use .AddWith, since then you can have all kinds of conversion errors. Be 100% specific in the paramter type you are trying to use.</p>
<p>Hence, this code:</p>
<pre><code> ' Add parameters to avoid SQL injection
 cmd.Parameters.AddWithValue(&quot;@StartDate&quot;, soldData3YearsStart)
 cmd.Parameters.AddWithValue(&quot;@EndDate&quot;, soldData3YearsEnd)
</code></pre>
<p>Should be written as:</p>
<pre><code>    ' Add parameters to avoid SQL injection
    cmd.Parameters.Add(&quot;@StartDate&quot;, SqlDbType.Date).Value = soldData3YearsStart
    cmd.Parameters.Add(&quot;@EndDate&quot;, SqlDbType.Date).Value = soldData3YearsEnd
</code></pre>
<p>Also, check the database. The column type needs to be of Date, or DateTime, or datetime2. If the column in the database is say text, then of course your query will not work.</p>
<p>You do have a console.WriteLine to test/check the date value(s), and thus I assume they are correct.</p>
<p>So, try the above, and ALWAYS use the .add() method of parameters, and always specify the data type for the parameter.</p>
<p>So far the best guess is the database columns are incorrect.
Hence, open up the table in SQL server in design mode, and check the date column(s) type - make sure they are of date type.</p>
<p>And if they are a datetime2 type, then of course specify that type using SqlDbType.DateTime2</p>
<p>Next up:</p>
<p>Your query does not look at all valid.</p>
<p>You have this &quot;mess&quot;</p>
<pre><code>    Dim query As String =
        &quot;SELECT SUM(Qty) AS SumOfQty FROM &quot; &amp; queryName &amp;
        &quot; ('MBD-X8,MBD-X9,MBD-X10,MBD-X11,MBD-X12,MBD-X13,MBD-H8,MBD-H9,
        MBD-H10,MBD-H11,MBD-H12,MBD-H13,MBD-A1,MBD-A2,MBD-A3,MBD-A4,MBD-B7,MBD-B8,MBD-B9,MBD-BH,MBD-B1,MBD-B2,MBD-B3,MBD-B4,MBD-C2,MBD-C7,MBD-C9,MBD-M1,MBD-P9', 
       @StartDate, @EndDate)
</code></pre>
<p>That is not a valid query.</p>
<p>To sum, you don't need to add/include a bunch of columns, and hence your query should be this:</p>
<pre><code>    Dim query As String =
        $&quot;SELECT SUM(Qty) AS SumOfQty FROM {queryName}
        WHERE SOMEDATECOLUMN BETWEEN @StartDate AND @EndDate&quot;
</code></pre>
<p>Of course, replace &quot;Some Date Column&quot; with YOUR actual date column used. As written, that SQL makes VERY VERY little sense.</p>
<p>And note the nice tip here?</p>
<p>Don't allow such &quot;in-line&quot; sql to wrap off the end of the page, or else you &quot;easy&quot; miss obvious mistakes in your &quot;in-line&quot; SQL.</p>
<p>If you place a $ in front of the string, then you can place variables expressions into the string with {some value in here}. You find this far more easy (and less error prone) then using &quot;+&quot; or &quot;&amp;&quot; to concatenate values into such strings.</p>
<p>And as above shows, you can also warp the SQL over multiple lines for easy reading of the SQL.</p>
<p>However, as posted, the SQL string has a boatload of columns, and they are not required at all. You only need the sum(some column) and the criteria. And your posted code is not even close to working even if it was written in VBA and Access.</p>
","1","Answer"
"79338720","79338676","<p>Since i don't have enought rep to comment Im writing an answer.</p>
<ul>
<li>You might want to export the class and not the instance of the class.
That might be causing an issue - the currentMonth and currentYear won't get reset.</li>
<li>You would also want to avoid creating conflicting class names like Date</li>
</ul>
<pre><code>  // when exporting
  module.exports = myDateClass


  // when importing
  const Date = require('./myDateClass')

  // when calling method - instantiate new class
  const dateClass = new DateClass()
  if (await dateClass.SetMonthAndYear(currentTimeStamp)) {
      console.log(&quot;The month and year are modified&quot;)
  }
  console.log(&quot;Done.&quot;)
</code></pre>
<p>Alternativley you could reset currentMonth and currentYear on every class method call</p>
","1","Answer"
"79339583","79339548","<pre><code>=SUMPRODUCT(G11:G139*(MOD(ROW(G11:G139),2)=1))
</code></pre>
<p>Something like this might work if I understood your question right</p>
","2","Answer"
"79339674","79339550","<p>This is just a cosmetic printing issue due to the way R treats long formulas:</p>
<p>If you run:</p>
<pre><code>formula(paste0(&quot;z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + tt + tt2&quot;))
</code></pre>
<p>You will see R will default to printing it to 2 lines, cutting it off at &quot;tt + tt2&quot; (no matter how wide the console is):</p>
<pre><code>#z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + 
#    tt + tt2
</code></pre>
<p>This is somewhat meaningful to the way R cosmetically shows you the formula - if you run <code>deparse</code>, it will output a character vector of length 2:</p>
<pre><code>deparse(formula(paste0(&quot;z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + tt + tt2&quot;)))

# [1] &quot;z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + &quot;
# [2] &quot;    tt + tt2&quot;  
</code></pre>
<p>However, assigning your original code as <code>df_formulas</code>, you will see that it stores the formula as normal:</p>
<pre><code>df_formulas &lt;- dt_test[, .(.(
  formula(&quot;z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + tt + tt2&quot;)
)), .(b)]

dt_formulas[[2]]

# [[1]]
# z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 +
#   tt + tt2
# &lt;environment: 0x7fa96ff6ffd8&gt;
#   
# [[2]]
# z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 +
#   tt + tt2
# &lt;environment: 0x7fa96ff6ffd8&gt;
# ....
</code></pre>
<p>As you mentioned, this is also why you don't see the comma if you remove some of the variables in the formula code - it has nothing to do with what specifically you are removing, you're simply reducing the length sufficiently to avoid the automatic line break.</p>
","5","Answer"
"79339688","79339550","<p>Maybe you want add a <code>list</code> column, sth like this:</p>
<pre><code>&gt; library(data.table)
&gt; dt_test &lt;- data.table(&quot;a&quot;=rnorm(10), &quot;b&quot;=1:5)
&gt; dt_test[, x := list(rep(list(as.formula(&quot;z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + tt + tt2&quot;)), .N))]
&gt; dt_test$x[[1]]
z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + 
    tt + tt2
&lt;environment: 0x56169e0ce3c8&gt;
</code></pre>
<p>This looks weird during printing,</p>
<pre><code>&gt; dt_test |&gt; head(2)
            a     b                                                                            x
        &lt;num&gt; &lt;int&gt;                                                                       &lt;list&gt;
1: -0.5439367     1 z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + ,    tt + tt2
2:  0.1078461     2 z_val ~ s_val + q_val + L(s_dval, 32:0) + L(q_dval, 2:0) + 1 + ,    tt + tt2
</code></pre>
<p>but actually is a formula:</p>
<pre><code>&gt; class(dt_test$x[[1]])
[1] &quot;formula&quot;
</code></pre>
<p>You might adapt that to your dynamic <code>.(b)</code> stuff. Not sure if you need <code>rep</code> then; <code>data.table</code> doesn't like recycling, so it's needed in this example.</p>
","3","Answer"
"79343123","79341707","<p>&quot;for some reason we have to remove explicit schemas from the T-SQL code&quot;</p>
<p>No you really don't.  Scalar UDFs <em>require</em> the schema to invoke.  So go back to whoever gave you this task and tell them that you need an exception for scalar UDFs.  Suggest that they put all the scalar UDFs in a single schema, and allow that schema to be explicitly qualified in queries.</p>
","3","Answer"
"79344361","79341707","<p>You can't put part of a query as dynamic SQL and part as static. The whole statement has to be static.</p>
<pre class=""lang-sql prettyprint-override""><code>DECLARE @SqlStmt nvarchar(max) = N'
SELECT
  P.Identifier,
  P.IdentifierType,
 ' + schema_name() + '.GetBinaryData(P.Identifier,P.IdentifierType) AS BinData
FROM Parts P;
';

PRINT @SqlStmt;    -- your friend
EXEC sp_executesql @SqlStmt;
</code></pre>
<p>Suffice to say this is probably a bad idea anyway, as noted in the other answer. And that using Scalar UDFs is <em>also</em> a bad idea in the majority of cases (due to poor performance), and rarely actually necessary.</p>
","0","Answer"
"79347069","79343978","<p>There is no reason to use <code>lambda</code> for the <code>command</code> attribute of a button, unless you need the command to pass one or more arguments. The <code>lambda</code> with no arguments only serves to make the code more complicated than it needs to be.</p>
","1","Answer"
"79347352","79346982","<p>You need to upgrade your version of H2 to 2.*.* and declare a function with Java arrays with some exact data type of elements:</p>
<pre class=""lang-sql prettyprint-override""><code>CREATE ALIAS IF NOT EXISTS ARRAY_CONTAINS_ALL AS '
import java.util.*;
@CODE
Boolean arrayContainsAll(String[] sourceArray, String[] subArray) {
    if (sourceArray == null || subArray == null) {
        return null;
    }
    if (subArray.length == 0) {
        return true;
    }
    HashSet&lt;String&gt; subSet = new HashSet&lt;&gt;(Arrays.asList(subArray));
    if (subSet.contains(null)) {
        return null;
    }
    HashSet&lt;String&gt; sourceSet = new HashSet&lt;&gt;(Arrays.asList(sourceArray));
    if (sourceSet.containsAll(subSet)) {
        return true;
    }
    if (sourceSet.contains(null)) {
        return null;
    }
    return false;
}
';
</code></pre>
<p>If you need to support multiple data types, you can try to write a Java class with methods with the same name and with different parameters, put it into classpath of H2 and load them with <code>CREATE ALIAS … FOR 'package.class.method'</code>.</p>
<p>Really old versions of H2 have weird implementation of <code>ARRAY</code> data type not compatible with anything. In these versions you can only mess with internal classes of H2, it can pass arrays to user-defined functions only as <code>org.h2.value.Value</code>.</p>
","1","Answer"
"79351576","79351527","<p>I'm pretty sure some package already implements something like that but you can write a recursive function:</p>
<pre><code>foo &lt;- function(x) paste(x, &quot;foo&quot;)
bar &lt;- function(x) paste(x, &quot;bar&quot;)
baz &lt;- function(x) paste(x, &quot;baz&quot;)

caller &lt;- function(x, funcs) {
  res &lt;- funcs[[1]](x)
  if (length(funcs) == 1) res else Tailcall(caller, res, funcs[-1])
}

caller(&quot;hello&quot;, list(foo, bar, baz))
#[1] &quot;hello foo bar baz&quot;
</code></pre>
","2","Answer"
"79351587","79351527","<p>Here is a base R approach with <a href=""https://stat.ethz.ch/R-manual/R-devel/library/base/html/funprog.html"" rel=""nofollow noreferrer""><code>Reduce()</code></a>, which <em>uses a binary function to successively combine the elements of a given vector and a possibly given initial value</em>:</p>
<pre class=""lang-r prettyprint-override""><code>combinef &lt;- function(init, ...) {
    Reduce(
        \(x, y) y(x), list(...),
        init = init
    )
}

combinef(&quot;hello&quot;, caesar, atbash)
# [1] &quot;runnk&quot;
</code></pre>
<p>Alternatively, you could use <a href=""https://purrr.tidyverse.org/reference/compose.html"" rel=""nofollow noreferrer""><code>purrr::compose()</code></a>, which crease <em>a new function that is the composition of multiple functions</em>:</p>
<pre class=""lang-r prettyprint-override""><code>combinef2 &lt;- purrr::compose(atbash, caesar)
combinef2(&quot;hello&quot;)
# [1] &quot;runnk&quot;
</code></pre>
","4","Answer"
"79351601","79351527","<p>Any of these would work:</p>
<pre><code># 1 - base R
combine1 &lt;- function(x, ...) Reduce(\(x, f) f(x), list(...), init = x)
combine1(pi, sqrt, round) # 2

# 2 - base R
combine2 &lt;- function(x, ...) {
   for(f in list(...)) x &lt;- f(x)
   x
}
combine2(pi, sqrt, round) # 2

# 3 - purrr
library(purrr)
combine3 &lt;- function(x, ...) reduce(list(...), \(x, f) f(x), .init = x)
combine3(pi, sqrt, round) # 2

# 4 - purrr
library(purrr)
combine4 &lt;- function(x, ...) do.call(&quot;compose&quot;, rev(list(...)))(x)
combine4(pi, sqrt, round) # 2

# 5 - functional
library(functional)
combine5 &lt;- function(x, ...) Compose(...)(x)
combine5(pi, sqrt, round) # 2

# 6 - magrittr
library(magrittr)
combine6 &lt;- function(x, ...) freduce(x, list(...))
combine6(pi, sqrt, round) # 2

# 7 - magrittr - create a new function to run both functions
newfun &lt;- . %&gt;% sqrt %&gt;% round
newfun(pi)
</code></pre>
<h2>Update</h2>
<p>Rearranged presentation.</p>
","2","Answer"
"79352837","79352694","<p>It seems that in</p>
<blockquote>
<p><code>outerFunc(innerFunc, [2, 4, 5]) % doesn't work</code></p>
</blockquote>
<p>you intend to <strong>pass</strong>  <code>innerFunc</code> as an input to <code>outerFunc</code>. However, what that line does is <strong>call</strong> <code>innerFunc</code> (which gives an error because the input to that function is missing); and the output of that function call would then be used as input to <code>outerFunc</code>.</p>
<p>To pass (a handle of) <code>innerFunc</code> as an input to <code>outerFunc</code> you need to prepend <code>@</code> (more information <a href=""https://www.mathworks.com/help/matlab/matlab_prog/creating-a-function-handle.html"" rel=""noreferrer"">here</a>):</p>
<pre><code>outerFunc(@innerFunc, [2, 4, 5])
</code></pre>
","5","Answer"
"79357711","79357529","<p><strong>(A) In base</strong>, you can start from</p>
<ol start=""0"">
<li>Set-up data</li>
</ol>
<pre class=""lang-r prettyprint-override""><code>regularVar_names = c(&quot;Var1&quot;,&quot;Var2&quot;)

input.ds.2018 = data.frame(Var1 = c(1,1,NA,NA,1,2),
                           Var2 = rep(c(1,2),3),
                           V3 = c(NA,rep(2,4),1),
                           y_4 = c(NA,&quot;y&quot;,&quot;z&quot;,&quot;l&quot;,&quot;m&quot;,&quot;n&quot;), 
                           X_AGE80 = c(17,18,NA,84,21,72))

input.ds.2017 = data.frame(Var1 = c(1,NA,NA,NA,1,2),
                           Var2 = rep(c(1,2),3),
                           V3 = c(NA,rep(2,4),1),
                           y_4 = c(NA,&quot;y&quot;,&quot;z&quot;,&quot;l&quot;,&quot;m&quot;,&quot;n&quot;), 
                           X_AGE80 = c(17,18,NA,84,21,72))
</code></pre>
<ol>
<li>Collect data frames in list (if not already done)</li>
</ol>
<pre class=""lang-r prettyprint-override""><code>l = mget(ls(pattern = &quot;^input.ds.&quot;)) # could be more specific
</code></pre>
<ol start=""2"">
<li>Define function</li>
</ol>
<pre class=""lang-r prettyprint-override""><code>f = \(X, y, lower, upper) {
  stopifnot(c(y, &quot;X_AGE80&quot;) %in% names(X))
  X = subset(X, X_AGE80 %in% lower:upper)
  vapply(X[y], \(i) length(i[!is.na(i)]), numeric(1L))
}
</code></pre>
<ol start=""3"">
<li>Apply function <code>f</code> on list of data frames <code>l</code></li>
</ol>
<pre class=""lang-r prettyprint-override""><code>vapply(l, f, y = regularVar_names, lower = 18, upper = 84, numeric(length(l)))

</code></pre>
<pre class=""lang-r prettyprint-override""><code>     input.ds.2017 input.ds.2018
Var1             2             3
Var2             4             4
</code></pre>
<p>You might want to add <code>|&gt; as.data.frame()</code>.</p>
<ol start=""4"">
<li>Optionally, we could rename <code>Var1</code>, <code>Var2</code> to something else</li>
</ol>
<pre class=""lang-r prettyprint-override""><code> vapply(l, f, y = regularVar_names, lower = 18, upper = 84, numeric(length(l))) |&gt; 
  `row.names&lt;-`(paste0(&quot;unwt_denom_&quot;, regularVar_names))
</code></pre>
<p>What does it mean? It might be better to track those names as separate colum.</p>
<p><strong>(B) With purrr + dplyr</strong></p>
<pre class=""lang-r prettyprint-override""><code>library(dplyr)
library(purrr)
map_df(l, ~ { . |&gt;
  filter(X_AGE80 %in% 18:84) |&gt;
  summarise(across(regularVar_names, ~length(.[!is.na(.)]))) }, .id = &quot;DF_name&quot;) }
)
</code></pre>
<p>or</p>
<pre class=""lang-r prettyprint-override""><code>f2 = \(X, y, lower, upper) {
  stopifnot(c(y, &quot;X_AGE80&quot;) %in% names(X))
  X |&gt; filter(X_AGE80 %in% 18:84) |&gt;
    summarise(across(regularVar_names, ~length(.[!is.na(.)])))
}

map_df(l, f2, y = regularVar_names, lower = 18, upper = 84, .id = &quot;DF_name&quot;)
</code></pre>
<pre class=""lang-r prettyprint-override""><code>           name Var1 Var2
1 input.ds.2017    2    4
2 input.ds.2018    3    4
</code></pre>
","2","Answer"
"79358011","79357529","<p>I'd just classify age groups (e.g. through a join or <code>case_when()</code>) and apply anonymous function in <code>summarise(across(...)))</code> by those groups, something like:</p>
<pre class=""lang-r prettyprint-override""><code>library(dplyr, warn.conflicts = FALSE)
age_groups &lt;- tribble(
  ~grp, ~start, ~end,
  &quot;&lt;18&quot;,   0,  17,
  &quot;18-84&quot;, 18, 84,
  &quot;&gt;84&quot;,   85, Inf 
)

inner_join(input.ds.2018, age_groups, by = join_by(between(X_AGE80, start, end))) %&gt;% 
  # to present inner_join result
  print() %&gt;%
  summarise(across(all_of(regularVar_names), \(x) sum(!is.na(x)), .names = &quot;unwt_denom_{.col}&quot;), .by = grp)

#&gt; # A tibble: 5 × 8
#&gt;    Var1  Var2    V3 y_4   X_AGE80 grp   start   end
#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;
#&gt; 1     1     1    NA &lt;NA&gt;       17 &lt;18       0    17
#&gt; 2     1     2     2 y          18 18-84    18    84
#&gt; 3    NA     2     2 l          84 18-84    18    84
#&gt; 4     1     1     2 m          21 18-84    18    84
#&gt; 5     2     2     1 n          72 18-84    18    84

#&gt; # A tibble: 2 × 3
#&gt;   grp   unwt_denom_Var1 unwt_denom_Var2
#&gt;   &lt;chr&gt;           &lt;int&gt;           &lt;int&gt;
#&gt; 1 &lt;18                 1               1
#&gt; 2 18-84               3               4
</code></pre>
<hr />
<p>But to answer your questions, you can pass data to a function with <code>pick()</code>,
<code>.</code> in this context is not evaluated as a placeholder for <code>magrittr</code> pipe but it's part of the formula notation of <code>across()</code>'s function argument. I personally find anonymous function shorthand from base ( <code>\(x) dosomething(x)</code> ) to be less confusing.</p>
<pre class=""lang-r prettyprint-override""><code># to pass data for ...
calc_unwt_n_regularVar_fn_df = function(data, VAR, age_min = 0, age_max = 999){
  # VAR is a promise, embrace it with {{}}, https://dplyr.tidyverse.org/articles/programming.html#indirection
  data %&gt;%
    filter(between(X_AGE80, age_min, age_max), !is.na({{VAR}})) %&gt;%
    nrow()
}

# ... use pick(), it will also correctly handle grouped data
input.ds.2018 %&gt;%
  summarize(across(all_of(regularVar_names), 
                   \(x) calc_unwt_n_regularVar_fn_df(pick(x, X_AGE80), VAR = x, age_min = 18, age_max = 84), 
                   .names = &quot;unwt_denom_{.col}&quot;))
#&gt; # A tibble: 1 × 2
#&gt;   unwt_denom_Var1 unwt_denom_Var2
#&gt;             &lt;int&gt;           &lt;int&gt;
#&gt; 1               3               4
</code></pre>
<hr />
<p>Example data:</p>
<pre class=""lang-r prettyprint-override""><code>
input.ds.2018 = tibble(
  Var1 = c(1, 1, NA, NA, 1, 2),
  Var2 = rep(c(1, 2), 3),
  V3 = c(NA, rep(2, 4), 1),
  y_4 = c(NA, &quot;y&quot;, &quot;z&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;),
  X_AGE80 = c(17, 18, NA, 84, 21, 72)
)

regularVar_names = c(&quot;Var1&quot;,&quot;Var2&quot;)
</code></pre>
","1","Answer"
"79358015","79357998","<p>The issue lies in the structure of the <code>tools</code> parameter. The functions were unnecessarily wrapped in a <code>&quot;function&quot;</code> key, which the OpenAI API does not recognize. Each function should be defined directly in the <code>tools</code> list with the following keys:</p>
<ul>
<li><strong><code>name</code></strong>: The function's name (required for the API to identify it).</li>
<li><strong><code>description</code></strong>: A brief explanation of what the function does.</li>
<li><strong><code>parameters</code></strong>: A JSON Schema that defines the expected input for the function.</li>
</ul>
<p>Here’s the corrected structure:</p>
<pre class=""lang-py prettyprint-override""><code>tools = [
    {
        &quot;name&quot;: &quot;initialize_conversation&quot;,
        &quot;description&quot;: &quot;Initialize the conversation for the shopping assistant chatbot.&quot;,
        &quot;parameters&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {},
            &quot;required&quot;: [],
            &quot;additionalProperties&quot;: False,
        },
    },
    {
        &quot;name&quot;: &quot;get_chat_completions&quot;,
        &quot;description&quot;: &quot;Fetch chat completions based on the user’s input.&quot;,
        &quot;parameters&quot;: {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
                &quot;input&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;The user’s input or query.&quot;
                },
                &quot;json_format&quot;: {
                    &quot;type&quot;: &quot;boolean&quot;,
                    &quot;description&quot;: &quot;Whether the output should be in JSON format.&quot;
                },
            },
            &quot;required&quot;: [&quot;input&quot;],
            &quot;additionalProperties&quot;: False,
        },
    },
]
</code></pre>
<p>Give a look at this: <a href=""https://platform.openai.com/docs/guides/function-calling"" rel=""nofollow noreferrer"">https://platform.openai.com/docs/guides/function-calling</a></p>
","0","Answer"
"79358706","79356173","<p>Without your data, I created dummy data to explain the concept of how to use a COUNTIFS formula to achieve your goal. You asked to count all the Progress categories for the dates between the dates listed.</p>
<p>First you want the month numbers for your month labels, so I added 1-12 above those we'll use for comparison. Then I added another column to your table to apply the logic you explained, where if there is no end date I use today's date using the <code>today()</code> formula.</p>
<p>Lastly, I use a <code>countifs</code> to count how many &quot;Complete&quot; or &quot;&lt; 100%&quot; there is for every date &gt;= the start date, and &lt;= the end date. I use the date function to construct the first date of the month and the end of the month so that it doesn't matter when the date appears in the month it will use the entire month's dates.</p>
<p>These are the formulas I used adjust as needed:</p>
<p><code>=IF(ISBLANK(B2),TODAY(),B2)</code></p>
<p><code>=COUNTIFS($C$2:$C$8,$G3,$A$2:$A$8,&quot;&lt;=&quot; &amp; DATE($G$2,H$1,1),$D$2:$D$8,&quot;&gt;=&quot;&amp; EOMONTH(DATE($G$2,H$1,1),0))</code></p>
<p><a href=""https://i.sstatic.net/4f7lydLj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/4f7lydLj.png"" alt=""Image1"" /></a></p>
","2","Answer"
"79358798","79356173","<p>Using latest Microsoft 365 you could use:</p>
<pre><code>=LET(e,EOMONTH,
     m,MIN(A2:A22),
     s,SEQUENCE(,DATEDIF(e(m,0),e(TODAY(),0),&quot;m&quot;)+1,0),
     z,EDATE(e(m,0),s),
     i,LAMBDA(j,TOCOL(IFS((z&gt;=e(+A2:A22,0))*(z&lt;=e(+IF(B2:B22=&quot;&quot;,TODAY(),B2:B22),0)),j),2)),
PIVOTBY(i(C2:C22),i(e(m,s)),i(s),ROWS,0,0,,0))
</code></pre>
<p>It starts by getting a horizontal sequence of months (from smallest date up to today).</p>
<p>Next with <code>i</code> we check if the start date is smaller or equal to and the end date is greater than equal to these months and create a 2d boolean-array out if this. If it does, return the input <code>j</code>, else it returns an error. If we use TO OK on the result of <code>i</code> we flatten the results.</p>
<p>We can now use this inside PIVOTBY to get the results per month (format the header row as <code>&quot;mm-yyyy&quot;</code>)</p>
","2","Answer"
"79361886","79360977","<p>Using <code>enquo()</code> and <code>as_label()</code> from <code>rlang</code> package is one option:</p>
<pre><code>pivot_and_string_dist &lt;- function(input_data,
                                  measure_1,
                                  string_dist_method){
  
  m1 &lt;- rlang::as_label(rlang::enquo(measure_1))
  
  # section 1 - works fine
  # see (1) below for output after this section
  data_pivoted &lt;- input_data %&gt;%
    pivot_wider(names_from = id,
                names_glue =  &quot;{.value}_{id}&quot;,
                values_from = c({{measure_1}}))
  
  data_string_dist &lt;- data_pivoted %&gt;%
    mutate(string_dist_1 =
             stringdist(.data[[(paste0(m1, &quot;_1&quot;))]],
                        .data[[(paste0(m1, &quot;_2&quot;))]],
                        method = string_dist_method,
                        p = 0.1))
  
  return(data_string_dist)
}
</code></pre>
<p>Usage and Output</p>
<pre><code>pivot_and_string_dist(input_data = data,
                      measure_1 = name,
                      string_dist_method = &quot;jw&quot;)

# A tibble: 3 × 4
  city   name_1 name_2 string_dist_1
  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;          &lt;dbl&gt;
1 London jane   janey         0.0400
2 Lisbon jane   janee         0.0400
3 Paris  lauran laura         0.0333

</code></pre>
","2","Answer"
"79365300","79365181","<p>The information in the Wikipedia article is incomplete.  You need to refer to the IEEE Std 1800-2023 for more details.  It distinguishes between functions with implicit or explicit lifetimes, based on whether the function is declared inside a module or class, for example.</p>
<p>Based on that, you can then determine the rules for variables within the function.</p>
<p>The error message explains the reason the simulator considers it an error.  Refer to the QuestaSim documentation to see if there is further information on the &quot;<strong>qverilog-2244</strong>&quot; category.  The error is also labeled &quot;<strong>suppressible</strong>&quot;, which I presume means you can suppress the error by configuring your tool differently.  I don't have experience with QuestaSim, so, again, read the documentation.  Before suppressing the error, you should fully understand the implications of doing so.</p>
<p>Other simulators allow this in varying degrees.  For example, I placed your function inside a module, and the Cadence simulator generated a warning message similar to the QuestaSim error message you got.  It was only a warning (not an error), which means the simulation could run.</p>
<p>By default, the Synopsys simulator did not generate any message.  I needed to explicitly enable linting to see the similar warning message to the other 2 simulators.  Try your code on EDA Playground to see what I mean.</p>
","1","Answer"
"79366072","79366045","<p>You can't do this in any reasonable way. The indexing instruction can't begin until the function returns a result, period.</p>
<p>The best you could do to achieve a result similar to this would be to have <code>func1</code> actually be a <em>class</em> that stores its arguments without doing any work until a <code>__getitem__</code> or <code>__repr__</code>/<code>__str__</code> or whatever call requires it to do some work. In specific cases, this might be an improvement in performance, the code is just more complicated.</p>
<p>Trivial example:</p>
<pre><code>import collections.abc
from operator import index

class lazy_mapping(collections.abc.Sequence):
    def __init__(self, list1):
        self._list1 = list1

    def __getitem__(self, idx_or_slice):
        if isinstance(idx_or_slice, slice):
            # Only do real work for elements from slice
            return [do_real_work(x) for x in self._list1[idx_or_slice]]

        # It's not a slice, do the real work for the single item indexed
        return do_real_work(self._list1[idx_or_slice])

    def __len__(self):
        return len(self._list1)

    def __repr__(self):
        return repr(self[:])  # Represent the class as the repr of the list produced by applying the function
</code></pre>
<p>And it would be used exactly as you propose, with <code>print(f&quot;{lazy_mapping(list1_1)[0]}&quot;)</code> only performing the real work for index <code>0</code>, not the rest of <code>list1_1</code>, and <code>print(f&quot;{func1(list1_1)}&quot;)</code> performing the complete mapping as part of producing the <code>repr</code>. Inheriting from <code>collections.abc.Sequence</code> means you can allow it to provide the fallback implementations for all the things that are straightforward and mostly boilerplate.</p>
<p>By performing the work in <code>__getitem__</code>, you can limit it to the items actually requested. The risk is that they request data for many such elements, repeatedly, and now you're doing more work to optimize the &quot;only want a single item&quot; case at the expense of the &quot;need the entire result (or multiple access to many elements)&quot; case. A complicated result-caching algorithm could mitigate this, at the expense of even more complex code.</p>
","3","Answer"
"79366374","79365181","<p>The Wikipedia article is not correct. The implicit lifetime of variable declared inside a task for function matches the lifetime of of the task or function.</p>
<p>Assuming your function is not declared as a class method, its default lifetime is static, which makes the variable lifetime static. Almost all other languages have functions with automatic lifetimes and have no concept of functions with static lifetimes. That's reason why that code is illegal and is further explained <a href=""https://stackoverflow.com/questions/72905299/declaring-variables-in-verilog-for-loop"">here</a>.</p>
<p>There are a number of way to change the lifetime of a function discussed in the LRM so you do not run into this issue.</p>
","1","Answer"
"79367036","79360138","<p><strong>This is what I understood from your question:</strong></p>
<p><strong>You want to prompt for the filename and if the user cancels the prompt, then you want to cancel the download.</strong></p>
<p>This is not the expected behaviour from the <code>filename</code> option. The jsfiddle demos(<a href=""https://jsfiddle.net/dtwilliamson/fnsa8mw3/"" rel=""nofollow noreferrer"">Demo - Anonymous function</a>, <a href=""https://jsfiddle.net/dtwilliamson/avh4c9L6/"" rel=""nofollow noreferrer"">Demo - Named function</a>) you included <strong>appear</strong> to behave like this. But if you actually check the console, an error is thrown when the user cancels the prompt. This is becuase the <code>Datatables</code> did not get the proper <strong>string</strong> filename.</p>
<p>The Buttons extension version you have included in the demos is <strong>1.2.4</strong>. So when the user cancels the prompt, <code>filename</code> is returned as <code>null</code> and an error is thrown at <a href=""https://github.com/DataTables/Buttons/blob/ce023071219aca6933f931a82f26d51bc484bd5c/js/buttons.html5.js#L248"" rel=""nofollow noreferrer"">this line</a>:</p>
<pre><code>if ( filename.indexOf( '*' ) !== -1 ) {
    filename = $.trim( filename.replace( '*', $('title').text() ) );
}
</code></pre>
<p>In the new versions of Buttons extension (3.2.0 - which you have included in your <strong>Reproducer Demo</strong>), <code>null</code> is returned if the user defined function returns <code>null</code> or <code>undefined</code> for the <code>filename</code>. So the Datatables will use the <strong>default</strong> value for the <code>filename</code> and continue to download it, even after the user cancels the filename prompt.</p>
<p><a href=""https://github.com/DataTables/Buttons/blob/c1323a1e9ec7d9aa3de32839dde49229b09649ae/js/dataTables.buttons.js#L2624"" rel=""nofollow noreferrer"">Snippet from here</a></p>
<pre><code>if (filename === undefined || filename === null) {
    return null;
}
</code></pre>
<p><strong>So how to cancel the file download, when the user cancels the filename prompt?</strong></p>
<p>One option is you can throw your own exception.</p>
<pre><code>function propose_filename () {
    const date = new Date()
    const proposed = $(document).prop('title') + &quot; &quot; + date.toISOString()
    const filename = prompt(&quot;Please enter your file name&quot;, proposed);
    if (filename != null) {
        return filename;
    }
    
    throw new Error('File cannot be downloaded!');
}
</code></pre>
<p>Here is the <a href=""https://jsfiddle.net/wdspj0h5/"" rel=""nofollow noreferrer"">working demo</a>. You can see that it is working both as named function and anonymous function.</p>
<p><strong>Update based on the comment: I would like to avoid leaving an uncaught exception.</strong></p>
<p>Two solutions:</p>
<ol>
<li>You can handle the above error using the <code>window.onerror</code>:</li>
</ol>
<pre><code>window.onerror = (a, b, c, d, e) =&gt; {
    if (e.message == 'File cannot be downloaded!') {
        // Handle filename error
        console.log('File not downloaded!')

        return true;
    }
}
</code></pre>
<ol start=""2"">
<li>If you don't want to deal with throwing the <code>Errors</code>, then there is an another option. You can override the default button <code>action</code> and implement your own <code>action</code>. Here you can call the function to get the filename and after getting the filename you can call the default action to export the file.</li>
</ol>
<p>Example for the Excle HTML5 button:</p>
<pre><code>// Excel HTML5 export button
{
    text: 'Excel - Custom Action',
    extend: &quot;excelHtml5&quot;,
    exportOptions: { orthogonal: &quot;export&quot; },
    action: function (e, dt, node, config, cb) {
        // Do custom processing

        let filename = propose_filename_without_error();

        if (typeof filename === 'string') {
          // Call the default excelHtml5 action method to create the CSV file
          DataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config, cb);
        } else {
          console.log('File not downloaded!')
        }
    }
}
</code></pre>
<p>I've updated the demo with the above code.</p>
","1","Answer"
"79367078","79366909","<p>Try a <code>formula</code> for the <code>nls</code>, in this case <code>activity ~ C0 * exp(-lambda1 * actual_time)</code>.</p>
<p>You can use <code>as.formula(paste(y, &quot;~ C0*exp(-lambda1*&quot;, x, &quot;)&quot;, sep = &quot;&quot;))</code>, or <code>sprintf</code> as shown below.</p>
<p>To name the variable in <code>list</code> in the <code>newdata=</code> argument of <code>predict</code> with the name you specified in <code>x</code>, use <code>setNames</code>.</p>
<p>Note, that using <code>df[[x]]</code> is possible, as ist's still used in <code>lm</code>. But then the <code>data=</code> argument is redundant.</p>
<p>The <code>as.numeric</code> can be confusing, as it is actually already <code>&quot;numeric&quot;</code>. Use <code>unname</code> instead.</p>
<pre><code>curve_fit &lt;- function(x, y, df, plot=FALSE) {
 ## Mono-exponential model for activity using actual sampling time
 mod &lt;- lm(log(df[[y]]) ~ df[[x]], data=df)  ## get starting values from log-linear model
 C0 &lt;- unname(exp(mod$coef[1]))  ## exponential of log-linear intercept
 lambda1 &lt;- unname(abs(mod$coef[2]))  ## absolute value of slope of log-linear model
 fo &lt;- as.formula(sprintf('%s ~ C0*exp(-lambda1*%s)', y, x))
 nls_mod_mono &lt;- nls(fo, start=c(C0=C0, lambda1=lambda1), data=df)
 xNew &lt;- seq(0, 240, length.out=100)  ## new grid of times
 yNew &lt;- predict(nls_mod_mono, newdata= list(xNew) |&gt; setNames(x))  ## predict activity
 fit_df &lt;- data.frame(x=xNew, y=yNew)
 mono_half_life &lt;- 0.693/coef(nls_mod_mono)[2]  ## half-life
 mono_auc &lt;- coef(nls_mod_mono)[1]/coef(nls_mod_mono)[2]  ## AUC to infinity (can be estimated in mono case by simply dividing the intercept by lambda)
 list(fit_df=fit_df, 
      mono_half_life=unname(mono_half_life), 
      mono_auc=unname(mono_auc))
}

&gt; res &lt;- curve_fit(&quot;actual_time&quot;, &quot;activity&quot;, dat_small)
&gt; res$mono_half_life
[1] 53.25588
&gt; res$mono_auc
[1] 615006.6
</code></pre>
<p>I recommend plotting the curve outside the function to avoid feature-creeping.</p>
<pre><code>par(mar=c(5, 4, 2, 2))
plot(y ~ x, res$fit_df, type='l', xlab='Actual Sampling Time (mins)',
     ylab=&quot;Activity (Bq)&quot;, las=1)
</code></pre>
<p><a href=""https://i.sstatic.net/oqRmwFA4.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/oqRmwFA4.png"" alt=""enter image description here"" /></a></p>
","4","Answer"
"79367138","79366909","<p>Questions to SO should have minimal code focused on the problem at hand.  Here the question is how to avoid the error in the <code>nls</code> call so everything after that is not relevant and we omit it. (We do point out, however, that <code>aes</code> in ggplot2 accepts unquoted variables and since <code>x</code> and <code>y</code> are character write it like this <code>aes(.data[[x]], .data[[y]])</code> .)</p>
<p><strong>1)</strong> An easy fix is probably just to avoid the problem by defining a data frame with fixed x and y column names and then use that.</p>
<pre><code>curve_fit1 &lt;- function(x, y, df) {
  data &lt;- data.frame(x = df[[x]], y = df[[y]])
  co &lt;- coef(lm(log(y) ~ x, data))
  st &lt;- c(C0 = exp(co[[1]]), lambda1 = -co[[2]])
  nls(y ~ C0 * exp(-lambda1 * x), data = data, start = st) 
}

curve_fit1(&quot;actual_time&quot;, &quot;activity&quot;, dat_small)
</code></pre>
<p>giving</p>
<pre><code>Nonlinear regression model
  model: y ~ C0 * exp(-lambda1 * x)
   data: data
       C0   lambda1 
8.003e+03 1.301e-02 
 residual sum-of-squares: 270020

Number of iterations to convergence: 4 
Achieved convergence tolerance: 4.228e-06
</code></pre>
<p><strong>2)</strong> Even easier is to use the <code>NLS.expoDecay</code> self starting function in the statforbiology package in which case no starting value is needed.  The output is as in (1).</p>
<pre><code>library(statforbiology)

curve_fit2 &lt;- function(x, y, df) {
  data &lt;- data.frame(x = df[[x]], y = df[[y]])
  nls(y ~ NLS.expoDecay(x, C0, lambda1), data)
}

curve_fit2(&quot;actual_time&quot;, &quot;activity&quot;, dat_small)
</code></pre>
<p><strong>3)</strong> We could alternately use <code>substitute</code> to substitute the variables into the formula.  This can apply to either (1) or (2). We will show it as applied to (2).</p>
<pre><code>library(statforbiology)

curve_fit3 &lt;- function(x, y, df) {
  fo &lt;- substitute(y ~ NLS.expoDecay(x, C0, lambda1), 
    list(x = as.name(x), y = as.name(y)))
  nls(fo, df)
}

curve_fit3(&quot;actual_time&quot;, &quot;activity&quot;, dat_small)
</code></pre>
<p>giving</p>
<pre><code>Nonlinear regression model
  model: activity ~ NLS.expoDecay(actual_time, C0, lambda1)
   data: df
       C0   lambda1 
8.003e+03 1.301e-02 
 residual sum-of-squares: 270020

Number of iterations to convergence: 4 
Achieved convergence tolerance: 4.228e-06
</code></pre>
<p><strong>4)</strong> Yet another altertnative is to use the drc package together with DRC.exponDecay from statforbiology.  In this case the simple form of formula accepted allows us to use <code>reformulate</code> to generate it and furthermore the <code>drc</code> class object produced from <code>drm</code> has <code>coef</code>, <code>plot</code> and other methods -- try <code>methods(class = &quot;drc&quot;)</code> .</p>
<pre><code>library(drc)
library(statforbiology)

curve_fit4 &lt;- function(x, y, df) {
  drm(reformulate(x, y), data = df, fct = DRC.expoDecay())
}

res &lt;- curve_fit4(&quot;actual_time&quot;, &quot;activity&quot;, dat_small)
plot(res)
</code></pre>
<p><a href=""https://i.sstatic.net/jt9TD3NF.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/jt9TD3NF.png"" alt=""screenshot"" /></a></p>
","4","Answer"
"79368071","79367871","<p>Arkadiusz Drabczyk (see the comments on my original question) actually answered my question. That answer though led me to a non-obvious conclusion so I thought I would post that here in case it was of use to someone else.</p>
<p>The reason __fortify_function is there is that DoLog uses __va_arg_pack which resolves to __builtin_va_arg_pack which according to the docs:</p>
<blockquote>
<p>-- Built-in Function: __builtin_va_arg_pack ()
This built-in function represents all anonymous arguments of an
inline function.  It can be used only in inline functions that are
always inlined, never compiled as a separate function, such as
those using '<strong>attribute</strong> ((<strong>always_inline</strong>))' or '<strong>attribute</strong>
((<strong>gnu_inline</strong>))' extern inline functions.  It must be only
passed as last argument to some other function with variable
arguments.  This is useful for writing small wrapper inlines for
variable argument functions, when using preprocessor macros is
undesirable.</p>
</blockquote>
<p>So __fortify_function sets up the correct attributes to use __va_arg_pack.</p>
","0","Answer"
"79368331","79368152","<p>I was unable to see the function in the Azure Function App until I added the env details to the App Settings. Once I added the env details, I was able to see the function in the Azure Function App.</p>
<p><strong>local.settings.json :</strong></p>
<pre class=""lang-json prettyprint-override""><code>&quot;AzureWebJobsStorage&quot;: &quot;&lt;storageConneString&gt;&quot;,
&quot;SOURCE_CONTAINER_NAME&quot;: &quot;&lt;sourceContainer&gt;&quot;,
&quot;DESTINATION_CONTAINER_NAME&quot;: &quot;&lt;destinationContainer&gt;&quot;,
&quot;YOU_SAS_TOKEN&quot;: &quot;&lt;SAStoken&gt;&quot;,
&quot;SPEECH_API_KEY&quot;: &quot;&lt;speechKey&gt;&quot;
</code></pre>
<p>Azure Function App &gt; Environment Variables &gt; App Settings.</p>
<p><img src=""https://i.imgur.com/bGXwq49.png"" alt=""enter image description here"" /></p>
<p><strong>Azure Function App :</strong></p>
<p><img src=""https://i.imgur.com/mdBDJVe.png"" alt=""enter image description here"" /></p>
<p><strong>Invocations :</strong></p>
<p>I successfully got the output logs in the Function's Invocations.</p>
<p><img src=""https://i.imgur.com/49ZwNHO.png"" alt=""enter image description here"" /></p>
","2","Answer"
"79374569","79374445","<p>This version will be quicker, but it does not solve the issue of colorIndex not being correct:</p>
<pre><code>Public Function VLookupCC(lookup_value As Variant, lookup_range As Range, column_index As Long) As Variant

Dim i As Long
Dim colorindex_result As Long

If column_index &lt; 1 Or column_index &gt; lookup_range.Columns.Count Then
    VLookupCC = CVErr(xlErrValue)
    Exit Function
End If
On Error Resume Next
i = Application.Match(lookup_value, lookup_range.Columns(1), 0)
On Error GoTo 0
If i &lt;&gt; 0 Then
    VLookupCC = lookup_range.Cells(i, column_index).Value
    colorindex_result = lookup_range.Cells(i, column_index).Interior.ColorIndex
    Evaluate &quot;ChangeColor(&quot; &amp; Application.Caller.Address &amp; &quot;, &quot; &amp; colorindex_result &amp; &quot;)&quot;
Else
    VLookupCC = CVErr(xlErrNA)
    Evaluate &quot;ChangeColor(&quot; &amp; Application.Caller.Address &amp; &quot;, &quot; &amp; xlColorIndexNone &amp; &quot;)&quot;
End If

End Function
</code></pre>
","0","Answer"
"79374974","79374445","<p>Why don't you use the <code>Color</code> property but <code>ColorIndex</code>?</p>
<pre><code>Sub ChangeColor(addr, color_result As Long)
     addr.Interior.Color = color_result
End Sub

Public Function VLookupCC(lookup_value As Variant, lookup_range As Range, column_index As Long) As Variant

Dim i As Long
Dim color_result As Long, color_idx_result As Long

If column_index &lt; 1 Or column_index &gt; lookup_range.Columns.Count Then
    VLookupCC = CVErr(xlErrValue)
    Exit Function
End If
On Error Resume Next
i = Application.Match(lookup_value, lookup_range.Columns(1), 0)
On Error GoTo 0
If i &lt;&gt; 0 Then
    VLookupCC = lookup_range.Cells(i, column_index).Value
    color_result = lookup_range.Cells(i, column_index).Interior.Color
    If lookup_range.Cells(i, column_index).Interior.ColorIndex = xlColorIndexNone Then
        color_result = xlColorIndexNone
    End If
Else
    VLookupCC = CVErr(xlErrNA)
    color_result = xlColorIndexNone
End If
Evaluate &quot;ChangeColor(&quot; &amp; Application.Caller.Address &amp; &quot;, &quot; &amp; color_result &amp; &quot;)&quot;
End Function
</code></pre>
","0","Answer"
"79375396","79373335","<p>For simplicity this formula generates random integer for testing.<br />
If there is at least one pair of data in a row, then the formula return an empty string for that row's cells.</p>
<pre><code>=LET(tab,INT(RANDARRAY(25,3,1,25)),
part,IF((CHOOSECOLS(tab,1)=CHOOSECOLS(tab,2))+ 
 (CHOOSECOLS(tab,1)=CHOOSECOLS(tab,3))+ 
 (CHOOSECOLS(tab,3)=CHOOSECOLS(tab,2)),&quot;&quot;,tab),
part)
</code></pre>
<p><a href=""https://i.sstatic.net/z1HoVeA5.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/z1HoVeA5.png"" alt=""enter image description here"" /></a></p>
<p>To apply this for text:</p>
<p><strong>1. Directly in the formula</strong><br />
J1:J77 is the range of the words list.<br />
<code>RANDARRAY</code> last argument (77) is the max number of the items in the list.<br />
The <code>tab</code> variable will contains the random generated table of the words.<br />
<code>RANDARRAY</code> first argument (25) is the number of rows to generate.</p>
<p><code>=LET(tab,INDEX(J1:J77,INT(RANDARRAY(25,3,1,77)),1), part,IF((CHOOSECOLS(tab,1)=CHOOSECOLS(tab,2))+(CHOOSECOLS(tab,1)=CHOOSECOLS(tab,3)) +(CHOOSECOLS(tab,3)=CHOOSECOLS(tab,2)),&quot;&quot;,tab), part)</code></p>
<p><a href=""https://i.sstatic.net/65KZmF2B.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/65KZmF2B.png"" alt=""enter image description here"" /></a></p>
<p><strong>2. Create another table somewhere on the sheet using the table of numbers.</strong></p>
<p>The formula:</p>
<p><code>=IFERROR(INDEX(J1:J77,A1:C25,1),&quot;&quot;)</code></p>
","0","Answer"
"79375720","79374445","<p>Here's a version which makes sure the fill is applied to the correct worksheet and also lets you use a specified lookup column (which can be to the right of the return column)</p>
<p>Note that setting or clearing the fill is going to be by far the slowest part, but there's not much you can do to speed that up.  You could get some boost by checking for the case where <code>ChangeColor</code> gets called twice in a row with the same arguments (tends to happen when using <code>Evaluate</code>), and exit the function in those cases.  That would give you at most a 50% improvement.  If adding a lot of these same formulas via code then first set <code>ScreenUpdating</code> to False.</p>
<pre><code>'Find value `lookup_value` in column `colMatch` of range `lookup_range`
'  and return the value from the column `colReturn` on the matched row
Public Function VLookupCC(lookup_value As Variant, lookup_range As Range, _
                                    colMatch As Long, colReturn As Long) As Variant
    
    Dim m, nc As Long, clr As Long, f As String, c As Range
    
    nc = lookup_range.Columns.count
    If colMatch &lt; 1 Or colMatch &gt; nc Or colReturn &lt; 1 Or colReturn &gt; nc Then
        VLookupCC = CVErr(xlErrValue)
        Exit Function
    End If
    
    m = Application.Match(lookup_value, lookup_range.Columns(colMatch), 0)
    If Not IsError(m) Then
        With lookup_range.Columns(colReturn).Cells(m)
            VLookupCC = .Value
            'check there's a fill before using interior.color
            clr = IIf(.Interior.ColorIndex &lt;&gt; xlNone, .Interior.Color, -1)
        End With
    Else
        VLookupCC = CVErr(xlErrNA)
        clr = -1 'flag to clear fill
    End If
    
    'copying the color (if any)
    Set c = Application.Caller 'the cell with the formula
    f = ReplaceTokens(&quot;ChangeColor({addr},{clr})&quot;, _
                      &quot;{addr}&quot;, c.Address, _
                      &quot;{clr}&quot;, clr)
    c.Parent.Evaluate f '&lt;&lt;&lt; use the correct worksheet context here
End Function

'Set or clear the fill color for cell `c`
'   If fillColor &lt; 0 then clear the fill
Function ChangeColor(c As Range, fillColor As Long)
    Static prevK As String, t
    Dim k As String
    k = c.Address &amp; &quot;|&quot; &amp; fillColor
    'handle case where called twice in quick succession with same args
    If prevK = k And Timer - t &lt; 0.001 Then Exit Function
    
    If fillColor &gt;= 0 Then 'any fill to apply?
        c.Interior.Color = fillColor
    Else
        c.Interior.ColorIndex = xlNone 'clear any existing fill
    End If
    prevK = k
    t = Timer
End Function

'Replace tokens in `msg`: pass pairs of token/replacement values to `args()`
'Eg:  s = ReplaceTokens(&quot;Please {verb} this {noun}&quot;,&quot;{verb}&quot;,&quot;review&quot;,&quot;{noun}&quot;,&quot;report&quot;)
Function ReplaceTokens(msg As String, ParamArray args()) As String
    Dim i As Long, rv As String
    rv = msg
    For i = LBound(args) To UBound(args) Step 2
        rv = Replace(rv, args(i), args(i + 1))
    Next i
    ReplaceTokens = rv
End Function
</code></pre>
","0","Answer"
"79376144","79375994","<p>This should do what you want. I used<br />
Gregor Thomas' cool <code>str_extract(Discription, pattern = &quot;((Former )|(Monitor )|(Never ))?ELs&quot;))</code> and some <code>left_joins</code>.</p>
<pre><code>DO &lt;- DATA %&gt;%
  mutate(
    category = if_else(grepl(&quot;AP/IB&quot;, Discription), &quot;AP_IB&quot;, &quot;CTE&quot;),
    group = str_extract(Discription, pattern = &quot;((Former )|(Monitor )|(Never ))?ELs&quot;)
  ) %&gt;%
  # Get totals
  left_join(DATA %&gt;% filter(grepl(&quot;Total&quot;, Discription)) %&gt;% 
      mutate(
        group = gsub(&quot;Total &quot;, &quot;&quot;, Discription),
        Total = value
      ) %&gt;% select(group, Total), by = &quot;group&quot;) %&gt;%
  # Get percentages
  left_join(DATA %&gt;% filter(grepl(&quot;Percent&quot;, Discription)) %&gt;%
      mutate(
        group = str_extract(Discription, pattern = &quot;((Former )|(Monitor )|(Never ))?ELs&quot;),
        category = if_else(grepl(&quot;AP/IB&quot;, Discription), &quot;AP_IB&quot;, &quot;CTE&quot;)
      ) %&gt;% select(group, category, Percent = value),  by = c(&quot;group&quot;, &quot;category&quot;)
  ) %&gt;%
  filter(!grepl(&quot;Total|Percent&quot;, Discription)) %&gt;%
  select(ResdDistInstID,InstNm, category, group,Discription,Value = value,Total,Percent) %&gt;% arrange(InstNm, category, group)
</code></pre>
","1","Answer"
"79379415","79379410","<p>Assuming I understand correctly your problem:</p>
<pre><code>=IF(AND(E6=&quot;fav&quot;,(INDEX(C6:C7,MATCH(D6,B6:B7,0))-F6)&gt;INDEX(C6:C7,MATCH(H6,B6:B7,0))),&quot;W&quot;,
IF(AND(E6=&quot;dog&quot;,D6=G6),&quot;W&quot;,
IF(AND(E6=&quot;dog&quot;,D6=H6,(INDEX(C6:C7,MATCH(D6,B6:B7,0))+F6)&gt;INDEX(C6:C7,MATCH(G6,B6:B7,0))),&quot;W&quot;,&quot;L&quot;)))
</code></pre>
","0","Answer"
"79382402","79382054","<p>Perhaps consider a different approach, via a recursive CTE to split the parts.</p>
<p>e.g as per the following demo:-</p>
<pre><code>DROP TABLE IF EXISTS t;
CREATE TABLE IF NOT EXISTS t (ipaddress TEXT, other TEXT);
/* Add some valid data, number of rows determined by the LIMIT */
/* another use of a CTE */
WITH RECURSIVE
    counter(x) AS (SELECT 1 UNION ALL SELECT x+1 FROM counter LIMIT 10)
INSERT INTO t SELECT '['||abs((random() % 256 -1))||']'
    ||'.['||abs((random() % 256 -1))||']'
    ||'.['||abs((random() % 256 -1))||']'
    ||'.['||abs((random() % 256 -1))||']','Z'||x FROM counter
;
/* Add some rows with invalid data */
INSERT INTO t VALUES
    ('not an ip address at all','blah'),
    ('[1].[2],[3].[4].[5].[6]','blah2');
/* show the loaded data */
SELECT * FROM t;
/*&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Use a recursive CTE to split the data &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;*/
WITH RECURSIVE
    split(current,rest,original,id, other, counter) AS (
        SELECT 
            substr(ipaddress,1,instr(ipaddress,'.')-1),
            substr(ipaddress||'.',instr(ipaddress,'.')+1),
            ipaddress,
            rowid,
            other
            ,1
        FROM t
        UNION ALL 
        SELECT
            substr(rest,1,instr(rest,'.')-1),
            substr(rest,instr(rest,'.')+1),
            original,
            id,
            other,
            counter+1
        FROM split
        WHERE length(rest) &gt; 0
        LIMIT 10000
    )
    /* Use the split data to build the desired output */
    SELECT 
        original AS ipaddress, /* the original ipaddress*/
        other, /* the original other */
        /* generate the new columns */
        replace(replace(current,'[',''),']','') AS ip1,
        (SELECT replace(replace(current,'[',''),']','') FROM split WHERE counter = 2 AND id = s.id) AS ip2,
        (SELECT replace(replace(current,'[',''),']','') FROM split WHERE counter = 3 AND id = s.id) AS ip3,
        (SELECT replace(replace(current,'[',''),']','') FROM split WHERE counter = 4 AND id = s.id) AS ip4,
        /* add a column to show if any garbage (invalid IP's such as IPV6) exists NULL if not*/
        /* of course could handle ipv6 as counter 5 and 6 would be OK and not null*/
        (SELECT group_concat(current) FROM split WHERE counter &gt; 4 AND id = s.id) AS garbage
    FROM split AS s 
    WHERE counter = 1
;
/* Cleanup */
DROP TABLE IF EXISTS t;
</code></pre>
<p>An example run (noting that the source data is randomly generated) starts with data as per:-</p>
<p><a href=""https://i.sstatic.net/A5c6p38J.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/A5c6p38J.png"" alt=""Source"" /></a></p>
<p>And returns:-</p>
<p><a href=""https://i.sstatic.net/KR48CvGy.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KR48CvGy.png"" alt=""Result"" /></a></p>
<p><strong>Additional re comment</strong></p>
<blockquote>
<p>Thank you for your suggestion Mike. I am trying to keep it simplistic just with not being something I am familiar with. So if you have any help on how to change the code to get 4 to work it would be greatly appreciated. I am also using sqlite which is proving challenging for the SQL i am used to.</p>
</blockquote>
<p>It is not simplistic, using SQLite SQL trying to ascertain the nth occurrence and as n increases the complexity increases. This is the issue you have. Perhaps consider trying to handle IPV6 with 6 octets.</p>
<p>CTE's (Common Table Expressions) are really just temporary tables but only exist for the duration of the execution of the statement. They also do not need or have create statements.</p>
<p>A recursive CTE is one that UNION's to itself thus effectively inserting another row typically using and adjusting a value or values. An ABSOLUTE MUST, (as for any recursion otherwise a stack overflow) is that something must end the recursion. a LIMIT or a WHERE clause can denote and end point.</p>
<ul>
<li>note there is no need in SQLite for the RECURSIVE keyword.</li>
</ul>
<p>The above demo has 2 recursive. One to load some sample data which is <code>LIMIT</code>ed to 10 rows.
The second is the CTE that is used to split the source data into according to the <code>.</code>.</p>
<p>For each source row the <code>split</code> CTE has an initial row that has the columns <code>current,rest,original,id, other, counter</code>; where:-</p>
<ul>
<li><code>current</code> contains the first part BUT importantly suffixed with the <code>.</code> <em>(so that the <code>instr</code> for the final part results in a find)</em></li>
<li><code>rest</code> contains the ip_address less the first part.</li>
<li><code>original</code> contains the ip_address in it's entirety.</li>
<li><code>id</code> contains the <code>rowid</code> from the source table (assumes that it is not a <code>WITHOUT ROWID</code> table), this will be unique (ip_address may not be unique)</li>
<li><code>counter</code> will be 1</li>
</ul>
<p>The next iteration (i.e. the UNION) (per source row) IF the rest column has any data (otherwise processing this source row ends, others can continue being processed) then inserts another row (which the next iteration, if one, will process):-</p>
<ul>
<li><code>current</code> contains the first part from <code>rest</code> column being processed (i.e. that the previous iteration inserted)</li>
<li><code>rest</code> contains the remaining parts from the rest column being processed</li>
<li><code>original</code> is copied asis</li>
<li><code>id</code> is copied as is</li>
<li><code>counter</code> is copied but having 1 added thus incrementing it</li>
</ul>
<p>The next iteration does the same and so on until the <code>rest</code> column's length is not greater than 0.</p>
<p>As such the process can split any number of parts (other limitations e.g. memory may restrict this hence the ABOSULUTE MUST for a means to end the recursion).</p>
<p>An IPV6, 6 octets, can very easily be handled.</p>
<p>The SELECT that follows the <code>split</code> CTE then extracts the values noting that a valid IPV4 will have 4 rows per original ip_address hence the subquery to get the nth octet from the <code>split</code> CTE via the id (rowid) value which will, at least for normal SQLite tables, be a  value unique to the respective source.</p>
<p><strong>Easier to understand - non-recursive - limited to 4</strong></p>
<p>Here's an approach that for 4 parts is <em>(barring a determination to not consider the flexibility and simplicity of CTE's)</em> that is very simple to understand:-</p>
<pre><code>WITH
    phase1 AS (
        SELECT 
            substr(ip_address,1,instr(ip_address,'.') -1) AS part1, /* part 1 */
            substr(ip_address,instr(ip_address,'.')+1) AS parts2on,
            rowid,
            *
        FROM tt /* the test table*/
        ),
    phase2 AS (
        SELECT
            *,
            substr(parts2on,1,instr(parts2on,'.')-1) AS part2,
            substr(parts2on,instr(parts2on,'.')+1) AS parts3on
        FROM phase1
        ),
    phase3 AS (
        SELECT
            *,
            substr(parts3on,1,instr(parts3on,'.')-1) AS part3,
            substr(parts3on,instr(parts3on,'.') + 1) AS part4
        FROM phase2
        )
SELECT * FROM phase3;
</code></pre>
<ul>
<li>as relatively easy to add additional phases (octets) but the code increases each time</li>
<li>as can be seen, you can have many CTE's and in this case, each previous CTE feeds the next to progressively split into the current part that is wanted and the remaining part less the current part thus greatly simplifying trying to ascertain the various parts in a single go.</li>
</ul>
<p>As an example of the output (note over the board as ALL source data and intermediate values are included, they needn't be):-</p>
<p><a href=""https://i.sstatic.net/9BbWBIKN.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9BbWBIKN.png"" alt=""enter image description here"" /></a></p>
<ul>
<li>note that the source data (table <code>tt</code>) does not have the enclosing square brackets, and</li>
<li><code>substr</code> has been used instead of <code>substring</code> (due to pre 3.34 version of SQLite)</li>
<li>CAST omitted for brevity</li>
</ul>
","0","Answer"
"79382505","79382054","<p>With some <code>REPLACE</code> in <code>1.2.3.4</code> to get <code>[1,2,3,4]</code> you can simply use <code>JSON_EXTRACT</code>:</p>
<pre><code>SELECT
  JSON_EXTRACT(ip.column1, '$[0]'),
  JSON_EXTRACT(ip.column1, '$[1]'),
  JSON_EXTRACT(ip.column1, '$[2]'),
  JSON_EXTRACT(ip.column1, '$[3]')
FROM (
  VALUES('[1,2,3,4]')
) AS ip
</code></pre>
","1","Answer"
"79382979","79382054","<p>If you don't plan on using the split data elsewhere in the query, simply query the ip addresses and split them in the programming language of your choice. Here's an example in Python.</p>
<pre class=""lang-none prettyprint-override""><code>for row in con.execute(&quot;SELECT ip FROM stuff&quot;):
    numbers = row[&quot;ip&quot;].split(&quot;.&quot;, 4)
</code></pre>
<hr />
<p>If you need to use those numbers in the query, you can write a function in your programming language to split the IP address and use it in the query.</p>
<p>Unlike a traditional SQL database where you have a client talking to a server, SQLite has no server. SQLite is like any other library of your programming language of choice. Your program is both the SQLite &quot;client&quot; and &quot;server&quot;. This means you can write functions in your programming language and use them in SQLite queries. There's no need to limit yourself to SQLite's anemic built in functions.</p>
<p>For example, in Python use <a href=""https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.create_function"" rel=""nofollow noreferrer""><code>create_function</code></a>.</p>
<pre class=""lang-none prettyprint-override""><code>def split_ipv4(ip, position)
  return ip.split(&quot;.&quot;, 4)[position]

con.create_function(&quot;split_ipv4&quot;, 1, split_ipv4)

sql = &quot;&quot;&quot;
SELECT 
  split_ipv4(ip, 0) as ip1,
  split_ipv4(ip, 1) as ip2,
  split_ipv4(ip, 2) as ip3,
  split_ipv4(ip, 3) as ip4
FROM stuff
&quot;&quot;&quot;

for row in con.execute(sql):
  ...
</code></pre>
","0","Answer"
"79383924","79382796","<p>If you wanted to generalize it, you could write a series of functions and apply those to the list of relevant variables. Using the data you provided you could for example do the following:</p>
<pre><code># Identify the variables you're going to be iterating over. Here
# i've gone variable_a, variable_b and variable_c.
variables &lt;- paste0(&quot;variable_&quot;, letters[1:3])

# Make a function generalized so that the lag can be calculated
# for different variables of intrest (i.e. variable_a,
# variable_b, etc.)
lag.calc &lt;- function(data, variable){
  
  variable_lag = data %&gt;%
    select(population, any_of(variable)) %&gt;%
    mutate(lag_1 = lag(!!sym(variable), n = 1)) %&gt;%
    mutate(lag_2 = lag(!!sym(variable), n = 2)) %&gt;%
    mutate(lag_3 = lag(!!sym(variable), n = 3))
  
  return(variable_lag)
}

# Apply the function using sapply. This iterates over the vector
# of variables to calculate lag per variable and produces a list 
# of data frame's as output. Each element in the list contains 
# results of the lag calculations for a specific variable.
lags &lt;- sapply(variables,
               lag.calc,
               data = data_variable_merge,
               USE.NAMES = TRUE,
               simplify = FALSE)

# Make a function to calculate correlation. This function can 
# essentially be used to perform a nested loop. The function 
# first selects an element from the list (a data frame) of lag 
# data just generated and then subsequently uses another function
# to calculate the correlation coefficients between variables in
# the selected list element.

corr.calc &lt;- function(data, variable1){
  
  dat = data[[variable1]]
  
  df = sapply(names(dat),
              function(variable2){
                correlation = cor(dat[,&quot;population&quot;], 
                                  dat[,variable2], 
                                  use = &quot;complete.obs&quot;)
                
                return(correlation)
              }) 

  corr_table = data.frame(variable = names(df),
                          correlation = df,
                          row.names = NULL,
                          stringsAsFactors = FALSE)
  
  return(corr_table)
}

# Now the function is applied to the list containing the lag data
# per variable.
all_correlations &lt;- sapply(variables,
               corr.calc,
               data = lags,
               USE.NAMES = TRUE,
               simplify = FALSE)


# Now the final function is defined with which the selection of
# variables for which the correlation coefficient is greater than
# 0.5 can be generalized.
corr.select &lt;- function(data, variable){
  
  dat = data[[variable]]
  
  df = dat %&gt;%
    slice(-c(1:2)) %&gt;%
    filter(abs(correlation) &gt; 0.5 ) %&gt;%
    pull(variable)
  
  return(df)
}

# Implement the function
selected_correlations &lt;- sapply(variables,
                                corr.select,
                                data = all_correlations,
                                USE.NAMES = TRUE)

</code></pre>
","1","Answer"
"79384085","79382796","<p>With <code>dplyr</code> I'd opt for a long format so correlations could be calculated by groups.<br />
As <code>cor()</code> works with matrices</p>
<pre class=""lang-r prettyprint-override""><code>x &lt;- 1:5; y &lt;- 1:5
(y_ = vapply(1:3, \(n_) dplyr::lag(y, n_), numeric(length(y))))
#&gt;      [,1] [,2] [,3]
#&gt; [1,]   NA   NA   NA
#&gt; [2,]    1   NA   NA
#&gt; [3,]    2    1   NA
#&gt; [4,]    3    2    1
#&gt; [5,]    4    3    2
cor(x, y_, use = &quot;pairwise.complete.obs&quot;)
#&gt;      [,1] [,2] [,3]
#&gt; [1,]    1    1    1
</code></pre>
<p>, we can construct one for its <code>y</code> argument in a helper function to get all pairwise correlations for one variable in one go.</p>
<pre class=""lang-r prettyprint-override""><code>library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(tibble)

# correlations between x and (lag(y, 1), ..., lag(y, n)) as a 2 column tibble
lagged_cor &lt;- function(x, y, n = 3){
  cols &lt;- setNames(1:n, paste0(&quot;lag_&quot;,1:n))
  cor(
    x,
    vapply(cols, \(n_) lag(y, n_), numeric(length(y))),
    use = &quot;pairwise.complete.obs&quot;
  )[1,] %&gt;% 
  enframe(name = &quot;lag&quot;, value = &quot;cor&quot;)
}

# test
lagged_cor(population_data$population, external_variables$variable_a)
#&gt; # A tibble: 3 × 2
#&gt;   lag       cor
#&gt;   &lt;chr&gt;   &lt;dbl&gt;
#&gt; 1 lag_1  0.0585
#&gt; 2 lag_2 -0.632 
#&gt; 3 lag_3 -0.689

# join, wide to long, apply lagged_cor() by groups through 
# reframe() instead of summarise() as lagged_cor() returns more than 1 rows;
# finally unnest 2-column cor_ tibble-in-a-column
correlation_table &lt;- 
  population_data %&gt;%
  left_join(external_variables, by = join_by(date == date)) %&gt;%
  pivot_longer(!c(date, population), names_to = &quot;var&quot;, cols_vary = &quot;fastest&quot;)  |&gt; 
  reframe(cor_ = lagged_cor(population, value, 3), .by = var) |&gt; 
  unnest(cor_)
</code></pre>
<p>Resulting correlations:</p>
<pre class=""lang-r prettyprint-override""><code>correlation_table
#&gt; # A tibble: 9 × 3
#&gt;   var        lag       cor
#&gt;   &lt;chr&gt;      &lt;chr&gt;   &lt;dbl&gt;
#&gt; 1 variable_a lag_1  0.0585
#&gt; 2 variable_a lag_2 -0.632 
#&gt; 3 variable_a lag_3 -0.689 
#&gt; 4 variable_b lag_1 -0.0164
#&gt; 5 variable_b lag_2 -0.409 
#&gt; 6 variable_b lag_3 -0.338 
#&gt; 7 variable_c lag_1 -0.373 
#&gt; 8 variable_c lag_2 -0.719 
#&gt; 9 variable_c lag_3 -0.672
</code></pre>
<p>Filter and extract:</p>
<pre class=""lang-r prettyprint-override""><code>correlation_table %&gt;%
  filter(abs(cor) &gt; .5) %&gt;%
  split(~ var) %&gt;%
  lapply(pull, var = &quot;lag&quot;) %&gt;%
  str()
#&gt; List of 2
#&gt;  $ variable_a: chr [1:2] &quot;lag_2&quot; &quot;lag_3&quot;
#&gt;  $ variable_c: chr [1:2] &quot;lag_2&quot; &quot;lag_3&quot;
</code></pre>
<hr />
<p>Intermediate steps:</p>
<pre class=""lang-r prettyprint-override""><code>## post-join:
#&gt; # A tibble: 12 × 5
#&gt;    date       population variable_a variable_b variable_c
#&gt;    &lt;date&gt;          &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;
#&gt;  1 2024-01-01   15066061      0.317      0.172      0.327
#&gt;  2 2024-02-01   15549704      0.352      0.187      0.338
#&gt;  3 2024-03-01   18687056      0.366      0.206      0.342
#&gt;  4 2024-04-01   18206234      0.369      0.226      0.344
#&gt;  5 2024-05-01   18948074      0.366      0.227      0.349
#&gt;  6 2024-06-01   19424572      0.367      0.225      0.356
#&gt;  7 2024-07-01   19786907      0.385      0.237      0.363
#&gt;  8 2024-08-01   19545826      0.424      0.242      0.373
#&gt;  9 2024-09-01   18139647      0.460      0.250      0.388
#&gt; 10 2024-10-01   19633439      0.463      0.264      0.414
#&gt; 11 2024-11-01   17136602      0.415      0.279      0.454
#&gt; 12 2024-12-01   15589939      0.354      0.294      0.480

## post-pivot:
#&gt; # A tibble: 36 × 4
#&gt;    date       population var        value
#&gt;    &lt;date&gt;          &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;
#&gt;  1 2024-01-01   15066061 variable_a 0.317
#&gt;  2 2024-01-01   15066061 variable_b 0.172
#&gt;  3 2024-01-01   15066061 variable_c 0.327
#&gt;  4 2024-02-01   15549704 variable_a 0.352
#&gt;  5 2024-02-01   15549704 variable_b 0.187
#&gt;  6 2024-02-01   15549704 variable_c 0.338
#&gt;  7 2024-03-01   18687056 variable_a 0.366
#&gt;  8 2024-03-01   18687056 variable_b 0.206
#&gt;  9 2024-03-01   18687056 variable_c 0.342
#&gt; 10 2024-04-01   18206234 variable_a 0.369
#&gt; # ℹ 26 more rows

## post-reframe:
#&gt; # A tibble: 9 × 2
#&gt;   var        cor_$lag    $cor
#&gt;   &lt;chr&gt;      &lt;chr&gt;      &lt;dbl&gt;
#&gt; 1 variable_a lag_1     0.0585
#&gt; 2 variable_a lag_2    -0.632 
#&gt; 3 variable_a lag_3    -0.689 
#&gt; 4 variable_b lag_1    -0.0164
#&gt; 5 variable_b lag_2    -0.409 
#&gt; 6 variable_b lag_3    -0.338 
#&gt; 7 variable_c lag_1    -0.373 
#&gt; 8 variable_c lag_2    -0.719 
#&gt; 9 variable_c lag_3    -0.672
</code></pre>
<hr />
<p>Example data:</p>
<pre class=""lang-r prettyprint-override""><code>population_data &lt;- tibble(date = c(&quot;2024-01-01&quot;, &quot;2024-02-01&quot;, &quot;2024-03-01&quot;, &quot;2024-04-01&quot;, &quot;2024-05-01&quot;, &quot;2024-06-01&quot;, &quot;2024-07-01&quot;, &quot;2024-08-01&quot;, &quot;2024-09-01&quot;, &quot;2024-10-01&quot;, &quot;2024-11-01&quot;, &quot;2024-12-01&quot;),
                          population = c(15066061, 15549704, 18687056, 18206234, 18948074, 19424572, 19786907, 19545826, 18139647, 19633439, 17136602, 15589939)) %&gt;%
                          mutate_if(is.character, as.Date)

external_variables &lt;- tibble(date = c(&quot;2024-01-01&quot;, &quot;2024-02-01&quot;, &quot;2024-03-01&quot;, &quot;2024-04-01&quot;, &quot;2024-05-01&quot;, &quot;2024-06-01&quot;, &quot;2024-07-01&quot;, &quot;2024-08-01&quot;, &quot;2024-09-01&quot;, &quot;2024-10-01&quot;, &quot;2024-11-01&quot;, &quot;2024-12-01&quot;),
                     variable_a = c(0.317307116, 0.352468819, 0.366432676, 0.368892142, 0.365603593, 0.367213977, 0.384769145, 0.423860447, 0.460068567, 0.462793275, 0.415102119, 0.353779592),
                     variable_b = c(0.172175256, 0.187336159, 0.2064973, 0.225618438, 0.226878513, 0.225218414, 0.236999116, 0.241679394, 0.249559864, 0.264060727, 0.278541589, 0.293562483),
                     variable_c = c(0.326591281, 0.338010556, 0.341884545, 0.344272213, 0.348808904, 0.355742496, 0.363469639, 0.372550879, 0.387764013, 0.414237696, 0.453669722, 0.480433344)) %&gt;%
                     mutate_if(is.character, as.Date)
</code></pre>
<p><sup>Created on 2025-01-24 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","1","Answer"
"79385696","79377843","<p>Hotkeys are started in a new thread, which means you can use <code>Exit</code> to kill the thread, effectively achieving what you want.</p>
<pre><code>breakout(var){
    if (A_PriorKey!=var and A_PriorKey!=&quot;&quot;){ 
        Exit
    }
}
</code></pre>
","1","Answer"
"79387210","79382038","<p>Code to first get a list of new invoices and then open each one separately to be saved as a pdf file. The default filename gets put in the clipboard so the user can paste it in. Then after clicking 'Save' a new pdf file is created. Execution should continue to open the next invoice (there are more then one Instead execution stops cold - not even in break mode. Then when I go to the new pdf file and open it I get the message that the file is corrupt. Yet, the report opens fine when I open it from the database window in rptview. Report opens when using acViePreview.  Right after the DoCmd.Output statement execution jumps out of Where-Wend structure and goes to the line just below Wend (Exit Sub) and code is now in break mode.</p>
<pre><code>Private Sub cmdPDF_Click()
Dim rs As Recordset
Dim SQL, sInvo, sCredit, sPath, sWhere, sMsg, sTitle As String
Dim sTimeStamp, sDateStamp, sFileName As String
Dim iFrame As Integer
Dim lPos, i, j As Long

    On Local Error GoTo EXIT_cmdPDF_Click
    
    sPath = AppPath &amp; &quot;PDFs\&quot;
    ChDir sPath
    sTitle = &quot;Click ok to open next report&quot;
    sMsg = &quot;Paste filename from clipboard. before saving report to pdf.&quot; &amp; vbCrLf &amp; _
    &quot;Saving report as PDF to folder: &quot; &amp; sPath
    ' Retrieve all invoices that haven't been saved to pdf file
    ' Add WHERE clause to report query - WHERE (SalesIsPrinted=False)
    If Not UpdateReportQry Then GoTo EXIT_cmdPDF_Click:
    If msRptName = &quot;rptInvoCredit&quot; Then
        ' Create individual pdfs
        GetRptList
        i = Len(msList)
        j = 1
        While j &lt; i + 1
            lPos = InStr(j, msList, &quot;;&quot;, vbBinaryCompare)
            sInvo = Mid(msList, j, lPos - j)
            j = lPos + 1
            lPos = InStr(j, msList, &quot;;&quot;, vbBinaryCompare)
            sCredit = Mid(msList, j, lPos - j)
            j = lPos + 1
            ' Create report filter
            sWhere = &quot;(SalesNumber=&quot; &amp; sInvo &amp; &quot;) AND (CreditMemoNumber=&quot; &amp; sCredit &amp; &quot;);&quot;
            ' Create filename
            sTimeStamp = Format(Time, &quot;hhmmss&quot;)
            sDateStamp = Format(Date, &quot;yyyymmdd&quot;)
            sFileName = msRptName &amp; &quot;_&quot; &amp; sDateStamp &amp; &quot;_&quot; &amp; sTimeStamp &amp; &quot;.pdf&quot;
            CopyTextToClipboard sFileName
            ' Open report
            DoCmd.OpenReport msRptName, acViewNormal, , sWhere, acWindowNormal
            MsgBox sMsg, vbInformation, sTitle
            ' DoCmd.OutputTo does nothing
            'DoCmd.OutputTo acOutputReport, msRptName, acFormatPDF, sFileSpec, True
            'DoCmd.Close acReport, msRptName
        Wend
    End If
    ' Filename can now be pasted in then click save

EXIT_cmdPDF_Click:
    Exit Sub
ERR_cmdPDF_Click:
    ShowError &quot;frmInvoiceReport_cmdPDF_Click&quot;
    Resume EXIT_cmdPDF_Click
    
End Sub

Private Sub GetRptList()
Dim qdRptQry As QueryDef
Dim rs As Recordset
Dim SQL As String

    ' Retrieve invoice report querydef SQL
    SQL = mqdReport.SQL
    ' Remove existing WHERE clause - WHERE (SalesIsPrinted=False)
    lPos = InStr(1, SQL, &quot;WHERE&quot;)
    SQL = Left(SQL, lPos - 1)
    ' Update query without the where clause
    mqdReport.SQL = SQL
    
    msList = vbNullString
    Set qdRptQry = CurrentDb.QueryDefs(msRptQuery)
    Set rs = qdRptQry.OpenRecordset(dbOpenForwardOnly)
    If rs.RecordCount &gt; 0 Then
        Do Until rs.EOF
            msList = msList &amp; rs(&quot;SalesNumber&quot;) &amp; &quot;;&quot; &amp; rs(&quot;CreditMemoNumber&quot;) &amp; &quot;;&quot;
            rs.MoveNext
        Loop
    End If
    rs.Close
    Set rs = Nothing
    Set qdRptQry = Nothing

End Sub

Public Sub CopyTextToClipboard(ByVal TextIn As String)
Const ksClipObj As String = &quot;new:{1C3B4210-F441-11CE-B9EA-00AA006B1A69}&quot;
Dim objClipboard As Object

    ' Save text to clipboard
    Set objClipboard = CreateObject(ksClipObj)
    objClipboard.SetText TextIn
    objClipboard.PutInClipboard
    Set objClipboard = Nothing
</code></pre>
","0","Answer"
"79396767","79382038","<p>My problem was that when I was converting the pages of my invoice report to pdf I failed to clear out the existing WHERE statement and they began piling up causing my code to crash.  Here is the updated code that separates the pages of my invoice report so that individual pages can be created.</p>
<p>Private Sub MakePDFPages()
Dim SQL, sWhere, sTimeStamp, sDateStamp, sFileName, sInvo, sCredit As String
Dim i, j As Integer
Dim lPos As Long</p>
<pre><code>' All variables that have an m prefix are privately defined 
'in the declarations area of my form.
' Create individual pdfs
GetRptList
i = Len(msList)
j = 1
While j &lt; i + 1
    ' Extract Invo &amp; Credit from list
    lPos = InStr(j, msList, &quot;;&quot;, vbBinaryCompare)
    sInvo = Mid(msList, j, lPos - j)
    j = lPos + 1
    lPos = InStr(j, msList, &quot;;&quot;, vbBinaryCompare)
    sCredit = Mid(msList, j, lPos - j)
    j = lPos + 1
    ' Retrieve invoice report querydef SQL
    SQL = mdqRptQry.SQL
    ' Remove existing WHERE clause
    lPos = InStr(1, SQL, &quot;WHERE&quot;)
    SQL = Left(SQL, lPos - 2)
    ' Create new WHERE clause from list
    sWhere = &quot; WHERE (tblSales.SalesNumber=&quot; &amp; sInvo &amp; &quot;) AND (tblSales.CreditMemoNumber=&quot; &amp; sCredit &amp; &quot;);&quot;
    ' Add new WHERE Clause to SQL
    SQL = SQL &amp; sWhere
    ' Update querydef with new WHERE clause
    mdqRptQry.SQL = SQL
    ' Create filename
    sTimeStamp = Format(Time, &quot;hhmmss&quot;)
    sDateStamp = Format(Date, &quot;yyyymmdd&quot;)
    sFileName = msRptName &amp; &quot;_&quot; &amp; sDateStamp &amp; &quot;_&quot; &amp; sTimeStamp &amp; &quot;.pdf&quot;
    ' Output report to pdf
    DoCmd.OutputTo acOutputReport, msRptName, acFormatPDF, sFileName
    DoCmd.Close acReport, msRptName
Wend
</code></pre>
<p>End Sub</p>
<p>Private Sub GetRptList()
Dim qdRptQry As QueryDef
Dim rs As Recordset</p>
<pre><code>msList = vbNullString
Set qdRptQry = CurrentDb.QueryDefs(msQuery)
Set rs = qdRptQry.OpenRecordset(dbOpenForwardOnly)
If rs.RecordCount &gt; 0 Then
    Do Until rs.EOF
        msList = msList &amp; rs(&quot;SalesNumber&quot;) &amp; &quot;;&quot; &amp; rs(&quot;CreditMemoNumber&quot;) &amp; &quot;;&quot;
        rs.MoveNext
    Loop
End If
rs.Close
Set rs = Nothing
Set qdRptQry = Nothing
</code></pre>
<p>End Sub</p>
","0","Answer"
"79383760","79383749","<p>The error suggests your initializing has not enough elements. I didn't count them but you should.</p>
<p>You either <em>want</em> 119 elements, then it should be <code>new string[119]</code> or you want 120, then you need another element.</p>
<p>You can also omit the length if you initialize like that:</p>
<pre><code>string[] groups = { ... }; // the dots would be your elements, of course
// or 
var groups = new string[] { ... }; 
</code></pre>
<p>or (given that syntax is available in your version of Unity)</p>
<pre><code>string[] groups = [ ... ]; // again the dots are your elements
</code></pre>
<p>See Fiddle: <a href=""https://dotnetfiddle.net/oRgYiq"" rel=""nofollow noreferrer"">https://dotnetfiddle.net/oRgYiq</a></p>
<hr />
<p>Additionally (but not the cause for the error):</p>
<p>Replace that <code>119</code> with <code>for (int n = 0; n &lt; groups.Length; n++)</code>.</p>
<p>That way you can later change that array's length without touching that loop again. It also automatically gives you the correct upper bound. (You are one off)</p>
<p>To be clear: with <code>n &lt; 119</code>, the biggest <code>n</code> will be 118. So it's a &quot;one-off&quot; mistake.</p>
<p>For your reference : <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.array.length?view=net-9.0"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/dotnet/api/system.array.length?view=net-9.0</a></p>
","3","Answer"
"79384925","79384924","<p><code>re.sub</code> can take a function as its second argument.  That function is passed the <code>Match</code> object.</p>
<pre><code>import re
s = 'hello'
def f(matchobj):
    return matchobj.group(1) + 'X'
r = re.sub('([aeiou])', f, s)
print(r)
</code></pre>
<p>This prints <code>he0llo0</code> as required.</p>
<p>In general I think any replacement pattern with backreferences <code>\N</code> can be rewritten as a callback which uses <code>matchobj.group(N)</code>.</p>
<p>Interestingly, because <code>matchobj.group(0)</code> gives the whole match, you can do without the capturing group:</p>
<pre><code>import re
s = 'hello'
def f(matchobj):
    return matchobj.group(0) + '0'
r = re.sub('[aeiou]', f, s)
print(r)
</code></pre>
<p>That also works.</p>
","0","Answer"
"79391219","79391085","<p>In my way, I will use the select module to implement non-blocking input with a timeout. If no input is detected within the timeout, the program runs the default function and exits immediately.</p>
<pre><code>import sys
import time
import select

def function_1():
    print(&quot;Function 1 is running!&quot;)
    sys.exit()

def function_2():
    print(&quot;Function 2 is running!&quot;)
    sys.exit()

function_map = {&quot;1&quot;: function_1, &quot;2&quot;: function_2}

def main():
    print(&quot;Choose an option:\n1: Run Function 1\n2: Run Function 2\nq: Quit&quot;)
    print(&quot;Enter your choice: &quot;, end=&quot;&quot;, flush=True)

    start_time = time.time()
    timeout = 5
    user_input = &quot;&quot;

    while True:
        if time.time() - start_time &gt; timeout:
            print(f&quot;\nNo input detected within {timeout} seconds. Defaulting to option 1.&quot;)
            function_1()
            break

        if sys.stdin in select.select([sys.stdin], [], [], 0)[0]:
            user_input = sys.stdin.readline().strip().lower()
            break

    if user_input == &quot;q&quot;:
        print(&quot;Exiting program.&quot;)
        sys.exit()
    elif user_input in function_map:
        function_map[user_input]()
    else:
        print(&quot;Invalid choice. Exiting.&quot;)
        sys.exit()

if __name__ == &quot;__main__&quot;:
    main()

</code></pre>
","0","Answer"
"79392058","79391953","<p>The main issue is you pass the same group to <code>ActivateTabs(group);</code> and <code>DeactivateTabs(group);</code> So, instead of using strings, compare the groups directly.</p>
<pre><code>private void EfficientTabChange(CanvasGroup group)
{
    CanvasGroup [] groups = new CanvasGroup[2] { hydrogenScreen, heliumScreen };
    
    foreach (CanvasGroup g in groups)
    {
        if (g == group)
        {
            ActivateTabs(g);
        }
        else
        {
            DeactivateTabs(g);
        }
    }
}
</code></pre>
","3","Answer"
"79395249","79395181","<p>You can try the code below</p>
<pre><code>f &lt;- function(x, msk) {
  p &lt;- range(x[msk])
  data.frame(
    neg_outlier = map_int(x, \(k) sum(k &lt; p[1])),
    pos_outlier = map_int(x, \(k) sum(k &gt; p[2]))
  )
}

data %&gt;%
  drop_na() %&gt;%
  reframe(across(x:z, list), .by = change) %&gt;%
  mutate(across(x:z, f, msk = change %in% normal)) %&gt;%
  unnest(cols = x:z, names_sep = &quot;_&quot;)
</code></pre>
<p>which gives</p>
<pre><code># A tibble: 7 × 7
  change  x_neg_outlier x_pos_outlier y_neg_outlier y_pos_outlier z_neg_outlier
  &lt;chr&gt;           &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;
1 normal1             0             0             0             0             0
2 normal2             0             0             0             0             0
3 normal3             0             0             0             0             0
4 normal4             0             0             0             0             0
5 high                1             1             1             1             2
6 low                 1             0             0             0             1
7 medium              0             2             0             1             1
# ℹ 1 more variable: z_pos_outlier &lt;int&gt;
</code></pre>
","0","Answer"
"79396570","79395577","<p>I think there were a couple of things going on here, but the biggest one is that when your function expected <code>VAR</code> to be a variable name, but when you pass the variable in via <code>mutate()</code>, it is a vector of values.  So, the function wasn't getting what it expected for <code>VAR</code>.  I rewrote the function to take vectors as arguments - things that will get passed in via <code>mutate()</code>.  The function now takes the names of the variables for <code>VAR</code>, <code>PSU</code>, <code>STRATA</code> and <code>WT</code>.  Regardless of those names in the input dataset, these variables take on those names (<code>PSU</code>, <code>STRATA</code>, <code>WT</code> and <code>VAR</code>) inside the function.  That makes it a bit easier to deal with and removes the need for <code>eval(parse(text = ...))</code>, which is often frowned upon around here.</p>
<pre class=""lang-r prettyprint-override""><code>calc_wt_mean_var_fn_df_ex = function(VAR, PSU, STRATA, WT){
  #only proceed if there are at least 2 unique answers to the variable of interest, VAR
  data &lt;- data.frame(VAR, PSU, STRATA,WT, one=1) 
  data &lt;- subset(data, !is.na(PSU) &amp; !is.na(WT))
  nr &lt;- nrow(na.omit(aggregate(data$one, list(data$VAR), sum)))
   
  if(nr &gt; 1){
    #create survey design object using dataframe, data
    svydes = svydesign(id =~PSU,
                       strata =~STRATA, 
                       weights =~WT, 
                       data =data,nest = TRUE )
    #calculate survey-adjusted mean and SE and return results as tibble
    res = svymean(~VAR, svydes, na.rm = TRUE) 
    #extract the answer, the survey-adjusted mean weight stored in res, as ans
    ans = res[[1]]
  } else{
    ans = NA
  }
  return(ans)
}
</code></pre>
<p>Here's the function at work:</p>
<pre class=""lang-r prettyprint-override""><code>library(survey)
library(dplyr)
input.ds.2018 = tibble(
  Var1 = c(1, 1, NA, NA, 1, 0),
  Var2 = rep(c(1, 0), 3),
  V3 = c(NA, rep(2, 4), 1),
  y_4 = c(NA, &quot;y&quot;, &quot;z&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;),
  X_AGE80 = c(17, 18, NA, 84, 21, 72),
  WT = c(2,3,8,4,0.1,5),
  X_PSU = c(1,2,3,4,5,6),
  X_STSTR = c(1,2,1,2,1,2)
)

regularVar_names_ex = c(&quot;Var1&quot;,&quot;Var2&quot;) 

input.ds.2018 %&gt;%
  mutate(across(all_of(regularVar_names_ex), 
                \(x) calc_wt_mean_var_fn_df_ex(x, X_PSU, X_STSTR, WT), 
                .names = &quot;wt_mean_{.col}&quot;))
#&gt; # A tibble: 6 × 10
#&gt;    Var1  Var2    V3 y_4   X_AGE80    WT X_PSU X_STSTR wt_mean_Var1 wt_mean_Var2
#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;
#&gt; 1     1     1    NA &lt;NA&gt;       17   2       1       1        0.505        0.457
#&gt; 2     1     0     2 y          18   3       2       2        0.505        0.457
#&gt; 3    NA     1     2 z          NA   8       3       1        0.505        0.457
#&gt; 4    NA     0     2 l          84   4       4       2        0.505        0.457
#&gt; 5     1     1     2 m          21   0.1     5       1        0.505        0.457
#&gt; 6     0     0     1 n          72   5       6       2        0.505        0.457
</code></pre>
<p><sup>Created on 2025-01-29 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","1","Answer"
"79397789","79397778","<p>Your code invokes Undefined Behaviour and silencing the warnings will not make the program compliant. You need to change the signatures of the function.</p>
<blockquote>
<p>The solution compiles and run as expected</p>
</blockquote>
<p>That is the beauty of the UB. It can run OK on one platform, but not another or if compiled using a different compiler. Your claim is false. You have to remove the UB.</p>
","0","Answer"
"79397971","79397778","<blockquote>
<p>I have defined a function as follows:</p>
<pre><code>// Return name from given user.
typedef char *(name)(void *user);
</code></pre>
</blockquote>
<p>No, you did not.  You defined an alias for a function <em>type</em>.  There's no actual function there.</p>
<blockquote>
<p>And then implemented this function as follows:</p>
<pre><code>// Return name for a System 1 User.
char * system1_user_name(System1User *user)
{
    return user-&gt;name;
}
</code></pre>
</blockquote>
<p>In the terminology of the language spec, you appear to mean that you implemented a function whose type is <em>compatible with</em> <code>name</code>.  But no,
you (probably) did not do so.  Among the requirements for two function types that include prototypes to be compatible is that they must have the same number of parameters, and corresponding parameters must have compatible type.  Although there are automatic conversions back and forth between pointers to <code>void</code> and pointers to other object types, pointers to <code>void</code> are not compatible with pointers to any other type, in the relevant sense of &quot;compatible&quot;.  Therefore, unless your <code>System1User</code> is an alias for <code>void</code>, no, the type of <code>system1_user_name</code> is not compatible with <code>name</code>.</p>
<blockquote>
<p>The solution compiles and run as expected,</p>
</blockquote>
<p>Yes, that can happen with programs whose behavior is not defined by the language spec.  Under some circumstances, that can even be reliable.</p>
<blockquote>
<p>however during compilation it gives [a warning about incompatible pointer types]</p>
</blockquote>
<p>That's not surprising, because such a warning is warranted.</p>
<blockquote>
<p>Now I know I can resolve the warning by [modifying <code>system1_user_name</code> to be compatible with type <code>name</code>, but] I was wondering if there is any way how I could keep the function signature as is.</p>
</blockquote>
<p>Your function's type is not compatible with type <code>name</code>.  You cannot make them compatible without changing one or the other.  However, you could provide a shim in the form of a wrapper function that you interpose between <code>say_hello()</code> and <code>system1_user_name()</code>, as presented in <a href=""https://stackoverflow.com/a/79397791/2402272"">@Darth-Codex's answer</a>.  That will resolve the issue your compiler warns about (not only resolve the warning), at the cost of introducing another potential issue that the compiler probably will not diagnose: if you ...</p>
<pre><code>say_hello(&amp;some_object, system1_user_name_wrapper)
</code></pre>
<p>... for a <code>some_object</code> whose type is <em>not</em> <code>System1User</code> (primarily; or one of a narrow family of others) then the behavior is still undefined.</p>
<p>Shimming <code>system1_user_name</code> like that is better than what you're doing now, because the resulting behavior is well defined as long as you pass in only pointers of suitable type.  That will help protect you against your compiler deciding to do something wacky when it optimizes your program, but you should not take the resulting lack of diagnostic messages as a sign that you've resolved all issues.</p>
","0","Answer"
"79398126","79395181","<p>I have found the answer. You have to use embracing: <strong>{{ column }}</strong>. This is because the x in your final line of code is actually meant to be data$x. When you use {{ }}, R knows that you mean the column of another argument.</p>
<p>I recommend you to to add remove(x, y, z) to your code. This way, R can't confuse data$x (which is supposed to get filtered) with the vector x (which doesn't get filtered).</p>
<pre><code>remove(x, y, z)
count_outliers &lt;- function(data, column, min, max) {
  data %&gt;% 
    filter(!is.na({{ column }})) %&gt;%
    group_by(change) %&gt;%
    mutate(lower_bound = min,
           upper_bound = max) %&gt;%
    mutate(is_pos_outlier = if_else({{ column }} &gt; upper_bound, TRUE, FALSE),
           is_neg_outlier = if_else({{ column }} &lt; lower_bound, TRUE, FALSE)) %&gt;%
    summarise(x_pos_outliers = sum(is_pos_outlier), x_neg_outliers = sum(is_neg_outlier))
}
x_outliers &lt;- count_outliers(data, x, minmax_normal$x_min, minmax_normal$x_max)
</code></pre>
<p>Just so you know, some functions require you to embrace like this: pick({{ column }}). Examples of these functions are select(), relocate(), rename(), rename_with() and all of the slice() variants. These functions use tidy selection rather than data masking. More information can be found here: <a href=""https://r4ds.hadley.nz/functions#data-frame-functions"" rel=""nofollow noreferrer"">https://r4ds.hadley.nz/functions#data-frame-functions</a></p>
","0","Answer"
"79401219","79401196","<p>You should actually get here two errors (per element in the collection), the second one explaining the actual problem (<a href=""https://sharplab.io/#v2:C4LghgzgtgPgAgJgIwFgBQcAMACOSAsA3OugJYB2wApgE7lgA2uCuSA7OgN7oAONpANzDVsAEVIBjYKQD29GgE8APHACsSgEYyZDAHwAadNmOtMu3KulzxUuWEXYAvNnJUA7gAoAlFyMnO2AAqVBDAAIL62ABEABJUDAwyUdgAvoZoJtgBwaEAQpFRuQpUGsXJaegphJmZJBkmfILCVGKSVvLKapraeuk1JnhmFu02wHaKgW4yxGh+xnhs3nNZy5lqI23jCpMyTi7u3tgA9EfYAOoyNADWFADmq/4mD/3ZIeEFcQlJqX39Na95ApFEplVLPVIzTIpOprJAANlw+GwAFkwBQPIMANoAXWw9luEB89WM3GJNTwAE4PLF4olzpcGAATACEUS8kJM0NmZMaQhEWh0QTeYSWZNJf1wbGwwBoAFcqBzjCkJeDlrzmtgBUwcsBcqLMuK/nApQAzRgQBXLLkpIA="" rel=""nofollow noreferrer"">demo @sharplab</a>):</p>
<blockquote>
<p>error CS1921: The best overloaded method match for 'Program.TestA()' has wrong signature for the initializer element. The initializable Add must be an accessible instance method.</p>
</blockquote>
<p>If you change <code>TestA</code> to <code>() =&gt; TestA()</code> in the field initialization the error become even more evident (<a href=""https://sharplab.io/#v2:C4LghgzgtgPgAgJgIwFgBQcAMACOSAsA3OugJYB2wApgE7lgA2uCuSA7OgN7oAONpANzDVsAEVIBjYKQD29GgE8APHACsSgEYyZDAHwAadNmOtMu3KulzxUuWEXYAvNnJUA7gAoAlFyMnO2N5O5gAqVBDAAILe+tgARAASVAwMMnHYAL6GaCbYAUGOoeHAAEIx8SUKVBpV6VnoGYS5uSQ5JnyCwlRiklbyymqa2nrZzSZ4ZhZ9NsB2iiFuMsRofsZ4bN6reVu5atO9cwoLMk4u7kEA9BfYAOoyNADWFADmO/4mb2MBYRGRsYnJVJ1UZjZrfYolf6Vaq1TKfTLLXIZVq7JAANlw+GwAFkwBQPBMANoAXWw9meEB8bWM3GpzTwAE4PACUic7jQGAATACEcS8iJMyJWdI6QhEWh02B+UU2dNpoNwbGwwBoAFcqALjBkFfCtqKutgJUxpWUqbl5aC4EqAGaMCAarZCjJAA=="" rel=""nofollow noreferrer"">demo @sharplab</a>):</p>
<pre class=""lang-cs prettyprint-override""><code>private Dictionary&lt;Func&lt;bool&gt;, string&gt; FunctionDictonary = new()
{
    { () =&gt; TestA(), &quot;Hello&quot; },
    { () =&gt; TestB(), &quot;Byebye&quot; },
};  
</code></pre>
<blockquote>
<p>error CS0236: A field initializer cannot reference the non-static field, method, or property 'Program.TestA()'<br />
error CS0236: A field initializer cannot reference the non-static field, method, or property 'Program.TestB()'</p>
</blockquote>
<p>You can't use non-static members in field/properties initializers.</p>
<p><a href=""https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/fields"" rel=""nofollow noreferrer"">The field docs</a> can explain a bit why:</p>
<blockquote>
<p>A field can be given an initial value by using the assignment operator when the field is declared.<br />
Fields are initialized immediately before the constructor for the object instance is called.</p>
</blockquote>
<p>And</p>
<blockquote>
<p>A field initializer cannot refer to other instance fields.</p>
</blockquote>
<p>If you'll make <code>TestA</code> and <code>TestB</code> methods <code>static</code> the errors will go away too (<a href=""https://sharplab.io/#v2:C4LghgzgtgPgAgJgIwFgBQcAMACOSAsA3OugJYB2wApgE7lgA2uCuSA7OgN7oAONpANzDVsAEVIBjYKQD29GgE8APHACsSgEYyZDAHwAadNmOtMu3KulzxUuWEXYAvNnJUA7gAoAlFyMnO2AAqVBDAAIL62ABEABJUDAwyUdgAvoZoJtgBwaEAQpFRuQpUGsXJaegphJmZJBkmfILCVGKSVvLKapraeuk1JnhmFu02wHaKgW4yxGh+xnhs3nNZy5lqI23jCpMyTi7u3tgA9EfYAOoyNADWFADmq/4mD/3ZIeEFcQlJqX39Na95ApFEplVLPVIzTIpOprJAANlw+GwAFkwBQPIMANoAXWw9luEB89WM3GJNTwAE4PLF4olzpcGAATACEUS8kJM0NmZMaQhEeARWh0QTeYSWZNJf1wbGwwBoAFcqBzjCkpeDlrzmqxBT0RXlxZlJX84DKAGaMCBK5ZclJAA==="" rel=""nofollow noreferrer"">demo @sharplab</a>)</p>
","3","Answer"
"79402546","79402412","<p>A <code>case</code> expression in the <code>where</code> clause rather than an <code>if</code> statement will do the job.</p>
<pre class=""lang-sql prettyprint-override""><code>WITH cte1 as 
( 
  select * from tbl1
),
cte2 as 
(
  select * from tbl2
  where case when in_param = 1 then (col1 &gt; 5) else (col3 &lt; 0) end
)
...
</code></pre>
<p>Unrelated but <code>cte1</code> is trivial and equivalent to <code>tbl1</code> therefore unnecessary.</p>
","2","Answer"
"79403814","79391085","<p>The problem with the ChatGPT is is that the child thread is blocking on its call to <code>input()</code> and will not terminate until you hit enter at the keyboard (it's not actually asking for <em>another</em> input). A simple fix is to make the child thread a <em>daemon</em> thread so that when the main thread ultimately terminates the child thread will terminate automatically:</p>
<pre class=""lang-py prettyprint-override""><code>...
    thread = threading.Thread(target=get_input, daemon=True)
...
</code></pre>
<p>An alternative is to not use a child thread at all and to do your own expiration. But we can't use blocking <code>input()</code> and must instead be able to periodically test to see if character input is available. This code will return an option as soon as a single valid option character is entered without the need to hit enter:</p>
<pre class=""lang-py prettyprint-override""><code>import time
import sys

if sys.platform == 'win32':
    import msvcrt

    def getch_lower_case():
        return msvcrt.getch().decode('utf-8').lower() if msvcrt.kbhit() else None
else:
    import select
    import tty
    import termios

    def getch_lower_case():

        fd = sys.stdin.fileno()
        old_settings = termios.tcgetattr(fd)
        try:
            tty.setraw(fd)
            if sys.stdin not in select.select([sys.stdin], [], [], 0)[0]:
                return None  # No character ready
            return sys.stdin.read(1).lower()
        finally:
            # Restore original settings
            termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)

def function_1():
    print(&quot;Function 1 is running!&quot;)

def function_2():
    print(&quot;Function 2 is running!&quot;)

# Map user choices to functions
function_map = {
    &quot;1&quot;: function_1,
    &quot;2&quot;: function_2
}

def print_prompt():
    print(&quot;Choose an option:&quot;)
    print(&quot;1: Run Function 1&quot;)
    print(&quot;2: Run Function 2&quot;)
    print(&quot;q: Quit&quot;)


def main():
    TIMEOUT = 5

    print_prompt()
    expires = time.time() + TIMEOUT

    while time.time() &lt; expires:
        while True:
            user_choice = getch_lower_case()
            if user_choice is None:  # No character read
                break

            if user_choice == &quot;q&quot;:
                print(&quot;Exiting program.&quot;)
                return

            if user_choice in function_map:
                function_map[user_choice]()
                return

            print('Invalid selection', end='\n\n')
            print_prompt()

    # Here on timeout:
    print(f&quot;\nNo input detected within {TIMEOUT} seconds. Defaulting to option 1.&quot;)
    function_1()

if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
","0","Answer"
"79404063","79404016","<p>The original question asked for labels (i.e. indexes) and used the data shown in the Note at the end but then changed it to ask for distances.  We will use the data in the Note at the end and show how to get indexes and what modification is needed to get distances.</p>
<p><strong>1)</strong> <code>dista</code> in Rfast will compute indexes of the shortest distance between two data frames or if you want distances remove the <code>index=TRUE</code> argument.</p>
<pre><code>library(Rfast)

transform(mols.test, 
  wx = dista(mols.test[1:2], cells.test[1:2], k = 1, index = TRUE))
</code></pre>
<p><strong>2)</strong> <code>dist</code> in proxy gives the 2x3 matrix of distances and then we use <code>apply</code> to get the column indexes, <code>wx</code>, of the shortest distance columns or if you want distances replaces <code>which.min</code> with <code>min</code>.</p>
<pre><code>library(proxy)

transform(mols.test,
  wx = apply(dist(mols.test[1:2], cells.test[1:2]), 1, which.min))
</code></pre>
<p><strong>3)</strong> This forms the 2x3 matrix of distances using <code>uec.dist</code> from the question and then uses apply to get the indexes.  Replace <code>which.min</code> with <code>min</code> if you prefer to get distances.</p>
<pre><code>f &lt;- Vectorize(function(i, j) euc.dist(mols.test[i, ], cells.test[j, ])$d.val )

nr1 &lt;- nrow(mols.test)
nr2 &lt;- nrow(cells.test)
transform(mols.test, wx = apply(outer(1:nr1, 1:nr2, f), 1, which.min))
</code></pre>
<p><strong>4)</strong> We can use a nearest neighbour algorithm.  This gives both the index in column <code>nn.idx</code> and the distances in column <code>nn.dists</code>.</p>
<pre><code>library(RANN)

cbind(mols.test, nn2(cells.test[1:2], mols.test[1:2], k = 1))
</code></pre>
<p><strong>5)</strong> If we just need the index then <code>knn1</code> in the class package which comes preinstalled with R so it does not have to be installed could be used.</p>
<pre><code>library(class)

transform(mols.test,
  wx = knn1(cells.test[1:2], mols.test[1:2], 1:nrow(cells.test)))
</code></pre>
<p>or if we need distances once we have the indexes then using <code>euc.dist</code> is easier:</p>
<pre><code>library(class)

nr1 &lt;- nrow(mols.test)
nr2 &lt;- nrow(cells.test)

ix &lt;-  knn1(cells.test[1:2], mols.test[1:2], 1:nr2)
f &lt;- \(i, j) euc.dist(mols.test[i, 1:2], cells.test[j, 1:2])$d.val
transform(mols.test, wx = mapply(f, 1:nr1, ix))
</code></pre>
<h2>Note</h2>
<p>Questions to SO should provide the input in an easily reproducible manner so that others can copy and paste it into their session but we have done it for you this time.</p>
<pre><code>cells.test &lt;- data.frame(
  center_x = c(44173L, 41618L, 43681L),
  center_y = c(1763L, 1835L, 1824L),
  label = 1:3,
  area = c(15036L, 20343L, 13258L)
)

mols.test &lt;- data.frame(
  x = c(14948L, 27614L),
  y = c(15230L, 6906L),
  name = c(&quot;UMOD&quot;, &quot;UMOD&quot;),
  z = c(1L, 1L)
)
</code></pre>
","2","Answer"
"79404118","79404016","<p>You can try</p>
<pre><code>v1 &lt;- c(as.matrix(df1[-3]) %*% c(1, 1i))
v2 &lt;- c(as.matrix(df2[-3]) %*% c(1, 1i))
cbind(
    df1[rep(1:nrow(df1), each = nrow(df2)), ],
    d.val = c(abs(outer(v2, v1, `-`)))
)
</code></pre>
<p>which gives</p>
<pre><code>    center_x center_y label    d.val
1          1        4     1 3.000000
1.1        1        4     1 3.162278
2          2        5     2 4.123106
2.1        2        5     2 4.000000
3          3        6     3 5.385165
3.1        3        6     3 5.099020
</code></pre>
","1","Answer"
"79405563","79405560","<p><code>getElementsByTagName()</code> returns a collection, so you need to index into the result. For example:</p>
<pre><code>document.getElementsByTagName(&quot;tbody&quot;)[0].insertAdjacentHTML(&quot;afterbegin&quot;, barChart)
</code></pre>
<p>Also, at least one of your <code>for()</code> loops should be using <code>&lt;</code> instead of <code>&lt;=</code> for the comparison.</p>
","-1","Answer"
"79406094","79406093","<p>When you have multiple API calls that return different types of responses that
you want to decode, use <a href=""https://docs.swift.org/swift-book/documentation/the-swift-programming-language/generics/"" rel=""nofollow noreferrer"">Swift generics</a></p>
<p>For example:</p>
<pre><code> func getData&lt;T: Decodable&gt;(from urlString: String) async -&gt; T? {
     guard let url = URL(string: urlString) else {
         print(URLError(.badURL))
         return nil // &lt;-- todo, deal with errors
     }
     do {
         let (data, response) = try await URLSession.shared.data(from: url)
         guard let httpResponse = response as? HTTPURLResponse, httpResponse.statusCode == 200 else {
             print(URLError(.badServerResponse))
             return nil // &lt;-- todo, deal with errors
         }
         return try JSONDecoder().decode(T.self, from: data) // &lt;--- here
     }
     catch {
          print(error)
         return nil // &lt;-- todo, deal with errors
     }
 }
 
</code></pre>
<p>Call it like this:</p>
<pre><code> .task {
      let theResponse: ApiResponse? = await getData(from: &quot;https://...&quot;)
 }
</code></pre>
<p>Note the important type <code>ApiResponse?</code> in <code>let theResponse: ApiResponse? = ....</code>,
this tells the type <code>getData(...)</code> should use for decoding and to return.</p>
<p>Specific example code:</p>
<pre><code>struct ContentView: View {
    @State private var timeZones: TzResponse?
    
    var body: some View {
        List(timeZones?.response ?? [], id: \.self) { tz in
            Text(tz)
        }
        .task {
            timeZones = await getData(from: &quot;https://api-hockey.p.rapidapi.com/timezone&quot;)
        }
    }

    func getData&lt;T: Decodable&gt;(from urlString: String) async -&gt; T? {
        let apikey = &quot;YOUR-API-KEY-HERE&quot;
        
        guard let url = URL(string: urlString) else {
            print(URLError(.badURL))
            return nil // &lt;-- todo, deal with errors
        }
        
        var request = URLRequest(url: url)
        request.addValue(&quot;application/json&quot;, forHTTPHeaderField: &quot;Accept&quot;)
        request.addValue(&quot;application/json&quot;, forHTTPHeaderField: &quot;Content-Type&quot;)
        request.addValue(&quot;\(apikey)&quot;, forHTTPHeaderField: &quot;X-RapidAPI-Key&quot;)
        request.addValue(&quot;api-hockey.p.rapidapi.com&quot;, forHTTPHeaderField: &quot;X-RapidAPI-Host&quot;)
        
        do {
            let (data, response) = try await URLSession.shared.data(for: request)
            //print(String(data: data, encoding: .utf8) as AnyObject)
            let decodedData = try JSONDecoder().decode(T.self, from: data)
            print(&quot;\n---&lt; decodedData: \(decodedData)&quot;)
            return decodedData
        } catch {
            print(error)
            return nil // &lt;-- todo, deal with errors
        }
    }
}

struct TzResponse: Codable {
    let errors: [String]
    let parameters: [String]
    let response: [String]
    let get: String
    let results: Int
}
</code></pre>
","1","Answer"
"79408592","79408554","<p>Try this.</p>
<pre><code>&gt; sapply(mydata, nchar) |&gt; {\(x) !is.na(x) &amp; x &gt;= 3 &amp; x &lt;= 4}() |&gt; apply(2, var) == 0
Code_1 Code_2 Code_3 
  TRUE   TRUE   TRUE 
</code></pre>
<p>Test:</p>
<pre><code>&gt; mydata[1, 1] &lt;- 'x0'
&gt; sapply(mydata, nchar) |&gt; {\(x) !is.na(x) &amp; x &gt;= 3 &amp; x &lt;= 4}() |&gt; apply(2, var) == 0
Code_1 Code_2 Code_3 
 FALSE   TRUE   TRUE 
</code></pre>
<p>You can easily incorporate a check into the script:</p>
<pre><code>&gt; stopifnot(sapply(mydata, nchar) |&gt; {\(x) !is.na(x) &amp; x &gt;= 3 &amp; x &lt;= 4}() |&gt; apply(2, var) == 0)
Error: apply({ .... are not all TRUE
</code></pre>
","1","Answer"
"79408605","79408554","<p>You can try <code>colMeans</code> + <code>nchar</code> like below</p>
<pre><code>&gt; colMeans(`dim&lt;-`(nchar(as.matrix(mydata)) %in% c(3, 4), dim(mydata))) == 1
[1] TRUE TRUE TRUE
</code></pre>
","1","Answer"
"79408615","79408554","<p>You could use a combination of <code>all</code> + <code>nchar</code>:</p>
<pre class=""lang-r prettyprint-override""><code>sapply(mydata, \(x) all(nchar(na.omit(x)) %in% c(3, 4)))
# Code_1 Code_2 Code_3 
# TRUE   TRUE   TRUE 
</code></pre>
<p>Or even, to check if all columns have either 3 or 4 characters, yet another <code>all</code> to ensure all columns meet the criterion:</p>
<pre class=""lang-r prettyprint-override""><code>all(sapply(mydata, \(x) all(nchar(na.omit(x)) %in% c(3, 4))))
#[1]  TRUE
</code></pre>
","2","Answer"
"79409016","79408993","<p>The <code>Object</code> constructor when called <em><strong>without</strong></em> <code>new</code> will</p>
<ul>
<li>given an object, returns the same object</li>
<li>given <code>null</code> or <code>undefined</code>, returns a plain object (like calling <code>new Object()</code> or just using <code>{}</code>)</li>
<li>given a primitive, returns the object wrapper for the primitive</li>
</ul>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>console.log( typeof Object(""hello"") );            // ""object""
console.log( Object(""hello"") instanceof String ); // true

console.log( typeof Object(42) );            // ""object""
console.log( Object(42) instanceof Number ); // true</code></pre>
</div>
</div>
</p>
<p>The object constructor without <code>new</code> is used when you absolutely need an object, rather than any other primitive. For the line <code>thisArg[methodSymbol] = this;</code> you cannot use it with primitives, because you cannot change any of their properties. But you can if the value was capital String, Number, Boolean, etc.</p>
","2","Answer"
"79411797","79411357","<p>Not sure if this is what you're looking for, but the function below takes a vector of quoted variable names and data and then creates the suppressed variables and adds them back into the data.  I do this by evaluating both conditions and then identifying places where they both do not hold.  Then I turn the logicals into numbers.</p>
<pre class=""lang-r prettyprint-override""><code>input_ds_wt = structure(list(id = c(1, 2, 3, 4, 5, 6), wt.mean_v1 = c(1, 1, 
1.3, 2.3, 1, 0), wt.mean_v2 = c(0.8, 0.2, 0.8, 0.2, 0.8, 0.2), 
    wt.SE_v1 = c(0.1, 0.01, 0.2, 0.02, 0.3, 0.03), wt.SE_v2 = c(0.03, 
    0.3, 0.01, 0.1, 0.4, 0.04), RSE_v1 = c(0.1, 0.01, 0.153846153846154, 
    0.00869565217391304, 0.3, Inf), RSE_v2 = c(0.0375, 1.5, 0.0125, 
    0.5, 0.5, 0.2)), class = &quot;data.frame&quot;, row.names = c(NA, 
-6L))

vars &lt;- c(&quot;v1&quot;, &quot;v2&quot;)
suppress &lt;- function(vars, data, ...){
  cond1 &lt;- data[,paste0(&quot;RSE_&quot;, vars)] &lt; .3
  cond2 &lt;- data[,paste0(&quot;wt.mean_&quot;, vars)] &gt; .9
  out &lt;- apply(!(cond1 &amp; cond2), 2, as.numeric)
  colnames(out) &lt;- paste0(&quot;suppress_&quot;, vars)
  cbind(data, out)
}
suppress(c(&quot;v1&quot;, &quot;v2&quot;), input_ds_wt)
#&gt;   id wt.mean_v1 wt.mean_v2 wt.SE_v1 wt.SE_v2      RSE_v1 RSE_v2 suppress_v1
#&gt; 1  1        1.0        0.8     0.10     0.03 0.100000000 0.0375           0
#&gt; 2  2        1.0        0.2     0.01     0.30 0.010000000 1.5000           0
#&gt; 3  3        1.3        0.8     0.20     0.01 0.153846154 0.0125           0
#&gt; 4  4        2.3        0.2     0.02     0.10 0.008695652 0.5000           0
#&gt; 5  5        1.0        0.8     0.30     0.40 0.300000000 0.5000           1
#&gt; 6  6        0.0        0.2     0.03     0.04         Inf 0.2000           1
#&gt;   suppress_v2
#&gt; 1           1
#&gt; 2           1
#&gt; 3           1
#&gt; 4           1
#&gt; 5           1
#&gt; 6           1
</code></pre>
<p><sup>Created on 2025-02-04 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","1","Answer"
"79411875","79411357","<p>Using data.table, we will need to reshape couple of times, this could be optimised, but the idea is the same:</p>
<pre><code>library(data.table)

setDT(input_ds_wt)

#1.reshape to get version
x &lt;- melt(input_ds_wt, id.vars = &quot;id&quot;)
x[, c(&quot;variable&quot;, &quot;version&quot;) := tstrsplit(variable, split = &quot;_&quot;) ]

#2.reshape to spread variables per version
x &lt;- dcast(x, id  + version ~ variable, value.var = &quot;value&quot;)

#3.calculate suppress
x[, suppress := fifelse(RSE &lt; 0.3 &amp; wt.mean &gt; 0.9, 0, 1) ]

#4.reshape to add versions to variable names
x &lt;- melt(x, id.vars = c(&quot;id&quot;, &quot;version&quot;) )
x[, variable := paste(variable, version, sep = &quot;_&quot;) ]

#5.reshape to get original data structure
x &lt;- dcast(x, id ~ variable, value.var = &quot;value&quot;)

#x
# Key: &lt;id&gt;
#       id      RSE_v1 RSE_v2 suppress_v1 suppress_v2 wt.SE_v1 wt.SE_v2 wt.mean_v1 wt.mean_v2
#    &lt;num&gt;       &lt;num&gt;  &lt;num&gt;       &lt;num&gt;       &lt;num&gt;    &lt;num&gt;    &lt;num&gt;      &lt;num&gt;      &lt;num&gt;
# 1:     1 0.100000000 0.0375           0           1     0.10     0.03        1.0        0.8
# 2:     2 0.010000000 1.5000           0           1     0.01     0.30        1.0        0.2
# 3:     3 0.153846154 0.0125           0           1     0.20     0.01        1.3        0.8
# 4:     4 0.008695652 0.5000           0           1     0.02     0.10        2.3        0.2
# 5:     5 0.300000000 0.5000           1           1     0.30     0.40        1.0        0.8
# 6:     6         Inf 0.2000           1           1     0.03     0.04        0.0        0.2
</code></pre>
","3","Answer"
"79411927","79411357","<p>Probably you can try this</p>
<pre><code>input_ds_wt %&gt;%
    cbind({
        .
    } %&gt;%
        select(!id &amp; contains(c(&quot;mean&quot;, &quot;RSE&quot;))) %&gt;%
        split.default(sub(&quot;.*_&quot;, &quot;suppress_&quot;, names(.))) %&gt;%
        map_dfc(~ .x %&gt;%
            relocate(starts_with(&quot;wt&quot;)) %&gt;%
            {
                +!(.x[[1]] &gt; 0.9 &amp; .x[[2]] &lt; 0.3)
            }))
</code></pre>
<p>which gives</p>
<pre><code>  id wt.mean_v1 wt.mean_v2 wt.SE_v1 wt.SE_v2      RSE_v1 RSE_v2 suppress_v1
1  1        1.0        0.8     0.10     0.03 0.100000000 0.0375           0
2  2        1.0        0.2     0.01     0.30 0.010000000 1.5000           0
3  3        1.3        0.8     0.20     0.01 0.153846154 0.0125           0
4  4        2.3        0.2     0.02     0.10 0.008695652 0.5000           0
5  5        1.0        0.8     0.30     0.40 0.300000000 0.5000           1
6  6        0.0        0.2     0.03     0.04         Inf 0.2000           1
  suppress_v2
1           1
2           1
3           1
4           1
5           1
6           1
</code></pre>
","1","Answer"
"79412658","79411357","<p>You could write a small comparison function and then <code>mapply</code> over the column pairs. <code>grep</code>ing using <code>value=TRUE</code> with subsequent <code>sort</code>ing for more safety.</p>
<pre><code>&gt; fn &lt;- \(i, j, data=input_ds_wt) {c(1, 0)[1 + (data[, i] &lt; 0.3 &amp; data[, j] &gt; 0.9)]}
&gt; nm &lt;- names(input_ds_wt)
&gt; app &lt;- mapply(fn, sort(grep('RSE', nm, value=TRUE)), sort(grep('mean', nm, value=TRUE)))
&gt; input_ds_wt |&gt; cbind(`colnames&lt;-`(app, paste0('supress_v', seq_len(ncol(app)))))
  id wt.mean_v1 wt.mean_v2 wt.SE_v1 wt.SE_v2      RSE_v1 RSE_v2 supress_v1 supress_v2
1  1        1.0        0.8     0.10     0.03 0.100000000 0.0375          0          1
2  2        1.0        0.2     0.01     0.30 0.010000000 1.5000          0          1
3  3        1.3        0.8     0.20     0.01 0.153846154 0.0125          0          1
4  4        2.3        0.2     0.02     0.10 0.008695652 0.5000          0          1
5  5        1.0        0.8     0.30     0.40 0.300000000 0.5000          1          1
6  6        0.0        0.2     0.03     0.04         Inf 0.2000          1          1
</code></pre>
","0","Answer"
"79416813","79416777","<p>This would be a way to accomplish what you are looking for. However, to reiterate what @Tim Roberts said: that single-line code is not really a goal in programming - maintainability is. A large part of which is being able to understand what was written easily, instead of trying to fit everything into a single line because it can become very difficult to parse quickly.</p>
<pre class=""lang-py prettyprint-override""><code>def square(a, b, c, d): 
    # this function first goes through and sorts the list of items and assigns the values to z via a walrus operator (the :=)
    # then we are able to access the list of items on the same line to do multiplication for the first and second values in the list.
    return (z := sorted([a,b,c,d]))[0]*z[1]
</code></pre>
","1","Answer"
"79417238","79416777","<p>If you want to perform multiple calculations, you could write a function that takes a list of Callables.</p>
<p>Something like this:</p>
<pre><code>from operator import add, sub, mul, truediv
from collections.abc import Callable

# perform (potentially) multiple functions using the 2 lowest order values from the 4 float arguments
def do_stuff(
    a: float, b: float, c: float, d: float, *, ops: tuple[Callable, ...]
) -&gt; list[tuple[str, float, list[float]]]:
    return [
        (op.__name__, op((s := sorted((a, b, c, d)))[0], s[1]), s[:2]) for op in ops
    ]

# a tuple of Callables. Each Callable must take exactly 2 float arguments
funcs = add, sub, mul, truediv
# the 4 values as a list
data = [3.5, 4.2, 2.8, 6]

print(
    *(f&quot;{f}({v[0]}, {v[1]}) = {r:.4f}&quot; for f, r, v in do_stuff(*data, ops=funcs)),
    sep=&quot;\n&quot;,
)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>add(2.8,3.5) = 6.3000
sub(2.8,3.5) = -0.7000
mul(2.8,3.5) = 9.8000
truediv(2.8,3.5) = 0.8000
</code></pre>
<p><strong>Note:</strong></p>
<p>Complex one-liners can be hard to read and maintain. Better to break down the functionality into simple steps.</p>
","0","Answer"
"79418851","79416777","<p>Solution with <code>min()</code> without <code>sorted()</code> (but really, don't do this in production code):</p>
<pre class=""lang-py prettyprint-override""><code>def square(a, b, c, d):
    return ((p:=[a, b, c, d]).remove(a:=min(p)) or a) * min(p)


print(square(100, 2, 200, 3))
</code></pre>
<p>Prints:</p>
<pre><code>6
</code></pre>
","0","Answer"
"79421933","79421902","<p>Think of <code>datahandle</code> as a position in the file. Once you've iterated over it, it points to the end of the file, so the next time you iterating over it, the loop will no execute (or, you can think of it as iterating zero times).</p>
<p>To address this, you can reopen the file every time you call the function.
In addition, there's no point in making <code>count</code> global. Instead, just return it from the function</p>
<pre class=""lang-py prettyprint-override""><code>def find():
    with open(&quot;dataset.txt&quot;) as datahandle:
        count = 0
        for countingdata in datahandle:
            countingdata = countingdata.rstrip() # Copied from OP, but not really needed.
            count = count + 1
    return count
</code></pre>
","2","Answer"
"79423944","79423916","<p>You can try:</p>
<pre class=""lang-cpp prettyprint-override""><code>=LET(
  filtertype,
    IFERROR(SORT(IFNA(FILTER({Set[CardName], CHOOSE(MATCH(G52,{&quot;All&quot;,&quot;Base&quot;,&quot;Master&quot;},0),Set[AllOwn],Set[BaseOwn],Set[MasterOwn])},Set[Player]=F42),&quot;No Match&quot;))),
  filterstatus,
    ArrayFormula(IFNA(IF(G53=&quot;All&quot;, filtertype, FILTER(filtertype,INDEX(filtertype,0,2)= G53)), &quot;Blank&quot;)),
  QUERY(filterstatus,&quot;SELECT Col1, 0/0, Col2 LABEL 0/0 ''&quot;)
)
</code></pre>
<p>Or</p>
<pre class=""lang-cpp prettyprint-override""><code>=LET(
  filtertype,
    IFERROR(SORT(IFNA(FILTER({Set[CardName], CHOOSE(MATCH(G52,{&quot;All&quot;,&quot;Base&quot;,&quot;Master&quot;},0),Set[AllOwn],Set[BaseOwn],Set[MasterOwn])},Set[Player]=F42),&quot;No Match&quot;))),
  filterstatus,
    ArrayFormula(IFNA(IF(G53=&quot;All&quot;, filtertype, FILTER(filtertype,INDEX(filtertype,0,2)= G53)), &quot;Blank&quot;)),
  IFNA(HSTACK(INDEX(filterstatus,,1),,INDEX(filterstatus,,2)))
)
</code></pre>
","2","Answer"
"79424101","79424061","<p>One option is to check if the <code>y</code> variable is <code>missing</code>, instead of using <code>NULL</code> as a placeholder.</p>
<pre><code>sample_fun &lt;- function(df, x, y) {
  if (!missing(y)) {
    df &lt;- mutate(df, z = {{x}} * {{y}})
  } else {
    df &lt;- mutate(df, z = {{x}})
  }
  return(df)
}
df_out &lt;- sample_fun(df, x) 
df_out2 &lt;- sample_fun(df, x, y)
</code></pre>
","3","Answer"
"79424251","79424061","<p>The problem with the code in the question is that <code>is.null</code> cannot take an unquoted variable.  The code there would work if <code>quo_is_null(enquo(y))</code> is used in place of <code>is.null(y)</code> .  In that case add a <code>library(rlang)</code> as well.</p>
<p>Alternately give <code>y</code> a default value of 1.</p>
<pre><code>library(dplyr)

sample_fun &lt;- function(df, x, y = 1) df %&gt;% mutate(z = {{x}} * {{y}})

sample_fun(df, x, y)
##   x  y  z
## 1 1 11 11
## 2 2 12 24
## 3 3 13 39
## 4 4 14 56
## 5 5 15 75

sample_fun(df, x)
##   x  y z
## 1 1 11 1
## 2 2 12 2
## 3 3 13 3
## 4 4 14 4
## 5 5 15 5
</code></pre>
","1","Answer"
"79424401","79424061","<p>You could generalize this a little.</p>
<pre><code>sample_fun &lt;- \(data, ..., FUN='*') {
  ell &lt;- substitute(list(...))[-1]
  if (!is.null(ell)) {
    stopifnot(all(as.character(ell) %in% names(data)))
    expr &lt;- Reduce(\(x, y) call(FUN, x, y), ell) 
    transform(data, z=eval(expr))
  } else data
}
</code></pre>
<p></p>
<pre><code>&gt; sample_fun(df, X1)
  X1 X2 X3 z
1  1  3  5 1
2  2  4  6 2
&gt; sample_fun(df, X1, X3)
  X1 X2 X3  z
1  1  3  5  5
2  2  4  6 12
&gt; sample_fun(df, X1, X2, X999)
Error in sample_fun(df, X1, X2, X999) : 
  all(as.character(ell) %in% names(df)) is not TRUE
&gt; sample_fun(df)
  X1 X2 X3
1  1  3  5
2  2  4  6
&gt; sample_fun(df, X1, X2, FUN='/')
  X1 X2 X3         z
1  1  3  5 0.3333333
2  2  4  6 0.5000000
</code></pre>
<hr />
<p><em>Data:</em></p>
<pre><code>&gt; dput(df)
structure(list(X1 = 1:2, X2 = 3:4, X3 = 5:6), class = &quot;data.frame&quot;, row.names = c(NA, 
-2L))
</code></pre>
","0","Answer"
"79425758","79425735","<p>Consider the <a href=""https://stackoverflow.com/questions/3057341/how-to-use-rs-ellipsis-feature-when-writing-your-own-function"">ellipsis construct</a> for passing a variable number of arguments:</p>
<pre class=""lang-r prettyprint-override""><code>fun_default &lt;- function(df, x, y, ...){
  p &lt;- df %&gt;%
    ggplot(aes({{x}}, {{y}})) + 
    geom_point(...)
  
  p
}

fun_default(mtcars, wt, mpg, color=&quot;blue&quot;)
fun_default(mtcars, wt, mpg)
</code></pre>
","5","Answer"
"79425770","79425735","<p><strong>1)</strong> Set the alpha transparency to 0 if the color is missing if you are trying to avoid showing <code>geom_point</code> if color is missing.</p>
<pre><code>library(ggplot2)

fun &lt;- function(df, x, y, color = 1) {
    ggplot(df, aes({{x}}, {{y}})) +
      geom_point(color = color, alpha = !missing(color))
}

# tests
fun(BOD, Time, demand)
fun(BOD, Time, demand, &quot;red&quot;)
</code></pre>
<p><strong>2)</strong> In <code>fun_if</code> if you are just worried about having an <code>if</code> in the ggplot geom pipeline then the <code>if</code> could be outside it.</p>
<pre><code>fun_if2 &lt;- function(df, x, y, color) {
    g &lt;- if (missing(color)) geom_point() else geom_point(color = color)
    ggplot(df, aes({{x}}, {{y}})) + g
}
</code></pre>
<p>In fact it could even be in a separate function:</p>
<pre><code>g.p &lt;- function(color) {
  if (missing(color)) geom_point() else geom_point(color = color)
}

fun_if3 &lt;- function(df, x, y, color) {
    ggplot(df, aes({{x}}, {{y}})) + g.p(color)
}
</code></pre>
","2","Answer"
"79428140","79427852","<p>You can use <code>list(...)</code> to pull out and work with specific arguments passed to <code>...</code>:</p>
<pre class=""lang-r prettyprint-override""><code>library(ggplot2)
library(dplyr)

plotfcn &lt;- function(df, x, y, facet, ...){
  # get `labeller` arg if present
  fancy_labs &lt;- list(...)$labeller

  # Strings of x &amp; y (for axis titles)
  if(!is.null(fancy_labs)) {
    xStr &lt;- fancy_labs(deparse(substitute(x)))
    yStr &lt;- fancy_labs(deparse(substitute(y)))
  } 
  
  p &lt;- ggplot(df, aes({{x}}, {{y}})) + 
    geom_point() +
    facet_wrap(vars({{facet}}), ...)
  
  if(!is.null(fancy_labs)) { 
    p + labs(x=xStr, y=yStr)
    } else { 
      p
    }
}

mpg_lim %&gt;% plotfcn(displ, hwy, class, labeller=mylabs)
</code></pre>
<p><a href=""https://i.sstatic.net/jxNAvJFd.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/jxNAvJFd.png"" alt="""" /></a></p>
<pre class=""lang-r prettyprint-override""><code>mpg_lim %&gt;% plotfcn(displ, hwy, class)
</code></pre>
<p><a href=""https://i.sstatic.net/H3BiWgvO.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/H3BiWgvO.png"" alt="""" /></a></p>
","4","Answer"
"79430738","79430235","<p>To make a <a href=""https://developers.google.com/apps-script/guides/sheets/functions"" rel=""nofollow noreferrer"">custom function</a> available in any spreadsheet you edit, implement it as an <a href=""https://developers.google.com/apps-script/add-ons/how-tos/building-editor-addons"" rel=""nofollow noreferrer"">add-on</a>.</p>
<p>An add-on's custom functions will work for <em>all</em> users of a spreadsheet where the add-on has been <em>enabled</em> by <em>any</em> user. See <a href=""https://developers.google.com/apps-script/add-ons/concepts/editor-auth-lifecycle#installed_versus_enabled"" rel=""nofollow noreferrer"">Installed versus enabled</a>.</p>
","2","Answer"
"79431994","79431960","<p>Use event delegation by listening on a common parent element then detect either <code>&lt;div&gt;</code> using a <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/Selector_list"" rel=""nofollow noreferrer"">selector list</a></p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>document.getElementById('parent').addEventListener('click', ({ target }) =&gt; {
  const div = target.closest('#div-1, #div-2'); // selector list of IDs
  if (div) {
    console.log(`You clicked on interesting div '#${div.id}'`);
  }
});</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>#parent {
  display: flex;
  column-gap: 1rem;
  &amp; div {
    cursor: pointer;
    border: 1px solid;
    padding: 1rem;
  }
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""parent""&gt;
  &lt;div id=""div-1""&gt;Click me&lt;/div&gt;
  &lt;div id=""div-2""&gt;No, click me!&lt;/div&gt;
  &lt;div id=""div-3""&gt;You can try clicking me&lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>
<hr />
<p>Another option would be to use the same selector list and iterate the results of <code>document.querySelectorAll()</code> but this is less optimal as it repeats the listener function on each element.</p>
<pre class=""lang-js prettyprint-override""><code>document.querySelectorAll('#div-1, #div-2').forEach((div) =&gt; {
  div.addEventListener('click', (e) =&gt; {
    console.log(`You clicked on interesting div '#${div.id}'`);
  });
});
</code></pre>
","1","Answer"
"79432004","79431960","<p>There are several ways you can do this. Here is one option: Use a <strong>named function</strong> and pass it as a event handler to both the <code>addEventListener</code>'s.</p>
<p>Ex:</p>
<pre><code>const clickHandler = function(e) {}

div_1.addEventListener('click', clickHandler)
div_2.addEventListener('click', clickHandler)
</code></pre>
","0","Answer"
"79432007","79431960","<p>Select them into a single variable using <code>querySelectorAll</code> and then give single <code>addEventListener</code> using loop.</p>
<pre class=""lang-js prettyprint-override""><code>const selectedEls = document.querySelectorAll(&quot;#div-1, #div-2&quot;);

selectedEls.forEach(function(div) {
    div.addEventListener(&quot;click&quot;, function() {
        console.log(&quot;All selected Elements(divs) are affected&quot;);
    });
});
</code></pre>
","0","Answer"
"79432243","79431960","<p>Just to show another way, without detracting from the very good answers posted.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>  // we obtain all the elements of this class
let elems = document.getElementsByClassName( 'divs' );

  // we iterate between the elements and add a listener
for( let i in elems ) {
   elems[i].onclick = function() {
      console.log( 'You clicked on interesting div' );
   };
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>  &lt;!-- we add to the “div” we are interested in, the class we will use to invoke them --&gt;
&lt;div id=""div-1"" class=""divs""&gt; Div 1 &lt;/div&gt;
&lt;div id=""div-2"" class=""divs""&gt; Div 2 &lt;/div&gt;
&lt;div id=""div-3""&gt; Div 3 &lt;/div&gt;</code></pre>
</div>
</div>
</p>
","0","Answer"
"79433679","79433601","<p>Try <code>each if</code> instead of <code>if each</code></p>
","1","Answer"
"79434219","79433967","<p>Invent a struct <code>Effect</code> that embodies the result of playing the card:</p>
<pre><code>class Effect {
  virtual ~Effect() {}
  virtual void apply(context * ctx, Card &amp; card) = 0;
  virtual std::string description() const { return &quot;&quot;; }
};
</code></pre>
<p>Have Card objects store a <code>std::vector&lt;unique_ptr&lt;Effect&gt;&gt;</code>.
Initially, this effect is just a default scoring effect for the card:</p>
<pre><code>class Card {
  private:
    std::vector&lt;unique_ptr&lt;Effect&gt;&gt; effects;

  public:
    Card() {
      effects.push_back(make_unique&lt;DefaultEffect&gt;());
    }

    void play(context * ctx) {
      for (auto&amp; effect : effects) {
        effect.apply(ctx, *this);
      }
    }
};
</code></pre>
<p><code>DefaultEffect</code> might look something like this:</p>
<pre><code>class DefaultEffect : public Effect {
  virtual void apply(context * ctx, Card &amp; card) {
     ctx-&gt;score += card.value;
  }
};
</code></pre>
<p>Making effects objects instead of plain function pointers allows you to make stateful effects and allows you to document the additional effects to the player (with the <code>description</code> method). For example, &quot;every time this card is played its value goes up by one&quot; or &quot;this effect can only be used 5 times&quot;.</p>
<p>The <code>for</code> loop I suggest above is just for getting started, you can make things as complex as you want by returning something meaningful from <code>Effect::apply</code> (eg a token value that stops the processing the effects or actually restarts it)</p>
","1","Answer"
"79434525","79434508","<p>All you need is <code>lapply()</code> + <code>summary()</code> + <code>rbind()</code> via <code>do.call()</code>.</p>
<pre class=""lang-r prettyprint-override""><code>mtcars[sapply(mtcars, is.numeric)] |&gt;
  lapply(summary) |&gt;
  do.call(what = 'rbind') 
</code></pre>
<pre class=""lang-r prettyprint-override""><code>       Min.   1st Qu.  Median       Mean 3rd Qu.    Max.
mpg  10.400  15.42500  19.200  20.090625   22.80  33.900
cyl   4.000   4.00000   6.000   6.187500    8.00   8.000
disp 71.100 120.82500 196.300 230.721875  326.00 472.000
hp   52.000  96.50000 123.000 146.687500  180.00 335.000
drat  2.760   3.08000   3.695   3.596563    3.92   4.930
wt    1.513   2.58125   3.325   3.217250    3.61   5.424
qsec 14.500  16.89250  17.710  17.848750   18.90  22.900
vs    0.000   0.00000   0.000   0.437500    1.00   1.000
am    0.000   0.00000   0.000   0.406250    1.00   1.000
gear  3.000   3.00000   4.000   3.687500    4.00   5.000
carb  1.000   2.00000   2.000   2.812500    4.00   8.000
</code></pre>
<p>Do we need to rename the columns? Use <code>|&gt; setNames(c(&gt;new_column_names&lt;))</code>.
If you like, we can <code>reshape()</code> to long format and move the row names to separate column called <code>variable</code>.</p>
","3","Answer"
"79434526","79434508","<p>One easy way to do this is with <code>dplyr::across</code>. Here I pair it with a <code>pivot_longer</code> so the result isn't just a <code>1xN</code> data frame for <code>N</code> functions, but you might want to follow up with a <code>pivot_wider</code> if you want the variables or the statistics in columns.</p>
<pre><code>mtcars |&gt; 
  summarize(across(where(is.numeric), .fns = list(
    med = median, min = min, max = max,
    lq = ~quantile(.x, 0.25), uq = ~quantile(.x, 0.75)
  ))) |&gt;
  pivot_longer(everything(), names_sep = &quot;_&quot;, names_to = c(&quot;var&quot;, &quot;stat&quot;))
# # A tibble: 55 × 3
#    var   stat  value
#    &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;
#  1 mpg   med    19.2
#  2 mpg   min    10.4
#  3 mpg   max    33.9
#  4 mpg   lq     15.4
#  5 mpg   uq     22.8
#  6 cyl   med     6  
#  7 cyl   min     4  
#  8 cyl   max     8  
#  9 cyl   lq      4  
# 10 cyl   uq      8  
# # ℹ 45 more rows
# # ℹ Use `print(n = ...)` to see more rows
</code></pre>
<p>Pivoting again:</p>
<pre><code>{{same code as above}} |&gt;
  pivot_wider(names_from = stat, values_from = value)
# # A tibble: 11 × 6
#    var      med   min    max     lq     uq
#    &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
#  1 mpg    19.2  10.4   33.9   15.4   22.8 
#  2 cyl     6     4      8      4      8   
#  3 disp  196.   71.1  472    121.   326   
#  4 hp    123    52    335     96.5  180   
#  5 drat    3.70  2.76   4.93   3.08   3.92
#  6 wt      3.32  1.51   5.42   2.58   3.61
#  7 qsec   17.7  14.5   22.9   16.9   18.9 
#  8 vs      0     0      1      0      1   
#  9 am      0     0      1      0      1   
# 10 gear    4     3      5      3      4   
# 11 carb    2     1      8      2      4   
</code></pre>
<p>Benefits of <code>across()</code> include that you can use the tidyverse select helpers to pick which columns you want, you can use any functions you want in the function list, and should you want to do things by group, that's also easy to support.</p>
","2","Answer"
"79434670","79434508","<p>If you want a function, something like this is simpler.<br />
You can add any stats you want.</p>
<pre class=""lang-r prettyprint-override""><code>describe_stats &lt;- function(x) {
  #relevant stats of interest
  data.frame(
    median_x = median(x),
    min_x = min(x),
    max_x = max(x),
    lower_quartile_x = quantile(x, 0.25),
    upper_quartile_x = quantile(x, 0.75)
  )
}

lapply(mtcars, describe_stats) |&gt; do.call(rbind, args = _)
#&gt;      median_x  min_x   max_x lower_quartile_x upper_quartile_x
#&gt; mpg    19.200 10.400  33.900         15.42500            22.80
#&gt; cyl     6.000  4.000   8.000          4.00000             8.00
#&gt; disp  196.300 71.100 472.000        120.82500           326.00
#&gt; hp    123.000 52.000 335.000         96.50000           180.00
#&gt; drat    3.695  2.760   4.930          3.08000             3.92
#&gt; wt      3.325  1.513   5.424          2.58125             3.61
#&gt; qsec   17.710 14.500  22.900         16.89250            18.90
#&gt; vs      0.000  0.000   1.000          0.00000             1.00
#&gt; am      0.000  0.000   1.000          0.00000             1.00
#&gt; gear    4.000  3.000   5.000          3.00000             4.00
#&gt; carb    2.000  1.000   8.000          2.00000             4.00
</code></pre>
<p><sup>Created on 2025-02-12 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
<hr />
<h1>Edit</h1>
<p>Following <a href=""https://stackoverflow.com/a/79435312/8245406"">jay.sf's answer</a> with his <a href=""https://stat.ethz.ch/R-manual/R-devel/library/base/html/funprog.html"" rel=""nofollow noreferrer""><code>Filter</code></a> idea, here is an updated <code>describe_stats</code> with an extra <code>na.rm</code> argument and a function <code>describe_df</code> to iterate through all columns of a data.frame.</p>
<pre class=""lang-r prettyprint-override""><code>describe_stats &lt;- function(x, na.rm = FALSE) {
  #relevant stats of interest
  data.frame(
    median_x = median(x, na.rm = na.rm),
    min_x = min(x, na.rm = na.rm),
    max_x = max(x, na.rm = na.rm),
    lower_quartile_x = quantile(x, 0.25, na.rm = na.rm),
    upper_quartile_x = quantile(x, 0.75, na.rm = na.rm)
  )
}
describe_df &lt;- function(x, na.rm = FALSE) {
  Filter(is.numeric, x) |&gt;
    lapply(describe_stats, na.rm = na.rm) |&gt; 
    do.call(rbind, args = _)
}

# all variables are numeric
describe_df(mtcars)
#&gt;      median_x  min_x   max_x lower_quartile_x upper_quartile_x
#&gt; mpg    19.200 10.400  33.900         15.42500            22.80
#&gt; cyl     6.000  4.000   8.000          4.00000             8.00
#&gt; disp  196.300 71.100 472.000        120.82500           326.00
#&gt; hp    123.000 52.000 335.000         96.50000           180.00
#&gt; drat    3.695  2.760   4.930          3.08000             3.92
#&gt; wt      3.325  1.513   5.424          2.58125             3.61
#&gt; qsec   17.710 14.500  22.900         16.89250            18.90
#&gt; vs      0.000  0.000   1.000          0.00000             1.00
#&gt; am      0.000  0.000   1.000          0.00000             1.00
#&gt; gear    4.000  3.000   5.000          3.00000             4.00
#&gt; carb    2.000  1.000   8.000          2.00000             4.00

# one variable is not numeric
# (Species is a factor)
describe_df(iris)
#&gt;              median_x min_x max_x lower_quartile_x upper_quartile_x
#&gt; Sepal.Length     5.80   4.3   7.9              5.1              6.4
#&gt; Sepal.Width      3.00   2.0   4.4              2.8              3.3
#&gt; Petal.Length     4.35   1.0   6.9              1.6              5.1
#&gt; Petal.Width      1.30   0.1   2.5              0.3              1.8
</code></pre>
<p><sup>Created on 2025-02-13 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","1","Answer"
"79435312","79434508","<p>You could define a set of functions in a named list <code>funs</code>. Next, <code>lapply</code> over them on a column and <code>simplify2array</code> the resulting list, which is what actually <code>sapply</code> does in one step.</p>
<pre><code>&gt; funs &lt;- list(median=median, min=min, max=max,
+              q_25=\(x) unname(quantile(x, .25)), 
+              q_75=\(x) unname(quantile(x, .75)))
&gt; sapply(funs, \(f) f(iris$Sepal.Length))
median    min    max   q_25   q_75 
   5.8    4.3    7.9    5.1    6.4 
</code></pre>
<p>Since you want to do this for an entire data frame, wrap the logic in a function,</p>
<pre><code>describe_stats1 &lt;- \(data) {
  funs &lt;- list(median=median, min=min, max=max,
               q_25=\(x) unname(quantile(x, .25)), 
               q_75=\(x) unname(quantile(x, .75)))
  .ds &lt;- \(x) sapply(funs, \(f) f(x))
  sapply(data, .ds) |&gt; t()
}
</code></pre>
<p>which works fine, if all columns are numeric.</p>
<pre><code>&gt; mtcars |&gt; describe_stats1()
      median    min     max      q_25   q_75
mpg   19.200 10.400  33.900  15.42500  22.80
cyl    6.000  4.000   8.000   4.00000   8.00
disp 196.300 71.100 472.000 120.82500 326.00
hp   123.000 52.000 335.000  96.50000 180.00
drat   3.695  2.760   4.930   3.08000   3.92
wt     3.325  1.513   5.424   2.58125   3.61
qsec  17.710 14.500  22.900  16.89250  18.90
vs     0.000  0.000   1.000   0.00000   1.00
am     0.000  0.000   1.000   0.00000   1.00
gear   4.000  3.000   5.000   3.00000   4.00
carb   2.000  1.000   8.000   2.00000   4.00
</code></pre>
<p>To handle non-numeric columns, <code>Filter</code> them beforehand. I advise doing this outside the function to keep it single-purpose, but that depends on your philosophy.</p>
<pre><code>&gt; Filter(is.numeric, iris) |&gt; describe_stats1()
             median min max q_25 q_75
Sepal.Length   5.80 4.3 7.9  5.1  6.4
Sepal.Width    3.00 2.0 4.4  2.8  3.3
Petal.Length   4.35 1.0 6.9  1.6  5.1
Petal.Width    1.30 0.1 2.5  0.3  1.8
</code></pre>
<p><em><strong>Notes on your approach:</strong></em></p>
<p>You can adapt your approach similarly to data frames. However, I've noted two things:</p>
<ol>
<li><code>output &lt;- list()</code>: You create a new object later, so <code>output &lt;- full_join(...)</code> is redundant. Initialization is only needed if you do something like <code>output[[i]] &lt;- something</code> as in <code>for</code> loops</li>
<li><code>median(x)</code> gives a vector of size 1, so no need to use data frames or tibbles here, which would be very cumbersome to handle and not very efficient (see <a href=""https://stackoverflow.com/a/79434670/6574038"">@rui-barrada's answer</a> what you can use instead)</li>
</ol>
<p>Nevertheless, it already works if you do something like this:</p>
<pre><code>&gt; lapply(mtcars, describe_stats) |&gt; 
+   suppressMessages() |&gt; 
+   sapply(\(x) x$value |&gt; setNames(x$name)) |&gt; 
+   t()
      median    min     max lower_quantile upper_quantile
mpg   19.200 10.400  33.900       15.42500          22.80
cyl    6.000  4.000   8.000        4.00000           8.00
disp 196.300 71.100 472.000      120.82500         326.00
hp   123.000 52.000 335.000       96.50000         180.00
drat   3.695  2.760   4.930        3.08000           3.92
wt     3.325  1.513   5.424        2.58125           3.61
qsec  17.710 14.500  22.900       16.89250          18.90
vs     0.000  0.000   1.000        0.00000           1.00
am     0.000  0.000   1.000        0.00000           1.00
gear   4.000  3.000   5.000        3.00000           4.00
carb   2.000  1.000   8.000        2.00000           4.00
</code></pre>
","0","Answer"
"79435799","79422336","<p>To prevent each function instance from making a call to the <code>/msi/token</code> endpoint when obtaining a <code>ManagedIdentityCredential</code>, initialize <code>DefaultAzureCredential</code> once and cache it in <code>_credential</code>. This prevents redundant calls to <code>/msi/token</code> for each message.</p>
<p>Additionally, ensure that the <code>Storage Table Data Contributor</code> and <code>Storage Table Data Reader</code> roles are assigned.</p>
<p>Refer to this <a href=""https://stackoverflow.com/questions/67279910/using-defaultazurecredential-in-azure-function-with-python"">link</a> for guidance on using <code>DefaultAzureCredential()</code> in an Azure Function with Python.</p>
<p>Below sample code is using  <code>DefaultAzureCredential()</code> in Azure Function with Python</p>
<pre class=""lang-py prettyprint-override""><code>import azure.functions as func
import logging
import json
import asyncio
from azure.identity import DefaultAzureCredential, TokenCachePersistenceOptions
from azure.servicebus.aio import ServiceBusClient
from azure.data.tables.aio import TableServiceClient

_credential = None
_servicebus_client = None
_table_service_client = None

def get_azure_credential():
    &quot;&quot;&quot;Initialize and cache the Azure Managed Identity credential.&quot;&quot;&quot;
    global _credential
    if _credential is None:
        logging.info(&quot;Initializing Managed Identity Credential with token caching.&quot;)
        _credential = DefaultAzureCredential(cache_persistence_options=TokenCachePersistenceOptions())
    return _credential

async def init_azure_resource_clients():
    &quot;&quot;&quot;Initialize Azure Service Bus and Table Storage clients asynchronously.&quot;&quot;&quot;
    global _servicebus_client, _table_service_client

    credential = get_azure_credential()

    if _servicebus_client is None:
        _servicebus_client = ServiceBusClient(
            fully_qualified_namespace=&quot;SERviceBusName.servicebus.windows.net&quot;,
            credential=credential
        )
        logging.info(&quot;Initialized Azure Service Bus Client.&quot;)

    if _table_service_client is None:
        _table_service_client = TableServiceClient(
            endpoint=&quot;https://ravitewaja.table.core.windows.net&quot;,
            credential=credential
        )
        logging.info(&quot;Initialized Azure Table Storage Client.&quot;)

app = func.FunctionApp()

@app.function_name(name=&quot;ServiceBusQueueTrigger&quot;)
@app.service_bus_queue_trigger(
    arg_name=&quot;msg&quot;,
    queue_name=&quot;queue_name&quot;,
    connection=&quot;CONNECTION_SETTING&quot;
)
async def service_bus_trigger(msg: func.ServiceBusMessage):
    &quot;&quot;&quot;Function triggered by Service Bus messages.&quot;&quot;&quot;
    logging.info(&quot;Processing Service Bus message.&quot;)

    await init_azure_resource_clients()
    message_body = msg.get_body().decode(&quot;utf-8&quot;).strip()

    logging.info(f&quot;Received Message: {message_body}&quot;)

    # Handle empty message
    if not message_body:
        logging.warning(&quot;Received an empty message. Skipping processing.&quot;)
        return
    
    try:
        message_json = json.loads(message_body)
    except json.JSONDecodeError as e:
        logging.error(f&quot;Failed to decode JSON: {e}&quot;)
        return
    await process_message(message_json)

async def process_message(message_json):
    &quot;&quot;&quot;Processes the Service Bus message and interacts with Azure Table Storage.&quot;&quot;&quot;
    global _table_service_client

    if _table_service_client is None:
        logging.error(&quot;Table Service Client is not initialized.&quot;)
        return

    try:
        table_name = &quot;sampath&quot;
        table_client = _table_service_client.get_table_client(table_name)
        entity = {
            &quot;PartitionKey&quot;: &quot;Messages&quot;,
            &quot;RowKey&quot;: message_json.get(&quot;id&quot;, &quot;default&quot;),
            &quot;Message&quot;: json.dumps(message_json)
        }

        await table_client.upsert_entity(entity)
        logging.info(&quot;Message successfully written to Azure Table Storage.&quot;)

    except Exception as e:
        logging.error(f&quot;Error processing message: {e}&quot;)

</code></pre>
<p><strong>Output:</strong></p>
<p><img src=""https://i.imgur.com/SvN3VGY.png"" alt=""Azure function"" /></p>
<p><img src=""https://i.imgur.com/ILyRfOR.png"" alt=""Azure function"" /></p>
","1","Answer"
"79437392","79430235","<h2>Alternative solution</h2>
<hr />
<p>Another solution that you may try is creating shared <strong>Libraries</strong>.</p>
<p><strong>NOTE:</strong> <code>This only grants access to each function in your original script, allowing your other scripts to utilize them.</code></p>
<p>As per Google's <a href=""https://developers.google.com/apps-script/guides/libraries"" rel=""nofollow noreferrer"">documentation</a>:</p>
<blockquote>
<p><strong>Libraries</strong></p>
<blockquote>
<p>A library is a script project whose functions can be reused in other scripts.</p>
</blockquote>
</blockquote>
<p>The documentation shows the process on how to <code>create</code>, <code>share</code>, <code>use</code>, <code>remove</code>, and <code>update</code> Libraries for your <code>scripts</code>.</p>
","0","Answer"
"79437897","79434419","<p>You can do something like :</p>
<pre><code>...
  git pull
  if ! git merge master; then
     read -p &quot;Try to resolve conflicts in another bash session, and type Enter once done&quot;
  fi
  git push
...
</code></pre>
","0","Answer"
"79438693","79433157","<p>Logic App <code>equals()</code> function gives True and False as the answer and not as true or false.</p>
<p>To overcome this you can simply you <code>tolower()</code> function as below:</p>
<p>Here, I have taken manually as True for apiTicket. You can use it dynamic value:</p>
<p><img src=""https://i.imgur.com/Kujpoq8.png"" alt=""enter image description here"" /></p>
<p>Change it to:</p>
<pre><code>&quot;apiTicket&quot;: tolower(equals(body('Get_Ticket_Details')?['takenby'], 'Integration Agent'))
</code></pre>
<p>Output:</p>
<p><img src=""https://i.imgur.com/eeKrqDH.png"" alt=""enter image description here"" /></p>
","0","Answer"
"79441902","79441877","<p>You could use dots and <code>match.call</code>.</p>
<pre><code>sampfun3 &lt;- function(df, ..., FUN=sd) {
  args &lt;- match.call(expand.dots=FALSE)$...
  df[sapply(args, deparse)] |&gt; sapply(FUN)
}
</code></pre>
<p></p>
<pre><code>&gt; sampfun3(mtcars, disp)
    disp 
123.9387 
&gt; sampfun3(mtcars, disp, mpg, am, hp)
       disp         mpg          am          hp 
123.9386938   6.0269481   0.4989909  68.5628685 
&gt; sampfun3(mtcars, disp, mpg, am, hp, FUN=mean)
     disp       mpg        am        hp 
230.72188  20.09062   0.40625 146.68750 
</code></pre>
","1","Answer"
"79442109","79441877","<p>The first two use rlang but the last two seem closer to what is mentioned in the comment.</p>
<p><strong>1) dplyr</strong> If the problem is to calculate the <code>sd</code> of several columns then we can pass a <em>selection</em> using <a href=""https://dplyr.tidyverse.org/reference/dplyr_tidy_select.html"" rel=""nofollow noreferrer"">tidy-select</a> syntax.</p>
<pre><code>library(dplyr)

sampfun3 &lt;- function(df, sel) {
  df %&gt;% summarize(across({{sel}}, sd))
}

sampfun3(mtcars, mpg:disp)  # columns from mpg to disp
##        mpg      cyl     disp
## 1 6.026948 1.785922 123.9387

sampfun3(mtcars, starts_with(&quot;c&quot;))  # columns whose name starts with c
##        cyl   carb
## 1 1.785922 1.6152

sampfun3(mtcars, disp)  # just disp
##       disp
## 1 123.9387
</code></pre>
<p><strong>2) rlang</strong> If the problem is not multiple columns but rather just avoiding character strings then this does not use any character strings anywhere.  It requires one extra line of code for each unquoted argument passed.</p>
<pre><code>library(rlang)

sampfun4 &lt;- function(df, col) {
  col &lt;- eval_tidy(enquo(col), df)
  sd(col) 
}

sampfun4(mtcars, disp)
## [1] 123.9387
</code></pre>
<p><strong>3) Base R</strong> With this approach we start and end the function body as shown and between those two lines we can have as many lines and references to arguments as desired with no extra per-argument code.</p>
<pre><code>sampfun5 &lt;- function(df, col1, col2) eval.parent(substitute({
  sd(df$col1) / mean(df$col2)
}))

sampfun5(mtcars, disp, cyl)
## [1] 20.0305
</code></pre>
<p><strong>4) gtools</strong> <code>defmacro</code> in gtools provides a wrapper implementing (3).  See the article by Thomas Lumley starting on page 11 of  <a href=""https://cran.r-project.org/doc/Rnews/Rnews_2001-3.pdf"" rel=""nofollow noreferrer"">https://cran.r-project.org/doc/Rnews/Rnews_2001-3.pdf</a> .</p>
<pre><code>library(gtools)

sampfun6 &lt;- defmacro(df, col1, col2, expr = {
  sd(df$col1) / mean(df$col2)
})

sampfun6(mtcars, disp, cyl)
## [1] 20.0305
</code></pre>
","1","Answer"
"79442252","79405451","<p>Since concepts are checked at compile time, you could use <code>if constexpr</code> which discards any non-taken branch:</p>
<pre><code>template &lt;typename A&gt;
auto getterFunction(A const&amp; a)
{
    if constexpr (iterator_1&lt;A&gt;) {
        return a.function1();
    } else if constexpr (iterator_2&lt;A&gt;) {
        return a.function2();
    } else {
        static_assert(false);
    } 
}
</code></pre>
<p>}</p>
<p>You may want to consider adding a check that only one concept is satisfied, as any type which satisfies more will just use the first one in the checked order. <code>static_assert(std::ranges::count({ iterator_1&lt;A&gt;, iterator_2&lt;A&gt;... }, true) == 1);</code> should do the trick.</p>
","1","Answer"
"79442431","79441877","<p>More approaches:</p>
<pre><code>sampfun3 &lt;- function(df, col) {
  df |&gt; pull({{col}}) |&gt; sd()
}

&gt; sampfun3(mtcars, disp)
[1] 123.9387



sampfun4 &lt;- function(df, col){
  df |&gt; summarize(across( {{col}}, ~sd(.x)))
}

sampfun4(mtcars, disp)

&gt; sampfun3(mtcars, disp)
      disp
1 123.9387
</code></pre>
","1","Answer"
"79446605","79446582","<p>You need to subsume <code>concept Alert</code> in your 2 other concepts:</p>
<pre><code>template &lt;typename T&gt;
concept FirstAlert = Alert&lt;T&gt; &amp;&amp; std::derived_from&lt;T, FirstSound&gt; &amp;&amp; std::derived_from&lt;T, FirstLight&gt;;

template &lt;typename T&gt;
concept LastAlert = Alert&lt;T&gt; &amp;&amp; std::derived_from&lt;T, LastSound&gt; &amp;&amp; std::derived_from&lt;T, LastLight&gt;; 
</code></pre>
","3","Answer"
"79448246","79448103","<p>You are facing several issues when you want to use a UDF (User defined formula) to fill the selected range:</p>
<ul>
<li>You can't pass the selection (the current selected cells) as parameter</li>
<li>A UDF can't write to the sheet. It can only <em>calculate</em> something and Excel writes the result into the cell where the formula is used.</li>
<li><s>You cannot create a spill function with VBA</s> (<strong>Update</strong>: I was wrong, you can.)</li>
<li>If it would be possible to create such a function, it would be triggered whenever Excel thinks that it needs to recalculate the sheet. As the function creates random numbers, the range would be filled newly with every sheet recalculation - probably not what you want.</li>
</ul>
<p>So instead, write a Subroutine that fills the Range:</p>
<pre><code>Sub randM(Optional r As Range = Nothing)
    If r Is Nothing Then Set r = Selection
    
    Dim valueList As Collection, i As Long
    Set valueList = GetRandomValueList
    
    Dim cell As Range
    For Each cell In r
        Dim randomIndex As Long, randVal As Double
        randomIndex = Int((Rnd * valueList.Count) + 1)
        cell.Value = valueList(randomIndex)
        valueList.Remove randomIndex

        If valueList.Count = 0 Then Exit Sub  ' No more possible values.
    Next
End Sub
</code></pre>
<p>Now you need a simple routine that fills a list (I use a Collection) with possible values. The following example creates a deck of cards:</p>
<pre><code>Private Function GetRandomValueList() As Collection
    Dim valueList As New Collection
    Dim i, j
    For Each i In Array(2, 3, 4, 5, 6, 7, 8, 9, 10, &quot;Jack&quot;, &quot;Queen&quot;, &quot;King&quot;, &quot;Ace&quot;)
        For Each j In Array(&quot;Spade&quot;, &quot;Hearts&quot;, &quot;Diamonds&quot;, &quot;Clubs&quot;)
            valueList.Add i &amp; &quot; of &quot; &amp; j
        Next
    Next
    Set GetRandomValueList = valueList
End Function
</code></pre>
<p>And as you can only call parameterless Subroutines from Excel, just create a wrapper that runs on the current Selection</p>
<pre><code>Sub randMOnSelection
    randM Selection
End Sub
</code></pre>
<p>Now just call this routine whenever you need a range filled with random numbers. You can do this from the Macro-Menu (Developer-&gt;Macros or View-&gt;Macros). You can also assign the Macro to a Key (eg Ctrl+Shift+R) in the Macro Menu under [Options...]. Or you place a button or shape on your sheet that calls this routine.</p>
<p><a href=""https://i.sstatic.net/197oxpd3.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/197oxpd3.png"" alt=""enter image description here"" /></a></p>
","1","Answer"
"79448958","79448911","<p>You'll need to update your <code>lambda</code>s in <code>add_row</code> to correctly pass in the local <code>weight_entry</code> widget:</p>
<pre><code>btn_weightpos = tk.Button(root, text='+', command=lambda entry=weight_entry: plusminus(True, entry, row_counter)) 
btn_weightpos.grid(row=row_counter, column=5, padx=(0, 19), pady=(0, 8), sticky='s')

btn_weightneg = tk.Button(root, text='-', command=lambda entry=weight_entry: plusminus(False, entry, row_counter))
btn_weightneg.grid(row=row_counter, column=5, padx=(19, 0), pady=(0, 8), sticky='s')
</code></pre>
","0","Answer"
"79449915","79449755","<p>It looks like the issue here is <code>this</code> related.</p>
<p>In non-strict mode, <code>this</code> inside <code>callback()</code> points to the global <code>window</code> object, making <code>this.length</code> equal to <code>window.length</code>, which is usually <code>0</code>.</p>
<p>When you call <code>callback()</code> directly inside <code>method</code>, you’re not invoking it as a method of any object. In non-strict mode, a standalone function call defaults <code>this</code> to the global object → <code>window</code>.</p>
<p>The global <code>let length = 4;</code> does not define <code>length</code> as a property on <code>window</code>, it simply declares a block-scoped variable in the global scope. Therefore, it does not affect <code>this.length</code>.</p>
<p>The extra arguments <code>(1, 2)</code> are ignored because <code>method</code> only takes one parameter (<code>callback</code>) and does nothing with those arguments.</p>
<p><strong>EDIT 1 :</strong></p>
<p><code>window.length</code> represents the number of frames (sub-browsing contexts). As you don’t have any iframes, <code>window.length</code> is <code>0</code>. So the log statement ends up printing <code>0</code>.</p>
<p>Example of working code :</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function callback() {
  console.log(this.length);
}

const object = {
  length: 5,
  method(cb) {
    // Force 'this' to be 'object'
    cb.call(this);
  },
};

object.method(callback, 1, 2);</code></pre>
</div>
</div>
</p>
","1","Answer"
"79453075","79453066","<p>Keep a count of found divisors, and only return if it's the second one. Also it's faster to start from <code>n - 1</code> and go backwards, then <a href=""https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements"" rel=""nofollow noreferrer""><code>break</code></a> once you've found a match:</p>
<pre class=""lang-py prettyprint-override""><code>n = int(input(&quot;Enter an integer:&quot;))
result = 1
divisor_count = 0
for i in range(n - 1, 1, -1):
    if (n % i) == 0:
        divisor_count += 1
        if divisor_count == 2:
            result = i
            break
print(result)
</code></pre>
","2","Answer"
"79453086","79453066","<p>For your example, you start the loop from 2 and go up to n.</p>
<pre><code>So if n=36

36 / 2 = 18 ---&gt; largest divisor

36 / 3 = 12 ---&gt; second largest divisor ---&gt; Your answer
</code></pre>
<p>So instead of going from <code>2 to n</code>, you find the answer much sooner if you just get the result of the division, and then combine with a counter to get the second largest divisor.</p>
<p>Here's my solution:</p>
<pre><code>n = int(input(&quot;Enter an integer:&quot;))
result = 1
c=0
for i in range(2, n):
    if ((n % i) == 0 and c&lt;2):
        result = int(n/i)
        c=c+1
    if c==2:
        break
    
print(result)
</code></pre>
","-1","Answer"
"79453189","79453066","<p>While @Selcuk's answer works, it is actually slow counting backwards one by one from n - 1 to 2 knowing that the second largest divisor is simply n divided by the second <em>smallest</em> divisor (besides 1), and that it's a lot quicker to get to the second smallest divisor because we only need to count up to the square root of n.</p>
<p>There are a couple of exceptions that need to be taken into account though:</p>
<ol>
<li>If only the first smallest divisor is found but not the second (such as 8, where there is no second smallest divisor after 2 before the square root of 8), then the first smallest divisor is actually the second largest divisor.</li>
<li>If the first smallest divisor is found but not the second, and the first smallest divisor is actually the square root of n (such as 25), then the second largest divisor is 1.</li>
</ol>
<p>Below is a reference implementation:</p>
<pre><code>from math import isqrt

def second_largest_divisor(n):
    first = 1
    for i in range(2, isqrt(n) + 1):
        if n % i == 0:
            if first != 1:
                return n // i
            first = i
    if first == n // first:
        return 1
    return first

assert second_largest_divisor(36) == 12
assert second_largest_divisor(35) == 5
assert second_largest_divisor(25) == 1
assert second_largest_divisor(16) == 4
assert second_largest_divisor(8) == 2
assert second_largest_divisor(6) == 2
assert second_largest_divisor(4) == 1
</code></pre>
<p>Demo: <a href=""https://ideone.com/UFINuk"" rel=""nofollow noreferrer"">https://ideone.com/UFINuk</a></p>
","4","Answer"
"79453555","79453066","<p>This response could be considered as a variation of the response of @Selcuk</p>
<pre><code>n = int( input( &quot;Enter an integer: &quot; ))

def getSecondLargestDivisor( num ):
    findSecond = False
    for i in range( 2, num ):
        if num % i == 0:
            if not findSecond:
                findSecond = True
            else:
                return num / i
    return 1
        
print( getSecondLargestDivisor( n ) )
</code></pre>
","0","Answer"
"79453931","79453066","<p>If you don't mind installing a non-standard module (sympy in this case) then:</p>
<pre><code>import sympy

N = 36

try:
    print(sorted(sympy.divisors(N))[-3])
except IndexError:
    print(&quot;There is no 2nd largest divisor for&quot;, N)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>12
</code></pre>
","0","Answer"
"79455059","79448911","<p>The <code>weight_entry</code> created inside <code>add_row()</code> is not the same as the global created <code>weight_entry</code>, so the checking <code>entry == weight_entry</code> inside <code>plusminus()</code> will be evaluated as <code>False</code> because <code>weight_entry</code> inside <code>plusminus()</code> refers to the global one.</p>
<p>You can create a custom class for the <em>weight</em> entry:</p>
<pre class=""lang-py prettyprint-override""><code>class WeightEntry(ttk.Entry): pass
</code></pre>
<p>Then create those <em>weight</em> entry using this custom class:</p>
<pre class=""lang-py prettyprint-override""><code>def add_row():
    ...
    # local one
    weight_entry = WeightEntry(...)
    ...

...

# global one
weight_entry = WeightEntry(...)
...
</code></pre>
<p>Then you can use <code>isinstance(entry, WeightEntry)</code> inside <code>plusminus()</code> to check whether <code>entry</code> is an instance of <code>WeightEntry</code>:</p>
<pre class=""lang-py prettyprint-override""><code>def plusminus(increment, entry, row_counter):
    if entry.get() == '':
        new_value = 0
    else:
        ...
        if isinstance(entry, WeightEntry):
            ...
    ...
</code></pre>
<hr />
<p>Another suggestion is to pass the <em>actual value</em> (+5/-5, +1/-1) to the argument <code>increment</code> of <code>plusminus()</code> and add this <em>actual value</em> to the passed <code>entry</code>, i.e.  <code>new_value = max(current_value+increment, 0)</code>.</p>
","0","Answer"
"79454142","79454077","<p>There's simply too much wrong to answer this question with proper code:</p>
<p>You didn't use the structure in your assignment at all. It should look something like</p>
<pre><code>  configLoadDrvMap.loadDrvFnPtr = write_SpiConfig;
</code></pre>
<p>This might, however, need a type cast depending on what exactly <code>write_SpiConfig</code>is and is likely wrong anyways because your function pointer in the structure expects a <code>void (*)(void)</code> and you are assigning a pointer to a non-void function that expects arguments.</p>
<p>Also, your use of arguments in the function pointer assignment hints you are understanding this as a function call - it isn't.</p>
","1","Answer"
"79454237","79454077","<p>You have to separate the function pointer assignment and the function call.</p>
<p>It should just be <code>configLoadDrvMap.loadDrvFnPtr = &amp;write_SpiConfig;</code>. In your code you are attempting to call the function at the same line as you assign the function pointer and that's not going to work - you'd end up assigning the function pointer to the <em>result</em> of the function call and the compiler will protest with some error message about incompatible types.</p>
<hr />
<p>Best practices:</p>
<ul>
<li><p>Using function pointers without <code>typedef</code> is bad style, since they quickly get hard to read.</p>
</li>
<li><p>Use a function pointer syntax similar to object pointer syntax for style consistency.</p>
</li>
<li><p>As a rule of thumb: good variable names explain what the variable <em>does</em>, not what the variable <em>is</em>.</p>
<p>Variable names containing too much info about what type that variable has (ie <code>FnPtr</code>) is an indication of muddy design and lead to needless clutter. Programmers are expected to always look up the type of a variable before using it.</p>
</li>
</ul>
<p>Example of how to fix the above:</p>
<pre class=""lang-c prettyprint-override""><code>typedef void load_drv_t (void); // function type

...

typedef struct LOAD_DRV_MAP
{
  ...
  load_drv_t* load_drv; // pointer to load_drv_t, quite self-documenting
}LOAD_DRV_MAP;

...

configLoadDrvMap.load_drv = &amp;write_SpiConfig;

</code></pre>
","2","Answer"
"79456775","79456587","<p>Use <code>std::array</code> (<code>#include &lt;array&gt;</code>) instead of a built-in array, as you don't need to name it.</p>
<p>Here is a shorter version that also fixes your other issues:</p>
<pre><code>void calculate( int sum, int count, int limit ) {
   std::array&lt;void(*)(int, int, int), 2&gt; {
        message,
        calculate
   }[limit &gt; count](sum + getSum(sum), count + 1, limit);
}
</code></pre>
","0","Answer"
"79457072","79456587","<p>You might move local variable as parameter as you do for other variables.
You just have to adjust second function with lambda:</p>
<pre><code>void calculate(int sum,
               int count,
               int limit,
               std::function&lt;void(int, int, int)&gt; (&amp;&amp;funcs)[2] = {nullptr, nullptr})
{
    funcs[0] = &amp;message;
    funcs[1] = [&amp;](int sum, int count, int limit) {
        sum = sum + getSum(sum );
        funcs[ limit &gt; count - true + 1 ]( sum, count + 1, limit );
    };
    funcs[1](sum, count, limit);
}
</code></pre>
<p><a href=""https://godbolt.org/z/saGo6fWoe"" rel=""nofollow noreferrer"">Demo</a></p>
","0","Answer"
"79458378","79458345","<p>A <strong>base R</strong> approach that looks for <code>NA</code> row-wise with <code>apply</code>.</p>
<pre><code>wcol &lt;- ncol(tdf)

data.frame(t(apply(tdf, 1, \(x) {
  x[which(is.na(x))[1] - 1] &lt;- x[wcol]
  x
})))
</code></pre>
<p>output</p>
<pre><code>   A  B  C  D  E
1 10 NA NA NA 10
2  2 20 NA NA 20
3  5 30 NA NA 30
4  4 40 NA NA 40
</code></pre>
<p>Since the values are all numeric no conversion occurs with the intermediate matrix result.</p>
","6","Answer"
"79458379","79458345","<p>A run-length encoding <code>rle</code> can give you the last non-<code>NA</code> on each row. Add 1 and use as the column number in an index matrix.</p>
<pre class=""lang-r prettyprint-override""><code>tdf &lt;- data.frame(
  A = c(1, 2, 5, 4),
  B = c(NA, 3, 4, 5),
  C = c(NA, NA, NA, NA),
  D = c(NA, NA, NA, NA),
  E = c(10, 20, 30, 40))

inx &lt;- apply(tdf, 1L, \(x) {
  i &lt;- rle(is.na(x))$lengths[1L]
  ifelse(i &lt; nrow(tdf), i, NA_integer_)
})
inx &lt;- cbind(seq_len(nrow(tdf)), inx)
tdf[inx] &lt;- tdf$E
tdf
#&gt;    A  B  C  D  E
#&gt; 1 10 NA NA NA 10
#&gt; 2  2 20 NA NA 20
#&gt; 3  5 30 NA NA 30
#&gt; 4  4 40 NA NA 40
</code></pre>
<p><sup>Created on 2025-02-21 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","4","Answer"
"79458557","79458345","<p>You can use <code>max.col</code>  + <code>is.na</code> like below</p>
<pre><code>&gt; tdf[cbind(1:nrow(tdf), max.col(is.na(tdf), &quot;first&quot;) - 1)] &lt;- tdf$E

&gt; tdf
   A  B  C  D  E
1 10 NA NA NA 10
2  2 20 NA NA 20
3  5 30 NA NA 30
4  4 40 NA NA 40
</code></pre>
","4","Answer"
"79458599","79458345","<p>One <code>tidyverse</code> option could be:</p>
<pre><code>tdf %&gt;%
 mutate(pmap_dfr(across(c(A:D, E)), 
                 ~ `[&lt;-`(c(...), max(which(!is.na(head(c(...), -1)))), tail(c(...), 1))))
                 
   A  B  C  D  E
1 10 NA NA NA 10
2  2 20 NA NA 20
3  5 30 NA NA 30
4  4 40 NA NA 40
</code></pre>
","2","Answer"
"79458908","79458345","<p>Let <code>ix</code> be the column number before the first NA, one per row. If there are no NA's then return 1 via the <code>nomatch</code> argument of <code>match</code> which becomes 0 after subtracting 1. In the first test below <code>ix</code> is c(1, 2, 2, 2) and in the second is <code>c(1, 2, 2, 0, 0)</code>.  Then insert <code>tdf$E</code> into  successive rows such that the first element of <code>ix</code> corresponds to row 1, the second to row 2 and so on.  An <code>ix</code> element of 0 means skip the insertion for that row so that that row remains unchanged.</p>
<p>(The code works whether <code>data</code> is a data frame or matrix but if it were known to always be a matrix then <code>[ix&gt;0, ]</code> in the second line could optionally be omitted due to a subtle difference between matrix and data frame indexing.)</p>
<p>This solution has a number of advantages:</p>
<ul>
<li>works for all examples provided.  See tests.</li>
<li>inserts into a data frame rather than into a matrix which must then be converted.</li>
<li>is compact having only two lines of code</li>
<li>does not overwrite input which in general is good practice</li>
</ul>
<p>Code</p>
<pre><code>fillin &lt;- function(data, col = ncol(data)) {
  ix &lt;- apply(data, 1, match, x = NA, nomatch = 1) - 1
  replace(data, cbind(seq_along(ix), ix)[ix&gt;0,], data[ix&gt;0, col])
}

# tests 

identical(fillin(tdf), enddf)  # inputs from question
## [1] TRUE

identical(fillin(tdf2), enddf2)  # inputs from Note below
## [1] TRUE     
</code></pre>
<h2>Note</h2>
<p>Input used</p>
<pre><code>tdf2 &lt;- data.frame(
  A = c(1, 2, 5, NA,1),
  B = c(NA, 3, 4, NA,1),
  C = c(NA, NA, NA, NA,1),
  D = c(NA, NA, NA, NA,1),
  E = c(10, 20, 30, 40,1))

enddf2 &lt;- data.frame(
  A = c(10, 2, 5, NA, 1),
  B = c(NA, 20, 30, NA, 1),
  C = c(NA, NA, NA, NA, 1),
  D = c(NA, NA, NA, NA, 1),
  E = c(10, 20, 30, 40, 1))
</code></pre>
<h2>Update</h2>
<p>Removed stray period in code and enhanced to support both the test example in the question and the new one in the comment under this question.  Also made a number of other small changes.</p>
","-1","Answer"
"79459885","79458345","<p>You could solve your problem as follows:</p>
<pre><code>ij = which(is.na(tdf), arr.ind=TRUE)
ij = ij[!duplicated(ij[,1]) &amp; ij[,2]&gt;1,]
ij[, 2] = ij[, 2]-1
tdf[ij] = tdf$E[ij[,1]]
</code></pre>
","0","Answer"
"79461444","79461412","<p>Your <code>Parser</code> trait needs to work for <em>all</em> lifetimes passed to <code>parse</code> so your implementation on function objects is correctly un-restricted. However your <code>tag</code> implementation takes in a lifetime and the returned function object is only defined to accept and return that lifetime.</p>
<p>The fix is to not bind lifetimes in to the <code>impl Fn</code> returned by <code>tag</code>:</p>
<pre><code>fn tag&lt;'a&gt;(
    _tag: &amp;'a str,
) -&gt; impl Fn(&amp;[u8]) -&gt; Result&lt;(&amp;[u8], String), ParseError&gt; + 'a {
    move |data: &amp;[u8]| {
        // Parsing logic
    }
}
</code></pre>
<p>It will actually work the same with all lifetimes elided, but I've left the outer one explicit for your benefit. The <code>_tag</code> <em>is</em> captured in the returned <code>impl Fn</code>, but its parameters and return type are not bound to its lifetime.</p>
","0","Answer"
"79462283","79462210","<p>Consider the alternatives you propose:</p>
<pre><code>#define foo(x) do { /* main part of macro here */ } while (0)
#define foo(x) if (1) { /* main part of macro here */ } else
</code></pre>
<p>Both of these serve the purpose that the macro can be written like a function call:</p>
<pre><code>foo(x);
</code></pre>
<p>Notably, the semicolon ends the statement, so the macro invocation looks like many other C statements. To somebody experienced in C, it looks odd if there is a line without a semicolon, like:</p>
<pre><code>x = 3;
foo(x)
y = 4;
</code></pre>
<p>However, consider if somebody does accidentally write the above, perhaps because they knew <code>foo</code> was a macro and thought it was a whole statement by itself. Then the <code>while</code> form becomes:</p>
<pre><code>x = 3;
do { /* main part of macro here */ } while (0)
y = 4;
</code></pre>
<p>This generates a compiler error since it is not valid C grammar (barring weird extensions). In contrast, the <code>if</code> form becomes:</p>
<pre><code>x = 3;
if (1) { /* main part of macro here */ } else
y = 4;
</code></pre>
<p>This may compile without an error, since the <code>y = 4;</code> becomes part of the <code>else</code>. So, in this respect, the <code>while</code> form is superior since it catches an error that the <code>if</code> form does not.</p>
","11","Answer"
"79463300","79456587","<p>You don't need a collection of <code>std::function</code> objects at all, you can use <code>?:</code></p>
<pre><code>#include &lt;cstdio&gt;
#include &lt;cctype&gt;
#include &lt;charconv&gt;
#include &lt;concepts&gt;
#include &lt;iostream&gt;

template &lt;typename F, typename R, typename... Args&gt;
concept invocable_as = std::invocable&lt;F, Args...&gt; &amp;&amp; std::is_invocable_r_v&lt;R, F, Args...&gt;;

void while_fun(invocable_as&lt;bool&gt; auto cond, std::invocable auto body)
{
    cond() ? [&amp;]{ body(); while_fun(cond, body); }() : []{}();
}

template&lt;typename T&gt;
auto for_fun(T init, invocable_as&lt;bool, T&gt; auto cond, std::invocable&lt;T&gt; auto body, invocable_as&lt;T&gt; auto next) 
{
    while_fun(
        [&amp;]{ return cond(init); }, 
        [&amp;]{ body(init); init = next(); }
    );
}

template&lt;typename T, typename U&gt;
auto reduce_fun(T acc, U init, invocable_as&lt;bool, U&gt; auto cond, invocable_as&lt;T, T, U&gt; auto body, invocable_as&lt;U&gt; auto next)
{
    while_fun(
        [&amp;]{ return cond(init); },
        [&amp;]{ acc = body(acc, init); init = next(); }
    );
    return acc;
}

int getInt()
{
    for_fun&lt;int&gt;(
        ' ', 
        [](int c){ return std::isspace(c) || (std::ungetc(c, stdin), false); }, 
        [](int c){ }, 
        [](){ return std::getchar(); }
    );

    return reduce_fun&lt;int&gt;(
        0,
        std::getchar(),
        [](int c){ return std::isdigit(c); }, 
        [](int acc, int c){ return (acc * 10) + c - '0'; },
        [](){ return std::getchar(); }
    );
}

void message( int sum, int limit ) {
    std::cout &lt;&lt; &quot;Sum = &quot; &lt;&lt; sum &lt;&lt; &quot;\n&quot; &lt;&lt; &quot;average = &quot; &lt;&lt; (sum / limit) &lt;&lt; &quot;\n&quot;;
}

void calculate( int sum, int count, int limit ) {
   (limit &gt;= count) ? calculate( sum + getInt(), count + 1, limit ) : message( sum, limit );
}

void prompt( int amount ) {
   std::cout &lt;&lt; &quot;Enter &quot; &lt;&lt; amount &lt;&lt; &quot; values: &quot;;
   calculate( 0, 0, amount );    
}

int main() {
   prompt(getInt());
   return 0;
}
</code></pre>
","1","Answer"
"79466841","79463536","<p>Your measure uses SELECTEDVALUE() for month and year, which returns a single scalar value only when one item is selected. I would replace single-value selections with context-driven date functions like MAX() or built-in functions (DATESQTD, DATESYTD). I have tried to update your code with a working example but have not been able to test it as a schema was not provided</p>
<pre><code>Ach. QTD 6 =
VAR SelectedPeriod = SELECTEDVALUE('P. Table'[Period])
VAR CurrentKPI = SELECTEDVALUE(PMS_BW[KPI])

VAR Val =
    SWITCH(
        SelectedPeriod,
        &quot;MTD&quot;, CALCULATE(SUM(PMS_BW[Ach_CM]), DATESMTD('Calendar'[Date])),
        &quot;QTD&quot;, CALCULATE(SUM(PMS_BW[Ach_CM]), DATESQTD('Calendar'[Date])),
        &quot;YTD&quot;, CALCULATE(SUM(PMS_BW[Ach_CM]), DATESYTD('Calendar'[Date])),
        SUM(PMS_BW[Ach_CM])
    )

VAR Denom =
    SWITCH(
        SelectedPeriod,
        &quot;MTD&quot;, CALCULATE(SUM(PMS_BW[Recovered_CM]), DATESMTD('Calendar'[Date])),
        &quot;QTD&quot;, CALCULATE(SUM(PMS_BW[Recovered_CM]), DATESQTD('Calendar'[Date])),
        &quot;YTD&quot;, CALCULATE(SUM(PMS_BW[Recovered_CM]), DATESYTD('Calendar'[Date])),
        SUM(PMS_BW[Recovered_CM])
    )

VAR FVal =
    SWITCH(
        TRUE(),
        CurrentKPI IN {&quot;CCR&quot;},
            FORMAT(ROUND(DIVIDE(Denom, Val, 0) * 100, 2), &quot;0.00&quot;) &amp; &quot; %&quot;,
        CurrentKPI IN {&quot;Retail&quot;, &quot;Corporate&quot;},
            FORMAT(ROUND(DIVIDE(Val, Denom, 0) * 100, 2), &quot;0.00&quot;) &amp; &quot; %&quot;,
        CurrentKPI IN {&quot;Disbursement&quot;, &quot;GLP&quot;, &quot;NPL&quot;, &quot;Green Financing&quot;, &quot;SME&quot;, &quot;CA&quot;, &quot;SA&quot;, &quot;TD&quot;, &quot;Total Deposits&quot;},
            SWITCH(
                TRUE(),
                Val &gt;= 1000000000, FORMAT(Val / 1000000000, &quot;#,0.00&quot;) &amp; &quot; B&quot;,
                Val &gt;= 1000000, FORMAT(Val / 1000000, &quot;#,0.00&quot;) &amp; &quot; M&quot;,
                FORMAT(Val, &quot;#,0&quot;)
            ),
        FORMAT(Val, &quot;#,0&quot;)
    )

RETURN FVal
</code></pre>
","0","Answer"
"79467221","79467216","<p>Use <code>missing()</code> not <code>is.null()</code>. Your arguments aren't <code>NULL</code>, they are defined recursively. And this is what <code>missing()</code> is for.</p>
<pre><code>geomSeq &lt;- function(start, by, times = log(end/start, base = by), 
                            end = start * by^(times)){
  if(missing(times) &amp;&amp; missing(end)) stop(&quot;either 'times' or 'end' argument must be given&quot;)
  start * by^(0:times)
}
geomSeq(start = 10, by = 10)
# Error in geomSeq(start = 10, by = 10) : 
#   either 'times' or 'end' argument must be given
</code></pre>
","2","Answer"
"79467551","79467473","<p>You can use <a href=""https://www.lispworks.com/documentation/HyperSpec/Body/f_fn_lam.htm#function-lambda-expression"" rel=""nofollow noreferrer""><code>FUNCTION-LAMBDA-EXPRESSION</code></a> to get the function's source code. The lambda-list will be the second element of this.</p>
<pre><code>* (second (function-lambda-expression f))
(A B)
</code></pre>
","3","Answer"
"79468579","79468512","<p>Since no data was provided, I'll use the <code>mf04p</code> dataset from the <code>SSN2</code> package, which contains the <code>ssn_lm</code> function shown.</p>
<p>Load the package:</p>
<pre><code>library(SSN2)
</code></pre>
<p>Load the data:</p>
<pre><code>copy_lsn_to_temp()
temp_path &lt;- paste0(tempdir(), &quot;/MiddleFork04.ssn&quot;)
mf04p &lt;- ssn_import(temp_path, overwrite = TRUE)
#mf04p 
</code></pre>
<p><strong>This is your code:</strong></p>
<p>Example list of the variables</p>
<pre><code>var &lt;- c(&quot;ELEV_DEM&quot;, &quot;SLOPE&quot;, &quot;rcaAreaKm2&quot;)

n = length(var)
</code></pre>
<p>Make a list of all possible combinations</p>
<pre><code>id &lt;- unlist(
  lapply(1:n,
         function(i) combn(1:n,i,simplify = FALSE)), recursive = FALSE)
</code></pre>
<p>Make the combinations into formulas. <strong>Note</strong> the use of <code>as.formula</code></p>
<pre><code>frmlas &lt;- (sapply(id, function(i)
  as.formula(paste(&quot;Summer_mn ~ &quot;, paste(var[i], collapse = &quot;+&quot;)))))
</code></pre>
<p><strong>This is where you got stuck</strong>:</p>
<p>Run the models using <code>lapply</code>:</p>
<pre><code>models &lt;- lapply(frmlas, ssn_lm, ssn.object = mf04p)
</code></pre>
<p>Save to RDS files:</p>
<pre><code>invisible(
  mapply(saveRDS, object=models, file=paste0(&quot;Model_&quot;, seq_along(models), &quot;.rds&quot;))
)
</code></pre>
","3","Answer"
"79469118","79468512","<p>This is based in <a href=""https://stackoverflow.com/a/79468579/8245406"">Edward's answer</a>. Its purpose is to simplify his code, not more.</p>
<pre><code>library(SSN2)

copy_lsn_to_temp()
temp_path &lt;- paste0(tempdir(), &quot;/MiddleFork04.ssn&quot;)
mf04p &lt;- ssn_import(temp_path, overwrite = TRUE)

# use 'var' directly in 'combn', no need for 'n' gymnastics
var &lt;- c(&quot;ELEV_DEM&quot;, &quot;SLOPE&quot;, &quot;rcaAreaKm2&quot;)
id2 &lt;- unlist(
  lapply(seq_along(var), function(i) combn(var, i, simplify = FALSE)), 
  recursive = FALSE)

# use 'reformulate' instead of 'paste', it produces formula objects
frmlas2 &lt;- sapply(id2, reformulate, response = &quot;Summer_mn&quot;)
# apply the modeling function
models2 &lt;- lapply(frmlas2, ssn_lm, ssn.object = mf04p)

# extract coefficients, summaries, etc
lapply(models2, coef)
lapply(models2, summary)

# or save the summaries in a list and extract what you want from the list
models2_smry &lt;- lapply(models2, summary)
# Pseudo-R2
sapply(models2_smry, `[[`, &quot;pseudoR2&quot;)
# p-values
sapply(models2_smry, \(x) x$coefficients$fixed$p)
</code></pre>
<hr />
<h1>Edit</h1>
<p>To answer to the follow-up question in comment,</p>
<blockquote>
<p>How would I write frmlas2 if I want to include additional variables in every formula? I have my list of variables in var, but I want to add variables not included in var to every model variation. Example: var &lt;- c(&quot;A&quot;, &quot;B&quot;), I want every formulation to have &quot;C&quot; in addition, so model formulations would be DV ~ A+C, DV ~ B+C, DV ~ A+B+C.</p>
</blockquote>
<pre><code>other_vars &lt;- c(&quot;D&quot;, &quot;E&quot;)
frmlas3 &lt;- sapply(id2, \(v) reformulate(c(v, other_vars), response = &quot;Summer_mn&quot;))
</code></pre>
","1","Answer"
"79470987","79470956","<blockquote>
<p>How can I simplify that? Is there a way to return the function call result?</p>
</blockquote>
<p>In order to simplify your approach, you could use <a href=""https://en.cppreference.com/w/cpp/utility/expected/transform"" rel=""noreferrer""><code>std::expected::transform</code></a>. Something like:</p>
<pre><code>return do1().transform([](int value) { return std::any(value); });
</code></pre>
<p>The transform method does the following:</p>
<ul>
<li>It checks if the <code>std::expected</code> contains a value (<code>do1().has_value()</code>)</li>
<li>If it has a value, it applies the lambda function to transform that value (<code>std::any(value)</code>) and returns a new <code>std::expected</code> with the transformed value</li>
<li>If it has an error, it simply propagates that error without calling the lambda.</li>
</ul>
<p>That means, might be able to write:</p>
<pre><code>// Helper function to convert any std::expected&lt;T, Fault&gt; to std::expected&lt;std::any, Fault&gt;
template&lt;typename T&gt;
std::expected&lt;std::any, Fault&gt; to_any(std::expected&lt;T, Fault&gt; exp) 
{
    return exp.transform([](auto value) { return std::any(value); });
}

// Function that calls the appropriate function based on input
std::expected&lt;std::any, Fault&gt; doN(int n) 
{
    switch (n) {
        case 1: return to_any(do1());
        case 2: return to_any(do2());
        // ...
        default: return std::unexpected&lt;Fault&gt;({/* some error */});
    }
}
</code></pre>
<p><strong>((<a href=""https://gcc.godbolt.org/z/MEebhaEh8"" rel=""noreferrer"">See live example demo</a>))</strong></p>
","14","Answer"
"79471281","79471224","<p>For the first case I would suggest just setting to <code>NULL</code> the default argument/s. This should work pretty well with <code>dplyr::select()</code></p>
<pre><code>select_fun_cars = function(df, var = NULL){
  df%&gt;%
  select(var, hp, cyl)
}
</code></pre>
<p>For the second case, if you want to rename a column <code>label</code> using the character value stored in <code>Domains</code> (e.g, <code>Domains = &quot;new_label&quot;</code>) I suggest using the function <code>dplyr::rename(setNames(&quot;label&quot;, Domains))</code>. Notice that if you set the default value as <code>Domains = &quot;label&quot;</code> it won't rename anything</p>
","2","Answer"
"79471534","79471224","<p>Since you didn't add a <strong>dplyr</strong> tag, this is a <strong>base R</strong> approach:</p>
<pre><code>select_fun_cars = function(df, var=NULL){
  if(!missing(var)) var &lt;- deparse(substitute(var))

  df &lt;- df[, c(var, 'hp', 'cyl')]
  
  # Rename var if it is supplied
  if(!missing(var)) names(df)[1] &lt;- 'label'
  
  return(df)
}
</code></pre>
<hr />
<pre><code>select_fun_cars(mtcars, mpg) |&gt; head()
                  label  hp cyl
Mazda RX4          21.0 110   6
Mazda RX4 Wag      21.0 110   6
Datsun 710         22.8  93   4
Hornet 4 Drive     21.4 110   6
Hornet Sportabout  18.7 175   8
Valiant            18.1 105   6

select_fun_cars(mtcars) |&gt; head()
                   hp cyl
Mazda RX4         110   6
Mazda RX4 Wag     110   6
Datsun 710         93   4
Hornet 4 Drive    110   6
Hornet Sportabout 175   8
Valiant           105   6
</code></pre>
<p>This also works for the dplyr select:</p>
<pre><code>df &lt;- select(df, var, hp, cyl)
</code></pre>
","2","Answer"
"79473673","79471224","<p>This will pass the <code>var</code> argument column to <code>select</code> and rename it using the string in the <code>label</code> variable.</p>
<pre><code>library(dplyr)

select_fun_cars &lt;- function(df, var, label = &quot;X&quot;) {
  df %&gt;% select(&quot;{label}&quot; := {{var}}, hp, cyl) %&gt;% head(2)
}

select_fun_cars(mtcars, mpg)
           X  hp cyl
## Mazda RX4     21 110   6
## Mazda RX4 Wag 21 110   6

select_fun_cars(mtcars)
##                hp cyl
## Mazda RX4     110   6
## Mazda RX4 Wag 110   6
</code></pre>
","1","Answer"
"79475505","79475346","<p>That only works if there's no parameters to the function.</p>
<pre><code>function host { $args.count }

host a b c

3
</code></pre>
","1","Answer"
"79475660","79475346","<p>As @js2010 said, <code>$args</code> exists only if there is no parameters in the function.</p>
<p>But it's a easy fix: you can simply replace <code>$argc = $args.Count</code> with <code>$argc = $PSBoundParameters.Count</code></p>
<p>Plus this lets you access named parameters directly, making code easier to write and read:</p>
<pre><code># Evaluate using a Approved Verbs name
function Get-ResolveDnsName {
    # an alias for easier use in terminal.  
    # I do not suggest to use it in scripts.  
    [Alias('Host')]
    [CmdletBinding(
        # this forces the position of the parameters when not using names
        PositionalBinding = $true, 
        DefaultParameterSetName = 'ZeroParameters'
    )]
    param (
        # By using a default a ParameterSet with NO parameters,
        # we make possible to call the function without parameters while
        # have the $Name being mandatory otherwise
        [Parameter(Position = 1, Mandatory = $true, ParameterSetName = 'Minimum')]
        [string]$Name,
        [Parameter(Position = 2, ParameterSetName = 'Minimum')]
        [string]$Server,
        [Parameter(Position = 3, ParameterSetName = 'Minimum')]
        # let's add some validation given we have a limited set of correct values.  
        [ValidateSet('4', 'A', '6', 'AAAA', 'A_AAAA')]
        [string]$Type
    )
    

    # if no parameter is passed, call self-help and quit the function
    if (-not $PSBoundParameters.Count) { 
        Get-Help $MyInvocation.MyCommand.Name 
        break
    }

    # Let's start making a SPLATtable hastable for the Resolve-DnsName parameters
    $Splat = @{
        # You always have the $Name so let's add it
        Name = $Name -Replace ('https?://|s?ftps?://', '') -Replace ('/.*$', '')
    }


    # let's add the other parameters as necessary
    if ($PSBoundParameters.ContainsKey('Server')) { $Splat['Server'] = $Server }

    if ($PSBoundParameters.ContainsKey('Type')) {
        $Splat['type'] = switch ($Type) {
            # -iin forces case Insensitivity  
            { $_ -iin '4', 'A' } { 'A' }
            { $_ -iin '6', 'AAAA' } { 'AAAA' }
            default { 'A_AAAA' }
        }
    }
    
    # SPLAT!
    Resolve-DnsName @Splat
}
</code></pre>
","1","Answer"
"79476322","79474009","<pre class=""lang-r prettyprint-override""><code>RunMin&lt;- function (x, n = 10, cumulative = FALSE) 
{
  
  x &lt;- xts::try.xts(x, error = as.matrix)
  if (n &lt; 1 || n &gt; NROW(x)) 
    stop(sprintf(&quot;n = %d is outside valid range: [1, %d]&quot;, 
                 n, NROW(x)))
  if (NCOL(x) &gt; 1) {
    stop(&quot;ncol(x) &gt; 1. runMin only supports univariate 'x'&quot;)
  }
  if (cumulative) {
    NAs &lt;- sum(is.na(x))
    if (NAs &gt; 0) {
      if (any(is.na(x[-(1:NAs)]))) 
        stop(&quot;Series contains non-leading NAs&quot;)
      if (NAs + n &gt; NROW(x)) 
        stop(&quot;not enough non-NA values&quot;)
    }
    beg &lt;- 1 + NAs
    result &lt;- double(NROW(x))
    result[beg:NROW(x)] &lt;- cummin(x[beg:NROW(x)])
    is.na(result) &lt;- seq_len(n - 1 + NAs)
  }
  else {
    result &lt;- .Call(TTR:::C_runmin, x, n)
  }
  xts::reclass(result, x)
  return(result)
}
</code></pre>
<pre><code>set.seed(42)
x &lt;- rnorm(10, 1, 1)

(TTR_res &lt;- TTR::runMin(x, 5))
#&gt;  [1]        NA        NA        NA        NA 0.4353018 0.4353018 0.8938755
#&gt;  [8] 0.8938755 0.8938755 0.8938755

UDF_res &lt;- RunMin(x, 5)

XTS_res &lt;- .Call(xts:::C_roll_min, x, 5)

CRM_res &lt;- .Call(TTR:::C_runmin, x, 5)

all(sapply(list(UDF_res, XTS_res, CRM_res), FUN = identical, TTR_res))
#&gt; [1] TRUE

UDF_res
#&gt;  [1]        NA        NA        NA        NA 0.4353018 0.4353018 0.8938755
#&gt;  [8] 0.8938755 0.8938755 0.8938755
</code></pre>
<p><sup>Created on 2025-02-28 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","2","Answer"
"79476772","79476715","<p>You could use some recursive type and runtime chain calling, but if you want to avoid the chain calling and make inline code I'm afraid you need some code parsing which is very brittle, for example a parameter could be mutated before passing to the next function. So you need to parse function parameter lists and bodies, which is crazy. Maybe <code>acorn</code> could help.</p>
<p>A fast solution to your problem could be:</p>
<p><a href=""https://www.typescriptlang.org/play/?ts=5.7.3#code/MYewdgzgLgBMCuAnRBLApgEwIIYzAvDABQCGAXDGPALYBGaiAlAQHzG0VV0PP5tHBONeogA0MDEO5NWMEjADUMWoriqMAbgBQWqAE8ADmhgAxMAWIA6ayUQBzCBRJg9vNs73bdh4wBE0CMh6ADwmMGgAHlBoYBgQpmBshFowqabhUTFxVjb2jjAoYABmDDAACm4FxaUASjAA-DB1kdGx8UTWlrYOFIUliDBYlX2lAEINMP6BiCEduT0wANqdZeKdWAC6laNsFGGcaABuDF76RhIBSKiYFlNXIWdoIEVwV+jYuCxeRfBgwFAocAXaYhMItLLxMwsIhFMB7RgUO5BUJsADeKTSiDQUCQ5iIcy6eScLkWW1k6LSlJgABtsTAsRB4NTYIRYdoqWkAO4ACxQtKIj2exAZTJZ9LQjOZBO6EEYvHwhAA5D8-gDwIrGBSOVSZZYIAZqShgGgiAAGcSwyy0sB2KDcxjs7UAXwxHKxOMQ5hFzMdqSdzBI8Q82hdWlAkFgGEuyHeFijIIEb0wOAwDp04egMEZ1Dj0euGCIAEZRMXS2mMyBaVaQHYiNmHUA"" rel=""nofollow noreferrer"">Playground</a></p>
<pre><code>const curriedAdd = (a: number) =&gt; (b: number) =&gt; (c: number, d: number) =&gt; a + b + c + d;

type Fn = (...args: any) =&gt; any;

type Decurry&lt;F extends Fn&gt; = 
    F extends (...args: infer P) =&gt; infer R ? R extends (...args: infer A) =&gt; infer B ? Decurry&lt;(...args: [...P, ...A]) =&gt; B&gt; : F : never;

type decurried = Decurry&lt;typeof curriedAdd&gt;;

function decurry&lt;F extends Fn&gt;(fn: F): Decurry&lt;F&gt; {
    return ((...args: any[]) =&gt; {
        let result = fn;
        while(typeof (result = result(...args)) === 'function'){
            args.splice(0, fn.length);
        }
        return result;
    }) as any;
}

const decurried = decurry(curriedAdd);

const sum = decurried(1,1,1,1);
console.log(sum);
</code></pre>
","1","Answer"
"79476901","79471410","<p>Note: I solved this by changing my code to be like this:</p>
<pre><code>buy: (|s: &amp;mut UpgradeProperties| {
s.cost += s.cost_increase as u32;
s.cost_increase += 1;
s.current += 10.0;
}),
</code></pre>
<pre><code>pub struct UpgradeProperties {
    pub name: String,
    pub description: String,
    pub cost: u32,
    pub cost_increase: u8,
    pub icon: Texture2D,
    pub current: f32,
    pub buy: fn(&amp;mut Self),
}
</code></pre>
","0","Answer"
"79478013","79478003","<p>A Google Apps Script project can include as many functions as you need. You could even create additional files to help you to organize your functions, but keep in mind that the function names should be unique across all the files of the Apps Script project that contains them.</p>
<p>The basic steps are as follows:</p>
<ol>
<li>Create a new or open an existing spreadsheet</li>
<li>Click Extensions &gt; Apps Script
<ul>
<li>If the spreadsheet doesn't already include an Apps Script project, a new one will be created and included in it.</li>
<li>If the spreadsheet includes one or more Apps Script projects, you could add your new function to one of the existing projects. If the spreadsheet contains multiple projects, you will be asked to choose which project should be opened. Once you open a project, besides adding the new function, you can create files (.gs) to organize your functions.</li>
</ul>
</li>
</ol>
<p>Please remember that Google Apps Script uses JavaScript as a programming language. When writing functions, you should follow the JavaScript syntax rules.</p>
<p>Example</p>
<pre><code>function addColumns(){
   SpreadsheetApp.getActiveSheet().insertColumns(1);

}

function MainSheet(){
   SpreadsheetApp.getSheets()[0].activate();
}
</code></pre>
<p><strong>Related</strong></p>
<p>Questions about multiple Apps Script projects bound to a single container</p>
<ul>
<li><a href=""https://stackoverflow.com/q/32230452/1595451"">How to prevent Apps Script from opening multiple projects?</a></li>
<li><a href=""https://stackoverflow.com/q/41828097/1595451"">Bound app scripts and multiple projects</a></li>
<li><a href=""https://stackoverflow.com/q/44734129/1595451"">Multiple projects vs multiple script files in a Google spreadsheet</a></li>
<li><a href=""https://stackoverflow.com/q/66906641/1595451"">Which function runs when there are multiple script projects bound to the same Google Sheet?</a></li>
</ul>
","0","Answer"
"79478838","79478673","<p>To be honest, it's a bit difficult for me to understand your problem... Reconstruction showed me that dropdown does not respond to shape changes and a rectangle is always drawn...</p>
<p>Try something like this. I assumed that you just need to draw the shape selected from dropdawn.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>let shapeSelect;
let drawingLayer;
let startX = -1, startY = -1;
let selectedShape = ""rectangle"";

function setup() {
  createCanvas(600, 600);
  drawingLayer = createGraphics(600, 600);
  drawingLayer.background(0);
  shapeSelect = createSelect();
  shapeSelect.position(350, 620);
  shapeSelect.option('rectangle');
  shapeSelect.option('circle');
  shapeSelect.option('triangle');
  shapeSelect.option('rhombus');
  shapeSelect.selected('rectangle');
}

function draw() {
  background(0);
  image(drawingLayer, 0, 0);
  selectedShape = shapeSelect.value();
  if (mouseIsPressed &amp;&amp; mouseButton === LEFT) {
    if (startX === -1 &amp;&amp; startY === -1) {
      startX = mouseX;
      startY = mouseY;
    }
    let w = mouseX - startX;
    let h = mouseY - startY;
    noFill();
    stroke(255);
    if (selectedShape === 'rectangle') {
      rect(startX, startY, w, h);
    } else if (selectedShape === 'circle') {
      let d = Math.max(abs(w), abs(h)) * 1.5;
      ellipse(startX, startY, d, d);
    } else if (selectedShape === 'triangle') {
      triangle(startX, startY, mouseX, mouseY, startX, mouseY);
    } else if (selectedShape === 'rhombus') {
      let centerX = (startX + mouseX) / 2;
      let centerY = (startY + mouseY) / 2;
      let offsetX = abs(w) / 2;
      let offsetY = abs(h) / 2;
      quad(centerX, centerY - offsetY,
           centerX + offsetX, centerY,
           centerX, centerY + offsetY,
           centerX - offsetX, centerY);
    }
  }
}

function mouseReleased() {
  if (startX !== -1 &amp;&amp; startY !== -1) {
    let w = mouseX - startX;
    let h = mouseY - startY;
    
    drawingLayer.stroke(0, 255, 0);
    drawingLayer.fill(0, 0, 255);
    if (selectedShape === 'rectangle') {
      drawingLayer.rect(startX, startY, w, h);
    } else if (selectedShape === 'circle') {
      let d = Math.max(abs(w), abs(h)) * 1.5;
      drawingLayer.ellipse(startX, startY, d, d);
    } else if (selectedShape === 'triangle') {
      drawingLayer.triangle(startX, startY, mouseX, mouseY, startX, mouseY);
    } else if (selectedShape === 'rhombus') {
      let centerX = (startX + mouseX) / 2;
      let centerY = (startY + mouseY) / 2;
      let offsetX = abs(w) / 2;
      let offsetY = abs(h) / 2;
      drawingLayer.quad(centerX, centerY - offsetY,
                        centerX + offsetX, centerY,
                        centerX, centerY + offsetY,
                        centerX - offsetX, centerY);
    }
  }
  startX = -1;
  startY = -1;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.11.2/p5.min.js"" integrity=""sha512-1YMgn4j8cIL91s14ByDGmHtBU6+F8bWOMcF47S0cRO3QNm8SKPNexy4s3OCim9fABUtO++nJMtcpWbINWjMSzQ=="" crossorigin=""anonymous"" referrerpolicy=""no-referrer""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>
","1","Answer"
"79478965","79478942","<p>The way gtest (among others) implements this exact pattern is to return a RAII object which executes all its code in destructor:</p>
<pre><code>class check {
    public:
    explicit check(bool success) : success{ success } {}

    ~check() {
        if (!success) {
            abort_with_message(s.str());
        }
    } 

    check(const check&amp;) = delete;
    check(check&amp;&amp;) = delete;
    check&amp; operator=(const check&amp;) = delete;
    check&amp; operator=(check&amp;&amp;) = delete;

    template &lt;typename T&gt;
    check&amp;&amp; operator&lt;&lt;(const T&amp; value) &amp;&amp; {
        if (!success) {
            s &lt;&lt; value;
        }
        return std::move(*this);
    }

    private:
    bool success{};
    std::stringstream s{};
};

#ifdef DEBUG
#define CHECK(predicate) check{ (predicate) }
#else
#define CHECK(predicate) check{ true }
#endif
</code></pre>
","2","Answer"
"79479035","79478942","<p>You don't need to reinvent the wheel. <code>assert()</code> itself has the ability to display error messages.</p>
<pre><code>#include&lt;cassert&gt;
int a=1;
int b=2;
assert(a == b &amp;&amp; &quot;check failed&quot;); // this will abort the program and print &quot;Assertion failed: a == b &amp;&amp; &quot;check failed&quot;, file C:\Some\path\Source.cpp, line 42&quot;
</code></pre>
<p>Generally speaking, if there is no reason not to, library functions should be preferred.</p>
<p>If you want to output something other than a string, you can put the output operation into <code>assert()</code> The disadvantage is that <code>assert()</code> will output unnecessary extra content.</p>
<pre><code>assert(a == b || ((std::cerr &lt;&lt; &quot;a:&quot; &lt;&lt; a &lt;&lt; &quot;, b:&quot; &lt;&lt; b &lt;&lt; '\n') &amp;&amp; false));
/*
output: 
a:1, b:2
Assertion failed: a == b || ((std::cerr &lt;&lt; &quot;a:&quot; &lt;&lt; a &lt;&lt; &quot;, b:&quot; &lt;&lt; b &lt;&lt; '\n') &amp;&amp; false), file C:\Some\path\Source.cpp, line 42&quot;
*/
</code></pre>
","0","Answer"
"79479800","79479639","<p>I found the error. This issue only happens when using the client SQLPro for Oracle, which has worked very well with other database tasks and when creating functions that do not require setting variables. To test, I switched to the web SQL client Oracle provides in their testing VM, and the function creation works as expected.</p>
<p>I will contact the SQLPro developer to determine why this is happening in this client. Thank you to those who reached out to help.</p>
","2","Answer"
"79479847","79479831","<p>For a problem like this you want to avoid using a function (unless an iTVF) and certainly avoid using a loop, as neither perform very well.</p>
<p>This might not be the compact way to go about it, but the logic is clearer (IMO). You could move this into a function (iTVF) for reusability.</p>
<ol>
<li>Find the string &quot;APP&quot; and remove it and all preceding text.</li>
<li>Remove any non-numeric characters immediately following &quot;APP&quot;</li>
<li>Obtain the number using <code>substring</code> from here to the next space.</li>
</ol>
<pre><code>with TestValues as (
  select *
  from (
    values
    ('Data Service B2B APP#1234 Rehearsal 03/01/2025'),
    ('Office 365 APP 23456 for project 123'),
    ('Office 365 APP555 for project 123')
  ) x (Value)
), cte1 as (
  -- Find &quot;APP&quot; and remove from string
  select Value
    , substring(Value, patindex('%APP%', Value) + 3, len(Value)) NewValue
  from TestValues
), cte2 as (
select Value
  -- Find first numeric value after &quot;APP&quot;
  , substring(NewValue, patindex('%[0-9]%', NewValue), len(NewValue)) NewNewValue
from cte1
)
select Value
  -- Take a string until the next space
  , substring(NewNewValue, 1, patindex('% %',NewNewValue)) Number
from cte2;
</code></pre>
<p>Returns</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">Value</th>
<th style=""text-align: left;"">Number</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">Data Service B2B APP#1234 Rehearsal 03/01/2025</td>
<td style=""text-align: left;"">1234</td>
</tr>
<tr>
<td style=""text-align: left;"">Office 365 APP 23456 for project 123</td>
<td style=""text-align: left;"">23456</td>
</tr>
<tr>
<td style=""text-align: left;"">Office 365 APP555 for project 123</td>
<td style=""text-align: left;"">555</td>
</tr>
</tbody>
</table></div>
<p><a href=""https://dbfiddle.uk/rs5rcDHN"" rel=""nofollow noreferrer"">fiddle</a></p>
<p>A tidier solution is (Thanks for the reminder Martin Smith):</p>
<pre><code>select Value, number
from (
    values
    ('Data Service B2B APP#1234 Rehearsal 03/01/2025'),
    ('Office 365 APP 23456 for project 123'),
    ('Office 365 APP555 for project 123')
) TestValues (Value)
cross apply (values(substring(Value, patindex('%APP%', Value) + 3, len(Value)))) ca1 (substring_after_app)
cross apply (values(substring(substring_after_app, patindex('%[0-9]%', substring_after_app), len(substring_after_app)))) ca2 (substring_from_first_digit)
cross apply (values(substring(substring_from_first_digit, 1, patindex('% %',substring_from_first_digit)))) ca3 (number)
</code></pre>
<p>To run this against your own table use the following:</p>
<pre><code>select Value, number
from MyTable
cross apply (values(substring(Value, patindex('%APP%', Value) + 3, len(Value)))) ca1 (substring_after_app)
cross apply (values(substring(substring_after_app, patindex('%[0-9]%', substring_after_app), len(substring_after_app)))) ca2 (substring_from_first_digit)
cross apply (values(substring(substring_from_first_digit, 1, patindex('% %',substring_from_first_digit)))) ca3 (number)
</code></pre>
","4","Answer"
"79483587","79483505","<p>The return statement was irrelevant, an attempt to make things work.</p>
<p>What is needed: the parameters must be passed a variable reference (an expression that contains a double, an assignable double lvalue).
<code>double&amp;</code> (double reference).</p>
<p>I give this solution, and also give a second solution with double pointers, as the compiler implements <code>double&amp;</code>. That is how it must be done in C, as C does not have <code>double&amp;</code>.</p>
<pre><code>double maxHigh = 0, maxLow = 0;
getData(tempmatrix, maxHigh, maxLow);
indexHighTemp(maxHigh);
indexLowTemp(maxLow);

void getData(double tempmatrix[][2], double&amp; BigHigh, double&amp; BigLow) {
    BigHigh = -9999.0;
    BigLow = 9999.0
    for (int x = 0; x &lt; 12; ++x) {
        cout &lt;&lt; &quot;Enter the highest temperature for Month &quot; &lt;&lt; x+1 &lt;&lt; &quot;: &quot;;
        cin &gt;&gt; tempmatrix[x][0];
        
        if (tempmatrix[x][0] &gt; BigHigh) {
            BigHigh = tempmatrix[x][0];
        }
        
        cout &lt;&lt; &quot;Enter the lowest temperature for Month &quot; &lt;&lt; x+1 &lt;&lt; &quot;: &quot;;
        cin &gt;&gt; tempmatrix[x][1];
        
        if (tempmatrix[x][1] &lt; BigLow) {
            BigLow = tempmatrix[x][1];
        }
    }
}
</code></pre>
<p>This is the same as the explicit code:</p>
<pre><code>double maxHigh = 0, maxLow = 0;
getDataCStyle(tempmatrix, &amp;maxHigh, &amp;maxLow);
indexHighTemp(maxHigh);
indexLowTemp(maxLow);

void getDataCStyle(double tempmatrix[][2], double* BigHigh, double* BigLow) {
    *BigHigh = -9999.0;
    *BigLow = 9999.0
    for (int x = 0; x &lt; 12; ++x) {
        cout &lt;&lt; &quot;Enter the highest temperature for Month &quot; &lt;&lt; x+1 &lt;&lt; &quot;: &quot;;
        cin &gt;&gt; tempmatrix[x][0];
        
        if (tempmatrix[x][0] &gt; *BigHigh) {
            *BigHigh = tempmatrix[x][0];
        }
        
        cout &lt;&lt; &quot;Enter the lowest temperature for Month &quot; &lt;&lt; x+1 &lt;&lt; &quot;: &quot;;
        cin &gt;&gt; tempmatrix[x][1];
        
        if (tempmatrix[x][1] &lt; *BigLow) {
            *BigLow = tempmatrix[x][1];
        }
    }
}
</code></pre>
<p>And some remarks:</p>
<ul>
<li>It seems more logical swapping the parameters, low before high: <code>double&amp; BigLow, double&amp; BigHigh</code></li>
<li>Giving BigHigh and BigLow a value inside the function instead of 0 outside, ensures that not coincidentally the outside value is taken should it be an extreme value.</li>
<li>I gave the passed variables an other name, it could be any double storing expression.</li>
</ul>
","1","Answer"
"79484529","79484514","<p>You can just export an app screenshot to a PowerPoint slide in PowerApps by using the &quot;PowerAutomate&quot; integration to...capture that..screenshot. Then save it directly into a PowerPoint presentation...</p>
","0","Answer"
"79486040","79478942","<p>Completing @DominikKaszewski 's answer</p>
<ul>
<li><p>For io-manipulator as <code>std::endl</code></p>
<pre><code>check&amp;&amp; operator&lt;&lt;(std::ostream&amp; (*manip)(std::ostream&amp;)) &amp;&amp; {
    if (!success) {
        manip(s);
    }
    return std::move(*this);
}
</code></pre>
</li>
<li><p>Avoid side effect when check passes.</p>
<pre><code>#define CHECK(predicate) (predicate) ? check{ true } : check{ false }
</code></pre>
<p>Profiting than <code>&lt;&lt;</code> has higher priority than <code>:</code>.
So <code>condition ? stream1 : stream2 &lt;&lt; &quot;text&quot;;</code> is parsed as
<code>condition ? stream1 : (stream2 &lt;&lt; &quot;text&quot;);</code></p>
</li>
<li><p>Fix compilation</p>
<pre><code>check(check&amp;&amp;) = default;
</code></pre>
<p>as we use it explicitly :-)</p>
</li>
</ul>
<p>Final code is:</p>
<pre><code>class check {
public:
    explicit check(bool success) : success{ success } {}

    ~check() {
        if (!success) {
            abort_with_message(s.str());
        }
    } 

    check(const check&amp;) = delete;
    check(check&amp;&amp;) = default;
    check&amp; operator=(const check&amp;) = delete;
    check&amp; operator=(check&amp;&amp;) = delete;

    template &lt;typename T&gt;
    check&amp;&amp; operator&lt;&lt;(const T&amp; value) &amp;&amp; {
        if (!success) {
            s &lt;&lt; value;
        }
        return std::move(*this);
    }

    check&amp;&amp; operator&lt;&lt;(std::ostream&amp; (*manip)(std::ostream&amp;)) &amp;&amp; {
        if (!success) {
            manip(s);
        }
        return std::move(*this);
    }

private:
    bool success{};
    std::stringstream s{};
};

#define CHECK(predicate) (predicate) ? check{ true } : check{ false }
</code></pre>
<p><a href=""https://godbolt.org/z/fr5hb9Kaj"" rel=""nofollow noreferrer"">Demo</a></p>
","1","Answer"
"79486307","79486294","<p>You can reutrn the result of calling the function from a function template even when it turns out to be <code>void</code>. Hence, you can modify <code>Timer</code> to print the results in its destructor and refactor your code to this:</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;functional&gt;

using std::string;
using std::cout;
using std::endl;

template&lt;typename F, typename... Args&gt;
static auto run_func(F&amp;&amp; f, const string&amp; msg, Args&amp;&amp;... args) -&gt; decltype(f(args...)) {
      using T = decltype(f(args...));
      cout &lt;&lt; msg &lt;&lt; endl;
      auto t = Timer(); 
      return std::invoke(f, args...);
}

void foo() {}

int main() {
    run_func(foo,&quot;msg&quot;);
}
</code></pre>
","4","Answer"
"79487237","79487186","<p>You should check the documentation of <a href=""https://en.cppreference.com/w/cpp/numeric/complex/operator_arith"" rel=""nofollow noreferrer""><code>std::complex::operator+=</code></a>.</p>
<p>Note the template version has only one overload:</p>
<pre class=""lang-cpp prettyprint-override""><code>constexpr complex&amp; operator+=( const T&amp; other ); // (1)
</code></pre>
<p>which does not match your case (you are expecting argument type <code>const std::complex&lt;T&gt;&amp;</code>).</p>
<p>Now, if you take a look lower in the doc, you will see another template version of <code>operator+=</code>:</p>
<pre class=""lang-cpp prettyprint-override""><code>template&lt;class X&gt;
constexpr complex&amp; operator+=( const std::complex&lt;X&gt;&amp; other ); // (5)
</code></pre>
<p>So you need this to make it work:</p>
<pre class=""lang-cpp prettyprint-override""><code>std::function&lt;void(std::complex&lt;double&gt;&amp;, const std::complex&lt;double&gt;&amp;)&gt; var = 
                                               &amp;std::complex&lt;double&gt;::operator+=&lt;double&gt;;
</code></pre>
<p>Note the extra <code>&lt;double&gt;</code>!</p>
<p><a href=""https://godbolt.org/z/TPGMe435s"" rel=""nofollow noreferrer"">https://godbolt.org/z/TPGMe435s</a></p>
<p>Note that this operator should also work when adding <code>std::complex</code> with different base types, that is why the template of member function is needed, so <code>std::complex&lt;float&gt;</code> and <code>std::complex&lt;double&gt;</code> could be added.</p>
","-2","Answer"
"79487269","79487186","<p>Use a lambda expression:</p>
<pre><code>std::function&lt;void(std::complex&lt;double&gt;&amp;, const std::complex&lt;double&gt;&amp;)&gt; var = 
          [](std::complex&lt;double&gt;&amp; a,const std::complex&lt;double&gt;&amp; b) {
                 a+=b;
          };
</code></pre>
<p>Note that <code>operator+=</code> does not return <code>void</code>. To keep the semantics of <code>+=</code> change the lambda to <code>return a+=b;</code> and specify its return type to be <code>std::complex&lt;double&gt;&amp;</code>.</p>
","4","Answer"
"79487573","79487186","<p>Using <code>&lt;functional&gt;</code> there are generic function objects for almost all C++ operators, ecxept assignment and its compound counterparts, addressof and dereference and index:</p>
<pre class=""lang-cpp prettyprint-override""><code>#include &lt;functional&gt;
#include &lt;complex&gt;

using complex_f = std::complex&lt;float&gt;;
using fn_t = 
      std::function&lt;void(complex_f&amp;, complex_f const&amp;)&gt;;

fn_t add_fn = std::plus&lt;&gt;{};
fn_t multiply_fn = std::multiplies&lt;&gt;{};
</code></pre>
<p>However for operators with missing std classes, you need use lambdas:</p>
<pre class=""lang-cpp prettyprint-override""><code>auto constexpr add_assign =
[](auto&amp; dst, auto const&amp; src)
-&gt;decltype(auto)
{ return dst += src; };

fn_t increase_fn = add_assign;
</code></pre>
<p>functions and member functions defined in standard library and its classes have unspecified types. They just bear the name of function, and should not be assumed to be strictly functions. As such, trying to store their addresses as old-school function pointers is UB.</p>
<p>In my last snippet, I first defined a named generic lambda, then initialize an <code>std::function</code> with that lambda. This makes it possible to reliably compare instances of <code>std::function</code> using its <code>target</code> member template function:</p>
<pre class=""lang-cpp prettyprint-override""><code>auto const fn_tgt
   = increase_fn.target&lt;decltype(add_assign)&gt;);
assert((nullptr!=fn_tgt);
</code></pre>
<p>If an unnamed lambda were used, such test wouldn't be available. Because every lambda instance has a unique distinct type identifier.</p>
","1","Answer"
"79488338","79486294","<p>If modifying the <code>Time</code> class is not feasible, you can use <code>if constexpr</code> to handle the case where a function does not have a return value. For example:</p>
<pre><code>template&lt;typename F, typename... Args&gt;
static auto run_func(F&amp;&amp; f, const string&amp; msg, Args&amp;&amp;... args) -&gt; decltype(f(args...)) {
  using T = decltype(f(args...));
  cout &lt;&lt; msg &lt;&lt; endl;
  auto timer = Timer(); // something that can record time
  if constexpr (is_same_v&lt;T, void&gt;) {
    std::invoke(f, args...);
    cout &lt;&lt; &quot;\t- time used: &quot; &lt;&lt; timer.time_duration() &lt;&lt; endl;
    return;
  } else {
    auto res = std::invoke(f, args...);
    cout &lt;&lt; &quot;\t- time used: &quot; &lt;&lt; timer.time_duration() &lt;&lt; endl;
    return res;
  }
}
</code></pre>
","3","Answer"
"79488954","79479061","<blockquote>
<p><em>Maven dependency is identically with the NuGet package reference for Microsoft.Azure.WebJobs.Extensions.Storage to 4.0.4.</em></p>
</blockquote>
<p>To fix the issue, you should update the Maven dependencies to the latest versions for Azure Functions, Azure Storage Blob and Azure Storage Queue.</p>
<p>You can check the latest Maven dependencies for <a href=""https://mvnrepository.com/artifact/com.microsoft.azure/azure-storage-blob"" rel=""nofollow noreferrer"">azure-storage-blob</a> and <a href=""https://mvnrepository.com/artifact/com.azure/azure-storage-queue"" rel=""nofollow noreferrer"">azure-storage-queue</a>.</p>
<p><strong>pom.xml :</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;groupId&gt;com.microsoft.azure.functions&lt;/groupId&gt;
    &lt;artifactId&gt;azure-functions-java-library&lt;/artifactId&gt;
    &lt;version&gt;3.1.0&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.microsoft.azure&lt;/groupId&gt;
    &lt;artifactId&gt;azure-storage-blob&lt;/artifactId&gt;
    &lt;version&gt;11.0.1&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;com.azure&lt;/groupId&gt;
    &lt;artifactId&gt;azure-storage-queue&lt;/artifactId&gt;
    &lt;version&gt;12.24.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p><strong>host.json :</strong></p>
<p>Make sure the <code>host.json</code> specifies the correct extension bundle.</p>
<pre class=""lang-json prettyprint-override""><code>{
  &quot;version&quot;: &quot;2.0&quot;,
  &quot;extensionBundle&quot;: {
    &quot;id&quot;: &quot;Microsoft.Azure.Functions.ExtensionBundle&quot;,
    &quot;version&quot;: &quot;[3.*, 4.0.0)&quot;
  }
}
</code></pre>
","0","Answer"
"79496659","79496550","<p>Keeping close to your example, I changed the <code>$(document)</code> selector to be <code>$('.fa-circle')</code>, which is one of the CSS values to the <code>&lt;i&gt;</code> elements.</p>
<p>Then used <code>.parent()</code> to get the <code>class</code> from the <code>&lt;div&gt;</code> parent element that wraps the <code>&lt;i&gt;</code>.</p>
<p>Try the example below:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>    $('.fa-circle').on('click', function() {
      var oldstatus = ($(this).hasClass(""fa-on"") ? 'fa-on' : 'fa-off');
      var id = $(this).attr('id');
      var parentCSS = $(this).parent().attr('class');
      console.log('status '+oldstatus+' id '+id + ' parentCSS: ' + parentCSS);
    });</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js""&gt;&lt;/script&gt;
&lt;link rel=""stylesheet"" href=""//use.fontawesome.com/releases/v6.7.2/css/all.css""&gt;

    &lt;div&gt;
    &lt;div class=""wh-loc""&gt;1&lt;/div&gt;
    &lt;div class=""wh-active""&gt;&lt;i id=""1"" class=""fa-solid fa-circle fa-on""&gt;&lt;/i&gt;&lt;/div&gt;  
    &lt;div class=""wh-name""&gt;&lt;i id=""2"" class=""fa-solid fa-circle fa-on""&gt;&lt;/i&gt;&lt;/div&gt;  
    &lt;div class=""wh-address""&gt;&lt;i id=""3"" class=""fa-solid fa-circle fa-on""&gt;&lt;/i&gt;&lt;/div&gt;  
    &lt;/div&gt;</code></pre>
</div>
</div>
</p>
","1","Answer"
"79504161","79504095","<p>Your issues are explained in the comments, not calling functions etc</p>
<p>Here is a working version, best out of 5 - it leaves the game when one of you wins, but also stops after 5 tries.
I moved the functions outside and call them in the loop</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function getHumanChoice() {
  let humanResult = prompt(""Let's play Rock, Paper, Scissors! Enter your choice:"");
  if (humanResult.toLowerCase() === ""rock"") {
    return ""rock"";
  } else if (humanResult.toLowerCase() === ""paper"") {
    return ""paper"";
  } else if (humanResult.toLowerCase() === ""scissors"") {
    return ""scissors"";
  } else {
    return ""to not follow the rules"";
  }
};

function getComputerChoice() {
  let result = Math.ceil(Math.random() * 3);
  if (result === 1) {
    return ""rock"";
  } else if (result === 2) {
    return ""paper"";
  } else {
    return ""scissors""
  }
}
let humanScore = 0;
let computerScore = 0;


function playRound(humanChoice, computerChoice) {
  if (humanChoice === ""rock"" &amp;&amp; computerChoice === ""paper"") {
    computerScore++;
    console.log(`Paper beats rock! AI wins! AI:${computerScore} Human:${humanScore}`);
  } else if (humanChoice === ""rock"" &amp;&amp; computerChoice === ""scissors"") {
    humanScore++;
    console.log(`Rock beats scissors! You win! AI:${computerScore} Human:${humanScore}`);
  } else if (humanChoice == ""rock"" &amp;&amp; computerChoice === ""rock"") {
    console.log(""Y'all both picked rock! Let's try again!"");
  } else if (humanChoice === ""paper"" &amp;&amp; computerChoice === ""scissors"") {
    computerScore++;
    console.log(`Scissors beats paper! AI wins! AI:${computerScore} Human:${humanScore}`);
  } else if (humanChoice === ""paper"" &amp;&amp; computerChoice === ""rock"") {
    humanScore++;
    console.log(`Paper beats rock! You win! AI:${computerScore} Human:${humanScore}`);
  } else if (humanChoice === ""paper"" &amp;&amp; computerChoice === ""paper"") {
    console.log(""Y'all both picked paper! Let's try again!"");
  } else if (humanChoice === ""scissors"" &amp;&amp; computerChoice === ""scissors"") {
    console.log(""Y'all both picked scissors! Let's try again!"");
  } else if (humanChoice === ""scissors"" &amp;&amp; computerChoice === ""rock"") {
    computerScore++;
    console.log(`Rock beats scissors! AI wins! AI:${computerScore} Human:${humanScore}`);
  } else if (humanChoice === ""scissors"" &amp;&amp; computerChoice === ""paper"") {
    humanScore++;
    console.log(`Scissors beats paper! You win! AI:${computerScore} Human:${humanScore}`);
  } else {
    console.log(""Try again! That's not a choice."");
  }
}


function playGame() {

  for (let i = 0; i &lt; 5; i++) {
    const humanChoice = getHumanChoice();
    const computerChoice = getComputerChoice();
    playRound(humanChoice, computerChoice);
    const diff = computerScore-humanScore;
    if (Math.abs(diff) &gt;= 3) {
      console.log(`${diff&gt;0 ? 'You win!': 'Computer wins'}  AI:${computerScore} Human:${humanScore}`)
      return;
    }  
  }
};

playGame();</code></pre>
</div>
</div>
</p>
<p>Or DRYer (and added Lizard and Spock, because I am worth it)
It will play until best of 5 regardless of how long that takes by ignoring rounds that result in a tie.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const title = [""Rock"", ""Paper"", ""Scissors""]; // or [""Rock"", ""Paper"", ""Scissors"", ""Lizard"", ""Spock""]
const CHOICES = title.map(item =&gt; item.toLowerCase());
const maxTries = 5; // Sanity limit, but not for ties
const SCORES = { human: 0, computer: 0 };

const getWinningChoices = (choiceIndex) =&gt; {
  const n = CHOICES.length;
  if (n === 3) { // RPS
    return [CHOICES[(choiceIndex + 2) % 3]];
  } else if (n === 5) { // RPSLS
    const WINNING_OFFSETS = {
      0: [2, 3], 1: [0, 4], 2: [1, 3], 3: [4, 1], 4: [2, 0]
    };
    return WINNING_OFFSETS[choiceIndex].map(index =&gt; CHOICES[index]);
  }
  throw new Error(""Unsupported number of choices"");
};

const getHumanChoice = () =&gt; {
  const input = prompt(`Let's play ${title.join(', ')}! Enter your choice:`).toLowerCase();
  return CHOICES.includes(input) ? input : 'invalid';
};

const getComputerChoice = () =&gt; CHOICES[Math.floor(Math.random() * CHOICES.length)];

const getResultMessage = (human, computer) =&gt; {
  if (human === computer) return `Both picked ${title[CHOICES.indexOf(human)]}! Try again!`;
  if (human === 'invalid') return ""Try again! Invalid choice."";
  
  const humanIndex = CHOICES.indexOf(human);
  const computerIndex = CHOICES.indexOf(computer);
  const humanWins = getWinningChoices(humanIndex).includes(computer);
  
  humanWins ? SCORES.human++ : SCORES.computer++;
  const winner = humanWins ? 'You win' : 'AI wins';
  const humanTitle = title[humanIndex];
  const computerTitle = title[computerIndex];
  const beatsMessage = humanWins 
    ? `${humanTitle} beats ${computerTitle}` 
    : `${computerTitle} beats ${humanTitle}`;
  const scores = `AI:${SCORES.computer} Human:${SCORES.human}`;
  return `${beatsMessage}! ${winner}! ${scores}`;
};

const playRound = (human, computer) =&gt; console.log(getResultMessage(human, computer));

const playGame = () =&gt; {
  const winsNeeded = Math.ceil(maxTries / 2); // e.g., 3 wins for best of 5
  let decisiveRounds = 0;

  while (SCORES.human &lt; winsNeeded &amp;&amp; SCORES.computer &lt; winsNeeded) {
    const human = getHumanChoice();
    const computer = getComputerChoice();
    const result = getResultMessage(human, computer);
    console.log(result);
    if (human !== computer &amp;&amp; human !== 'invalid') { // Only increment if not a tie or invalid
      decisiveRounds++;
    }
    if (decisiveRounds &gt;= maxTries) break; // Safety net to prevent infinite loops
  }

  const finalMessage = SCORES.human &gt; SCORES.computer 
    ? ""You win the game!"" 
    : ""Computer wins the game!"";
  console.log(`${finalMessage} Final score - AI:${SCORES.computer} Human:${SCORES.human}`);
};

playGame();</code></pre>
</div>
</div>
</p>
","1","Answer"
"79504339","79504095","<p>Firstly, the main problem is that you never call <code>playRound()</code>, so all the <code>playGame</code> function does is prompt for input 5 times and then stop. This is a fairly obvious omission. Once you fix that, it seems to work as intended.</p>
<p>Secondly your code is badly laid-out, making it hard to see the wood for the trees. Aside from specialised cases there's rarely a good reason for functions to be declared inside other functions, and certainly not to be interspersed amongst your main logic - which then makes that logic a lot harder to follow when reading and debugging the code. So the first step I took was to move all the function declarations to be independent, and out of the way of the logic in the playGame function.</p>
<p>Thirdly, although this isn't a functional problem in that your current code would work with the modification mentioned in point 1, there's a huge amount of unnecessary repetition of nearly-identical code, which could actually be made shorter, more readable and more maintainable by better use of variables and objects. So I've made a version of the code using that approach, to show how it could be done with far less code. The first snippet in <a href=""https://stackoverflow.com/a/79504161/5947043"">mplungjan's answer</a> is far closer to your original, with only the most essential fixes.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function getComputerChoice() {
  let result = Math.floor(Math.random() * 3);
  return choices[result];
}

function getHumanChoice() {
  let humanResult = prompt(
    ""Let's play Rock, Paper, Scissors! Enter your choice:"",
  )
  if (choices.includes(humanResult.toLowerCase())) {
    return humanResult.toLowerCase();
  } else {
    return false;
  }
}

function playRound(chosenValues) {
  var hChoice = choices.indexOf(chosenValues[""human""]);
  var cChoice = choices.indexOf(chosenValues[""computer""]);
  var winner = """";
  var loser = """";

  if (hChoice == cChoice) {
    console.log(`Y'all both picked ${chosenValues[""human""]}! Let's try again!`);
    return;
  }
  
  if (hChoice == 0 &amp;&amp; cChoice == 2) {
    winner = ""human"";
    loser = ""computer"";
  } else if (cChoice == 0 &amp;&amp; hChoice == 2) {
    winner = ""computer"";
    loser = ""human"";
  } else if (hChoice &gt; cChoice) {
    winner = ""human"";
    loser = ""computer"";
  } else if (cChoice &gt; hChoice) {
    winner = ""computer"";
    loser = ""human"";
  }

  scores[winner]++;
  console.log(`${chosenValues[winner]} beats ${chosenValues[loser]}! Computer: ${scores[""computer""]} Human: ${scores[""human""]}`);
}

function playGame() {
  for (let i = 0; i &lt; 5; i++) {
    const computerChoice = getComputerChoice();
    const humanChoice = getHumanChoice();

    if (humanChoice !== false) {
      var chosenValues = {
        ""human"": humanChoice,
        ""computer"": computerChoice
      };
      playRound(chosenValues);
    } else {
      console.log(""Invalid or cancelled human choice, no round played"");
    }
  }
}

var scores = {
  ""human"": 0,
  ""computer"": 0
}
var choices = [""rock"", ""paper"", ""scissors""];
playGame();</code></pre>
</div>
</div>
</p>
","0","Answer"
"79505244","79505132","<p>Lets give a try to the following formula-</p>
<pre><code>=QUERY(TOCOL(SPLIT(TEXTJOIN(&quot;#&quot;,1,TOCOL(E2:E,1)),&quot;#&quot;),1),&quot;select Col1, count(Col1) where Col1 &lt;&gt;' ' group by Col1 label count(Col1) ''&quot;)
</code></pre>
<p>Output from above formula-</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>abudhabidesign</th>
<th>1</th>
</tr>
</thead>
<tbody>
<tr>
<td>archdaily</td>
<td>1</td>
</tr>
<tr>
<td>bathtub</td>
<td>2</td>
</tr>
<tr>
<td>brabbu</td>
<td>1</td>
</tr>
<tr>
<td>covetgroup</td>
<td>2</td>
</tr>
<tr>
<td>dailyinspo</td>
<td>2</td>
</tr>
<tr>
<td>decorinspo</td>
<td>1</td>
</tr>
<tr>
<td>dreambath</td>
<td>2</td>
</tr>
<tr>
<td>dreambathroom</td>
<td>1</td>
</tr>
<tr>
<td>elledecor</td>
<td>1</td>
</tr>
<tr>
<td>homeinspirationideas</td>
<td>2</td>
</tr>
<tr>
<td>homesociety</td>
<td>2</td>
</tr>
<tr>
<td>homesocietycollection</td>
<td>2</td>
</tr>
<tr>
<td>homesocietystudio</td>
<td>2</td>
</tr>
<tr>
<td>inspiration</td>
<td>2</td>
</tr>
<tr>
<td>insplosion</td>
<td>2</td>
</tr>
<tr>
<td>london</td>
<td>1</td>
</tr>
<tr>
<td>londonliving</td>
<td>1</td>
</tr>
<tr>
<td>luxurybathroom</td>
<td>2</td>
</tr>
<tr>
<td>luxuryhomes</td>
<td>2</td>
</tr>
<tr>
<td>luxuryhouses</td>
<td>2</td>
</tr>
<tr>
<td>luxurymirror</td>
<td>1</td>
</tr>
<tr>
<td>luxxu</td>
<td>1</td>
</tr>
<tr>
<td>maisonvalentina</td>
<td>2</td>
</tr>
<tr>
<td>marble</td>
<td>2</td>
</tr>
<tr>
<td>marblebathroom</td>
<td>1</td>
</tr>
<tr>
<td>moderndesign</td>
<td>2</td>
</tr>
<tr>
<td>residential</td>
<td>2</td>
</tr>
<tr>
<td>resortdesign</td>
<td>2</td>
</tr>
<tr>
<td>sidetable</td>
<td>1</td>
</tr>
<tr>
<td>signaturedesign</td>
<td>2</td>
</tr>
<tr>
<td>timelesselegance</td>
<td>2</td>
</tr>
<tr>
<td>timeout</td>
<td>2</td>
</tr>
<tr>
<td>unitedarabemirates</td>
<td>1</td>
</tr>
<tr>
<td>vanitycabinet</td>
<td>1</td>
</tr>
<tr>
<td>wooden</td>
<td>1</td>
</tr>
</tbody>
</table></div>
","2","Answer"
"79505439","79505132","<p><strong>You can try this formula:</strong></p>
<pre><code>=SORT(ARRAYFORMULA({UNIQUE(TRIM(FLATTEN(SPLIT(TEXTJOIN(&quot; &quot;, 1, E2:E254), &quot; &quot;)))),
  COUNTIF(FLATTEN(SPLIT(TEXTJOIN(&quot; &quot;, 1, E2:E254), &quot; &quot;)), UNIQUE(TRIM(FLATTEN(SPLIT(TEXTJOIN(&quot; &quot;, 1, E2:E254), &quot; &quot;)))))}
), 2, FALSE)
</code></pre>
<p><strong>Sample Output:</strong></p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>#</th>
<th>3</th>
</tr>
</thead>
<tbody>
<tr>
<td>#maisonvalentina</td>
<td>2</td>
</tr>
<tr>
<td>#luxuryhouses</td>
<td>2</td>
</tr>
<tr>
<td>#luxurybathroom</td>
<td>2</td>
</tr>
<tr>
<td>#bathtub</td>
<td>2</td>
</tr>
<tr>
<td>#inspiration</td>
<td>2</td>
</tr>
<tr>
<td>#dailyinspo</td>
<td>2</td>
</tr>
<tr>
<td>#timelesselegance</td>
<td>2</td>
</tr>
<tr>
<td>#dreambath</td>
<td>2</td>
</tr>
<tr>
<td>#signaturedesign</td>
<td>2</td>
</tr>
<tr>
<td>#moderndesign</td>
<td>2</td>
</tr>
<tr>
<td>#timeout</td>
<td>2</td>
</tr>
<tr>
<td>#residential</td>
<td>2</td>
</tr>
<tr>
<td>#resortdesign</td>
<td>2</td>
</tr>
<tr>
<td>#marble</td>
<td>2</td>
</tr>
<tr>
<td>#homesociety</td>
<td>2</td>
</tr>
<tr>
<td>#homesocietystudio</td>
<td>2</td>
</tr>
<tr>
<td>#homesocietycollection</td>
<td>2</td>
</tr>
<tr>
<td>#homeinspirationideas</td>
<td>2</td>
</tr>
<tr>
<td>#covetgroup</td>
<td>2</td>
</tr>
<tr>
<td>#insplosion</td>
<td>2</td>
</tr>
<tr>
<td>#luxuryhomes</td>
<td>2</td>
</tr>
<tr>
<td>#dreambathroom</td>
<td>1</td>
</tr>
<tr>
<td>#vanitycabinet</td>
<td>1</td>
</tr>
<tr>
<td>#luxurymirror</td>
<td>1</td>
</tr>
<tr>
<td>#decorinspo</td>
<td>1</td>
</tr>
<tr>
<td>#london</td>
<td>1</td>
</tr>
<tr>
<td>#londonliving</td>
<td>1</td>
</tr>
<tr>
<td>#archdaily</td>
<td>1</td>
</tr>
<tr>
<td>#wooden</td>
<td>1</td>
</tr>
<tr>
<td>#luxxu</td>
<td>1</td>
</tr>
<tr>
<td>#sidetable</td>
<td>1</td>
</tr>
<tr>
<td>#unitedarabemirates</td>
<td>1</td>
</tr>
<tr>
<td>#abudhabidesign</td>
<td>1</td>
</tr>
<tr>
<td>#elledecor</td>
<td>1</td>
</tr>
<tr>
<td>#marblebathroom</td>
<td>1</td>
</tr>
<tr>
<td>#brabbu</td>
<td>1</td>
</tr>
</tbody>
</table></div>
<p><strong>References:</strong></p>
<p><a href=""https://support.google.com/docs/answer/3093275?hl=en"" rel=""nofollow noreferrer"">ArrayFormula</a> , <a href=""https://support.google.com/docs/answer/3093150?hl=en"" rel=""nofollow noreferrer"">Sort</a> , <a href=""https://support.google.com/docs/answer/10307761?hl=en"" rel=""nofollow noreferrer"">Flatten</a> , <a href=""https://support.google.com/docs/answer/10522653?hl=en"" rel=""nofollow noreferrer"">Unique</a> , <a href=""https://support.google.com/docs/answer/3093480?hl=en"" rel=""nofollow noreferrer"">CountIf</a> , <a href=""https://support.google.com/docs/answer/3094136?hl=en"" rel=""nofollow noreferrer"">Split</a> , <a href=""https://support.google.com/docs/answer/7013992?hl=en"" rel=""nofollow noreferrer"">TextJoin</a></p>
","1","Answer"
"79512829","79512758","<p>The problem is that you're trying to use <code>return</code> the same way that you use <code>print()</code>.</p>
<p>When you call <code>print()</code>, you can pass any number of arguments separated by commas, and they will be printed as one long string.</p>
<p>But that behavior is unique to <code>print()</code>.  Other parts of Python don't work that way.</p>
<p>When you do something like this:</p>
<pre><code>money = 5
return 'I have ', money, ' dollars.'
</code></pre>
<p>It does NOT return the single string <code>'I have 5 dollars'.</code>  Instead, it returns this <code>tuple</code>:</p>
<pre><code>('I have', 5, 'dollars.')
</code></pre>
<p>And then, when you print that result, that's exactly what you get.</p>
<p>If you want to return a single string, you have to do a bit of work to stitch the parts together.  The easiest way to do that is with an <em>f-string</em>:</p>
<pre><code>return f'I have {money} dollars.'
</code></pre>
<p>The letter <code>f</code> at the beginning tells python that this is an f-string, which means it will replace <code>{money}</code> with the value of that variable name.</p>
","1","Answer"
"79517825","79516990","<p>In JAX's design, non-differentiated arguments are a property of the gradient transformation being used, not a property of the function being differentiated. <code>custom_jvp</code> is fundamentally about customizing the gradient behavior, and using it to mark non-differentiable arguments without actually customizing the gradient is not an intended use.</p>
<p>The way to ensure that arguments do not participate in an autodiff transformation is to specify the arguments you want to differentiate against when you call the <code>jax.grad</code>, <code>jax.jacobian</code>, or other autodiff transformation; e.g.</p>
<pre><code>jax.grad(func, argnums=(0,))  # differentiate with respect to argument 0.
</code></pre>
<p>Regardless of what <code>func</code> is, this will attempt to differentiate with respect to the 0th argument, and if that argument is either explicitly or implicitly not differentiable due to how <code>func</code> is defined, an error will be raised.</p>
","1","Answer"
"79518402","79517971","<p>You could add sth in the <code>body</code>, using <code>str2lang()</code> since you have strings, and move the return one forward.</p>
<pre><code>&gt; constraint  ## old FUN
function(x) {
  f &lt;- NULL
  f &lt;- rbind(f, x[2] - 2)
  return(list(ceq=f, c=NULL))
}
&gt; add_constraint &lt;- \(x) {
+   bd &lt;- body(constraint)
+   rt &lt;- bd[[length(bd)]]
+   bd[[length(bd)]] &lt;- str2lang(x)
+   bd[[length(bd) + 1]] &lt;- rt
+   body(constraint) &lt;- bd
+   constraint
+ }
&gt; constraint &lt;- add_constraint('f &lt;- rbind(f, x[1] - 1)')
&gt; constraint  ## new FUN
function (x) 
{
    f &lt;- NULL
    f &lt;- rbind(f, x[2] - 2)
    f &lt;- rbind(f, x[1] - 1)
    return(list(ceq = f, c = NULL))
}
</code></pre>
","1","Answer"
"79521876","79521678","<blockquote>
<p>If it were a value like <code>Just 7</code> or <code>[7]</code>, the seven would get bound</p>
</blockquote>
<p>Okay, sure. But what if it were a value like <code>[7,8,9]</code>? Then there's no good, single answer to what value gets bound. In a somewhat related objection, you say &quot;if it were a call of <code>getLine</code>, then it would be a string&quot; -- but which string? There's no good, single answer to which string gets bound when I write <code>b &lt;- getLine</code>, because the value that <code>b</code> takes on will depend on something the user does. So you will have to abandon this idea for understanding monads, and admit that they can have more structure and excitement than simply binding predictable values.</p>
<p>We are in the function monad case, and are defining a function named <code>addStuff</code>. The more exciting, structured answer to &quot;what gets bound?&quot; is that the value that gets bound depends on what value gets provided as an argument to <code>addStuff</code>. For each possible input that could be provided, there is a corresponding value that will appear in <code>b</code>. If <code>addStuff</code> is applied to <code>73</code>, then <code>b</code> will be bound to <code>73+10</code>=<code>83</code>; or if <code>addStuff</code> is applied to <code>-5</code>, then <code>b</code> will be bound to <code>-5+10</code>=<code>5</code>.</p>
<blockquote>
<p>If monadic values are values with context, then what is considered the context in the case of functions?</p>
</blockquote>
<p>In the case of functions, the argument to the function is the context.</p>
","9","Answer"
"79524410","79524371","<p>You are drawing the circle on a canvas. Then you want to move the canvas around using cumbersome code. Anyway, the <code>position</code> of the canvas should be one that allows for being able to move around, like <code>absolute</code>.</p>
<p>Pro tip: use CSS <a href=""https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate"" rel=""nofollow noreferrer"">translate</a> transformation, if you must move Elements around.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function move(element, direction, distance = 20, duration = 1000) {
  var topOrLeft = (direction == ""left"" || direction == ""right"") ? ""left"" : ""top"";
  var isNegated = (direction == ""up"" || direction == ""left"");
  if (isNegated) {
    distance *= -1;
  }
  var elStyle = window.getComputedStyle(element);
  var value = elStyle.getPropertyValue(topOrLeft).replace(""px"", """");
  var destination = Number(value) + distance;
  var frameDistance = distance / (duration / 10);

  function moveAFrame() {

    elStyle = window.getComputedStyle(element);
    value = elStyle.getPropertyValue(topOrLeft).replace(""px"", """");
    
    var newLocation = Number(value) + frameDistance;
    var beyondDestination = ((!isNegated &amp;&amp; newLocation &gt;= destination) || (isNegated &amp;&amp; newLocation &lt;= destination));

    if (beyondDestination) {
      element.style[topOrLeft] = destination + ""px"";
      clearInterval(movingFrames);
    } else {
      element.style[topOrLeft] = newLocation + ""px"";
    }
  }
  var movingFrames = setInterval(moveAFrame, 10);
}

var canvas = document.getElementById('circle');

var circle = canvas

function draw() {
  if (canvas.getContext) {
    var ctx = canvas.getContext('2d');
    var X = canvas.width / 2;
    var Y = canvas.height / 2;
    var R = 50;
    ctx.beginPath();
    ctx.arc(X, Y, R, 0, 2 * Math.PI, false);
    ctx.lineWidth = 3;
    ctx.strokeStyle = '#FF00FF';
    ctx.stroke();

  }
}
draw()
move(circle, ""right"", 20, 200) //move function</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>canvas {
  border: 1px solid red;
  position: absolute;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;canvas id=""circle"" width=""400"" height=""200""&gt;&lt;/canvas&gt;</code></pre>
</div>
</div>
</p>
","0","Answer"
"79524811","79521678","<blockquote>
<p>What is bound to the parameter <code>b</code></p>
</blockquote>
<p>The result of the function (at the right of the arrow, so here <code>(+10)</code>) and the input to the function <code>addStuff</code>, so if you call <code>addStuff 5</code>, <code>b</code> will be <code>15</code>.</p>
<p>Indeed, if we desugar the <code>do</code> block, what you wrote is:</p>
<pre><code>addStuff :: Int -&gt; Int
addStuff = (*2) &gt;&gt;= \a -&gt; ((+10) &gt;&gt;= \b -&gt; return (a + b))
</code></pre>
<p>For the function instance of a <code>Monad</code>, we have:</p>
<blockquote>
<pre><code>-- | @since base-2.01
instance Applicative ((-&gt;) r) where
pure = const
f g x = f x (g x)
liftA2 q f g x = q (f x) (g x)

-- | @since base-2.01
instance Monad ((-&gt;) r) where
f &gt;&gt;= k = \r -&gt; k (f r) r
</code></pre>
</blockquote>
<p>so that means for <code>addStuff</code>, it looks like:</p>
<pre><code>addStuff = \r -&gt; (\a -&gt; (+10) &gt;&gt;= \b -&gt; return (a+b)) ((*2) r)  r
addStuff = \r -&gt; (\a -&gt; (\s -&gt; (\b -&gt; const (a+b)) ((+10) s) s)) ((*2) r)  r
</code></pre>
<p>We can now do some function applications reducing the &quot;noise&quot;:</p>
<pre><code>addStuff = \r -&gt; (\a -&gt; (\s -&gt; (\b -&gt; const (a+b)) ((+10) s) s)) ((*2) r)  r
addStuff = \r -&gt; (\b -&gt; const (((*2) r) +b)) ((+10) r) r
addStuff = \r -&gt; (const (((*2) r) +((+10) r))) r
addStuff = \r -&gt; (((*2) r) +((+10) r))
</code></pre>
<p>it thus each time passes the argument <code>r</code> further, and the <code>return</code> on the last line ignores the parameter.</p>
<p>We could have used:</p>
<pre><code>addStuff :: Int -&gt; Int
addStuff = do
    a &lt;- (*2)
    b &lt;- (+10)
    ((a+b)+)
</code></pre>
<p>This would have added the input to the <code>a+b</code> part, so <code>addStuff 5</code> is then <code>30</code> since we first multiply <code>5</code> with <code>2</code> for <code>a</code>, then <code>5+10</code> for <code>b</code>, and finally we add the input a third time.</p>
","3","Answer"
"79525736","79525693","<p>Your head becomes the next element of the linked list through head-&gt;next, but in main your start still points to the original head, but this head has been deleted.</p>
","2","Answer"
"79535271","79534957","<p>Like @Joffan pointed out in the comment, you should convert your recursive program flow to an iterative one with an action loop where each action sets the next action to perform.</p>
<p>Without rewriting your code, however, you can perform the conversion by applying to each action function a decorator that defers a call to the function to an action loop that will perform it in the next iteration.</p>
<p>The loop can be implicitly kicked off by the first call to an action function, which can be identified by setting the initial next action as <code>None</code>. The loop ends when an action does not set the next action, when the next action after a call remains the same:</p>
<pre><code>class action:
    next = None

    def __init__(self, func):
        self.func = func

    def __call__(self, *args, **kwargs):
        loop = action.next is None
        action.next = lambda: self.func(*args, **kwargs)
        while loop:
            current_action = action.next
            current_action()
            if action.next is current_action:
                break
</code></pre>
<p>Below is your exact same code with just the <code>@action</code> decorator applied (and with washing dishes in the kitchen earning you 40 coins instead so you can actually leave once in debt, for a bug pointed out by @trincot):</p>
<pre><code>@action
def go_to_lobby(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The start of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    print(&quot;You are in the lobby of the dungeon. What do you do?&quot;)
    print(&quot;1. Examine the lobby.&quot;)
    print(&quot;2. Go to the throne hall.&quot;)
    print(&quot;3. Leave.&quot;)
    option = int(input())
    if option==1:
        examine_lobby(gold_coins)
    elif option==2:
        go_to_throne_hall(gold_coins)
    else:
        leave(gold_coins)

@action
def examine_lobby(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The user examines the lobby &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    rob_amount = 10
    print(&quot;A band of goblins rob &quot; + str(rob_amount) + &quot; gold from you.&quot;)
    gold_coins-=rob_amount
    go_to_lobby(gold_coins)

@action
def leave(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The end of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    if gold_coins&lt;0:
        go_to_kitchen(gold_coins)
    else:    
        print(&quot;You leave the dungeon.&quot;)

@action
def go_to_throne_hall(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The middle of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    print(&quot;You are in the throne hall. What do you do?&quot;)
    print(&quot;1. Examine the throne hall.&quot;)
    print(&quot;2. Go back to the lobby.&quot;)
    option = int(input())
    if option==1:
        examine_throne_hall(gold_coins)
    else:
        go_to_lobby(gold_coins)

@action
def examine_throne_hall(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; The user examines the throne hall &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    rob_amount = 40
    print(&quot;You disturb the dungeon keeper who makes you pay &quot; + str(rob_amount) + &quot; gold.&quot;)
    gold_coins-=rob_amount
    go_to_throne_hall(gold_coins)

def print_gold_amount(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; Prints to the user their current amount of gold &quot;&quot;&quot;
    print(&quot;You have &quot; + str(gold_coins) + &quot; gold.&quot;)

@action
def go_to_kitchen(gold_coins: int) -&gt; None:
    print_gold_amount(gold_coins)
    print(&quot;You are in the kitchen. What do you do?&quot;)
    print(&quot;1. Wash the dishes to earn money.&quot;)
    print(&quot;2. Enter the dungeon and go back to the lobby.&quot;)
    option = int(input())
    if option==1:
        print(&quot;You washed the dishes and earnt a coin!&quot;)
        go_to_kitchen(gold_coins+40)
    else:
        if gold_coins&lt;0:
            go_to_lobby(gold_coins-10)
        else:
            go_to_lobby(gold_coins)

go_to_lobby(50)
</code></pre>
<p>Demo: <a href=""https://www.online-python.com/u2p5H8m9Ar"" rel=""nofollow noreferrer"">https://www.online-python.com/u2p5H8m9Ar</a></p>
","1","Answer"
"79535557","79534957","<p>A simple solution, not necessarily the most extendable, is to return functions instead of calling them directly. The advantage is that the structure remains roughly the same and since Python has strong support for closures (functions defined inside functions that can capture their parent's variables), it is reasonably easy to extend and parameterize.</p>
<pre class=""lang-py prettyprint-override""><code>from collections.abc import Callable

type NextState = tuple[Optional(Callable[int]), int]


def go_to_lobby(gold_coins: int) -&gt; NextState:
    &quot;&quot;&quot; The start of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    print(&quot;You are in the lobby of the dungeon. What do you do?&quot;)
    print(&quot;1. Examine the lobby.&quot;)
    print(&quot;2. Go to the throne hall.&quot;)
    print(&quot;3. Leave.&quot;)
    option = int(input())
    if option==1:
        return examine_lobby, gold_coins
    elif option==2:
        return go_to_throne_hall, gold_coins
    else:
        return leave, gold_coins

def examine_lobby(gold_coins: int) -&gt; NextState:
    &quot;&quot;&quot; The user examines the lobby &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    rob_amount = 10
    print(&quot;A band of goblins rob &quot; + str(rob_amount) + &quot; gold from you.&quot;)
    gold_coins-=rob_amount
    return go_to_lobby, gold_coins

def leave(gold_coins: int) -&gt; NextState:
    &quot;&quot;&quot; The end of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    if gold_coins&lt;0:
        return go_to_kitchen, gold_coins
    else:
        print(&quot;You leave the dungeon.&quot;)
        return None, gold_coins


def go_to_throne_hall(gold_coins: int) -&gt; NextState:
    &quot;&quot;&quot; The middle of the adventure &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    print(&quot;You are in the throne hall. What do you do?&quot;)
    print(&quot;1. Examine the throne hall.&quot;)
    print(&quot;2. Go back to the lobby.&quot;)
    option = int(input())
    if option==1:
        return examine_throne_hall, gold_coins
    else:
        return go_to_lobby, gold_coins

def examine_throne_hall(gold_coins: int) -&gt; NextState:
    &quot;&quot;&quot; The user examines the throne hall &quot;&quot;&quot;
    print_gold_amount(gold_coins)
    rob_amount = 40
    print(&quot;You disturb the dungeon keeper who makes you pay &quot; + str(rob_amount) + &quot; gold.&quot;)
    gold_coins-=rob_amount
    return go_to_throne_hall, gold_coins

def print_gold_amount(gold_coins: int) -&gt; None:
    &quot;&quot;&quot; Prints to the user their current amount of gold &quot;&quot;&quot;
    print(&quot;You have &quot; + str(gold_coins) + &quot; gold.&quot;)

def go_to_kitchen(gold_coins: int) -&gt; NextState:
    print_gold_amount(gold_coins)
    print(&quot;You are in the kitchen. What do you do?&quot;)
    print(&quot;1. Wash the dishes to earn money.&quot;)
    print(&quot;2. Enter the dungeon and go back to the lobby.&quot;)
    option = int(input())
    if option==1:
        print(&quot;You washed the dishes and earnt a coin!&quot;)
        return go_to_kitchen, gold_coins
    else:
        if gold_coins&lt;0:
            return go_to_lobby, gold_coins-10
        else:
            return go_to_lobby, gold_coins


gold = 50
next_function = go_to_lobby
while next_function:
    next_function, gold = function(gold)
</code></pre>
<p>A more complex version may maintain its own stack.</p>
<pre class=""lang-py prettyprint-override""><code>state = 50 # gold
stack = [go_to_lobby]
while stack:
    next_function = stack.pop()
    list_of_functions, state, end = next_function(state)
    if end:
        break
    stack += list_of_functions # zero or more
</code></pre>
","1","Answer"
"79548822","79548710","<p>you could define the logic in a <a href=""https://learn.microsoft.com/en-us/kusto/query/let-statement?view=microsoft-fabric"" rel=""nofollow noreferrer""><code>let</code> statement</a> or in a <a href=""https://learn.microsoft.com/en-us/kusto/management/create-alter-function?view=microsoft-fabric"" rel=""nofollow noreferrer"">stored function</a>, then use the <a href=""https://learn.microsoft.com/en-us/kusto/query/invoke-operator?view=microsoft-fabric"" rel=""nofollow noreferrer""><code>invoke</code> operator</a> to invoke it on your input.</p>
<p>for example:</p>
<pre><code>let F = (T:(Subject:string, AuthenticationDetails:dynamic, Timestamp:datetime, SenderFromAddress:string, RecipientEmailAddress:string, LatestDeliveryLocation:string, DeliveryLocation:string, ThreatTypes:dynamic)) {
    T
    | extend SPF = parse_json(AuthenticationDetails).SPF
    | extend DKIM = parse_json(AuthenticationDetails).DKIM
    | extend DMARC = parse_json(AuthenticationDetails).DMARC
    | project-reorder Timestamp, Subject, SenderFromAddress, RecipientEmailAddress, LatestDeliveryLocation, DeliveryLocation, ThreatTypes, SPF, DKIM, DMARC
}
;
EmailEvents
| where Subject == &quot;test email for Stackoverflow question&quot;
| invoke F()
</code></pre>
","0","Answer"
"79551299","79551262","<p>The general format of a function is a header followed by a single statement that makes up the body of the function.  Using braces around several statements makes them appear to the parser as a single statement.</p>
<p>Your colleague's function needs the braces in the <code>if</code> statements, but not around the body.  For example, this would be fine:</p>
<pre><code>sign_function &lt;- function(x)
  if (x &gt; 0) {
    print(&quot;Positive&quot;)
    &quot;Positive&quot;
  } else if (x &lt; 0) {
    print(&quot;Negative&quot;)
    &quot;Negative&quot;
  } else {
    print(&quot;Zero&quot;)
    &quot;Zero&quot;
  }
</code></pre>
<p>The reason for this is that the chained <code>if</code> statements act like one big statement, but the code they run. e.g.</p>
<pre><code>    print(&quot;Positive&quot;)
    &quot;Positive&quot;
</code></pre>
<p>is definitely two statements, so it needs to be surrounded by braces to act like just one.</p>
<p>So, to answer your specific questions:  The R Language Definition (a manual distributed with R) describes the syntax of a function definition in section 4.1.1.  As for unexpected behaviour, you might get it if you are typing in the console:</p>
<pre><code>   f &lt;- function(x) 
     if (x &lt; 0) &quot;negative&quot;
     else &quot;postive&quot;
</code></pre>
<p>will give a syntax error, because <code>if (x &lt; 0) &quot;negative&quot;</code> is a complete statement, so the parser will see that as the end of the function, and the <code>else &quot;positive&quot;</code> will be left dangling.</p>
","20","Answer"
"79551378","79551262","<p><a href=""https://cran.r-project.org/doc/manuals/r-release/R-lang.html#Function-objects"" rel=""noreferrer"">Section 2.1.5 ('Function objects') of the R Language Definition</a> says, among other things ...</p>
<blockquote>
<p>Functions (or more precisely, function closures) have three basic components: a formal argument list, a body and an environment. <br>
...<br>
The body is a parsed R statement. It is usually a collection of statements in braces but <strong>it can be a single statement, a symbol or even a constant</strong>.</p>
</blockquote>
<p>(emphasis added).</p>
<p>In section <a href=""https://cran.r-project.org/doc/manuals/r-release/R-lang.html#Function-definitions"" rel=""noreferrer"">10.4.6 ('Function definitions')</a> it says</p>
<blockquote>
<p>The function body is an expression, often a compound expression.</p>
</blockquote>
<p>In your example the <code>if ( ) ... else if ... else ...</code> is considered an expression (<em>not</em> a &quot;compound expression&quot;, i.e. a {}-delimited block of expressions - see section 10.4.4) or a single statement.</p>
<p>The R Language Definition could be a pretty tough place to start if you're just learning the language, but it never hurts to go to the canonical reference.</p>
","6","Answer"
"79551414","79551262","<p>In <code>help(&quot;function&quot;)</code> it says that the syntax of a function defintion is</p>
<pre><code>function( arglist ) expr
</code></pre>
<p>{ ... } has nothing intrinsically to do with functions but can be used to form a body containing more than one expression.  In particular <code>help(&quot;{&quot;)</code> says <code>{</code> evaluates, i.e. runs, each enclosed statement returning the value of the last one.</p>
<p>Here is the bare use of {...} not connected with a function definition, if, etc.  y is set to 1 and then the last expression adds it to itself and since {...} returns the value of the last expression x gets the value 2.</p>
<pre><code>x &lt;- {
  y &lt;- 1
  y + y
}
x
## [1] 2
</code></pre>
<p>If there is just a single expression within {...} then it is also the last so it is just evaluated and returned but whether we surround it with {...} or not makes no difference.</p>
<pre><code>x &lt;- 3
identical(x, { x })
## [1] TRUE
</code></pre>
<p>Thus in the following the body is not x + 1 but is { x + 1 }.  That is { and } are part of the body.  The { and } are not part of the function definition but are part of the body allowing the body to be a single expression even if there were multiple statements.</p>
<pre><code>f &lt;- function(x) { x + 1 }
body(f)
## {
##     x + 1
## }
</code></pre>
<p>Some people use the convention of always using { ... } in function definitions because they believe it to be clearer but that is just convention and is a completely different question as to whether it must be used.</p>
","7","Answer"
"79551887","79538078","<p>You can check this github repository for mobile-mcp<br />
<a href=""https://github.com/mobile-next/mobile-mcp"" rel=""nofollow noreferrer"">https://github.com/mobile-next/mobile-mcp</a></p>
","1","Answer"
"79552396","79552279","<p>Answer: your example program (I've edited the original snipped to a complete program and applied English translation) is fine, you found a bug in your COBOL compiler (likely related to how intermediate results of functions are cached) [I've verified that bug in VC7 and VC9].</p>
<p>Testing the example program with GnuCOBOL and GCC-COBOL at <a href=""https://cobol.godbolt.org/z/1noYo59cY"" rel=""nofollow noreferrer"">https://cobol.godbolt.org/z/1noYo59cY</a> resulted in all of the compiler versions with the expected</p>
<pre><code> felder1-2 not identical
 felder1-2/function not identical
 felder3-4 not identical
</code></pre>
<p>which is also the result the ISO COBOL 2002+ standard would expect.</p>
<p>Possible solutions:</p>
<ul>
<li>workaround: always use program-local data-items for any intermediate function result</li>
<li>contact your vendor support for a fix, after all that version costs big $$$</li>
<li>move to free COBOL without that bug :-)</li>
</ul>
","4","Answer"
"79566259","79563686","<p>Upgrade <code>Microsoft.Extensions.Configuration.AzureAppConfiguration</code> and <code>Microsoft.Extensions.Configuration.AzureAppConfiguration</code> packages to the corresponding latest versions.</p>
<p>Add <code>&quot;FUNCTIONS_INPROC_NET8_ENABLED&quot;: &quot;1&quot;</code> setting in <code>local.settings.json</code>.</p>
<p><strong>local.settings.json:</strong></p>
<pre class=""lang-json prettyprint-override""><code>{
    &quot;IsEncrypted&quot;: false,
    &quot;Values&quot;: {
        &quot;AzureWebJobsStorage&quot;: &quot;UseDevelopmentStorage=true&quot;,
        &quot;FUNCTIONS_INPROC_NET8_ENABLED&quot;: &quot;1&quot;,
        &quot;FUNCTIONS_WORKER_RUNTIME&quot;: &quot;dotnet&quot;
    }
}
</code></pre>
<p>I have created a .NET 8.0 in-process Durable Azure function and implemented Dependency Injection.</p>
<p><strong>Startup.cs:</strong></p>
<pre class=""lang-cs prettyprint-override""><code>using Microsoft.Azure.Functions.Extensions.DependencyInjection;
using Microsoft.Extensions.DependencyInjection;

[assembly: FunctionsStartup(typeof(FunctionApp24.Startup))]
namespace FunctionApp24
{
    public class Startup : FunctionsStartup

    {
        public override void Configure(IFunctionsHostBuilder builder)
        {
            builder.Services.AddSingleton&lt;IMyService, MyService&gt;();
            FunctionsHostBuilderContext context = builder.GetContext();
            builder.Services.RegisterApplicationServices(context.ApplicationRootPath);
        }
    }
    public static class ServiceCollectionExtensions
    {
        public static void RegisterApplicationServices(this IServiceCollection services, string applicationRootPath)
        {
            services.AddSingleton&lt;IMyService, MyService&gt;();
        }
    }
}
</code></pre>
<p><strong>.csproj:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt;
  &lt;PropertyGroup&gt;
    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;
    &lt;AzureFunctionsVersion&gt;v4&lt;/AzureFunctionsVersion&gt;
  &lt;/PropertyGroup&gt;
  &lt;ItemGroup&gt;
  &lt;PackageReference Include=&quot;Azure.Messaging.EventHubs&quot; Version=&quot;5.11.5&quot; /&gt;
  &lt;PackageReference Include=&quot;Microsoft.Azure.Functions.Extensions&quot; Version=&quot;1.1.0&quot; /&gt;
  &lt;PackageReference Include=&quot;Microsoft.Azure.WebJobs.Extensions.DurableTask&quot; Version=&quot;2.13.5&quot; /&gt;
  &lt;PackageReference Include=&quot;Microsoft.Azure.WebJobs.Extensions.ServiceBus&quot; Version=&quot;5.16.4&quot; /&gt;
  &lt;PackageReference Include=&quot;Microsoft.Extensions.Configuration.AzureAppConfiguration&quot; Version=&quot;7.3.0&quot; /&gt;
  &lt;PackageReference Include=&quot;Microsoft.NET.Sdk.Functions&quot; Version=&quot;4.4.1&quot; /&gt;
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    &lt;None Update=&quot;host.json&quot;&gt;
      &lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
    &lt;/None&gt;
    &lt;None Update=&quot;local.settings.json&quot;&gt;
      &lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;
      &lt;CopyToPublishDirectory&gt;Never&lt;/CopyToPublishDirectory&gt;
    &lt;/None&gt;
  &lt;/ItemGroup&gt;
&lt;/Project&gt;
</code></pre>
<p><strong>IMyService.cs:</strong></p>
<pre class=""lang-cs prettyprint-override""><code>public interface IMyService
{
    string GetGreeting(string name);
}
public class MyService : IMyService
{
public string GetGreeting(string name)
{
    return $&quot;Hello {name}!&quot;;
}
</code></pre>
<p><strong>Function.cs:</strong></p>
<pre class=""lang-cs prettyprint-override""><code>public class Function1
{
    private readonly IMyService _myService;

    public Function1(IMyService myService)
    {
        _myService = myService;
    }
    [FunctionName(&quot;Function1&quot;)]
    public static async Task&lt;List&lt;string&gt;&gt; RunOrchestrator(
        [OrchestrationTrigger] IDurableOrchestrationContext context)
    {
        var outputs = new List&lt;string&gt;();
        outputs.Add(await context.CallActivityAsync&lt;string&gt;(nameof(SayHello), &quot;Tokyo&quot;));
        outputs.Add(await context.CallActivityAsync&lt;string&gt;(nameof(SayHello), &quot;Seattle&quot;));
        outputs.Add(await context.CallActivityAsync&lt;string&gt;(nameof(SayHello), &quot;London&quot;));
        return outputs;
    }

    [FunctionName(nameof(SayHello))]
    public string SayHello([ActivityTrigger] string name, ILogger log)
    {
        log.LogInformation(&quot;Saying hello to {name}.&quot;, name);
        return _myService.GetGreeting(name);
    }

    [FunctionName(&quot;Function1_HttpStart&quot;)]
    public async Task&lt;HttpResponseMessage&gt; HttpStart(
        [HttpTrigger(AuthorizationLevel.Anonymous, &quot;get&quot;, &quot;post&quot;)] HttpRequestMessage req,
        [DurableClient] IDurableOrchestrationClient starter,
        ILogger log)
    {
        string instanceId = await starter.StartNewAsync(&quot;Function1&quot;, null);

        log.LogInformation(&quot;Started orchestration with ID = '{instanceId}'.&quot;, instanceId);

        return starter.CreateCheckStatusResponse(req, instanceId);
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre class=""lang-cs prettyprint-override""><code>Functions:

        Function1_HttpStart: [GET,POST] http://localhost:7106/api/Function1_HttpStart

        Function1: orchestrationTrigger

        SayHello: activityTrigger

For detailed output, run func with --verbose flag.
[2025-04-10T08:30:53.480Z] Host lock lease acquired by instance ID '000000000000000000000000F72731CC'.
[2025-04-10T08:31:41.694Z] Executing 'Function1_HttpStart' (Reason='This function was programmatically called via the host APIs.', Id=3030762b-3b03-46cd-8c07-35a6d5096907)
[2025-04-10T08:31:41.945Z] Started orchestration with ID = '56f4203deff54838ba3443ae9d24b840'.
[2025-04-10T08:31:41.988Z] Executed 'Function1_HttpStart' (Succeeded, Id=3030762b-3b03-46cd-8c07-35a6d5096907, Duration=360ms)
[2025-04-10T08:31:42.166Z] Executing 'Function1' (Reason='(null)', Id=556a62a2-2d36-4677-a77d-a89759200dbb)
[2025-04-10T08:31:42.242Z] Executed 'Function1' (Succeeded, Id=556a62a2-2d36-4677-a77d-a89759200dbb, Duration=84ms)
[2025-04-10T08:31:42.380Z] Executing 'SayHello' (Reason='(null)', Id=41435e2d-7ef7-457e-8580-7237f532c2bf)
[2025-04-10T08:31:42.387Z] Saying hello to Tokyo.
[2025-04-10T08:31:42.393Z] Executed 'SayHello' (Succeeded, Id=41435e2d-7ef7-457e-8580-7237f532c2bf, Duration=16ms)
[2025-04-10T08:31:42.503Z] Executing 'Function1' (Reason='(null)', Id=5f714e79-8009-4ae3-b66a-4efc2eed251b)
[2025-04-10T08:31:42.533Z] Executed 'Function1' (Succeeded, Id=5f714e79-8009-4ae3-b66a-4efc2eed251b, Duration=30ms)
[2025-04-10T08:31:42.619Z] Executing 'SayHello' (Reason='(null)', Id=fae25f04-891c-4270-af67-67ee41174c23)
[2025-04-10T08:31:42.628Z] Saying hello to Seattle.
[2025-04-10T08:31:42.632Z] Executed 'SayHello' (Succeeded, Id=fae25f04-891c-4270-af67-67ee41174c23, Duration=15ms)
[2025-04-10T08:31:42.859Z] Executing 'Function1' (Reason='(null)', Id=8b237307-8ec1-4898-8159-9a00eefcbe9e)
[2025-04-10T08:31:42.871Z] Executed 'Function1' (Succeeded, Id=8b237307-8ec1-4898-8159-9a00eefcbe9e, Duration=12ms)
[2025-04-10T08:31:42.939Z] Executing 'SayHello' (Reason='(null)', Id=e16eae9b-1067-4bd7-9007-43c9275fa326)
[2025-04-10T08:31:42.944Z] Saying hello to London.
[2025-04-10T08:31:42.948Z] Executed 'SayHello' (Succeeded, Id=e16eae9b-1067-4bd7-9007-43c9275fa326, Duration=11ms)
[2025-04-10T08:31:43.031Z] Executing 'Function1' (Reason='(null)', Id=972f6a11-8eed-4d42-a1f3-e11c6f3234da)
[2025-04-10T08:31:43.047Z] Executed 'Function1' (Succeeded, Id=972f6a11-8eed-4d42-a1f3-e11c6f3234da, Duration=16ms)
</code></pre>
","1","Answer"
"79567083","79567065","<pre><code>menu_stack.pop()()
</code></pre>
<p>At the end of your method always assumes there's something left to catch in the stack.</p>
<p>When you hit the <strong>last</strong> <code>Enter</code>, and <code>top_menu()</code> also returns, the stack is empty.</p>
<p><a href=""https://mimo.org/glossary/python/pop()"" rel=""nofollow noreferrer"">https://mimo.org/glossary/python/pop()</a></p>
<blockquote>
<p><em>While the <code>pop()</code> method is highly useful, it's important to take care when you use the method. Using <code>pop()</code> on an empty list or with an out-of-range index results in an <code>IndexError</code> (<code>pop()</code> index out of range).</em></p>
</blockquote>
<p>You are not able to see this exception (<code>IndexError</code>) as the stack trace gets &quot;devoured&quot; due to top-level context ending.</p>
<p>Easiest way to fix this is to check if there's something in the stack:</p>
<pre><code>if menu_stack:
    menu_stack.pop()()
else:
    top_menu()
</code></pre>
","1","Answer"
"79568027","79567991","<p>Try <code>!!</code> (bang bang) instead. I'm not sure why <code>{}</code> (curly curly) doesn't work using the second method.</p>
<pre><code>join_dfs = function(x, y, x_key = &quot;key&quot;, y_key = &quot;key&quot;) {
  df &lt;- x |&gt;
    inner_join(y, by = join_by(!!x_key == !!y_key))
}
</code></pre>
<hr />
<p>As an aside, it's recommended that a function returns something (usually placed on the last line but that's not strict) instead of assigning the final result to an object that will never be used (<code>df</code>).</p>
<pre><code>join_dfs = function(x, y, x_key = &quot;key&quot;, y_key = &quot;key&quot;) {
  df &lt;- x |&gt;
    inner_join(y, by = join_by(!!x_key == !!y_key))
  df
}
</code></pre>
<p>Without the returning object on the last line, this command</p>
<pre><code>join_dfs(df1, df2, &quot;key&quot;, &quot;key&quot;)
</code></pre>
<p>doesn't print anything. See <a href=""https://stackoverflow.com/questions/21541012/r-function-with-no-return-value"">this post</a> for more details on that.</p>
<p>And I would simplify the function by just doing:</p>
<pre><code>join_dfs = function(x, y, x_key = &quot;key&quot;, y_key = &quot;key&quot;) {
  x |&gt;
    inner_join(y, by = join_by(!!x_key == !!y_key))
}
</code></pre>
","4","Answer"
"79568251","79568223","<p>C++ allows one implicit conversion when matching function arguments, as <code>Personne(Personne const*)</code> isn't marked <code>explicit</code> it is used to convert your <code>Personne*</code> to a new <code>Personne</code> object.</p>
<p><code>moi_pointeur-&gt;set(moi_pointeur);</code> is automatically transformed to <code>moi_pointeur-&gt;set(Personne(moi_pointeur));</code></p>
<p>Changing your class to:</p>
<pre><code>struct Personne {
    string nom;
    string prenom;
    int age;
    Personne();
    Personne(string nom, string prenom, int age);
    explicit Personne(Personne const*);
    virtual ~Personne();
    void set(Personne);
};
</code></pre>
<p>results in the compiler error you expect.</p>
<p>In general it's a good idea to mark all single argument constructors as <code>explicit</code> unless you want automatic conversions to apply.</p>
","2","Answer"
"79568368","79567991","<p>The other option is to change the inner function to accept strings directly.</p>
<p>Assuming that you always plan to pass the key column names as character strings, we can use <code>setNames</code> :</p>
<pre><code>join_dfs &lt;- function(x, y, x_key = &quot;key&quot;, y_key = &quot;key&quot;) {
  x %&gt;% 
    inner_join(y, by = setNames(y_key, x_key))
}
</code></pre>
","3","Answer"
"79568992","79568940","<p>It depends on the data you have in table1.</p>
<p>For example, if the table has two distinct groups, there will be two rows in your select and it will cause the routine to be called twice</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>group</th>
<th>ean</th>
<th>res</th>
</tr>
</thead>
<tbody>
<tr>
<td>g1</td>
<td>e1</td>
<td>r1</td>
</tr>
<tr>
<td>g1</td>
<td>e2</td>
<td>r2</td>
</tr>
<tr>
<td>g2</td>
<td>e3</td>
<td>r3</td>
</tr>
</tbody>
</table></div>
<p><strong>EDIT</strong>
I believe the answer was given by Paulo, in the answer above. As you can see, the query execution plan changes according to the use of the Hint <code>/*+ no_merge */</code>.</p>
<p><a href=""https://i.sstatic.net/UoJt7UED.png"" rel=""nofollow noreferrer"">Explain Plan</a></p>
","-1","Answer"
"79572022","79572009","<p>After @Eljay's suggestion of using std::array instead of a C-style array, I changed it and got a new error of <code>Globals::MAX_COL</code> not being a constant variable.</p>
<p>Hence, after changing back to the C-style array, I changed the variable MAX_COL in the namespace to a constant and now it compiles properly.</p>
<p>New Code:
namespaces.h</p>
<pre class=""lang-cpp prettyprint-override""><code>#ifndef namespaces_h
#define namespaces_h

namespace Globals {
    const int MAX_COL = 10;
};

#endif
</code></pre>
","0","Answer"
"79572592","79572009","<p>In</p>
<pre><code>namespace Globals {
    int MAX_COL = 10;
};
double matrix[10][Globals::MAX_COL];
</code></pre>
<p>as <code>MAX_COL</code> is not a constant expression, <code>matrix</code> is VLA (Variable length array).</p>
<p>It is not standard C++, but compiler might provide it as extension.</p>
<p>If value is really intended as non-constant, use resizable container as <code>std::vector</code>.<br />
If value should be <code>const</code>, add missing <code>const</code>, and potentially use <code>std::array</code>.</p>
","2","Answer"
"79573457","79573449","<h3>As a dictionary comprehension</h3>
<p>A <a href=""https://docs.python.org/3/tutorial/datastructures.html#:%7E:text=In%20addition%2C%20dict%20comprehensions%20can%20be%20used%20to%20create%20dictionaries%20from%20arbitrary%20key%20and%20value%20expressions%3A"" rel=""nofollow noreferrer"">dictionary comprehension</a> <em>can be used to create dictionaries from arbitrary key and value expressions</em>.</p>
<pre class=""lang-py prettyprint-override""><code>new_dict2 = {
    key: value
    for key, value in my_dict.items()
    if value['category']['name'] == 'Fruit'
}
new_dict2 == new_dict
# True
</code></pre>
<h3>Using <code>filter()</code></h3>
<p>The <a href=""https://docs.python.org/3/library/functions.html#filter"" rel=""nofollow noreferrer""><code>filter()</code></a> function is used to:</p>
<blockquote>
<p>Construct an iterator from those elements of <em>iterable</em> for which <em>function</em> is true.</p>
</blockquote>
<p>The <a href=""https://docs.python.org/3/library/stdtypes.html#dict.items"" rel=""nofollow noreferrer""><code>dict.items()</code></a> returns an iterable where each element is a <a href=""https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences"" rel=""nofollow noreferrer"">tuple</a> of length 2. We can supply each <code>item</code> to a <a href=""https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions"" rel=""nofollow noreferrer"">lambda function</a>, where <code>item[0]</code> will be the key and <code>item[1]</code> the value. <code>filter()</code> returns an iterator of the tuples which match the condition. We can wrap this in <code>dict()</code> to get a dictionary (in the same way that <code>dict([(&quot;key1&quot;, &quot;value1&quot;), (&quot;key2&quot;, &quot;value2&quot;)])</code> returns <code>{'key1': 'value1', 'key2': 'value2'}</code>).</p>
<pre class=""lang-py prettyprint-override""><code>new_dict3 = dict(
    filter(
        lambda item: item[1]['category']['name'] == 'Fruit',
        my_dict.items()
    )
)
new_dict3 == new_dict
# True
</code></pre>
<h3>Most Pythonic way</h3>
<p>Achieving the nebulous goal of Pythonicness (Pythonicity?) is always somewhat subjective. I think a dictionary comprehension is clean and neat but it can be hard to see what it's doing, especially if the <code>dict</code> is deeply nested or the condition is complex. It's probably clearest if you wrap it in an appropriately-named function so you can see what's going on. I've added type annotations for clarity:</p>
<pre class=""lang-py prettyprint-override""><code>def find_fruit(d: dict[str, dict]) -&gt; dict[str, dict]:

    def is_fruit(key: str, value: dict) -&gt; bool:
        return value[&quot;category&quot;][&quot;name&quot;] == &quot;Fruit&quot;

    return {key: value for key, value in d.items() if is_fruit(key, value)}

fruit_dict = find_fruit(my_dict)
new_dict == fruit_dict
# True
</code></pre>
<p>This is fundamentally the same as the first approach but easier on the eyes.</p>
","6","Answer"
"79573464","79573449","<p>You could use a dictionary comprehension which would be more concise but, arguably, harder to read:</p>
<pre><code>my_dict = {
    'item1': {'name': 'Apple', 'price': 1.0, 'category': {'id': 1, 'name': 'Fruit'}},
    'item2': {'name': 'Banana', 'price': 0.5, 'category': {'id': 1, 'name': 'Fruit'}},
    'item3': {'name': 'Carrot', 'price': 0.75, 'category': {'id': 2, 'name': 'Vegetable'}},
    'item4': {'name': 'Broccoli', 'price': 1.5, 'category': {'id': 2, 'name': 'Vegetable'}}
}

new_dict = {k: v for (k, v) in my_dict.items() if v[&quot;category&quot;][&quot;name&quot;] == &quot;Fruit&quot;}

print(new_dict)
</code></pre>
","4","Answer"
"79573469","79573449","<p>Do it in a 'pythonic' way:</p>
<pre><code>filtered_dict = {k: v for k, v in my_dict.items() if v['category']['name'] == 'Fruit'}
</code></pre>
","3","Answer"
"79573477","79573449","<p>Also you can do it with <code>filter</code></p>
<pre><code>
new_dict = dict(filter(lambda item: item[1]['category']['name'] == 'Fruit', my_dict.items()))
</code></pre>
","3","Answer"
"79573921","79573784","<p>A quick fix of this problem would be to just remove the module type of the scripts and calling the method <code>fetchProducts()</code> in <code>modal.mjs</code>. You just need to make sure that you don't <code>export</code> the function anymore and both js-files are added in the HTML-Body, the file where the function is defined (<code>ProductsDb.mjs</code>) before the one you want to use it in.
You then would also need to use the not modular <code>import()</code> for the &quot;axios&quot; or also include it in the body if it's an script</p>
","0","Answer"
"79574313","79568940","<p>It's unclear what your issue is, because you haven't told us what data is in the table. Your SQL:</p>
<pre><code>merge into table1 t1
using 
( select * from
    (select group, my_func(ean_list) as result from
        ( Select group, listagg(ean,',') as ean_list from table1 group by group )
    )
 ) t2
on (t1.group = t2.group)
when matched then update set t1.res = t2.result;
</code></pre>
<p>does a <code>group by group</code>, so if you have more than one <code>group</code> value (of course you would, otherwise you wouldn't be aggregating at all), then you are going to end up with multiple rows feeding into the parent block, and you can expect <code>my_func</code> to be called as many times.</p>
<p>If your issue is that <code>ean_list</code> is the same for multiple rows and you want to call the function only once per unique argument, then you need to declare your function with the <code>deterministic</code> option:</p>
<p><code>create or replace function my_func(ean IN varchar2) return varchar2 deterministic as...</code></p>
<p>Lastly, SQL is a declarative syntax, not a programming language. We tell the database what we want, and it figures out on its own exactly how to go about getting it. That means it is free to reorder, rewrite, merge, split up, etc... the pieces of our query as it pleases to accomplish the task in what it believes to be the optimal manner. Hence, SQL gives us no promises about when a function (for example) is going to be called, and that means we cannot control exactly how many times it's called, either.</p>
<p>But, there are ways to force it with careful manipulation. The main concern here is &quot;view merging,&quot; where Oracle will collapse nested query blocks into a single block. It often postpones aggregation until later than where we've declared it, and that can cause your function to fire more than it needs to. If Oracle is merging your <code>using</code> clause with the top merge block, for example, that may result in the function being called for every row in <code>table1</code> (after the join) rather than once for each row in <code>t2</code> (before the join). You can check this by reading your query's explain plan. If view merging is your issue, you can prevent that with a <code>/*+ no_merge */</code> hint or adding a dummy column like <code>rownum</code> that forces an immediate sort and disallows view merging:</p>
<pre><code>merge into table1 t1
using 
( select /*+ no_merge */ * from
    (select group, my_func(ean_list) as result from
        ( Select group, listagg(ean,',') as ean_list from table1 group by group )
    )
 ) t2
on (t1.group = t2.group)
when matched then update set t1.res = t2.result;
</code></pre>
<p>The same thing can happen with nested blocks (query blocks beneath your function), but in your case, since you are using the result of <code>listagg</code> (which can only be computed during aggregation) from the child block in your function call, you can be assured that the <code>group by</code> will happen prior to the function call without needing to add further hints. So if there is view merging happening that's multiplying calls to the function, it'd have to be a merge with the parent.</p>
","1","Answer"
"79574412","79574309","<p>To make a shallow copy of a function (i.e., copy its callable behavior and its own properties), you'll need to do a few things:</p>
<p>Create a new function that behaves the same way.</p>
<p>Copy over own enumerable properties from the original function.</p>
<pre><code>function copy(originalFn) {
  // Create a new function that calls the original
  const copiedFn = function(...args) {
    return originalFn.apply(this, args);
  };

  // Copy own enumerable properties (shallow)
  Object.keys(originalFn).forEach(key =&gt; {
    copiedFn[key] = originalFn[key];
  });

  return copiedFn;
}
</code></pre>
<p><strong>EDITED:</strong></p>
<p>as suggested above solution has issues of multiple wrappers as well as length is lost as new function is variadic <code>((...args))</code></p>
<p>so now what we can do is reconstruct the function using its string representation, this will avoid deep wrapper chains.</p>
<p>NOTE: this solution has limitation that it won't work for native function that can't be stringified e.g. bound functions, closures with external dependencies, but will work for plain functions</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function copy(originalFn) {
  const fnStr = originalFn.toString();
  let copiedFn;
  try {
    copiedFn = new Function('return ' + fnStr)();
  } catch (e) {
    throw new Error('Failed to copy function: ' + e.message);
  }

  Object.keys(originalFn).forEach(key =&gt; {
    copiedFn[key] = originalFn[key];
  });

  return copiedFn;
}

//example
function func(x, y) { return [x, y]; }
func.a = 1;

let func2 = copy(copy(func));

console.log(func2(1, 2)); // [1, 2]
console.log(func2.length); // 2
console.log(func2.a); // 1</code></pre>
</div>
</div>
</p>
","-2","Answer"
"79574762","79574309","<blockquote>
<p>there are some problems with this solution</p>
</blockquote>
<p>The major problems I see are</p>
<ul>
<li>For some reason you chose to apply the <code>fn</code> to the <code>wrapper</code>, not to <code>this</code></li>
<li><code>Object.assign</code> only copies (own) enumerable properties, and only their values. (This includes your problem with <code>.length</code>, but also the <code>.name</code>, and of course other custom properties)</li>
<li>The new function inherits from <code>Function.prototype</code>, it does not necessarily have the same prototype as <code>fn</code>.</li>
</ul>
<blockquote>
<p>Chain appling of copy will lead to multiple levels of wrapper.</p>
</blockquote>
<p>That isn't necessarily unexpected. But if you wanted to solve this, you'd need a way to extract the original <code>fn</code> from any wrapper function; this can be achieved by using a <code>WeakMap</code>.</p>
<pre><code>const originals = new WeakMap();
function copy(source) {
  const fn = originals.get(source) ?? source;
  const target = function() {
    return fn.apply(this, arguments);
  };
  originals.set(target, fn);
  Object.setPrototypeOf(target, Object.getPrototypeOf(source));
  Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
  return target;
}
</code></pre>
","2","Answer"
"79575247","79575184","<p>After pressing <code>no</code> there is no handler for the <code>&lt;Key&gt;</code> event. That's the reason pressing the <code>quit</code> key again doesn't work You need to rebind handler after pressing <code>no</code>.</p>
<pre><code>elif event.keysym == settings[&quot;keys&quot;][&quot;prompt-keys&quot;][&quot;no&quot;]:
    x, y = blockPoint(&quot;center&quot;)
    x -= 6
    y -= 3
    for i in range(5):
        for j in range(10):
            Spot(x + j, y, color=&quot;#232627&quot;, outline=&quot;#232627&quot;)
        y += 1
    win.bind(&quot;&lt;Key&gt;&quot;, menuKeys)
</code></pre>
","0","Answer"
"79577921","79577864","<p>We might try (not tested).</p>
<pre class=""lang-r prettyprint-override""><code>file_names = 
  list.files(path='&lt;enter_dir_path&gt;', pattern='\\.xlsx$', full.names=TRUE) |&gt; 
   setNames(basename(file_names))
</code></pre>
<p>(1) <code>{readxl}</code></p>
<pre class=""lang-r prettyprint-override""><code>all_files = lapply(file_names, readxl::read_excel) 
all_sheets = lapply(all_files, readxl::excel_sheets) 
stack(c(all_sheets)) |&gt; setNames(c('sheetname', 'workbook'))
</code></pre>
<p>(2) <code>{openxlsx}</code></p>
<pre class=""lang-r prettyprint-override""><code>all_files = lapply(file_names, openxlsx::loadWorkbook)
all_sheets = lapply(all_files, openxlsx::sheets) 
stack(c(all_sheets)) |&gt; setNames(c('sheetname', 'workbook'))
</code></pre>
<p>We can obviously optimise to run <code>lapply()</code> only once
returning a list with two elements: (I) a <code>list</code> of <code>data.frame</code>s and (II) a <code>data.frame</code> with columns 'sheetname' and 'workbook'.</p>
<p>Another approach would be via bash/zsh on unix, e.g. initialising a <code>for</code>-loop which <code>unzip</code>s to .xml and <code>grep</code>s sheet names.</p>
","1","Answer"
"79578298","79578263","<p>To remove an item with given <code>key</code> from a dictionary <em>D</em>, you can use <code>item = D.pop(key)</code>.
To add it to another dictionary <em>C</em>, you use <code>C[key] = item</code>, so you can combine the two using</p>
<pre><code>C[key] = D.pop(key)
</code></pre>
<p>But that's actually not what you want.
Your (pseudo)-code has several flaws and/or solutions:</p>
<ul>
<li>the function should get as an argument which room to search, and possibly, which item to search. Otherwise, you actually don't serach for a (given) item, but you want to pick up whatever is in the room. See further below</li>
<li><code>if xxx = true:</code> should simply read: <code>if xxx:</code>. Because it is implicit in <code>if</code> that we check whether the condition is true. With what you write, you actually ask whether &quot;xxx is true&quot; is true; but if you want to know whether that's true, you should (using the same logic) ask whether (&quot;xxx is true&quot; is true) is true... and so on.</li>
<li><code>room has_item</code> should be <code>item in room</code> in Python, if room was a set that has elements. These rooms are actually the entries of your <code>has_item</code> dictionary. So you would have to write <code>if item in has_item[room]: ...</code></li>
<li><code>inventory</code> is a <strong>set</strong> (rather than <code>dict</code>) that does indeed have an <code>.add(...)</code> method, which you should use instead of the abovementioned <code>C[key]=...</code>, used to add an entry to a <em>dictionary</em>.</li>
<li>as already said, <code>has_item</code> is a dictionary, so you wouldn't say <code>has_item = false</code>, but rather remove the item from the set of objects in that room, viz: <code>has_item[room].remove(item)</code>. (You could also use the <code>.discard()</code> method but <code>.remove()</code> will help you to track errors.) If you don't know what item you want, but just any element of the set, you can also use the <code>.pop()</code> method that returns and removes an arbitrary element.</li>
<li>Now we suppose that we want to look for <em><strong>any</strong></em> item in the <code>room</code>, i.e., in the set corresponding to <code>room</code> in the dict <code>has_item</code>. You could use either <code>if</code>, if there's at most one item in the room, or <code>while</code>, to pick up one item after the other.</li>
<li>I notice that the <code>has_item</code> dict does not have an entry for empty rooms (as it could have, with an empty set as value). So we first have to check whether the room is in the dictionary <code>has_items</code></li>
</ul>
<pre><code>def search_for_items(): # using global variable 'room'
   if room in has_item and has_item[room]: # meaning it's not empty
      while has_item[room]:
         item = has_item[room].pop()  # removes and returns an arbitrary item
         inventory.add(item)
         print(f&quot;took {item}&quot;)
      # You can (optionally) now to remove 'room' from 'has_item', with:
      del has_item[room] # remove 'room' from the dict: nothing left here
   else: # no items in 'room'
      print(&quot;nothing here...&quot;)
</code></pre>
<p>Note that you don't have to put <code>false</code> anything. The <code>.pop</code> method removes the item and so the set of items in that room becomes empty.
Up to you whether you put <code>room</code> into the args of the function (I think that would be cleaner) or consider it as a global variable.</p>
","1","Answer"
"79580155","79580146","<p>As @Limey says in comments, <code>dplyr::across()</code> (+ <code>case_when()</code>) does everything you need ...</p>
<pre class=""lang-r prettyprint-override""><code>dd &lt;-  read.table(header=TRUE, text = &quot;
   A    B    C    D
   1.4  4.0  6.0  1.0
   2.5  1.5  2.4  2.3
   3.0  1.7  2.5  3.4
&quot;)
</code></pre>
<pre class=""lang-r prettyprint-override""><code>library(dplyr)
dd |&gt; 
   mutate(across(c(A, B, D),
          .names = &quot;{.col}_New&quot;,
          ~ case_when(. &lt; 2  ~ . + 1,
                      . &lt; 3  ~ . + 3,
                      . &lt; 4  ~ . + 5,
                      .default = .)))
</code></pre>
<ul>
<li>the tests in <code>case_when</code> are evaluated sequentially, so (for example) we don't need to test for <code>x &gt;= 2</code> in the second case</li>
<li>there might be some marginally more efficient way to construct a mathematical expression to do this (e.g. &quot;if <code>x &lt; 5</code>, add <code>ceiling(x-2)*2 +1</code> to x&quot;) (or something clever using <code>cut()</code> and a matching vector of increments), but it will be harder to understand and less generalizable ...</li>
</ul>
","6","Answer"
"79580182","79580146","<p>With base R, you can use <code>findInterval</code> like below</p>
<pre><code>&gt; nms &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;D&quot;)

&gt; df[paste0(nms, &quot;_New&quot;)] &lt;- df[nms] + c(1, 3, 5, 0)[findInterval(unlist(df[nms]), c(2, 3, 4)) + 1]

&gt; df
    A   B   C   D A_New B_New D_New
1 1.4 4.0 6.0 1.0   2.4   4.0   2.0
2 2.5 1.5 2.4 2.3   5.5   2.5   5.3
3 3.0 1.7 2.5 3.4   8.0   2.7   8.4
</code></pre>
","6","Answer"
"79580324","79580146","<p>You can create a step function (<code>stepfun</code>) to define which value to add in each interval.</p>
<pre class=""lang-r prettyprint-override""><code>mystep &lt;- stepfun(c(2, 3, 4), c(1, 3, 5, 0))
</code></pre>
<ol>
<li>With <code>{base}</code></li>
</ol>
<pre class=""lang-r prettyprint-override""><code>nms &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;D&quot;)
df[paste0(nms, &quot;_New&quot;)] &lt;- lapply(df[nms], \(x) x + mystep(x))
</code></pre>
<ol start=""2"">
<li>With <code>{dplyr}</code></li>
</ol>
<pre class=""lang-r prettyprint-override""><code>df %&gt;%
  mutate(across(c(A, B, D), ~ .x + mystep(.x), .names = &quot;{.col}_New&quot;))

#     A   B   C   D A_New B_New D_New
# 1 1.4 4.0 6.0 1.0   2.4   4.0   2.0
# 2 2.5 1.5 2.4 2.3   5.5   2.5   5.3
# 3 3.0 1.7 2.5 3.4   8.0   2.7   8.4
</code></pre>
<hr />
<p><em><strong>Note</strong>: <code>stepfun()</code> returns a function as shown in the graph below:</em></p>
<pre class=""lang-r prettyprint-override""><code>plot(mystep)
</code></pre>
<p><a href=""https://i.sstatic.net/nZTQMuPN.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/nZTQMuPNm.png"" alt=""enter image description here"" /></a></p>
","6","Answer"
"79580679","79577864","<p>If you are open to the tidyverse solution, then I would go with:</p>
<pre class=""lang-r prettyprint-override""><code>library(purrr)
library(dplyr)
library(tibble) # all three could be replaced by library(tidyverse)

all_files |&gt; 
    set_names() |&gt; # if you want file names then set_names(basename)
    map(excel_sheets) |&gt; 
    map(as_tibble_col) |&gt; # here we create column with sheetnames for each file
    bind_rows(.id = &quot;workbook&quot;) |&gt; # combine all files
    rename(sheetname = value) # cleanup names
</code></pre>
","1","Answer"
"79580787","79580146","<p>Another option could be to write your requirements as a logical function</p>
<p><code>f(x)=x+(1⋅[x&lt;2]+3⋅[2≤x&lt;3]+5⋅[3≤x&lt;4])</code> assuming that your <code>[cases]</code> don't logically overlap</p>
<pre><code>cols &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;D&quot;)                         #add * (condition) 
d[paste0(cols, &quot;_New&quot;)] &lt;- lapply(d[cols],\(x)x +(1*(x&lt;2) +      # first case
                                                  3*(x&gt;=2&amp;x&lt;3) + # 2nd case
                                                  5*(x&gt;=3&amp;x&lt;4)   # 3rd case
                                                  ))
</code></pre>
<p>giving</p>
<pre><code>    A   B   C   D A_New B_New D_New
1 1.4 4.0 6.0 1.0   2.4   4.0   2.0
2 2.5 1.5 2.4 2.3   5.5   2.5   5.3
3 3.0 1.7 2.5 3.4   8.0   2.7   8.4
</code></pre>
<h2>Sample data</h2>
<pre><code>d &lt;- data.frame(A = c(1.4, 2.5, 3.0), B = c(4.0, 1.5, 1.7), C = c(6.0, 2.4, 2.5), D = c(1.0, 2.3, 3.4))
</code></pre>
","0","Answer"
"79582011","79581931","<p>Your error,</p>
<pre><code>TypeError: 'in &lt;string&gt;' requires string as left operand, not set
</code></pre>
<p>means that you cannot do &lt;set&gt; in &lt;string&gt;. The variable item,</p>
<pre><code>item = {
     'Gas Mask',
     'Stuffed Shark',
     'Bubble Wrap',
     'Knowledge of Toaster Store',
     'Block of Old Cheese',
     'Baseball Bat'
}
</code></pre>
<p>is a set, so you can't do <code>item in string</code> as item is a set.</p>
<p>I'm assuming you're checking whether the room has an item. You can do that by checking if there is a key in the dictionary with:</p>
<pre><code>if 'item' in room[current_room]:
    inventory.append(item)
else:
    print(&quot;Nothin'.&quot;)
</code></pre>
<p>This also makes <code>item</code>  useless.</p>
<p>Hope this helped!</p>
<p>Another suggestion:</p>
<p>You should use a coordinate system instead of a dictionary telling you where everything is relative to everything else.</p>
<p>One approach would be:</p>
<pre><code>places = {
    '00': 'Main Entry', # First digit x, second digit y
    '01: 'Main Floor', # East or right of main entry, so 0, 1
    ... # and so on, this makes it more expandable
}
</code></pre>
<p>Store a variable for x and y and change these variables to move in each direction.</p>
<pre><code>x = 0
y = 0
place = places[f&quot;{x}{y}&quot;]
# -&gt; place = 'Main Entry'
# to move:
direction = 'east'
directions = {
    'east': (0, 1),
    'south': (-1, 0),
    'west': (0, -1),
    'north': (1, 0)
}
if direction not in directions:
    print('invalid direction')
x += directions[direction][0]
y += directions[direction][1]
place = places[f&quot;{x}{y}&quot;]
# -&gt; place = 'Main Floor'
</code></pre>
<p>Or use lists:</p>
<pre><code>grid = [
    ['place1', 'place2'],
    ['', 'place 3']
]
</code></pre>
","0","Answer"
"79582176","79581058","<p>you can use pl/sql to loop and gather cap remaining and cap usage,</p>
<ul>
<li>first define types to get output of the function:</li>
</ul>
<pre class=""lang-sql prettyprint-override""><code>CREATE TYPE coupon_row IS OBJECT(
    coupon varchar2(64),
    value number,
    cap_name varchar2(64),
    cap_sequence number,
    cap_limit NUMBER,
    coupon_usage number,
    cap_remaining number
);
CREATE TYPE coupon_rows IS TABLE OF coupon_row;
</code></pre>
<ul>
<li>now we can write a function to create result table:</li>
</ul>
<pre class=""lang-sql prettyprint-override""><code>CREATE OR REPLACE FUNCTION get_analytics RETURN coupon_rows IS 
    TYPE NUMBER_map IS TABLE OF NUMBER INDEX BY VARCHAR2(64);
    cp_remaining NUMBER_map;
    cp_usage NUMBER_map;
    v_RESULT coupon_rows;
    v_row coupon_row;
BEGIN 
    v_RESULT:=coupon_rows();
    -- should be selected from original table in a loop
    cp_remaining('Cap1'):=150;
    cp_remaining('Cap2'):=70;
    FOR rec IN (
        with coupon_data(coupon, value)as 
            (
                select 'A',100 from dual union all
                select 'B',40 from dual union all
                select 'C',120 from dual union all
                select 'D',10 from dual union all
                select 'E',200 from dual 
            ), cap_data(cap_name, cap_limit) as
            (
                select 'Cap1', 150 from dual union all
                select 'Cap2', 70 from dual 
            )
            , coupon_cap_mapping(coupon, cap_sequence, cap_name) as
            (
                select 'A',1,'Cap1' from dual union all
                select 'A',2,'Cap2' from dual union all
                select 'B',1,'Cap2' from dual union all
                select 'C',1,'Cap2' from dual union all
                select 'C',2,'Cap1' from dual union all
                select 'D',1,'Cap1' from dual union all
                select 'E',1,'Cap1' from dual union all
                select 'E',2,'Cap2' from dual 
            )
        SELECT cd.coupon,
               cd.value,
               cap_d.cap_name,
               ccm.cap_sequence,
               cap_d.cap_limit
        FROM coupon_data cd
        JOIN coupon_cap_mapping ccm ON ( cd.coupon = ccm.coupon )
        JOIN cap_data           cap_d ON ( cap_d.cap_name = ccm.cap_name )
        ORDER BY cd.coupon, ccm.cap_sequence
    ) LOOP
        IF NOT cp_usage.EXISTS(rec.coupon) THEN
            cp_usage(rec.coupon):=0;
        END IF;
        -- dbms_output.put_line('row:'||rec.coupon||','||rec.value||','||rec.cap_name||','||rec.cap_sequence||','||rec.cap_limit||', used'||cp_usage(rec.coupon));
        v_row := coupon_row(rec.coupon, rec.value, rec.cap_name, rec.cap_sequence, rec.cap_limit, 0, 0) ;
        IF rec.value-cp_usage(rec.coupon) &gt; 0 THEN
            IF cp_remaining(rec.cap_name)-(rec.value-cp_usage(rec.coupon)) &lt; 0 THEN 
                v_row.coupon_usage := cp_remaining(rec.cap_name);
                cp_remaining(rec.cap_name) := 0;
            ELSE 
                cp_remaining(rec.cap_name):=cp_remaining(rec.cap_name)-rec.value+cp_usage(rec.coupon);
                v_row.coupon_usage := rec.value-cp_usage(rec.coupon);
            END IF;
        ELSE 
            v_row.coupon_usage := 0;
        END IF;
        v_row.cap_remaining := cp_remaining(rec.cap_name);
        v_RESULT.extend;
        v_RESULT(v_RESULT.count) := v_row;

        cp_usage(rec.coupon):=cp_usage(rec.coupon)+v_row.coupon_usage;
    END LOOP;
    RETURN v_RESULT;
EXCEPTION WHEN OTHERS THEN
    dbms_output.put_line('exc:'||sqlerrm);
    Dbms_Output.put_line ( DBMS_UTILITY.FORMAT_ERROR_STACK() );
    Dbms_Output.put_line ( DBMS_UTILITY.FORMAT_ERROR_BACKTRACE() );
    RETURN v_result;
END get_analytics;
</code></pre>
<ul>
<li>we can use the function like this:</li>
</ul>
<pre class=""lang-sql prettyprint-override""><code>SELECT * FROM TABLE(get_analytics());
</code></pre>
<p>result:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>COUPON</th>
<th>VALUE</th>
<th>CAP_NAME</th>
<th>CAP_SEQUENCE</th>
<th>CAP_LIMIT</th>
<th>COUPON_USAGE</th>
<th>CAP_REMAINING</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>100</td>
<td>Cap1</td>
<td>1</td>
<td>150</td>
<td>100</td>
<td>50</td>
</tr>
<tr>
<td>A</td>
<td>100</td>
<td>Cap2</td>
<td>2</td>
<td>70</td>
<td>0</td>
<td>70</td>
</tr>
<tr>
<td>B</td>
<td>40</td>
<td>Cap2</td>
<td>1</td>
<td>70</td>
<td>40</td>
<td>30</td>
</tr>
<tr>
<td>C</td>
<td>120</td>
<td>Cap2</td>
<td>1</td>
<td>70</td>
<td>30</td>
<td>0</td>
</tr>
<tr>
<td>C</td>
<td>120</td>
<td>Cap1</td>
<td>2</td>
<td>150</td>
<td>50</td>
<td>0</td>
</tr>
<tr>
<td>D</td>
<td>10</td>
<td>Cap1</td>
<td>1</td>
<td>150</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>E</td>
<td>200</td>
<td>Cap1</td>
<td>1</td>
<td>150</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>E</td>
<td>200</td>
<td>Cap2</td>
<td>2</td>
<td>70</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table></div>
","2","Answer"
"79582258","79581931","<p>As stated, there is no <code>'item'</code> key in the main entry. So we'll need to handle that by instead of using the explicit syntax, lets use the <code>.get()</code></p>
<p>Also no need for the item dictionary. And a few suggestions, the inventory make it a list, and also record the path, so that in the event that you don't have a specific room as a key, you can handle that error (Ie. You can go to the Storage Room, but since that's not present in your keys of room, you'll get an error.)</p>
<p>I also added the <code>choice</code> package, should make things flow a bit better. Simply do your <code>pip install choice</code></p>
<p>My suggestion, get an IDE (not jupyter notebook). And run this in debug mode and run it line by line. That will help you understand the logic and see how the code works.</p>
<p>Also, the suggestion above of making the rooms/map as an x,y axis is brilliant. Much better way to handle the going room to room. Definitely incorporate that.</p>
<pre><code>import choice

possible_directions = ['North', 'South', 'East', 'West']

room = {
    'Main Entry': {'East': 'Main Floor'},
    'Main Floor': {'North': 'North Hall', 'South': 'South Hall', 'East': 'Clothes Store', 'West': 'Main Entry', 'item': 'Gas Mask'},
    'South Hall': {'East': 'Food Court', 'North': 'Main Floor', 'item': 'Knowledge of Toaster Store'},
    'North Hall': {'East': 'Storage Room', 'South': 'Main Floor', 'item': 'Stuffed Shark'},
    'Food Court': {'West': 'South Hall', 'item': 'Block of Old Cheese'},
    'Clothes Store': {'North': 'Theater', 'West': 'Main Floor', 'item': 'Baseball Bat'},
    'Theater': {'South': 'Clothes Store'}
}


inventory = []
room_sequence = []

#The current_room function tracks which &quot;room&quot; the user is in, and starts them in the Main Entry
current_room = 'Main Entry'
print('Allister &amp; Doodle enter the mall. The word was, one of their recurring enemies-Lumina the jellyfish lady-was putting' \
'together a makeshift doomsday device! They figured it was unlikely to do actual doomsday levels of damage, but they had the day' \
'off and figured they might as well try and put a stop to it. Because they''re just that nice!' \
'Input Search to look for items! You''ll need Bubble Wrap, a Baseball Bat, and a Block of Old Cheese to win the game.' \
'Once-and only once-you have all three, make your way to the Theater (North of the Clothes Store) for the final showdown!' \
'Input North, South, East, or West to have them move through the mall! Or input exit, if you have something better to do.\n')

#The while loop plays until the user enters exit, to which it then ends the game.
while current_room != 'exit':
    print(f&quot;Allister &amp; Doodle are in the {current_room}&quot;)
    #command = input(&quot;Enter command: &quot;)
    command = choice.Menu(['Go', 'Search', 'Inventory', 'exit']).ask()
    if command == 'Inventory':
        print(f&quot;Allister &amp; Doodle have {inventory}\n&quot;)
        
    elif command == 'exit':    
        current_room = 'exit'
    
    elif command == 'Search':
        if room.get(current_room):
            items_in_room = room[current_room].get('item')
            if items_in_room:
                if items_in_room not in inventory:
                    print(f&quot;Allister &amp; Doodle found a {items_in_room}&quot;)
                    inventory.append(items_in_room)
                else:
                    print(&quot;Nothin' new.\n&quot;)
            else:
                print(&quot;Nothin'.\n&quot;)
        else:
            print(&quot;Too dark. Can't search for anything.\n&quot;)
            current_room = room_sequence[-2]
            room_sequence.append(current_room)

    elif command == 'Go':
        direction = choice.Menu(possible_directions).ask()
        if room.get(current_room):
            if direction in room[current_room].keys():
                current_room = room[current_room][direction]
                room_sequence.append(current_room)
            else:
                print(f&quot;Can't go {direction}\n&quot;)
        else:
            print(&quot;Too dark. Can't see where to go.\n&quot;)
            current_room = room_sequence[-2]
            room_sequence.append(current_room)

    else:
        print(&quot;No can do\n&quot;)

print(&quot;You have exited the game.&quot;)
</code></pre>
","0","Answer"
"79582397","79581058","<p>A first draft using the MODEL clause - to be further tested of course</p>
<pre><code>with coupon_data(coupon, value)as 
(
    select 'A',100 from dual union all
    select 'B',40 from dual union all
    select 'C',120 from dual union all
    select 'D',10 from dual union all
    select 'E',200 from dual 
)
, cap_data(cap_name, cap_limit, capid) as
(
    select cpd.*, row_number() over(order by cap_name) 
    from (
        select 'Cap1' as cap_name, 150 as cap_limit from dual union all
        select 'Cap2', 70 from dual 
    ) cpd
)
, coupon_cap_mapping(coupon, cap_sequence, cap_name) as
(
    select 'A',1,'Cap1' from dual union all
    select 'A',2,'Cap2' from dual union all
    select 'B',1,'Cap2' from dual union all
    select 'C',1,'Cap2' from dual union all
    select 'C',2,'Cap1' from dual union all
    select 'D',1,'Cap1' from dual union all
    select 'E',1,'Cap1' from dual union all
    select 'E',2,'Cap2' from dual 
)
, alldata as (
    select coupon, value, cap_name, cap_sequence, cap_limit,
        capid,
        row_number() over(order by coupon, cap_sequence) as coupon_rn,
        (select cap_name from cap_data where capid = 1) as cap_name_1,
        (select cap_limit from cap_data where capid = 1) as cap_limit_1,
        (select cap_name from cap_data where capid = 2) as cap_name_2,
        (select cap_limit from cap_data where capid = 2) as cap_limit_2
    from (
        select cd.coupon, cd.value, cm.cap_sequence, cpd.cap_limit, cm.cap_name, cpd.capid
        from coupon_data cd
        join coupon_cap_mapping cm on cm.coupon = cd.coupon
        join cap_data cpd on cpd.cap_name = cm.cap_name
    ) d
)
select 
    coupon,
    value,
    capid,
    decode(capid, 1, cap_name_1, cap_name_2) as cap_name,
    cap_sequence,
    decode(capid, 1, cap_limit_1, cap_limit_2) as cap_limit,
    decode(capid, 1, usage_1, usage_2) as coupon_usage,
    decode(capid, 1, cap_remaining_1, cap_remaining_2) as cap_remaining
from alldata
model
    dimension by (coupon_rn)
    measures(
        coupon, cap_sequence, capid, value,
        0 as usage_1, 0 as cap_remaining_1, 
        0 as usage_2, 0 as cap_remaining_2, 
        0 as value_remaining, 
        
        cap_limit_1, cap_name_1, cap_limit_2, cap_name_2
    )
    rules automatic order (
        usage_1[1] = case capid[cv()] when 1
            then 
                -- if the value is less that the cap_limit we consumme it else nothing 
                case when value[1] &lt;= cap_limit_1[1] then value[1] else 0 end
            else 
                -- if not the cap 1 
                0 
            end,
        usage_1[coupon_rn &gt; 1] = case capid[cv()] when 1
            then 
                case when coupon[cv()] = coupon[cv()-1] then
                    -- same coupon as the previous one (== it started with Cap2), we have to use the remaining value
                    least(value_remaining[cv()-1], cap_remaining_1[cv()-1])
                else
                    -- change of coupon this means we are on the 1st usage the new coupon
                    least(value[cv()], cap_remaining_1[cv()-1])
                end
            else 
                -- if not the cap 1 
                0 
            end,

        cap_remaining_1[1] = cap_limit_1[1] - usage_1[1],
        cap_remaining_1[coupon_rn &gt; 1] = case capid[cv()] when 1
            then 
                cap_remaining_1[cv()-1] - usage_1[cv()]
            else 
                -- the remaining 1 doesn't change
                cap_remaining_1[cv()-1]
            end,

        usage_2[1] = case capid[cv()] when 2
            then 
                -- if the value is less that the cap_limit we consumme it else nothing 
                case when value[1] &lt;= cap_limit_2[1] then value[1] else 0 end
            else 
                -- if not the cap 2 
                0 
            end,
        usage_2[coupon_rn &gt; 1] = case capid[cv()] when 2
            then 
                case when coupon[cv()] = coupon[cv()-1] then
                    -- same coupon as the previous one (== it started with Cap2), we have to use the remaining value
                    least(value_remaining[cv()-1], cap_remaining_2[cv()-1])
                else
                    -- change of coupon this means we are on the 1st usage the new coupon
                    least(value[cv()], cap_remaining_2[cv()-1])
                end
            else 
                -- if not the cap 2 
                0 
            end,

        cap_remaining_2[1] = cap_limit_2[1] - usage_2[1],
        cap_remaining_2[coupon_rn &gt; 1] = case capid[cv()] when 2
            then 
                cap_remaining_2[cv()-1] - usage_2[cv()]
            else 
                cap_remaining_2[cv()-1]
            end,


        value_remaining[1] = case capid[cv()] when 1
            then 
                value[1] - usage_1[1]
            else
                value[1] - usage_2[1]
            end,
        value_remaining[coupon_rn &gt; 1] = case capid[cv()] when 1
            then 
                case when coupon[cv()] = coupon[cv()-1] 
                then
                    value_remaining[cv()-1] - usage_1[cv()]
                else
                    value[cv()] - usage_1[cv()]
                end
            else
                case when coupon[cv()] = coupon[cv()-1] 
                then
                    value_remaining[cv()-1] - usage_2[cv()]
                else
                    value[cv()] - usage_2[cv()]
                end
            end
    )
order by coupon, cap_sequence
;

</code></pre>
","3","Answer"
"79583212","79581058","<h4>With a recursive CTE</h4>
<p>For the sake of being exhaustive: it is possible to do it in pure SQL using a (complex, thus I judge it quite inefficient; but only running it on the 13 M rows will tell) recursive CTE.</p>
<p>Here is a <strong>theorical, unoptimized answer</strong> where I will opt to <strong><em>not</em> harcode the count of caps</strong> (harcoding would increase the risk of copy-paste, but would greatly ease the solution: there's room for another answer if someone wants to try… In essence we would have a sort of <code>pivot</code>, where each cap would have its <code>capX_remaining</code> column).</p>
<p>So the difficulty lies in having two parallel decrements: on coupons, and on caps;<br />
while recursive CTEs only allow 1 &quot;thread&quot;.</p>
<p>To overcome it, we can <strong>rely on the possibility of using window function in recursive CTEs</strong> (with precautions, the main being of course that the window function will only see the one previous iteration set of rows, not all accumulated rows).</p>
<p>Thus:</p>
<ul>
<li>our coupon series will be the iterative &quot;thread&quot;</li>
<li>to know how much of the coupon has been consumed, we will subtract <code>max(coupon_usage) over (every cap that was used on this coupon on previous iteration)</code></li>
<li>and, to respect the hereabove precaution, we cannot skip unused coupons of each iteration, but instead we have to have <em>each cap</em> transmitted at <em>each iteration</em>.<br />
So our 2-caps system will have 2 rows for each step, a step being a coupon + cap pair: step 1 (A - Cap 1) will emit 2 rows (A - Cap 1 applied on Cap 1 input; A - Cap 1 applied on Cap 2 input), one deemed &quot;active&quot; (where input cap = applied cap) and all others &quot;inert&quot; (just transmit the unmodified cap value for next iterations)</li>
<li>finally we discard all &quot;technical&quot; rows (iteration 0, and inert pairs)</li>
</ul>
<pre><code>WITH
c AS
(
SELECT cd.coupon,
       cd.value,
       cap_d.cap_name,
       ccm.cap_sequence,
       cap_d.cap_limit,
       row_number() over (/* PARTITION BY any other criteria? */ ORDER BY cd.coupon, ccm.cap_sequence) iter
       --, coupon_usage, cap_remaining 
FROM coupon_data cd
JOIN coupon_cap_mapping ccm   ON ( cd.coupon = ccm.coupon )
JOIN cap_data           cap_d ON ( cap_d.cap_name = ccm.cap_name )
),
r (iter, coupon, value, coupon_cap_name, coupon_remaining, cap_name, coupon_usage, cap_remaining) AS
(
-- Iteration 0: emit a first row with all caps at their maximum: we will start decrementing in the recursive part, at iteration 1.
SELECT 0 iter, coupon, value, c.cap_name coupon_cap_name, value coupon_remaining, cap_d.cap_name, 0 coupon_usage, cap_d.cap_limit cap_remaining
FROM c JOIN cap_data cap_d on 0=0 /* any other criteria? */
WHERE iter = 1
UNION ALL
SELECT
    c.iter, c.coupon, c.value, c.cap_name,
    CASE WHEN r.coupon = c.coupon THEN r.value - max(r.coupon_usage) over (/*PARTITION BY any other criteria?*/) ELSE c.value END coupon_remaining,
    r.cap_name coupon_cap_name,
    CASE
        WHEN c.cap_name &lt;&gt; r.cap_name THEN 0
        ELSE LEAST
        (
            r.cap_remaining,
            CASE WHEN r.coupon = c.coupon THEN r.value - max(r.coupon_usage) over (/*PARTITION BY any other criteria?*/) ELSE c.value END
        )
    END coupon_usage,
    cap_remaining - CASE
        WHEN c.cap_name &lt;&gt; r.cap_name THEN 0
        ELSE LEAST
        (
            r.cap_remaining,
            CASE WHEN r.coupon = c.coupon THEN r.value - max(r.coupon_usage) over (/*PARTITION BY any other criteria?*/) ELSE c.value END
        )
    END cap_remaining
FROM r JOIN c ON c.iter = r.iter + 1 /* any other criteria? */
)
SELECT * FROM r
WHERE iter &gt; 0 AND coupon_cap_name = cap_name
ORDER BY /* any other criteria? */ iter;
</code></pre>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>ITER</th>
<th>COUPON</th>
<th>VALUE</th>
<th>COUPON_CAP_NAME</th>
<th>COUPON_REMAINING</th>
<th>CAP_NAME</th>
<th>COUPON_USAGE</th>
<th>CAP_REMAINING</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>A</td>
<td>100</td>
<td>Cap1</td>
<td>100</td>
<td>Cap1</td>
<td>100</td>
<td>50</td>
</tr>
<tr>
<td>2</td>
<td>A</td>
<td>100</td>
<td>Cap2</td>
<td>0</td>
<td>Cap2</td>
<td>0</td>
<td>70</td>
</tr>
<tr>
<td>3</td>
<td>B</td>
<td>40</td>
<td>Cap2</td>
<td>40</td>
<td>Cap2</td>
<td>40</td>
<td>30</td>
</tr>
<tr>
<td>4</td>
<td>C</td>
<td>120</td>
<td>Cap2</td>
<td>120</td>
<td>Cap2</td>
<td>30</td>
<td>0</td>
</tr>
<tr>
<td>5</td>
<td>C</td>
<td>120</td>
<td>Cap1</td>
<td>90</td>
<td>Cap1</td>
<td>50</td>
<td>0</td>
</tr>
<tr>
<td>6</td>
<td>D</td>
<td>10</td>
<td>Cap1</td>
<td>10</td>
<td>Cap1</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>7</td>
<td>E</td>
<td>200</td>
<td>Cap1</td>
<td>200</td>
<td>Cap1</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>8</td>
<td>E</td>
<td>200</td>
<td>Cap2</td>
<td>200</td>
<td>Cap2</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table></div>
<p>This is demoed <a href=""https://dbfiddle.uk/HdoxVEPa"" rel=""nofollow noreferrer"">in an Oracle 18 fiddle</a>.</p>
<p>In the possible optimizations, you'll notice the duplication of <code>CASE WHEN r.coupon = c.coupon THEN r.value - max(r.coupon_usage) over (/*PARTITION BY any other criteria?*/) ELSE c.value END</code>, and <code>/* previous */ cap_remaining - CASE /* here the full CASE … END AS coupon_usage is replicated */ END AS cap_remaining</code>:<br />
duplicating the code seems to be the only way to avoid creating 2 steps per step (ideally we would like to compute <code>coupon_usage</code> once per step, <em>and</em> use this <code>coupon_usage</code> to decrement both <code>cap_remaining</code> and <code>coupon_remaining</code>; however we cannot use CTE-in-recursive CTE, nor a subselect, so we stay with our expression duplication).</p>
<h5>Why we need to store emit every possible cap on each iteration</h5>
<p>Ideally we would only store the target cap for each iteration (so at #3, as B only has a Cap 2, we have no need of Cap 1; and even for C, which targets both caps, it is only <em>successively</em> (iterations #4 and #5), so at #4 which targets Cap 2 we have no interest in Cap 1 that we know will not be used <em>at this iteration</em>.</p>
<p>But, even if <em>at output</em> a CTE reveals the rows of all iterations,<br />
<em>during its recursive constitution</em> <strong>the CTE only has a 1-iteration deep memory</strong>.</p>
<p>Thus if at iteration #5 we need to access Cap1 last value (from iteration #1), we must have transmitted it (unmodified) from #1 to #2, then to #3, then to #4, because <strong>iteration #5 only sees the rows resulting from iteration #4</strong>.</p>
<p>So we need somewhere to store <em>all</em> caps between iterations, even those not modified:<br />
either we structure our CTE with 1 row per cap (with 1 row &quot;actively&quot; acted on by <code>coupon_usage</code>, all other rows inert, only there to transmit their <code>cap_remaining</code> unmodified to the next iteration),<br />
or we structure our CTE with 1 column per cap (1 active cap column, all others inert):</p>
<p>Iteration with 1 row per cap (structure chosen in this solution):</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>#</th>
<th>Coupon</th>
<th>Value</th>
<th>Coupon Cap Name</th>
<th>Coupon Usage</th>
<th>Cap Name</th>
<th>Cap Remaining Before</th>
<th>Cap Remaining After</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>3</td>
<td>B</td>
<td>40</td>
<td>Cap 2</td>
<td>0</td>
<td>Cap 1</td>
<td>50</td>
<td>50</td>
<td>Inert cap: it does not match this iteration's Coupon Cap Name, so it has no effect (no usage, and after = before)</td>
</tr>
<tr>
<td>3</td>
<td>B</td>
<td>40</td>
<td>Cap 2</td>
<td><strong>40</strong></td>
<td>Cap 2</td>
<td>70</td>
<td>30</td>
<td>Active cap: it is decremented</td>
</tr>
</tbody>
</table></div>
<p>Iteration with 1 column per cap (alternative solution, to be developed):</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>#</th>
<th>Coupon</th>
<th>Value</th>
<th>Coupon Cap Name</th>
<th>Coupon Usage</th>
<th>Cap 1 Remaining</th>
<th>Cap 2 Remaining</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>3</td>
<td>B</td>
<td>40</td>
<td>Cap 2</td>
<td>40</td>
<td>50</td>
<td><strong>30</strong></td>
<td>As this iteration's cap is Cap 2, only the &quot;Cap 2&quot; column(s) change.</td>
</tr>
</tbody>
</table></div>
","4","Answer"
"79584400","79581931","<p>Quite a few logic issues you still need to work out such as not only keeping an inventory, but number of items of each. Also, once you &quot;find&quot; something from your search, that room should no longer have that item to &quot;find&quot; if you search the room again, etc.</p>
<p>Just fixing the bit though for what you asked:</p>
<ol>
<li>item needs to be a list, not a dict. Same with <code>inventory</code> here. You can not <code>.append()</code> to a dict.</li>
<li>You need to handle cases where a room does not contain an <code>'item'</code> key. Can do that by either checking <code>if 'item' in room[current_room].keys()</code> or simply <code>room[current_room].get('item')</code> -&gt; will return the value of the item key if True, will be None if False. (It's apparent you are new to Python - my suggestion is really learn and understand dictionaries and lists. How they work, how to access the elements within them, etc.)</li>
<li>No need to use f-string if you are not imputing any variable into the string</li>
</ol>
<p>Again, as I stated before, there is no need for even that <code>item</code> dict/list. You have them item in your room dict, so what's the purpose of the item dict?</p>
<pre><code>room = {
    'Main Entry': {'East': 'Main Floor'},
    'Main Floor': {'North': 'North Hall', 'South': 'South Hall', 'East': 'Clothes Store', 'West': 'Main Entry', 'item': 'Gas Mask'},
    'South Hall': {'East': 'Food Court', 'North': 'Main Floor', 'item': 'Knowledge of Toaster Store'},
    'North Hall': {'East': 'Storage Room', 'South': 'Main Floor', 'item': 'Stuffed Shark'},
    'Food Court': {'West': 'South Hall', 'item': 'Block of Old Cheese'},
    'Clothes Store': {'North': 'Theater', 'West': 'Main Floor', 'item': 'Baseball Bat'},
    'Theater': {'South': 'Clothes Store'}
}

item = {
     'Gas Mask',
     'Stuffed Shark',
     'Bubble Wrap',
     'Knowledge of Toaster Store',
     'Block of Old Cheese',
     'Baseball Bat'
}

inventory = []

#The current_room function tracks which &quot;room&quot; the user is in, and starts them in the Main Entry
current_room = 'Main Entry'
print('Allister &amp; Doodle enter the mall. The word was, one of their recurring enemies-Lumina the jellyfish lady-was putting' \
'together a makeshift doomsday device! They figured it was unlikely to do actual doomsday levels of damage, but they had the day' \
'off and figured they might as well try and put a stop to it. Because they''re just that nice!' \
'Input Search to look for items! You''ll need Bubble Wrap, a Baseball Bat, and a Block of Old Cheese to win the game.' \
'Once-and only once-you have all three, make your way to the Theater (North of the Clothes Store) for the final showdown!' \
'Input North, South, East, or West to have them move through the mall! Or input exit, if you have something better to do.')

#The while loop plays until the user enters exit, to which it then ends the game.
while current_room != 'exit':
    print(f&quot;Allister &amp; Doodle are in the {current_room}&quot;)
    command = input(&quot;Enter command: &quot;)
    if command == 'exit':
        current_room = 'exit'
    if command == 'Search':
        items_found = room[current_room].get('item')
        if items_found:
            inventory.append(items_found)
            print(f&quot;{items_found} found.&quot;)
            
        else:
            print(&quot;Nothin'.&quot;)
    elif command in ['North', 'South', 'East', 'West']:
        direction = command
        if direction in room[current_room]:
            current_room = room[current_room][direction]
        else:
            print(&quot;Can't go that way&quot;)
    else:
        print(&quot;No can do&quot;)

print(&quot;You have exited the game.&quot;)
</code></pre>
","0","Answer"
"79584584","79583403","<p>You need to <strong>delay your logic</strong> until the <strong>query is available</strong>, such as using the <code>wp</code> hook or inside template files with proper checks.</p>
<p>If you're trying to modify how the <code>[products]</code> shortcode behaves, or fix custom code depending on <code>is_page()</code> / <code>is_post_type_archive()</code> etc., <strong>wrap your code in the correct hook</strong> like this:</p>
<pre><code>add_action( 'wp', 'my_custom_woocommerce_logic' );

function my_custom_woocommerce_logic() {
    // Now it's safe to use conditional tags
    if ( is_page( 'fashion-beauty' ) ) {
        // Your custom logic here
    }
}
</code></pre>
<h3></h3>
","-1","Answer"
"79585502","79581058","<p>Tryed to follow the logic and the steps expressed in your question. This answer use the MODEL clause too. The start is your query (with just the addition of the Row_Number()) - I put it here as a CTE named grid:</p>
<pre><code>WITH 
  grid AS
    ( SELECT cd.coupon, cd.value, cap_d.cap_name, ccm.cap_sequence,
             cap_d.cap_limit, 
             Row_Number() Over( Order By cd.coupon, ccm.cap_sequence ) as RN
      FROM coupon_data cd
      JOIN coupon_cap_mapping ccm ON ( cd.coupon = ccm.coupon )
      JOIN cap_data           cap_d ON ( cap_d.cap_name = ccm.cap_name )
      ORDER BY cd.coupon, ccm.cap_sequence
    )
</code></pre>
<p>... it is quite confusing working with sequences 1 and 2 and cap naames 1 and 2 that are interchangable but, hopefuly, this could help you find the solution. As already mentioned the MODEL clause here is following the steps you described in the question...</p>
<pre><code>--   S Q L :
SELECT COUPON, VALUE, CAP_NAME, CAP_SEQUENCE, CAP_LIMIT, USED_VALUE, REMAINING_LIMIT
FROM  ( Select    * 
        From      grid 
        MODEL  Dimension By ( RN, COUPON, CAP_NAME, CAP_SEQUENCE )
               Measures ( VALUE, 0 as REMAINING_VALUE, 0 as USED_VALUE, 
                          CAP_LIMIT, 0 as REMAINING_LIMIT
                        )
              Rules ( -- Starting with cap_sequence = 1 (all coupons have it)
                      USED_VALUE[ANY, ANY, ANY, 1] = Least( VALUE[CV(), CV(), CV(), CV()], CAP_LIMIT[CV(), CV(), CV(), CV()] ), 
                      REMAINING_VALUE[ANY, ANY, ANY, 1] = VALUE[CV(), CV(), CV(), CV()] - Least( VALUE[CV(), CV(), CV(), CV()], CAP_LIMIT[CV(), CV(), CV(), CV()] ), 
                      REMAINING_LIMIT[ANY, ANY, ANY, 1] = CAP_LIMIT[CV(), CV(), CV(), CV()] - Least( VALUE[CV(), CV(), CV(), CV()], CAP_LIMIT[CV(), CV(), CV(), CV()] ), 
                      -- Handling coupons that have cap_sequence = 2 too
                      USED_VALUE[ANY, ANY, ANY, 2] = Sum(REMAINING_VALUE)[RN &lt; CV(), COUPON Is Not Null, CAP_NAME Is Not Null, CAP_SEQUENCE &gt; 0], 
                      REMAINING_LIMIT[ANY, ANY, ANY, 2] = CAP_LIMIT[CV(), CV(), CV(), CV()] - USED_VALUE[CV(), CV(), CV(), CV()], 
                      -- your row 3  below
                      USED_VALUE[ANY, ANY, ANY, ANY] = Case When Max(REMAINING_LIMIT)[CV() - 1, ANY, CV(), ANY] &gt; 0
                                                            Then Least(VALUE[CV(), CV(), CV(), CV()], Max(REMAINING_LIMIT)[CV() - 1, ANY, CV(), ANY])
                                                       Else USED_VALUE[CV(), CV(), CV(), CV()]
                                                       End, 
                     REMAINING_LIMIT[ANY, ANY, ANY, ANY] = Case When Max(REMAINING_LIMIT)[CV() - 1, ANY, CV(), ANY] &gt; 0
                                                                Then Max(REMAINING_LIMIT)[CV() - 1, ANY, CV(), ANY] - USED_VALUE[CV(), CV(), CV(), CV()]
                                                           Else REMAINING_LIMIT[CV(), CV(), CV(), CV()]
                                                           End, 
                     -- your row 4  below
                     USED_VALUE[ANY, ANY, ANY, ANY] = Case When Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY] &gt; 0 
                                                           Then Least( VALUE[CV(), CV(), CV(), CV()], CAP_LIMIT[CV(), CV(), CV(), CV()], Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY] )
                                                      Else USED_VALUE[CV(), CV(), CV(), CV()]
                                                      End,
                     REMAINING_LIMIT[ANY, ANY, ANY, ANY] = Case When Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY] &gt; 0 
                                                                Then Min(REMAINING_LIMIT)[RN = CV(), ANY, CAP_NAME = CV(), ANY]
                                                           Else Greatest(REMAINING_LIMIT[CV(), CV(), CV(), CV()], 0)
                                                           End, 
                     -- your row 4  below
                     USED_VALUE[ANY, ANY, ANY, ANY] = Case When Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY] &gt; 0 And 
                                                                VALUE[CV(), CV(), CV(), CV()] &gt; Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY]
                                                           Then Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY]
                                                      Else USED_VALUE[CV(), CV(), CV(), CV()]
                                                      End,
                    -- your row 5 - 8  below
                     USED_VALUE[ANY, ANY, ANY, ANY] = Case When Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY] = 0 OR 
                                                                Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME != CV(), ANY] = 0
                                                           Then 0
                                                      Else USED_VALUE[CV(), CV(), CV(), CV()]
                                                      End,
                     REMAINING_LIMIT[ANY, ANY, ANY, ANY] = Case When Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME = CV(), ANY] = 0 OR 
                                                                     Min(REMAINING_LIMIT)[RN &lt; CV(), ANY, CAP_NAME != CV(), ANY] = 0
                                                                Then 0
                                                           Else REMAINING_LIMIT[CV(), CV(), CV(), CV()]
                                                           End
                    )
      )
ORDER BY RN
</code></pre>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: left;"">COUPON</th>
<th style=""text-align: right;"">VALUE</th>
<th style=""text-align: left;"">CAP_NAME</th>
<th style=""text-align: right;"">CAP_SEQUENCE</th>
<th style=""text-align: right;"">CAP_LIMIT</th>
<th style=""text-align: right;"">USED_VALUE</th>
<th style=""text-align: right;"">REMAINING_LIMIT</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: left;"">A</td>
<td style=""text-align: right;"">100</td>
<td style=""text-align: left;"">Cap1</td>
<td style=""text-align: right;"">1</td>
<td style=""text-align: right;"">150</td>
<td style=""text-align: right;"">100</td>
<td style=""text-align: right;"">50</td>
</tr>
<tr>
<td style=""text-align: left;"">A</td>
<td style=""text-align: right;"">100</td>
<td style=""text-align: left;"">Cap2</td>
<td style=""text-align: right;"">2</td>
<td style=""text-align: right;"">70</td>
<td style=""text-align: right;"">0</td>
<td style=""text-align: right;"">70</td>
</tr>
<tr>
<td style=""text-align: left;"">B</td>
<td style=""text-align: right;"">40</td>
<td style=""text-align: left;"">Cap2</td>
<td style=""text-align: right;"">1</td>
<td style=""text-align: right;"">70</td>
<td style=""text-align: right;"">40</td>
<td style=""text-align: right;"">30</td>
</tr>
<tr>
<td style=""text-align: left;"">C</td>
<td style=""text-align: right;"">120</td>
<td style=""text-align: left;"">Cap2</td>
<td style=""text-align: right;"">1</td>
<td style=""text-align: right;"">70</td>
<td style=""text-align: right;"">30</td>
<td style=""text-align: right;"">0</td>
</tr>
<tr>
<td style=""text-align: left;"">C</td>
<td style=""text-align: right;"">120</td>
<td style=""text-align: left;"">Cap1</td>
<td style=""text-align: right;"">2</td>
<td style=""text-align: right;"">150</td>
<td style=""text-align: right;"">0</td>
<td style=""text-align: right;"">0</td>
</tr>
<tr>
<td style=""text-align: left;"">D</td>
<td style=""text-align: right;"">10</td>
<td style=""text-align: left;"">Cap1</td>
<td style=""text-align: right;"">1</td>
<td style=""text-align: right;"">150</td>
<td style=""text-align: right;"">0</td>
<td style=""text-align: right;"">0</td>
</tr>
<tr>
<td style=""text-align: left;"">E</td>
<td style=""text-align: right;"">200</td>
<td style=""text-align: left;"">Cap1</td>
<td style=""text-align: right;"">1</td>
<td style=""text-align: right;"">150</td>
<td style=""text-align: right;"">0</td>
<td style=""text-align: right;"">0</td>
</tr>
<tr>
<td style=""text-align: left;"">E</td>
<td style=""text-align: right;"">200</td>
<td style=""text-align: left;"">Cap2</td>
<td style=""text-align: right;"">2</td>
<td style=""text-align: right;"">70</td>
<td style=""text-align: right;"">0</td>
<td style=""text-align: right;"">0</td>
</tr>
</tbody>
</table></div>
<p><a href=""https://dbfiddle.uk/4ZqwMDqa"" rel=""nofollow noreferrer"">fiddle</a></p>
","2","Answer"
"79586650","79586636","<p>This is invalid C++. This works for you because MinGW GCC implicitly enables <code>-fms-extensions</code> (imitating MSVC's non-standard features).</p>
<p>I doubt this is new in GCC 14. I don't have a MinGW GCC 13 at hand to test, but it always did this (added the flag), and GCC 13 on Linux with this flag accepts your code too.</p>
<p>Pass <code>-fno-ms-extensions</code> to disable this nonsense. I'm not sure why it's on by default. (And you'd think <code>-std=c++?? -pedantic-errors</code> would disable this, but alas it doesn't.)</p>
<hr />
<p>I've <a href=""https://gcc.gnu.org/bugzilla/show_bug.cgi?id=119923"" rel=""noreferrer"">reported a bug to GCC</a>, suggesting that they enable this flag by default when <code>-pedantic-errors</code> is used.</p>
","28","Answer"
"79588669","79588481","<p>You say you want</p>
<blockquote>
<p>I would like to avoid doing if else statements after every line like</p>
</blockquote>
<p>and you want</p>
<blockquote>
<p>only have to declare the condition once</p>
</blockquote>
<p>That's what your code does already:</p>
<blockquote>
<pre><code>std::cout &lt;&lt; &quot;You wake up confused in a tiny, unfamiliar room. It's dark and the air is heavy and thick.\n&quot;;
waitOrEnter(3);
std::cout &lt;&lt; &quot;You see a door right in front of you.\n&quot;;
waitOrEnter(3);
</code></pre>
</blockquote>
<p>If you like you can split the implementation into two functions. I would strongly advise to not use globals, but pass <code>playthrough</code> as parameter, so you can change your <code>waitOrEnter</code> function to:</p>
<pre><code>void waitOrEnter(double seconds,int playthrough) {
      if (playthrough == 0) wait(seconds);
      else enter();
}
</code></pre>
<p>Where <code>wait</code> and <code>enter</code> are the two separate functions you want to write.</p>
<hr />
<p>You could use a function pointer to call one of two functions, but it requires the functions to be of same type and there is no need to add such complexity when a plain function can do what you want already.</p>
","10","Answer"
"79589928","79589888","<p>I'm not quite sure if I get &quot;bottom to top&quot; part, but from your given example maybe this would work:</p>
<p><code>=LET(a,A1:B6,b,CHOOSECOLS(a,1),c,CHOOSECOLS(a,2),HSTACK(SCAN(&quot;&quot;,b,LAMBDA(x,y,IF(y&lt;&gt;&quot;&quot;,y,x))),c))</code></p>
<p><a href=""https://i.sstatic.net/lQq7mzo9.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/lQq7mzo9.png"" alt=""enter image description here"" /></a></p>
<p>Shorter, but with 2 inputs:</p>
<p><code>=HSTACK(SCAN(&quot;&quot;,A1:A6,LAMBDA(x,y,IF(y&lt;&gt;&quot;&quot;,y,x))),B1:B6)</code></p>
","2","Answer"
"79590615","79574309","<p>According to the OP's asking I'm providing my above comment as an answer ...</p>
<blockquote>
<p><em>As for the OP's use case, the simplest, most straight forward way is as follows. Create another function via <code>bind</code>. And since all of <code>func</code>'s properties are assigned directly, the best way of assigning an entirely decoupled set of <code>func</code> specific own properties to <code>f2</code> is by utilizing both <code>Object.assign</code> and <code>structuredClone</code> ... all-in-one solution ... <code>const f2 = Object.assign(func.bind(), structuredClone(Object.assign({}, func)));</code></em></p>
</blockquote>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function blueprint(a, b) {
  return [a, b].join(' ');
}
blueprint.foo = 'foo';

const bpReference = blueprint;
const boundBpCopy = Object
  .assign(
    blueprint.bind(),
    structuredClone(
      Object.assign({}, blueprint)
    )
  );

console.log({ 'bpReference.foo': bpReference.foo });
console.log({ 'boundBpCopy.foo': boundBpCopy.foo });

blueprint.foo = 'BAR';

console.log({ 'bpReference.foo': bpReference.foo });
console.log({ 'boundBpCopy.foo': boundBpCopy.foo });

console.log(boundBpCopy('hello', 'world'));</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console-wrapper { bottom: auto; right: auto; top: 0; min-height: 100%; }</code></pre>
</div>
</div>
</p>
<p>The OP's simplified version of the above provided stack snippet ...</p>
<pre><code>const f2 = Object.assign(func.bind(),func);
</code></pre>
<p>... will create just a shallow copy for each of <code>func</code>'s own properties where such a property is an object itself and not just a primitive value.</p>
","1","Answer"
"79591270","79591160","<blockquote>
<p>Why do I need that line of code?</p>
</blockquote>
<p>We need that line to determine what the node is where we start the search for the correct insertion point, and the obvious place where such a search should start is at the <em>root</em> of the tree. As this private <code>insert</code> function will be called recursively -- each time with a different node as argument -- it is necessary to also specify the node where to <em>start</em> the search, which is the root node.</p>
<p>That's why we call the private <code>insert</code> function with <code>root</code> as argument.</p>
<blockquote>
<p>Is the root actively changing?</p>
</blockquote>
<p>No, the root of the tree remains the same one. What changes is the &quot;scope&quot; of the search, i.e. which subtree we will search in. It is essential to realize that the private <code>insert</code> function is called again and again, but each time with a different subtree -- to which the search will be limited. So the parameter which you have called <code>value</code> (NB: <code>node</code> would have been a better name for it) will take different nodes, determined by the caller. Its purpose is to limit the search to a certain subtree, of which that node happens to be the root. The initial call must consider the <em>whole</em> tree, so that initial call will get the <code>root</code> as argument.</p>
<blockquote>
<p>Is the private function for the recursion always returning the first parent root as the root?</p>
</blockquote>
<p>The function returns the node that is the root of the relevant subtree <em>after</em> the new node has been inserted into that subtree. In most cases that will be the same node that was the root of the subtree at the time the call was made, but obviously it is <em>not</em> the same node when we had passed <code>null</code> as argument to that call. In that case the previously empty subtree (the <code>null</code>) is replaced with a 1-node subtree, i.e. the new node which is the root of its own subtree.</p>
","1","Answer"
"79591719","79589121","<p>Try to make <code>WrappedFunction</code> generic:</p>
<pre class=""lang-scala prettyprint-override""><code>case class WrappedFunction[W1 &lt;: Wrapped, W2 &lt;: Wrapped](function: (W1, W2) =&gt; Wrapped)
</code></pre>
<p>or</p>
<pre class=""lang-scala prettyprint-override""><code>case class WrappedFunction[W1 &lt;: Wrapped, W2 &lt;: Wrapped, W3 &lt;: Wrapped](function: (W1, W2) =&gt; W3)
</code></pre>
<p>or</p>
<pre class=""lang-scala prettyprint-override""><code>case class WrappedFunction[-W1 &lt;: Wrapped, -W2 &lt;: Wrapped, +W3 &lt;: Wrapped](function: (W1, W2) =&gt; W3)
</code></pre>
<p>Then your code compiles: <a href=""https://scastie.scala-lang.org/DmytroMitin/ELIkgesXRNCmWNaflxFFpg/5"" rel=""nofollow noreferrer"">https://scastie.scala-lang.org/DmytroMitin/ELIkgesXRNCmWNaflxFFpg/5</a></p>
<p>You can read about variances:</p>
<p><a href=""https://stackoverflow.com/questions/73459011/variance-in-function-types-scala"">Variance in function types (Scala)</a></p>
<p><a href=""https://stackoverflow.com/questions/41098105/subtyping-between-function-types"">Subtyping between function types</a></p>
<p><a href=""https://docs.scala-lang.org/tour/variances.html"" rel=""nofollow noreferrer"">https://docs.scala-lang.org/tour/variances.html</a></p>
<p><a href=""https://docs.scala-lang.org/scala3/book/types-variance.html"" rel=""nofollow noreferrer"">https://docs.scala-lang.org/scala3/book/types-variance.html</a></p>
","4","Answer"
"79593866","79593836","<p>Try using basic math: if a=(b+c)/2 then c=2*a-b. One solution could be (assuming no overflows):</p>
<pre><code>def main_color(color1,result):
  red = 2*int(result[:2], 16) - int(color1[:2], 16)
  green = 2*int(result[2:4], 16) - int(color1[2:4], 16)
  blue = 2*int(result[4:6], 16) - int(color1[4:6], 16)
  zpad = lambda x: x if len(x)==2 else '0' + x
  return zpad(hex(red)[2:]) + zpad(hex(green)[2:]) + zpad(hex(blue)[2:])
</code></pre>
","0","Answer"
"79594147","79593836","<p>Extended answer from the idea of @Eddi. I print the colors in Jupyter:</p>
<pre><code>from IPython.display import display, HTML
import numpy as np

def hex_to_rgb(hex_color):
    &quot;&quot;&quot;Convert hex string to RGB array.&quot;&quot;&quot;
    hex_color = hex_color.strip('#')
    return np.array([int(hex_color[i:i+2], 16) for i in (0, 2, 4)], dtype=float)

def rgb_to_hex(rgb_array):
    &quot;&quot;&quot;Convert RGB array to hex string.&quot;&quot;&quot;
    return ''.join(f'{int(c):02X}' for c in np.clip(rgb_array, 0, 255))

def find_second_color_hex(color1_rgb, result_rgb, ratio=0.5):
    &quot;&quot;&quot;Calculate second color in hex based on color1 and result.&quot;&quot;&quot;
    color2_rgb = ((result_rgb - color1_rgb * (1 - ratio)) / ratio).clip(0, 255)
    return rgb_to_hex(color2_rgb)

def print_colors(color1_hex, color2_hex, result_hex):
    &quot;&quot;&quot;Display color hex codes with colored text.&quot;&quot;&quot;
    html = f&quot;&quot;&quot;
    &lt;div style=&quot;font-family: monospace;&quot;&gt;
        &lt;span style=&quot;color: #{color1_hex};&quot;&gt;Color1: #{color1_hex}&lt;/span&gt;&lt;br&gt;
        &lt;span style=&quot;color: #{color2_hex};&quot;&gt;Color2: #{color2_hex}&lt;/span&gt;&lt;br&gt;
        &lt;span style=&quot;color: #{result_hex};&quot;&gt;Result: #{result_hex}&lt;/span&gt;
    &lt;/div&gt;
    &quot;&quot;&quot;
    display(HTML(html))

if __name__ == &quot;__main__&quot;:
    color1_hex = &quot;FF79FF&quot;
    result_hex = &quot;4c34eb&quot;

    color1_rgb = hex_to_rgb(color1_hex)
    result_rgb = hex_to_rgb(result_hex)

    color2_hex = find_second_color_hex(color1_rgb, result_rgb)

    print_colors(color1_hex, color2_hex, result_hex)
</code></pre>
<p>Output:</p>
<p><a href=""https://i.sstatic.net/Z81ob7mS.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Z81ob7mS.jpg"" alt=""enter image description here"" /></a></p>
","3","Answer"
"79596309","79593252","<p>The normal way in standard C would be to not use a fixed constant, but to pass the array sizes along as parameters:</p>
<pre><code>void func (int rows, int cols, float tab[rows][cols])
{
  ...
  tab[i][j] = something;
}
</code></pre>
<p>And since array parameters get adjusted to a pointer to the first element, that's 100% equivalent to:</p>
<pre><code>void func (int rows, int cols, float (*tab)[cols]);
</code></pre>
<p>This works on any decent C compiler released after year 1999.</p>
<hr />
<p>The next problem is that VS2022 is <em>not</em> a decent C compiler and it is using an older standard even than the one from year 1999. So it won't support modern standard C.</p>
<p>On such very old and outdated compilers, you would have to resort to &quot;mangled 2D arrays&quot;, ie represented as a 1D array:</p>
<pre class=""lang-c prettyprint-override""><code>void func (int rows, int cols, float* tab)
{
 ...  tab[i*cols + j] = something;
}
</code></pre>
<p>Alternatively investigate how to set VS to use gcc or clang instead of outdated MSVC.</p>
","2","Answer"
"79598096","79598067","<p>Your question contains a lot of design questions.</p>
<p>I am not too sure what you want. Quick-fix (dirty)</p>
<pre class=""lang-r prettyprint-override""><code>.my_function = \(a, n) a + n^2L # . to indicate internal use

wrapper = \(value, func, arg.name, ...) {
  args = list(...)
  args[[arg.name]] = value
  do.call(func, args)
}
</code></pre>
<pre class=""lang-r prettyprint-override""><code>&gt; wrapper(value=4, func=.my_function, arg.name='n', a=3)
[1] 19
</code></pre>
<p>I do not see much sense behind this.</p>
","4","Answer"
"79598241","79598067","<p>You can use <code>substitute()</code> to create an unevaluated call to the supplied <code>FUNC</code> with <code>...</code> expanded. Then add the <code>VALUE</code> as a named argument to the call using the <code>ARG.NAME</code>. Finally evaluate the constructed call in the caller’s environment.</p>
<pre class=""lang-r prettyprint-override""><code>EXISTING.FUNCTION &lt;- function(a, n) a + n^2

MY.WRAPPER.FUNCTION &lt;- function(VALUE, FUNC, ARG.NAME, ...) {
  call &lt;- substitute(FUNC(...))
  call[[ARG.NAME]] &lt;- substitute(VALUE)
  eval.parent(call)
}

MY.WRAPPER.FUNCTION(VALUE = 4, FUNC = EXISTING.FUNCTION, ARG.NAME = 'n', a = 3)
#&gt; [1] 19
</code></pre>
<p>Compared to the <code>do.call()</code> approach, constructing the call like this has the benefit of not forcing the evaluation of <code>...</code> and <code>VALUE</code> before the call to <code>FUNC</code>. This may or may not be important, depending on how <code>FUNC</code> treats its arguments.</p>
<p>(Note the slight obfuscation (capitalization) of the wrapper argument names. That’s for some protection against partial matching of named arguments in <code>...</code> to the formals.)</p>
","5","Answer"
"79599358","79599307","<p>I use the readxl package instead of the openxlsx package, but the end result appears to be the same (one dataframe for each workbook, sheets joined by ID):</p>
<pre class=""lang-r prettyprint-override""><code>library(tidyverse)
library(openxlsx) # included for write.xlsx
library(readxl)
library(fs)

# create fake excel file for demonstration, code borrowed from this question:
#https://stackoverflow.com/questions/61601575/create-multiple-sheets-in-excel-workbook-from-r-tables-using-xlsx-package

data(mtcars)
data(ChickWeight)

# making the two datasets the same size and creating a fake id variable to merge by
ChickWeight2&lt;-ChickWeight %&gt;% head(32) %&gt;% mutate(id=c(1:32))
mtcars2&lt;-mtcars %&gt;% mutate(id=c(1:32))

xl_lst &lt;- list('df1_name' = ChickWeight2, 'df2_name' = mtcars2)

# make two xslx files with two sheets each (same data, written twice)
write.xlsx(xl_lst, file = &quot;xl_with_2_worksheets.xlsx&quot;)
write.xlsx(xl_lst, file = &quot;xl_with_2_worksheets_v2.xlsx&quot;)

# function to read in the file and bind the excel sheets
list_of_xlsx_files &lt;- dir_ls(glob = &quot;*.xlsx&quot;)
rm(ChickWeight, ChickWeight2, mtcars, mtcars2, xl_lst)

df_list &lt;- lst()

for (i in seq_along(list_of_xlsx_files)) {
  path &lt;- as.character(list_of_xlsx_files[[i]])
  df_list[[i]] &lt;- path %&gt;% 
    excel_sheets() %&gt;% 
    set_names() %&gt;% 
    map(read_excel, path = path) %&gt;%
    reduce(full_join)
  names(df_list)[i] &lt;- path
}
#&gt; Joining with `by = join_by(id)`
#&gt; Joining with `by = join_by(id)`

list2env(df_list, envir = .GlobalEnv)
#&gt; &lt;environment: R_GlobalEnv&gt;

ls()
#&gt; [1] &quot;df_list&quot;                      &quot;i&quot;                           
#&gt; [3] &quot;list_of_xlsx_files&quot;           &quot;path&quot;                        
#&gt; [5] &quot;xl_with_2_worksheets_v2.xlsx&quot; &quot;xl_with_2_worksheets.xlsx&quot;

str(xl_with_2_worksheets.xlsx)
#&gt; tibble [32 × 16] (S3: tbl_df/tbl/data.frame)
#&gt;  $ weight: num [1:32] 42 51 59 64 76 93 106 125 149 171 ...
#&gt;  $ Time  : num [1:32] 0 2 4 6 8 10 12 14 16 18 ...
#&gt;  $ Chick : chr [1:32] &quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot; ...
#&gt;  $ Diet  : chr [1:32] &quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot; ...
#&gt;  $ id    : num [1:32] 1 2 3 4 5 6 7 8 9 10 ...
#&gt;  $ mpg   : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
#&gt;  $ cyl   : num [1:32] 6 6 4 6 8 6 8 4 4 6 ...
#&gt;  $ disp  : num [1:32] 160 160 108 258 360 ...
#&gt;  $ hp    : num [1:32] 110 110 93 110 175 105 245 62 95 123 ...
#&gt;  $ drat  : num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
#&gt;  $ wt    : num [1:32] 2.62 2.88 2.32 3.21 3.44 ...
#&gt;  $ qsec  : num [1:32] 16.5 17 18.6 19.4 17 ...
#&gt;  $ vs    : num [1:32] 0 0 1 1 0 1 0 1 1 1 ...
#&gt;  $ am    : num [1:32] 1 1 1 0 0 0 0 0 0 0 ...
#&gt;  $ gear  : num [1:32] 4 4 4 3 3 3 3 4 4 4 ...
#&gt;  $ carb  : num [1:32] 4 4 1 1 2 1 4 2 2 4 ...

str(xl_with_2_worksheets_v2.xlsx)
#&gt; tibble [32 × 16] (S3: tbl_df/tbl/data.frame)
#&gt;  $ weight: num [1:32] 42 51 59 64 76 93 106 125 149 171 ...
#&gt;  $ Time  : num [1:32] 0 2 4 6 8 10 12 14 16 18 ...
#&gt;  $ Chick : chr [1:32] &quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot; ...
#&gt;  $ Diet  : chr [1:32] &quot;1&quot; &quot;1&quot; &quot;1&quot; &quot;1&quot; ...
#&gt;  $ id    : num [1:32] 1 2 3 4 5 6 7 8 9 10 ...
#&gt;  $ mpg   : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
#&gt;  $ cyl   : num [1:32] 6 6 4 6 8 6 8 4 4 6 ...
#&gt;  $ disp  : num [1:32] 160 160 108 258 360 ...
#&gt;  $ hp    : num [1:32] 110 110 93 110 175 105 245 62 95 123 ...
#&gt;  $ drat  : num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
#&gt;  $ wt    : num [1:32] 2.62 2.88 2.32 3.21 3.44 ...
#&gt;  $ qsec  : num [1:32] 16.5 17 18.6 19.4 17 ...
#&gt;  $ vs    : num [1:32] 0 0 1 1 0 1 0 1 1 1 ...
#&gt;  $ am    : num [1:32] 1 1 1 0 0 0 0 0 0 0 ...
#&gt;  $ gear  : num [1:32] 4 4 4 3 3 3 3 4 4 4 ...
#&gt;  $ carb  : num [1:32] 4 4 1 1 2 1 4 2 2 4 ...
</code></pre>
<p><sup>Created on 2025-04-30 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","1","Answer"
"79601498","79599307","<p>To read an .xlsx workbook, we may use <code>openxlsx::getSheetNames()</code>
and <code>openxlsx::read.xlsx()</code> to loop over the sheets.<sup><a href=""https://stackoverflow.com/a/48318259/6574038"">1</sup></a> (If we were willing to use the  <em>rio</em> package, this could be done in one step.<sup><a href=""https://stackoverflow.com/a/49451897/6574038"">2</sup></a>) This loop—using <code>lapply()</code> will yield a list that we can easily <code>merge()</code> using <code>Reduce()</code>.<sup><a href=""https://stackoverflow.com/q/8091303/6574038"">3</sup></a></p>
<p>We might want to read the directory into a list to avoid cluttering the workspace with many temporary objects or hardcoded object names via <code>assign()</code> that may already exist.</p>
<pre><code>FX &lt;- \(path_to_ws) {
  openxlsx::getSheetNames(path_to_ws) |&gt; 
    lapply(\(x) openxlsx::read.xlsx(path_to_ws, x)) |&gt; 
    Reduce(f=\(...) merge(..., all=TRUE))
}
</code></pre>
<h2>Usage</h2>
<p>We'll use <code>list.files()</code> to get the paths of three workbooks, as in this example. <code>basename()</code> is then useful to <code>setNames()</code>.</p>
<pre><code>&gt; path_to_dir &lt;- './'  ## specify path to your requirements
&gt; ws_pths &lt;-  ## get links to wb's
+   list.files(path_to_dir, pattern='.*\\.xlsx$', full.names=TRUE)
&gt; lapply(ws_pths |&gt; setNames(basename(ws_pths)), FX)  ## loop over wb's
$xl_w_2_ws_01.xlsx
  id   X.1   X.2   X.3   X.4   Y.1   Y.2   Y.3   Y.4
1  1  1.37 -0.11  1.30  0.64 -0.31 -0.43  0.46 -1.72
2  2 -0.56  1.51  2.29 -0.28 -1.78 -0.26  0.70 -0.78
3  3  0.36 -0.09 -1.39 -2.66 -0.17 -1.76  1.04 -0.85
4  4  0.63  2.02 -0.28 -2.44  1.21  0.46 -0.61 -2.41
5  5  0.40 -0.06 -0.13  1.32  1.90 -0.64  0.50  0.04

$xl_w_2_ws_02.xlsx
  id   X.1   X.2   X.3   X.4   Y.1  Y.2   Y.3   Y.4
1  1  0.21  0.43  0.32  0.28 -0.37 1.30 -1.04  0.58
2  2 -0.36 -0.81 -0.78  0.68  0.19 0.34 -0.09  0.77
3  3  0.76  1.44  1.58  0.09  0.58 1.04  0.62  0.46
4  4 -0.73 -0.43  0.64 -2.99  1.40 0.92 -0.95 -0.89
5  5 -1.37  0.66  0.09  0.28 -0.73 0.72 -0.54 -1.10

$xl_w_2_ws_03.xlsx
  id   X.1   X.2   X.3   X.4   Y.1   Y.2   Y.3   Y.4
1  1  1.51  0.61  1.39 -0.86  1.20  0.11 -0.03 -0.38
2  2  0.26 -0.22 -0.48 -1.13  1.04 -0.42  0.11 -0.51
3  3  0.09 -0.18  0.65 -1.46 -1.00 -0.12 -0.49  2.70
4  4 -0.12  0.93  1.39  0.08  1.85  0.19 -0.50 -1.36
5  5 -1.19  0.82 -1.11  0.65 -0.67  0.12 -1.66  0.14
</code></pre>
<hr />
<p><em>Data:</em></p>
<p>Creates three .xlsx workbooks in current dir.</p>
<pre><code>set.seed(42)
lapply(1:3, \(i, n=5) {
  df1 &lt;- data.frame(id=seq_len(n), X=matrix(round(rnorm(n*4), 2), n, 4))
  df2 &lt;- data.frame(id=seq_len(n), Y=matrix(round(rnorm(n*4), 2), n, 4))
  openxlsx::write.xlsx(list(df1_name=df1, df2_name=df2), 
                       file=sprintf(&quot;xl_w_2_ws_%02d.xlsx&quot;, i))
}) |&gt; invisible()
</code></pre>
","1","Answer"
"79602271","79602239","<p>Use any of these as the last line:</p>
<pre><code># 1 - unlist
mutate(Change = unlist(pick(last_col()) - pick(last_col(offset= 1))))

# 2 - pull
mutate(Change = pull(pick(last_col()) - pick(last_col(offset= 1)), 1))

# 3 - pull alternative
mutate(Change = pull(pick(everything()), -1) - pull(pick(everything()), -2))

# 4 - across
mutate(across(last_col(), .names = &quot;Change&quot;) - pick(last_col(offset = 1)))
</code></pre>
","1","Answer"
"79602335","79602252","
<p><strong>Remove <code>| Format-List</code></strong> from your <code>$AppStatObj = [PSCustomObject]@{ ... } | Format-List</code> statement.</p>
<p>What <code>... | Format-List</code> outputs (as well as the other <code>Format-*</code> cmdlets) isn't <em>data</em> anymore; it is <em>objects that provide for-display formatting instructions</em> to PowerShell, and they're only useful for that.<sup>[1]</sup></p>
<p>Thus, <strong>if you want to output <em>data</em>, for later <em>programmatic processing</em>, never use the output from <code>Format-*</code> calls</strong>.</p>
<p>In your case, output the <code>[pscustomobject]</code> instance <em>as-is</em>; to select a subset of properties from a preexisting object, use <code>Select-Object</code>.</p>
<p>See <a href=""https://stackoverflow.com/a/55174715/45375"">this answer</a> for more information.</p>
<hr />
<p><sup>[1] <code>Format-*</code> cmdlets output instances of  <a href=""https://learn.microsoft.com/en-us/dotnet/api/microsoft.powershell.commands.internal.format"" rel=""nofollow noreferrer""><code>Microsoft.PowerShell.Commands.Internal.Format.*</code></a> types, with fixed properties that are unrelated to the input objects being formatted by them. Thus, unlike the input object in your case, the formatting object has <em>no</em> <code>.ApplicationName</code> property, and since PowerShell evaluates attempts to access non-existent properties as <code>$null</code>, which in the context of string interpolation turns into the empty string, your <code>Write-Host</code> call output showed nothing after <code>why is there no data in here:  </code></sup></p>
","2","Answer"
"79607603","79605941","<p><em>Note: localStorage doesn't work in the snippet, run locally</em></p>
<p>There were a couple of things I had to tweak:</p>
<ol>
<li>There is no element with <code>id</code> 'savedData', therefore you aren't able to append your message, I believe you wanted to target the <code>scrollable-box</code>.</li>
<li>Since you're targeting a <code>div</code>, it's more appropriate to set the <code>innerHTML</code> rather than the <code>textContent</code> due to being able to insert elements.</li>
<li>Since you wanted messages to persist, your <code>saveData()</code> function was missing the previous messages.</li>
</ol>
<p>With that in mind, I have a working solution with those changes:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCTYPE html
    PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/    TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml""&gt;

&lt;head&gt;
    &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" /&gt;
    &lt;title&gt;CURRENT WARNINGS&lt;/title&gt;
&lt;/head&gt;
&lt;style type=""text/css""&gt;

&lt;/style&gt;
&lt;/head&gt;
&lt;div align=""center""&gt;&lt;span class=""style1""&gt;
        &lt;h1 style=font-size:300%&gt;
            &lt;h1 style=""background-color:#000000;""&gt;
                &lt;font color=#7CFC00&gt;
                    &lt;p style=""background-image: url('awsa.jpg');background-size: 100% 100%;""&gt;American Severe Weather
                        Advisors&lt;/header&gt;
                &lt;/font&gt;
            &lt;/h1&gt;
    &lt;/span&gt;&lt;/div&gt;

&lt;div class=""topnav""&gt;
    &lt;a class=""active"" href=""#HOME""&gt;
        &lt;h1 style=font-size:250%&gt;
            &lt;font color=#7CFC00&gt;
                &lt;P align=""center""&gt;Home
            &lt;/font&gt;
    &lt;/a&gt;
    &lt;a href=""#NEWS""&gt;
        &lt;font color=#7CFC00&gt;News&lt;/font&gt;
    &lt;/a&gt;
    &lt;a href=""#RADARS""&gt;
        &lt;font color=#7CFC00&gt;Radars&lt;/font&gt;
    &lt;/a&gt;
    &lt;a href=""#FORUMS""&gt;
        &lt;font color=#7CFC00&gt;Fourms&lt;/font&gt;
    &lt;/a&gt;
    &lt;a href=""#CONTACT""&gt;
        &lt;font color=#7CFC00&gt;Contact&lt;/font&gt;
    &lt;/a&gt;
    &lt;a href=""#ABOUT""&gt;
        &lt;font color=#7CFC00&gt;About
    &lt;/a&gt;&lt;br /&gt;
    &lt;a href=""#CURRENT WARNINGS""&gt;
        &lt;font color=#7CFC00&gt;CURRENT WARNINGS&lt;/p&gt;
            &lt;/h1&gt;
        &lt;/font&gt;
    &lt;/a&gt;

    &lt;body&gt;

        &lt;body style=background-color:#000000&gt;

            &lt;div align=""center""&gt;&lt;span class=""style1""&gt;
                    &lt;h1 style=font-size:150%&gt;
                        &lt;font color=#FF0000&gt;****CURRENT WARINGS BELOW****&lt;/font&gt;
            &lt;/div&gt;

            &lt;div align=""center""&gt;
                &lt;div id=""scrollable-box""
                    style=""width: 1400px; height: 300px; border: 1px solid black; overflow-y: scroll;color:#FF0000;;background-color: aqua;text-align: left;""&gt;
                    &lt;div id=""message-container""&gt;&lt;/div&gt;
                &lt;/div&gt;
                &lt;input type=""text"" id=""message-input"" placeholder=""Enter message""&gt;
                &lt;button onclick=""saveData()""&gt;Add Message&lt;/button&gt;
            &lt;/div&gt;
            &lt;h1 style=font-size:200%&gt;
                &lt;font color=#7CFC00&gt;&lt;time id=""current-time""&gt;&lt;/time&gt;&lt;/font&gt;
            &lt;/h1&gt;
            &lt;script&gt;
                function updateTime() {
                    const now = new Date();
                    const timeElement = document.getElementById('current-time');
                    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                    timeElement.dateTime = now.toISOString();
                    timeElement.innerHTML = `Today is: ${now.toLocaleDateString(undefined, options)}, 
                                     Time: ${now.toLocaleTimeString()}`;
                }

                setInterval(updateTime, 1000);
                updateTime();



                const messageContainer = document.getElementById('message-container');
                const messageInput = document.getElementById('message-input');
                const addButton = document.getElementById('add-message-button');
                const scrollableBox = document.getElementById('scrollable-box');
                let scrollPosition = 0;
                const scrollSpeed = 1;


                document.body.style.color = ""darkred"";


                function autoScroll() {
                    scrollPosition += scrollSpeed;
                    scrollableBox.scrollTop = scrollPosition;


                    if (scrollPosition &gt;= scrollableBox.scrollHeight - scrollableBox.clientHeight) {
                        scrollPosition = 0;
                    }
                }

                const scrollInterval = setInterval(autoScroll, 50);

                function saveData() {
                    const inputValue = document.getElementById('message-input').value;
                    const savedData = localStorage.getItem('userData');
                    localStorage.setItem('userData', savedData + ""&lt;br&gt;"" + inputValue);
                    displaySavedData();
                }
                function displaySavedData() {
                    const savedData = localStorage.getItem('userData');
                    if (savedData) {
                        console.log(savedData)
                        scrollableBox.innerHTML = """" + savedData;
                    } else {
                        scrollableBox.innerHTML = 'No data saved yet.';
                    }
                }

            &lt;/script&gt;
        &lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>
</p>
<p><em>Note: this solution does not include the time-stamps and removal of messages, I'll leave that for you to attempt.</em></p>
","0","Answer"
"79608200","79573449","<p>Try using dictionary comprehension. It is clean and easy to read.</p>
<pre><code>new_dict = {
    key: val
    for key, val in my_dict.items()
    if val['category']['name'] == 'Fruit'
}
</code></pre>
","0","Answer"
"79612823","79612816","<p>In Java, the factorial of a number n is the product of all positive integers less than or equal to n. By definition, 0! is equal to 1, even though it may seem like an exception.</p>
<p>In the original Java code, factorials were calculated only for n &gt; 0, so 0! was skipped. However, the calcFactorial() method already correctly handles 0! because when n = 0, the for loop doesn't run, and the initial value fact = 1 remains unchanged.</p>
<p>To fix this, we just need to change the condition in the main() method from if(n &gt; 0) to if(n &gt;= 0) so that 0 is included.</p>
<p>Here's the code:</p>
<pre><code>import java.util.*;
public class main {

  public static int calcFactorial(int n) {
     int fact = 1;
     for (int i = 1; i &lt;= n; i++) {
         fact = fact * i;
     }
     return fact;
  }

  public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      System.out.print(&quot;Enter the number : &quot;);
      int n = sc.nextInt();

      if(n &gt;= 0) {
        int factorial = calcFactorial(n);
        System.out.println(&quot;Factorial = &quot; + factorial);
      }
      else {
        System.out.println(&quot;Factorial for negative numbers do not exist!&quot;);
      }
  }
}
</code></pre>
<p>Now, this code correctly calculates 0! = 1 and handles all non-negative integers properly.</p>
","3","Answer"
"79612889","79612816","<p>I think factorial is The Classic example for recursion:</p>
<pre><code>private int factorial(int n) {
    if (n == 0) {
        return 1;
    }
    else if (n &gt; 0) {
        return n * factorial(n - 1);
    }
    else {
        throw new RuntimeException(&quot;Don't be so negative!&quot;);
    }
}
</code></pre>
<p>So from the above you can see that the factorial of 0 is 1, and the factorial of any number greater than zero is the number times the factorial of its predecessor.</p>
<ul>
<li><p>factorial(3) goes into the first else and returns 3 * factorial(2)</p>
</li>
<li><p>factorial(2) returns 2 * factorial(1)</p>
</li>
<li><p>factorial(1) returns 1 * factorial(0)</p>
</li>
<li><p>factorial(0) goes into the if and returns 1</p>
</li>
</ul>
<p>After this all the previous recursive calls can evaluate resulting in:</p>
<pre><code>1 * 1 * 2 * 3
</code></pre>
","1","Answer"
"79616720","79616687","<p>Yes, you're right. It should be: <code>newnode-&gt;next-&gt;prev = newnode;</code> instead of <code>newnode-&gt;next-&gt;prev = node_to_insert_after;</code></p>
<p>Aside from this, I'm not sure whether this is a typo but where you should have a <code>}</code>, you have <code>{</code>. For example, your struct definition should be:</p>
<pre><code>struct node {
    int value;
    struct node* next;
    struct node* prev;
};
</code></pre>
<p>What I must ask is: why are you asking this question? Why not write some tests for yourself to see if things work rather than asking on stack overflow? For example, you could write a function which prints the list:</p>
<pre class=""lang-c-like prettyprint-override""><code>void print_list(struct node *head) {
    for(struct node *cur = head; cur != NULL; cur = cur-&gt;next) {
        printf(&quot;%d &quot;, cur-&gt;value);
    }
    printf(&quot;\n&quot;);
}
</code></pre>
<p>Then you could use your insert functions and print the list to see if it works.</p>
","1","Answer"
"79616743","79616687","<p><a href=""https://i.sstatic.net/A2IqTRZ8.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/A2IqTRZ8.png"" alt=""enter image description here"" /></a><br />
<code>newnode -&gt; next -&gt; prev = newnode</code></p>
<p>is good</p>
","2","Answer"
"79617850","79617667","<p>The first <code>setTimeout()</code> does not create a delay between calling <code>playSasha()</code> and <code>playSpino()</code>. Which means the <code>rollDice()</code> for the one is called shortly after the <code>rollDice()</code> for the other.</p>
<p>Moving the call to <code>playSpino()</code> inside that <code>setTimeout()</code> will fix that.</p>
<pre><code>function playYourTurn() 
{
    playSasha();

    window.setTimeout(() =&gt; { playSpino(); }, 1500);
}
</code></pre>
","0","Answer"
"79618036","79617667","<p>Realise that with <code>setTimeout</code> only the function that is passed as argument is delayed. Other code will just continue immediately. When your purpose is to wait for an animation to finish, then listen to the <code>animationend</code> event.</p>
<p>Also, you did not provide the <code>resetDice</code> code, but make sure that when you change an HTML property there, like <code>className</code>, that you allow for a paint cycle to happen. If not, and you immediately try to start the animation again, that animation will not happen.</p>
<p>Finally, all this becomes easier to do when you use <code>async</code> <code>await</code></p>
<p>Here is some code you could use:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// Define two utility functions to work with promises:
const delay = ms =&gt; new Promise(resolve =&gt; setTimeout(resolve, ms));
const animationCompleted = elem =&gt; new Promise(resolve =&gt; elem.addEventListener(""animationend"", resolve, {once:true}));

// Define constants for the HTML elements
const diceresult = document.getElementById('diceresult');
const shakebox = document.getElementById('shakebox');
const rollButton = document.getElementById('roll');

async function rollDice() {  
    await resetDice();
    const dice = Math.floor(Math.random() * 6) + 1;
    shakebox.className = 'diceAnimation';
    await animationCompleted(shakebox);
    diceresult.className = 'resultVisible';
    diceresult.textContent = dice;
    return dice;
}

async function resetDice() {
    shakebox.className = '';
    diceresult.className = 'resultHidden';
    await delay(50);
}

function moveSasha(move) {
    console.log(""Sasha moves"", move);
}

function moveSpino(move) {
    console.log(""Spino moves"", move);
}

async function playYourTurn() {
    rollButton.setAttribute(""disabled"", true);
    const diceResultSasha = await playSasha();
    const diceResultSpino = await playSpino(); 
    // ... 
    // ...
    rollButton.removeAttribute(""disabled"");
}

async function playSasha() {
    const diceResultSasha = await rollDice();
    moveSasha(diceResultSasha);
    await delay(3000);
    return diceResultSasha;
}

async function playSpino() {
    var diceResultSpino = await rollDice();
    moveSpino(diceResultSpino);
    await delay(3000); // 7000 seemed a long time. Adjusted
    return diceResultSpino;
}

rollButton.addEventListener(""click"", playYourTurn);</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.diceAnimation {
   animation: shake 0.2s;
   animation-iteration-count: 5;
}
 
@keyframes shake {
   0% { transform: translate(1px, 1px) rotate(0deg); }
   10% { transform: translate(-2px, -3px) rotate(-20deg); }
   20% { transform: translate(-4px, 0px) rotate(20deg); }
   30% { transform: translate(3px, 2px) rotate(0deg); }
   40% { transform: translate(1px, -1px) rotate(10deg); }
   50% { transform: translate(-1px, 2px) rotate(-10deg); }
   60% { transform: translate(-3px, 1px) rotate(0deg); }
   70% { transform: translate(3px, 1px) rotate(-20deg); }
   80% { transform: translate(-1px, -1px) rotate(20deg); }
   90% { transform: translate(1px, 2px) rotate(0deg); }
   100% { transform: translate(1px, -2px) rotate(-10deg); }
}

#shakebox { border: 1px solid; display: inline-block; }
.resultHidden { visibility: hidden; }
.resultVisible { visibility: visible; }</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;button id=""roll""&gt;Roll die&lt;/button&gt;
&lt;div id=""shakebox""&gt;die&lt;/div&gt;
&lt;span id=""diceresult"" class=""resultHidden""&gt;&lt;/span&gt;&lt;br&gt;</code></pre>
</div>
</div>
</p>
","0","Answer"
"79619400","79618007","<p>Inside of the definition of <code>Parser</code> the function can be reffered to by just it's name <code>parseIdentifier</code>, it's directly in scope.</p>
<p>It's also available by referring to it by it's path <code>Parser.parseIdentifier</code>, <code>parser.Parser.parseIdentifier</code>, etc. which also works from outside of the <code>struct</code> definition.</p>
","0","Answer"
"79622132","79616687","<p>You are correct, and that correction should be applied to the code you quoted.</p>
<p>I want to also point out another aspect that might be useful: this function will bring inconsistency when you pass it a node as second argument that is already part of a linked list (whether it be the same or a different one).</p>
<p>The name <code>newnode</code> suggests that it is assumed that this node is <em>not</em> currently linked with any other node, but why not have it work also in that case?</p>
<p>And once we support that, we might take another step and allow <code>node_to_insert_after</code> to be <code>NULL</code>. That would mean you would <em>only</em> detach the node from the linked list it is currently in, and just set its <code>prev</code> and <code>next</code> members to <code>NULL</code>, in order to isolate that detached node.</p>
<p>This way you have a single function that supports insertion of a new node into a linked list, removal of a node out of a linked list, and the combination of both, which results in <em>moving</em> a node from one (linked list) location to another.</p>
<p>This means the code must first properly <em>detach</em> the given node from the linked list it might be in before inserting it where it should end up:</p>
<pre><code>void insert_after_node(node_t *node_to_insert_after, node_t *node) {
    // Detach node from its current context, if any
    if (node-&gt;next) {
        node-&gt;next-&gt;prev = node-&gt;prev;
    }
    if (node-&gt;prev) {
        node-&gt;prev-&gt;next = node-&gt;next;
    }
    // Update its own outgoing links
    node-&gt;next = node_to_insert_after ? node_to_insert_after-&gt;next : NULL;
    node-&gt;prev = node_to_insert_after;
    // Mirror those updated links to complete the insertion
    if (node-&gt;next) {
        node-&gt;next-&gt;prev = node;
    }
    if (node-&gt;prev) {
        node-&gt;prev-&gt;next = node;
    }
}
</code></pre>
<p>It is assumed that whatever node you pass as second argument, it has determined values for its <code>prev</code> and <code>next</code> members (i.e. they were not left uninitialised).</p>
","0","Answer"
"79630871","79630584","<p>If you've already fixed the code but still see the same error, try restarting your React development server. Sometimes the app doesn't reload correctly, especially if the file wasn't saved properly or there's a caching issue.</p>
","0","Answer"
"79631104","79631070","<p>You need to save the number of purchases in <code>result</code>, not just the total. So make the values there objects with both <code>count</code> and <code>total</code> properties.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function averageAmountSpent(arr) {
  const result = {};
  arr.forEach(({
    customer,
    amount
  }) =&gt; {
    if (Object.hasOwn(result, customer)) {
      result[customer].count++;
      result[customer].total += amount;
    } else {
      result[customer] = {
        count: 1,
        total: amount
      };
    }
  });

  const average = {};
  Object.entries(result).forEach(([customer, {
    count,
    total
  }]) =&gt; average[customer] = total / count);

  return average;
}

console.log(averageAmountSpent(purchases));</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script&gt;
const purchases = [
  { customer: ""Alice"", amount: 250 },
  { customer: ""Bob"", amount: 400 },
  { customer: ""Alice"", amount: 150 },
  { customer: ""David"", amount: 300 },
  { customer: ""Bob"", amount: 200 },
  { customer: ""Charlie"", amount: 100 },
  { customer: ""David"", amount: 100 }
];
&lt;/script&gt;</code></pre>
</div>
</div>
</p>
","4","Answer"
"79631136","79631070","<p>this will calculate both the total amount purchased by the customers and the average</p>
<pre><code>function averageAmountSpent(arr) {
  const total = {}
  const count = {}
  arr.forEach(item =&gt; {
    const customer = item.customer
    total[customer] = (total[customer] || 0) + item.amount
    count[customer] = (count[customer] || 0) + 1
  });
 
  const average = {}
  for (const customer in total) {
    average[customer] = total[customer] / count[customer]
  }
  return average
}
</code></pre>
","0","Answer"
"79631143","79631070","<p>Sometimes you can sacrifice a little speed, but reduce number of loops.
We will calculate current average each iteration.</p>
<p>While calculating average we will calculate totals and quantity, so why loose this info, let's return all Maybe it can be used somewhere.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const purchases = [
  { customer: ""Alice"", amount: 250 },
  { customer: ""Bob"", amount: 400 },
  { customer: ""Alice"", amount: 150 },
  { customer: ""David"", amount: 300 },
  { customer: ""Bob"", amount: 200 },
  { customer: ""Charlie"", amount: 100 },
  { customer: ""David"", amount: 100 }
];

function averageAmountSpent(arr) {
  const result = {};
  const average = {};
  //We can destructurize arg to get vars
  for({customer,amount} of arr){
    const res = result[customer] ??= {total:0,count:0,avg:0}
    res.total += amount;
    res.count++;

    //comment this string if total stats not needed and uncomment next
    res.avg=res.total/res.count;
    //average[customer]=result[customer].total/result[customer].count;
  }
  
  //Full statistics maybe useful
  return result;
  //If not uncomment this
  //return average;
}

console.log(averageAmountSpent(purchases));</code></pre>
</div>
</div>
</p>
","3","Answer"
"79632014","79545959","<p>I recently faced the same issue and was able to resolve it by following these steps:</p>
<pre><code># Step 1: Install and use Node.js version 20
nvm install 20
nvm use 20

# Step 2: Verify Node and npm versions
node --version
npm --version

# Step 3: Uninstall any globally installed Azure Functions Core Tools
sudo npm uninstall -g azure-functions-core-tools || true
sudo rm -rf /usr/local/lib/node_modules/azure-functions-core-tools

# Step 4: Install Azure Functions Core Tools v4 globally
npm install -g azure-functions-core-tools@4

# Step 5: Verify installation
func --version
# Step 6: Start your function app with verbose logging
func start --verbose
</code></pre>
<p>This fixed the version conflicts I was experiencing with Azure Functions. Make sure to use <code>nvm</code> to manage Node versions cleanly.</p>
<p>If <code>npm install</code> from the registry fails, you can manually install the Azure Functions Core Tools:</p>
<ol>
<li><p>Go to the official GitHub releases:<br />
-&gt; <a href=""https://github.com/Azure/azure-functions-core-tools/releases"" rel=""nofollow noreferrer"">https://github.com/Azure/azure-functions-core-tools/releases</a></p>
</li>
<li><p>Download the <strong>v4.x</strong> <code>.zip</code> file for your OS (for Linux or Mac, use the <code>.tar.gz</code>).</p>
</li>
<li><p>Extract it to a folder (e.g., <code>C:\tools\azure-functions-core-tools</code> or <code>/usr/local/azure-functions-core-tools</code>).</p>
</li>
<li><p>Add the extracted folder to your PATH:</p>
<ul>
<li><p>On Linux/macOS:</p>
<p><code>export PATH=$PATH:/usr/local/azure-functions-core-tools </code></p>
<p>(put it in your <code>~/.bashrc</code> or <code>~/.zshrc</code>)</p>
</li>
<li><p>On Windows:<br />
Use <strong>System Properties &gt; Environment Variables</strong> and add the path.</p>
</li>
</ul>
</li>
<li><p>Verify:</p>
<p><code>func --version</code></p>
</li>
<li><p>Other options you can try:</p>
<p>Clear any bad cached downloads:</p>
<p><code>npm cache clean --force</code></p>
<p>Then try again:</p>
<p><code>npm install -g azure-functions-core-tools@4</code></p>
</li>
</ol>
","0","Answer"
"79636883","79636838","<p>Modifying the representation a bit we can use a 2 column tibble where the second column is a list column.</p>
<pre><code>library(dplyr)
add &lt;- function(data, type, parameter) {
  bind_rows(data, tibble(type, parameter = list(parameter)))
}

dat &lt;- tibble() %&gt;%
  add(&quot;wealth&quot;, 1) %&gt;%
  add(&quot;diversification&quot;, 0.7) %&gt;%
  add(&quot;margin&quot;, c(1, 3))
str(dat)
## tibble [3 × 2] (S3: tbl_df/tbl/data.frame)
##  $ type     : chr [1:3] &quot;wealth&quot; &quot;diversification&quot; &quot;margin&quot;
##  $ parameter:List of 3
##   ..$ : num 1
##   ..$ : num 0.7
##   ..$ : num [1:2] 1 3
</code></pre>
","1","Answer"
"79636983","79636838","<blockquote>
<p>How to create a function to add a list to an existing list of list?</p>
</blockquote>
<p>If there already is an (empty) <code>list</code> <code>L</code>, i.e.,</p>
<pre class=""lang-r prettyprint-override""><code>L = list()
</code></pre>
<p>we can simply do</p>
<pre class=""lang-r prettyprint-override""><code>L = append(L, list(list(type='wealth', parameter=1))) |&gt;
  append(list(list(type='diversification', parameter=.7)))
</code></pre>
<blockquote>
<pre class=""lang-none prettyprint-override""><code>&gt; L
List of 2
$ :List of 2
 ..$ type     : chr &quot;wealth&quot;
 ..$ parameter: num 1
$ :List of 2
 ..$ type     : chr &quot;diversification&quot;
 ..$ parameter: num 0.7
</code></pre>
</blockquote>
<p>i.e.,</p>
<pre class=""lang-r prettyprint-override""><code>add2list = \(l, ty, pa) append(l, list(list(type=ty, parameter=pa)))
</code></pre>
<blockquote>
<pre class=""lang-none prettyprint-override""><code>&gt; add2list(L, &quot;margin&quot;, c(1, 2))
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 2


</code></pre>
</blockquote>
","2","Answer"
"79637399","79636838","<p>If a vectorized function would be useful, try this one:</p>
<pre><code>fx &lt;- \(x=NULL, type=NULL, par=NULL) {
  stopifnot(length(type) == length(NULL))  ## maybe change to `if (...) {stop(...)}`
  .fx &lt;- \(x, y) {
    if (!is.null(x) &amp;&amp; !is.list(x) &amp;&amp; all(lengths(y) == 1)) {
      c(list(x), list(y))
    } else if (all(lengths(y) &gt; 1)) {
      c(x, y)
    } else {
      c(x, list(y))
    }
  }
  if (is.list(type) &amp;&amp; is.list(par)) {
    y &lt;- Map(\(a, b) list(type=a, parameter=b), type, par)
    .fx(x, y)
  } else {
    y &lt;- list(type=type, parameter=par)
  }
  .fx(x, y)
}
</code></pre>
<h3>Usage</h3>
<pre><code>&gt; fx(NULL, &quot;wealth&quot;, 1)
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1

&gt; foo &lt;- fx(NULL, &quot;wealth&quot;, 1)
&gt; fx(foo, &quot;diversification&quot;, .7) 
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7
</code></pre>
<p><em>Piping:</em></p>
<pre><code>&gt; fx(NULL, &quot;wealth&quot;, 1) |&gt; 
+   fx(&quot;diversification&quot;, .7) 
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


&gt; fx(NULL, &quot;wealth&quot;, 1) |&gt; 
+   fx(&quot;diversification&quot;, .7) |&gt; 
+   fx(&quot;margin&quot;, c(1, 3))
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 3
</code></pre>
<p><em>Vectorized feature:</em></p>
<pre><code>&gt; fx(x=NULL, 
+    type=list(&quot;wealth&quot;, &quot;diversification&quot;, &quot;margin&quot;), 
+    par=list(1, .7, c(1, 2))
+    )
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 2
</code></pre>
<p><em>Combined:</em></p>
<pre><code>&gt; fx(NULL, &quot;wealth&quot;, 1) |&gt; 
+   fx(
+     type=list(&quot;diversification&quot;, &quot;margin&quot;), 
+     par=list(.7, c(1, 2))
+   ) |&gt; 
+   fx(&quot;foo&quot;, 42) 
[[1]]
[[1]]$type
[1] &quot;wealth&quot;

[[1]]$parameter
[1] 1


[[2]]
[[2]]$type
[1] &quot;diversification&quot;

[[2]]$parameter
[1] 0.7


[[3]]
[[3]]$type
[1] &quot;margin&quot;

[[3]]$parameter
[1] 1 2


[[4]]
[[4]]$type
[1] &quot;foo&quot;

[[4]]$parameter
[1] 42
</code></pre>
<p><em>Misspecification (we might come up with some nicer error messages):</em></p>
<pre><code>&gt; fx(
+   type=list(&quot;diversification&quot;, &quot;margin&quot;), 
+   par=list(.7)
+ )
Error in fx(type = list(&quot;diversification&quot;, &quot;margin&quot;), par = list(0.7)) : 
  length(type) == length(NULL) is not TRUE
</code></pre>
<p><em>Default:</em></p>
<pre><code>&gt; fx()
[[1]]
[[1]]$type
NULL

[[1]]$parameter
NULL
</code></pre>
","1","Answer"
"79640804","79640794","<p>Try using the following formula:</p>
<pre><code>=LET(
     a, FILTER(A2:O26,A1:O1=&quot;SCHOOL&quot;),
     TOCOL(IFS(a&lt;&gt;&quot;&quot;,a),2,1))
</code></pre>
","1","Answer"
"79641457","79641287","<p>The audio is played asynchronously and is probably longer than the 0.5s delay you used, so this results in a silent failure when it is triggered again. Do what Adios Gringo said, use</p>
<pre><code>play_obj.wait_done() 
</code></pre>
<p>or increase the 0.5s delay to more.</p>
","1","Answer"
"79642615","79641287","<p>The reason for the failure is the combination of the python version and the latest version of the simpleaudio package.</p>
<p>Using python version 3.12.8 or 3.13.1 and simpleaudio 1.0.4 the following code fails with an &quot;access violation&quot; at line &quot;play_obj.wait_done()&quot;.</p>
<p>The very same code (below) will work correctly if instead of using the simpleaudio package, use simpleaudio-312compat version 1.0.4.  Note that the import line for simpleaudio stays the same.</p>
<pre><code>import simpleaudio

strong_beat = simpleaudio.WaveObject.from_wave_file('hal2.wav')
temp = 0
while temp &lt; 20:
    temp += 1
    play_obj = strong_beat.play()
    play_obj.wait_done()
    print(&quot;temp:&quot;, temp)
</code></pre>
","0","Answer"
"79644377","79644367","<p>The short answer is no. As you wrote, it depends if it belongs to the prototype, and therefore all the instances point to the same function, or if a new function object is assigned each time an object is created, which means that each instance points to a unique function object.</p>
<p>The ‘new’ keyword or the lexical scope are not related. If you did for example:</p>
<pre><code>for (obj in objects) {
  obj.foo = function(){};
}
</code></pre>
<p>You’d also see that objects[0].foo === objects[1].foo returns false.</p>
","0","Answer"
"79644686","79644683","<p>You need to call <code>global</code> inside the function in order to access the global variable.</p>
<pre class=""lang-py prettyprint-override""><code>def player():
  global health
  health = 100   
player()
print(health)
</code></pre>
<p>Output</p>
<pre><code>100
</code></pre>
","2","Answer"
"79648653","79648443","<p>Between <code>nargin</code> and the <code>arguments</code> syntax came the <a href=""https://uk.mathworks.com/help/matlab/ref/inputparser.html"" rel=""noreferrer""><code>inputParser</code></a> which can achieve this through a combination of</p>
<ul>
<li>Setting the <code>KeepUnmatched</code> property of the parser to <code>true</code></li>
<li>Using <code>namedargs2cell</code> to pass through the unmatched arguments to the next level</li>
</ul>
<p>With your example, it would look something like this, where you only have to maintain the lower level name-value pairs in their respective functions</p>
<pre><code>function highLevelFunc( varargin )

    p = inputParser();
    p.addParameter( 'highLevelArg', 'highDefault' );
    p.KeepUnmatched = true;
    p.parse( varargin{:} );

    args = namedargs2cell( p.Unmatched );
    midLevelFunc( args{:} );

    % high-level code goes here
    highLevelArg = p.Results.highLevelArg;
    fprintf( 'High level arg: %s\n', highLevelArg );
end

function midLevelFunc( varargin )

    p = inputParser();
    p.addParameter( 'midLevelArg', 'midDefault' );
    p.KeepUnmatched = true;
    p.parse( varargin{:} );

    args = namedargs2cell( p.Unmatched );
    lowLevelFunc( args{:} );

    % mid-level code goes here
    midLevelArg = p.Results.midLevelArg;
    fprintf( 'Mid level arg: %s\n', midLevelArg );
end

function lowLevelFunc( varargin )

    p = inputParser();
    p.addParameter( 'lowLevelArg', 'lowDefault' );
    p.parse( varargin{:} );

    % low-level code goes here
    lowLevelArg = p.Results.lowLevelArg;
    fprintf( 'Low level arg: %s\n', lowLevelArg );
end
</code></pre>
<p>Test run where we only overwrite the lowest input:</p>
<pre><code>&gt;&gt; highLevelFunc( 'lowLevelArg', 'test' )
Low level arg: test
Mid level arg: midDefault
High level arg: highDefault
</code></pre>
<hr />
<p>For your application to super/sub classes, there is some functionality to inherit properties of the superclass as additional name-value pairs using <code>opts.?SuperClass</code> in the <code>arguments</code> block, but if you just want name-value pairs without them being properties I'm not sure that functionality exists. Ref <a href=""https://mathworks.com/help/matlab/matlab_oop/class-constructor-methods.html#mw_749777e1-ea34-4e8e-b4d3-317d6d61131c"" rel=""noreferrer"">https://mathworks.com/help/matlab/matlab_oop/class-constructor-methods.html#mw_749777e1-ea34-4e8e-b4d3-317d6d61131c</a></p>
","8","Answer"
"79649897","79648443","<p>Inspired by @Wolfie's answer, I ended up writing a small utility function <code>ParseArgs</code> to do basic input parsing using an <code>inputParser</code>, to avoid some of the code repetition -</p>
<pre class=""lang-matlab prettyprint-override""><code>function [matched, unmatched] = ParseArgs(config, varargin)

    p = inputParser;
    p.KeepUnmatched = true;

    for k = 1:rows(config)
        p.addParameter(config{k,1}, config{k,2});
    end

    p.parse(varargin{:});

    matched   = p.Results;
    unmatched = p.Unmatched;

end
</code></pre>
<p>The functions can then be implemented somewhat in the style of an <code>arguments</code> block - with limited functionality, but it wouldn't be too hard to add e.g. size or type validation to <code>ParseArgs</code> as well.</p>
<pre><code>function highLevelFunc(varargin)

    [hlOpts, mlOpts] = ParseArgs({
        &quot;highLevelArg_1&quot; , 1
        &quot;highLevelArg_2&quot; , 2
        &quot;highLevelArg_3&quot; , 3 
        }, varargin{:});

    midLevelFunc(mlOpts);

    fprintf(&quot;High level options:\n&quot;);
    disp(hlOpts);

end

function midLevelFunc(varargin)

    [mlOpts, llOpts] = ParseArgs({
        &quot;midLevelArg_1&quot; , 1
        &quot;midLevelArg_2&quot; , 2
        &quot;midLevelArg_3&quot; , 3 
        }, varargin{:});

    lowLevelFunc(llOpts);

    fprintf(&quot; Mid level options:\n&quot;);
    disp(mlOpts);

end

function lowLevelFunc(varargin)

    llOpts = ParseArgs({
        &quot;lowLevelArg_1&quot; , 1
        &quot;lowLevelArg_2&quot; , 2
        &quot;lowLevelArg_3&quot; , 3 
        }, varargin{:});

    fprintf(&quot;Low level options:\n&quot;);
    disp(llOpts);

end
</code></pre>
<p>Test to show how it works:</p>
<pre class=""lang-matlab prettyprint-override""><code>&gt;&gt; highLevelFunc(lowLevelArg_1 = &quot;altered&quot;)
Low level options:
    lowLevelArg_1: &quot;altered&quot;
    lowLevelArg_2: 2
    lowLevelArg_3: 3
 Mid level options:
    midLevelArg_1: 1
    midLevelArg_2: 2
    midLevelArg_3: 3
High level options:
    highLevelArg_1: 1
    highLevelArg_2: 2
    highLevelArg_3: 3
</code></pre>
","4","Answer"
"79652996","79652882","<p>As stated in comments, you should be able to workaround this by setting an <a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.5#use-the-variable-syntax"" rel=""nofollow noreferrer"">environment variable</a> before executing your script, and using that variable as the value for <code>Get-ChildItem</code> in both instances of parameter decorations, validation and completion.</p>
<p>As aside, you should consider using the constructor overload of <a href=""https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.completionresult.-ctor?view=powershellsdk-7.4.0#system-management-automation-completionresult-ctor(system-string-system-string-system-management-automation-completionresulttype-system-string)"" rel=""nofollow noreferrer""><code>CompletionResult</code></a> that will allow you to <em>quote</em> the completion completion text in case the folders have a space.</p>
<p>In summary, your <code>param</code> would become:</p>
<pre class=""lang-bash prettyprint-override""><code>param(
    [Parameter(Mandatory = $true)]
    [string] $Name,

    [Parameter(Mandatory = $true)]
    [ValidateScript(
        { $_ -in (Get-ChildItem $env:MyPath -Directory | Where-Object { $_.Name -ne 'obj' }).Name }
    )]
    [ArgumentCompleter(
        {
            param($Command, $Parameter, $WordToComplete, $CommandAst, $FakeBoundParams)

            Get-ChildItem $env:MyPath -Directory |
                Where-Object { $_.Name -ne 'obj' -and $_.Name -like &quot;$WordToComplete*&quot; } |
                ForEach-Object {
                    [System.Management.Automation.CompletionResult]::new(
                        &quot;'$($_.Name)'&quot;, $_.Name,
                        [System.Management.Automation.CompletionResultType]::ParameterValue,
                        $_.FullName)
                }
        }
    )]
    [string] $Project
)
</code></pre>
<p>Then before running your script you'd first assign a value to the <code>env:</code> variable then invoke your script:</p>
<pre class=""lang-bash prettyprint-override""><code>PS /&gt; $env:MyPath = '..\src\Services'
PS /&gt; .\myScript -Name foo -Project &lt;TAB&gt;
</code></pre>
<p>Another more complex alternative could be defining your own completion and validation class like the one shown in the last example of <a href=""https://stackoverflow.com/questions/70061330/using-tab-complete-after-an-established-parameter-in-powershell/70061653#70061653"">this answer</a> that can take a path as argument.</p>
","0","Answer"
"79656553","79654940","<p>A few things about Mathematica.</p>
<p>= and := are very different things.</p>
<p>[ ] and ( ) are completely different things.</p>
<p>You can pass around function names, but perhaps not the way you are doing it.</p>
<p>I made some changes and tried this.</p>
<pre><code>delta = Sqrt[u^2 - 4DC(theta - lambda)];
xi = Sqrt[u^2 - 4DC((theta + delta) - lambda)];
f[x_, t_, u_, greek_, pm1_, DC_] := Exp[x*(u + pm1*greek)/(2DC)]*
 Erfc[(x - pm1*t*greek)/Sqrt[2DC*t]];
Conc[ x_, t_, u_, C0_, DC_, theta_, gamma_] := C0/2*Exp[-theta*t]*
  (f[x, t, u, delta, -1, DC] + f[x, t, u, delta, 1, DC]) - C0/2*
  Exp[-(gamma + theta)*t]*(f[x, t, u, xi, -1, DC] + f[x, t, u, xi, 1, DC]);
Conc[ x, t, u, C0, DC, theta, gamma]
</code></pre>
<p>That doesn't give me any error messages now.</p>
<p>Oops, I inserted three missing <code>*</code> in the definition of <code>f</code>  Sorry about that.</p>
<p>Can you insert the values for your constants and see if you get a correct result?</p>
<p>If not then can you help me better understand what you want from this so I can try to fix it?</p>
<p>Please test that brutally before you even think of trusting it.</p>
","0","Answer"
"79659686","79659577","<p>As you told that you are a beginner, ill give a bit descriptive answer. Feel free to talk back if you prefer a shorter response.</p>
<p>Overall, analyzing your code I found out few issues. But still no need to worry. As a beginner, you have already climbed the hardest step</p>
<p>As I got, here's what you are going to do.</p>
<p>Updating the count and based on the value of the count you are updating the date, which means you are accessing the initial date when updating.</p>
<p>When we consider the end result updating the date with step of 1, this is not the best approach, but let's stick with this approach because there's a lot to learn.</p>
<p>First of all, state updates are not immediate. This is a thing that you need to keep in mind.</p>
<ol>
<li><p>You are doing <code>setCount(...)</code> and  <code>setNewDate(...)</code> but as I told you state updates are not immediate you are still accessing the previous value of the count</p>
</li>
<li><p>You're calling <code>setNewDate</code> with no return value (<code>return;</code>), which breaks the state update.</p>
</li>
<li><p>You're modifying the original <code>date</code> object (<code>date.setDate()</code>), which may lead to unexpected side effects.</p>
</li>
</ol>
<p>This is my plan for fixing the code. In the onClick function I'm calling the setCount in the setCount I'm caching the updated count, also I'm caching the initialDate as a <code>Date</code> object which is <code>date</code> according to your code. On the cached date I'm calling the pre-defined <code>setDate</code> and I'm calling the predefined <code>getDate</code> on intial date and adding the updated count value to that date. Now I'm updating the date which is <code>newDate</code> according to your code by calling the <code>setNewDate</code> and passing the cached updatedDate wich is now updated. Finally I'm returning the updated count so that it uppdates the count state variable.</p>
<p>If you still want the fixed version of the function to be triggered onClick I'll paste it down below.</p>
<p>Just so you know <code>() =&gt; {}</code> this is the arrow function syntax which comes under JS ES6+ features.</p>
<pre><code>onClick={() =&gt; {
            setCount((c) =&gt; {
              const newCount = c - 1;
              const updatedDate = new Date(baseDate);
              updatedDate.setDate(baseDate.getDate() + newCount);
              setNewDate(updatedDate);
              return newCount;
            });
          }}
</code></pre>
","1","Answer"
"79660107","79659577","<p><strong>Just for suggestion don't you a counter button to change the date. it's not user friendly and also very handy if you want to change like months and years instead of this you can use the input to get the date , month as well as Year .</strong></p>
<p>also in this code the data you decleare =&gt; const date = new Date(&quot;june 27 2027&quot;);</p>
<p>it is constant and you are trying to change the date using this which will always return the same value additinaly this is not a standard way to set a date and lots of mistakes are in this code.</p>
","0","Answer"
"79661804","79651798","<p>Under the Flex Consumption plan, the Oryx build process always runs inside Microsoft’s infrastructure and will not respect any <strong><code>HTTP_PROXY</code> or <code>HTTPS_PROXY</code></strong> settings you place in your Function App. Here we need to check every outbound request from the build container travels through the virtual network and then through the Bluecoat proxy before it reaches the public endpoints Oryx needs, such as <code>mcr.microsoft.com</code>, <code>nuget.org</code> or <code>github.com</code>.</p>
<ul>
<li>Because you already have VNet integration enabled, the Function App’s outbound traffic is automatically sent into the designated subnet. To capture that traffic, create a user-defined route on the same subnet where VNet integration is configured.</li>
</ul>
<pre class=""lang-bash prettyprint-override""><code>az network route-table create \
  --name rt-to-proxy \
  --resource-group MyResourceGroup \
  --location eastus

az network route-table route create \
  --resource-group MyResourceGroup \
  --route-table-name rt-to-proxy \
  --name default-route \
  --address-prefix 0.0.0.0/0 \
  --next-hop-type VirtualAppliance \
  --next-hop-ip-address 10.0.1.4

az network vnet subnet update \
  --resource-group MyResourceGroup \
  --vnet-name MyVNet \
  --name MySubnet \
  --route-table rt-to-proxy

</code></pre>
<p>Once this route is associated with the subnet, any attempt by Oryx to fetch packages or images will flow into your VNet, be picked up by the route table, and be forwarded to your Bluecoat proxy appliance, which then sends it out to the internet. Make sure your Network Security Group allows the Function subnet to connect to the proxy over HTTPS (and HTTP if needed) and configure the Bluecoat appliance to permit outbound calls to the specific domains used by Oryx.</p>
<p>After you’ve applied these networking changes, simply redeploy the Function App with the usual publish command.</p>
<pre class=""lang-bash prettyprint-override""><code>func azure functionapp publish &lt;app_name&gt;

</code></pre>
<p>The Oryx build will now fetch all its required artifacts through your corporate proxy without any further configuration in the Function App itself.</p>
<ul>
<li>If it’s impractical to open the proxy to every possible Oryx endpoint, you can bypass the in-Azure build step entirely by preparing your deployment package ahead of time. Build and package your app locally (or in a CI/CD agent) and then publish with:</li>
</ul>
<pre class=""lang-bash prettyprint-override""><code>func azure functionapp publish &lt;app_name&gt; --no-build

</code></pre>
<p>Alternatively, containerize the function.</p>
<pre class=""lang-bash prettyprint-override""><code>docker build -t myfunctions:latest .
docker tag myfunctions:latest &lt;yourACR&gt;.azurecr.io/myfunctions:latest
docker push &lt;yourACR&gt;.azurecr.io/myfunctions:latest

</code></pre>
<p>Then configure the Function App to use that image from Azure Container Registry. Both approaches routing through your proxy or using a prebuilt package ensure that your corporate compliance requirements are met while keeping your deployment process smooth and reliable.</p>
","0","Answer"
"79663040","79662939","<p>Let's make struct for one card with 3 chars - rank, suite, zero. It allows point to it as to zero-terminated string. You can union this struct with ordinary string pointer. Or it can be array char[3], it's up to you. But I'll treat this struct as null-terminated string.</p>
<p>After filling array of cards with content, we will shuffle them. The structure allows assignment without any manipulating with pointers, indexes etc. as it could be if you use arrays or strings.</p>
<p>After shuffling it is enough just to take first N cards. For next hand - just next cards from the array and so on.</p>
<p>Really we do not need this confusing generation of cards. It was enough to make static array like this <code>char* cards[]={&quot;2C&quot;,&quot;3C&quot;, etc... ,&quot;aS&quot;};</code> and sort the pointers. But let's go with generating. Also struct will be helpful to readably use rank and suit for some logics.</p>
<pre class=""lang-cpp prettyprint-override""><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;
#include &lt;cstring&gt;

#define SUITS 4
#define RANKS 13
#define TOTAL (SUITS*RANKS)

struct Card{
    char rank;
    char suit;
    char z; //for null-terminating
};

int main() {
    int num_cards, rank, suit;

    const char rank_code[] = {'2', '3', '4', '5', '6', '7', '8',
                              '9', 't', 'j', 'q', 'k', 'a'};
    const char suit_code[] = {'C', 'D', 'H', 'S'};


    // Generating cards
    Card cards[TOTAL];
    memset(cards, 0, sizeof(cards)); //Make null-termination

    for(int i=0;i&lt;SUITS;i++){
        for(int j=0;j&lt;RANKS;j++){
            cards[i*RANKS+j].rank=rank_code[j];
            cards[i*RANKS+j].suit=suit_code[i];
        }
    }

    srand(time(NULL));

    //Shuffle

    // &quot;Naive&quot; algorythm.

    // For me - if you can't predict the cards order - then it is enough.
    // If you look how a man shuffles the cards - you'll understand that it
    // will never be &quot;Fisher–Yates shuffle&quot; where each next card is 
    // exchanged only once, but just a normal any-to-any some N times.

    // But cool programmers want to see true Fisher–Yates shuffle
    // so, see it below commented block.

    /*
    for(int i=0;i&lt;TOTAL;i++){
        int j=rand() % TOTAL;
        Card t=cards[i];
        cards[i]=cards[j];
        cards[j]=t;
        printf(&quot;%s \n&quot;,i,j, &amp;cards[i]); //Just to see the result
    }
    */

    for(int i=0;i&lt;TOTAL-1;i++){
        int j=i+rand() % (TOTAL-i);
        Card t=cards[i];
        cards[i]=cards[j];
        cards[j]=t;
        printf(&quot;%d %d %s \n&quot;,i,j, &amp;cards[i]); //Just to see the shuffling results
    }

    printf(&quot;Enter number of cards in hand: &quot;);
    scanf(&quot;%d&quot;, &amp;num_cards);

    printf(&quot;Your hand: \n&quot;);

    //Just take first n cards
    for (int i = 0; i &lt; num_cards; i++) {
        printf(&quot;%s &quot;, &amp;cards[i]);
    }
    return 0;
}
</code></pre>
<p><a href=""https://godbolt.org/z/374WdK571"" rel=""nofollow noreferrer"">https://godbolt.org/z/374WdK571</a></p>
","-1","Answer"
"79663332","79662939","<ul>
<li><p>Test that <code>scanf()</code> succeeded (is the return value 1) and that <code>num_cards</code> is within [0 52].</p>
</li>
<li><p>Form a deck of 52 cards and then shuffle per:  <a href=""https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm"" rel=""nofollow noreferrer"">Fisher Yates</a>.</p>
</li>
<li><p>Draw <code>num_cards</code> cards.</p>
</li>
</ul>
","4","Answer"
"79663505","79662939","<p>As another answer and some comments have stated, a standard way to shuffle cards is to use a <a href=""https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle"" rel=""nofollow noreferrer"">Fisher-Yates shuffle</a>. Here is code demonstrating that and also discussing an issue with generating a uniform distribution.</p>
<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;


#define NSuits 4    //  Number of suits.
#define NRanks 13   //  Number of ranks.
#define NCards  (NSuits * NRanks)   //  Total number of cards.


//  Generate a pseudorandom integer from L (inclusive) to U (exclusive).
int UniformInteger(int L, int U);


int main(void)
{
    srand(time(NULL));  //  Initialize pseudorandom number generator.

    int NCardsInHand;   //  Number of cards in hand.

    printf(&quot;Enter number of cards in hand: &quot;);
    scanf(&quot;%d&quot;, &amp;NCardsInHand);

    //  Initialize deck.
    char Cards[NCards];
    for (int i = 0; i &lt; NCards; ++i)
        Cards[i] = i;

    /*  Draw NCardsInHand from Cards without replacement.  As we do this,
        cards prior to element i in Cards are those drawn, and those at i and
        later are cards remaining in the deck.
    */
    for (int i = 0; i &lt; NCardsInHand; ++i)
    {
        /*  The basic concept of a Fisher-Yates shuffle is simply that we draw
            the next card randomly from the undrawn cards.  Thus, the new card
            to be at position i is selected from the undrawn cards, which are
            in positions from i (inclusive) to NCards (exclusive).
        */

        int j = UniformInteger(i, NCards);  //  Get a number in [i, NCards).

        /*  Bring the selected card to position i and move the card currently
            in position i to the selected position.  (This may be the same.)
        */
        char t = Cards[i];
        Cards[i] = Cards[j];
        Cards[j] = t;
    }

    //  Display the results.
    printf(&quot;Your hand is:\n&quot;);
    for (int i = 0; i &lt; NCardsInHand; ++i)
        printf(&quot;%c%c &quot;,
            &quot;23456789TJQKA&quot; [Cards[i] / NSuits],
            &quot;CDHS&quot;          [Cards[i] % NSuits]);
    printf(&quot;\n&quot;);
}
</code></pre>
<p>That takes care of shuffling the cards if we have a good routine for generating random numbers in an interval. Unfortunately, that is a problem. Here are two implementations of <code>UniformInteger</code>:</p>
<pre><code>//  Generate a pseudorandom integer from L (inclusive) to U (exclusive).
int UniformInteger(int L, int U)
{
    /*  The rand function has a fixed distribution over [0, RAND_MAX).
        Assuming it is uniform, and we wish to ensure rand is called at most
        some finite number of times p, it is impossible to convert rand's
        distribution perfectly to a uniform distribution over n values, when n
        is not a factor of RAND_MAX**p.

        We have two choices:

            We can convert the distribution approximately, allowing some values
            to have greater frequencies than others.  The variation is slight
            for small n, at most one part in floor((RAND_MAX+1)/n).

            We can limit the values we accept from rand and iterate indefinitely
            until an acceptable value is obtained.

        Code for both is below.  U-L is expected to be representable in an int.
    */

#if 0

    /*  This code produces an approximately uniform distribution.  The excess
        frequencies are skewed toward the beginning of the interval.  In some
        applications, it may be preferable to distribute them throughout the
        interval.
    */
    return rand() % (U-L) + L;

#else

    /*  This code produces a uniform distribution (if rand does) but executes
        an undetermined number of times.  When calculating the number of values
        rand may return, one more than RAND_MAX, 1u is used so that unsigned int
        arithmetic is used, ensure the sum is representable.
    */
    while (1)
    {
        /*  As long as U-L is reasonably small, the following line will mostly
            generate values in [L, U) and only occasionally generate U.  When
            it generates a value in [L, U), we accept it and return.  Otherwise,
            we loop and try again.

            Note that this rejection occurs less than U-L times in RAND_MAX+1
            times, typically a much lower rate of rejection than picking one
            card from NCards and rejecting it if it is already in the hand.
        */
        int t = rand() / ((RAND_MAX+1u) / (U-L)) + L;
        if (t &lt; U)
            return t;
    }

#endif
}
</code></pre>
","3","Answer"
"79663966","79663868","<pre class=""lang-r prettyprint-override""><code>sigfig &lt;- \(x, dig = 3) ifelse(abs(x) &lt; .Machine$double.eps, &quot;0.00&quot;, 
                               ifelse(abs(x) &gt;= 100, as.character(round(x)), 
                                      formatC(signif(x, digits = dig), 
                                              digits = dig, 
                                              format = &quot;fg&quot;, flag = &quot;#&quot;)))
                                      

sigfig(c(100, 1001, 0.21, 0, .Machine$double.neg.eps, 0.0001))
#&gt; [1] &quot;100&quot;      &quot;1001&quot;     &quot;0.210&quot;    &quot;0.00&quot;     &quot;0.00&quot;     &quot;0.000100&quot;
</code></pre>
<p><sup>Created on 2025-06-12 with <a href=""https://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex v2.1.1</a></sup></p>
","1","Answer"