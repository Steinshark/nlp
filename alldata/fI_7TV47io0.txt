um so it it's absolutely wonderful because we had like two horror shows um and one very useful contribution here and I will get back to the horror stuff and it's super fun because I I I really couldn't fathom that we would have two horror shows about msvc tonight today which is it's wonderful tells a lot and um so I'm I'm going to talk a bit about um why we tried to run msvc online how we managed to pull it off and a few of the things of the roadblocks we faced on the way as TP so um yeah it's it's it's a lot so the first question what why would you do that to yourself um well uh it turns out we had a customer that had a very interesting requirement and we were just experimenting with uh build distribution and they were they had the requirement that they needed to build four window windows with msvc and so we couldn't really cross compile with any of the classic stuff and the built distribution technology we were using was Linux only for the container side so we were like we can't really do it but we have a dumb idea um so there was a lot of good reasons you want to do this because Linux has great IO performance there is no antivirus in your way and TFS is like there's many better F systems and NTFS in terms of speed at least and there's a lot less quick tweaking required Etc so there's a lot of good reasons why you might want to use a compiler like msvc on another operating system and there's one special thing here forking on on posix or unixes is way faster way faster so there's also a good lot of reasons not to even try uh obviously no one kind of uh thought of giving this a try in design phase of msvc uh I won't go into all the details of the ideas we came up with why it's a really bad idea but we did it anyway um so the first very interesting stuff is how to get uh an msvc installation uh on another system than Linux turns out that it's probably lost Cod cause to try to even run the official installer on wine like I I I looked at the crash dumps it's be like I I stopped at the third or fourth try and um actually there was a genius thing is that they just published Json um manifest that contained kind of all the URLs and Paths of the things you have to download then you just have to figure out how to put them in the right place um we managed to solve this kind of uh it's a 1,500 lines mess of python at this point um but we managed to kind of replicate the installer behavior of the msvc installer and get a really nice and clean install on a Linux F system um The Next Step was really interesting uh who's familiar with uh msvc or building on Windows year uh so you might know about VC varsol which is your good all friend that you need to make msvc happy um it turns out that that batch script is so complicated and does so many things that the command line interpreter of wine can cope with it like it fails on the first few hundred Lines by misinterpreting a simple if condition and everything blows up then again I I looked at uh crash dumps and uh tried to debug it and figured well sometimes you have to part ways uh this this again this was this was kind of useful to have done the installer thing first because this VC varsel basically just sets 27 environment variables for you to be happy and we knew about mostly all of them um so we generated them during install and now we can Source them in Linux and and everyone's happy uh now for the really fun part so we were we were uh basically implementing uh build distribution so we had a Linux computer driving the build in a emulated Windows environment so you can imagine that like things like path don't look quite the same uh and so do for example common line parameters so um on Linux you typically see minus some flag name or double minus some flag name and a value for for some common line Flags in Windows you will see Slash and then a name and this kind of collides with path um letters on on on Linux so cmake which we run on on Linux in this setup is happily generating uh kind of useful things but for example here msvc c/u as a parameter which tells it to do something with a path it doesn't understand afterwards so we had to implement a small um uh forward uh um descent parser uh doing a lot of common line rewrite argu um common line argument rewriting and use this as a Comm compiler launcher in cmake so I knew I I now pretend that I know a a lot about common line arguments uh in the whole msbc tool chain there's a lot and a lot of undocumented ones uh thanks a lot Microsoft um and um it's it's basically used as a kind of shimming application uh and and does some magic so you give it uh Hey intercal launch CL XA with that bunch of parameters and internally does some magic and it will turn this into something which makes sense under wine uh and then executes the CL XA with with all of that in wine so was it was it worth it hell yes uh it's way faster and cheaper to get good Compu in the cloud with uh Linux on it we actually see 20 to 10 to 20% faster builds just because of the differences in process model and this in spite of having Windows kernel level emulation going on uh we can cross compile very easy easily for all the win targets that msbc uh is happy with and uh we can distribute the builds and so uh I I know there's a couple guys from Microsoft here we should talk it's awesome uh and it's wonderfully weird uh so we we we H the first time I saw make cake launching make launching um msvc in wine I was like in all and and was like this feel so wrong but but it it's it's it's amazing and so here's a few benchmarks um there's the one I'm I'm I'm showing is basically we we built all of boost uh on the these numbers is that machine and basically even H incurring the cost of Docker and hyperv viralization because this was running in a Docker on on a Windows laptop uh we get like 18 we we we get like 18% out of that uh and and if we gave it give it give the whole thing into an environment that is not thermally limited we get even a bit more out uh so it's it's really really interesting uh you can try it um if you activate the trial and and and give us a call we we can make it happen and uh other than that thanks and come look have a talk with us at the booth [Applause]