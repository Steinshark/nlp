all right here we go people don't write I'm gonna get controversial I don't think you should write comments in your code pretty much most of the time yeah I'm I'm already I'm already in agreeance actually I'm completely I I completely agree you know I'm not gonna lie to you when I look at my old code when I threw in a bunch of comments the prop okay first off one of my biggest problem with comments is that I often say what the code is doing and that's wrong if you say what the code is doing then I feel like you're wrong but if you describe why it is so strange the way it is or what led to it I feel like it's better you're wrong called it absolutely called it also funny comments and just random swear words always are a win here we have some code where we expect the value first off it's python okay maybe that's your first problem what do you got octothorps for comments octothorp for comments who does octothorps okay nobody that's whom okay that's him you to be five looking at this code it's not obvious what five signals we could add a comment explaining what 5 is but even better we can create a constant representing the variable instead the if statement now reads like a comment that we want I agree typically this looks a lot nicer than the other one a real talk though real talk this is what you know I don't I don't know what code Aesthetics I don't know if he's released a new video recently but he is by far one of my favorite favorite YouTubers okay and status to be message sent if your code is complex enough that it Warrens a comment you should instead see if you can simplify or refactor the code to make it better instead right now this condition is complex enough you can update the message if the current user is the author of the message and the message was delivered less than five minutes ago or if the current user is the administer and you can also edit the message if the message wasn't delivered yet I mean first off right off the rip when I see people doing math if you're doing math in an if statement you've already done like for the most part you've done something wrong like there's some times you know like I can think of some really reasonable times that you want to do a little bit of math okay just a little bit of math I can give you a really good example okay here I'll give you a really quick example this is Zig by the way by the way I program in Zig these days let's just say we have two values right we'll call this one I don't know how about how about C and this one will be say I don't know how about 77 and then uh D and we'll make this one 69. and so if you wanted to do just a little bit of math right so like C minus 8 equals D totally reasonable to me that's kind of what you want to see you know what I mean like this seems like this seems like a really great like this that's fine that level of math really nice any more than that I'm not really into it you know what I mean buying into it okay that we add a comment explaining it but we can simplify this by using variables to name parts of the expression yeah yeah the condition reads like the comment does so the comment is basically redundant and can be removed yup you should again never comment code never never have a company that says what your code does if your code is so confusing you need to write a comment as to what it's doing this is this is the solution when conditions are complex enough like this you could also consider moving the whole condition to its own function now you don't need to decipher at all types can also make comments redundant in C plus plus there's no built-in memory management you often have a function like this where you get back a thing but we need to make clear who will take ownership of the thing ownership meaning the responsibility to release the memory after it I'm exceptionally upset right now that this type starts with a lowercase okay is anyone else here upset right now am I just overreacting I don't like it I don't like it first off this has heavy C Vibes not C plus plus and It's oddly not centered code Aesthetics I I know you for centering things and making things aesthetic but right now this doesn't feel very centered everyone is done with it in order C plus plus you pretty much had to rely on comments to do this yeah if you were given ownership of an object you'd find out by reading the comments of the function but C plus plus added a new type called unique pointer yeah yeah you type represents a unique reference to the object so if you get one congratulations it's now your responsibility it's not even really your responsibility at that point all you have to do is just not have it anymore right that's the beautiful part about the unique point of the unique pointer is C plus plus answer to the borrow checker effectively yeah that's pretty much it it's very simple the type tells you explicitly that you now own it without the need for a comment and even better the type makes it so you get a compile layer if you do bad things with it a comment doesn't do that comment likewise can we all agree that a comment can do this if you're using Tom's software Tom's a genius okay Tom is a genius and J diesel is the future comments are also executable if we have a function that returns an INT but that int is optional we could add a comment saying that negative one yeah but even better we could use a type if we return an optional int instead it's now obvious that we might not give a value obviously Sentinel values were always a mistake but optional values I'm not sure when optionals hit the scene I'm not sure when this became a thing but optionals were amazing right I have never been I've been very happy going down this optional Road uh I don't yeah but the thing is I don't know when the concept of an optional came into being I know you're saying C plus plus 11 but that's not what I'm talking about I'm talking about optionals like is it from when when did this actually happen you know what I mean we can't miss the comment and not realize that we might get an invalid timestamp back the user needs to handle a missing value and they'll get a compiler error you might wonder why don't we just make our code high quality and add comments anyways is it more comments just better now that ignores the problems with comments comments get bugs like code when people make changes to code they often don't update the comments to match but unlike comments you can't see it eight characters or less this one says 10 characters or less we have tools to stop bugs from entering code we have tests compiler checks and linting we don't have any system like that for comments maybe one oh dear sweetness did someone just hear the greatest and latest AI startup did someone just hear the latest and greatest AI startup Tyler checks and linting we don't have any system like that for comments maybe one day we can have some static analysis tool that uses AI to determine if the code matches the comments and flag any discrepancies there's your story wait hold on is he actually literally saying my joke right now the comments and flag any discrepancies there's your startup idea but be okay hey I didn't plan that didn't play Tom's Tom's a genius okay I can't I can't even help it because of this I don't trust the comments even when they exist comments can lie I'm already watched so when trying to understand what a piece of code does I read the code I never read the comments maybe just I just have the mind of a business analyst genius okay that that's right the Mean Streets of the Silicon Valley Hit me hard okay when I see something I go boom that's a startup right there hey what is that out of date comments a I start up hey what's that over there lack of comments a i startup right like I'm ready I'm in I'm I'm ready it's just me do you guys find yourself reading comments to understand code never literally never what I do read is code documentation code documentation describes the high level architecture and public apis of the system code documentation differs from comments where comments describe the internals of how your code works documentation describes how you use the code the world needs more high quality documentation and while we could write the documentation for our code completely separated from our code it makes sense to keep our documentation as close to the code as possible in order to try to help them stay imagine writing HTML in your comments I don't know about that something about that makes me really upset markdown for life um HTML not cool I don't like HTML okay as a 20-year veteran of HTML I don't like it second off there's something about this that's really bothering me it looks like none of the Allies have been have been stopped here are you seeing that or is that just me like I don't see anywhere in here where like I don't see any Li closing tags anywhere in here is it just me this is even Val see that's why I'm a 20-year 20-year season veteran HTML programmer okay 20-year seasons I think tools like doxygen pie Dock and javadoc generate documents directly from code files and therefore change alongside our code it's useful to document what a class or API represents and hold on hold on sorry chat sorry you're talking about xhtml hey have you heard of my friend htmx okay oh all right that guy is that guy that's who we talking about okay that's the real one htmx any expectations for interface definitions like thread safety possible States or air conditions this helps the consumers of the API know how to use it and also helps any new implementers of the interface know how they're supposed to operate and behave the guidance I've given about comments still applies for documentation if we write better apis our documentation will be more concise and less prone to errors but I can see that you'll never be able to make all of the parts of the system obvious with pure code I do think there's a few cases where you should consider comments All right what are these I I strongly almost never want comments something non-obvious for performance reasons a comment can help explain why the code looks weird if the code okay this is a fair case this is a fair case but I will say that if this was tested in a micro Benchmark it almost exclusively incorrect micro benchmarks are liars and there is no sort no so no no no no gosh I'm I'm dividing by zero right now there's no less liar than JavaScript micro benchmarks when anyone shows you a JavaScript micro Benchmark I want you to know that the line teal okay what is utilizing a specific mathematical principle or an algorithm from a particular Source you might consider linking to the source to help future maintainers there's this comic called commit strip I just feel like I did did it just get like empty in here for a second oh let's go back for a second something felt like a I just like did you feel that the code is utilizing a specific mathematical principle or an algorithm from a particular Source you might consider linking to the source to help future maintainers there's this car that is just so abrupt are you a cop I'm not a cop I'm a businessman with the business plan I'm gonna make you money in business land definitely not a cop all right comic called commit strip and one of the comics is about a guy telling a developer that one day we won't need code in the future because you'll be able to Simply write a spec and the program will just write itself the developers are castically retorts that code is just a more precise way of writing a spec yeah I mean I think it's wrong and AI is coming for all our jobs and we should be afraid of the impending social political turmoil that comes when our best tool for Distributing wealth the job disappears but alas it's it still helps my point code is a much better way to exp base okay based breast intent then comments about code so in general if you feel like you need human language to describe your code see if you could make your code more human [Music] go there donate to this guy okay [Music] donate to him right now