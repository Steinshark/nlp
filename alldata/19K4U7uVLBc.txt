okay so let's be real here most of us probably get into coding at least partly for the money right and like contrary to what most people will tell you there's nothing wrong with this per se but there is a problem most of us like I used to think that all we really need to do is learn the skills and then because coding is such a valuable skill you'll eventually be able to just go out there and build your apps and whatever and make a whole bunch of money but the reality that most people don't tell you is that it's not really as simple as that is it especially in this new age of chatibility and other exponentially developing AI you simply cannot rely on just being a tinkerer who can write some code because to make money with code there's actually like a whole different skill that you'll have to learn on top of your coding skills if you want to be able to use these skills to actually bringing some cold hard cash and I recently learned exactly what this skill is while I was on a coaching call with my startup business coach Baker on this call I learned of this very simple frame framework that you can start using today that has helped the care himself because first of all a two-time successful startup founder himself and he also uses the same framework to allow countless other people with technical skills start turning their skills in to money what I've learned is that there's one simple key that most people completely miss when they start to think about becoming maybe an entrepreneur or just starting to think of ideas to make like passive income and things like that and the gist of it is that money goes to people who solve problems for others now what I learned from Baker is that there's a three question framework that we can use to start coming up with a great problems so my experience has shown me that most questions most questions are bad questions literally the quality of of your of your entrepreneurial success is defined by the questions you ask exactly what I witnessed in my in my in me helping in me starting companies but also helping other people starting companies over the past years I developed a my own framework you know how there is the business model canvas framework I think it's really really bad and I will explain to you why I think it's really bad because it has so much happening where you where you just don't know so I developed I delivered my own framework which is much much simpler so just three things three questions you have to answer yourself question one is What markets do I know and now you might think okay what is what is a market what's the market what are you talking about Market's very simple markets consist of of three things it's somebody who's selling something offering a product or service and somebody who needs this kind of product and service but there is always also this Pro this product being delivered or the service being delivered and in exchange for money this is really important for Market this is how markets work right so let me bring this this concept down just like go through your history if you have no clue where to start go through your history and write down all the experiences you make even if you just been like a member in a gym or so this is a thing if you have encountered in your life like people go inside people pay people use like use the stuff you know there is somebody at the counter there's like money being transferred monthly basis and so on so write down everything the only thing that the users of your app are gonna care about is does it solve some problem for them is it useful to them or not finding actually useful apps and problems to solve is not easy so that's where the first places start is just to look at areas that you know what have you done in your life what have you experienced because there's a million different things that you could do in this life but those areas that you actually have experience in and that you actually know are the best places to start to actually start coming up with concrete problems like if you've never been an accountant you're probably not the best person to try to come up with the next big accounting software or something like that I sometimes talk to people like in the first like discussion and then they they say exactly what you said I don't have anything yada yada let me keep talking for an hour and then things keep popping up oh I did this I did that actually I've done this actually I've done that and like you have to it's a process you have to take your time you have to like open your mind and just like be open because it's creative work what you're doing and there's different levels to creativity coders like in general where you're generally speaking are not very very good at Super Creative like free flow thinking anything counts like you know um because they want to be exact they want to have it work right but this is a skill that can be that can be learned definitely even after you've found some markets you're still not ready to start coding sorry because what you need to get you closer to this key is question number two the second question is what problems have you entered right so say for example you you're a gym goer and you notice that I don't know let's say that making the contracts is really complicated so if they print out a form you have to fill it out it takes forever like they have stupid questions this takes forever this is just one simple simple problem in the whole Market but it's one problem that you encountered right remember question one all the markets question two is what problems have you encountered in all the markets don't judge don't judge this is like this is not the time to judge it's a time to really like be creative and write everything down no matter how bad it is right because judging comes better maybe you applied for universities and you realize that the application system sucks or maybe you like learning languages and you haven't found a way for you to easily track your learning and to have some sort of a system to track your learning progress it's a problem that could be solved by for example building an improved language learning portal or something like that but also don't get too hung up on problems that you have because remember making money is about providing value for others and then getting money in return for that so it's not actually important what problems you have it's important what problems other people have and ideally as many people as possible so you can have as many customers as possible so what is what is the difference between like a handyman um and the entrepreneur the difference is very easy the the handyman the the tinkerer they think about when they start projects they always only think about themselves which is which is totally fine I'm not judging that at all you know this can be great fun like build your own stuff this can be great fun building is amazing but who does it serve it serves only this one person right so the entrepreneur thinks about who can I serve besides me so even if you're if you're building something where you have the experience you have to think about what do people actually want and what are they willing to actually pay for because that is how you make money it's not about us it's about other people with this YouTube channel it's not about what videos I want to make it's about what videos do you guys want to watch because that's what's gonna get me views and as a result money like if you want to just build projects that you want to build that's cool like go for it but just realize that that's probably not the best way to start coming up with projects that can actually make you money but even if you do to these two things or funding markets and finding specific problems that you have encountered there's still a massive problem standing in front of you and this key here's what it is the third question is what are your skills your individual skills and solving the problems you witnessed right because it doesn't matter if if you witness this problem if you're really unable to solve it it really doesn't matter right so for most of the guys like probably watching your videos guys looking girls it's coding stuff it's coding Blended so I know how to solve like software issues so you have to write down all your skills without judging you know maybe it's just like you're really good at like talking to people you're really good at making and making YouTube videos you know this could be like a skill you have just write everything down and then once you did that you need to look at the intersection between these three areas so it means what markets to understand what problem is there and what skill can I bring in to really dig into this and I came up with this with this really easy framework call it the promising business idea promising business idea framework PBI framework because everybody cannot can come up with business ideas is it a promising business idea okay it's maybe not a promising yeah and I would advise everybody to really look at what is your unfair Advantage where nobody can can really beat you because if it's somebody that anybody can do probably you don't have this Okay so we've answered these three questions we've found markets we found actual problems that we have encountered before and we have figured out what skills we have to solve those problems there's still one mistake that if you do this it's still gonna stop your progress the only currency which which proves if your business is working or not is actually money in your bank account this is the only thing that matters this is why I personally press people to go into the market as soon as possible like can you build a minimum wild product that still that has the Core Essence inside it you know how they how they say like perfect is reached when when you can strip it down no more without losing the core this is when like it's really perfect like you know how Apple products have like one button not like loaded with stuff you know stream bring it down to the bare minimum I know I'm an engineer myself and I love like building stuff so we have the tendency to start like coding and like uh doing stuff but it's completely wrong like strip it down to the bare bare minimum and then you should go to forums and and talk threads and so on and then measure actively if there is Word of Mouth happening and if people are still using it after you stop talking about it and this is a really good indicator and then the second thing would be can you monetize it like I'm not talking about thousands I'm talking about can you make 10 bucks from this thing and then I would continue if not I would I would probably change the whole thing or about like abandon the project at all you might have all these crazy ideas of these bells and whistles and all these that you want to include but in the beginning you want to actually hold back it and you want to simplify it because the last thing you want to do is do what business owners used to do in the past which is like going into some cave and like building this amazing thing for 12 months only to then realize that no one actually wanted the app in the first place and this is the biggest mistake that programmers wake like they have this perfectionist mindset and it's like oh I need to have this efficient algorithms and like all these amazing features like oh look I know uh interesting architecture this is so complicated your first users are not going to care about these things they're just gonna care about does it actually solve a problem for them and as much as you might think that your idea is amazing the only way to really know if your app actually is amazing is to just put it out there and the fastest way to do that is to just try with the simplest version possible and if your simplest MVP version doesn't get any traction the idea probably isn't as good as you thought it was your first idea might not succeed the second idea might not succeed either but in life businesses fail but entrepreneurs succeed if you just keep trying eventually you will succeed the question is do you want it bad enough and this is the key to making money with code it's not about the cold guys it's about being a problem solver you have the ability to go out there and find problems and then solve them for other people and this is exactly the same mindset that you need to have even if you're just an employee especially as you get more senior companies will expect you to be able to think like a problem solver coding is just a tool to solve problems that is why it's a valuable skill because there's so many problems that can be solved with it now you just need to go and find them and no it's not easy in life anything worth doing is not easy but I can tell you that it is so worth it if you yourself have dreams of turning your technical skills in to an actual business and you would like help implementing these steps that we have discussed right here I will leave it back here's YouTube channel Down Below in the description he makes excellent videos about self-improvement about tech and about business he also does coaching he's been coaching me and it's been tremendously helpful like I said he's a two times successful startup founder he helps other people do the same so if you're interested you can find a link to his startup coaching from his YouTube channel I would highly highly recommend it okay so as we discussed the crucial theme of this video is being a problem solver and to be a good Problem Solver there really isn't any other way than just to keep solving a lot of problems to keep your skills up to date recently I've been focusing specifically on the skill of algorithmic problem solving and I've been doing that using this video's sponsor brilliant and the one that I've been going through just as practice is the algorithms fundamentals course and what I really love about these is that the more I just learn about the skill of learning in general the more I realize that everything with learning is just about interactivity you need to be constantly practicing what you learn brilliant has literally been built around this idea of interactivity brilliant also focuses a lot on visualization which is another learning technique I'm a huge fan of and this combined inside their interactive lessons just makes even complex ideas click so much faster to try everything brilliant has to offer for completely free for a full 30 days you can visit brilliant.org internet make order first 200 of you will get 20 off Brilliance annual premium subscription go sign up now if you haven't done so already