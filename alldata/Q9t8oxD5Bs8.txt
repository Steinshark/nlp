hackathons I've been to good ones I've been to bad ones probably the worst one I ever went to was just a bunch of self-professed ideas people writing Concepts vague Concepts on a whiteboard while all the programmers just stared awkwardly at their laptops was totally cring and juicing but the best one I ever went to I wrote my first proper application in Elm which nudged my career in an interesting New Direction I met someone who quickly became a friend and then soon after that they became a colleague which again was a career changer and on the day I won a Raspberry Pi which is terribly nice you know their best hackathons are huge fun they're a chance to learn and experiment and sharpen some skills and a place to meet like-minded people in an introvert friendly setting but at their worst they're a total waste of time how do we separate the good ones from the bad ones how do we make the good ones happen and what else is there to get from a good hackathon could there be anyone better placed in the world to answer those questions than Koda turned professional hackathon organizer John gotfried he has been at the heart of the hackathon world for a decade since he co-founded Major League hacking and I wanted to pick his brains and get his expertise if we're attending hackathons how do we find better ones if we're organizing them how can we do a better job especially when it's a company that's organizing them and that has some conflict of interest potentially and fundamentally you know we're in this to have fun and to learn how do we do more of that let's find out I'm your host Chris Jenkins this is developer voices and today's voice is John gotfried my guest today is John gotfried John how you doing I'm doing great thanks for having me Chris it's a pleasure to have you over you um you've been doing for the past 10 years I think you've been doing something close to my heart which is organizing hackathons which I've always found a lot of fun um no that's not true actually I have not always found it a lot of fun I've had great times at hackathons I've also been to some terrible ones me too and I want to pick your as a veteran organizer of them what makes the good and the bad but before we even get to that we should ask what's the whole point of hackam what are we trying to achieve I think of hackathons like a marathon uh everyone might be participating for a slightly different reason uh you have the people that are there because they you know are competitive and they want to win you have the people there where it's a personal challenge to even finish and do it in the first place uh you know you have people there who just want to do better than they did last time um it really is kind of a Choose Your Own Adventure style event but everyone who's there is there to build something technical uh that has a wide wide range of meaning you know you could see robots or websites or homemade self-driving cars all at the same event but everyone's there to to create something okay but that's the participants what about the organizers because it's a two-sided coin right that's an interesting question I I actually don't get that one that often um you know I think that's actually changed more than the participants have over the years uh you know hackathons have often been organized as a community event so a way to bring your local developer Community together maybe you have a particular passion for a certain like language or stack uh and and those events are often organized by volunteers as a way to sort of just create a dedicated time and space for their peers to build things um but over the years you've seen a lot more uh sort of like corporate driven hackathons like here's a hackathon on my specific developer platformer API here's a hackathon on a you know uh theme that my company cares a lot about here's a hackathon that is designed to you know make me money for some reason uh you see at all um the one that sort of like most resonates with me is the Community Driven hackathons and and I do think that's kind of like the purest form of the concept but um there is quite a variety of organizer motivations yeah I I wonder if like I mean I think when a company does it it can be done well and it can be done badly and I'm trying to keep my opinion out of this and get yours but I I think that when a company does it really badly it's like we'll pay you in pizza and you have to train yourself to use our product I I agree I mean the flip side is what do you think is a good way for a company to get involved well I think what you're really talking about is what is the incentive what is the motivation and what is the outcome uh if it is I will trade pizza for you know like IP obviously that's a pretty deal um and I wouldn't go to that event if it's hey you're a super user of this platform and we're throwing this event to show off a new feature and get your feedback on it that might be a very different exchange you know like you might already care a lot about how that platform develops and this is an opportunity to actually like be involved in that process and so the actual like economics of it might be the same you might still just get pizza and some swag but you could leave feeling very differently than if you came in you know uh just to serve the company and didn't get anything out of it personally um I I think that what makes a good hackathon thrown by a company is a developer first mindset like I don't want to go to an event that is designed only to accomplish the goals of the company throwing it I think that that is a very one-sided experience if a company is thinking about what do the people who are attending this event want out of it how can we serve them how can we make this a a valuable memorable experience for them that's what creates a good corporate hackathon um and you know there's a lot of nuance to that right like I mentioned IP earlier you should not have to sign an IP agreement to go to any hackathon whether it's organized by a company or anyone else uh you should not have to you know sign over even the the ideas that you've created uh you should be able to build what whatever you want right within reason uh you should be able to you know come up with creative interesting ideas like all of those things make it more of a developer experience than a a company experience but you know you see it all I I don't think that company hexons are inherently bad but I do think if you don't approach them with the actual end user in mind they can run the risk of being exploitative yeah yeah it's like a lot of developer relations it should be from the company but not about the company almost be about people Tech yeah and I think the same thing applies to conferences you know the difference with hackathons is that you might be there writing code but if I went to a conference that didn't care about their attendees and only wanted to be a marketing vehicle for the company that probably wouldn't be a very good conference yeah it quickly feels like you're going to one of those time share meetings they're trying to sell you an eighth of a villa in Spain or something exactly yeah okay so then we should look at how you do that well like what things do you think you can give a developer from a good hackathon and then how do you organize them so that they get those things well it depends on the the demographic of developer that you're talking about here so at mlh we primarily work with developers who are early in their careers and so for them the motivation tends to be around learning things stretching their skills in a safe environment getting mentorship connecting with peers or even industry professionals and so the the motivations tend to be very like intrinsic like I want to go into this event and come out having gained some skills and connections um and honestly like for a college student free food over a weekend is actually a pretty compelling proposition you know like they're not swimming in money for the most part um for a professional that's quite different right developers tend to be pretty well compensated they you know probably have things going on outside of work that aren't social or hackathons right and I you know think you have to to approach it a little differently so things that I find really compelling about corporate hackathons um access to unreleased products to experiment with them test them uh really kind of like be involved in the product development process uh I find it really compelling to be able to gain some of the um marketing audience and reach of that company so if I'm a developer in a particular ecosystem right like let's say I'm a really passionate I don't know like like GitHub like open source maintainer or something right and I go to a GitHub hackathon you know it might be a really compelling proposition for me to get featured on their blog or you know to gain some kind of like sponsorship of my project as a prize uh that's not necessarily compensating me directly but it might be a way to leverage the greater sort of audience of the platform that's putting on this event uh I I think it can be really compelling to um you know just like meet other people who are involved with the same developer ecosystem that I am like I remember at twilio you know many many years ago before mlh we used to throw twio specific hackathons and you know you would get these people coming who all were really excited about the platform and honestly like just wanted to meet other people who were as excited as they were and so the networking and the connection part of it was just as valuable as them getting to play around with like new apis oh yeah do you think that implies that good hackathon is in person rather than online I think it is difficult to recreate the Serendipity of in-person events online I have been to good online events and I've been to many many bad online events uh but I do think that like the things that are really organic and natural about being in person with a group of people where you just happen to strike up conversation or you see that cool sticker on someone's laptop and you ask them about it or you know you get introduced by a friend like all of those interactions are not impossible virtually but they're significantly more difficult like I remember you know back in 2020 20121 when all events were basically online uh there were a lot of attempts to build virtual networking virtual discussion groups like all of those sort of like serendipitous encounters and it's a little awkward right like you you have to really um buy into the tooling of that process in order for it to work and the tooling is just not as human as running into someone in a hallway yeah yeah I think online has proven to work very well for business as usual but for the the novel stuff I think it's harder but what do you mean by that I mean like your regular weekly team meeting with people you already know well and work with for a long time yeah Zoom is just fine you don't need to all be in the office but for like brainstorming new things or planning a new Direction which is what you end up doing at hackathon every single time yeah I'm not sure anyone's cracked the online version of that I think it's hard I mean I certainly think like creative exercises are harder online um we've all done them out of necessity at this point but that doesn't mean it's better than being in a room with a whiteboard does that mean I would give up you know working from home like I don't know right a different question but I I do think that it's it's harder yeah yeah most most work I think doesn't actually need that kind of work every single day um I've done plenty of stuff where we went into the office for the start of every Sprint and that worked but you've got a different because you're presumably you're seeing a new audience nearly every time and you're trying to cover I'm assuming Major League you're trying to cover most of the United States do you end up spending a lot of time on the road I I used to spend a lot of time on the road um uh we actually built a uh program we call mlh coaches which is our staffing program so it's almost like a junior devell program when you say program we're not talking software right just to clarify no I mean a a a program in the sense of recipe people can yeah like a a strategy a recipe like like there is software Associated but it's not software okay just checking Yeah so basically what we built is uh a junior devil program and so the idea is that you have all of these people in the mlh community uh who are Community organizers they're running meetups on campus they're involved with throwing hackathons maybe they are you know putting on workshops for their peers you know there's kind of this like Grassroots group of people who care about building their local Campus Community and what if you can give those people some additional training and a travel budget and you know have them staff hackathons and so this was something we built I mean now it's quite a few years old but it was our solution to the we don't want to travel every weekend of Our Lives problem but also it was our solution to how do we actually build the next generation of people who are you know developer evangelists um and a lot of the people who have come out of the program are profess developer you know relations developer evangelist developer Advocates these days and so it really has been a jumping off point for them but for us it's been um this you know mechanism to both like share what we have learned and also scale our reach yeah yeah I I can see that I can also see it's like really hard to train people for devel that's the first structured semi- repeatable idea I've heard for that which is nice it is really hard and I think that having people physically go to events representing mlh is part of the secret sauce of how they learn um and we don't just like throw them to the wolves like the way our training process works is there's a uh you know sort of asynchronous part right like you go through curriculum you learn things by reading and answering quizzes and watching videos and all of that but once you've done that you actually get flown out to an event with a group of other new coaches and they're there with a more senior staff person and we run it like a cohort training like everyone just like watches and and sort of like is their almost as an observer for their first hackathon to see like how does this look and feel in in reality um once they've done that then we do what we call a paired event where their second event is them and one other person where they are taking the lead but the other person is there to sort of like guide them yeah and only after they've been to those two events sometimes three uh do they actually go to an event solo and so there is this like gradual ramp up process that I think like really familiarizes people with what's going on and you know hackathons are kind of a chaotic environment right and so at any given moment they might be helping someone debug their code or they might be you know setting up catering right and like I I think that both of those things are actually valuable parts of like learning how to surve a community yeah yeah the reality of just keeping the wheels on the engine right yeah okay then in that case if you trained all these people you're perfectly placed to answer my next big question I because I've I've been to probably the worst hackathon I ever went to we showed up in a room for the day and I'm kind of paraphrasing here but they essentially said medicine build something you know it's just so abstract and so vague nobody got anywhere how do you actually say okay some people are coming into a room to to write some code to learn some things how do we structure this day that everyone will get something out of it yeah so a lot of it has to do with how you kick off the event I certainly wouldn't go to an event and say hey New York like go build something um you know for us a good chunk of participants are first timers at every event uh it's just part of our model it's intentional um we typically have a opening ceremony uh that lasts you know maybe an hour or something like that sometimes shorter uh where our local organizers so like an mlhs model we have local chapters basically on every campus that are doing their events um so the local organizers run that opening ceremony they talk about why they're throwing the event they talk about what people are there to accomplish they talk about you know like the theme sometimes hackathons have different themes or Focus areas and then they often talk about like apis and sponsors and prizes and you know it's an interesting concept because I've had uh various like conversations and debates with people over the years about whether sponsors are additive or you know negative component of hackathons I think they add a lot because if you're not required to use any particular API but you have the option to with people there who are experts in it that's a really cool like opportunity and in you know what you're describing here where it's like what do I do at this event having people there who are maybe experienced developer Advocates or mlh coaches or you know people representing a developer platform uh they can help guide you and so often what happens is people go up on stage and demo an API or talk about you know how you can get free credit for a and what it does and that can get the gears turning of like what do I want to play around with and build this weekend um you know the vast majority of people decide on their project like the day of the hackathon you know it's not something they've been planning for many weeks in advance uh and so seeing who's there and who can both like give them free stuff and also Mentor them um Can guide some of those project ideas like I know when I used to participate in a lot of hacka um I often had like various vague Concepts in my mind and I and what helped me hone in on them was hearing like oh like someone brought you know an apple Vision Pro and they're giving a prize away for the best use that sounds really fun like I'm gonna play with that this weekend and you see a lot of that happening this is the first time you've mentioned this word but I think it's an important one in hackathon play to what degree is this about mucking with computers I think it's almost entirely about that I think I I sometimes describe hackathons to people as like an educational bait and switch and I don't mean that in a negative way but like you know you're a college student if someone want to you and you're like hey why don't you spend your weekend at this like learning event you'd probably be like no I'd rather go you know like play video games with my friends or go out to a bar or whatever um the way it's framed is come to an event there's free food there's swag there's going to be a lot of free credits for different platforms and it'll be this super fun enjoyable way to like play around with technology the learning is a side effect of that like people are primarily engaging in hackathons because they enjoy the process of building something the outcome may not even be important like it's not uncommon to see people demoing their project at the end of the hack and they're like hey like this was our concept and we got like 30% of it working but we you know learned a lot about how to use I don't know like AWS for the first time uh because it's fun right and like developers I think inherently like tinkering and the reason why this format is so powerful compared to sitting in your you know room tinkering alone is that everyone else is also tinkering around you and so there's this sort of like like energy to it that I find incredibly motivating and I think a lot of other people do too to just like see what you can do right and and see what is drawing your attention yeah yeah I wonder if we can transplant that because you're talking about a younger demographic yeah but I also meet plenty of coders who have been sucked into the Sprint Steamroller backlogs bit of management and they've completely lost touch with why they got into programming in the first place yep do you think we can organize things that will bring the joy back to the season programmers absolutely when I was you know a developer evangelist before doing mlh most of our hackathons that we ever did were for professionals um you know the student thing is much more recent I think and it's what mlh has focused on but I I don't know like I actually think that a lot of the community organized developer events for professionals um faded away over the years and I think that's kind of a shame uh and I would like to see more of them I'm only speaking for London here but it definitely entirely contracted during Co and it hasn't come back the way it did no not in the same way and you should be pretty well placed to come up with some suggestions how we can reinv it put you on the spot any ideas I me I don't know that you need a novel New Concept I actually think what you need is uh passionate Community organizers like the best events I ever went to were Scrappy they were lowbudget and they were just like someone who really cared about getting a bunch of interesting people together to build something like one of the best hackathons I ever went to and this is maybe back in I think it's 2008 2009 uh was this event called music hack day which was a series for a long time and it was largely organized by like a bunch of music API companies um but the premise was get a bunch of musicians and programmers and other technical people together to build cool music tech hacks over the weekend and so you would see everything from like I built a new way to build playlists with your friends to I built this new instrument with like an Arduino and a bunch of like weird you know cardboard boxes and I found that like such a I don't know like kind of like inspiring concept because it was multi-disciplinary people were really there for fun and you always saw like such weird interesting like kind of creative applications of this stuff um and the other thing they did that I thought was really kind of unique is they would bring in a DJ uh for the hackathon at night to like have a little party as part of the hackathon so like everyone would take a break from coding together and like hang out and listen to some music and then go back to coding um and it really was this experience more than it was a event with a really specific goal right yeah yeah because that's a nice balance of the I think like I said I think vague things don't work for hackathons but it's a nice balance of the specific and the open-ended exactly mixing theme but it doesn't have uh it's not entirely abstract yeah yeah too vague and you feel like you're just drifting too specific it feels like homework and there is a sweet spot in the middle but so Community stuff yes definitely and that makes some of the best hackathons and yet if you really really get serious about enjoying building hackathons as you have yeah you've turned that into into a business model how do you go from weekend coder for fun to actually turning this into something sustainable so a lot of it was about the level of impact we wanted to have so before mlh uh myself and my co-founder Swift we were both developer evangelists I worked for twilio he worked for srid and you know this was that 2010 2011 time frame where I think there was a lot of community energy in Tech in general um especially in New York where we both lived and you know we had both been involved with student developer communities sometimes as mentors sometimes you know as sponsors uh and it was something we cared a lot about like it's it's very um apparent when you go on campus and talk to a bunch of students who are learning to you know build technology that these community events totally change how they think about it it's not like ay classroom where you're listening to a professor like drone on about algorithms it's hey like let's build something fun and I get that you know the theory is important and it's a good foundation but for most people it's not the part that they are passionate about right and and maybe that's how it's taught I don't know but you know these community events really did unlock something for a lot of people yeah so thinking about like what do we want to spend our time on um there was both uh a lot of organic demand for more student events on campus but there was also like a need for uh structures around it so we could have easily kept doing this on the side like we could have just helped people out as a nice favor and you know like been the the general mentors of the student developer Community yeah um I think the big thing in the early days that mlh accomplished was creating formal connective tissue between all these campuses so you know MIT Stanford like they've had hacker culture for 60 years yeah right yeah I went to a a state school in New York it was a fine school no hacker culture to speak of before you know 10 15 years ago at least not in the sense that we're talking about and by creating like a structure around it you started to give those schools validation and permission to do their own hacker communities and not only that you started to actually like create ways for them to work with many other schools nearby uh in a way that felt like safe and and welcoming and like well thought out um and so like going back to it like I I said part of why we made it a business is to broaden our impact you know there's a point at which like if we're doing this just as volunteers we don't have enough hours in the day or weekends in the year to support as many campuses as as we thought we could support and you know we could have been a nonprofit We could have been in business it doesn't matter right like they're all organizations that are designed to to build something and I think for us it was our way of being able to support 200 schools instead of you know five yeah yeah that makes sense there's something I to ask you about that in the sustainability side but I want you to be a bit more specific about connective tissue between universities what do you actually mean by that so there's a couple things I mean one is literally helping people arrange like communication between different campuses so that people can travel to each other's events so you know one of the things we haven't touched on is that all mlh events are actually Intercollegiate in that I host an event at Columbia University in New York you might have people driving from four five six hours away to go to that event and so you get this sort of like cross-pollination of a lot of different schools where even if you're like the one hacker at a liberal arts college in Upstate New York you can go be part of that community and so that's one thing is like literal Transportation networks and communication the the other part of it is like shared values and expectations so one of the things that you said early on is that like you went to a terrible hackathon so how do you prevent that right like I think the way you prevent that is by having a um standardized set of like what makes a good hackathon that people can emulate and expand on so for us like we literally set out rules for what it require what is required to be part of the mlh hackathon league like your event has to be free for participants to attend it has to uh allow people to own their own IP it has to have a code of conduct like it has to allow people for multiple schools and there's literally like documents on our website that detail all of this um but it means that you could go to an EMH hackathon in New York you could go to one in London you could go to one in you know Bangalore and they will all have like some shared sense of values um does that actually translate into some practical consistency I mean I'm thinking of Starbucks I can go into a Starbucks anywhere in the world and get basically the same experience if I dive into a mlh event in New York will I expect it to be roughly as good as a London one I I think so yeah um every local group puts a little bit of a Twist on it but you should be able to expect uh at least a similar quality experience um I I don't think it's quite as standardized as Starbucks like even from a branding perspective like every event has their own brand and like all of those things but uh the values are consistent right like you're not going to show up to an event in London and be surprised that someone suddenly owns all of your ideas right like like that's not going to happen um and there's other considerations too like and now we're getting really into nitty-gritty but like how do you know that the event you're showing up for is actually happening right like like I've been to events where it was listed on Meetup and I show up and no one's there you know so like we do some quality control of these events where it's like we look at their venue confirmation from their school we look at their budget to see that they can actually afford food for the number of people they're expecting and you got to remember like the people organizing these events are college students so that's not to say they you know don't know what they're doing but for many of them it's the first time they're organizing a large scale event and so we provide a lot of support to them as organizers as well so that they have the ability to like make their creative ideas for the hackathon a reality but also be able to handle the logistics of putting on a big event that's actually cool especially I mean that's a that's a reusable skill even if they don't stay in Tech right yeah yeah and you definitely see a lot of like non-technical or Tech adjacent people inv in organizing the events oh that's cool is there a particular theme to that I mean they like what kinds of people who aren't there for the tech get involved uh you definitely see folks who are in business departments who like want to work in Tech but might not be studying computer science um you see people who are interested in the marketing component of it you see people who are interested in like selling sponsorships you see people who are just like really into Logistics like they love getting quotes from Caterers like I I mean like it's funny but it's not like really a joke um but yeah you get all types and and I think that like you know one of the really kind of like unique things about this as a college student is suddenly you're in this like position of authority where you're putting on an event for hundreds of people you might have tens or even hundreds of thousands of dollars uh in a budget that you are managing with another group of students and there's little to know administrator involvement and that's like a first experience for a lot of these people where it's like oh I'm in charge of something there are real Stakes there are real people involved and I want to make it good uh and I think that's like a super cool experience to have when you're you know just starting out in your career where it's like oh like I'm making a budget and I'm putting together a sponsorship deck and I'm setting a schedule and doing email Communications and and you're right like those are incredibly valuable like professional skills of how do I create something out of nothing I mean this is dark but I have to wonder do you ever like are you ever on the phone to someone at 2 amm when they're having a meltdown because they're not on top of the logistics yes I mean the the logistical meltdowns don't happen as often as you would think but like we literally have an on call shift rotation at mlh where our full-time staff like rotate weekends of when we're on call and you know sometimes it's uh a code of conduct incident like we have a very formal process for handling that um sometimes it is oh no the caterer didn't show up what do we do but you know we've seen it all and um you know part of being a larger organization that supports a lot of local communities is over time you build sort of like backup plans on backup plans to deal with things that can come up right so like yeah you know we have budget set aside where someone missed a decimal point and now they need $500 to get food for their event right like that's something that we can shoulder you know sometimes it's like oh no someone got stuck at an airport and their flight was delayed and they need an Uber for two hours to get to this event you know like yeah there's all sorts of weird things that come up but we we do have a lot of ability to handle that often more than like the local student groups do just because we're you know full-time staff at an organization yeah yeah sounds like if the bottom ever drops out of tech you can go into being a very effective wedding planner maybe you know it's funny like I um I never thought that that would be a big part of my job but I I certainly have learned a lot about logistics and planning events um but I did used to do this for fun like before mlh I I was one of those Community organizers putting on weird events you know in New York so it wasn't out of nowhere yeah yeah that's uh you've taken it with with more a plum than I would have done like the logistics part I I always think of logistics as like a programmer I just want to throw things and have it build an index for me and be automatically organized right that would be nice that would be nice okay so getting back to the community angle of it because I'm interested in this you've been doing this for about 10 years bit more if you count your time at willo right has the nature of the game changed I mean I'm thinking as a as a launching off point for that perhaps like lots of programmers these days are saying it's the end of programming AI is going to change everything you must be seeing that right on the ground is it uh yes and no you know I do think that AI is going to change a lot of things I do not believe even for a second that AI is going to get rid of programmers like the hard part of programming is coming up with Simple Solutions to really complex abstract human problems and AI is not very good at that AI is really good at pattern matching it's really good at creating you know basic Frameworks for things it's even really good at solving complex technical questions but it's really bad at taking uh someone's app idea and turning it into something that anyone would want to use right so like the there's a gap there um I do think that AI will be a necessary part of being a programmer um if nothing else it is going to be the best programming assistant we've ever seen like yeah can believe being able to have code suggestions being able to have smarter debugging being able to have Smart refactoring all of that is incredibly powerful and and frankly it's something I use all the time but I haven't seen anything yet that tells me it can handle the really creative abstract problem solving aspect of programming yeah yeah um when it's the creative stuff the brand new stuff that can't be pattern matched against existing data I think that's true I'm also wondering if it's changed like students expectations going in are they expecting AI to solve all their problems are they I mean there was a time when I assumed half the people at your things were talking at block about blockchain and now they're no longer doing that what are the trends that you've seen over the past 10 years we've seen a lot of Trends come and go like 10 years is a long time in Tech yeah you know 10 years ago react wasn't a thing right uh or at least certainly not popular thing um and so we've seen a lot of th those kind of things over the years like there was a time when Oculus came out where that was an incredibly popular thing to build on uh there was a time where um we saw like this explosion of web 3 projects which is still somewhat happening to be honest um though you know less so in finance and More in just like I'm tinkering with cool technology uh AI is different like people have been doing machine learning in AI projects for a really long time uh even at hackathons the ease of doing it is is different now um the people who I used to see doing those kinds of projects were math people they were interested in building neural networks they were interested in statistics they were interested in like training data um which is great right like those people probably have fantastic jobs right now you know I think the difference now is that become generally accessible like the apis to access a large language model or an image generator or whatever else are plug-and playay and so you see a much broader application of AI in projects um and so you you know creative ideas do come out of that like I think there is um still a lot of room for experimentation even just using something like a chat PBT API yeah yeah okay I can see that do you think but people is that the main thing that students are excited about now is is there is I mean I guess I'm asking what's hot right now I mean AI is certainly hot I think the other thing that's hot is like and this is going to sound really kind of dark is like where do I get a job you know like the last year or two have been not an easy time for people especially people entering the industry and I do think that students are having to get creative about where they look for career opportunities it's not like an obvious path where I go apply to a Fang company and they're hiring thousands of interns and like that is just like how things work um I'm seeing a lot more people like applying to local tech companies or applying to insurance companies that hire develop or whatever else um and I know that's not like a technical problem they're solving but it is an existential problem that a lot of people are thinking about yeah is that something that you deliberately go after and organize do you I mean for funding do you go after sponsors who are hoping the quidd pro quo is they get easy hiring we certainly do work with folks who are hiring a lot of developers um we have not really done it in a recruiting firm sort of way like we don't do matches usually it's like uh employer marketing campaigns so hey like you know you're at the tathan Welcome by the way this company is hiring developers you should think about applying um all all of our marketing tends to be a little bit like soft touch like that um most of our clients though are Developer relations teams like mlh has proven to be a really effective way to build awareness of a platform to get a lot of new people trying it and ultimately to like make it part of someone's tool belt in a way that when the need arises in the professional environment they're already familiar with the tool from having built with it as a student at a hackathon and we've been around long enough now where we can actually track that like longtail value of you know do people actually introduce things at work that they they learned at a hackathon um and they do uh and so that tends to be where most most of our business is funded from and you know I think um I do think there's opportunities to do more in the recruitment space and something that like we've played around with over the years but it's it's a tough space to operate in recruitment specifically you mean yeah yeah so where where are you funded what what is your primary source is it just devil departments looking to train largely Dev departments who want to uh effectively like do a scalable like education program so they can basically take advantage of mh's infrastructure to say hey like let's you know give out API credit at 50 hackathons and give people educational resources and see what they build with our platform without having to like sponsor 50 events and fly all over the world yeah yeah but how do you do that in a nony way if I can ask that question no it's it's a good question I mean I think it comes back to what I said earlier that it's like a soft touch marketing um what I mean by that is it's never required to use any platform we try to make it as interesting and exciting as possible and you know like we try to come up with like fun spins on it like are there cool prizes we can give away are there interesting use cases we can highlight you know I think that if we are able to get developers excited about a platform they will want to use it or organically um I think if you try to force it it's not fun anymore um the other big part of it to be honest is that we actually like the prizes are meant to be small enough that you feel good but big enough that you feel like like recognized for your work and you can go too big and we try to avoid going too big so like never do we see prizes where it's like here's $50,000 if you went on this platform right it's always like 50 bucks or 100 bucks for like something that we think will get you to continue building so here's an Arduino kit here's credit for a cloud platform here's a pair of noise cancelling headphones you can work and I think that like having aligned incentives makes it feel less icky because now you're like oh cool like I built something fun and I got something fun as a prize not this is a Cutthroat competition where I want to win $50,000 is that what goes wrong when you spend too much on prizes that changes the mood I do think it changes the mood I think that there is a I I don't know exactly what the Tipping Point is but like certainly there is a point at which there is so much money on the line that you now start to create a hyperco competitive behavior that is I think like counterproductive to the play aspect of hackathons and it's not not the same event anymore um we we actively discourage that uh I do think that like you know maybe there's a time and place for that if you're like a startup incubator that's like giving someone funding and everyone knows that going into it I don't think the time in place for that is like learning events on campus or community events in a developer Community yeah okay what about the flip side of that then because you do have prizes why not have no prizes at all what does it do having something winning a prize at a hackathon even a small prize can be an incredible motivator for people to keep being engaged with the community um like I remember uh many many years ago I did this like developer contest on some blog where they were like the best project this month wins a Kindle right and I was I just like built like a fun project it was like a cool you know like time to experiment with this API and I won it and I felt so good that this company had recognized what I built and it was not a good application it was like just like a throwaway like experimental idea but it felt so like uh I don't know it felt like really special to be recognized by someone for something that I had created and I think for a student that's doubly true where your whole life is you're graded for your work against specific prompts you know at a hackathon you could be rewarded and recognized for a creative idea that you came up with and built on your own and that is incredibly powerful because you leave that experience feeling like wow I can do more than I thought I was capable of I'm going to keep doing this kind of thing because clearly other people think it's cool um and for the people who don't win it gives them an aspirational path right like you might be there at your first hackathon and you might see your friend you know nearby who just won a prize and you're like wow they built something really cool I could do something like that next time yeah I think it's really powerful and I think that like if the prizes are small if they are designed to keep people building if they're designed to make people feel recognized like that is an incredibly powerful like Loop yeah yeah and it's a good reminder that these aren't just science or accounting machines there is a creative aspect to programming right yeah joy to and like it's almost like judging an art competition you know like how do you how do like I judge a lot of hackathons and I always find it to be an interesting challenge to explain to other judges how to evaluate projects like how do you judge a website versus a robot yeah I don't know right like I usually think about like how much did this person learn how much did they stretch their abilities how novel is their implementation uh how you know well thought out is their implementation uh I don't really care if it has business value but like did they make something cool and did they do that in a way that was like a stretch for them great yeah yeah that's that's a nice set of criteria actually and the antithesis of what definitely happened to the hacking scene in the probably about eight 8 to 10 years ago it became very bro culture about huge prizes and trying to come up for the next big unicorn in a weekend yes and you know like I I was at a lot of those events like I used to go to a lot of the hackathons where people were trying to launch startups and you know it was certainly an interesting experience but I don't think it um creates a like creative Catalyst in the same way so I have to ask you this as a point of contrast like please you're not going after um major competition uh major prizes and um I mean each event is self-contained MH in what sense is it Major League hacking you know um so we actually do release rankings of the universities every uh year uh that is probably the most major league part of it um to be honest like we had more ideas around making it an interc Colgate competition in the early days and I think partially we found that it wasn't entirely necessary and partially like it uh yeah I mean mostly just wasn't necessary like like we originally thought like oh people will be really motivated uh to bring people to other campuses and earn points based on how much they travel around and all of that but then people were doing it anyway even though the rankings were just a ranking and no prize and so we've kept doing it but it hasn't really been the focal point of like our model but the brand is cool it's fun people like it and so why why change it it's a good memorable name yeah but maybe that's I mean I suppose it's like the prizes right it's another fun tweak to keep the party going the learning playing party right it is and and you know it's funny like uh when we announce the rankings every year schools are proud of it like it gives the student group on campus visibility to their Administration um sometimes it gives them visibility to employers like it is even though there is no prize money or like reward associated with people are proud to say that they were like the top five you know hacker universities of the year and you know we specifically designed like the scoring so that it's not about being the top CS school on an international ranking it's really like how engaged and active is your local hacker Community ah how on Earth do you judge that because that's even harder than judging an individual entry a lot of it is about how um it's cross-pollination so like how much do people from your campus go engage with other nearby campuses how do you put on events that serve a lot of students and like you know we have various ways of quantifying that but a lot of it it's about like how engaged and active are the students on your campus oh okay and do you find that people continue with it after they've graduated I think so I think that uh it changes um you know the way that you spend your free time as a professional even a young professional yeah is super different than the way you spend your time when you're on campus like you often have more responsibilities you often have a full-time job you often have like all sorts of stuff going on I definitely think that the people who go through our events keep building I don't think they're still going to hackathons every weekend uh I think a lot of them do participate from time to time but you know what we see more is their efforts go towards open source work or you know I'm building a fun side project with my friends over a longer period of time or I'm speaking at conferences you know you find other ways to do like the creative side of Technology yeah if you keep the spirit then you graduate on that too I guess yeah yeah one of the reasons I ask is I um I wanted to get you to contrast cuz another way people get learning programming these days and students in particular is like boot camps yeah and that seems much more fixed self-contained possibly I don't know I I want your opinion on what you think the strengths and weaknesses are of the two formats you're saying of like a traditional Computer Science Education versus a boot camp um no I was I was actually more thinking like someone who wants to spend their time going to hack events hack weekends versus someone that signs up for a specific boot camp I don't think there is a difference I I I think that uh so for us we have an incredibly broad definition of what a student is so when we say we have a student event you could be a university student you could be a boot camp student you could be someone who's like taking a Muk on your own we don't care uh what we care about is that you're early in your career learning this stuff for the first time um and so you do sometimes see like boot camp students going to our hack and engaging with all of this and and being a part of this I don't think that the way that you learn programming or computer science fundamentals matters so much in how you decide whether or not to engage with developer communities um okay you see people who are in boot camps who are highly engaged you see people in computer science programs who are highly disengaged right and they're just trying to like get their degree and move on um you know use the thing that is the Difference Maker is someone uh giving you a personal pitch on the experience um and so there's a little bit to impact there like I think that part of what makes hackathon special is that they are somewhat of a um Niche Community with their own like jargon and culture and all of those things part of being in community is that it's like a little weird you know like if you think about the pitch objectively of like hey like you should go spend your weekend in a room with a bunch of other people like you know locked away Building Technology that may not be the most compelling pitch if you just see it on a website right the thing that usually gets someone to go is a friend inviting them and being like hey this was an incredible experience you would love this come with me just suspend disbelief and then people are hooked and that experience can Happ no matter what kind of educ background you have um but I do think it's kind of like necessary to be invited in in a way uh and we see people doing that in like Mass formats on campus like you see people where they're literally going classroom to classroom pitching their fellow students on hackathons um that's cool yeah it is really cool but I do think it's like you know uh they don't need to be something that is like easily marketable you know like it's okay for it to be somewhat Niche and insular because that makes it feel more special and uh almost like immune to some of the weirder stuff in the tech culture at large yeah yeah it's uh there has always been in Tech I guess an identity of people playing with computers just to see what they can do with them yeah and it has receded into the background a little I think since there's been so much VC money floating around the culture it would be nice to bring that back alive I I completely agree I think that um you know there there's a lot that's been written about like the mainstream isation of tech right like our people who previously were going to go work on Wall Street now going to Tech because that's where the money is I do think there's components of that but I I I also think that you have just as many people who are just like excited about and and in love with technology and have uh Creative Juice to put in it yeah yeah okay let me uh maybe then perhaps finish on um uh I'm going to use a sports term here which is way of my depth what's your Hail Mary pass I hope I'm using that correctly for the people who are more senior in Tech and have lost touch with that Joy of programming do you have any suggestions for how we can get it back within our lives part of the magic of hackathons is that it is a dedicated time and space away from the other things in your life and I think that as a senior person you know you might have a family you might have a lot of stuff going on finding even a weekend to spend time with some other interesting people to just experiment and be creative I think it's just an incredibly powerful uh experience and I don't think it has to be like a big formalized hackathon get three or four friends together you know just hang out at someone's house just build stuff but having that like dedicated time and space creatively to just play around is what I've seen is that it often like uh relights that spark that a lot of people had when they first went into Tech um it can be really easy for Tech to just become like just a job where you know you do your Sprint planning and you write the code and you get your code reviews and like it just happens and you know like maybe that's fun for some people I think for a lot of people it becomes rote uh setting aside some time uh with your friends to be creative is really magical and and I think more people should do it yeah yeah yeah it's making me think I know some uh I know some guys like particularly fathers who will organize a dad's weekend play golf and that's not my cup of tea but maybe that you know maybe the next time you're over in England you can help me co-organize a coding weekend out at a nice club love to awesome John great talking to you and hopefully I will bump into a hacker Thon before too long yeah thanks for having me and I'm sure I'll see you soon happy hacking thanks thank you John I've now got dreams of organizing a hack weekend somewhere in the rolling foothills of Italy you Mediterranean food good wine the sun setting in the distance and missing all of it because my code won't compile that's a good time right there if you're up for joining a hackathon you'll find a link L to Major League hacking in the show notes or it's mh. if you're watching this roughly as it goes out I noticed they've got a games hacking week next week which is online and Global I might see if I can find time to join that that sounds like a lot of fun and I've also put a link in the show notes to the trailer for last year's Great American Bake Off see if you recognize one of the contestants that's a little Easter egg to be going on with before you go if you've enjoyed this episode please take a moment to like share and rate it and make sure you're subscribed because we'll be back next week with another delicious slice of the software World until then I've been your host Chris Jenkins this has been developer voices with John gotfried thanks for listening