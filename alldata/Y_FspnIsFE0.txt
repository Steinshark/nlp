oh hey didn't see you there so you might be wondering what are we going to be talking about today and I have a very special topic for you guys and this has to do with backslashes in Python and you're probably aware that you can create a new line with a backslash but there's a lot more you can do with it there are so many different Escape sequences That You Don't See being used every day in Python and I'm going to go ahead and show you what those are and how you can use them so first we're going to go ahead and start with something simple we're going to create some text of type string and here we're going to create some single quotation marks and as you know if you want to use single quotation marks inside the text again you're going to have to go ahead and use an escape symbol such as backslash two times so you can use the single quotation mark inside so here we can say hello and when we go ahead and print this we're going to get hello in single quotation marks even if we used quotation mark single quotation marks inside here so we were able to escape this and this of course works also with double quotation marks if we want to use double quotation marks inside our string so we can say double quotation mark double quotation mark but we'll be able to use those double quotation marks inside our string so that was the first and most common way that you could use the Escape now you can also use it in case you want to escape and Escape as you can see there we can escape the Escape character and type in text and when we go ahead and run that we will have the Escape character there and the Only Rule to follow here is that you want to have an even amount of escapes or else the program's not going to know what you're trying to do and it's also important that your text ends with an even amount of backslashes because if you insert a normal backslash it's going to try to escape the quotation mark and you do not want that now the third way you can use it is with a new line you can go ahead and type in backslash new line add text and it will create two lines of text here it's going to create the next line so that we just go to the next line and this is a default separator for the print statement so if you go ahead and double this it's going to call new line automatically for us as soon as we print again but if we go ahead and type in end and get rid of that it's going to print it on the same line so print does that under the hood and it's good to know that so in case you want to get rid of it you just add the end there now we're going to get a bit more sophisticated and insert what they call a tab so here we can do text backslash tab text and if we run that nothing's going to happen because I deleted the print statement so print text we're going to get text Tab and then text again as you can see it's pretty useful in case you want to add a tab to your text but now let's go ahead and create something that is far more interesting and this is called a carriage return and it's created by using backslash R so if we go ahead and say text backslash R and then we say new underscore text and run this we're not going to get anything printed to the console because not all of these backslash Escape sequences are supported by idle or by our python console so we're going to have to go ahead and go to the terminal and inside here we're going to have to call our script by typing in python.main.pi so we're calling this script directly from the terminal and inside here nothing is going to happen because once again I did not print it and I need to stop removing that but if we go ahead and run this one more time inside the console we're going to get new text printed and why is that happening and pretty much what carriage return does is say that okay so we printed text now code return is going to move this all the way to the beginning so when we try to print more text new text is actually going to take over this text over here so we can also just type in X if we want and if we go ahead and run that in the terminal you'll see it's going to replace the T with an X so it's going to say xxt which I cannot pronounce it's actually a hard one so we can go ahead and say maybe Alex for example run it in the terminal and it's going to replace the first letter with the letter we've provided and you might see this making more sense when you have a longer text and you want to change texting to let's say fixing and I know none of these are random words but pay attention to the python console that we just changed texting to fixing which I don't really know what that means to be honest but as you could see we were able to replace these letters over here by using a carriage return and you can use that as many times as you like you can go ahead and say hello here and if we return that and run it one more time in the console you'll see we'll get her long which sounds like a really cool word now up next we're going to look at what they call a vertical Tab and to use a vertical tab you'll type in Text slash V and then text 2 V and then hello and this also has to be run inside the terminal chances are in the idle in the python console it's not going to work so inside here we're going to call our script once again and you'll see that the text is going to have these vertical tabs so it's going to look like a staircase and it's going to start a new line where the last line ended and it looks pretty cool now going to something simple again you can go ahead and do slash B if you want to create a backslash and you can just run this normally because the python console does support this and this is just a regular backslash so you can duplicate that three times if you just want to delete these three symbols now you might also notice that they have a slash F and this stands for form feeding and it's going to work a lot like the vertical tab but it's important to understand that they are not the same thing even if in our terminal they're going to print the same thing such as this staircase over here and it actually took me doing a lot of research to get a general idea on what this is because I couldn't find any kind of usage for this in in modern day scripts for python especially since we're in such a modern era of computers the best I could find is that if you were programming for a 1980 style Sprinter it would eject the paper and start a new page so it was used for new pages on the printer and the implementation depends on the printer so unfortunately I'm not really able to give you a good example on how this works in our python console but it's good to know that it's something very similar to Vertical Tab and it had a lot to do with old style printers but if you have more information regarding the form feed I would love to hear about it in the comment section down below now this one I'm not going to be able to demonstrate to you directly because I don't have sound enabled in my recordings but if you were to go ahead and type in text backslash a this is going to provide an alert sound for your system so if you so if you type in text followed by that and go ahead and run your script it's going to create a sound in your system it doesn't show anything here on my console but you should hear in the background sort of alert sound but that really depends on your computer as well now you can also go ahead and use this with hex values and I'm just copying this from a website this is going to print hello world and these are hex values so as you can see with the backslash you can actually create something that recognizes a hex value and this also works with octal values so for example if you go ahead and type in slash or backslash 100 it's going to print this octo value symbol here so those were the simple ways we could use the backslash inside our strings now it's also important to note that we can use it also for continuing lines of code so for example we can go ahead and say text of type string equals let's say text and maybe we don't want to continue it exactly on this line so we can go ahead and say plus backslash and continue down here text so we continued the same line of code on a different line and if we go ahead and run this without the print statement nothing will happen but as soon as we create it we'll get text text and this can also be very useful if you're creating a check if 10 is more than 10 and we can go ahead and do backslash 3 is more than three pass so as you could see maybe you'll have a long check and you can use this to continue the line or the check onto a different line now I wouldn't recommend it for something like this because this is really highly unreadable and absolutely sucks I mean this whole line of code actually sucks but but it's good to know that you can use this to continue a logical statement on a separate line so that covers everything I wanted to mention about backslashes I think they are super cool and you can do a lot with them I didn't really know half of these until I jumped into them I don't know if I'm going to actually use these but it's good to know that I have the option to in case I do want to use them but with that being said in case I missed something please leave it in the comment section down below let me know what you thought about this video and as always thanks for watching and I'll see you in the next video