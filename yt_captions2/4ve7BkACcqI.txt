do you need math to be a software engineer it's one of the most common questions i get and in this video i'm going to discuss exactly how much math is in the job and whether or not you need math to realistically be a software engineer so there's two types of people watching this video right now right the first group is feeling a little insecure they're not sure if they're good enough at math and they're hoping that i will either one validate them that they can do it or two crush their dreams and tell them that they can't do it and then the second type of person is like that annoying kid in polar express the know-it-all kid hey do you know what kind of train this is actually it's a ballwin 284 s3 class vir type steam locomotive those are the people that are already engineers and they want to see whether or not my opinion matches their opinion and if it doesn't i'm going to hear about it in the comment section but let's focus on group one for now the first thing i want to talk about is the assumption that you're not good at math although you might feel deep down that you are bad at math you actually might not be it's socially acceptable to be bad at math like if you don't immediately understand every single topic you're told that you can just use the i'm bad at math card and you can get out of the accountability of like trying at math and you can move on with your life the truth is you're probably not as bad at math as you think you are math is tough and there was a few kids in class that got 100% on every test and they understood every topic immediately and you are comparing yourself to those kids but if every single software engineer in the world had to be one of those kids we wouldn't have enough software engineers in the world we also have other people that were middle of the class that were upper end of the class even ones like myself that were lower end of the class and when people say they're bad at math it's usually not actually math it's arithmetic it's like you're talking to someone and someone says oh yeah what what would 12 * 13 be and you go oh my god if i can't answer this in the next 3 seconds i must be bad at math it's like arithmetic and math that you actually do on a job and math you do in university it's completely different i was so shocked when i went to university that all we did every class every assignment every test was proving different theorems how do we prove this theorem using this set of theorems that's not what you did at all in grade school or high school or when you're talking to people on a day-to-day basis it's just a different kind of math you've never practiced it before how do you expect to be good at it so the first thing i want to say about this there's a book atomic habits it's a really great book one of the main points of atomic habits is if you want to get good at something if you want to form a habit in something you have to add that as part of your personality you have to add it as part of your identity if you want to be good at ma you are good at math starting now starting right now you're watching this video you are good at math if you can't think what 12 * 13 is off the top of your head one day that doesn't automatically validate that you're terrible at math and you knew it the whole time that's just a slip up oh ah mistake next time i'll get it here's the dirty little secret of software engineering in the world at whole so i started streaming every single week on tuesday at 7:00 p.m. i even created a second channel called jason goodison 2 where you can keep up to date on some of the older streams if you happen to miss them come join the streams every tuesday at 7:00 p.m. eastern time ask whatever question you have i did have this one major issue though when setting up streaming which was my tabs are getting out of control like i literally have so many tabs open on chrome at every given moment that i can't reasonably even tell what any of them are and it's destroying my ram so a friend told me the technical name for this is tab frustration so i was like how how do i deal with tab frustration so of course i went to youtube like you're doing right now and i found a video by opera hab island oh i like [music] that call that's perfect you know when you when you are reading documentation and you open like 60 different tabs for like all of these different links that you're clicking and being able to collapse that all into one man that's going to be such a lifesaver [music] that's awesome i'm telling you this is going to be so helpful for me for like being able to separate streaming from youtube from work so every time i use this browser i find something new about it that that surprised me i didn't know you could do before and i'm really loving the experience i actually partnered with them for this video so this video is brought to you by opera they made this possible so thank you so much opera download opera for free using the link in the description here's the dirty little secret of software engineering in the world at whole you think that there's these gates that are stopping you from doing things i'm not smart enough i'm not attractive enough i'm not tall enough i'm not good enough at speaking these limitations exist only in your own head and in the mouths of you and your friends when you say them you need to make sure you pull yourself away from people that speak like that and you need to put yourself in a different mindset so let's talk about the jobs that actually do require math there are some jobs in computer science where i feel like you kind of do need to know math not all of them but some if you want to do anything in deep tech now i'm talking ai research ml research computer graphics it's not impossible if you're not good at math again you are good at math we talked about this now it's still possible if it's not your strongest skill but you're probably not going to enjoy it if it's not the thing that you live for so if you want to go into graphics if you want to go into ai and ml i'm talking deep tech here i'm not talking like hitting the open ai servers but if you want to do those things then probably you want to spend some more time playing around with math enjoying it making sure that it's actually something you want to do day in and day out and if that if that requirement is met you'll be fine i even remember after my first term at waterl i went back to my high school and i met my math teacher and she was like how did it go and i said you know i definitely failed at least one math class they were just unbelievably hard i remember them telling us that you're allowed to fail eight courses before you drop out and i remember doing them the stats in my head being like am i actually going to get this degree can i actually pass all of these courses without failing a eight times and i actually did i i never failed a single class that was because i worked really hard at it not because i was like you know sh noasa romanu jan the guy that that that knew infinity that that never studied math but just somehow knew it his story is that god would tell him things give him math equations god doesn't give me math equations i'll tell you that i haven't been good enough he hasn't been telling me them i've been asking he hasn't been giving them to me and so this brings me to one of my my points which is don't base whether or not you can do something off of what some loser on youtube thinks like no matter how much you like me or dislike me i have absolutely zero bearing on what you can do in your life the only person that that knows that is you i wish i truly internalized this when i was younger like people say stuff like this and you think like oh okay yeah whatever uh you can do anything but like you actually can maybe just pause the video or wait till you get to the end of the video and sit with that realization for a second like you actually can do anything that you want to so what do you want to do and if that's i want to make a lot of money great you can do it i want to be a software engineer and make a lot of money great you can do it it's possible even if you actually genuinely are someone that's not good at math again you are good at math we've talked about this but even if you genuinely are someone that's not good at math it's still possible the way i can actually prove that as a real phenomena is when i was in my degree i remember there were tons of times where i was asked to prove something on an assignment or a test and i i would look at it and go this is impossible i would try it for hours and i would think this is absolutely undoable but i would think about it and i go they wouldn't have asked me the question if it was undoable so i knew it was possible and i would eventually get the answer but that exists in real life too if you start from the idea that anything is possible then anything is possible but it's much harder when someone hasn't given you the test hasn't given you the assurance that there definitely is an answer to this question because i asked the question in the first place and that's what you get on tests and assignments but that doesn't transfer over to the real world you start with the assumption that things aren't possible and you give it a half ass try and it doesn't work out and that validates it to yourself that it wasn't possible it absolutely is now i've said a lot of like semi- motivational stuff i want to talk about like how much math is actually in the job like in a day-to-day so a lot of the math you use in computer science actually comes down to the fact that computers are done in base 2 instead of base 10 most of the time and that's to say uh computers run on ones and zeros they run on binary i actually have an example of this on one of my internships i had to make a bit mask which was essentially an 8bit number where each bit represents is a boolean value for some feature so imagine we had eight features and we have an 8 bit number and each one and zero represents whether or not that feature is on or off it's a very clever way instead of having to pass a bunch of strings or a bunch of flags or something you can instead just pass one number to represent all the features you want on and off and you can even just memorize the numbers so for example if every single feature was turned on that would represent eight ones back to back and in binary that's the number 255 if i want to turn on all the features i just pass into 255 it makes it very quick and easy to use it also makes it super easy cuz you can just x or a bunch of like feature flags and that condenses into one number which is passed in and and everything's done for you on top of that usually algorithms require a little bit of base two knowledge right we work with binary trees a lot binary trees obviously are binary they have two children so a lot of these algorithms that deal with binary trees deal with maybe some logarithms or maybe an exponential so algorithm analysis big on notation does have a bit of math again you're going to use that probably day-to-day on the job but it's important to understand and then i would say the most common way i use math in my job is actually just basic logic like for example de morgan's law where you take not a or b and you can turn that into not a and not b sometimes this simplifies if statements like a lot but that's pretty much it i don't think i use too much more than that having said all that math is a very stressful experience in school and when you're job searching and so i got to think that maybe i didn't like math but i actually do enjoy math i haven't done it for about 5 years now and i've really started to miss it so this year i actually purchased a bunch of math textbooks and i've just been going through them on the weekends and it's actually really fun once you take away the pressure and the expectations from math you realize that it's actually just a hobby like any other and it's actually really fun and it's good way to keep your brain active let me know in the comments how much math you've used at your job