so someone just got done saying this right here hey you're the one that gives me complexes because i uh use javascript and react from youtube yep i'm that guy uh also i want you to read this one right here when you start your civil war reenactment which is i'm going to use ed for a week man just make sure you're using a quality keyboard i had an intro into pascal as my first cs course in fall 1984 uh in a lab full of cpa slash m machines that had a terminals uh so beat up that their keys would stick specifically the enter key we could only sign up for one hour at a time and we had to keep all of our work on an eight inch floppy and pre-work our code on paper and type it as fast we could at the lab i just wanted to kind of say something with those two things combined right there right um i genuinely feel bad for anyone newer to the industry and the reason why i feel bad for you is that i mean read that sentence think about how fundamental the work was or we use the term fundamental maybe closer to the metal might be a better term that uh that eigen tourists had to do right it was very to the metal right it's very close like you knew what assist calls you were making you knew what you were doing you knew how close everything was whereas imagine learning today today you sign up and you go i want to learn how to program so you sit down and you google how to start programming you get some sort of youtube video up and it says okay first what we want you to do is sign up for versel and let's start a next js project and i want to think about that for a second how many layers of abstraction of abstractions of abstractions have been set up such that your first website you ever make is serverless it's a javascript server it's a javascript client it is going to be using react it's going to be using react server components it's going to have this entire file based routing system all put in all of this all put into a single thing and that's the point in which you learn right it's like you're trying to learn about earth and you do it by first observing earth from jupiter like okay yeah there's this like bright thing out there it's like there's so much to that and so much abstraction that i genuinely feel bad for anyone starting because what you have to learn in some sense is simple it's much simpler than trying to write serverless yourself by far but the amount of individual technologies and concepts you have to learn to put your cat pictures online is incredible compared to what i had to do i had to do an apache config file an ht access file i didn't understand it but i copied three lines of code and put it in there and then i started a php server and then that was it right i displayed my cat pictures it was like 17 lines of code and it went from apache into php and there was nothing else and when my server went down that was that like i understood you know like 80 of what was happening just by simply programming that out but think about the layers of things you have to go through now to get to where you want to be i realize i don't even have anything actually updating it here i'm way off and it just makes me feel like i i genuinely feel bad for people starting off because you don't have like you have to learn so many things just to do the world's simplest stuff there's so many little individual steps that you have to take to do something and i genuinely feel bad about that i genuinely do and i'm sure it's easy to give up i am sure it's easy to feel overwhelmed and i am positive 100 that there are so many people that try and give up because the abstraction is just so dang high i don't know what the solution is to be real i don't know what the solution is obviously anyone that's sufficiently motivated will simply learn how to do it i believe that besides for like people that have a true true learning disability i can't read very well i have decently word salad problems but i can still learn and with sufficient motivation i've learned everything left college as one of the highest uh uh scoring computer scientists in my in my group uh but for me learning was very very simple i learned the art of programming just to a cli i learned data structures in which i printed only to the cli i learned about advanced data structures and algorithms only to a cli i learned the math behind all those things and had to prove the inductive case and why recursion worked and that's it and that was on paper i spent multiple years just just doing this really really narrow thing and then i started doing the bigger things and it's just like when i came on to doing something else the amount of just like the amount of difficulty to everything was just so much less because i'm like oh okay yeah it probably works because of this and then i did you know then i did networks where i had to program these tcp udp sockets and make chat rooms and it was all in c and i had to do all this stuff and it just was so much easier for me and so is learning via college are these more longer slower foundational things better i don't know if they're better a lot of people dropped out right can i say it's any better i didn't say websocket i said socket there's a little there's a little different there and so it's like you know which one's better i cannot say and i would just like to you know i just like to say that my complexity when i was learning was learning how to program harder problems learning how to understand more complex topics but we're fundamentally foundational when you learned how to do an if statement learning how to do a for loop was that much easier from a for loop learning how to build a class or an object was easier from a class or an object learning how to do a linked list it wasn't a huge jump it was incredible i remember that moment seeing a class with a reference to itself and realizing how memory like that was my first time that i was just like that's how memory like you can just keep pointing you could just point it uh you know what i mean and it's just like those like steps though fundamentally difficult and a lot of people with six months 12 months of programming experience today couldn't even do that like right they don't even have the underlying programming skills to do that for me i could do that but i couldn't do what they did right i couldn't build a useful application so it's like uh it's so difficult no it's it's clearly not get off my lawn i'm expressing a difficulty that i don't i think it is very very hard if you take this as get off my lawn no offense but you are just looking for a reason to disagree i'm sitting here saying i think you guys have it so much harder than i did i feel genuinely bad for you so if that's how you look at get off my lawn no offense but you're kind of ridiculous i'm literally sympathizing with you saying i don't know what's better i don't know how it's both harder and easier you're absolutely right because you get to move stuff around and build an application that's kind of useful but when i learned i didn't have to know i didn't have to know react i didn't have to know the squirrelness and upsettingness of javascript i didn't have to know how to store stuff in a database i didn't have to know about serverless and where things are hosted i didn't have to learn about environment variables i didn't have to learn about all that right i had to learn about how to program program the thing how to do an if statement how is like for me one of the first things you have to learn is how is an integer laid out in memory who here as one of their first things had the right binary by hand and do binary edition right it's just a different way of approaching the same problem it's just different you know and so did i have it easier or did i have it harder i genuinely think i had it easier because the problem space because here's here's how maybe i can think of it better is that in today's world uh in like a boot campy world you have this right which is you got like react right you got all this browser stuff that's kind of going on you got servers that you have to understand you got databases that you have to understand you have to understand environment variables you also just have to understand routing and how routing goes with your file basedness or however you're doing it and then not only that but you also have this like same slice but then you have like spelled and you have spelled kit right and you have all this competing advice and then you also have like solid right and then you also have like solid start and you have the same wheel that you have to learn in so many different things and then you also have on the other side you also have like golang and you have you know their html templates and you you just have like all these competing things and then you also have to learn about potentially docker and you also have to potentially learn about various hosting services and all these things just to get started and this is like a huge problem space whereas sure mine was like a very deep deep hole that i started on um but real talk the hole that i was working on was like you know just data structures and algorithms right and i did this for two years right people starting off today are doing this in three months like just think of the differences here right it is vastly vastly different between these two diagrams i'm doing one single thing so did i have it easier i would argue i had it easier uh which language i had to do it in uh c and java no c plus plus only c or java um and so it's like you know like i don't know i i go back and forth which was i go back and forth constantly on which one is easier which one is harder is going through the full fundamentals better for a programmer than going through the boot camp style i want to say yes but i also want to say no you know what i mean like i can't quite say which one's better at the end because at the end truly it's your style of learning the time you have available and your motivation right because some people just they learn better by not like by having less direction right they when they when they feel the pressure just on themselves to figure something out that's like where they grow and do the best i think and those people that that do that they're just going to go off and they're just gonna go and learn no matter what right even if they have to go to college they're going to learn if they go to boot camp they're gonna take it for uh further um i don't know uh like one more thing you know you know for those that are trying to figure out boot camp or university i always draw this line which is like where's your self-motivation right if you're kind of a motivated person but you also kind of like direction go university route if you are highly motivated individual i think you should go more towards the boot camp route because what you can learn in university you can learn in two years of really dedicated behavior and just kind of jump some of the things you don't necessarily need to know right um right do you really need to spend uh one and a half years learning uh data structures or should you just learn about how trees graph and lists work and do that over the course of two weeks and say that's good enough right you know what i mean and so it's like which way should you go it probably depends on the type of person you are right and also you have this whole time available thing you have life circumstances that are going on like life circumstances are really important right if you have a kid is it easy to go to university not really it's much much easier to learn on your own because then between the moments where you have the time you can totally do the learning on your own versus a university has hard set times and deadlines and and these out of band labs and out of band meeting with other students and out of band doing these tests that are three hours long it's just different then you have to learn about chemistry like what the hell are you doing learning about chemistry you don't care about chemistry you know what i mean i think ultimately the university route is probably better long uh long term for those that are decently motivated but it probably makes no difference for those that are sufficiently motivated right oh what you did was simple not necessarily easy sure fair that's fair anyways just thoughts i've been having and i've been really thinking about this and i i just because i because i know there's a lot of new people here and i feel genuinely bad for all the people starting off because i don't know what the right thing is right now what gets said to you is learn everything oh and by the way we're gonna say that web dev is the only thing that exists not only does web dev being the only thing that exists everybody out there has a super hyper strong opinion like opinion so strong that if you don't learn react you are effectively risking your career right multiple people have said things near that and to me like that's that's kind of crazy right it's kind of it's kind crazy like that's that's like that's the advice you get right i mean theo theo is coming around i feel like theo's starting to see that you can take maybe more than one route and react it doesn't have to be the starting point and the only point um i mean i think it's easier to get a job by learning react uh i think htmx is great uh i think go is great i like rust i don't like the community not not by the way when i say community i don't mean like tokyo rs guy he's great i don't mean a lot of the people that are just lurking i'm talking about uh you you know which ones they're annoying um but anyways it's just twitter rust there you go that's probably better anyways i just feel bad because you not only do you get told what to learn you get told what to learn in an extreme like intense way a way that i can't really relate to because when i got started there was no like you better learn vim or you're going to be horrible at programming right no one said that to me when i started learning no one said oh you're using java yeah get ready to be legacy no one said that to me there was no social media when i got started facebook didn't exist right i couldn't even sign up for a facebook until like 2007 or some some nonsense right like i'd even have a choice you know so it's like i learned for the sake of learning i had myspace yeah that's the thing is i learned for the sake of learning and how to do it you know it was weird it was different but in deaf 10 plus years in this situation describing has made me completely numb no matter how much i learn i feel like i'm drowning in new tech i can't keep up yeah see that's the thing is it feels really bad because even all of us who are doing it full time none of us can keep up at this point nobody can keep up except for those that can perpetually be within this like kind of um tech sphere right like if i could full-time open source and only think about uis right the only people that can keep up right now is like ryan carniano the guy writing uh solid.js or rich harris the guy writing um uh sveld because only those people purely spend their time thinking about this like intense world of the web right and so then their thoughts are just like so much further ahead of yours whereas yours is just like i need the right i just gotta write something to display my cat picture okay that's all i just need to i i just need to display my cat picture uh how do i do that you know what i mean it's their job exactly and so it's like your job is to pro per uh right now in the tech world your job is to perpetually be behind it feels bad but that's kind of what i see is i don't think they're necessarily wrong like i think like you know like someone said theo being a person that's saying react to the only thing good i think theo's trying to do the right thing i think theo's trying to help you get a job i think theo views the world through a certain lens uh which is that he really really likes typescript and it's made him successful and so he wants you to have it and it's obvious that it made him successful and it'll probably make you successful too in real talk learning typescript and react will probably get you a job if you want to do web stuff he's probably right it's probably the fastest track to get a job and i cannot even argue it one bit um but it's not the only thing you know what i mean and so i grew up and i did um you know i did it i did robots to start off with i i wrote robots for the predator i i helped program an invisible fence something that used ultra wide band to detect anomalies in volumetric areas and then to rotate and swivel a camera towards that area and what i learned is that government programming or government programmers are just inept absolutely the dumbest uh they design things just out of their butts someone put a giant motor underneath a camera and uh guess what when the camera would turn guess what would happen to the or guess what happened when the when the planetary pancake motor would turn which by the way i programmed that algorithm to turn in the driver guess what would happen when the motor would turn on i don't know a big ass electrical field and guess what would happen to the camera's memory when it would turn on it's just like yo don't why are you putting a big magnet generator underneath some memory who's doing this who's doing who's doing that right just flopping bits all over the place dude it took me literally it took me two months to figure out what was happening because i didn't have electrical training i didn't know what the hell was happening i am i created the most elaborate debugging process of all time to figure out what would happen oh my goodness i was like throwing in like the oscilloscopes in there trying to like do it i was like where the hell is this thing flipping at dude i was getting so good yeah we had rng i was playing fortnite before fortnite existed anyways at the end of the day i'm kind of having my own personal return to monkey experience right now you know i'm building my own little thing right here that's using htmx playing conway's game of life it's absolutely fantastic it's funny this thing is flopping so fast that it looks like it's going slow because this thing's only producing at 30 frames a second but this thing is going at an insane right here watch this i'm gonna slow it down and it's gonna speed it up on screen yeah look at that i slowed it down and now it's sped it up on screen that's kind of funny but anyways this is all client-side javascript and then i have a whole bunch of htmx at the same time i returned to monkey and it really wasn't all that hard it was kind of fun it was kind of a fun experience going back to monkey and now i'm thinking maybe i've maybe we have jumped the shark maybe just maybe we went a little too far and go in hdmx is beautiful the name is the primagen