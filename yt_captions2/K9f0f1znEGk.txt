hello in this episode i'd like to finish off the refactoring that i started last episode so i'm going to begin in the map generator where i'd like to take all of this flooding stuff and move it over into its own class called something like the threaded data requester i'm going to cut this out and then in unity create a new co-op script threaded data requester and i'll open that up and just paste all of this code in that and also go to take the map a thread info struct okay start at the bottom and finally grab the two queues cut those out and put those at the top okay now one thing that i dislike about this current implementation is that for each different type of data that we want to be able to request so we've got height map mesh data and maybe later on there'll be some others we have to create a separate queue we have to create two methods to handle that data and we also have to have this if statement and loop inside of the update method so you can imagine if we have a bunch more different types of data then this is going to get really out of hand so i'd like to change the way this works a little bit i'm going to delete one of the queues and also delete the two methods pertaining to their queue and the block of code inside of update that related to it and i'm going to try and make this code work for any type of data so starting off i'll just rename these methods so instead of requesting a height map this is just a general request data method and instead of being the height map thread this is just a data thread and the queue is just - iq and even this map thread info isn't necessarily map info can just be thread info all right now to get access to actions and threading and all that stuff we're going to say using system and also using system dot threading all right so previously when we called the starter thread it would then generate a certain type of data based on which method it was if it was the height map data thread with the mesh data thread so this would have this call to some method and it would be passing in all these parameters but of course we can't have anything like this anymore because we want to be able to generate any type of data inside this one method so instead we're going to have to make it so that when someone calls request data they have to pass in the method that they want to use to generate that data so i'm going to represent that with a func of type object and this is object with a small o which is an alias for system dot object don't get it mixed up with unity engine dot object as are different things so i'll just use small o object and i'll call this the generate data all right so this funk is just representing a delegate with a return type of object and with no parameters so we can use that to generate a data object now our callback isn't going to be of type height map and since they're just going to take in an object parameter and then into the data thread go to pass in this given generate data method so over here this will also be func of type object called generate data and once again this will take in an object and here we can just say that our object call this data is equal to the object returned by the given generate data method we then just that data into our thread info and the thread info isn't of type item app anymore and nor is it of type id map up here in fact the thread info isn't going to be generic anymore rather we going to take in objects like so and here on a constructor as well all right so that should now roughly work i quickly like to make it a little bit more convenient for other classes to access this request data method just by making it static now of course since it's static it can no longer access this instance method the data thread so we're going to need to make a static reference to this threaded data request object for call the instance and i want to assign to that as soon as possible so do that in the awake method you can just say instance is equal to find objective type so we'll be searching the scene for an object of type threaded - requester okay so now inside the static method we can access this instance method by saying instance data thread alright so i'll save that and i'll save the map generator as well and go into unity and we've both got errors from where we were requesting the height map and also build another one where we're requesting the mesh data so want to replace this with our new threaded data requester using the request data method and now we need to pass in the method that we want to use to generate the data so that will be height map generator generate height map currently we don't have access to some of this information though so to the constructor i'm going to add height map settings called heightmap settings and i'm going to replace the mesh world size variable with a reference to mesh settings just call that mesh settings and the reason i'm replacing it of course is that that value is stored inside of the mesh settings so now instead of getting map generated on mesh settings it can just use mesh settings straight off and instead of mesh world size we use the given mesh settings dot mesh world size and after that in all cases where we're using mesh world size so that's just over here and here i think now i'd like to store a reference to the height map settings and the mesh settings outside of the constructor here so we will create height map settings sort the importers height map settings and then mesh settings call it mesh settings and then in here simply say this dot height map settings is equal to the given height map settings and this dot mesh settings is equal to the given mesh settings alright so getting back to our request article we can start pricing our parameters into generator height map so for the width and height that will just be mesh settings and a dot number of vertices per line and then we want to pass in the height settings and finally the sample center that we calculated alright so that's all the parameters for generate height map and then there's one more parameter for the request data method which is our callback in this case being the on map data received method all right now currently this won't quite work and that's for two reasons the one is that the request data method is expecting a callback which takes in an object and over here the unnatural received method is taking in a i smap instead so let's change this argument type to be an object now we know that this object can be converted to a height map because we specifically passed in this generate height map method and use this as our callback so we're confident in saying that this can be converted to a height map like so and i'm is going to call this height map object and this whole method i don't want it to be called on maps are received and said it's on height map received and this should be called height map as well and the bool should be high strap received okay now there's one more problem with the way this is currently set up and that is that the request data method is expecting the generate data method to have a return type of object and take in no parameters now our generate high clap method has a return type of height map and takes in a whole bunch of parameters so the return type isn't a problem because it will be able to automatically cast just about anything to an object but these parameters definitely are a problem now one thing you might imagine doing is creating a new method which returns a height map and is kentucky called generate high smap this takes and no parameters and all it does is this calls this method so if we now pass in generate height map over here we're passing in a method that returns a height map and which takes in no parameters so that would be perfectly legal and indeed there's nothing wrong with doing it this way you might think it's actually a cleaner way than the way i'm going to do it since at least now we don't have this super long line going off the edge of the screen but i prefer to not have to make this but message here instead going to use a lambda expression and it's going to basically be doing exactly the same thing except we're declaring that new method in line so we make an empty pair of parentheses to say that this is a method that takes in no parameters and then we use the lambda operator so an equal sign followed by this arrow and then we say that this is what the function returns all right now the other place we're going to be getting complaints is down in the level of detail mesh class where we're requesting this mesh data so here i want to say threaded data requesters don't request data and going to pass in a call using the same lambda expression idea to mesh generator generate terrain mesh i will pass in the height map as well as the mesh settings and level of detail so we've already got a height map reference over here i'm just going to rename this to height map and then we want to also take in mesh settings like so and then here we can pass in height map dot values and the mesh settings and then the level of detail right and then the callback is the on mesh data received method and here we just need to change this to an object i'll rename this mesh data object and here before we call create mesh i'll just cost this to a mesh data all right now i'd very much like to move this string chunk class to a separate file because this endless turing script is getting very big so i'm going to grab this and i'm going to select probably include the level of detail mesh here and we will cut that out go into unity create a new c shop script called terrain chunk pinero and just paste all of that in here okay to get access to vector two's game objects and so forth we're going to need to see using a unity engine up at the top here and then to be able to get access to this level of detail info class int ago to endless terrain and just move it outside of the endless terrain class so it's a standalone struct we say is that we can then come back into the turing chong class and just fix the remaining problems so first of all we no longer have access to the viewer position so let's just take in a transform for the year viewer in the constructor here and just save this outside transform viewer and assign it okay and then i'll make a little vector two accessor called the viewer position and this just returns a new vector to from the viewers position on the x and z axes all right then the max to distance is simply the visible distance threshold of the last element in the detail levels array so you can just create a float somewhere here max view distance and we can assign to it in a constructor max your distance is equal to detail levels with an index of detail levels dot length minus one so the last element and we get its visible distance threshold all right now the next issue is adding the tyrrhene chunk to the visible terrain chunks list which is in the endless throwing script now i don't want this trench on class to be sort of accessing the endless terrain script i'd rather have an event called something like on visibility changed and endless terrain subscribes to that event and then actually adds the chunk itself or remove that depending on the visibility so up here i'm going to create a public event system action going to have two parameters the one will be a terrain chunk and the other one will be a boo for its visibility i'll just call this on visibility changed all right so over here instead of adding or removing the terrain chunk we'll just say that if that on visibility changed event is not null then we're going to invoke it passing in this terrain chunk as well as the visible bool and perhaps we should just put this after the visibility has actually been set all right the last thing is when you access to the collider generation distance threshold which is a constant value store in the end of transcript over here and that actually completely belongs to the terrain chunk so i'm just going to paste it in at the top here alright circe now save this and set things up in the endless terrain script now first of all endless terrain is actually going to have a name change it's going to be called the terrain generator because later on it's going to be responsible not just for endless terrain but also for generating fixed size maps i'll right now the map generator is going to no longer exist quite shortly so i'm going to delete that reference and delete that from there and now our get mesh settings and the height map settings and so on the terrain generator script especially in to have its own references to those so a public mesh settings and a public high stands and also the third one the texture data which would also be called the texture settings area to keep things consistent all right so now instead of referring to the map generator which is get our own mesh settings over there i'll write in some quick cleanup we no longer need to store this max euwe distance variable and your position doesn't need to be static anymore since it's all public for that matter since it's no longer accessed by the terrain chunk and our visible terrain chunks list also doesn't need to be static any longer okay so we are using the max distance variable over here but it doesn't need to leave the start method so just define it there all right now let's go down to where we're creating a new terrain chunk and we're going to cut this onto a separate line i'll say terrain chunk new chunk is equal to that and of course the constructor has changed fairly significantly we need to now let's see passingly heist map settings as well as the mesh settings and then the other thing has changed is we need to pass in the viewer transform over here alright so now we ask the new chunk into the dictionaries add method and then we're also going to want to subscribe to that on visibility changed event so over here let's create a void on visibility changed we call this on terrain trunk visibility changed and this takes in a terrain chunk and a pool is visible and we can say if the terrain trunk is now visible then we want to add it to the list so it's a visible terrain chunks dot add the given chunk otherwise we of course remove it visible terrain chunks don't remove chunk all right so to subscribe that we just say new chunk dot unvisited invisibility changed plus equals our on terrain chunk visibility changed okay now i'd like to make sure that this method is subscribed to the event before the height map is requested because if the height map gets received and we update the terrain chunk before that method is subscribed to the event then we might get a change in visibility over here without being subscribed so the end should miss a call and that would be disastrous so to get around this problem i'm going to make a public void called load and this line where we request the data is going to go into the load method and then the terrain generator once it's subscribed to that event will say new chunk dot load okay so let me save this and make sure it's all working maybe got an error or two okay so i forgot to pass in the parameters we need for the full request mesh we need to pass in the mesh settings and i think there's another request mesh call over here in the update collision mesh so just pass in the mesh settings here as well and then we should be good all right as an hourly map generator it's lost its reference to the end of terrain script since we changed its name so let me just go here what should we call it terrain generator all right and let me set this up so you hr to pass in the height wrap the texture data and the mesh settings and then has this retained its values looks like it has one thing i must quickly do actually is in the map generator recall we have this staff method to apply the texture data to the material and update the mesh heights at the beginning of the game that's not going to be moved to the terrain generator to the staff method over here so this is going to be called texture settings instead of texture data and the terrain material named mat material here for some reason alright save that save the map generator and let's try this out now so i'll just press play and a whole lot of nothing is happening alright that had me confused for a little while but just forgotten to add the shredded data requester to the scene that needs to be in there so now if i play this hopefully it'll work this time so we've created all of these terrain chunks and i'm just going to talk to you here and try moving the viewer around okay so it seems to be working and no chunks are getting left behind great so last thing i want to do is move the remaining map generator functionality into the map display class and then get rid of the map generator okay so let me open up this map display class which i mean to rename to map preview and overwrite and then heading into the map generator i'm going to grab these different variables and paste them in some over here and i also want the on values updated and draw map and editor and the on validate method so grab those and paste them in alright so we no longer need a reference to map display since this is all happening in one class and then just to organize this a little differently on the in to put these on values updated and the on validate methods right at the bottom since those are the least interesting to me alright and then we don't need to change the scale of the mesh object anymore since once again that's happening in the mesh these days all right now looks like to make so that when we call the draught extra method it automatically enables the texture object so texture renderer gameobject.setactive true and it disables the preview mesh so mesh filter game object let's set active false and then just the other way around if we ask it to draw mesh so set the text object to false and the mesh to true ok let's save that and try it out got some errors ok the whole map generator class is going to go delete it now say farewell and then over here we need to link up to the map preview i don't it'll let me do that all the errors okay we've got errors in this editor script this is the editor for the map generator but now it's going to be an editor for the map preview so just change all instances of map generator to map preview like so and i'll rename this to map preview and call this the map preview editor all right and i'll save that and hopefully all the errors all right so it'll remove the old map generator from that and i'm going to put this map preview on a separate object so i'm just going to say copy component and then remove component and fresh empty and just put this at zero zero zero i'll bring it up to the top here call this the map preview and this is going to hold so what this court object is i'm going to delete that to hold the texture plane and the preview mesh and just rename these to preview texture and preview mesh and then i'm going to paste the map preview john they're very quickly add these assets heist map settings and mesh settings oops and i also want to add the material that's the mesh material i think ok so then let me say auto update and now it's drawing the noise map if i change it to fall off math across the fall-off map and on mesh it will draw the actual mesh now it seems to have not updated the texture values so let me just go into the map preview and just say that when we ask it to draw the map in the editor and this could ask it to go texture data dot apply to material and i'll pass in the terrain material okay let's try this this time alright seems to be working and if we change the level of detail that works as well okay one thing you might have noticed is that when i asked it to draw the noise you can see it's very sort of whited out there's a very high contrast and that's just because when we're asking it to draw the height map we're giving it the height map values but the height map values are no longer between zero and one this is including the height multiplied and height curve so instead of passing in just the values to the texture from height map method good passing the entire height map and so then in texture from height map going to change this to an actual height map object and yet the width and height it can just use the values all right and then when it is getting the value over here first of all we have to say dot values but it's going to now squash this into a range between 0 and 1 by using the inverse left function between height map dot min value and heightmap dot max value given the height method you okay so now when we give it the full of map we have to convert that to a height map so you can just say new ice map object and if all of that is in the range 0 to 1 so it can just say the min value is 0 and the max value is 1 like so all right now we should see our noise map properly and the fall of map should still work and the mesh should work as well very last thing the noise mouth is being drawn really big so i think that when resetting the size of this plane just divide that by a constant 10 and that should just be a little bit more reasonable cool the preview mash has got a hide on play scripts attached so it deactivates on enter play mode is quickly going to make sure that the preview texture has one of those as well so i'll just add hydron play that is now everything so major save and say goodbye until next time cheers