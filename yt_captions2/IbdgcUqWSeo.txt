this video is sponsored by mailgun more on them later hello and welcome back to yet another python tutorial and boy do we have a project in our hands today because we are going to be using python to automate our personal finances you're going to be learning how to use csv data and essentially cleaning up using python into exactly the kind of format that you want the second thing you're going to be learning is how to use python libraries and the third thing you'll be learning is how to integrate python with google sheets but why is this application actually useful ever since i started actually tracking my spending my spending has actually gone down because when i started actually seeing exactly where my money was going every single month i started realizing that oh i am actually spending a hundred pounds a month just on subscriptions half of which i don't even use are you excited yet i am definitely excited so why don't you grab a cup of coffee open a code file in your favorite code editor and let's get going we're gonna essentially do all the heavy lifting of setting everything up first and we can just apply some python magic to do a lot of magical things first of all we need a way to access our transactions in a file which luckily most banks allow you to just download your transactions in a csv file directly from your website but this i can't give an exact tutorial unfortunately because it is going to depend on your bank you just need to find a place to click download on your bank transaction sheet and then click on csv what csv stands for is comma separated common separated values i have a couple of bank accounts and i've downloaded a couple of them the one that i use the least because for privacy reasons i don't want to reveal all my blanket transactions we're going to import a library called csv and i would recommend naming these files in the same sort of format that i've done which is the name of the bank underscore month we're going to find a variable called file we're also gonna define a variable called month the file name we're gonna do an f string it's just bc which is the name of my bank underscore and then brackets the month then you're gonna type these lines essentially all of this does is allows you to access the lines from your csv file if you just go pro in csv reader we're just going to print the row to see exactly how it's going to allow us to access this data and it doesn't work because i forgot to add the ending to the file name here's what we get and if you just compare it to the actual file right here my bank the way they've organized the transactions is that every line is the date the first item of the line the second item of the line is the name of the transaction and the third one is the sum of the transaction each of these rows in this csv reader object is going to just be essentially a list where the first item is the date second is the name of the transaction the third the sum of the transactions before we do some more magic with these numbers we're gonna need to do some more setting up namely setting up access to our google spreadsheets and now there's gonna be a quite a few steps here but don't worry i'm gonna walk you through every single one is all going to be okay take a deep breath and let's go but we want to be using it is a library called g spread we're going to pip install g spread you do that now i've included a template down below in the description that you can download to get the exact same format in google sheets that i'm going to be using the first thing you need to do is enable api access for a project you know click on that head to google developers console it's probably going to give you some window where there's going to be a create project thing i've already done it so i don't have that but you're essentially going to create a project of that click on apis and services and credentials create credentials service account key you fill out this form you just give it some name and it automatically gives you this id done i don't really know what these fields here do it doesn't really matter i just left them blank then you're gonna find your service accounts on these service accounts tab from the left you're gonna click on these three dots on the right and each keys create a new key you're gonna select json and it's gonna download this file which is gonna be really important it's probably gonna go to your downloads folder next what we're gonna be doing is moving this file into this specific folder on your computer and then you're gonna call it service underscore account dot json and little secret i don't even know exactly what it does i'm just following the instructions here now your file is going to be in the right folder and everything should work now the last thing you need to do is you need to open up this json file using a text editor and there's going to be this email address client underscore email which you're going to need to copy then you're going to go to the google sheets template that you downloaded from me or if you created your own one go to the top you're going to click on share you're going to copy the email address and then click done essentially this is going to give you access to access your own google sheets file now to see that everything works you're going to go back to your code file you're going to import and you're going to paste these two lines with the name of the sheet file that you want to be working with in my case i've named it personal finances and then we're going to run our code drumroll let's see if this works everything works we have successfully established a connection to our google sheet give yourself yet another pad on the back now we can start inputting our data from our csv file using python into our google sheets now if all of this is confusing to you so far it's okay take a sip relax and while you're doing that a word from our sponsor mail gun okay bonus python tip email with mail gun you can start sending emails which is a couple of lines of code here's how it works sign up their free trial which gives you 5 000 free emails using the mail gun api you can even add your own domain then it's essentially just gonna give you a couple of lines of code in whatever programming language you're using so we're gonna copy this code then i'm gonna give you this api key and this api based url so we're just gonna copy this down here this one replace here i'm gonna click enter let's see if we've got an email we've got an email it works isn't that magical melvin is how modern companies send email because where mail gun is especially useful if you have any sort of product or business where you're sending marketing emails regularly which is a crucial part of the marketing process by the way you can use male gun send time optimization capability which will automatically find the ideal send time for each and every individual on your list at the time that they are most likely to engage i think that's pretty dope go check out mel gun today and you can do that at mailgun.com internet makeover thank you for mail gun for sponsoring this video i think that is the end of our coffee break now now is where the real magic happens first we need to think about okay what would be useful things for us to actually extract from our transactions for me it's the date it's the name of the transaction so where it went this is also a category of what category of spending that was as well as obviously at the amount as you can see here it tells us the name of the transaction and it tells how much it doesn't tell the category but i'm gonna show but essentially what we're gonna be doing is make our code a bit like ai like a bit intelligent but it's gonna recognize what transactions belong to which category let's just grab the date and the way we grab the date is that we can see that it's the first member of this list so it's just going to be row bracket zero name is row one and for you it's probably going to be different because your bank is probably gonna display them in a slightly different order you might have a whole bunch of data in here you just need to go and look at this file and see which indices of these rows are the ones that you want lastly we're gonna grab the amount and that's going to be your row bracket 2. now for this you can see it's actually a string we want to grab this as a float we're just going to put it inside the float function and we also won't know the category but for now we're going to put category as other and i'm going to show in a moment how you can make this a bit more intelligent with this then we're just going to create this transaction variable with the date name amount and category and at the end we'll just print it to see that it works as you can see right here now every transaction we've got the date we've got the name we've got the amount and we've got a category which for now is other we're also just going to create this global variable called transactions it's going to house all of our transactions and for now it's just gonna be an empty list and at the end instead of printing it we're gonna append it to the transactions list making progress now how can we make these categories something other than just other just for this very simple version what you can do is like for example i know for a fact that this one right here h3g dd is my phone bill so i just go if name equals this i can set the category to be phone bill for example and i also know for a fact this one is my adobe creative cloud subscription these names are going to be exactly the same because what we're going to be doing we're going to be running the exact same code for all of our months and ideally all we'll have to do is change this month variable at the top what i can also do for example is create this subscription names variable and then i can go if name is in so if name is one of these names then we want to set the category to be subscription well there's an error because i've accidentally tried to append the transaction to itself now we can see that we actually have categories the point here is that once we run this for every single month next month the code is going to know that if the name of the transaction is this is going to be a subscription because we told it too okay now we have access to all of our transactions we have saved them in this transactions variable and now we're going to apply the final piece of magic to get these google sheets and now at this point if you don't want to use google sheets you can go do with this data whatever you want you can even do things like with a sum variable up here and then this amount where every time it's gonna add do the sum so after all of these transactions have run we can also access the sum so you can see exactly how much money went in out of your bank account you can immediately see that in march my total was minus 63 pounds in this in this month in june it was 23 pounds etc but at this point of the video if and only you're enjoying this video so far you know my like button down below in the description has been telling me that she's been feeling a bit lonely lately so we would both highly appreciate appreciated if you could go down there give her a little tap it would make both of us feel so good you don't need to smash a little tap is enough and to show both of our appreciation for you doing that here is a picture of a cute dog with some flowers thank you so much for doing that now let's get back to the project okay if you do want to input this into google sheets what you got now going to do is after these lines of code you're going to access the worksheet that you want by going worksheet equals sh dot worksheet and the name of the worksheet now and the way i've done it in my template is that each of the sheets is just named after the month and because we've already got the month variables named up here we just dynamically access the correct sheet using this name right here and then we're gonna create a variable called rows which we're going to get by running this function up here so actually what we're going to do here is wrap this beginning part of this code in a function i'm just going to call it hsbc fin taking in the file and the subscription names and then this and instead of printing stuff we're going to return transaction and we're going to want to access these transactions in here so we're going to go ahead asbc then to run this code using the file and the subscription names now in this row variable we've got the transactions by running this file before we do anything to see how we insert data into google sheets so in this function the first argument is going to be a list of the values that we want to insert and there's gonna be a second argument which is gonna be in the number of the row where we want to to insert this information so as a test we're just gonna go one two three to row number let's say row number ten and now we're going to see what happens but now all of this is empty now when we run this code let's see if it works it's loading and as you can see we've just inserted some data into our sheet for example it thinks that this is a date we're not we're not going to worry about that we're going to delete that and now we actually insert the data that we want which is our transactions what we do is for row in rows now we need to think about what order we want to insert this in so first we want the date and the description then the category then the amount and the way i've designed this template right here is that we want to start inserting from this eighth row put row number eight as the place where you wanna insert if you're using this exact template and another thing that we just want to do is we want to import time i'm going to go time.sleep for two seconds so essentially what this does is that after inserting each row it's going to sleep for two seconds and the only reason for this is because google sheets has like limits on how many times you can access the api per second or whatever so we just want to make sure we don't overload the api so we're going to wait with two seconds after each row so now let's see what happens and as you can see the transactions just start appearing on your google sheet every two seconds pretty darn magical python magical essentially all you now have to do is download your csv for every single month that you want to do this for just change this month at the top you can even do this using shell scripting to like accept the month as a command like argument i've already taught how to do this in this video that i made previously so i'm not going to do that again but obviously there's a whole bunch of things that you can now do with this and add them to this one summary sheet where you can see all of your months at the same time obviously this is specifically for like my needs how i would like to categorize my things let's look at how these commands are formatted and you can do everything what it does here is that if the category of the transaction is a subscription is automatically going to grab it this line of the summary now this is a very simple version of my own program that i use myself in my own program there's a whole bunch of other complicated things as well for example because i'm in a situation where i have bank accounts in both the uk and finland so i'm sort of need to do things for like to like automatically convert the currencies all these functions for all of my bank accounts include paypal or all of that it's all this like checking to see like if the name is something then it's in some category and i've got all these functions for like cleaning up some of the dates and i'm like sending the data to a database and there's a whole bunch of things that i've iterated over multiple times but hopefully this video gave you an idea for the most basic version of how you can start tracking your finances using python and categorizing it then you can make like graphs using google sheets there's a whole bunch of things you can do this has been one of the more exciting projects that i've done for myself and what i think is the absolute coolest thing about coding is being able to build things that are actually useful for you to automate things that you would be doing anyway which is exactly what this program did for me so that is why i wanted to share it with you i hope you enjoyed the video if you did hit the like button down below and if you're new here you're extremely welcome my name is internet coder this channel is the place for people just like me and hopefully you we're self teaching ourselves coding at the moment i'm working on a lot of python projects so that's why there's been a lot of python videos on my channel if you want to check out more you just click on my channel and find my other python videos but with that let's all keep coding and just remember to have a great time along the way because that's what it's all about i'll see you next time [music] you