all right so i came across this tweet yesterday it was pretty fantastic uh so farewell typescript may you bring much rigor and satisfaction to your tribe while letting the rest of us enjoy javascript in its glorious spirit it was originally designed for free of strong typing i feel like my response was perfect okay i almost almost got that ratio on there almost got that ratio and so this kind of sparked the whole a whole thing that happened i don't know if you guys have been keeping up at all with what's going on but he has taken turbo 8 and dropped typescript completely from it completely dropped every last thing uh all the typescript no js docs no dts got rid of everything in the process of doing that broke a couple repos and that caused a bunch of you know things that are going wrong a very fantastic so let's we're gonna read his reasoning behind dropping turbo eight and then we're gonna we're gonna we're gonna make a judgment afterwards okay let's let him cook let bro cook then if he burns down the house we got a call about on it okay so you know we're fair here we're fair here by all accounts typescript has been a big success for microsoft the salt on that statement is so good notice that notice what it comes out with it doesn't say typescript has been a big success no no no no no you know what if he hates microsoft i like dhh just a little bit more so you know what maybe me and him are better friends than we just think we are okay i've seen loads of people sparkle with joy from dowsing javascript with explicit types that can be checked by a compiler but i've never been a fan not after giving it five minutes that's it not after giving it five years okay reasonable so it's a great pleasure that i can announce we're dropping typescript from the next big release of turbo 8. does anybody okay so there's turbo there's turbo pack and then there's also dhh turbo are those all different things am i just that stupid at this point what's turbo i don't know what turbo 8 is turbo is like htmx okay turbos like htmx okay cool okay okay cool very cool uh hmx does not have typescript but i will tell you this much htx does have a dts file because they do care about those who implement their stuff and that's very very important the fact that i actually uh rather like javascript i'd go so far to say it's my second favorite language after ruby super cool dog proud of proud of you for saying that it's brave honestly this is brave uh you know we gotta show a little bit of respect here yes a distant second i'm okay but a second nonetheless this wasn't always the case but after we got proper classes in javascript and all the other improvements that flowed since es6 it's become a real joy to write i would agree i like that they did proper classes because at least all those things you see don't have just this crazy that stupid prototype a lot of the blah blah blah i still don't think javascript is well suited for most of the work we do on the server side of the web app equation oh great go is go is probably a better choice huh everybody i sure i'm sure dhh is gonna say go is the better choice right he wouldn't say some other crazy dynamic type language right right uh but fully respect and appreciate that others feel differently to me it's simply our good fortune that we have such a capable javascript uh which browsers are able to interpret without the need for compiler at all i do think this is a very strong suit to consider when building things yes typescript just gets in the way of that for me not just because it requires explicit compile step but because it pollutes the code with type gymnastics that add ever so little joy to my development experience and quite frequently considerable grief things that should be easy become hard and things that are hard become any so i okay so i'm gonna i'm gonna give a different i'm gonna give a different take here than than probably other people give here i don't disagree with him here real talk if you're developing a library typescript is a pain in the ass what you have to do to do proper library development for typescript is a huge pain in the ass now for a client-side application whatever it's a lot nicer to use you get to just sit on the shoulders of giants using all these libraries that just work and give you great type inference and give you all the things you've ever wanted i i'm ashamed to use the term type inference because it's barely type inference but it's type inference nonetheless right you don't the difference between a library and an application is is is is is a huge amount even theo partially caved to return types when developing for libraries and i typically think of typescript from a librarian perspective not from an application dev perspective you know and so i i get this like i i totally get this argument because in general what i dislike about typescript is that the type system has no impact on code and what i mean by that is that you have to program your logic of your types then you have to program your code to use that logic of the types and then when you need to change one you have to change the other and so then you have this weird coupling of fake code that only tells the compo or the linter that it's good or bad and you have your real code that does the thing which is really strange it's just a strange way to program and i find it to be pretty inefficient and very annoying says the guy who doesn't even have one percent of the skills okay we're gonna get there okay we're gonna get there trust me we're gonna get to that part we're gonna get to that part stop spoiling this isn't a plea to convert anyone of anything though as i discussed in programming types and bytes and very few programmers are are typically interested in having their opinion on typing changed i actually went through strict typing is the best dynamic typing is the best and back to strict typing is the best right like i've been through the ringer i've actually gone on all sides of this on this thing and i've landed with strict typing as the best and i just don't even want to use javascript i went midwit i went full midwood for a while i know they say you should never go full midwit but i went full mid win okay let's keep on going i we still haven't given the opinions at the end of this most programmers find themselves drawn strongly to typing or not quite early in their career and then spend the rest of it rationalizing i think you should go on both sides i think you should find reasons why you like dynamic typing the correct choice to themselves and others i think you have to go all over the place before you can really say it if you just draw if you've only been on one side of the fence i do not think you're capable of thinking why types are good i just don't think you have the vocabulary slash the experience to understand that's part of the magic of this javascript versus typescript dichotomy and full credit to the typescript game for realizing that a full takeover of javascript was never going to happen so completely compatible had to be baked in from the start just because turbo 8 is dropping typescript won't mean you can't write your client code in it or or use any other library that employs it we just mix and match which is wonderful so here's the thing he's not talking about which i think is the full miss of this article and really of his mentality it's not that he dropped type type script i think it's fine to drop typescript that's okay but if you don't put in js doc or any typing information at all such that your compiler can do something for you if you wish to use it and if you don't use a compiler you could still use an lsp to tell you where you're wrong and never compile your code right uh and and so for me it just that's where it seems kind of wild you know what i mean like why would you do that js doc is a perfectly valid drop-in replacement for typescript svelte what was it spelled force felt five completely dropped typescript and they i agree with them i think developing with typescript is a pain in the ass i don't think typescript's great i just think that it's nicer to type than jsdoc and that's the only reason why i use it i quite like jstock i'm actually i i think the reason why i don't like jsdoc is that i don't have a good snippet setup and so i'm going to be setting up some good snippets coming up here just to just do the thing i wanted to do and that way it'll feel really nice and i bet you i could write it with tree sitter and a couple items pretty quickly that will just make it super super nice maybe just use some off-the-shelf snippets or maybe just be able to do some sort of more programmatic generation of it but that's what i want rich harris responds with spicy yes we're going to get to it too can someone link it to me it's also because it's also necessary because unlike languages like ruby which are languages uh of choice when it comes to the server side huh javascript is the language of necessity when it comes to the client side while you may compile dialects into it you still have to accept the fact that running code in the browser means running javascript so being able to write that free of any tooling and free of strong typing so again you don't have to be free of songs typing and still have like i don't understand like i i truly don't understand this take because js doc fully gives you everything you'd ever want you could still have some level of typing doesn't even have to be that strong just some level and the parts that are critical and you can also let anyone relying on your library be able to choose do i want types or do i not want types right like that's the thing is you let other people make that choice as opposed to you making that choice for them so to me i think that this is just a it's just simply a bad move by him kind of sticking it to everybody else and saying i don't care it just feels really like it it just kind of feels like a just kind of a as rich harris says a dick watery kind of move here's rich harris's take on this one removing types from your code is clownish epically misguided behavior but whatever yes again this is where he i mean he remember he removed typescript as well he replaced it with js doc okay to each their own removing types from a library that other people have to use however is just user hostile dick watery he is absolutely correct on this one by the way he is absolutely correct the thing is is that other people rely on this one right they need him to do that okay so let's see he's reached the point of ragebade thought leader journey okay i love ragebay thought leader i you know i hope one day i can rage bay thought leader you know like i hope one day i can i can just develop a series of sophisticated poor taste takes and just start writing blogs about it i really do feel like that's like end goal good like really i'm pretty i'm pretty excited about that let's see a hunt even if he thinks it was the right technical decision the way he announced it is pretty uh high school poetry level cringe it absolutely is his prose is excruciating but he thinks they're oscar oh no they're pretty funny i think this whole thing's pretty funny i think it's pretty set in the sense that he did he kind of hurt somebody else you know which is everybody relying on his library um by the way so for those that don't know where the copy and paste comes from i i thought this joke was really really good which is of course untyped you know uncut type undefined is not a function and the response is this says the guy who doesn't even have one percent of the skills or talent that dhh possesses he isn't some nonsensical youtuber i mean okay that's actually a fair take to be completely honest that's a very fair take okay i am a nonsensical youtuber okay that's completely i think we can all agree that that's that's fair uh he's written apps okay again maybe i should try writing these so-called apps uh most people can't even dream about didn't he write like an email thing isn't that like half of base camp is like some email client isn't that isn't that like pretty much what it is he's written written apps real you wouldn't understand i know this is a fresh copy paste it under understand what he is talking about before disrespecting and making fun of him again notice that i actually never made fun of him i just made fun of javascript being very hard to use and so developing on expert level is really hard to use you know that's all there is to it sometimes i wish uh we had full aesthetic typing in python but i understand that type hints is an excellent solution type hints is a great uh like uh in between i i like the idea of just at least getting to that point uh one day i do plan on writing apps i just want to let you know i do want to write an app one day i don't think i will be able to it sounds hard but i'm hoping one day i'll be able to write an app that you can't even dream of okay you can't even dream of it it's so magical all right there's one more thing i did want to look at theo dropped an amazing amazing pr he reverted all the typescript changes and added everything back in and now they have typescript all over again really good pr this one was really really good but i do want to i do i do want to throw something out here okay do you want to throw one thing out here dhh personally closed it down but i got the last comment okay i feel good about this one this is what closed the issue down okay think about that for a second how good is that real talk if you're thinking about dropping typescripts go for it i honestly don't think typescript adds a lot these days but i will say that at least do js docs right i think js docs has a real potential to be something great because at that point you're just concating files you only need a build process to build a singular artifact which i think is is a fair thing to do in the javascript world uh so if you do drop typescript go for it but at least use jsdocs i think it's good to your users of your library to have types so that way they at least feel they understand what's happening underneath the hood because a type signature actually is very very useful for understanding what an api does all right so just consider it you know what i mean the name is the dhhogen