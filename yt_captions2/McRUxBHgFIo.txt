400 million dollars to bankrupt in 45 minutes due to devops i see here's the deals i knew devops was always fake i just knew it i could feel it terraform terraform these nuts i just don't believe you i've never believed it it doesn't exist prove me wrong someone prove me wrong someone right now yeah see devops is fake devops is fake hello youtube everybody say hello devops is a real thing i don't know if you know this but devops is real it's actually real and not only is it real but people make their living off of it and i find that when you make these insensitive anyways i was speaking at a conference last year on the topics of devops fake uh configuration as code headaches and continuous delivery dave farley and i used the following story to demonstrate the importance of making deployments fully automated and repeatable as part of devops continuous delivery okay it's cicd it's not devops and continuous delivery uh initiative since that conference i've been asked by several people to share the story through my blog this story is true it really happened this is my telling of the story on based on what i've read i was not involved in this this is a story of how a company went from nearly 400 million in assets to bankrupt in 45 minutes due to a failed deployment if this ain't about mountain gox i'm gonna be sad night capital group is an american global financial uh services my wife reminds me of it by the way from engaging in market making i'm not sure what that means um sounds risky and or illegal uh electronic execution and uh institutional sales and trading in 2012 knight was the largest trader in the u.s equities market with around 17 percent whoa of the uh new york stock exchange and the nas dac deez nuts um nasdaq deez nuts uh i can't make it work out i tried i tried i kept trying to go into it stack nuts uh knight's electronic trading group etg managed an average daily trading volume of more than 3.3 billion trades daily taking over 21 billion dollars daily oh that is quite the thing on july on july 31st 2012 knight had approximately 365 million in cash and equivalents i don't know what what's equivalence does that mean stonks what are what are equivalents liquid it's cash right oh it's bonds bonds gold birch gold by the way this article brought to you by birch gold man i gotta get a gold sponsorship imagine how good that would be right now if i could drop a gold sponsorship right now like if i could just drop a gold sponsorship man that would have been the great that would have been the single greatest play ever uh the nyse was planning to launch a new retail liquidity program a program meant to provide improving improved pricing to retail investors through retail brokers like connect on august 1st 2012 in preparation for this event tonight updated their automated high-speed algorithmic router that sent uh orders into the market for execution known as smarts i already hate that i already hate that that acronym just so you know smart uh one of the core functions of mars is to receive orders from components of night trading platform parent orders and send the one uh one or more child orders for execution in other words mars would receive large orders from the trading platform and break them up into smaller orders to in order to find a buy or seller match for the volume of shares yeah that makes sense because you can't just like drop a million shares of something you gotta feed it in right you got to feed it into the dummies that are still buying while you're dropping bombs you know what i mean you got to be careful uh the update to smarts was intended to replace old unused code referred to as power peg nothing like a good old-fashioned power pegging that's what i always say i'm known for this i'm known for this phrase saying it uh functionality that knight hadn't used in eight years why code has been dead for eight years was still present in the code base is a mystery uh because you don't remove code everybody knows that power peg with unused power pegging is the status day of all time that code will uh see the code that that was up to created repurpose an old flag that was used to activate the power peg functionality the code was thoroughly tested and proven to work correctly and reliably what could possibly go wrong man i'm so excited i'm i'm i'm i'm so excited okay okay what could go wrong indeed you know i've said this phrase i have literally never said this phrase and been happy with whatever the result was i've like i've never said this phrase and then been happy it's always sad i always break something in production what's the worst thing that could go wrong well you bricked a couple devices for a couple days i remember when we were replacing the network stack live in production at netflix like at some point i was just like screw it we got it we just gotta do it and it it was so nerve-wracking that by the time i got done with it i was just like all right what's the worst that could go wrong turns out luckily the only thing that went wrong that time is that we actually just didn't replace the network stack and it would it would reload the app three times and then fail backwards and so i was very happy about that that despite failing to change the tires on a moving car at least the spare was still attached and everything just worked uh between july 27 2012 and july 31st 2012 knight manually deployed the new software to a limited number of servers per day eight servers in all this is what the sec filing says about manual deployment process by the way if there is an sec filing about your deployment uh something may have gone terribly wrong perfect during the deployment of new code however one of the night technicians did not copy the new code to one of the eight smars computer server this is why you don't manually deploy at that level if you have hundreds of millions of dollars of assets figure out how to automate it pay somebody pay two people pay five people okay because you know what's gonna happen you know what's gonna happen you're gonna get power pegged okay during the deployment of the new code however one of the knights technicians weird also used the phrase technicians did not copy the new code uh to one of the eight smarts computer servers knight did not have a second technician review this deployment and no one at night realized that power pay code had not been removed from the eighth server nor the new rlp code added knight had no written procedures that required such a review uh at 9 30 a.m eastern time on august 1st 2012 the markets open tonight began processing orders from the broker uh dealers on behalf of their customers for the new retail liquidity program and the seven servers that had the correct smarts deployment began processing these orders correctly order sent to the eighth triggered asus uh a supposable repurposed flag and brought back from the dead the old power peg code oh yes attacks of the killer code zombies it's important to understand what the dead power peg code was meant to do this functionality was meant to count the shares bought and sold against a parent order as child orders were executed power peg would instruct the system to stop routing child orders once the parent order was fulfilled basically power peg would keep track of the child orders and stop them once the parent order was completed in 2005 knight removed this cumulative tracking functionality to an earlier stage in the code execution thus removing the count tracking from the power peg functionality oh no they are about to get power pegged when the power peg flag on the eighth server was activated the power peg functionality began routing child orders for execution but wasn't tracking the amount of shares against the parent order somewhat like an endless loop getting pegged wait hold on hold on hold on are you telling me that power pegged literally accidentally pegged the cpu in a in a wild true loop endless pegging like literally power peg got pegged what is the chances this is so good 45 minutes of hell imagine what would happen if you had a system capable of sending automated high-speed orders into the market without any tracking to see if enough orders had been executed yes it was that bad when the market opened at 9 30 people quickly knew something was wrong by 9 to 31 imagine one minute later it was evident to many people on wall street that something serious was happening the market was being flooded with orders uh orders out of the ordinary for regular trading volumes on certain stocks by 932 many people on wall street were wondering why it hadn't stopped oh my goodness this is the greatest time dude imagine what you could do with like the put market like imagine if you were alive at this point and you saw all these orders flooding in and you just bought a put right like you just bought a put at all and the stonk prices just started just going oh dude oh man this is so good this was an eternity in high speed trading terms why hadn't someone killed the switch uh kill switch on whatever system was doing this as it turns out there was no kill switch no way during the first 45 minutes of trading knights executions uh constituted more than 50 percent of the trading volume driving certain stocks up over 10 percent of their value as a result other stocks decreased in value in response to erroneous trades oh my goodness to make things worse night system began sending automated email messages earlier in the day or uh as early as 801 when smarts had process orders eligible for pre-market trading the email message refers to smarts and identified and error as power peg disabled oh it wasn't disabled that power peg was on you would think that somebody at this point was watching the system right you're about to go day one day zero of a new trading functionality and you're telling me that they didn't somehow catch it with an hour and a half of warning between 801 and 9 30 a.m there was 97 of these emails sent to knight personnel of course these emails were not designated as system alerts and therefore no one looked at him right away oh oh the pre-packing of the power pancake was painful enough during the 45 minutes of hell that night experienced that uh they attempted several countermeasures and tried to stop the erroneous trades there was no kill switch and no documented procedure for how to react so they were left trying to diagnose the issue in a live trading environment where 8 million shares were being traded every minute oh my goodness you're telling me you never built in like an oopsie daisy handle how does that happen especially with high what just unplug the server just rmrf it just kill it control c control d give him the d give them the c give them whatever you got to end that they oh my goodness since they're unable to determine what was causing the errones orders they reacted by uninstalling the new code from the servers it was deployed to correctly in other words they removed the working code and left the broken code this only amplified the issue causing additional parent orders to activate the power pay code oh oh power the power mode went over 9000 at that point it went to the full power pegging oh the code on all the servers not just the one that wasn't deployed to correctly eventually they were able to stop the system after 45 minutes of trading in the first 45 minutes the market was open the power peg code received and processed 212 parent orders as a result smars sent millions of child orders into the market resulting in 4 million transaction against 154 stocks for more than 397 million shares for your stock market junkies this meant knight assumed approximately 3.5 billion net long positions in 80 stocks and 3.15 billion net short positions in 74 stocks oh gosh that makes me want to vomit in layman's terms knight capital group realized a 460 million uh loss in 45 minutes remember knight has only 365 million in cash and you must pay up right away and equivalents in 45 minutes knight went from being the largest trader in u.s equities in a major market maker in the new york stock exchange in nasdaq to bankrupt they had 48 hours to raise the capital necessary to cover their lossage which they managed to do with a 400 million investment from around a half dozen investors oh my goodness night capital group was eventually acquired by uh getco llc december 12th and they merged company is now called kcg holdings man whoever bought into that company was able to buy shares at such a cheap price think about how cheap they got to buy stock for oh you need 400 million dollars well guess what that dollar per share is gonna have to uh it's gonna have to go down it's gonna have to go down the events of august 1st 2012 should be a lesson to all development and operations teams it is not enough to build great software and test it you also have to ensure its delivery to market correctly so that your customers can get value uh you are delivering and you don't bankrupt your company the engineers who deployed smarts are not solely to blame here the process knight had set up was not appropriate for the risk they were exposed to additionally their process or lack thereof was inherently prone to error anytime your development process relies on human reading or following instructions you are exposing yourself to risk absolutely i would say that all the individual the only fault to the individual engineers was the fact that they did not push hard against this process saying that it's crazy right the managers are all to blame the individual like everybody's to blame that no one took the took this and anyone that did then they're not to blame the fact that man humans make mistakes the mistakes could be uh could be the instructions the interpretation of instructions or the execution of instructions yeah deployments need to be automated and repeatable yep uh as free from potential human error as possible had knight implemented an automated deployment system complete with configuration deployment and testing automation the error that had caused the night mayor cutesy uh would have been avoided a couple principles uh okay you know what i think the one thing that he didn't touch on which is obvious is a kill switch is a requirement i cannot tell you i when i first started out at netflix again netflix we built a pretty large feature called darwin social mountain it was a reworking of a lot of the app's core infrastructure to be able to deliver and integrate with facebook and be able to recommend videos with friends and all this this was in 2013 to 2014 and one of the first things i built in was two features one i called the slow clap which i thought was a great name for a product and it never took off though it should have been now we call them slow rollouts but i called it the slow clap which was i used the customer's id and a module a modulo operator and assault to be able to deliver an a b feature to uh just certain people that way i could set it to one and one percent of all the customers would come in and get that feature so that way we could measure to make sure we haven't screwed everything up and two i had a kill feature a kill flake if i was gonna do this gigantic test i was going to ensure that i could kill the thing in case i royally screwed it up uh it was awesome it was awesome slow clap worked like a charm we could see it happening it was so sweet to do some modular some modular bath the only downfall again there was no there was no continuation of the term the slow clap that's really the saddest part of the whole thing is an amazing name for that it is it's the it's slow clap because it starts off with one person clapping and then eventually everyone's clapping it as yeah dude it was so good let's see did you ever have to use the kill switch no but we did have it and i did uh we did test it just to make sure we allocated some people started making it run and then killed just to make sure that our kill switch would work a seven out of eight article would read again oh oh the wound hurts the name is the power packaging