- what do you think? can you
tell if rtx is on or off? going through old posts from the launch of the rtx 2000 series is kinda like looking through a war zone. many gamers and developers were excited about the new visual improvements and the ease of development that real-time ray tracing
would bring to the table. others, on the other hand, were outraged at the
idea of paying a premium for a feature that they
weren't asking for, especially if it seemingly
came at the cost of performance in games that use rasterization, which at that time was all of them. but fast forward three years and there are about 50
commercially-available games in nvidia's rtx support
list, with more to come, leaving only one question then: can normal people even
tell the difference anyway? just, like, can they tell the difference? our sponsor... glasswire! keep track of the weird stuff
that's connected to your pc even when you aren't using it. if a strange device joins your wi-fi, you'll be notified (snaps
fingers) instantly. get 25% off using code linus
at the link down below. (upbeat music) - all right. uh... - interesting. - this doesn't look ray
traced to me, but i might... oh, actually, that may be
seeming harder than i thought. - oh. oh! i'm dead. - that's not the test, andy!
(andy laughs) - our test setup is
pretty straightforward. jessie from our writing team set up two identical
gaming pcs ahead of time so that even i won't
know which one has rtx on and which one has rtx off. our subjects get up to five
minutes to experience each game and will be encouraged to just
game as a normal gamer would, so they can switch back and forth between the two systems instantly using this kvm from level 1 techs... by the way, those guys are awesome. and they can do whatever they want as long as they don't
enable performance metrics and don't manually check
the settings in the menu, because that's cheating. - can i watch the benchmark? 'cause there's a scene
there at the start of- - [jessie] no, you
can't, 'cause one is rtx! yeah, right! one's gonna
perform way better. - oh yeah, it would.
- (beep) - [linus] is he gonna run a benchmark? - [jessie] yeah, you can't do that. - you so can't do that.
- you can't do that. i didn't want to look at
the fps. it's just in a- - [linus] no benchmark! once their time is up, they simply select which
system they thought had rtx on and describe what they liked better about the rtx experience. - i've never actually seen rtx "minecraft" before. where was the lava? 'cause i know it's supposed
to be extra pretty, right? - yes, it's actually
not that hard, usually, if you know what to look for. - [jessie] say that as a
complete sentence. one second. let me get this mic a bit closer to you. oh, sure. yeah.
- you're so soft-spoken. - sorry, man.
- such a pleasant voice! - i know, i'm so quiet and relaxed. - [jessie] i like it. - linus always scares me
cause he wants more energy. man, that bird's got a really long tail. - [jessie] say that again. - man, that bird's got a-
- no, not that. (crew laughs) - while ray tracing is getting a ton of attention from gamers now, it's not a new idea by any means. the basic concept actually
predates rasterization, and in the 3d animation industry it's been in use commercially
for well over a decade. but the thing is, in order to determine what
a scene should look like using real, traced light rays you need to emit a massive amount of them from a point or ambient light source, which will then bounce and diffuse around the scene enough times that they eventually become
sort of negligible bounces and are no longer needed. now, that sounds fine and obvious until you realize that you might need hundreds of thousands or millions of rays to even get a somewhat
decent picture out of them. many people don't realize that the simple fact that
an image is ray traced does not mean that it will look good. look at this quick blender render. see how noisy it looks, as though a bunch of
the detail is missing? when non-real-time ray
tracing is calculated, the work is divided up into
overlapping chunks called passes and they are added on top of one another until a cleanly-lit image is produced. this can take minutes or even hours for a single 4k frame, though, and that's on modern hardware. so you can imagine why
some new ideas were needed to make this technology viable for games where we need 60 frames
per second or more. while there is a clear
competitive disadvantage to using ray tracing
in a fast-paced title, like "fortnite" for example,
where every frame matters, it's still impressive
that nvidia's rt cores work as well as they do. in short, rt cores are designed to perform two tasks that
are specific to path tracing, which is kind of a shortcut
version of ray tracing. these are called bounding box tests and ray-triangle intersection tests, and they save thousands
of instructions per ray that would otherwise have to be done by the gpu's stream processors. and in the 3000 series,
their second-gen rt cores are more powerful than
the first-generation ones, meaning that we should see them continue to improve over time. - yeah, it seems like the shadows are just struggling more in this one. i don't know which one it is because last time i thought
the one that looked better, in "wolfenstein," i thought
the one that looked better was the the rasterized one,
or the reflection-mapped one. so maybe it's the same thing here, where the shadows that look better to me are actually the non-ray-traced
ones, the ones that we fake. - so yeah, this is performing better, but you know, it doesn't really... it's not that big a deal, i guess. the problem is that it looks better too. so... i mean, "minecraft" beta is beta, right? so-
- yeah. - [anthony] it's not like
they can't add things later. but, man, like... that water, though, just looks so much better.
- isn't is so gorgeous? - it looks like water! whereas water in "minecraft" rtx kinda looks like ocean water all the time. - okay. wait a minute. if ray tracing is so accurate
and therefore better, (snorts) what was that? how could any test subjects
fail to tell the difference, or worse, prefer the
traditionally-rendered method? think of ray tracing as a final boss that's impossible to beat, 'cause that's what it was for years. what's a gamer to do, right? cheat. now, obviously we're talking
game developers, so we're... i don't mean getting a subscription to gamepro magazine here, but rather i mean building
techniques of clever tricks that allow you to fake
realistic rendering. these altogether have come
to be known as rasterization. raster rendering means
that a lot of the lighting, shadows, reflections,
and other visual elements are baked into the level geometry and handled with packages
of processing and effects on a per-pixel level. these are called shaders. over the years these techniques have become more complex and refined, allowing things like
dynamic shadows in real time by using clever projection mapping, as well as tricks like more advanced dynamic reflection mapping. but the core idea of tricking the player into thinking that the lighting is being handled in real time has remained the same throughout
all of these innovations. - god, this is really hard
to tell the difference. and that i don't really feel like there's like a huge performance drop. what gpu or we're using? 3080 or 3090? - [jessie] 3080s. - so i'm right now creating
a hard shadow, like harsh, like a pretty direct reflection of the sun here on the water. and let's switch back to
the system number one. they look pretty similar. i don't really spot a
difference right now. - as you can see, these cheats or tricks that game developers
use have become so good that they're kind of an obstacle to real-time ray tracing catching on, even though that final
boss is actually beatable. reflection maps are an excellent example of this fake-it-till-you-make-it approach. they're essentially a 360-degree
view of the current scene that's been remapped and projected onto an object or surface. then, with the right amount of distortion and selective color removal, as well as dynamically swapping out or changing the map as you move around, you can get high-performance,
visually appealing, and quite convincing reflections. some really good examples of this are games like "dirt 3" and
"need for speed: hot pursuit." it's not perfect, of course, and in games like "cs:go"
it's actually very obvious that your scope reflections, for example, don't really match the environment. but in the heat of a clutch round, it's not something that
you're likely to notice and certainly is a lot better
than giving up so many fps, leading us finally to the
results we've been teasing. - okay, so for "shadow
of the tomb raider," i believe number two has rtx on. - [jessie] what the (beep)? - [anthony] what? (laughs) - [jessie] what do you mean? i had a feeling i'm like... it's like i'm watching
a scientist at work, like analyzing... well, okay, what is it? - okay, so the thing that
tipped me off the most is that the shadows in the
center of the screen here, for this tree, are
shimmering as they're moving on the machine with no rtx. that indicates to me
that that's a shadow map. whereas the rtx machine, it's... kinda, sorta shimmery,
but it's not quite as bad. and also the shadows
are a little bit softer and they tend to... they start sharp and then they go soft, whereas the shadow map
is consistently soft. - [jessie] you are a 100% correct. - okay, as expected then,
our most technical staff had no trouble identifying
both the benefits and drawbacks of real-time ray tracing. but mathematically speaking,
most people aren't anthony. so what about them? - okay. this might be a pretty good spot. if i'm facing the sun,
which is right there, i can see reflection on the water here and also on the rock here. and let's go back to system number two. wow. they look pretty similar. oh my god. yeah. - i think, for number
two, it looks better. it's, like, glowier. the lava specifically. there's this effect around it. yeah, whereas for number four, i feel like everything's a bit flatter. there isn't as much detail to the the lights and stuff like that. it's just like a general... like, this block has lava, so then the other ones should
have it around too, right? i don't know. i could be totally wrong. - i think this one, number
two is ray tracing on. - [jessie] and what makes you think that? - the sharpness of the
reflections in the water. it looks a little more
reflective than in the other one. and also the shadows,
because they're softer. i feel like that's how leaves would actually look in real life. it would be a softer shadow
because they're all together. you wouldn't get these
crisp, jagged edges. but now that i say that, i'm wondering if the light's
shining so hard through it that it's creating those
jagged edges with rtx on. - i don't really spot a huge difference, but my gut telling me system number one is the one with ray tracing. so this one is the one
that has ray tracing. - although we saw
varying levels of success with the number of games
each person got right and which games
specifically they got right, the overall trend from
our test is pretty simple. the people with any
knowledge of 3d rendering, and especially with firsthand experience gaming on rtx at home, were way more likely to nail it. as for everyone else? telling the difference
actually isn't easy. the truth of the matter is that with current titles
that support ray tracing, it's pretty difficult to
tell whether it's on or off without pixel peeping. more on that in a moment. even when we did prompt
people to look closelier, it was extremely challenging and the results were quite similar. and for fun, we threw an extra scenario
at some of our participants where we had the exact same game running without rtx in both cases, to see if they could find the difference. - are they both off? oh! oh, yeah. okay. i was like, yeah, i could not
tell the difference, really. i guess i was trying to find a difference, but there was none. okay.
- they couldn't, but they also weren't 100% sure. so as it turns out, if a game already looks really
good with rasterization, our brain will, in some cases, see things that are not necessarily there. and this happened to
some of our participants in "wolfenstein," for example. they would notice parts of
the lighting that looked, you know, "better in this one," when the only difference in that game was actually in the reflections. bottom line, then: is nvidia selling snake oil with rtx? absolutely not. what
kind of question is that? i mean, in games like
"minecraft" for windows 10 and the upcoming "metro
exodus: enhanced edition," it is clear how much of
a difference it can make to the atmosphere of a game. and in the long term, ray tracing is a huge boon
to game developers as well because it behaves more
like how real light does. it can save a ton of time that would have otherwise been spent setting thousands of uber-hacky parameters to get a scene to look convincing. but the tech is still in
a relatively early state. but it will be the future. i mean, just think about it. add in your light sources; set your diffusion, refraction, and reflection parameters
for every surface, and bam, you're done. kind of. it's a bit more
complicated than that. and if you want a more
detailed explanation, we do have an episode over on techquickie that goes into more detail. but with all of that said, it's clear from our experiment today that in the right hands, rasterization is still a potent tool and this industry transition is going to take many years to complete. so maybe it don't feel too bad if you still haven't
managed to get your hands on a newfangled rtx gpu. you know what you should
get your hands on, though? your own website! making a website doesn't have to be hard. just use squarespace and you'll be up and running
in a matter of hours. maybe even faster than that. they have award-winning templates that'll help make your websites stand out instead of looking like it's from the '90s and if you're interested in
how your website's doing, they have built-in tools so you can find out
what you're doing right and what you're doing wrong. both our linus media group
and ltx expo websites were built quickly using
squarespace, and i mean quickly. they're super-easy to maintain. and if you get stuck making your website, they have 24/7 support that
is ready to help you out. so head to squarespace.com/ltt
and get 10% off. if you guys enjoyed this video, maybe check out our
$5,000 graphics card video on the quadro rtx 8000, i mean... what could make a gpu worth
three times more than this? five times? this is a 3080, right? well, at msrp, anyway.
- well, it should be five times more at msrp. (linus croaks)