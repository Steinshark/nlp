things are starting to get pretty weird now maybe you've heard it already but there's a new tool that developers are creating to make themselves obsolete called gpt engineer i've put a link to the git repository in the description of this video i'll show you what it can do in this video which is pretty insane and also share a couple of my thoughts about where this technology might lead us not all is lost but for a certain group of developers this is not really good news how to use this tool while you can install the development version by simply cloning git repository but you can also simply install it with pip install gpt engineer and then it's going to install the back edge now it has installed the package the only thing you need to do is to provide it with an open ai key and you can do that by simply exporting the openai api key constant so now i've exported the open ai api key i haven't shown you the actual value for obvious reasons you should get your own api key if you want to play around with this now the only thing you need to do is create a directory with a prompt in it and then gpt engineer can use that prompt to create a complete application i have already done this i have a folder called keys that contains a single file called prompt and there i'm writing a description of what we want gpt engineer to create for us for this case i'm creating an api that generates all sorts of different ids i give few examples of the things that it should support such as uuid object id and a couple of other things as well and i wanted to be able to generate single ids but also a batch of ids up to a thousand ids which is what i've written here so now the only thing i need to do is call gpt engineer and then provide it with the folder that contains the prompt now as you can see it normally relies on the gpt4 model which unfortunately i don't have access to yet i'm on the waiting list but it reverts now to gbt 3.5 turbo and then it asks a couple of follow-up questions so it needs some clarification so now i can enter more information about what i exactly need for example it asks what's the format of the numeric ids and what's the maximum length of the random string id so for example i could write something like this then there's also a question can we specify the length of the wp keys yes you can specify the length so and is there a limit to the number of batches we can create there is no limit like so it's not provide the information apparently that's all it needs and now it starts generating the actual code you see it generates a class id generator it generates a bunch of functions methods it also explains that it needs files to have an entry point to the api etc as you can see it uses fast api here and so i'll just let it generate this code and i will take a look at what it has actually generated for so now it has fully generated the code and you can also see here in the folder we have a memory folder i'm not exactly sure what this does this is probably some log of the prompts that have been generated but we have the workspace that contains now an id generates a file with a class so that looks like it can definitely generate ids we have utils which is the lower level id generation and we have a main file that contains the fast api routes so if you go back to the sheldon you see that it can actually already automatically run this code so i'm simply going to press enter and now it's going to execute the code that it generated so we see that well there is some error that it was looking for requirements file that was not there but it actually is running uvicorn and uh the fast api server if we look at what it did it create two routes the generate id route and generate batch and then we can supply a batch size so let's see what happens if i now open this server now the root is not a route that was added to fast api but we should be able to do generate id and then we want a uuid and now we get a uuid so that actually works and let's try something else so we also have generate batch and now we get a batch of one uuid but let's also supply a batch size let's say we want a hundred uu ids there we go or maybe we want object ids like so and that also works well kind of it generates object ids in sequence or maybe that's not exactly what i want but it's pretty close so there you go it just takes a few minutes to create a complete application that actually works so played around with this a bit more not always works for example here i try to create an application that's a web form editor so i wanted to have a backend written in python at a front end with typescript and react that would allow you to edit basic forms like a google forms kind of clone with text fields and drop downs and then you should have a unique url for a form and you should be able to embed that in another application using an iframe so it actually did generate a back end folder that contains classes like fields and forms so you can use that to create a form and we have again an api so in this case it used flask instead of fast api to have the api we have create form we have getform update form and delete form so that's pretty simple and it also generated a front end with an app that fetches form data and can handle form updates so this looks like code that could actually work however when i try to run this i ran into some errors with missing html files and things like that so it's not perfect but also remember that i wasn't using gpt4 here i was using gpt 3.5 and it was still able to generate plausible code which is completely insane so it's pretty amazing that this is not possible and it makes it hard to conceive what is going to happen in the coming months years when these tools starting to get better and we'll be able to do more and more things and obviously it leads to a question that everybody's been asking with ai like is ai going to replace developers well if you look at this honestly i think it's definitely going to replace part of the job that we do now as developers in particular more basic development work like setting up this kind of boilerplate project or doing software testing q a these kind of things i think a lot of that is going to replace to be honest though at the same time there are also issues with ai related to copyright privacy security i mean not all companies allow their employees to work with ai tools because well we don't know where that code ends up and how it's being used by these ai models but it's also highly likely to be a temporary thing because if other companies are using ai tools and are progressing way faster than you are then you're going to lose out of the competition as a company and you don't want that obviously so you almost have no choice as a company but to jump on the bandwagon and these developments just like the internet social media they're basically impossible to stop now the cuts out of the bag in the short term we're going to be okay as software developers we'll simply use ai tools more and more to do some of the leg work for us like setting up boilerplate code writing software tests filling out a portion of our application so we can move faster things like that so that's great we'll become way more efficient we'll be able to develop software faster and the quality will also be higher hopefully but i'm really concerned for people studying computer science or related studies at the moment i mean basically the first things ai is going to replace is junior developer jobs because those basic tasks that you normally use to train in a company to get into more senior position well those are going to be done by ai so are there going to be any junior developer jobs left i think that's a big question and if ai replaces most of the job of a junior engineer how are you going to get any practice after you finish your studies there simply won't be any more jobs for you and in the long term this is going to progressively happen for more senior jobs as well and when i say long term i don't mean decades i mean years or maybe even months one thing is for sure things are changing fast and they'll never be the same again and i do hope that we end up at some sort of equilibrium between developers and ai where we basically create a sort of when when where developers do work with good ads and ai does what it's good at in that scenario ai doesn't replace us it augments us so we can do more while increasing the quality of our work at the same time but how do we get there i think our best bet is to focus on developing our higher level thinking skills this is what we're good at coming up with non-standards creative out of the box solutions to problems solutions that you can't simply generate by looking at what people did in the past which is what large language models are basically doing at the moment it's actually what i talk a lot about on my channel software design and architecture how to organize complex applications things like that that involves coming up with new creative out of the box solutions and then ai can do the boring work like implementing all the details and fixing all the bugs for us like fixing course issues or race conditions those are my favorites so how do you improve your high level thinking skills well you should of course follow my software design course which teaches you everything you need to know link is in description below plug anyway i am going to share more ai focused content on this channel in the future because even though i'm concerned i'm also excited about the possibilities if you want to get started building ai tools to help humanity become obsolete even faster watch this video next where i show you how to do that in just a few minutes thanks for watching and see you next time