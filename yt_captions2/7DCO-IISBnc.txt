c plus plus is a general purpose programming language that has been in widespread use for nearly 40 years but is it worth spending time learning and understanding this monster of a language well as most things when it comes to software development it depends specifically in what you're looking for therefore we're going to look at some of the reasons you may want to learn c plus plus i'm going to give a contrarian opinion which is i think you should learn c or c plus plus regardless of what your goals or outcomes should be you should do it because it is really good to understand memory and even in rust to really appreciate or understand what rust is doing a bit of knowledge of c plus or c is not bad when i say c or c plus plus i don't really care which one you choose long as you're like in the process of manually creating and destroying memory right even zig in some sense zig kind of has this abstract a slight of diff a different abstraction a different abstraction where it's like a little bit different i.e you could substitute zig in there you could substitute zig in there all right someone is saying uh reduce os volume you might you might be you might be correct i i did something recently uh i'll put oh yeah let's go like that there we go baby cakes let's go i had to turn it up because of something that was happening earlier so here we go let's do this again as well as some of the reasons why you may wish to avoid it c plus plus is perhaps one of the most versatile languages out there in fact i'd argue it's perhaps the one language that can do it all to give some of my own history c plus plus was the first programming language i learned and because of this it has enabled me more than anything else i had originally wanted to learn how to code video games when i was younger in which c plus is highly used in the game industry however i quickly i learned with c sharp i did xna back when i wanted to be a game programmer i used xna c sharp come on you remember that little render render update cornflower blue never at the touch win32 man i could be a chad cpt poem creator just there c plus plus could be used for pretty much any software project yep including web apis mobile apps data science embedded systems cross-platform gpu processing and many others yeah c plus plus really can be used for pretty much anything therefore by learning c plus you're guaranteed to have a language available to you that you can use to build whatever you want c plus plus is fast in fact c plus plus along with c are often used as the baseline languages for benchmarking performance the reason it's so fast is due to its low level of abstraction within the language and the fact it compiles down to machine code therefore if you're looking for a language that is used in mission critical applications where the lowest of latency is required then c plus plus is a fantastic choice okay okay these are all good reasons uh practical purposes for why you should consider using c plus plus uh just putting it that way it's a good reason to consider using c plus plus it's not really why you should learn c plus or the heart behind it but it is good application space to learn it i i can address this c plus plus is used in a number of industries where other languages just aren't viable one of these industries is finance where even a few milliseconds of latency can cause a good trade to be missed jane street i mean so there is a little bit of a weirdness to that so anyone that's doing that type of trading especially like forex exchange that kind of stuff you know forex stuff uh usually that stuff is all done with programmable fpgas and so you're not really using c plus plus you're using fpgas and jane street i think uses ocamel to program their fpgas so is that you know entirely accurate maybe it's not entirely accurate uh let's just be real when i built my own little trader and lost thousands of dollars uh on the bitcoin market and i i wrote that i wrote that in javascript okay so i mean look at me i i made multi negative thousands i bought high sold i literally did one time buy high and sell low uh i was i was super good as with all power there are caveats however because of c plus plus's low level of abstraction advanced topics such as memory management or thread synchronization aren't hidden away from the developer this means whilst is possible to write very performant code it's also very possible to make some pretty performant mistakes because c plus plus provides very little abstraction it means that many concepts that are hidden away in other languages are able to be learned when using c plus topics such as pointers mutexes pass by reference pass by value the heap versus the stack and many many others are all hidden away in higher level languages such as python go and even java not entirely true with go you kind of need to know when things should be heaped versus stack allocated and then on top of it there is you know there is point to receivers versus value receivers and you know like there is there is some level of knowledge when it comes to this that it's not it's not it's not entirely accurate to say that um rust almost has like a completely different kind of structure to it do you know what i mean like rust is kind of i don't know it's kind of it's kind of unique because uh because references are are types right and so it kind of causes like a uniqueness immutability almost as a type and so it's like it causes some it's a little different right so it's kind of hard to put it in these exact same bounds even though pass by value versus pass by reference like that does exist whatever blah blah blah blah but it's just like when you're using it it just feels different you know what i mean also uh i just noticed that uh there's been quite a few follows and i did want to shout this out that we are so dang close look at that 134 left let's go all right back to the value 134 left that doesn't mean they no longer exist however quite the opposite it is just that the language does a very good job of preventing the developer from evidence to interact with them but that doesn't mean developers shouldn't know about them and by learning and using c plus plus you'll encounter all of the littlefinger is the worst these concepts at some point in your journey you'll also be able to bring this understanding and knowledge to other programming languages which can help you to make better decisions when building solutions in the future when you are presented with these problems in your journey to learn c plus plus it can be wow are you saying you like the littlefinger oh really sympathize you want to go toe-to-toe with this one little finger yes that's exactly what you should do he was i was celebrated the day he got his throat sliced yeah the man was evil really hopeful to have access to it okay uh i love littlefinger uh to be completely real did he really kill joffrey was he the reason joffrey was killed was littlefinger if that's the case love him okay joffrey was my least favorite character from the very beginning they i swear when they tried to cast that guy they're like who has the most punchable face and they went that way okay sorry let's get back on track here we're trying to learn about c plus plus some of the more advanced topics in a fun and easy way that is where the sponsor of today's video brilliant.org can help brilliant is the best way to learn computer science math and data science interactively if you're looking to learn c plus or any other programming language brilliant can support your journey by providing customized content that fits your needs whilst allowing you to learn at your own pace brilliant also supports different skill levels and is great for both beginners and advanced learners alike i recently helped someone dive into learning python code in order to begin automating aspects of their job brilliant was the perfect tool to allow them to easily understand the basics starting with the thinking in code course this course teaches the fundamentals of programming such as loops algorithms conditionals and arrays and does so in an environment without needing to write any code after completing this course it was then much easier to jump into some actual python code in order to solve some real world problems so to try everything that brilliant has to offer for free visit brilliant.org dreams of code or click the link in the description the first 200 will also get 20 off brilliance annual premium subscription a big thank you to brilliant for sponsoring this video at thank you very fourth reason i believe c plus plus is worth learning is that it would likely always be in demand as i mentioned c plus plus has been around for nearly 40 years and it isn't going anywhere anytime soon i think there's actually something to be said about its demand which is that there's so many systems out there that have been created around c plus and as c plus plus is kind of it's long lost its vogue and so on average people aren't kind of like learning or becoming experts in c plus outside of the gaming industry and i feel or outside of the gaming maybe the embedded industry one could argue that there's some c plus but you know as far as i can tell it's mostly a lot of c uh at least when i did it was all c right um and so when i look at this what i see is that there's going to become a very valuable job market because as that niche becomes smaller as the people who can write c plus plus reduces it simply just becomes massively more expensive to hire and thus it will become a more valuable and desired language right so there's kind of this weird cyclical nature of programs which is like you know it starts off it's the bleeding edge cool thing to use this is where everyone's getting paid it then goes down because everybody now knows it and then everyone stops using it and then all of a sudden it goes back up because now people aren't on you know there's just less candidates available right it's the supply demand curve just in the most beautiful kind of way you can imagine that this happened with react too when react started to come out and it was the big w and all the startups were using it they were all looking for anyone who was adept at using a rap a react which was a small pool of candidates and then within a few years it's now like a legacy system and so many start and so many companies that hiring react engineers you know engineers who know react is exceptionally simple now so it's like this funny thing uh rxjs was that way that's how i got hired on netflix big companies such as google apple and adobe are heavily invested in the c plus plus ecosystem it's also used in many other industries such as video games movie production telecommunications scientific research and financial as we mentioned earlier even the bitcoin source code is written in c plus imagine if bitcoin was written in javascript therefore if you're interested in a language that will stand up to the test of time well c plus plus is one of them and even though c plus plus has been around for a very long time this doesn't mean it's outdated which brings me on to reason number five oh this looks like a double-edged sword right here c plus plus was created back in 1985 by beyond strausstrup since then it has become authorization for standardization you know isn't it kind of wild to think about how old the technology is and even wilder to think that uh tcp was invented nine years before this and even wilder to think that i believe vi was invented 11 years before c plus plus bill joy was like yep and did that dude it's like it's kind of wild to think about all the tech we use today like how actually like long ago it really was and how well these things have stood time it's it's kind of it's wild also known as iso this means that versions of c your university professor implemented tcpi sound what a chad plus plus are actively developed and standardized and since 2011 new versions have been released every three years by the way the compiler largely is like stuck right here we're still trying to implement 2017 boys okay we're not up to 2020. okay what is all this 2020 talk oh gosh they're still 2023 we got new features and improvement okay hey just because more just because features keep on going until morale improves doesn't mean it's necessarily good so i actually would consider this as one of c uh c plus plus's biggest weaknesses is that it's it's extremely in some sense unlindy in the fact that if you look at c written 10 years ago versus a c written today it's pretty much the same c written 20 years ago versus 10 years ago versus today is pretty much the same but if you look at c plus plus 20 years ago 10 years ago five years ago two years ago one year ago today like they're all very very different and is that a good thing a bad thing there's good things about it but there's also really just bad things and annoying things about it and so it's it's definitely not like a huge w uh but i would say unique pointers were awesome right the fact that c plus has unique pointers i'm happy about it it has shared pointers i'm happy about it right there's some good things about it it's to the standard library despite the language being centered around low-level abstractions we've seen a number of new features appear such as smart pointers lambda expressions automatic lambda expressions have you ever wanted to hate syntax well let me show you a lambda express you know that one meme with the guy sitting there is like i hate myself he's like here look at this and then it's a c plus lambda expression it's like i hate this i i hate this more that's pretty much me when i see that so i'm going to take a small little picture of this little bad boy and we will be using it in a meme shortly um let's go over here uh there we go let's grab a little bit of this fantastic and mit licensing lambdas are nice sure they're nice not in c plus plus oh you don't define your capture group type deduction and many others having these features in c plus plus allows it to have the best of both worlds enabling developers to either use modern features to ease development or to dive into lower level abstractions for greater control it's your choice yeah i feel like that's you know dreams of code i feel like that was a little bit of a happy painting maybe throw a little couple cons in there you know a couple cons were well deserved but overall like c plus plus is becoming a more convenient language uh a real talk it is becoming more convenient but that doesn't mean it it's not without its difficulties and legacy is large part of what you do so it can be really difficult right it is so c plus plus is pretty great and you may think it's worthwhile learning but before jumping into a c plus plus tutorial it's worth understanding some of the drawbacks today let's go maybe a tooling around c plus plus is nowhere near as wonderful as it is in other languages in fact organizing your code projects and build tools are probably some of the harder parts of using c plus plus there's hey kids you want to learn a language called c plus plus well let me teach they're just like what what does c make do c make files and you're like what what do make files do make files makes the project be like what what the  we talking about here how did we land here there's very little hand holding here unless you use an ide which i'd probably recommend to somebody new to c plus setting up your project with configurations and make files is going to be way too much just to get started he's not red he's not ready for enterprise lack of dependency management available to you instead relying on system libraries instead of what other languages provide such as npm for node.js or pep with python i actually think go does it the best i think go using github or any git url is truly or any url type resource out item i think truly is the best way to go about it i absolutely love gits library management i i just think or get goes libraryman i just think it's the best however this does mean you'll have a greater understanding of your operating system and how to deploy code differently to other languages if you really want to learn as much as you can about software development then c plus can help you get there but if you just want to build something as quick as possible then c plus is probably not the right choice correct it's no secret that c plus plus is incredibly complex in fact this complexity has been the main point of criticism from many notable programmers such as linus torfolds the creator of linux rob pike one of the creators of both go and unix and ken thompson who designed the predecessor to the c programming language [applause] you know i just love the fact that they actually they accidentally uh put in the wrong character clearly they put in one of the core rust maintainers in here um they clearly didn't put in ken thompson okay clearly one of the core rust maintainers here b for bobby c itself has many many features all of which you'll end up encountering as you slowly progress each of these features comes with its own and you're likely gonna break things over and over god wolf is a real person this is all part of the process however and with the ptsd you gain from learning the language you will come through the other side a better developer for it this for me is the greatest reason to learn c plus and you'll learn concepts about software engineering that you'll be able to take with you to pretty much any other language yep except maybe haskell which is another topic for another time avoid success at all costs foreign classic haskell avoiding success at all successfully avoiding success oh man hey that was a great video i do agree especially the last part about learning c plus plus nothing has made me write better javascript than understanding how memory and things work it is a vitally important task you should consider doing which is to understand the difference between a heap and the stack just managing your own memory freeing it and then starting to just in your head think about the gc when you go into your program your inevitable crappy javascript program that you're trying to make the best and you're just doing things like const a equals some other b when some other c right and you can go wait a second what's happening here i know what's happening because i've written some c plus plus i can kind of understand what's going on here yeah maybe i should find a better way of doing this right just writing non-passamized code because if you look at most of javascript it's just pessimized code after pessimize codes because it's just a super simple abstraction to do that it's not a bad thing because it allows you to move fast it's a bad thing when everyone does it and you grow a project out of scope of being able to make a simple change like there's this thing that shows up in react where they say if you make this change in react it's considered kind of bad practice it can cause a lot of re-renders when you don't realize it it kind of caused a lot of garbage collection blah blah blah blah and what it is is passing in raw dogged objects as props right and so that's considered a bad thing so i built a little uh lsp uh called js perf and what it can do is as a cli application it can go in there and it can scan an entire directory and tell you everywhere that you're passing in a raw dogged object or a raw dog array i could even do functions and things like that and it turns out in the tvui code base at netflix there was over 1300 occurrences in production code if the problem is is that one a one-time decision is never pretty much ever a bad thing it's when you have that one-time decision that's made by 50 people over the course of several years you just build a project that probably re-renders way more times than it needs to and probably just has a bunch of problems a bunch of time spent in a garbage collection that doesn't isn't needed all because of bunch of small bad decisions equal a bad decision overall super hard to track down impossible to try to fix it's just not trivial and so that's why it's like a big thing i try to think about which is avoid pessimization and where that came from was just uh you know casey moratori was the one that really kind of voiced it in such a good way but b is just all those years of just using rust using c plus using something that kind of really teaches me about how this stuff like how the world works right and so i don't know just a thought something that i've really appreciated something that i've genuinely enjoyed so i hope that you like this i hope that you enjoyed all this the name is the prime machine