i recently took a javascript quiz and i myself did not get them right so let's see this new quiz here by an xfang developer i am currently a fang developer at this moment few of you sent me this javascript quiz and said it's absolutely impossible to get all the questions right so let's try it out see what i already know the answer to this one man this is the classic octal this is the classic octal bamboozle going on right here okay so i don't i think this is' minus 15 in octal which is 13 this is five is my guess we can get correct and if we can learn something new along the way as well so the first question do you know what will be the output of this code console log 018 minus 015 okay so i believe if you start with a zero the number becomes base eight what is that i guess octal is probably what that's called go number' but the digits that are valid in octal i think are just right in the same like 10 is 09 the valid digit is the b knew so i don't know what it's going to do if it's i just knew this was but why octal but why male models this is a javascript [laughter] challenge pre-experience it's not a valid number by the way this is this would exist in like any language that allows you to do this i don't think this is specifically a javascript problem i would assume it's either na in or it just converts it back to decimal and it just becomes' so this is either an or' then we have minus 015 so this is going to be an actual valid octal number so we have five eight essentially job one in the e place and in the one place so 8 + 5 is 13 so this is 13 this is either' or na my guess would be it's probably' because n is sort of a last resort and there's something else that sort of makes sense here so i would assume javascript makes this eight by the way calling it n that's a little weird okay we just call it nan okay not a number nan okay either call it that or trip iple e754 okay' 1 1985 so let's go with' minus 13 which would be five cool let's go i'm a genius we look at this yep blah blah blah blah leading zero is octal number we were correct about that and let's see number can't actually be an octal number quick question i'm actually now i'm actually now i'm actually curious can you do 08 or does that that's right that's right but you can do 07 so z will actually cause a syntax error because this is a nonv valid octal okay awesome kids always use z when doing octal never forget about that so it does this and it just treats it as' and then so'us 13 is 5 awesome okay next type of string type of one okay so i think we're going to essentially go right to left here and we have type of one which is going to be number but like as a string and then we have type of the string number which is going to be a string so it's going to return the string of string i hope it's true i hope like we're all wrong and it's true and i hate my life so i guess they want string here i that looks to be correct too so i knew it yeah the string of string and it's right to left type of one is going to be string of number type of number is string yeah yeah yeah yeah yeah okay okay next up 2 338 numbers 33 28 sort the numbers return numbers at one which is the middle number so the middle of these sorted as eight although s although this is a javascript challenge so you better put your stupid cap on and think what's the worst way this could be sorted bada bing bada numbers using the default sort or when you sort anything with default sort it's going to i think convert it to a string first so we're actually sorting strings and the string of 33 is less than the string of eight so i think 33 is actually the middle most number here and it is i do love that chat right now is an absolute sh exles where was this one this one is so good why theck is it why the [ __ ] is it in eight well you know marcus by the way could see but fantastic absolutely one of the best see the explanation so this is a valid array sh aray sort needs to make a decision on how to handle the scenarios and it decides to convert all values to strings okay so we were correct about this we have this beautiful array string and we end up with two 33 create as strings okay next up false is loosely equal to the string of okay so if it if if false gets converted to a number that would get converted to a string to be equal but if false just gets converted to a string then it would be not equal my guess is that false is converted to a string and skips the numeric type conversion first that's how i would assume it does how it does it right because string zero string is true in in all aspects of it now if false was first converted to a number which would be zero then converted to a string this would be the stupidest thing of all time if it's true i'm going to commit soku zero okay so i believe what going to do here is coarse both of these values into numbers so false as a number is zero and zero so it doesn't actually ever coers things into numbers it it coerces them up the type chain so it' be strings as a number is also zero which would give us zero but if this doesn't happen i'm confused true if i'm wrong oh my goodness first off i'm wrong on it if it i cannot okay maybe may okay what okay got me time to commit some sedus we're gonna do it it's soku time that is correct so let's see false equals zero and it does take it to a number oh my goodness it takes it to a number no but it also doesn't convert this to a number it converts it converts zero to a string into a number so zero is zero then we have this converted to a number as well i think the third step is actually incorrect which is true i'm quite positive string is the highest type not number or like the leest the loosest type it's the type that all things can go into is a string what about triple equals of course triple equals is different because triple equals does not do type coercion i don't know how to test it does that make sense try gun like i i you'd have to go read up on the specification engine what the f is triple equal trip in javascript for those that don't know if you do this it will convert this to a string so if i go okay this is why i believe that i am correct wait what you don't because it converts it to a string it doesn't convert it to a number it converts it to a string just js things if you don't if you don't get it you don't get it all right oh no oh no i don't know if i can do this one i'm going to go with false i'm going to go with false because the classic one 0.1 plus. 2 is 3 n right and but if you literally represent three it must work so this must be false .1 plus 2 equal. 3 okay so this is one of those fun questions that people talk about a lot as like a quirk of javascript like a lot of people will point to this exact example as to why javascript is such a bad language but actually this has nothing to do with javascript at all it's actually a quirk of arithmetic and you'll see the exact same result in a ton of different languages but essentially the issue here is that floating point arithmetic is not super precise so 0.1 plus 2 is going to be like 300 a bunch of zeros and then like one 2 so these numbers aren't exactly the same so this is going to be false and it is yep that's why he's right this is this this this is this is in many languages i believe we reproduced it in go before so false and we can see yep1 plus 2 is o someone is saying that um false equals is true okay is there a point where sometimes these things break at longer lines okay so it does convert to a number now that's not what i was expecting i was not expecting that okay i'm wrong okay i was wrong this number here with a four at the end it is it does converted to a number okay i was wrong i'm the wrong one wow that's a very confusing conversion system so they are not actually equal and yes so it's not a javascript quirk it has to do with floating point arithmetic exactly so that means okay so that means that the false is technically a a zero underneath the hood it a false is always a number because i don't think a false is converted into a number in my head it just it must be a zero therefore the string it doesn't go to the loosest type it goes to the strictest type maybe we said i don't even know okay whatever next up what would be the output of this code array one two i know what it is do you know what it is undefined array at six is nine log array at five okay so this is like out of bounds for the array but unlike java where you get like an index out of bounds error in javascript all we do is just extend the array and add that value in and we get these sort of like empty slots show it if you like log it out in the chrome dev tools so we just have a bunch of empty slots and we're logging out one of those empty slots which i assume just gives you undefined so let's go with undefined yeah so it does give you undefined i think what's even more exciting is when you go like this when you go uh when you go const a equals new array 5 you actually have five empty items which is a very special i this this is a special special one okay you know why it's special do you know why it's special because if you go like this a map we'll go like this underscore and go like 69 it didn't it didn't work out how great is that how great is that five special items a do uh length is five a z is undefined a3 is undefined but it's a special type of undefined called the empty item special it's the empty items it only exists here and then if you do something like this 3 equal 69 and then you hit them with the old map look at that now it kind of works out like this is one of those this is one of those special places that has screwed me more times than anything else equals z is going to be false and then we have true equals not array so first we do not array so this is going to convert it to a bolean and then invert it so i would assume i think an empty array is going to be truthy i would imagine although it's empty which could make it falsey but i'm pretty sure all arrays are truthy so tr true and then it becomes false when you invert it so now we have true i false which is i don't know what the bang believe array does this is false and i don't know what bang array does this is also false so now we have false plus false which would be0 plus z essentially so we have zero damn okay let's see did we actually do that correctly or did we just get lucky so we have the first parameter is a boolean the follow rule applies if type x is a boolean return the result of the comparison damn uh oh yeah i know why okay okay yeah when you bang an array because it's an object it's true therefore it's false but if you let the type converter convert on a boolean expression it becomes the emptiest string because it does a join operation so it does an array. join the oldfashioned banging arrays problem two number equals y so yeah we are converting to numbers essential so number true equals number array and we end up with uh obviously i'm so stupid loosely equals dang it zero which is going to be p pain and then we have this one down here an empty array is truthy so we convert it and negate it and it becomes false so true equals false so the it's so funny that empty array is truthy sort of it depends on how you use it you know it's not the size of your empty array that matters it's how you use it okay because sometimes it is true and sometimes it's not true you know what i mean way too dank yeah yeah like real talk because like like let's pretend i have an empty array like this size that's huge right that's like huge so can i do that no i can't but i can do this true right boom got him right i can do false true so there you go so an empty array is falsy a very big empty array very it's very falsy see it depends on how you use it both false then false plus false we convert both to numbers which are both zero and we get zero okay that was a difficult one next up we have one plus the string of two plus the string of two okay so i would imagine this is just 12 + 2 is 122 as a string what are the other answers we're definitely not getting na in because we're either just doing addition or concatenation i assume that it's it's we're going to op we're going to we're going to execute in this order i want to say it's 122 because i can't think about how you get 32 32 is the only one that wouldn't make any sense right because then 1 plus 2 would have been three which is a number thus then it would have been five right so you can't make 32 if you just apply any sort of logic i think 23 would have been a good one right cuz then you could have bamboozled people by thinking that it would have executed the stringing due to crazy operator precedence but no that would make that would also not make any sense right it has to be 122 and i don't think there's a way to get in i bet it's 32 it can't be 32 32 i guess would be if we treated this as numbers so this would be three and then we concatenate three two but i i don't understand why that would be case i think if there's a string in it we just do string concatenation so this is going to be so you're saying it's y 122 yeah the has tot is defined for numbers and strings and the expression is evaluated from left to right so it's that' be the other possible answer five would have been a better answer to put it in the better answer to put in would have been 122 or five either treat it as all numbers or treat it as all string right that's that's the two options you have right side contains a string concatenation will be made which results in 12 and then we do 12 does i feel like i've seen this before but i yeah i don't actually know these other two made no sense right like how would it insert a space between hello and twitter that's crazy okay so this is the same thing as just what's already in there which would make sense it's raw we're raw in which is the new line character being used as a new line and then we have hello twitter space world so new line converting to a space for some reason which maybe is the answer maybe it ends up sort of like html r too crazy all spaces get condensed into a single space no matter how much but it's called raw we already know that when you're raw dogging it it's either completely letting it go straight through and you get the new line or it's saying that the string will be treated as like literally what it is thus it will get escaped which space it is like new lines and things and then we have hello space twitter unforunately raw has two possibly be a space here think of any way that string. raw would know to do that so i think this is wrong so it's one of these three this one feels too easy like hello twitter new line world is like what you would expect and i know this quiz is supposed to be hard so i feel like it's either this one or this one raw feels like it could go by like html rules so let's go with this one okay so that was wrong it was the first one so let's see what this actually does yeah it just raw dogs do so it takes a template literal and processes substitutions but it ignores well-known escape sequences okay so it ignores the by the way that sounds awful well-known escape sequences like what does that even mean to what level are what is wellknown what who who voted on what's welln i would have loved to been okay actually i would have hated to been in the meeting but i would have loved to just see a condensed version of what went on in tc39 for being like you know what we need we need to be rod doing all of our strengths right and and they're like well we can't rod dog all the escapes there's no way we could know them all we will only escape wellknown ones yikes welln okay um in my head wellknown is of course sln slash slt slb who used this slb slv yeah well by the way for those that don't know if you're ever doing html uh the new line separators /rn which stands for registered nurse uh i i i would imagine it doesn't do tick it wouldn't do this because that makes no sense right this makes no this is what you would put in the string itself right i never remembered as crlf i remembered as registered nurse if you want a registered nurse you got to you got to toss it on down okay it's the only way to remember it i use slf all the time what the hell slf what in the heavens is slf hit me with the slf somehow i actually understand it in so it just prints out what we gave it okay so here's an example string. raw var one is hey var 2 is there so we include hey there but the back slash t and back slash in which is tab and new line just get left in interesting i don't think i've ever seen this actually used like i think i've seen it in like documentation somewhere but i'm curious if anybody's actually used this before like if you i have no idea how to use this real talk i have no idea how to use this i have none like i i i don't think i could use it bro you do you doing javascript with serial ports i don't know about this what is js doing in serial communication okay i got a lot of questions like i feel are you serial right now is is cal in the house right now form feeding cereal we got it's it's 2024 we got usb access now oh [ __ ] me have a use case what it is because i can't think of why i would need this but either way kind of interesting learned something new today and final question what's going to be the output i want so bad in my heart that a string is not an instance of a capital s string so i am personally going to go with false i want it so bad my heart heart just to be true i want it to be true this is a string instance of string yes come on it is it's so true yes because a capital b boolean booon is not the same as a boolean right yeah so a string which makes me want to put true but let's see instance of string so instance of what it actually does is it looks up the prototype chain can we take a quick second and realize that this is a product of the day from product hunt got second place congratulations whoever got second place but i do have to like a quick question which is what's the product emotional abuse so it looks to see is this object like above whatever this value is in the prototype chain but this is a string literal shut up and take that but i don't think you can actually like do that like i don't think it's going to be an instance of the string object cu it's here you actually have to use like the string constructor but when you just use a literal like this i think you might actually get false we prefer to call it raw dogging going to go with false although i'm not 100% sure okay yeah it is false let's see okay yeah so if it was a string literal you would get the result you expected at the beginning which i guess i want to see a piece of code that uses a string literal or a string constructor is there any reason to use a string constructor at any point ever for any reason like what am i missing i use string constructor for fun a job interview to write that example to make it an instance of did i just ask why did the chicken cross the road dr instructors for real enterprise why the chicken cross the road to get to the other side dummy just like ah yeah you're right we use string constructors because we wanted a string a constructed string okay he's right the fact that you have coded js a lot explains some things i have coded a lot of js and i have no idea what i have never once used a capital ass string constructor like ever for any reason assuming you expected it to be true but what it does is it checks if the string constructor is nested within the prototype chain of the value provided in this case it isn't okay yep so that's sort of so string doesn't have string methods well it's funny you should say that because i'm pretty sure they do they do is it uh isn't it uh java that forces you to check string equality with some method yes uh java required oh which is not wrong so java's actually not wrong with that the reason why they're not wrong with it you have to do uh string. two equal some string right right is equal right you know you have to do you know fu which is a capital s string is equal you have to do that the reason why you have to do that is because it treats strings as objects and so objects when you do a check or is it equals yeah it's equals or is equals i can't remember it doesn't walk the string to see if it is right it just checks to see is it the same ref it doesn't has the same referential value and if it does then yeah then it's like okay these are equal at a referential level i still hate it regardless of it's technically correct oh i'm on your team i me and all my homies hate java but i totally get it at least the rules consistent what we thought so we got it right all right so overall got a nine out of 10 got one question wrong and we learned some new stuff so i would call this a success let me know if you want to see more videos like this and how you did on this quiz as well otherwise i will see you in the next video i got them all right and got immediately hired by a fang company and comment that was great that was great i going to subscribe to you too that was fantastic absolutely nice video fantastic fantastic fantastic go give that guy like this isn't twitter this isn't twitter what do you mean of course this is twitter you got a [ __ ] post everywhere [ __ ] posting is a way of life okay i think that this my friends is the perfect example of twitter [ __ ] posting right here it's beautiful people are liking it let's circle back on this so you work with everyone oh my goodness it just means i don't like to work with so [laughter] iconic got him all right the name the name the name it's taking down soy chaotic one tweet at a time a jen