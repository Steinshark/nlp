hello everyone and welcome back to their mysql tutorial what we're gonna be doing today is actually writing sql code that will allow us to create databases insert items into them delete them do all of that we're gonna start with some basics so don't worry worry if i don't cover everything here i'm just gonna get into kind of the fundamental stuff that you need to understand we're gonna talk about how a database actually works how tables work all of that to make sure that you guys understand what's going on here and don't just see me writing a bunch of random gibberish and sql queries and then in future videos we're gonna get into some more advanced stuff like linking tables together talking about database design which is a huge part of this and you guys is gonna see and then we'll go into kind of like a maybe final project is kind of thing or an example illustrating how we can link maybe a larger database system together and what the design for that should be so anyways let's go ahead and get started what i want to do to start is actually just discuss what how our database works and what it is so first of all we need to kind of understand what a databases and then tables rows columns because those gonna be the words that i'm using throughout this series here so in mysql we have something called a database now this is gonna be my database we'll just call it data base now excuse my handwriting it's hard to write on this tablet and i also just have really messy handwriting so inside of a database we have something called tables now tables are kind of like a specific piece of information or like some kind of objects um you can almost think of them as like classes per se if you're thinking about it in a code sense and i'm gonna you know do some examples to help you guys understand here so in our database we can have multiple tables there's no limit to the amount of tables we have so we have this database it contains tables in inside our tables we have something called rows and something called columns the first one i want to talk about is columns so the columns have what we call headers and these headers are kind of the pieces of information that's stored in this specific table so let's say we have two tables and maybe this table we call it person and maybe this table we call it food or something along the lines of that okay what we'd have in the person table is a bunch of headers that describe the person so we might have a header for a column that is name we might have another one that is age and we might have another one that is the person's favorite food so maybe we call that something like fave underscore food okay so these go all the way down and every time we insert a new row which we'll talk about in a second we're gonna have these properties associated with that row so these are columns and now we talk about rows so what is a row well we know what a row looks like but in terms of like actual sense but what it does is it actually holds information associated with each person so in a row we might have you know the information associated with the person named tim who is 19 years old whose fav food is you know let's just say pizza so that's how these rows work so every row is kind of a different entry or just different information being stored and this information gets stored in its column so we have you know the name the age and the favorite food and we're gonna have specific columns we'll talk about later and kind of how they work but this is the basic underlying principle now food is another table so maybe in the food table you know we'll have three columns as well like this the first is probably gonna be you know the name of the food maybe we'll have like the class like if it's a fruit if it's a vegetable if it's like a fast food or snack or something and then maybe we have like calories or like something along the lines of that in terms of the health facts of it so you know same thing in here we could have an entry for food maybe the entry is pizza like this the class i'm gonna say like junk food maybe that's not accurate but that's okay in calories i don't know how many calories is a pizza like 400 or something so we'll do that now when we have these databases and we have these different tables what we usually end up doing is linking tables together so for example here i've just put kind of like pizza in my fav food but what i would actually probably want to do is link this favorite food to the column food and the entry or not call the table food that has you know the entry pizza so what i can do is i can have like this entry here linked inside of favorite food so that way when i want to access information about tim's favorite food i simply go to this column here go to this row in this table i find you know the name is pizza the class is junk and it's 400 calories and these are kind of the way that we link tables together we're gonna get more advanced later but the basic principle here is we have a database there's tables inside of a database each table has rows and columns and we can link those rows and columns together in a specific way okay so now that we understand that let's start writing some queries and talk about how we can create tables create databases and all of that all right so this is where we left off in the last video where we created a connection to our database and we created this cursor object now i forget if we did any sql queries but i'm gonna go through them again here what i'm gonna do now is show you some basic queries and some basic commands to do kind of what i've just been showing you in that drawing example creating a table creating some columns and then adding some entries in we'll start basic we'll stick with that and in the next videos we'll go to altering the tables talking about some more advanced properties of the database linking tables together and all the crazy stuff that you can do with mysql so let's go ahead and get started here the first query we need to do is something that can create a table for us so what i'm gonna do is say my cursor dot execute an inside here i'm gonna put a string and this is where i'm gonna create my first table now to create a table is pretty straightforward we type create table the name of the table and in this case we'll stick with the previous example of just having like a person view one of the tables and then what we do is we put brackets and we list the name of the columns and the type that they're gonna represent or that they're gonna hold so similar to python now we have variables that can hold integers boolean x' bits strings we have similar types here inside of mysql but they do have different names so i'll go through some of them so the first thing we're gonna need for our person is a name so what i'm gonna do is i'm gonna say name and then i'm gonna write the type that the name is gonna be so the type of information we're gonna store now in this case this is actually var char and inside of here you put the length of the variable length characters that you could possibly have i'll explain this in a second so we have a person name and the type is variable characters which essentially means string up to the length of 50 so that's what this means when you do variable character that's probably one of the most used types in mysql so we'll do that we'll say name of our chair 50 which means we're gonna have a column you know 50 length is the max the next thing we need is an age so we're gonna have an age and you could probably guess what type this is gonna be it's gonna be an int now inside of mysql we have all different kinds of data types that we can use we can use small int we can use tiny int we can use the big int we can use into we can use like and so what i'm gonna do is actually use something called small ends which means that our values will be represented by a smaller amount of bytes uh i guess yeah bytes or bits in memory which is good because if age is typically not gonna be you know more than a hundred especially if we're talking about i mean people in this century so we can use a small uncomfortably and know that within the range of whatever we're in a store here that's fine because small int allows us i believe to save things that are between negative thirty two thousand and thirty-two thousand now this brings me to my next point we have small int but we're never gonna store negative numbers so what i can actually write here is on signed like that which means that this number here is unsigned so we don't need to carry a bit to store the sign because we know that it's always gonna be a positive number so we'll do that okay the next thing that i'm gonna add here to my person we had food i'm gonna leave that out for now but i'm gonna add something called person id and we're gonna talk about in detail what this is so person id and the type of this is gonna be an int we're gonna make it regular int and this is gonna be what we call our primary key now you probably haven't heard a primary key before unless you've worked with databases what a primary key is is a unique value associated with each row in the table so for example we might have two people that you know are coincidentally have the same name and the same age so how can we differentiate between them well we need something called a primary key which will be different for every single person and we'll call that it's the person id just like you know maybe we have a sin card or i think that's what they call it in the states in social insurance maybe that's canada i don't know whatever it is we're gonna have you know that so we need to have some unique number to identify each person and that's what this is gonna be our person id so when you make it a primary key that essentially means that every time you add an entry in this key will be generated and will be different and that brings me to my next point which is something called auto underscore increment so what this is gonna do is ensure that every time we add a new element into you know this person table here and we give it a name and we give it an age it will automatically generate a primary key that will be greater than or will be different from the last primary key that we had in the so that means that we can access any person uniquely just by knowing their primary key otherwise known as their person id i hope that makes sense with that explanation if you have any questions leave them below be happy to answer okay so now that we've done that all we need to do is actually run this code by hitting control b and we will see no output but we've also not see any errors which is good so we've ran this my sql statement now and we've actually successfully created a table called person inside of our database now if we want to actually have a look at what this person table is you know what maybe i'll leave these queries commented out so that you guys can look at them what i'm gonna do is i am going to run a new command so we can actually look at the table we just created so i'm gonna say my cursor dot execute describe person now what this is gonna do is describe the person table for us so what i need to do if i actually want to see some output from this and print some things out is loop through my cursor so i'm gonna say for x in my cursor print x and what this is gonna do is give me all the output that my cursor got from this sql query and just print it line by line because this is actually iterable object which allows us to do that so let's run this and we can see that we get this output so we get named var chair 50-page person id and all that and you can see that all the properties we assigned with these different attributes are here so it says name variable character length we have age which is a small int which is unsigned and we have a person id which is an int 11 which just means it's a larger integer that is a primary key with an auto increment so that is kind of how that works now what i'm gonna do is show you now how we can actually add elements into this table and how we can retrieve them afterwards so if we want to add something into this table we've just created what we need to do is run another command which is going to be insert we're going to say insert into our table name which in this case is person we're gonna put the name of the columns that we are going to insert so on the same name and age and note i actually don't put person id because i'm not gonna define the person id explicitly it's gonna be automatically generated for me and then what i'm gonna do is say values now what i could do is i could actually directly type the values in here and could if i did single quotation marks i could type tim and i could type 45 but we usually don't do this what we usually do is something called string formatting which allows us to actually pass the values in kind of a safer way and a better practice way to do this and it also allows us to pass in variables which you're probably going to be doing rather than hard coding in strings and adding into elements so what i'm gonna do rather than actually typing the values directly right here is i'm gonna do % s comma % s will close that bracket and then inside of this execute statement here so this is not a part of the string now this is separated by a comma i'm gonna put a tupple and inside this tuple i'm gonna put my values so in this case i'm gonna put tim and then i'll put an age you know 19 like that and we can make this t okay so now that we have that what will happen is when we execute this command we'll add that into the tail now the thing that we need to add here though is we need to actually commit these changes to our database otherwise nothing is gonna happen so what i'm gonna do is i'm gonna type db dot commit which stands for database commit changes so when we insert this in it will commit those changes and those will actually be saved permanently now i'm gonna add one more command here just we actually can see some output here so i'm gonna say my cursor dot x you don't actually i don't want to get into that yet because that's gonna be a whole new explanation so let's just comment this out and get rid of that for now okay so let's run this we can see that we don't get any errors this worked fine and now let's see how we can actually look at the different values that are inside of our table so we've ran this sql query so let's comment this out we don't need this commit anymore and now what i want to do is show you how we can actually get all of the rows and all of the items that are inside of our database so we know our table is named person we know we've insert an item how can we get that alright so the command for this is called select star from and then the name of your table which in this case is person now i'm gonna get into more detail on this in later videos and a little bit in this video but essentially what this will do is select everything from the table person and give it to us so now i need to loop through my cursor so for x in my cursor we will print x so let's run this and we see we get tim 19:1 so notice that the primary key starts off out and if i actually add another element in that primary key will be too and let's show you what happens when i add another element so lets you know uncomment this let's change this person's name to be joe let's make his age 22 and let's run this and now you can see that we first started off by inserting the person into our table so we have you know joe 22 and notice that when we do select star from person to get both of our people so we get tim 19 1 we get joe 22 2 and notice this primary key has automatically been incremented to 2 because we added a new person so that is kind of how that works now i'm gonna cut the video here because there's a lot more to talk about with these sql queries and i don't want to go on for half an hour in the first video but in later videos and the next video we will talk more specifically about the select statement and some other things that we can do in some queries we can use on our tables