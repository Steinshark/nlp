so this is the fastest path to master any programming language in 2023 and look i know you're expecting me to give you some magic pill that's gonna magically make you an amazing programmer instantly you're expecting me to give you the tricks the hacks the shortcuts and that is the root of your problems so as a title of this video suggests i will give you the path to master any programming language that is the fastest but that does not mean it will be the easiest or that will be easy in general so as long as you understand that mastering any programming language can be done much faster than you think by the way this applies to any programming language if you're a beginner you should just pick one language just pick one ideally a popular one like python or javascript and then just stick to it because what you will learn is once you go through this path with one language the path to mastering all of them is really the same and it all starts with the u so i want you to do something i want you to look at your life right now as it is is there something missing are you perhaps looking for a certain kind of life a certain kind of career are you looking to make money when is the trigger that is leading you to want to learn the code right now you know what is the thing that separates people like elon musk or steve jobs or all these super successful engineers and tech people and entrepreneurs in the world is it the fact that they were born with some magic ability that allows them to just create these amazing companies that is success from nothing no it's the fact that they dedicated their lives to their craft their business and why were they able to do that is because they had a very clear north star that was guiding them towards like whatever it is with elon musk whatever you think about him he has decided that the purpose of his life is to get humanity must and that is the north star the why the reason that is guiding him and by the way i'm not saying that you need to have this like massive like north star and then you need to dedicate your entire life to coding but what i am saying is that to do anything to do anything that's difficult you need a strong why because otherwise once the going gets tough you're going to give up so before you get started with anything be very clear on the reason why you are embarking on this journey in the first place and going straight into the second step so the thing you need to realize about learning the code is that programming is not like other sort of sciency topics that you might have learned that's cool it's not like physics it's not like chemistry where the purpose is to memorize a set of topics where you just have to know that the formula for this and that is this thing or that this is how these molecules go together like no programming at its core is really a style of thinking and specifically programming is really not about the code that you write it's about how you think and specifically it's about solving problems using something called algorithmic thinking so here i have a book and i want you to bear with me for a second here because this is going to make sense in a second so if i told you to find page 70 from this book what would you do you would probably do something like estimate how many pages are in this book and just like sort of open the book from some page over here we go to page 170. so you didn't get to 17. so now what would you do next to try to get to 70 well you would probably search for page 70 from this left hand side of the book because 70 is less than 117 so there's no point in looking at this right hand side of the book because you know that their page is not going to be there so it would open another page sort of estimate is probably in there okay we go to 100 etc etc until you get to 70. now why am i telling this what we just did is really just apply algorithmic thinking and programming in this core is really about thinking how to solve problems in terms of a sequence of steps and the sequence of steps is what we know as algorithms just now the algorithm aka the sequence of steps that we applied to find page 70 from my book was open a page at a random page so that was step one step two if the page that we're looking for is less than the page that we landed at open a random page again from the left hand side of the book and if it is more than that open a random page from the right hand side of the book and then the next step would be to basically just repeat the above step so essentially we were in or we know as a loop so we were looping through the same sequence of steps until we get to the result which is the output that we're looking for now if you know some basics of coding you might already sort of see in your brain like how this could be expressed in code in terms of like a while loop or a for loop and then some checks for equality and things like this but we just made an algorithm without writing any lines of code and that is exactly my point programming isn't about the code that you write isn't about the exact syntax or how you specifically type them out it's about thinking how to solve logical problems if you take some course on computer architecture you will learn that at its core computers are religious machines that execute instructions one after the other so what programming is is that we are telling computers what instructions to execute and in what order that is really what it's all about and then the exact syntax of how you actually performing in whatever programming language is trivial that is not important so step number two is to learn how to think like a computer this is the really challenging part like it's not easy to train your brain to do that but there's actually one thing that you can do to make this a lot easier for you but i'm gonna get back to that in a second because it also ties in with something else that i want to talk about now so now that you understand what you really need to master if you want to master any programming language which is how to think about solving problems now let's get a bit more specific because if you've started learning some programming language already chances are that you're doing it completely wrong first we need to understand like what actually happens in your brain when you're learning so imagine you're a human ten thousand years ago and now suddenly there is a storm and you need to build a shelter what do you do will you have no idea how to build a shelter but because that is your only option you just start scrambling putting things together and eventually he'll manage to build our shelter and you save your family and so the great thing is and the reason why you survived is because your brain has the ability to learn things the literal purpose of your brain is to allow you to get better at doing things that aid you in survival so in this situation you learn how to do this elder so the next time when you need to do it you already know how to do it so there's not as much of a risk of your diet the thing is that your brain has limited resources that means that your brain is gonna try to only expand its learning like neuron resources on learning the things that are actually important for your survival so if you imagine in other scenario where there is no storm but some smart-ass guy in your tribe just tells you like oh by the way this is how you build a shelter the brain's gonna be like ma cool but it's not going to expand resources to make you learn how to build our shelter because it doesn't understand that it's important to you because you haven't actually needed to do it now why am i telling you all of this i'm telling you this because what this all means means is that your brain is really primed to learn through one thing even in this modern world where we don't need to worry about dying of a storm at least in most places the way that you can trick your brain the thing that you're learning is important for your survival is by actively and obsessively like trying to take action on that information so when there's something in your brain like some basics of coding the one thing that you can do to really solidify in your brain and to trick your brain to think that that coding knowledge is now super important for your survival is to actively and obsessively try to build something with it because that's going to make your brain now think like oh he's spending all of his days like trying to build this project using his coding skills that must mean that this is super important so let's solidify this concepts in the brains in the neurons so that next time when you need to build something your brain is just gonna automatically know how to do it because it's gonna think that otherwise you're gonna die so the conclusion of this and the reason why most people learn completely wrong is that you don't learn by watching you don't learn by listening because it doesn't signal to your brain that this is important because you're not trying to retrieve that information you're not trying to use that information so the third step is to pick a project a specific thing that you want to build with code and absolutely obsess about building it and learn the steps along the way but remember i promised you to not only tell you how to master any programming language but also how to do it really fast because that last point was more like sciency and like it might have been a bit of a revelation to you about how your brain works and things like this this last point is really a lot more mundane we've got a bit of a side down isn't here now one of the great things about a career as a programmer is that you don't necessarily have to put in a lot of man hours in order to get a lot of value in order to get a lot of output why because programming is leverage you can write one line of code that runs on 10 million computers this is not the case with most traditional careers like bankers or lawyers where in order to produce more output or more value you just have to put in more hours more manual work on your path because in most careers you have very little leverage on your type programming alongside other things like social media which is what i'm doing here for example is one of the greatest tools of leverage that we have access to in the 21st century meaning that your inputs can be multiplied in theory infinitely with no extra work on your pop that is why programmers can make a lot of money while not necessarily working that many hours at least compared to people like lawyers or bankers and things like this but this is a massive but this only happens if that programmer is really good if they know exactly what code to write quickly and how does this happen by being really good at programming and how does that happen by putting a lot like a ridiculous amount of hours in the beginning to learn the skills so that they have the ability to then create this massive value with the code they brought this is the thing that's gonna make algorithmic thinking and thinking like a computer easier faster is by putting in a lot of reps if you're looking for a structured way to apply all of these steps in one place you can check out my flagship program python developer masterclass down below in the description it's designed for beginners and it's designed to take you from zero to a 100k programming job at the end of it colleges are becoming more and more overpriced and more and more outdated for the value that you actually get so i realized after my own journey of becoming a software engineer myself in this day and age there's really no reason to pay tens of thousands of dollars and spend like four years on the university just to become a software engineer because the thing is like universities and most courses they don't even tell you everything you need to know they might teach you the syntax of coding but they don't tell you how to think like a computer how to really solve problems they might introduce you to a lot of topics around programming but they don't really tell you how they all tie together and most importantly they don't tell you how to actually get hired i also give you optimizer resume template linkedin template so that all of these like annoying work that you have to do in the process of actually getting hired with your skills is really automated for you thing is i'm also continuously updating with more modules as i have more time to develop them and you don't have to pay extra for any of them when you get it you get a full free lifetime access for all future updates but and the only but is as i expand the course so as i expand the value of the course i do also increase the price of the course and the current price will expire with no warning so make sure you're getting now while you still can at the current price the biggest problem people have is that they're impatient they complain that oh i tried learning the code but i couldn't do it it's not that you were doing the wrong thing is that you just don't have enough reps doing that thing yet the question about will you learn the code or not it's not about can you do it it's about are you willing to are you willing to put in the work that is required [music]