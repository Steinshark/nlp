i thought it was about time that i did another q&a video it's been a really busy period for me and i feel like i didn't have like quite enough time to interact with you guys the audience in the youtube comment section when you run a youtube business like i've been doing for the past year things can get pretty crazy it's like a roller coaster of on the one hand ups where you have lots of views and lots of course sales and course launches that go real well versus the downs when you know not much activity on the youtube channel or video doesn't do well and you just feel like this is the end of the world so navigating that has actually been pretty challenging and now that i also have a team there is of course extra challenges that come alongside with running a team and even though the team has been amazing they've been so incredibly helpful it still can get pretty intense sometimes one comment i saw that actually hit me pretty hard was somebody saying that i was smiling less in my more recent videos than in my older videos and it got me thinking like am i happy doing this kind of thing is this really you know am i smiling less in more recent videos i i didn't really notice that but i mean i'm a pretty happy optimistic person typically so when i think about whether i'm happy or not i actually i feel pretty happy i don't feel bad or something it's it's pretty intense it's hard work a youtube channel like i mentioned and there's so much going on that you don't see if you just watch the videos but i'm still pretty happy and even though it's a very busy period in my life i do feel we're making progress in making things step by step less insane so at least that's very good but i will try to smile a bit more in my videos from now on without being too creepy now i want to dive into some of your questions but before before i do that if you want to learn how to detect design problems in code more efficiently i have a workshop code diagnosis workshop that you can join for free at iron. codes diagnosis it's a three factor framework that teaches you how to analyze code and i use existing libraries existing packages to show you how it actually works it's pretty practical it's about half an hour you can join for free link is also in description of this video now let's dive into your questions first one by doo what is the current standard structure for a python project now there's not really a one single standard structure and there are some common things that you're going to see in a project so a few of those are you will typically have a folder that will contain your source code you can call that source or you can give the name of the package you will have a folder containing test because obviously you're writing test for your code right you will also have a folder containing some custom scripts probably you often need that especially in projects that deal with the database i find it very helpful to have a scripts folder where i can have some basic database scripts that i need to do some cleanup or anything next to that you're going to have a doc folder which will have your project documentation and then in the root you're going to have a couple of different files like you typically should have a readme file that contains information about how the project is structured and what the project is actually all about if you're building an open source project you'll probably also have a license file maybe even for non-open source projects you'll have that as well you will have files related to dependencies of your projects so that can be requirements.txt or if you're using poetry a pip project tl file and you'll also probably have some settings files like a pilent settings so that everybody who uses your code uses the same linter settings you might have a git ignore file that makes sure that you don't accidentally commit cache files or pyc files or things like that now about the structure of the code itself this very much depends on the type of project that you're developing if you developing a gui you'll probably have a folder for each main area of your gui if you're developing a backend you'll probably have a folder for database operations you'll have a folder for routers you'll have another folder for helper functions maybe a folder for authentication security those kinds of things thean asks how do you apply test driven development for machine learning and deep learning projects i don't think you will apply it in any different way for that specific kind of area the whole idea of test drien development is that you write your test first and then you write the code to make the test pass i do think it's important like in any test driven development process that you make sure that you design your code in such a way that it's easy to test and test driven development really promotes that idea because it forces you to do that because you've write the test first so you have to think clearly about things like like dependency injection and abstraction things like that and for machine learning and deep learning projects that doesn't change that's still something that you need to do now if you're really thinking more about how to test the output of machine learning deep learning projects i think that's a whole different rabbit hole that you can dive into i mean we're developing ourselves a platform that generates quizzes using an llm it's called learn tail you can join that for free by the way put the link below but there we also notice that integrating with an llm actually brings along its own challenges like mostly that an llm can sometimes return invalid json data so you have to test that and you have to write test to make sure that your application deals with invalid data properly another thing is that there's often systems are that are down especially if using we've been using open ais api and there often like timeouts and whatnot because they're having some scaling issues due to the popularity of the tool so you also have to deal with that implement a retry pattern and that's something that you can test without actually directly using dlm so as long as you make sure that you design it properly that you inject dependencies that there's not too many hardcoded config settings in your code you should be fine captain staggered asks will you ever do video game related content i don't really do a lot of video game development tutorials at the moment there's a couple of reasons for that one is a lot of video game development is about the specific tools that you're using so it depends heavily on whether you're using something like unity or on real engine which both will work in a very different way so i feel like content on video game development is in that sense very specific and it's not something that i feel fits very well with the type of content that i make another reason that i'm not really doing that a lot is that python is not really the goto language for video game development even though you do have packages like py game for example it's not really that commonly used so i'm not sure it's that interesting for you guys but perhaps you fully disagree and you think i should do it on a video game development in that case post a comment below and then i'll think about it i do like video games by the way not just playing them but also thinking about the design so in that sense i do think it's kind of interesting when i did teaching at university long time ago actually i did a game programming course for quite a few years where i taught game programming using c and there was the xna game engine then it's by microsoft they stopped developing it really stupid but well that's how it goes right and when i taught that game programming course i actually developed a couple of complete games for it to show the students how they could do it themselves and later on i even developed the javascript version of those games i did a video a few weeks weeks ago i think it will be two weeks ago when you watched this one about the state design pattern which is a design pattern that's actually used quite a lot in games and i show some of my old javascript code from those video games so maybe you like to watch that and that 255 asks when building a python rest api do you use snake case or camel case depends another case that's important is spinal case which actually you should use for the url so spinal case is separating words by dashes you don't want to use camel case for url so camel case is with the capitalized letter in front of each word because urls well they are case sensitive but it can easily lead to confusion if you use uppercase characters in your url so i would avoid that snake case you can use an urls but it's not that common now you may refer more to the format of the json data that you send to an api and get from a rest api okay there's no real standard for json json doesn't impose any standard in how you should structure it or how you should write the uh keys in a json dictionary for example so some companies use camel case some companies use snake case i've even seen some pascal case in the past which is capitalize every word including the first one so you can go for either snake case or cam case i've seen cam case used more often than snake case if you follow the google style guide for json data for example then you're going to use camel case but id works the most important thing is that you make sure you're consistent so if you're using snake case in your json data use it everywhere if you're using cam case use that everywhere but do the same thing don't mix them that's going to be confusing and in some case you're going to have to do a translation step if your database is using snake case but your json data follows the google st guide well then you need to convert that snake case data to cam case so that could be part of the decision for which of these two you're going to take for your data hu bill asks how do you separate front end from back end do you make a single entry point class for example or do you allow front end to access all the back ends so typically you would use a client server architecture for front end and back end right front end is the client back end is the server and this should really be different areas of your codebase they don't necessarily have to be separate surfaces though it is quite common that these are separate surfaces running somewhere in the cloud but if you're using for example typescript with nexs which is a quite commonly used framework for building web applications well then the default way of doing things in nextjs is that your backend and front end are a single code base and that definitely has advantages because it allows to work on a single thing everything is all together that makes a lot of sense there is some potential security issues though you have to make sure that things like secrets environment variables keys whatever don't accidentally end up in front end code and for that reason alone i often still tend to separate backend and front end into separate services just to make sure i'm not accidentally you know making a mistake and exposing the database connection string or something like that so that's also a reason why you typically want to avoid front end directly interacting with backend code medok asks about the pros and cons of using python versus java in education as a high school teacher teaching both in higher grades i have my own thoughts and i'm really curious about your opinion experience so i've taught lots of different languages i've done c++ c java python php is that is i think so maybe i also taught modula 2 but that was a long time ago i don't remember that's how long ago it was so python versus java i think when i studied computer science that was actually before java was being taught at our university so i learned programming in modula 2 and well java is definitely better than modula 2 one of the things that i don't really like so much about java is it's quite for both it really teaches you a extremely specific way of programming which is objectoriented programming and that's hard to grasp actually for students who just get started with programming you might think it makes a lot of sense know classes and objects but it can also get get pretty complicated if you teach programming with a simpler language like python where a python file could in principle have a single line print hello world that's your hello world script it's way easier to get started because that's people understand that oh that prints something to the console fine oh and then you can group things into functions also make sense right and then later on you can move to classes whereas another way of teaching programming is let's say object first where you start with classes and objects and that's typically i don't really feel like that's works all that well because your hello world program already has a class and a static void main method which is quite hard to understand for students if they don't have any experience at all with programming so i find python is actually easier to start with if you want to teach programming and i've taught more hardcore computer science students i've also taught students that were in a let's say soft area of computer science more information science and python was way more accessible to them than java that's or c that's why uh we made the switch at the time to python there is a problem though with teaching programming using languages like python which is that it's too free and that means you have a tendency of maybe not using the proper things like type annotations or uh doing a good job with designing your code because you can just do some dirty stuff with dunder methods and then it works so python really doesn't promote automatically a good style of coding i would actually be very interested in seeing what happens if you were to teach students programming using rost instead i think that could be pretty interesting because rust is way more strict in how you write code and that way by teaching you programming in rust instead of python or java or c i think you have a very good starting point and then those skills those standard behaviors that you're being taught by a stricter language like rust really help you later on but i'm not sure how many universities are currently teaching programming in rust maybe it's getting more popular i'd have to look into that i haven't done teaching at the university for a while now jay loop asks is it recommended to build stalone software with python and t inter for commercial use if yes is there any popular example if not what makes those tools not qualified to me one thing that's important when you're developing commercial tools especially desktop applications you want to make sure that the process for being able to use the tool is as easy as possible right you don't want complicated install procedures and things like that so and in my opinion that's where tik inter and python as a tool set for commercial tools falls a bit short i mean for building your internal tools it's great it's really easy but if you then want others to use that they need to install python it needs to be the correct version you need to make sure that all the dependencies are there so it's kind of complicated and of course you can build tools or use libraries that make that part easier but still it doesn't feel like the natural way of developing desktop applications that you then distribute to other users so it wouldn't be my go-to tool now that doesn't mean that tk enter is bad or that python is bad because it has in my opinion a different use case which is really a developer support tool and for that it's of course incredibly strong and very useful so for commercial use for developing a desktop app i would use something else like electron for example which is quite popular vs code is built in electron next question by de go hi arian i have a dream i have a dream oh i shouldn't do that on video i have a dream of one day making a contribution to a programming language python or goang how difficult to achieve do you think it is in the end programming languages like python are not that different from open source projects so it's almost like contributing to an open source project there's an extra layer of complexity in that if you do something that affects the design or of or the features of a programming language then that's going to be a lot harder like hey i want to improve the type syntax for cbl in python well you maybe first should write a and instead of directly trying to create a pool request for that so you need to do that step by step but in the end lots of these things are open- source projects that you can just contribute to their own github and then you can create a pool request following of course the guidelines of that particular open source project so i think it's a good dream to have i think it's also really awesome that you willing to make that contribution and i think on top of that it could be great learning experience that guy asks good ar on my question comes more from newbie i'm in my early 30s and recently i've been using python a lot for automating gift processes what are some tips and resources you can recommend for older folks looking to get into coding hopefully make it part of their career older folks early 30s older folks what i'm i'm insulted i'm actually insulted i'm 46 so if early 30s is older folks what is 46 i'm like a mummy or something something okay some practical tips for older folks if you use a cane don't use that to type on your keyboard your keyboard can't really handle that it's going to break use reading glasses so you can actually read the small text on your screens and make sure you stand up regularly and walk around bit otherwise you can't really stand up anymore and then you have to be seated at your desk forever okay seriously though if you're not a teenager and you still want to learn how to code that's no issue whatsoever lots of people learn coding later in their career and that's no problem at all you just have to make sure that you stay open to new developments one of the things i find really excited about the software development world is that things are actually changing quite quickly we have lots of new programming languages being developed programming languages evolve over time like python now is very different from python 10 years ago so you need to stay updated and that might not be something that you're used to in your current career if you make that switch to programming or it so on the one hand that can be challenging because you kind of continuously moved out of your comfort zone whenever you think you understand the concept in programming then things change or you notice that there's another package or another methodology and you need to learn that in order to progress further so that can be quite challenging but it's also really fun and it's also really nice to see that the world of programming is so big and that's just so much to learn and there's so many cool new tools that are being developed all the time i just i just love that i'm really completely passionate about that and that's why i like making these videos so much that's why i like programming so much and if you embrace that i think you're going to do just fine regardless of your age tony asks what is the order of your playlist to learn python step by step there's no particular order also my videos are not really aimed at learning python step by step this is not a channel for beginner programmers i'd say it's more for people who know python and really want to take that to the next level or want to learn more about how to design great software how to approach the architecture of your software those kinds of things so there's no particular order watch them in any order you like and preferably in the order that you need each of the things that i talk about justin asks have you ever battled golden handcuffs or have any recommendations on how you might approach such a problem golden handcuffs for people who don't know what golden handcuffs are well you're probably not referring to actual golden handcuffs because i unfortunately don't have any experience with those but what's typically referred to is that you feel like you have to stay the company because of a bonus or because of extra perks that you will only get after staying for x years but at the same time you don't really feel very happy there i personally have not been in a situation where those handcuffs were financial where the incentive was financial but i have been in that situation kind of at the university so when you become a teacher researcher at university you kind of put on this career track that's very specific you know you do your research you get a phd diploma then you do a postdoc and then you become an assistant professor and then an associate professor etc etc etc until i don't know where you end up but it's all very much focused on you establishing yourself as an expert in the field and you get all the titles and everything and if you stay a bit longer and you do these and these things and you organize these conferences and you submit these papers etc then you get that title and that's what a lot of people are aiming for and that kind of feels like the same because it's so much associated to you as a person so whether your handcuffs are financial or whether they're more career related i think that's the problem is the underline problem is very similar the issue though is that the only person that can redo something about it is you right you have to make a decision about whether you think it's worth it to stay in a place where you're not really happy for some financial payoff that may or may not come or for some move in your career that may or may not happen and when i look at my own decisions i've actually taken a couple of pretty crazy moves like i had this very stable career at university where i was progressing exactly along the lines as was intended but then at some point i basically quit that highly secure job to just start a company with an ex- colleague of mine and lose all my titles lose any standing i had in the academic world basically by making that move so it felt like a hugely risky thing to do and from an academic perspective it was a pretty crazy thing to do because why would you give up your your title and your progress in your career for doing some stupid startup that has like 90% chance of failure right it doesn't make any sense but the crazy thing is for me it's been like one of the best decisions that i ever took and not because i did so well in the startup world actually i didn't had several failed startup companies it taught me so much and it finally made me get rid of anything related to my ego because that's in the end what career paths do in particular at the university is to just grow your ego to a balloon size right you become the professor of this and this and this and financial handcuffs can have a similar effect where doing financially well feeling rich buying lots of stuff is also going to boost your ego it's not about your ego it's about doing something that helps the world become a better place and contributing in some meaningful way and by focusing on that instead of on you you take better decisions you're more valuable and i think in the end of that's going to give you a better life so ask yourself is what i'm doing contributing do i feel like i'm doing something meaningful with my life if you don't screw those golden handcuffs do something that's truly meaningful because that's going to pay off later in a way that you can't imagine right now pedigree guitars asks hi aron can you explain the difference between using pickle hfd 5 or databases like sql lights to save and ulate data i haven't used all of those tools as much sqlite yes i've used that quite a lot it's very useful it's really lightweight file-based database uh which is great because it allows for sql queries and so on so that's really powerful if you want to mock a database or you just want to have a simple mechanism of being able to query data pickle as far as you understand is more for serializing data so you have some object you want to serialize it then you can save it to a file and then later on loaded again so i would say it's less suitable for data that you need to query that you need to search through hdf5 i haven't used myself as far as i understand it's more aimed for scientific data analysis things like that but it doesn't have full sql capabilities for querying so it's maybe more suitable for larger data sets in scientific computing so in short depends on what you need to do with the data final question by constant in do you plan to create videos regarding py test based tutorial would be great and tutorial on writing py test plugins would be awesome to answer your question i don't have a plan at the moment to create a pie test only video i did some videos in the past covering unit test i also did a video recently about how to write test for backend apis that interact with the database i did a test about hypothesis property based testing so software testing i definitely find an interesting subject and i do videos go about testing from time to time so maybe it won't be pie test specific but i am going to do more software testing in the future i hope you enjoyed this video and that i was able to answer some of your questions if you did enjoy it give the like because that helps youtube push this video to other people who also might find this content interesting during the video i talked about how to write tests for backand apis and there's actually a lot that you need to think about if you want to do that properly to learn more about that watch the video next thanks for watching and see you soon