why i can't stand ides after i use vim so i've been using vim for a couple of years now and i can't stand using ids anymore i actually started programming with ids i use a lot of different kinds i use visual studio eclipse all kinds of uh jet brains ids i always he didn't say net beans kind of a loser not going to lie to you i expected i expected if you're going to be thrown out eclipse i expect at least one honorable mention net beans the superior version of eclipse always thought of vim as like this editor that is very hard to use and you only use it when you're connecting with ssh to some remote computer and you don't have any graphical user interface but i we actually like this me and this guy have the exact same opinion okay yeah like when i was when i was a young man in my early 20s i genuinely did think anyone who used vim was just trying to be difficult and show off like i had the same mentality of like half of three quarters of tech twitter i think once i realize that you can actually use vim to write real code you can use it much more efficiently then i really got serious about learning vim and this has paid me off very well because vim is truly an incredible editor there are two main things that ids are horrible at and vim is just awesome in the way it solves it so the first thing i think that ids are extremely bloated i think there's this thing that like each id i like this man we're going to let him cook okay let him cook he has like sort of these features that are geared toward a specific language or a specific family of languages and once you like deviate from the language that it's meant for the id is pretty much useless because it contains a lot of garbage that is aimed for a specific language but you don't need to use that language anymore so that's one thing and a lot of those bloated features you're not really going to use because it has so many useless features that if you're programming in a specific language you're not going to need all the rest of those stuff so they're just has anyone used a lot of pie charm can i get it once in the chat if youve used use a lot of pie charms or uh web storms or sea lion or any of the like uh the non-complete intellig one because i've used a lot of uh ultimate they're the same picture i've never tried using not ultimate wait what am i missing oh my chat wasn't caught off uh pie charm sorry dude my chat was i was looking at i was looking at the asmr the chat i saw over here was just all the asmr stuff like almost there keep clicking and i'm like what the hell are you guys talking about we're talking about ides and you guys are talking about licking keyboards this disgusting um keep clicking okay now that we're back on track uh pie charm is mid what about it i mean do you guys is there some benefit to using these like single language ides because he does mention it as like it's kind of like a bloated point but in some sense having a single ide to or a single language ide is their benefit to it like cuz i know you can use the ultimate ultimate gives you all of the editing stuff but the language specific ones give you all of the deep integrations okay so you're saying that you get you get better integrations with specific tools on the specific language ones uh i haven't used rust rover so i don't know uh i haven't used it i've only read about it and it seems pretty cool like i like the idea honestly no not uh for my use cases yeah i use a lot of multi- language packages so it's kind of hard sometimes to use single language ones global search was very accessible i mean global search is still very easy global search works like out of the box for everybody including by language server and all that client was better a debugging for c++ and rush from uh yeah okay fair okay kind of clutter in your eye and they're making the ids incredibly slow to actually boot up and to use they also contain a lot of bugs i felt that especially when using eclipse eclipse is like a horrible id now a lot of people think that ids are actually good for the auto complete features and that's something that vim lacks so actually vim does have autocomplete it even has that out of the box and you can also connect it to a language server and actually have the vim understand the language that you're currently writing oh by the way you i do feel like it's fair to say that saying idees are often buggy and then stating you use the clips a lot it's a little unfair because like i never had much problems with intell that i can remember but eclipse on the other hand is just doooo so you know is it is it fair i don't think it's fair uh also if i did anything with java i would use intell okay i'd use intellig if i did anything with java and giving you errors and warnings inside your code for example what you can see here where it says that this constructure function may be converted to a class declaration this is actually a language server of typescript running on this file with a plugin i put here on vim i'm actually is he using default vim color scheme with wp damn this guy's a chad i mean anyone that's using set set no rap false and default color scheme i mean this this gigachad moment this guy this guy is flexing on us like i use rose pine hey look it's get integration and i'm using a little bit of rose pine hey you guys like my rose pine my wu this guy's like no way we got we got text wp and default color kind of minimalist on the plugins so i don't really use a lot of plugins yeah i only have two plugins on my setup and i generally feel that vim just has so many awesome and useful features that i don't really need any plugin to make myself more efficient so i think the main thing that is really awesome about bim that you don't get on any id any other text editor is the efficient text editing capabilities for example something you will see a lot of people that use ids uh do is scroll with their mouse okay they reach out of their mouse and they just scroll manually until they get to where they want wor just the worst now this is really inefficient because sometimes it can take you a long time to actually find the line that you're looking for real talk who here who uses a mouse start scrolling knows for a fact you could probably find it more efficiently but since you're already scrolling and you have a sunk cost you just keep on scrolling you just keep on you just keep on keep it on you know you do this dude the su cost fallacy is so real when it comes to a mouse like i know for a fact that i am 5,000 lines away and i'm like not going to happen nop we're gonna get we're going we're going we're going like i know i could do better just refuse click on the mini map let me get back to like where i was i was on navigation right and i just want to go to the end of this function all i have to do is just percent i press percent and i just get to the end of this function this is one example of how makes an operation that here let me actually show you something that i think is super super cool are you ready for something that's super super cool have you ever been in this situation where you have some sort of some jesson okay you're in some jesson file that's huge right and you have your key and it's filled with just like a bunch of numbers right zero uh oopsies and there we go if you know you have a bunch of numbers right and let's go like this let's take that is there easy way to do this yeah i think there is all right here we go i think we're going to get this one record a macro yap it paste it down paste it i guess we don't care do we i thought i had something pretty cool but i'm not going to be able to do that whatever close enough i thought i had something cool anyways have you ever been in this situation right right here right where you have a huge you're in a huge block right have you ever been in this have you been in this situation have you been in the situation and you want to like get to the end of it right you want to get to the end of it dude check this out i just want to be able to go to either side of these two things oh man dude hit it with like a little va little va do you see that little va opening bracket gets me to the end i'm already highlighted and now i'm on the end it's so good it's so good it's so good va opener bam out get them out just get get the hell out get the hell out right it's so good dude it's so good yeah because when you have those super huge text files where it's like you just want to find the two ends it is so hard to find those two ends it's so nice it's so nice anyways keep on going percent signs manual and annoying just scroll your scroll wheel and just make it with a single press of your button same thing for going on the start beginning or end of your line just zero and dollar i like i really got used to i use i usually use underscore uh uh because zero goes to the zeroth position underscore goes to the first character uh also so does hat hat goes to the first character but dollar sign hat does something different than dollar sign underscore right dollar sign dollar sign underscore you'll notice deleted the line but dollar sign carrot doesn't i don't really understand capital i goes to the first character in the line and starts typing in so capital i i'm already in insert mode right uh capital a goes to the end end super useful super super useful but for macros uh underscores are really awesome cuz look i started a macro right here you can see recording a i'll start always by hitting an underscore first so i go to the first character in here and then i start my macro it's just like such a hack in life to start every macro with an underscore only when i started using vim is actually using search to get from place to place on my code so instead of just scrolling with my wheel and searching for a specific word i really started using the search capabilities and that can get you places much more efficiently so i think if you actually take away the features that people are used to the scrolling and the selection and the regular text editing features you really get start to use to these stuff that are much more efficient like using search to get from place to place using these shortcuts to get from from one place to another in your code yeah for example i i can just from my location right over over here press f and round brackets it'll just bring me to the round brackets on this line f is fine i'm going to i'm going to add to this are you guys ready for this one this is where it gets real super sexy okay we're going to get i mean you got i mean this is going to get so sexy that there are going to be multiple people that are going to be pregnated by the end of this are you ready for this one all right so what he did right here is he did the old f opening little curries right there right pretty good huh watch this one vi opening cur uh parentheses look what i just did i highlighted the entire parenthesis group okay look at that so i can do a little di open open and i i deleted it so if i do a little ci open i'm now off typing whole thing just gms gms everywhere same thing works with uh with uh text so if i go like that and i just go ci uh double quote boom i'm inside the the the quotes deleted everything beforehand it is so good oh it's so good and it hops forward and if you're already in you just di that and then you can do that oh the hopping forward is so good so that's really something useful that instead of going heading manually to my mouse and pressing on this i can just do it with a single command on my keyboard yeah so when i go to other people's computers and use something like vs code or whatever i'm really missing these features having to do it again with my mouse is hor there's ain plug for v another thing that i see a lot of people on ids do is use the file tree and tabs both of which i think are horrible because you can spend a lot of time searching for the file you want with the file tree and the tabs the same deal you search a lot of time for the tab you want each time tabs are a mistake really inefficient i personally don't use file trees i used to use file trees now that i'm using vim i don't use file trees anymore and of course tabs i don't use that as well so instead of just going sifting through your entire file tree and searching for each file file each time i just like using tab super simple why why are tabs a problem you have this list of files that you're looking at and you have to find the one you want to get to and either then once you see it you have to control tab over to the place or b you have to go move your mouse up there and click the one so you have to manually search which humans are terrible at searching and then on top of it um on top of it you have to actually navigate to that point tabs are fine okay so buo you're you're talking about something a little bit different than tabs right when he was showing tabs he wasn't quite showing tabs in the way that we would show tabs right these are more like tabs for um uh vs code right every single file has its own tab up top so it's it's it's not tabs and vim vim tabs are windows so you can have one set of windows that are dedicated to a bunch of stuff another set of windows that are dedicated to other stuff and we could even make like harpoon work on a per tab basis so that's a little different totally get it little bit different they're they're just simply different experience experiences yes um but nonetheless uh it's just that if you're going to search for a file use a fuzzy finder if you're going to open up a file and you already have it saved say in harpoon then just do that hey i want to go to the init file i want to go to the config file i want to go to the list file i want to go to the test right like i don't want to have to think about things i want to have them already on my little fy so i can just run fast you know what i mean to me it's just kind of crazy to not have it that way you know what i mean it's it's it justes doesn't make much for sense the name is i agree with this thing let's finish it off well so instead of just going sifting through your entire file tree and searching for each file each time i just like using tags so i remember kind of like what i'm searching for each time so if i want to go to like the animation part of this code i just search part of it and it's just going to jump me right into the place i want to go subscribe for more and see you guys on the next one thanks for watching i liked it i like that say a lot uh i think that i think what he's you know it's what every vim person kind of struggles with as as a vimmer myself uh when you really end up using vim more and more you use it you start valuing speed and how you uh want to customize every little experience and there's definitely a game there you don't want to customize everything you don't want to spend all of your life using uh uh you know just trying to customize you got to find that balance and once you find a good balance where you make vim into what you want it's really really nice you know what i mean it it becomes super nice because it's exactly the way you think it's not how i think it's not how someone else thinks it's totally fine to have a bespoke editing experience on your machine i think that that's totally fine and second it just you you make something purely for yourself so it's as efficient as possible for you and then as you go you'll make more and more efficiency changes and you'll feel better and better i just like it um i also time box my neovim rc stuff like you know right now how many times have i been asked to redo my uh neovim rc uh i'm not doing it i i do it about once a year i sit down for about 10 hours and redo it about once a year fix the things i don't like move some stuff around make it into what i really wish it to be and that's i think a really good way to approach it because then you don't just lose yourself in config hell where you're constantly trying to you know know where you're constantly trying to like make everything perfect just make it perfect enough yeah i spent about 10 hours a year making my environment better sometimes 20 hours a year making my environment better and i think that that's good because i save more than enough time on the other side like one of my biggest time savers that i've made and this thing took two hours to make was a a sessionization go thing okay awesome i want to go back i want to go forward i want to go back i want to go forward it's just a plugin for it's just uses uh what's it called it just simply uses t-mo creates an autocomplete and navigates there and so now i have all of those still right here so i can still just go to each one of those places so i can go back to harpoon and it is what it is i can leave i can quit i can close this down i can reopen it back up i can tmo uh attach and i'm back where i was and there we go now i can harpoon it it's the exact same idea as harpoon is just trying to make it as quick as possible to where you want to be and it's just one of those things where yeah it took like two hours to make but i've probably i've literally saved a kajillion hours in navigation and i love it the name is the primagen