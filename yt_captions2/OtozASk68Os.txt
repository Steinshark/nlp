his camera is very crisp i would agree his camera looks really nice i'm like off in a corner a little schmeagle-like only the crisp is here i mean i am i'm all about crispiness if nothing else oh you left a lot of people quite crispy after that previous video yeah i know so what's hilarious about that sort of thing is that uh the the main thing that you get when you do a video like that is like i just i just think it was too forceful it's just it's too much or whatever and i'm just like guys i talk calmly all the time and no one cares that's the problem right it's like you get mad when someone comes out with something bold but you never listen when they're gone no that's oh so that's that's the worst part about i don't know if it's you know people blame the culture they blame youtube they blame tick tock they blame something right but it's like if you're not having a high reaction bit of content nobody cares you can produce the highest quality breakdown of material like this is why you should do this over this nobody's gonna care no one's gonna watch it you get up there and say your ideas are terrible every person's gonna watch it why i don't even know why why why world life would be better if we didn't have to deal with that it's true and it's just like so yeah i mean i i don't disagree with you a two hour long video from me where i calmly go through all of the things that happen when you use virtual function calls for example would be more preferable to me as well it really know what watches said no one watches it no one cares i tried to produce a really high so on my main channel i've been i've been producing like these higher quality videos and one of them was this one going over rusty nums comparing them to typescript enums like why why are they different what makes them different and why is rusty them so cool versus why is typescript enum's like just they're just terrible and worst performing video of all time i show why is something really fast people love it right that's all you gotta do is just like put a graph up with some numbers and people are like oh i feel smart but you're like this is why you technically can break down and people like i can't listen to this [ __ ] okay it's way too boring okay yep cool they just wanted to they just want to see the like the oh man prime's dissing on enums right like hell yeah that's what they wanted to see uh yeah they didn't they didn't want the data yeah they did oh well oh well all right so hey let's introduce you for those that don't know who you are could you give like a little story about you i know you've worked you you used to stream on twitch quite frequently right if i'm not mistaken and i probably will again i just have been pressed for time um so yeah my name is casey muratori i am old probably much older than everyone else here i will be 47 this year i want to say so uh maybe or just uh elderly either way um i've been in the game industry since i was like a little baby child i i like started working in the game industry right out of high school when i was like' and i just kind of never stopped really my uh early job was at like a startup that didn't really go anywhere then i worked at a place called gas powered games which did a game called dungeon siege uh which some people may remember but it wasn't particularly huge then i worked at rad game tools for quite some time and that's where i did most stuff that people who have actually used stuff i've written will have used it from are you talking about the company sorry did you make telemetry uh no uh brian hook originally was that i made telemetry i did their 3d character animation stuff and that's used in you know you've probably played a game that used it uh if you're old enough i mean i haven't been there in a long time but it was used in all sorts of stuff it's used in was used as the baseline for destiny's character pipeline for example um so that's probably one of the newer games but it was it goes all the way back to like it was used in everquest 2. it was used in age of uh mythology it was used in you know all these games there's like i don't know 5 000 skus or something because that's how licensing game works and i also worked on the first version of big two so uh that's the thing that plays video in like all the games like ever written uh so you know if you ever watched a cut scene in a game it was probably played through a pink video it's it's it's used everywhere so and that first came out i guess on gears of war three the previous gears of war games were the previous version of bank which i didn't work on but everything after that was think too so i did a ton of that stuff uh lately i work on independent stuff and i also worked on uh some of the stuff for the game the witness with john blow but you know that's that's my sort of that that's my sort of career i i've never really done any of the stuff so the stuff that you work on i've never really done much of so like uh web back end stuff or that sort of thing i i i've never really worked in that space okay okay that's the you know you can take a lot there's a lot of similarities in some sense between the two spaces i mean in the end it's all programming it's all becoming good at what you're doing learning trying to become excellent hopefully excellent i think the game dev space people strive for excellent excellence at a much higher rate than on the website it's it's probably true but i think part of that is is just because it they're forced to you know like if your game runs at one frame a second like nobody will play it so you're kind of like forced to do it in a way i don't know that it's like i we're more virtuous i think we're just forced to i don't know maybe that's pessimistic but you know what i'm saying no i i get it you can't you because you can't literally release the game no one's gonna play it when somebody else can release a 30 60 120 144 whatever game it is you're you know why would you ever play the 14 frame per second game it's just not gonna work exactly and i think web users are more forgiving is part of that reason if web users like just refuse to use sites that were at 60 frames a second right web devs would learn it pretty quick i bet because they'd have to right it's so i think there's i think it's like that's a lot of where that sort of like comes from if that makes sense uh that that's my guess anyway just being forced to okay that makes sense all right so you recently released a video on youtube and obviously you probably i think you got a lot of praise and probably a lot of blowback um how was the blowback how was it was it bad did people reach out to you on twitter or any like did you get messages being aggressive what was it like so here's what i'll say if i had if this was my oh god i wish i had one of those like old politician like uh phrases to spin here if this was my first time around the apple cart you know whatever whatever one of those old things yeah if this were my first time doing this sort of thing i might have been off put by the response but it wasn't so actually my take this time around was actually i was shocked at how positive the response was because i was expecting that the people who would react to this video would all be like oh this guy's just an idiot because i'm just used to that right yeah i actually got so many people going like oh my god thank you for saying that all of these stupid ideas that people make me do at my company i hate them and our code base is terrible it takes us forever to do anything and i'm just glad somebody put out something right yeah uh that's like assailing this i wasn't expecting that right i was expecting the video to be largely ignored but to the extent that it was paid attention to it would probably just be negative and i was like well it's fine this was just stuff from the beginning of my performance aware programming course that i'm doing that didn't make it into the prologue because we were looking at other things that was that's basically what it was right yeah um and so so i was actually pleasantly surprised i mean yes i'm sure there are plenty of like reddit threads or just like this guy's an idiot and that's fine because that happens no matter what you say you could be like hey equals mc squared and they'd be like what a dumb what a dumb guy like oh he didn't even derive it himself yes no but but real talk you know that that's a good point which i think prohibits a lot of people from jumping into this game in general is that they're worried you know people are going to say mean things or they start putting up something and people get super upset but the reality is that what you said especially in that video for those that don't know i think i actually have the video right uh here clean code horrible performance right here oh my goodness like it was so easy to agree with it but it was so easy to disagree with it hey it's a master class entitling presentation and everything but more so it really highlights this thing that i've seen so much throughout my years in programming which is just this continuous layer of abstraction it may not follow exactly clean code principles people do it with functional programming right we had someone bring them bring in the ramda library into our television application because they just want occurring so every function happened to be like three four levels of occurring which is just like not optimal whatsoever in any world in javascript i know javascript can do functional things it doesn't mean it should do functional things and it was just crazy to debug i couldn't figure it out and they're like oh it's so ergonomic i'm like i just want to be able to print something to tell me where i'm at because i can't figure out anything right now all the exceptions are on the same line and i don't know where the hell i'm at right like this is really painful and so i was very happy to see this uh as far as as far as this all went what kind of led you down this path of getting frustrated and saying this because i assume this type of programming that we see here isn't really heavily used in game programming one would one would venture to say just because of the performance considerations so i guess there's two there's two parts to that one is like is it used in game programming and i think actually the answer to that is it actually is uh frustratingly so so a lot of people who were previously uh you know into performance or tried to do things sensibly have actually been unhappy by the proliferation of things like abstractions in-game development and i think this is cut this is kind of inevitable for a number of reasons the main one being that as systems become extremely powerful you end up in a situation where okay if even if we assume we're taking eighty percent of the performance of this game right and we're spending it all on like these well-optimized graphic subsystems and physics and whatever the the 20 that's not that or whatever is getting fatter every year because the total system performance is going up right yeah so that other part gets fatter and fatter which leaves room for people to experiment with their weird abstraction ideas which are not always bad experimentation isn't bad right sometimes we come up with good stuff but other times it's just it creates this bad area with no feedback loop because no one's pushing the performance of that area and that's where you get into these things where like all of a sudden you have these games where like they're cpu limited all of a sudden like people are doing benchmarks on them and they put in these like 40 90 gpus and doesn't get any faster and you're like what's going on it's like well guess what you know um we're we're doing that same stuff right that you just said game developers don't do it's like yeah we're doing them there's going to be all kinds of json and virtual functions and all this stuff going on in there uh so you know there's like like i think there's a bit of that going on and that makes me grumpy certainly because i don't think it's actually helping to your point it's like a lot of times it's actually just harder for programmers to use it is the other side of it is just software in general these days oh my god it's so slow everything i use everything i use man it's so slow i've been using uh so i use twitter on my web app i don't actually put a mobile app on it because i always kind of i just like that use the web app for things and for a long time up until these last two months i could not have a web app open longer than maybe four hours like i'd come back to it later in the day and i had to try to scroll the notifications and it would just crash and be like the page is not responding i'd have to refresh it and i'd do this multiple multiple times a day only just recently has it actually got any better and people just they just don't it doesn't seem that there's a lot of care in the web world or maybe there's just a lot of forgiveness in the web world as you said but there just is no like it doesn't seem to be there so yeah no i mean you're you're absolutely right and i think again to me it just comes down to are you forced or something or are you not forced to do it because like to your point you said twitch right but or you work for netflix yeah yeah so you know why is someone choose netflix or twitch as a product well it's it's the content right it's like they're gonna go to twitch because your channel's on it and they want to watch your channel or something right they're not going to go to it because twitch ships the best web app there is some competitive advantage to shipping good quality stuff and we have seen that in the case of things that were interchangeable i usually use like mapquest and google maps as an example like once google maps came up with fast maps you could scroll no one wanted to use mapquest anymore right so yeah if you can serve the same content then things like performance matters but otherwise it's like okay like let's suppose netflix's app sucks or their website sucks well i gotta watch the show that's on it if i want to watch the show that's on it i i don't have the option of paying someone else for a better netflix that just has the same content and so i do think that there's just this inherent problem of it's hard to compete on just performance because most web services are somewhat monopolist stick on their content and so you can't have competition on performance it's just up to that company to decide to deliver a good user experience but they don't have to so it's you know it is an interesting take but i think a lot of that is an unmeasured take in some sense uh maybe three years ago or four years ago i started pushing on this thing we did at netflix called destiny i've i've talked about this a few times on chat if you haven't heard it but effectively destiny would be as you scrolled through netflix whatever was kind of surrounding your uh cursor we'd go okay which one are you most likely to play let's take the top two or the top whatever and let's start downloading say the manifest the manifest contains like hey where's the video actually at here's the license to play the video all the stuff and then maybe even download a couple seconds of the video something to kind of give it so that when you pressed play it would just go fast and i said hey i think this is problematic i think we're actually we're doing a disservice to our app doing this no one from from data science and engineering all the way to my manager said no we can't turn that off we've already measured this this was a win there would be no reason why we'd turn it off so i got somebody and i got it turned off i just kind of went a little bit behind some backs did a little systems test and said hey look at this errors are really reduced we're having less crashes on device i think there's something here so my boss like okay there is definitely something here why don't you give it a try so i allocated a couple million people to the test and said okay no more pre-play for you and of course i called the uh the test fate the fate of destiny i thought it was pretty clever uh people kind of liked it some people didn't because it was you know i was stepping on a lot of toes doing this and it ended up being multi-million dollars a year of revenue increase simply because people could use the product you know like even if there is stranger things people aren't going to play stranger things if they can't use the product right like they're just gonna be like too bad i don't i i won't do this anymore right and so there is something that's great yeah that's that's great news i mean in other words if if more people knew that story that would be awesome right because i don't have any stories like that because i don't work on those products so i can't i have no way to convince people that performance hurts them other than giving examples like hey would you rather use a windows ce device or an iphone and what was the difference between those right performance um so you know uh i would love it if we could get more stories like that that would convince people because i believe it sort of in my heart that when people use a slick product that's like super responsive and they touch something and it instantly responds that they do engage more but i can't prove it but like what you just said is a way to prove it right yeah no i mean i can find myself doing that in the sense that when i jump on and i i'm gonna watch a family movie with you know with the kiddos and everything so i'm gonna first go to netflix and kind of try to find that movie because it's just a better experience then i know crap i'm gonna have to download the i'm gonna have to like you know rent this from amazon prime i start feeling this anxiety because i know i have to first go to www.amazon to rent it because they're fighting with google then after that i'm gonna rent it then i'm gonna go to amazon and they have such an unpolished product that they don't even show me the thing i just got done renting then i don't want to search because every time you press the key there's a good second and a half delay so i'm like twice and then i watch it i'm like okay got it twice now do it again and then i like oh my just like the anxiety i i try to avoid using the product just to avoid the situation it is so frustrating and so i feel like there's something there but it's like again anecdote versus i need a million people to prove that there is probably a there there at least you have one anecdote and that's really good right uh because you know um i should say you have one proved anecdote like you you took a a thing that was hypothetical and like actually demonstrated it and that's awesome i i wish more people would do that because then we would know right um yeah that's actually what our team is doing now at netflix we're really trying to go into this and making it so that we can actually prove that there is value in these things because it is it makes no sense not to if we think there could be it could mean a lot right and so when you're at the scale at least like netflix or google or amazon a simple change that makes people point zero one percent happier is a lot when you're talking about billions in revenue so well and i would point out the fact that it's not like with games for example there's no reason why someone can't play especially if you took a game like like okay so the witness which i worked on if that thing ran at 10 frames a second well it's still totally playable it's not an action game you can just play it that way right so there has to be a reason why everyone liked playing it at 60 frames a second and that that just feels a lot better and more engaging it's like there's not a lot of reason to suspect that somehow whatever brain process is going on that they were like oh i like this game better because it's at 60 frames a second i mean why wouldn't that happen everywhere like it it doesn't make sense that humans would suddenly stop wanting that continuous feedback just because they went to amazon to shop instead of the witness to play these puzzles like it's not just action games right if it was just action games and no one cared what the frame rate was on anything else then you'd say sure but people want that smooth experience everywhere and so i do it logically it seems like it would carry over right yeah it does all right so so we gotta let's switch a little bit of a gears because i think that you might have some similar feelings i do so i have this big thing and we kind of we've kind of talked about it a little bit about like until web devs are required here's the real question for you how much would you want to improve performance or write this code that is well written that performs well how much would that motivate you if there was no material or perceptual gain right like in the sense that no one would actually care if it ran at 10 frames or 100 frames there was no anything you didn't care i didn't care would that drive you still to do anything gosh that's a really interesting question i love it um it that's it's kind of like philosophical right yeah um uh so i guess what i'd say is it's a little bit hard for me to say i do feel like i have a natural uh um i mean one of the things people criticize me for being critical which i suppose is an odd thing but i get it and right uh but but i agree with them right i am a critical person and i'm not a critical person just of other people's stuff i'm very critical of my own stuff like if you want to talk to me about one of my code bases i will be the first person to point out all of the things in it that i think i did wrong i'll be like this sucks this sucks this sucks this sucks i could have done better here i should have known this i've learned this recently so i obviously screwed that up right so part of i think the reason i do things is just because i am a naturally critical person and i also criticize myself if nobody in the world including me cared about performance then i can't really predict whether i would be critical of things i did that weren't performance oriented because it might just be that the reason i criticize those things is because i know performance does matter and so i criticize things i do where i could have done a better job on performance it's really hard for me to guess what i would do if it wasn't so that's a really i don't know if i can really guess i mean i will always be someone who has who who criticizes the things that they themselves do for being low quality every time i do something i think is low quality i'm like i should have done that better in my head if nowhere else and so i just don't know i know that would still be there but would it include performance i don't know interesting so it's a follow-up question this is uh this is going somewhere when you do the dishes clean your house how well do you do it do you do it just to get it done or do you do it to do a good job uh so if i could just do none of it i would i of course if i could do none i would also do none as well i do not care about it at all like like cleaning to me is like just the barest minimum i can do i well i'll give you an example i buy the same like literally i will just buy as my quote-unquote wardrobe 10 of the same pair of pants because it will save me time getting dressed because i don't have to think about matching clothes i buy this this is the i have six or seven of this exact shirt maybe different colors i don't know my wife buys them for me too she just puts them all in a drawer alongside the pants and that's that and i wear a black hoodie every day i'm just like just give it to me i just unhook it shirt hoodie go that's it yes and so you know obviously you know one thing it's clear i don't know if this is where a question is going but one thing is clear to me is like i only really care about the code that's just like what i like to do and i don't care if i was gonna go do something else that i thought needed to be done well maybe but i'm just not i yeah i'm just a computer person i've i since i was very very little i sat at a computer like we had these terminals at home back in the 70s and i just like it's what i do i don't know i'm i'm bad at everything else so i have this weird uh i have this weird kind of uh thing i don't know what it is but even if i try to do like even if i'm cleaning and i take a shortcut there's something inside of me that even as i do and i walk away it's just like you could have done better you could have done that better like every time i played any video game i don't play to just beat the game or to enjoy the experience though i do enjoy the experience i also play it to be the best i've ever tried to be in that moment because it's just like there's this driving feeling inside of me that i just really want to be good at whatever i do so even if it's not important even when no one's looking like when i'm building my little dumb tools for something at work or something i don't even use like array.map because i'm sitting there thinking it's going to create a function i don't really want to create a function here like i don't like that i don't create a closure like i'm still thinking through all these things that are worthless but it's just like there's something about it that drives me when i when i know i could have done better that's that's actually really cool i think that that may be though a distinct personality type from me i see what you're going for or getting at there rather i should say and i guess i would say is yours is probably the better of the two like like you could probably go be like a ceo or something and like run a important company or something right because because to you all the things are in that umbrella of let's do a quality job to me i'm like the dude who'll be in some shack with like you know no like they just have these threadbare clothes and and no food and they're just like typing at the keyboard trying to like figure out this one last little puzzle they're working on and everything else is like a disaster and everything right i i'm i think i'm more of like an obsessive about one thing and i don't have that ability to to say hey we should do the whole thing well right uh and being able to do the whole thing well is probably better better or because it will help you split your attention too to like realize that other things should be done well you know i don't know but that's that's my guess to be fair or to be frank like i i don't do a lot of things well in some sense like right now my office is really dirty but until i clean it once i clean it i'm gonna try to do a good job i always try to do these things like okay if i just pick up four things and just do this over time it will naturally get clean i don't know why i always fall apart it never actually ends up working out it feels like it should work out but it just never does i can never do the spread out good job i always have to just like do the thing or i just can't do it well i i can relate to that part certainly it's like i can only really focus on this one thing right if you tell me there's 10 things going on i'm like ah right yeah school was always hard in that case that like go into like public school in the you know when i was a kid or whatever it's like how am i supposed to study four subjects what give me one like i'll do one and i'll study it but i can't do for it yeah my brain doesn't doesn't split tasks yeah i i would always struggle in school with the exact same concept which is i would order them according to when they're due and i'm not a procrastinator either and i would just start and just like okay i gotta do this one thing and then do it for you know 16 hours in a day and be like okay i now have one thing done i'm i got five days left like how do i organize my next whatever you know like okay that's i okay so here's what i did in school just just to underscore the difference here that's wait this is what i say your personality type is better in general i don't know about that just trust me on this one you're good you're you're in a good zone um so what i did was uh i would come home from school and i'd program all day uh well more specifically i'd program all night i'd go to sleep and only get like four hours of sleep i'd go to school i'd come home from school and go to sleep because i was exhausted wake up and start programming again all of the homework was pushed to like the very last like the night before and i would do the barest minimum it was horrible i was not a good student in case you're wondering uh well i did get a 2.14 or 2.16 in high school so i wasn't a good it was until college when i went to college is where i just like exploded is when i realized how i should organize myself i was a disaster in my wow you're that big of a split you like went from high school not doing homework or procrastinating and so that and then in college you were like i'm on it well there was there was like this whole meth scene and and other addictions that went on in between those two in in betwixt those two moments and then afterwards you know life changed but you know once dude you got you're you're gonna have like a documentary about you at some point this is this is like this is my a a real drama with like with all the phases and stuff well yeah you know the thing is it's hard to know what something's worth until you don't have it that's a very good point and so when i was losing the things i realized how good i really did have it you know that's the hard part is that i think it's really easy to complain or be unhappy and maybe this is why i like trying to do things well even if they're worthless things is that you know when you when you don't have it you wish you always did that that's awesome but i love the show more and more i've seen your show a couple times as you know and like i've loved it every time and and this episode is fantastic i love all the stuff you're saying oh well thank you man i appreciate that i really do uh you're actually i think if if right here if we go like this hey community what do you think of casey i think we're gonna get a lot of like based awesome uh because uh we loved we we were clapping and loving your content you're you're a good guy yeah look at that you got a based awesome purple hearts i appreciate it i i appreciate everyone out there but yeah okay so you said you're doing a course what's your course on uh so the course is literally on like what we were just kind of alluding to it's it's called performance aware programming you have a link uh yeah it's just computer enhanced.com i'll i'll try to type it in i don't know if i can type it in here uh yeah no i think i got it computer enhance.com oh yeah there we go here i'm gonna spam it in the chat okay i appreciate it now um uh it's just all it is is i i was sitting around and i'm going like look i i think i see the disconnect here or i see a disconnect that i can close people when they think about performance these days and i see it all the time what they're thinking in their head is like oh like big unix beard type guy is like in the machine room with circuit diagrams of the processor right like breaking down the exact assembly yeah like figuring out that like if he does this thing on an so that it'll change the electrical voltage in between on the half cycle they can use the dma engine in the other part it's like okay yes that is like demo scene and like super hardcore game programming people or whatever yes that is a thing and it used to be that that's what code optimization meant and if you were talking about speeding up code you were doing all that stuff we're gonna run this on the processor in the disk drive of the commodore 64. right like and i think unfortunately that idea held over till today but actually nowadays it's like hey if you compile that python program it'll get like several times faster right yeah it's like it hard it's not even a hard thing to do or or if i taught you how to rewrite a few things in c just little things in c no memory management none of that just just basic little like math loops and c you could use cython to call out of your python program into something that's going to be as fast as c because it literally is c after you get the function call done yeah right um so it's basically a course that's based on the idea of teaching people that optimization is not actually as hard as you think it is because there's so much fat in today's programs that you can speed them up by dizzying it's like staggering orders of magnitude like 100x magnitude without doing any of those fancy things so what we do in the class is i basically take you through one of those kind of i take you through all the sort of knowledge generally speaking that one of those old school optimizer people what were they actually trying to do basically and then so that you understand the idea of what makes computer performance right and then i just show you how today we have so much stuff stacked on top of that that we can basically go all the just by knowing what would be fast just by knowing that we can go all the way up to like really huge multiples of performance without ever having to actually get down into there just by knowing it once by seeing once what the processor does you never really have to do it again you'll just now you'll know and like i think you just said something kind of like that you were like hey i'm not going to use this map because i know it's going to create a function it's like that knowledge came from understanding something about performance once you have the knowledge you don't need to do any like fancy low-level optimization yeah you just now know oh this would not be a great place to use a map that knowledge just saved you like 10x potentially because you really can create those dramatic slowdowns just by a few mistakes in like something like javascript uh with the way you architect your program you can create massive slowdowns so that's what the course is about just trying to teach that thing that's cool that's really really good i i really like that uh but i do have a very important question about it which is at what point in the course do you just recommend them using rust of course the greatest programming language ever um so i try in the course as much as i can uh to avoid challenging notions like the one you just said so one reason for that again the fat because i think there's so much performance on the table in modern programs yeah that i want to encourage people to think that no matter what they are required to do whether it's i mean because maybe they love rust like you do but they have to program python for their job or it has to be in javascript because it's whatever right um i don't want them to think well the answer to how i get fast is i have to write in rust so if i'm not writing in rust well then i guess my programs are going to have to be slow because that doesn't have to be true right yeah so i try very hard to not challenge that notion and what most of the course as much as i can i just have people do it in whatever language they want right um so if they're doing rust they do it in rust if they're doing it javascript they do it in javascript and sometimes we have things where you have to do it in a particular language but as much as possible i try to encourage people to use the language of their choice i actually really like that um because i do see that there's like this oh well we don't need performance we don't think about performance oh you can't really do it in this language it's like well actually in javascript there's actually quite a few ways to make it just like mind-bendingly faster it's an easy one that i always tell people which people just hate this one especially the functional bros out there where's my functional bros out there kabad say something but it's always like do you know that if you just use a class and you have a reset function that resets its state back to zero and just reuse the object it's like mind-blowingly faster in javascript not to just create and let the garbage collection take control you just take control yeah you are now the managed memory it works really really well it's not even that hard yep yep no i mean just thinking of it as this is how many of these things i have and i just reuse them yeah it's it's the thing is it's true in every language in every language that's two things it's always faster i don't care what language you're using to not go through a memory allocator whether it's manual or garbage collected just don't do it that's always faster but two it's more stable because you don't have all these weird proliferating things where oh someone forgot to free that thing or someone's creating it way too many of these or it's like no if you had to think about like we've just got a few of them it ends up being more stable in my experience yeah that is uh it's it's a fact of life it's fun and plus it's kind of like a fun thing to do i think people kind of forget how fun it is to kind of golf your way into like some better things like okay hey i wrote this let's just take a pass and what can we do to make this just better even just just inspecting it because most problems and applications aren't like i mean rarely you do run into this where it's like oh you were using object you know object copy that does a deep copy versus just an assign or some you know like some very rare thing that happens but well but people don't know right and this is why i say performance aware versus optimization i kind of try and draw that line because it's like look if you don't know what a cpu does why would you differentiate between a deep copy and a regular copy or any of those things because to you it's just the semantics of does the program work and so your brain has just been taught to think about well what am i what's one of these things in this language that's very abstract do i want to have happen i'll just pick that you're never thinking about what the cpu actually has to do so to you some that takes the cpu five minutes is the same as something that the cpu can do instantaneously because there is no consideration of it right and so that consideration is the most missing piece we don't need to learn how to get a hundred percent of the horsepower out of that cpu i think we just need to learn how to remember it's there i guess that's the way i would say it and so you call this uh you call it like uh what was the phrase you call it like pessimizing so yeah i i mean and in fact you hand upon this i remember watching your reaction video which i've never even heard this term i never even heard the term i was like what is this term yeah uh you you notice i don't use it anymore because nobody knows what it is so it's like okay forget it we're not using that term that's where i came up with performance aware so i just say performance aware the i used to use pessimization because it's the opposite of optimization right they're just it's a beautiful term now that like when i when i realize it's a great term i love good word play it's a great term it just no one knows what it is and your reaction video was just uh further icing on that cake i was like because i watched a video i loved that video i even sent you a i don't know if you saw it on twitter i was like i watched a video and i loved it um because i was expecting someone to just be like oh this guy's an idiot that's that's normally what i expect right and you it was great because you you criticized parts of the video you liked parts of the video everything you said was smart i loved it it was like this is this guy i would watch react videos all day long of my videos if i mean no one's gonna you're one of the few people reacts to my videos who am i kidding but point being it was great and i really enjoyed it and i was like and i learned something from it i'm like hey a smart person watched my video and told me some things about it that i can learn from so that was awesome and anyway so but by that point i'd kind of already realized that don't use the word pessimization it doesn't land um yeah so that's why i kind of got rid of it but it is yeah it's this idea that in addition to optimizing code we can also pessimize code we can do things that make it harder for the cpu to run it for no real reason like just we had two things we could choose to do here and we arbitrarily somewhat chose this much worse one because of some other weird metrics that i don't necessarily know where they come from like clean code that i don't feel like anyone ever proved really made anyone more productive but i can prove they make the cp do less productive so it seems like a bad trade and that was pessimization there's there's this weird thing i think that we all have in our head as programmers which is what if i add one more and i feel like this has created an abstraction like complex among everybody it's just like well we could have tomorrow and it's like yeah we will and when we do we could consider something different but for now i'm just i always just do like 1d programming because there's no need like i don't care if we add new things tomorrow i'll deal with it tomorrow today i just want to make it work and make it nice and tomorrow if it really truly does call for this really abstract concept then we can do it but almost always has the abstract concept looked clean on a single line where it could be like dot get type or whatever but the [ __ ] behind it is crazy and the moment you need to change you're like i have to burn the whole thing down i can't remember what i did and it's completely confusing so that that thing that you literally just said is one of the biggest things that if we could just stop people from doing it it would make a huge huge impact because what happens is people and and you know i i think i'm a pretty good programmer but i and i've definitely worked with some of great programmers right so i've seen what they can do and so i think i have a pretty good handle on like if i was to think of the best programmer i know what do i think their capabilities are and this is this program is going to be like way better way better than the average like your john carmax those kind of guys i know if we have one at netflix his name is kevin lee there you go so you know that guy you can think of who that guy is right and the thing is when i think about that i know that they even them don't really have the ability to think through an entire complex programming problem without actually doing the programming they have to see all of the details before they really get it and usually they have to do it and then they'll change some stuff after they're like oh i see how that went now i'm going to revise what i did because there was a better way oh my goodness i love this keep going yeah see what i'm saying though right you you know you maybe i'm missing the mark here because someone out there thinking about the best program they know and that's not true but like literally every best programmer i know where i look at that person like holy crap this this person's amazing this was true of them and so the way i think of it and it's it's absolutely true for me because it's gonna be true for them it's gonna be true for me that's just a given um but i feel it in practice is that i can't predict the correct code structure for something i haven't done yet so if by definition i'm choosing a particular code path because i think it does something that i want to take advantage of in the future i almost always tell myself no because i'm wrong not because it wouldn't be great to be able to do that but because you're wrong that won't be the design that you actually want when you go to do the thing that you haven't done yet oh you know what i'm saying no this is totally true what happens to me is that and i've i've i still do it today sometimes because the voice doesn't kick in i know it doesn't i do it too oh my goodness and so every time something i do goes smoothly it's because i remembered write the damn thing first that just does literally what you were trying to do and then you will see after you do that which which only takes like a day or two yeah right yeah because you're not thinking about anything else you're just writing this little thing that does something fairly simple and then you will see what the correct design was for that and you just make some modifications to put that into a nice simple state and then you're done and when the time comes because it will come and this is fine when you decide you need to change it you just write that one new piece and you re you move the design around a little bit to accommodate it and it goes very smoothly because you're always working with the actual ground truth you actually have the thing running so you know whether or not the design works because it is literally working predictive design except first off this is great talk i love this i love this so much you know i i get [ __ ] on the most one of my most controversial opinions i think on the twitter space and on everywhere else i have tick tocks describing why i'm stupid calling me oh he thinks he's a genius i say learn to type fast because you know what you're gonna get yeah way more opportunities to make a good decision because you could just simply get your idea out there it is worth more than anything else in my life it's just being able to type fast and that's that it's not a hard thing then you know you always get the people be like well you know i plan my stuff ahead i can't i'm not smart enough to plan all my stuff ahead i have to play with it because i'm like oh this api is going to return a json object oh yeah but then it sometimes you know request times out sometimes we get bad requests for no reason sometimes it just doesn't respond like it just gives you empty and you blow up your program like there's like nine different ways to hell you don't know any of them just get things out there try it out see what's going on and then i go back and like take some time and redesign it every single time it's been the best way to write software i've ever done and i've tried i actually was getting my masters in software engineering if you even realized that that was a thing it turns out it is a thing there's a masters in software engineering and i had to write out like sequence diagrams and uml diagrams and all of this and we took six months to design this thing that's gonna be running on a super computer day one i go and throw up like a very simple thing too slow for a super computer couldn't even run on it it was so bad and i said okay i'm gonna break this design and i'm just going to make a bunch of public getters because this was in java 1.5 days i think and i'm like i'm just gonna make a bunch of getters and we're gonna drop all these functions and everything ran smoothly was like a hundred times faster and i was like why is this what has happened here and then that's when i realized you can plan all you want you're just wrong you just built the wrong thing it's all it is i mean everything you just said is just it's just the truth like typing fast yes like i mean you maybe you don't have to type fast maybe you can get the ai to do it for you or something but whatever it is the experimentation the trying the actual thing is is the only way you can actually get all the details out it's too big for a human brain that's why we use the computer to do it right and so it yeah uml diagrams leave out all of the important details that actually determine how the code will run and you can't get rid of them right so it's just yeah i mean absolutely absolutely no question love it all right we should uh we could probably end the conversation here unless if you have more time i don't know where we're going anymore but this was great i really enjoyed this a lot me too eddie any item you want to do it i'll come back yeah here one more time here's here's uh casey's twitter right here go jump on we already linked the course a bunch i think i actually still have it copied and paste there you go they'll take his course it's a great course it sounds like it's gonna be great i might even have to check it out i think i'm pretty excited about this too because i don't i used to know a lot of stuff way more lower down but it's been just a decade plus so i need to kind of freshen up maybe a little bit i'll send you a sub you can check it out anytime you want okay deal sounds good all right well thanks so much for having me on and thanks chad you guys are awesome and uh i guess i'll see everyone around the internet all right take care casey take it easy