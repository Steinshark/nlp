being able to code in python is like having access to an unpaid assistant that can do all of the tasks that you don't want to do for you so in this video i'm going to give you a full tutorial on three specific python automation projects that are my absolute favorites these projects are very easy to build yet at the same time they can actually improve your life and actually solve a problem for you while improving your python skills in the process so if you're completely new to python automation this is also the perfect video for you all the technical details you will need we will go over in this video and i will teach them to you so all you have to do is pick up your laptop and start coding along with me if however you are serious about learning python and becoming a real python developer and you want to learn the skills to actually land a job as a python developer as well in one structured format then you can check out my paid program python developer boot cab down below in the description in it i take you from zero through all of the fundamentals of python programming you would need as a python developer in a lot more detail than i can ever cover in these youtube videos culminating in a full getting hired boot camp where you learn everything from crafting your resume applying for job strategically in a way that doesn't require you to send a ton of job application yet still landar a job as a developer there's also a full module on specifically python automation and scripting where we go over the sort of philosophies and techniques of python automation and scripting that will give you the skill sets to build python automation projects that you never thought were even possible and that's still not all because you can also use use the code python for a special discount on the platform only available for people who watch these videos so check that out down below in the description if you're interested in that with that let's get into the first project our first project is going to be a website automator now every time you go on your computer and you open up your browser what do you have to do well you have to open up some web pages and chances are when you're doing a specific task let's say you're working on a school project or you start working on your latest coding project you have certain tabs that you're going to want to have open while you're working on that thing for example if you're going through my pay program python development book gamp sneaky plug in you're going to want to have the program open then maybe you have your notes open maybe you have some tutorials open let's say you're figuring out one of the practice projects it's quite compass some to have to always manually open up all of these tabs when you start working on something and then manually close them and manually close a set of other tabs when you want to do something else and so because doing that is extremely boring and annoying why don't we just automate app using python let's do it so we're going to make a file called website _ automator door p and i'm going to spell that correctly like that we're going to close all of these other ones because we don't need them and we're going to start coding so for these purposes we're going to need two libraries that we're going to want to import at the top here one of them is going to be cis one of them is going to be web browser and you might have to install this i'm not actually sure or if you do then the way you do that is by going pip install web browser like that okay looks like it could be simply a built-in library whatever so what we're going to do is define a variable called urls that is going to be essentially an object has different sets of urls for different tasks that you want to be working on on your computer to illustrate you might have a set of urls that we're going to label as work that's going to have the value of a list of url else like for example www do i don't know slack.com google.com whatever are your work tabs are going to be in this tab group right here and then you might want to have something else for your personal life we're going to have personal which might include i don't know netflix or more spotify youtube.com now what we want to achieve is that just by running this program with a specific keyword that correspond to some of these names of these tab groups then what this web browser library can do is simply open up those urls using the default browser on your computer so we're going to define a function called open web pages that's going to take a set of urls as a list as a parameter and then we're going to loop over these urls by going for url in urls so this is simply running a python for loop where in each iteration this url variable is going to refer to each given url in the url list for example this list right here then all we have to do is using this web browser module which by the way you would simply find from the documentation of the of this web browser library how specifically to do this but you were going to call this method called opencore and if you just scroll down we're going to see this right away open new tab with this url just like that and right now i'm just going to test this out to make sure that this works so i'm going to call open web pages and i'm just going to use urls and index with personal just to test this out to make sure that this works properly so we're going to run this and what is going to happen nothing is going to happen i wonder why that is so i'm actually going to go to the web browser library to figure out what i have done wrong here okay perhaps i can just use open let's see if this works okay looks like we need to have the full path with i believe the https in front of it like that i just had this formatted incorrectly and that's why it wasn't working and there we go that is very good to know just like that so now to finalize this project what we're going to go is if underscore uncore name underscore uncore is equal to and bear with me on this underscore uncore maincore uncore so what the hell are we doing here well this is essentially simply saying that if we are running this program directly as in this is not being run from some other file like if someone was importing this file into some other file technically it's going to run through the file but what but in that case we don't actually want to run this code that is inside of this if block in here we only want to run this if block if this file is being run directly from the terminal that is simply what we're saying here but you don't need to care too much about that what we want to do is allow the user to set the name of of the url group that we want to open as a command line argument and the way we do that is first of all let's just get a variable that we're going to set that to and that's going to be sis. argv now argv is going to be a list of all of the command line arguments that we give to the program what do we mean by command line arguments well when we running this like this going python uh web site automator top whatever we give after this program name is going to be the first command line argument let's say we give it personal that is going to be the first command line argument then we let's say we give a aa that is going to give it the second command line argument etc etc the way we want to use this is that whatever is the first command line argument is going to be the name of the particular url group that we want to open and so what we're going to do is give it cis.org v1 and it's one because technically the program name which is right here this one website a.p is going to be the first so the index zero command line argument but that is not what we want to access we want to access this second one then what we're going to do is go urls is equal to urls index by this set name and then simply go open web pages with these urls like that and we're actually going to put this to uppercase to make sure that we're not confusing uh because this is urls in lower case and this is urls in upper case and just like that it should work now once we run this project right here web automa personal boom all the web pages open up inside of my web browser window just like that and ideally what you want to do is add some error checking and things like this to make sure if let's say we give some weird name like personal something like this then obviously just going to give a trace back you might want to have some error handling and things like this for that i'm going to leave that to you as an exercise and the code down below is going to be a bit more robust it's going to have that aror checking but here i just want to show you the idea of the project very very simple project with like 19 lines of code we have been able to code something pretty interesting if i say so myself with that let's move on to the next one so our next project is going to be a fake twitter influencer now let's say you want to become an influencer just like me but you don't have the skills to make these fabulous youtube videos don't worry because we can actually help python make you an influencer automatically pretty much this won't happen on youtube sadly but we can make this happen on twitter or x whatever it's called these days the way this is going to work is that we're going to have a code file with a list of programming jokes and then we're going to use the twitter api to automatically in a certain interval whatever you define post these programming jokes on twitter on a separate twitter account that you have created now of course this is just an example you could make any kind of twitter pot using the same code and i of course encourage you to figure out your own automated twitter influencer that you want to make because otherwise we'll just have a bunch of coding humor influences out there the way this is going to happen is in a couple of steps what you're going to have to go to is developer. twitter.com you're going to access the twitter api developer portal essentially you're going to have to create a twitter account log in unless you have one already and then there's going to be a button where you're going to essentially request access to the twitter api i believe you need to give some reason as to why you need access to something like that shouldn't be difficult to get approved or anything like that once you do that you're going to have this dashboard over here and there's going to be a button here for you to create a new project that is going to be the project for your twitter bot and inside of it you're going to create something called an app where you're going to have to give it a name fill out some details and as soon as it gets approved you're going to have this window right here where you have your twitter api project and inside of here you're going to be able to click on keys and tokens this going to give you access to to your api key and secret that you're going to need to access the twitter api basically the reason you're using this is that you have these keys that twitter has given to you to essentially authenticate yourself and tell elon that you are one of the good boys and you're not trying to like hack twitter or something like that now the way the code is going to work as follows you're going to have these two lines of code in here where you're going to copy your api key and your api secret i've just hidden them from you here so that you can't see mine and then at the top here you're going to import these couple of of libraries time os json and then from requestor o or lib you're going to import o or one session then what we're going to have is a python list of programming jokes now i simply got this list from jbt because i am boring and i have zero programming jokes inside of my brain but you're free to come up with your own we're going to have these lines of code in here which are not very interesting so we're not going to actually go over these basically what all of this code here does is takes care of the process of you authenticating yourself using these api keys that you got before with the twitter api now i simply got this code from jbt even i don't fully know every single step in here you're not supposed to really really you would get this from ai anyway so i don't think there's point in us going over this you can just get this code so basically from line 25 to 72 from the code file that i have listed down below in the description but just to give you an overview what happens here we have this request url which we have found from the twitter api documentation which we can find at developer. twitter.com slen do/ twitter- api all of this is going to be linked down below in description just in case you're wondering where i found all these urls and then using that we're going to create something on an o1 session using the o1 library that we imported above with the key and the client secret and things like this then we're going to get a response from that url and from that response we're going to save a couple of details print some print some stuff then we're going to have this authorization url we're going to do some verification and then eventually we're going to get what's called an access token and we're going to save these inside of this file called twitter tokens. json and the reason we do that is so that every time we run this bot in the future we won't have to go through this authorization flow every time and just to show you how this works when i run this for the first time what is going to happen is this you're going to get this authorization url which you're going to want to open inside of your browser and then what is going to happen is you're going to need to log in to the specific twitter account that you want to associate with this bot maybe it's your actual twitter account but in my case it's a different twitter account so what i'm going to want to do is sign out of my actual twitter account and log in to my other twitter account after you do that you're going to get this pin right here which you're going to copy and you're going to paste over here where it says paste the pin here that is going to associate that twitter account with this particular twitter bot now what we're doing here is creating this file called twitter tokens. json that it's going to simply save some of these access tokens as a file so that next time what's going to run is these lines right here where it's going to check if this file essentially exists and then it's going to open that file and get these tokens from there and set these access tokens as variables without needing to run through this authorization flow then what we can do is get to the more interesting part of this code what is going to happen is that we have this function runor bot where we have an infinite loop where we run this post joke function with this jokes wrist as a parameter and after we do that we sleep for 6 hours in this case so you could sleep for any amount of time that you want to essentially make sure that there is a certain interval at which these tweets are posted and it is in this post joke function that most of the magic happens first of all we are going to get access to something called an index that's just going to tell us what is the number inside of the jokes array that we wanted to access next so what we're going to do is open this last joke index file and if it doesn't exist then it's just going to return minus one but this file is going to keep track of what is the index within this list right here of the joke that we want to post next and then from that we get the next index by going last index plus one and we get the remainder when dividing it with the length of the jokes list so basically as long as it's smaller than the length of the jokes list then it's going to be the actual index within the list if it is more than that then it's going to essentially start over from the start of the list with that we're going to get the joke that we want to post next from the jokes list index by the next index we're going to have this oo session that we're going to need because us that we're going to go o. poost into this particular twitter api endpoint with api. twitter.com sl2 sl tweet and when we send to it a post request with a payload that is an object with the key text and the value joke that is going to post this text within this joke on twitter and then we just have them checks based on the status code to make sure everything went correctly and then we're going to save this index of the joke that we just posted using this save index function where we open this last joke index txt file and we write to it the next index now you can pause this video at any point if you want to code this along with me or you can go and get the code down below in the description and modify it to your purposes the core here is not the particular code that i have written here which is why we didn't go through it line by line but rather being able to use an api like the twitter api to create something interesting that you actually want to create yourself again all the links to the twitter api documentation everything like that is going to be linked down below in the description with that let's move on to the next automation project all right on to the third and last project of this video now one of my favorite use cases for programming in general is to play around with my personal finances what i like to do is keep track of all of my personal finances i'm a bit of a nerd when it comes to all of this but doing all of this manually is the most boring thing you'll ever in your life luckily with python programming skills and just a bit of basic code you can achieve some incredible automations when it comes to finances now i've done other videos on other specific use cases for financial automation before and i keep sort of improving these scripts that i make for myself over time so in this one i'm just going to show you a very simple one that's already going to achieve a lot so our goal here is to create a script that is going to essentially give you this kind of file right here monthly expenses where for any given month you're just going to have a number with all of the spending that you did in that given month now this is just a simple one you might imagine making this as complex as you want you might imagine having a separate item in this json file for income and then one for expenses and you might imagine having all your spending categorized based on like where you're spending it your top sort of merchants where you're spending money so you can really start seeing where your money is going but for the purpos of this video we're just going to create something simple and then you can take this project and expand it in any way that you want so what we're going to get started with is as follows we have a file here called finance tracker dopy and we're going to start off by importing a few things we're going to import csv this is going to be very very important we're going to import json and we're going to import os and of course i'm going to have those on different lines do not be an idiot way this is going to work is that you're going to have to go into your bank and get access to a monthly state statement of all your bank transactions in csv format for example i've got myself one of my transaction reports right here basically for my specific bank the file is going to look like this where you have the date details amount currency whether it's debit or credit and you have the status now at the specific function to essentially extract all the information that you want from this file is going to look like is going to depend on what your specific csv file looks like now these are all different unfortunately for all different banks in all different countries so for me i'm just going to copy paste this in here because for you you would have to cod it up manually from start anyway so you can use this as a starting point but for me essentially what happens here is that we are opening a csv file that we're going to give it to this as a csv file pa and we'll do that later on in this project and we're going to have access to this file as the csv file then using the csv library we're going to go csv do reader with the cs csv file to get access to this reader object that is going to give us access to a bunch of different functionality for this csv file and then because i can see that from my csv file the first three lines up here are actually not something that i want i'm going to have to skip through three lines so i'm going to go next which is simply a function that allows us to skip through a line in our csv file and i have the reader as the object over here and then after i've done that i'm going to loop through all the rows in this reader and then i'm going to check if the row corresponds to the given month and year and if it is a debit transaction to debit transaction essentially means that it's a debit transaction rather than a credit transaction where a credit transaction is money coming in i'm only interested in transactions with money going out so i'm going to get access to these different items from this line by simply creating these different variables from this row and then i'm going to get the amount by going amount do replace where i'm replacing a comma with an empty line because you might be able to see here is that let's say in this transaction where it's 19,000 comma 604 i don't want the comma i simply want the number so i'm going to replace the comma with an empty line after that i'm going to check if the transaction type is debit and only in that case i'm going to add to this total expenses variable that i'm creating up here the amount that i am costing in the float and then i'm at the end going to return total expenses so what this essentially does is it grabs this transaction csv file and then extra racts from it all of the debit transaction and adds it to one variable that i'm going to simply return out of this function that is the purpose of this function now moving on let's look at what the main program is going to look like so when you run this program what you're going to need to give this python program is a couple of details first we're going to have the month input which we're going to grab from the user using input and we're just going to ask please enter the month and we're going to give the format format will be year yeah yeah- monon month like this and so we're going to get that from the user then we're going to get cs vore file uncore name which we're simply going to make this transactions. csv file which is what we have named it then we're going to get the json file name which is going to be the output file that we're actually interested in creating we're going to set that to be monthly _ x expenses. json monthly like that and then what we're going to do is get total uncore monore x expenses it's going to be equal to sum expenses whoop sum expenses for month and we give the csv file as a parameter just like up here as this function expects then we're simply going to print these total expenses using a python x f string total expens says 4 with the month input r and we're just plugging in total month expenses which is the output the return value from this function right here now all we have to do is update this json file with the result of the sum expenses for month return value and for that we're going to create one more function that is going to be called update uncore expand saycore json and what this is going to expect is a json file path it's going to expect a month and it's going to expect total uncore expenses what we're going to do is create an empty object called expenses uncore data is going to be equal to an empty object then we're going to check if os door path do exist which is simply checking if the path to this file that we're giving it which is the json file path exists in that case we open that file using with open which is a function in python that we use to open files and access them we open json power path as json _ file and that we add expand this data we set that equal to json. load json file after that we update this expenses data for the month that we gave to this function with the total exp expenses and notice if this file doesn't exist we're simply going to have an empty expenses data object and then with again open json file path in read mode or actually in this case i guess write mode of course as json file we're now going to write into this file the new data which we're going to do by going json. dump which is simply the json function to do this with expenses data the json file and indent of four to just make it a bit nicer to read and now with this function at the end of everything we're going to run update expenses data with the json file name the month input and the total month expenses as variables and that should take care of everything now let's see if this works properly let's run this file we're going to do in input end of the month so we're just going to input let's say april actually well of course uh that's not the format it's 2020 4-04 like that total expenses for that month were apparently this much and when you go to this jon file you will see that it has updated now of course in this case i use the same file for both of them so that's why it's the same but what you would do is every month you would get your csv and upload it to this folder and simply probably you would want to actually in this code also ask for maybe a specific format of the name for the csv file and then you could just give it dynamically but i will leave all of that to you as an exercise to make this a bit better just the basic idea is here is that just with this python script you can have information about your spending in one place so you can keep track of your finances a lot more easily without having to go and look at like add up some transactions or some google sheets or something manually with that said i hope you enjoyed at least one of these projects i hope this gave you some ideas for you can automate your life and create interesting things simply using your python skills while again and improving your python skills at the same time like i said before if any of this sounds overwhelming to you and you don't quite have the python skills to code up things like this yourself i do have my paid program python developer boot camp down below in the description that goes through everything that literally gives you all the skills that you would need as a professional python developer in one place and that is coming from someone that has done it it has more than 400 students you guys loved it and you can get a discount earning by using the code python down below don't know how long that code is going to be up for so make sure to use it soon if you're looking for more ideas i actually have this video right here that's the second most popular in this channel's history where i go through three more python automation projects that you might find interesting so after you have coded these up and if you're looking for more projects you can go watch that video next i hope you enjoy this video i'll will see you in the next one