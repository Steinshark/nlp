i'm gonna put the volume where i think c has the basic mechanisms for expressing computations it has iterations it has data types it has functions and that's it it and you will like it okay okay that is that is that's all you'll ever need in your lifetime is data types functions and loops okay anyone that tell you you need more they're lying to you okay they're lying to you c is a perfect language and i'm not gonna lie to you i i feel like bjarn over here is trying to sell me on some c plus plus okay and so he's telling me why my why my car's extended warranty actually needs to be renewed but i don't know if i want it renewed right now okay yarn doesn't get into the game of expressing abstractions so if i want a matrix in c i'll have to say i want an array and then i want a whole bunch of arrays and then when i want to get the third element i have to program my way down to the third element of the first row or something yeah in c plus plus you can define something called a matrix you define a subscript operator um if you don't want rectangular matrixes you can get pen diagonal matrices classic pen diagonal matrix i mean i was just talking honestly to my wife about pen diagonal matrixes you know we both agrees because he could barely even do that um so these are one of those things where it's like it's both why i like a language that's more abstract and why i dislike a language that's more abstract completely do you know what i mean like can we all agree that there is something very very awesome about the fact that you can override the subscript the subscript operator you know what i mean you also have to then consider the fact that you can override the subscript operator like you have to you you kind of have both which i'm not quite sure if if it's good to have it or not i find myself whenever i like it i'm like oh this is great and then we do it and then i go oh i actually hate this no i actually do i actually hate this very very much giving people the freedom is stupid i don't know see that's the problem is like i like the expressionists that you can have but at the exact same time i find that once you go a little too much it ends up just sucking right it just ends up being the worst thing possible i don't know i can never figure it out i can never figure out the problem here it's like do i want a language that is great or do i want a language that is not great you know what i mean well gosh i just deleted chat chat you just got deleted triangular matrices that's the kind of stuff that people the expert in that field are interested in and you you built that set of concepts and then you program it directly it's easier to program it's easier to debug and sometimes it's even easier to optimize for performance when you're expressing the notions at the higher level at the level where an expert in the field operates rather than trying to have the expert in the field say the physicist also be an expert in dealing with the hardware with a computer there's field still okay so that's why we invented javascript okay i think i think i understand now i think i understand why we got javascript we obviously cannot expect everyone to be an expert so we gotta invent a language in which everybody's very very easily happy with it and so we invented python or javascript depending on which side you want to be on but then we also reinvented rust which rust is kind of like you don't need to be an expert with hardware but we want you to be an expert in a completely different area that isn't necessarily translatable to any other language but you're gonna be your own expert right here you're an expert in this one single thing don't be an expert you have to have a physicist and a computer scientist get the work done but we would like to minimize those because the the skill sets are not the same so you want fare from the hardware to watch the human level what do you guys think is c obsolete i want to see a poll let's see a pull let's see a pull i want to do this manage pull manage my pull here we go new pull is c obsolete obsolete question mark yes no start pull let's go uh as a general purpose language it is obsolete but uh but not irrelevant you think so i have never been alive without the existence of smartphones you're definitely such a zoomer look at this man be just you are a zoo he's the man zooming the man is zooming damn you know what i i actually feel bad for people who've only been born with the world of smartphones like you never got you never got that experience dude you never got that experience where you had to start playing a game with somebody by first calling them on your land phone and be like all right i'm gonna connect to you are you i'm gonna connect are you ready okay we're gonna play battle you know we're gonna before battle dad we're gonna play world of warcraft or warcraft 2 i'm called i'm calling tcp connection i'm calling then we do it we hang it down you do whatever the the settings are and you try to like contact them and then half the time it doesn't work and then you have to like disconnect reopen up your phone be like dude did it work was i calling what's your ip man hey man what's your ip the other person's like i don't know how do i find it on americanononline.net dude it was so much fun it was so fun back then dude it was so good it was so good tell me it was not good and your mom picks up the phone ruins the game the whole game is ruined our punch cards obsolete i mean i wouldn't be surprised uh i'm sure they're i'm sure i'm positive they're they're absolutely obsolete there's things like cobalt which stuck around for a long time but there absolutely is your name from talk to absolutely but they're definitely not from uh like punch cards definitely got obsoleted pretty pretty fast we're zoomer bruh i know you little zoomers you don't even know all right let's see chad thinks it is not this is this is somewhat controversial i think it is obsolete i think the languages should have been merged into one so that c would have been a subset of c plus plus instead of nearly a subset of c plus plus and then i thought c was a subset of c plus plus what isn't a subset does anyone know what thing can you do and see that you can't do in c plus plus no i'm not 34 i'm 37. i'm 37 next week his hair is obsolete got him hmm people could have used whatever parts of the c plus tool set they needed as it is now there's still enough incompatibilities that you have to remember which language you're you're riding in and i don't think that is necessary i write some c plus plus for netflix and i usually just write my c plus plus a c i've i've never thought about what language i'm in i just i didn't even realize that it appears to be historical necessity but it's not a technical necessity i've argued for compatibility very strong compatibility all the time i mean i i started working on c plus plus three doors down from dennis ritchie and we were talking every day it's the the the competition and tension that has been between cnc plus plus over the decades uh certain didn't come from home um well i don't know you know i like c i mean granted there's things i like about c plus plus that i think just makes life a little bit easier obviously just basic generic templating for for container types is is great right we watched that video just like two days ago where someone built a series of macros to be able the generic template out container types which just feels which just feels crazy right but at the same time like i really like i like that can we all agree that that part is good i don't know i always wonder because there's this whole thing i've been kind of thinking about which is simpler is better but is it always better or is it only better some of the times i've never been in the scenario where i wanted to do something and see that i needed c plus plus four i hate the overhead and the pain in the ass syntax yeah i mean there's a lot of there's a lot of things like see the rules exist the undefined better or the undefined better i read the word better the undefined behavior does exist but it's so simple that for the most part it feels easier but it also can be a little bit uh a little a little ass painting sometimes you know what i mean i hate c for the lack of ray it's so annoying not to have it yeah i get that that's why i i really do think zig i really think zig has a really strong potential to do something great you know just use ocam i think ocam was great uh get in the van loser undefined behavior again the van loser i think zig has a really big potential to do an awesome thing you know what i mean and so that's why i really like that and i'd like to continue thinking more about zig regularly because i really think that it has it has the power to do all the things c does just without the inconveniences of c you know what i mean i like it i like it no denise richie wrote that first book with brian cunningham i'll have i have dinner with brian next week we're still very good friends as we've always been but sometimes the programmers of the languages don't quite see it that way um this showed up in one language you see that little bit of pain in his eye at the very end when he was like it should have been one language i wonder i feel like i i again i i really think c or zig is the is the true spiritual successor to see it feels right c plus plus 23 do you mean uh rust no c plus plus 23 will come out in 2030. i don't know v like the problem about vlang is that it has a it has like a really bad reputation that it still needs to get over i still remember doing doing some v-ling you know i was doing some v-ling hard hard lines of e-ling and i got into it and i started using and everyone was telling me that it's incredible and it's absolutely the language of the future and it felt really good like i liked the feel of v-laying but right into it i couldn't even make a linked list the generics were so broken and so it's like what do i do with that vlang 4.0 was just or a 0.4 yeah sounds like rust i know it was like rust except for you just couldn't do a linked list at all uh