[music] math is hard and it's something that can be very scary to a lot of people what are you looking at but it's also true that math is very useful in a lot of fields the question of do you need math for programming is actually a particularly interesting one and i know that you're here for just a simple yes and no answer so let me just give it to you the answer of whether you need math programming is yes actually no actually kind of yes but i mean really no but also yes and but also no let me explain on one hand it's true that for ninety percent of a programmer's job you probably aren't going to be using all that much complicated math beyond like basic arithmetic but on the other hand many people rightly point out that programming is simply a subset of computer science which in turn is a subset of math so how could it possibly be that math wouldn't be useful for programming i understand both arguments so in this video i'm going to do my best to reconcile them and my conclusion will be that while in most applications of programming you're probably not going to be using all that much complicated math you should probably still learn it and what's more important than that conclusion is how i get there and that's what i'm gonna try to explain in this video and at the end i also give you my recommendation for the best free resource to learn all the math you'll ever need for computer science so definitely stick around till the end for that so the real answer of whether you need math for programming is it depends which i know i know is the most boring the most annoying the most frustrating answer ever so let me just explain that the question of whether you need math for programming doesn't really make sense without some context it all depends on what you want to create which area of programming you're getting into what your future goals are all these kind of things sure if all you want to do is make a simple website using html css and javascript then sure you're not going to need to know how to multiply matrices together or how to find a topological sort of a finite directed acyclic graph so if that's all you want to do then there you go you're probably not going to need any math thanks for watching so here's why you should still learn the math if all you know how to do are those simple tasks then you really aren't providing that much value because if something is easy to learn then there's going gonna be an abundance of people who know how to do it so in general you should try to become the best programmer with the most amount of knowledge that you can possibly get and that's where the math really comes in it's very easy to make the argument that most people who get started in programming start in web development and your web home and you don't really need that much math so therefore you just don't need to learn it but i think that's the misguided style of thinking and if you take this attitude it can lead to problems down the line just in general i always think that you should err on the side of trying to know as much as possible knowledge because knowing more can never be harmful whereas not knowing something or not fully understanding the fundamentals of something can come back to bite you later on however if that general argument alone doesn't convince you here are four specific concrete reasons why you should absolutely learn the math required for computer science even if you don't want to become like a theoretical computer scientist or something like that first reason is that math exercises the right muscles and what i mean by that specifically is that i've heard many people in the industry say that math majors usually rank among the best encoding bootcamps and that kind of stuff and they generally make very good programmers in fact being good at math turns out to be an excellent predictor of how good you are going to be as a software engineer a programmer and crucially this is this is not because you would specifically be using that math in your job but rather because thinking about math problems and thinking about programming problems largely uses the same kinds of mental muscles or the same kind of reasoning studying mathematics can be likened to weight training or cross-training to improve your mental strength and stamina for programming it is absolutely essential that you practice your basic programming skills but studying mathematics is an incredible mental workout that improves your core analytic ability so you can think of an athlete who wants to do well in football for example doing squats at the gym is not directly what they need to be doing as a footballer but he exercises the right muscles to build their leg muscles which will then in turn be useful when they're playing football because it will allow them to run faster and that kind of stuff so in other words there's a strong correlation between understanding mathematics and being good at programming that is being able to think algorithmically reason number two is that you develop a more fundamental understanding of programming concepts even if 99 of the time you're not using that much math in programming there's still that one of cases where you really need it and where understanding it is going to make you a better program programming is essentially just a subset of math algorithms are just a set of instructions based on mathematical logic and data structures are similarly just founded on math too even with my limited experience i've already seen many cases where the fact that i studied math for computer science before going into studying programming and studying data structures more helped because i have a way more fundamental understanding of where all these concepts actually come from so i can actually understanding rather than just trying to memorize like okay you use an array here use a graph in this kind of situation i don't need to memorize anything because i can just understand why those things are it makes sense to me because i understand graph theory and these kinds of things already even topics that you wouldn't think that i use like understanding modular arithmetic has already been useful because i've already been finding many practical applications for the modular operator in a lot of programming languages so reason number three is if you want to be on the cutting edge so you remember my previous videos that software engineering is an extremely high demand industry but want to be in an industry that's even more in demand than software engineering you should look into artificial intelligence and machine learning these are subfields of computer science that draw on a lot of math a lot of probability and statistics and this is really made a cutting edge of the technology industry is happening in fact people often talk about a math gap with many software engineers who want to transfer into one of these fields and even if you don't want to go into these subfields it's still just a general good strategy to know all the fundamentals to understand the fundamental math behind computer science so then in the future if you do need to adapt if you do want to go into something else you can do it much easier when you already have that fundamental understanding the technology industry is by its nature evolving extremely fast you never know if in 10 years a lot of the basic programming stuff have been automated by ai algorithms for example so you never know if for your own job security you might have to transfer into one of these fields in the future and last but definitely not least you should learn math because it will actually help you pass coding interviews this sort of ties in the previous points but i wanted to add this in there because let's face it this is probably the point that's going to convince most people knowing math will help you pass interviews because it will help you understand those underlying concepts that a lot of tech interviews test for specifically data structures and algorithms i cannot believe how many people there are who are studying for coding interviews by just memorizing a bunch of lead code questions like if you have an interview tomorrow sure memorizing some record questions and then hoping you get lucky that those are the questions that you're then tested on it can't work but let's say you study like that for coding into you and then in two months you have another interview you'd have to do everything all over again and it's generally much harder to memorize stuff that you have no underlying understanding of than just spending your time up front to probably understand the theory and the fundamentals behind these concepts so by properly understanding and internalizing these concepts you can then just not have to worry about any interview really because you'll have the underlying understanding you can then apply to any problems after all the problems and record and in interviews they are based on data structures and algorithms and a lot of the computer science concepts having done the math beforehand just helped me so much in be able to visualize and really understand what's going on with a lot of these things all because i took the time to study the math so as a conclusion you shouldn't be deterred by the math math is hard but it's also the most beautiful and pure manifestation of logic and problem solving any valuable skill is gonna be hard to learn and math is definitely no exception people seem to have a bigger initial aversion to it than most other skills after all getting good at football for example is also very hard but because it's something that i don't know like looks easier and it's not like abstract in the same way of math is people aren't as scared of trying to be good at football so i challenge you to embrace the challenge with math you should become the type of person who wants to master these skills and who wants to master hard skills in general how cool would it be if you could be the person who understands math and who's really good at it when most people who aren't able to do that and you can do it if you just put in the work to learn it so i also challenge you to adopt a growth mindset which means if someone else can do it you can do it too if you just put in the work life can be much broader once you discover one simple fact and that is everything around you that you call life was made up by people that were no smarter than you so in terms of a specific resource to get started learning math computer science the one that i did was mit's free course called mathematics for computer science there's also a version of this course on youtube which just has a lot of video lectures but i do actually recommend you do the actual course from their website includes some problems in general in this day and age anything you want to learn related to coding computer science you can just do on the internet and that's essentially what i am doing i'm teaching myself a whole curriculum on computer science using free online materials and if you want to learn how i'm doing that if you want to do the same you should definitely check out this video next and i include a free notion template for you to follow along and study essentially a full computer science degree online without even going to any proper university so yeah definitely go watch this video next