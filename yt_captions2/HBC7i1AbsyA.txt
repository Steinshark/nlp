hey everyone welcome to my list of the top five id productivity hacks to help you save time when you're programming i'll be demoing these features in python using pycharm but it doesn't matter if you're using vs code or c++ all the most popular editors have features like these let's just dive into it with number five this one is very useful when you're working in a codebase that uses inheritance i'm talking about the ability to show me the type hierarchy so if i hit controll h in py charm this will bring up the hierarchy menu of course i can see the parents of the class but more useful we can see their parents and their parents and their parents and so on all the way up to object additionally right now my json formatter doesn't have any child classes but if i define one real quick then i can also get a quick glance of what all the child classes are if i'm looking for inspiration on how to override a particular method from a parent i can click on the parent and reroot the type hierarchy from there now i can see all the sibling classes at least the ones that my id knows about that i can use for inspiration hack number four code folding and in particular being able to automatically fold documentation so here i am trying to read the source code of the logging formatter or class now this is a standard library class so it's extremely well documented but i'm not so much interested in the documentation and examples at this point i really just want to look at the implementation i want to look at the code and that's kind of hard to do when 50% of my screen is tak taken up by documentation so here's what we can do right click go to folding and then go to collapse doc comments this basically hides from view all of the doc strings in the file so that when i'm scrolling through i no longer see tons and tons of documentation you can also fold away other parts of the code if they're just not what you want to look at right now so if i didn't want to see this styles mapping i just use the keyboard shortcut contrl minus and it's gone your ide understands the syntax of the language so you you can do things like fold away inside an if block or you can fold away an entire function or even an entire class if something is getting in your way and becoming a distraction making it harder to read the code that you actually want to read then just fold it away and that brings us to hack number three automatically introducing variables constants parameters and functions let's say i'm working on this function i'm working on this function i'm working on this function and i take a step back and i realize hey there's a little bit of repetition here i'm using this value data of start plus count minus one in three separate places maybe i should make that into a variable instead of tediously cutting that out and then creating a new value for that variable and then replacing that value and then finding all the places where i used that and replacing that and so on and so forth instead i can do it all at once highlight the expression that you want to replace and then in py charm it's control alt v you could choose to replace this occurrence only but py charm has noticed that i've actually used the expression three separate times so i'm going to choose to replace all three occurrences it automatically pulls out all the usages and i just have to choose a name for the new value or maybe i didn't want to replace that entire expression maybe i just wanted to replace this inner part that's repeated start plus count minus one well that's the end so i can even highlight a sub expression and do the same thing replace all three occur call that variable end i'd say this shortcut typically saves me about 30 seconds of copy pasting each time i use it instead of introducing a variable slight variations of this include introducing a parameter where i can now let my caller provide that value or you can introduce a constant like the speed of light what this does is essentially the same thing but it puts it up at the top of the file then the ultimate version of this feature is pulling out entire functions this is extremely useful for breaking down code into more readable components and just making it more readable in general here the process events function does a for loop where it does the same thing for each event let's take that block of code and give it a nice name control alt m to extract a method or in this case a function give it a good name like process event singular it automat autc al picks up on what values it needs from the caller in the form of parameters and any output variables hit okay and it creates the function automatically now here we have an if condition that's doing some calculation in line how about instead we give that calculation a name by extracting functions this way we can very quickly break down a complicated function into much simpler pieces moving on let's open this testing starter project that i made a while ago in order to demonstrate my top two productivity hacks i want to use this project as an example because it's not just a single file it's an entire project so let's get on with it what's my number two feature renaming things it's such a simple yet common task when you first write some code you often don't know what the best name for a variable class or function is looking back you might have a better name but do you really want to put in all the effort to change it in all the places that it's been used let your ide do it for you oh this dictionary wasn't meant to be part of the public api it's an implementation detail i want to put an underscore in front shift f6 underscore done shift f6 underscore done when i scroll down i can see that py charm changed all the usages of those variables i don't need to worry about doing a very error prone find and replace my ide understands the language so it only changes things in the right place and it's not even limited to a single file this enum was meant to represent the state of the like button on youtube it's either empty or you've clicked like or dislike so instead of like state let's make it a youtube like state of course it changes the class name it changes all the usages in the file including type annotations and return annotations but if we look over here it also changed other files i'd written tests for this package and if we go to our tests then we see that the tests have also been updated it even updated all of my import statements to use the new name that just saved me a lot of time what might have taken me 30 minutes to go through every file and meticulously update the class name i can now do multiple times in a minute so at this point you've got to be wondering what could save me more time than that how about closing my ide and getting some sleep productivity hack number number one automatic moving as you write more and more code files tend to get bigger and bigger and bigger at some point you might like to break things up in order to stay organized or you might want to move something from one file to another now that you have a better idea of where it should live but sadly this often just doesn't happen because of the sheer amount of work that it takes to move something around i've got to create a new file copy over all the relevant imports and update them to match the new location copy the definition then find all the usages across all files in the project and it's done it created the new file determined everything that needed to be imported copied the definition over then in the old file and all the other files including tests it updated the import to use the new location if this project had hundreds of files this just turned what could have been an all day task into something that was done instantly if you've ever felt paralyzed starting a larger project because you feel like you need to decide on the perfect project structure and organization before you get started in order to avoid massive tech debt down the line let this show you you don't need to worry about it just start building the tools can help you get organized later bonus runner-ups and giveaway time if you'd like a chance to win a professional license to pie charm the ide i'm using or any other jet brains ide make a comment including #m coding below for the runner-ups it's not that they're any less useful it's just that you probably already know most of them so it wouldn't make that good of a video don't know what something is and want to read about it contrl b go to definition it shows you where this thing is defined want to find examples of how this thing is used alt f7 find usages there's a list of every place in the project that you've used that thing in the middle of calling a function and can't remember what all the parameters are contrl p to show parameter info is your code harder to read because of inconsistent formatting contrl alt l to automatically format it and are your imports a mess or do they include things that are not actually used in your code control alt o to organize and optimize them and that's all thank you for watching and thank you to my patrons and donors for supporting the channel if you like these videos and you want to support the channel please consider becoming a patron on patreon my name is james murphy and my company does software consulting check us out at m coding. see you in the next one