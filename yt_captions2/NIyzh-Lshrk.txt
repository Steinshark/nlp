i'm gonna keep it real there are too many programming languages yep i said it there are too many but in this video we're talking about what languages you should learn and in what order and how that you can learn to program as fast as possible as the world becomes increasingly more technological every job posting that i see requires or prefers some amount of programming knowledge to be useful in that job if you're a new programmer it's obvious that getting into this field is increasingly more frustrating there are more resources available there's also more information that can clutter your brain and kind of make you confused as to where you should start and for a new programmer it may feel like there are just too many new languages to choose from between go rust python c plus plus carbon to name a few it's hard to decide on a language to learn to figure out how to program in the first place in this video we're going to choose two languages and one method to get after programming in the most efficient way that we can step one if you want to learn to program the first thing you should do is learn how computers work and the best language to do that is through using c and i know you may be thinking oh low level learning d is dead no one's codes in c anymore i don't wanna hear it first of all but second of all coding in c is the best way to learn how the underlying structure of your computer works that'll make you a more efficient programmer in the long run as you understand how memory works at a low level how the registers work at a low level how your processor is even put together or how it does the magical thing that it does don't forget guys we literally took rocks and shot lightning into them and said hey look now it thinks oops that we have to figure out what that does before we can control it b is a language that scares a lot of people and there's good reason for that it's really hard to do anything in c without making your program crash but that has beauty that comes with it too in c there's no guesswork you know exactly what your program is going to do and that'll give us a good understanding of under the hood how every program works regardless of if it's java c python or rust we will know exactly what is happening beneath the hood use c to learn how computers work write some programs crash some programs see what you can and can't do because programming languages like c give you absolute control over your computer and then also you can learn how the operating system works you can learn how the linux kernel works how the windows kernel works exposing yourself to those apis those system call interfaces that the kernel exposes allows you to learn how computers work at an extremely low level so step one learn how computers work using c now that you've learned how computers work now you need to actually learn how to program and what do i mean by that typically if you think of a computer science class you're going to learn how to do different data structures different sorting algorithms and different things of that sort that will make you a computer scientist what i don't want you to do is learn how to do those things in c the person who is new to c will try to implement a binary tree in c and will probably spend most of the time learning how to not make their c program crash not how to dereference a null pointer instead of learning how a binary tree actually functions once you've learned through c how computers work use an interpreted language and in this video i will suggest use python to learn how to actually program if you don't know what python is python is a scripted interpreted language that is interpreted via the python interpreter the syntax of python reads like english and you can then use python to learn how to actually do the underlying tasks that a programmer is required to do python is extremely user-friendly once you learn the syntax using the language to do simple things is a walk in the park python is also great because of all the library support that they have if you want to do networking there's a library for that if you want to do threading there's a library for that if you want to print texas as an ascii plot there's a library for that finally if you want to learn to program you need to understand this one thing when learning the program you need to be okay with making mistakes if you're completely new to programming you're going to mess up it's gonna happen guaranteed but that's okay as long as you fail forward failing forward is the idea of taking mistakes that you've made in the past learning from them and moving on i call them micro experiments try a new thing see how it goes take that experience and learn from it and now you've grown as a person when you want to go learn c try to use pointers program crashes why did it crash okay take that now you're a better programmer from failing that's awesome in my opinion the worst thing you could do is give up because you're bad you're gonna be bad you're gonna make mistakes and that's completely okay as long as you acknowledge that your mistakes are short-lived and you can take those mistakes and move on i think you're gonna be all right anyway guys that's all i have for you today you should go watch this video here on pointers or go watch this video here on how starlink got hacked they're both pretty cool see you guys next time