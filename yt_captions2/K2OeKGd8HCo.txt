as part of my efforts to self-teach computer science i recently started teaching myself linear algebra which is highly used in ai and machine learning which is a branch of computer science which i really want to get into i was extremely excited to start learning linear algebra but somehow i just couldn't get myself motivated sometimes when i'm learning new things i just can't get myself to do it i don't know why i'm not as excited about this as i initially was so i started pondering and wondering what really is it that there really there must be something else going on apart from just wanting the end result and just wanting to learn so i started researching and thinking about the things that i've done in the past learning other parts of computer science where i had actually been really motivated to learn throughout the whole thing so throughout my research and my thinking i came upon a realization that a lot of the times when i'm learning something new i'm sort of doing it in a completely wrong order which led me to a whole new study method and a whole new approach to learning new concepts that i'm now going to start applying to everything i'm learning in my life so first we're going to talk about why i wasn't able to learn linear algebra and what i figured out that i was doing wrong and then we're going to talk about a couple of examples where i've sort of by accident being approaching it the right way and why that actually helped me master these new concepts much more efficiently and then we will bring these two together to talk about exactly what this means for you and how you can use these methods to probably learn things much much faster and be much more motivated than you've been in the past so when i started learning and getting into linear algebra sort of the way i was approaching it is how most people approach learning new things which is with the perspective of finding the broadest resource and learning all the different things about this topic as sort of deeply as possible to give you the best foundation to master in this new concept on surface sounds really reasonable right so i started watching these videos learning all these things about what vectors are what matrices relate to them and how they're like linear transformations of space like for example matrix multiplication like once you learn how to do it it's like it's pretty cool of transforming space and all that but it's just like why and this is the same thing that's happened to me time and time again in my life when i've been learning new skills for example when i was learning a new language and while i really actually really really wanted to learn russian i really wanted to be able to speak whenever we were in class the things that we were learning like these word lists and like these grammatical topics and stuff just i just couldn't get excited enough about it to actually master these things and i feel like a really important thing in learning is to actually be excited about the process to actually want to learn the things that you're learning you can get to a certain point without being super excited but if you really really want to master something you really really want to become good at something it's super important to actually enjoy the process so there was clearly something wrong with this process that i was approaching linear algebra or learning russian school or many other topics that i've learned throughout my life that weren't allowing me to be excited enough about this process to actually master it so i thought to myself that there has to be something that can be done about this there has to be a different approach essentially so this approach that i've been describing to you is what's called bottom-up learning what bottom-up learning means that you start with the constituent parts of the system that you're trying to learn in this case i guess linear algebra but more broadly the reason why i want to learn linear algebra is so that i can learn machine learning and artificial intelligence what most people would prescribe as a great way to learn artificial intelligence is first you need to learn this math you need to learn linear algebra then you need to know calculus and all these other branches of math that you need to know how all of these work in a theoretical basis and then once you have all of these pieces together you understand all this theory and all these details behind what machine learning and ai actually is then you can apply all of this knowledge and actually make something use it create something practical all of these probably how you've learned most things that you learn in your life you always start from the theory and it seems so incredibly intuitive but it turns out that according to neuroscience this is not necessarily the best way instead of this bottom-up approach what i want to propose is to completely flip your approach and instead think about what is called top-down learning and to understand this i'm going to give you another example but i was starting to learn graph theory a really important part of computer science and software engineering i just couldn't really wrap my head around what is the purpose of all of this is cool but why are we doing it until i started coming upon the actual practical applications of graph theory namely i started learning about google's page rank algorithm which is essentially the algorithm based on which the google search algorithm works they use this really complex page rank algorithm where essentially web pages are ranked according to how many other pages linked to it so essentially how many other nodes in a graph link to that node which is the web page and that is how pages are actually ranked on google and this is a really great and a really practical application of graph theory and when i started learning these practical applications finally when all these theoretical things that i've been learning before sort of started clicking and i started understanding okay i actually see why this is useful another example is how like google maps work all of these graph algorithms and these graph theory concepts that you would learn in the textbook are actually applied in there but it's not until i started learning about these practical applications that i actually started understanding why we have been learning these theoretical concepts and that was the key to actually get me excited about graph theory so if i would start over if i would start again i'm learning graph theory from scratch what i would do instead of going into a textbook to learn about the theoretical concepts is just going directly into trying to understand these practical applications because that would then make me understand why we would even want to learn it and then i would go and learn about the theory and it would actually make sense to me why we're even learning this theory in the first place and these were the top approach is really all about is starting from the practical sort of learning the bare minimum of the theory just so that you can understand the practical applications that you're trying to either build or just understand and then later on you go in to learn the underlying theory behind it because then you have an understanding of the context it makes sense to you why you're even learning that theoretical concept i hope this is making sense to you by the way if you're finding this interesting so far definitely hit the like button down below my big belief is that the biggest reason why people fail to learn coding and computer science is not that they don't have the right resources so that they don't have the right courses if they don't have the right strategies the right mindsets and the right study methods to actually stick to learning and actually learning to code efficiently i believe i know how to do all these things because i'm really interested in like the human brain and how it works and all of that so that's why on this channel i mainly focus on giving you my strategies tools and methods for learning to code efficiently so if you're new here and this sounds like something that you might want to learn definitely consider subscribing but now back to the story so i figured out that perhaps the best way to approach learning is actually to ignore the theory ignore all of it in the beginning completely and instead just dive right into trying to understand practical applications and in the topic of coding as well when i started learning the code i actually took this coursera course on like the programming languages or like a theory of programming languages differences between different programming languages and it never really clicked because i never really understood why i'm learning about all these things none of these things were intuitive to me i didn't understand why they were important so that felt like a very useless course to me until much later and i had already been coding for a very long time i had coded a bunch of different programs on my own and i understood the sort of problems and the sort of dilemmas that would come to me time and time again when i was doing my own project that is actually when i understood okay this is actually the thing that they were talking about in that theoretical goal so this actually making maybe actually makes sense to think about this and to figure out how to fix these things yeah it actually makes sense to actually think about how i am designing my code and how am i packaging it but the key here was that i first needed to understand through practice why these things are important before i could even appreciate the theory behind their solutions and the famous algorithms and all of that that people always talk about so i looked into a lot of the science on this and i don't think it's completely conclusive yet but i would bet like at least for me maybe you're different but at least for me top-down approach of going practical first theory second seems to be much much superior the way we're right is that if there's a lion right there i should probably know how to run so that i don't get eaten by the lion and die so essentially our brains want to learn things and to expand resources and neurons on learning things that are actually useful for it that useful for our survival that's going to help us in our lives you're learning something theoretical where you can't see the connection to reality it's difficult for your brain to understand why you're trying to expand these neurons to like learn these things so it's sort of gonna resist it as i said on this channel i talk about the strategies tools and methods teach you how to code the most efficiently and how you can sort of hack your brain to learn things much faster than most other people if that excites you i would highly recommend you that you watch this video where i talk about one of the other big hacks that i've discovered to learn to code much faster than most people and in general if you want to see a lot of videos like this leave a like and subscribe and i'll see you next time