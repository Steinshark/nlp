a vulnerability in rust has been discovered one that specifically affects windows and there's a lot of hype around it right now in theory by exploiting this bug you can exploit rust and get access to a windows computer now in this video we're going to talk about how this exploit works and why right now i think it's a little over height also if you're new here hi my name is ol learning i make videos about programming security so if you like to learn more about that stuff or you want to just hang out with me hit that sub button really appreciate it also like the video now this vulnerability in windows is related to what is called command injection any kind of injection attack is when user input to something like a sql query or a system command operation is not properly sanitized so it allows the user to do something that it's not normally able to do maybe you're new to the world of security so let's talk about what a command injection actually is or the practical example in a language like c one that's really easy to understand so in this program all we're doing is we're taking input from the user we're asking them hey man what's your name we reading the name from the user to a buffer and then we sn print f meaning we put that buffer inside another buffer to a command that says echo hey there name of the person right we're just replying to them by using the command line utility echo instead of print app or something like that it's very common for a lot of applications to go to the command line and parse user input that way if they need to invoke like a very complicated operation they don't want to write by themselves right like if you need to tar up a file that you have in your program you have two options you can use the library to actually do the compression or you can depend on tar as it's already written on your computer and just do it vi via system the issue with this is if you don't properly sanitize the input from your user so here we don't do any input sanitization and we just put that right into the echo hay there buffer and then put that into the command buff and then run that in system because of this i can put arbitrary commands into this buffer and then get what is called a command injection i'm injecting a bash command into the system buffer so i can show you how to exploit this we have our program here which your name triple l it says hey there triple l now what if i wanted to do evil stuff in this program right because i have the ability to do a command injection let me show you how that actually works instead of typing my name trip l i can type something like an escaped bash command using a command substitution so you do that like this and bash and i can just type ls for example right so via this program i'm able to put instead of the data that's expected i can put a malicious command that gets ran on the command line so hence i've injected a command and if i wanted to i can get really fancy i could do you know reboot which restart the system i'm not going to do that cuz i'm recording a video right now but you you you get the point and thus this cve critical rust flaw enable windows command injection attacks and that headline sounds very good very sensational and we'll get into why it's a little over the top in my opinion threat actors can exploit a security vulnerability in the rust standard library to target windows systems and command injection attacks track the cve 2024 25576 this flaw is due to os command and argument injection weaknesses that can let attackers execute unexpected and potentially malicious commands on the operating system and again that paragraph out of context very very dangerous like i read this and i was like dude no way what is happening with rust right now and then github one of the authorities that can assign cvss gave it a 10 out of 10 which is like for me when a cve has a 10 out of 10 cvss that is full remote unauthenticated remote code execution that is like no things are going down windows is getting hacked worms are spreading across the internet so i read this and i was like whoa what is happening unauthenticated attackers can exploit it remotely in low complexity attacks without user interaction i agree like that that's pretty bad so let's actually go into one of the proofs of concept that exploits this flaw okay so here is an example of a vulnerable piece of code that is able to be exploited via this command injection so for those of you that don't read rust i'll kind of walk through what's going on here you declare the function main pretty standard stuff we have the print line macro that just prints a string and we get an input string from the user so we flush out standard out and if it fails we print this string but we read in from standard in which is a command line into the input variable and this is a mutable reference to the input variable and if that fails we print this out we then run a command via the command library via the standard process library and in russ we're doing here is we're creating a new instance of the command structure we're saying we want to give it test.bat and as an argument we want to give it the input from the user so again like before this is us giving input to the program and then it's putting that into the arguments of the system command so here i've compiled that rust example that takes advantage of the vulnerability and we're in a windows command line i know windows hide your children we have the the program here here and what it does is it runs takes our input and gives it to the file test.bat and all test.bat does is emits the input as argument received the vulnerability is in the fact that we can inject commands into the args library or the args function right so the way we can do this is if we do you know cve whatever and we type this this we escape out of that system command and i can do and who am i it not only says argument receive this but then it runs that command in the batch file so not great so the vulnerability is if you are running a bat file if you're running a windows batch file and also allow the user to give it an argument you're able to inject arbitrary commands into this field i'll say that one more time for those of you in the back that can't hear if you're running a batch file in windows in rust and you allow the user to pass in an argument then you get command execution this is why i'm a little upset with the rating that github gave this uh the cve right it's not great i don't like that we have command injections in rust for you go and comment oh rust shill or whatever let me explain myself i understand that this is a vulnerability in rust language i admit it like this is a bug in rust that is very very bad the reason that i'm upset is that i don't think it justifies a 10 out of 10 and here's why when you have a bug that is a 10 out of 10 the 10 out of 10 implies that everyone that uses this piece of software like windows for example is vulnerable to this bug and also this bug is remote unof code execution like hide your kids hide your wife like it's going down like things are bad okay that is not the case for this one in this case you have to be running a batch file via command and also need to be giving the user the power to put an argument into that batch file and the vulnerability is in the parsing of that argument in arg now i acknowledge that's a logic error in rust it's not good and it obviously is very dangerous and it should be patched out i'm not saying that it's not a big deal it is a big deal i just don't think that it's a 10 out of 10 big deal again when i hear 10 out of 10 i hear remote windows vulnerability completely rce it's happening everywhere it's in the smb stack or it's in the ip stack of windows i think it's really important when we assign cve we don't go over the top because then it degrades the value of the cve meter in my opinion i think the reason this is getting so much attention is because typically when you're doing actions that are injectable right so you're forming a command that's going to run in an environment that requires it to be sanitized right so for example a a command to run on the command line or maybe an sql query a lot of libraries offer this way of what is called parametrizing that call so instead of doing you know select all from users where password equals blank and you just put the user data directly into there you can parametrize it so that you prevent the user from being able to put that bad data in there and so we kind of get a parameterization library via command so when you put data into arg the expectation is that it behaves the way that parameterized queries would work in sql that being said obviously because of this vulnerability it's not how it works we just saw here here before that we're able to take complete advantage of it um but but do i think that this warrants a 10 out of 10 not really anyway that's it for now i hope you enjoyed this video i hope it shed some light on this cve if you like this video do me a favor hit subscribe hit like and then go follow me on twitch cuz i stream there too also you're not aware of the x z situation the back door in a public library that whole thing is crazy go watch it here we'll see you there