hey guys my name is jason goodison i'm a software engineer at microsoft six internships three countries blah blah blah you've heard it before [music] uh recently we just hit 1k subscribers so congratulations thank you guys so much for being a part of this community our discord channel just reached about 70 maybe people and they're all in there helping each other whether they be grade nines whether they be grade 12s whether they be you know fourth year university looking for a full-time job it's a great community of people looking to learn looking to help build your resume looking to just interact with you so highly recommend you guys sign up for that link in the description but today that's not what we're talking about today in the discord channel i promised to do a q a um and somebody kind of gave out to me because that was like two weeks ago and i haven't done it yet so somebody kind of gave out to me and i felt bad so i figured i would do it tonight how did you start programming what made you stay first question well i started programming because uh basically because i was good at math and i figured it would be a good job and i heard that that programmers made good money so i figured i would do it and just see what happened with it and then i started doing it and i actually started really enjoying it much to my surprise so i was kind of lucky that that worked out the way that it did because i was highly considering going into physics and i almost went to physics at mcgill just decided by this much to go to waterloo what's the difference between software engineering and computer science i'll do a full video about this at some point but the basic difference is software engineering is an engineering so you have to take like all your engineering courses courses like physics chemistry all of the additional stuff computer science is a little bit more laid back it lets you choose your electives so you can choose to make it just as hard as as software engineering or you could choose to make it kind of birdie and you could take like a few bird courses so that it's a lighter load while you work on those really tough math courses software engineering i would say is known as a little bit more prestigious by the from the people that actually went to waterloo uh but when you step outside of canada and you're just talking about employers generally um i don't think it's gonna matter at the end of the day when you look for your full-time job what's your primary advice for learning languages efficiently and then applying using them outside of whatever course or tutorials you are following to learn the basics essentially after having stood a language fundamentals what's the next step okay i've talked about one of these things before basically what i used to do is i would follow like a udemy course on you know android development to try and learn a new technology and i would follow that course but at the same time while i was following that course i wouldn't be building the app they're building so if they're building like a weather app i would be following the course but i would be making a currency converter so the idea is it's it's different enough that you can't just copy their code it's similar enough that the fundamentals you're learning in that course are still transferable to the other apps so i would say don't copy and paste uh definitely do something different than the tutorial is showing you to do um and then after that the next step would be to just do something without a tutorial right to come up with an idea in your head of a good side project and then just find a way to implement that i have a video on how to make your side projects stand out be sure to check it out i think it pops up here what kind of comp projects should you do to show employers in case you don't have any work experience uh i did a video about this a while back but i i should really make a more fleshed out version i talk about it a lot though like i i talk about the spirit of your projects a lot and i think the spirit of your projects has to be solving a real problem like you can't just go ahead and make another weather app because you're not going to stand out because everybody has a weather app so it might be a good introduction but you really have to solve a real problem and the problem doesn't have to be experienced by all seven billion people in the world the problem could be experienced by just you but the idea is build a project that solves a real problem in your life or in your friend's life and that's what's going to make you stand out because you're not just building stuff for the sake you're building stuff that's actually being used another thing you don't have to reinvent the wheel every time you make a new project i would recommend adding to open source projects or building something with friends is another great way to show the collaborativeness collaborativeness you can collaborate with other people and you can work as part of a team so if you just build a project and lock yourself in your bedroom and build it for two weeks you're not going to show those skills which are vital when you're working at a small company even a big company lead party is open source it's the software we built here to competitively competitively lead code against your friends that's open source i'll review your code it'll be like a team project for us how often do competitive programming scenarios come up in real life as a software developer you know what um every once in a while actually so i'm not most people would say never but it's not never it's every once in a while every once in a while you'll have a problem at in work and you're thinking okay i'm giving a list and i need to produce this number and then you think about it and you go how does it actually kind of be a good interview question so let's say every once in a while the majority of the time most of the code that you write is like pretty basic and you're going to be using a lot of libraries having said that one time i did have an interview question that some guy pulled directly from his work so it does pop up every once in a while but it's not that common how should you prepare for coding interviews what are some things you would have done differently when preparing for internship interviews very big one i should do a whole video on that too uh how to prepare for coding interviews like the short answer is cracking the coding interview right what are some tips you would have done differently when preparing for internship interviews uh prioritize prioritize what you think they're going to ask so most of the time i see people that like double down on like making sure they know every single graph parsing algorithm like dijkstra's and all this kind of ridiculous stuff it's like rarely do they ask you to do that kind of stuff most of the time it's like a simple string manipulation question or it's a simple array question there's a little bit of a trick to it so i would focus and prioritize what i think they're gonna ask which is what you'll learn to do when you're in university in first year you'll study everything in fourth year you'll study like a few pages and you'll get better grades well probably more than a few pages if you're going to waterloo but do you have any advice to get better at competitive programming i mean i'm going to self promo here a little bit i'd say make it fun right like i think lead party the the chrome extension we built here at uh tech intern called elite party which lets you competitively lead code against your friends i think that makes it more personal and it's kind of like a personal competition it's the reason we built it is because javin and i thought it would be a fun idea to like see who's better at coding competitions it's one thing to face people on the internet it's an entirely different thing to face your friends which is kind of the idea behind facebook if you think about it right like what did mark zuckerberg say in the social network he said people came to face smash into stampede right yeah but it wasn't because they saw pictures of hot girls you can go anywhere on the internet and see pictures of hot girls it was because they saw pictures of girls that they knew that that competitiveness between you and your friends or that interaction between friends is so much different than an interaction between strangers so i would say take a look at lee party and see what you think starbuzz when we gonna see that video you're gonna see it as soon as i edit it now hope that answered some of your questions again thank you guys so much for reaching 1k uh definitely join the discord and ask your questions for the next q a i will see you in the next episode