how i cut gta loading times by 70% i know this is a a touch old but i never read the article and i think i don't know how many people read the article uh i know that there's json involved that's all i know is in the end of the day encoding decoding huge problem gta online infamous for its slow loading times have picked up the game again to finish some of the new heist and i was shocked sarcasm to discover that it still loads just as slow as the day it was released 7 years ago it was time time to get to the bottom of this recon first i wanted to check if someone had already solved this problem most of the results i found pointed towards an uh uh anec data about how the game is so sophisticated that it needs to load so long stories on how p2p network architecture is rubbish not saying that it isn't some elaborate ways of loading into story mode and solo session after that and a couple of mods that allowed skipping the startup rstar logo video some more reading uh told me that we could save a whopping 10 to 30 seconds with these combined meanwhile on my pc benchmarks story load time 1 minute online load time 6 minutes flap startup menu disabled time from r logo in game while the social club login time isn't uh counted okay uh old but decent cpu cheapo ssd yeah yeah yeah yeah i mean still should be fast i know my setup is dated but what on earth could take six times longer to load into online mode i couldn't measure any difference using story to online loading technique as others have found before for me even if it did work the results would be down to uh in the noise yeah okay okay this is a great setup this is a great setup it is always funny how a lot of theories are floated as to why something is slow a and this is actually really great advice for everybody here if there's ever anything at your job that is slow for any reason and even if you put a sleep 1,000 in your code and it takes 1, in one millisecond just measure okay for that one case maybe take out the sleep one second and then see if it just completely solves the problem but besides for that just measure first you should just always measure never come up with some elaborate theory as to why these things are slow you don't get it trust me you'll never get it you've never done got it you never will get it you're just simply going to be incorrect 99% of the time just profile just always profile just always look at it just always look at the thing i not if this poll is to be trusted then the issue is widespread enough to mildly annoy more than 80% of the player base it's been seven years rockstar god tier hardware way yeah not cool what dude imagine being down here imagine if you had 15 minute load time to get into gta online i'm just saying i have so many questions about your life choices just in general playing gta online let like i'm role playing my name is thorston okay i'm a badass drug trafficker okay and i'm a redneck my name's thorston and i'm a redneck i get on there and i i [ __ ] [ __ ] up it's just like dude calm down okay your name is carl it's not thorston okay it's not it doesn't even sound cool you're just carl carl okay what are you doing what are you child you roleplay what are you a child some sort of child in there anyways guys uh we're leaving he exposed us coral coral all right anyways uh looking around a bit to find who are the lucky 20% that get the sub three minute load times i come across a few benchmarks with high-end gaming pcs and online mode load times to about 2 minutes i would hack for a 2-minute load time it does seem to be hardware dependent but something doesn't add up here how welcome to costco i love you hey everybody i forgot i forgot to disable us alerts so you know what that means you should hit the like and subscribe button and then you should use your twitch prime h thank you by the way i just would like to let you know many appreciations um how come their story mode still takes near a minute to load the modern warfare 2 one didn't count uh the startup logos by the way or the m2 what is m2 is that modern warfare 2 what what the hell is m2 is that some sort of weapon that i'm i don't understand also loading story to online takes them only i know it's okay chat sh chat just be quiet for a second just stop it chat chat just stop also loading story to online takes them only a minute more while i'm getting about five more i know that their hardware specs are a lot better but surely not 5x better highly accurate measure measurements armed with such powerful tools as task manager i began to investigate what resources could be the bottleneck huh i wonder what the problem is it seems like we have a lot of ethernet and then we have a lot of cpu yeah what the hell is happening with the cpu that seems crazy after a minute to load the common resources used for both story and online mode which is near on par with high-end pcs gta decides to max out a single core on my machine for 4 minutes and do nothing else dis usage none network usage there's a little bit but it drops basically to zero after or0 a uh a few seconds apart from loading the rotating info banners gpu usage zero meth memory usage completely flat what is it mining crypto or something i smell code really bad code z af single thread bound while my old amd cp as e cores and it does pack a punch it was made in the olden days back when amd's single thread performance was way behind intels this might not explain all the lad time differences but it should explain most of it okay we're looking good what's odd is that it's uh using up just the cpu it was i was expecting a vast amount of disc reads loading up resources or loads of network requests trying to negotiate a session in in the p2p network but this this is probably a bug this is great by the way this this is already fantastic fantastic investigative journalism right here because if it's a singular cpu one cpu uno core like that's something has gone drastically wrong right like this is this is bad what's the thing i think it's a windows problem oh you think it's a windows problem okay okay interesting uh i guess i'll pirate it you know what gta didn't tell me there was going to be six minute wait times better pirate this uh profiling profilers are a great way what are they watching gta on firefox uh on linux let's see profilers are a great way of finding cpu bottlenecks there's only one problem most of them rely on instrumenting the source code to get a perfect picture of what's happening in the process i don't have the source code y uh nor do i need a microsc perfect readings i have four minutes worth of bottleneck enter stack sampling for close source application there's only one option dump the running process stack and current instruction pointer location to build a call tree in set intervals oh interesting i didn't i didn't realize you could do this very well i thought it would just be a bunch okay yeah it's just a bunch of memory addresses that's why i that's what i was wondering it's like what the heck's that isn't it just a bunch of memory addresses it is all right and uh instruction pointers location to build a call tree uh in set intervals then add them up to get the statistics of what's going on there's only one profiler that i know of might be ignorant here that can do this on windows and it hasn't been updated in over 10 years it's luke stack walker someone please give me this project some love okay so it looks like a lot in this one function and then a lot in this other this other couple right here normally uh normally luke would group the same functions together but since i don't have debugging symbols i had to eyeball nearby addresses and guess if it's the same place and what do we see not one bottleneck but two of them this is good by the way this is really good classic windows tool it's luke scott stackwalker by the way if if we could just have any modern projects named as awesome as this i mean really name a modern project that's named as awesome as this give me one right now right now give me an awesome one right now plow harpoon okay harpoon is a sweet ass named one wi wiz tre qar i think the name is really the name is docker j dsl j diesel winrar react the aen prime riz you know i only have eight falor vs code harp harp harp punani winder stat baby okay i gotta i don't know why i even let you guys speak to me all right anyways having borrowed my friend's completely legitimate copy of the industry standard debler no i really can't afford the thing uh going to learn to uh gidra one of these days uh oh really are we having an account of piracy uh i don't even know what gidra is uh anyways i know dude piracy incoming all right so we got a problem here well this looks odd okay okay okay that doesn't look right at all most high-profile games come with built-in protection against reverse engineering to keep away pirates cheaters and modders not that it has ever stopped them there seems to be some sort of obs obu obfuscation encryption at play here that has replaced most instructions with gibis not to worry we simply need to dump the game's memory while it's executing in uh executing the part we want to look at the instructions have to be deobfuscated before running one way or another i had process dump lying around i mean who doesn't have a little process dump lying around so i use that but there are plenty of other tools available to do this sort of thing problem one it's stir lane dissembling the now less aus skated dump reveals that one of the addresses has the label pulled out somewhere it's sterane what's are going down the call stack the next one is labeled v uh vcan function after that labels though i'm fairly confident it's uh sccan let's go let's go we're we're touching strings lot of string linking it's parsing something parsing what untangling the dissembly would take forever so i decided to dump the samples from the running process using x64 debug some debug stepping later it turns out it's json they're parsing json a whopping 10 megabytes worth of json with 63,000 entries okay can we just hold the phone here for a second what the hell how does 10 megabytes okay let's just pretend we have to check 10 million times 10 10 million times or we had to check 10 million times 10 times there's no way that should take six minutes how is it that slow it already seems too slow to begin with json parsing is is is fairly fast i mean when i say fairly fast i mean it's impressively fast for what the thing is parsing json is slow it will always be slow it has always been slow it's always slower than all other forms of processing that's just the way it is is that's the way it will always be i'm just saying that okay that's just that but yeah slower okay yes you can pick shittier formats i get it toml exists okay we get it that it can be worse shun the non-believer jq is really nice well thank you for the jq jq is great i must say my json parser is faster than yours probably xml is slower i'm not i think xml is actually the same speed these days as jon or close to i know some of those some of those xml parsers are actually pretty pretty fast for what it is again when i say fast you' got to remember what am i measuring it against you know what i mean anyways okay so we got a lot of this nice price 4500 all right what is this what what is this it appears to be data from a net shop catalog according to some references okay i'm just getting pinged about a meeting that i created called vim weekly i assume it contains a list of all the possible items and upgrades you can buy on gta online but 10 megs that's nothing using scan f may not be optimal but surely it's not that bad well count every single character in the 10 m strings for every tiny value read return okay nice nice that's pretty nice look at that thing go yep that's going to take a while to be fair i had no idea most scan f implementations called stir laying so i can't let's see so i can't blame the developer who wrote this i would assume it just scanned bite by bite and could uh and could stop on a all yeah i'm actually a little bit surprised by that that is that real does scanf really first call string length and it doesn't just like also just do your standard null checking yeah that is literally n n squ running algorithm depends on the implementation but i guess this one does see it just i mean it just seems strange problem two use a hash array all right turns out the second offender is called right next to the first one they're both called uh even if the if statement as seen in this ugly d compilation all right problem one parsing problem two sorting nice inside of a big loop to parse all the items oh wait we we're sorting in a loop all labels are mine i let's see no idea what the function parameters are actually called the second problem right after parsing an item it's stored in an array or an inline c+ plus list not sure each entry looks something like this struct hash item before it's stored it checks the entire array one by one comparing the hash of the item to see if it's in the list or not with 63,000 entries that's and yeah okay so i mean this makes sense if you have like 30 items this actually is the way you do it as opposed to a set for 30 items but 6 3,000 items that ain't that ain't it okay that's that's just not you don't dup on an array beyond like 3040 50 items i'm sure it's language dependent and and cpu dependent but you set it to a reasonably low number and boom that's all you got to do someone didn't watch the fem dsa checks if my math is right most of the uh most of them useless you have unique hashes why not use a hashmap for a small amount it makes sense profiler shows these two lines abusing the cpu nice only happens at the end does uh es not sure fast call yeah actually inserts the item nice this just looks like complete gibberish to me i have no idea what's happening here but this this looks great uh i named it hash map while reversing it but it's clearly not a hashmap and it gets even better the hash array list thing is empty before loading the jon and all of the items in the jesson are unique so they don't even need to check if it's in the list or not they even have a function to directly insert the items just use that i do love this article this article is fantastic now that's nice and all but no one is going to take me seriously unless i test this so i can write a clickbank title for a post let's let's see it clickbait me daddy the plan write a dll inject it into gta hook some function profit okay yes json is uh json problem is hay i can't realistically replace their parser replacing scan f with one that doesn't depend on sterl would be more realistic but there's an even easier way hook ster lane wait for the long strein cash the start and the length of it if it's called again with the uh with a strings range then a return cash value get banned by antiche is the question mark yeah yeah typically that would be that that typically is this one is get banned by the anti-che this is a great this is by the way this is a great great idea right make it the simplest possible stir length cacher right boom bo boom boom boom look a couple static couple statics here bam bam bam beautiful love this oh i love it oh i love it love it h let's see as for the hash array problem it's more straightforward just skip the duplicate uh checks entirely and insert the items directly since we know the values are unique all right so insert directly nice netcat insert direct let's go full proof of concept here results well did it work nice uh low time improvement 69.4 nice should have okay why did you go with 70% why did you even if it was 69.9 why not go with 69% you know what i mean like why why you not hitting that why you not doing that all right this is great most likely this uh won't solve everyone's load time there might be other bottlenecks on different systems but it's such a gaping hole that i have no idea how rockstar had missed it all these years tldr there's a single thread cpu bottleneck while starting up gta online it turns out gta struggles to parse 10 megabyte file the json parser itself is poorly pilled sl naive and after parsing their slow item d duplication routine this is like this by the way is great there's like the there there is a table that exists somewhere on the internet and i've seen it which is like the breakdown of all json parsers at the time it was written and their inability to parse json correctly and there's like this table of like all these different edge cases in which all these different parses and these different languages will do something different and it's just like that's the state of jon and guess what the best part about it if you go to json.org and you look at their parser like that's not even that complicated like the parser is can fit right here crazy crazy crazy i know i love tree sitter i love tree sitter too it's fantastic escape things are in the standard no trailing commas i know dude just imagine if they would have put a comma right here like an optional path for a comma right here just imagine an optional path right here for a comma would have made everybody love json now instead you do that one thing every single time in your package. json and and it just goes sorry invalid json and go it's the same thing every time a comma it's a comma it's a comma every time it's a comma every effing time catfishing why is that up there we'll get to it all right rockstar please fix if this som reaches rockstar the problem shouldn't take more than a day for a single dev to solve please do something about it sad face uh you could either switch to a hashmap for d duplication or completely skip it on startup as uh as a faster fix for the json parer just swap out the library for a more performant one i don't think there's an easier way out love small update i was expecting to get some attention but nowhere near this much after reaching out uh after reaching the top of hacker news this post was spread like wildfire thanks for the overwhelming response i'll do more writing if something interesting comes along but don't expect anything of this scale soon there was plenty of luck involved a few people suggested spamming this post to rockstar support please don't i'm sure they've seen it by now continuing would only bog down support tickets for everyone else social media is fair game in my book though nice several hacker news comments suggested i add a donate button as uh they would like to buy me a beer thank you so i'm placing a link in the footer oh this is fantastic thank you for reading and all the support lot more updates updates kept happening fully fixed toss approves nice fixed it all just got confirmation from rockstar this is getting fixed soon just got awarded 10k through their h one in-game bounty good job rockstar hey you know what good on rockstar for that good on rockstar that is great genuinely a good move i love that i love that uh trying to figure out what's a w8 and how to fill it out league of legends um that's pretty funny that's actually pretty dang funny i did try asking for more technical details but they couldn't say anything we'll do another benchmark on my same old p as soon as the update is out this is fantastic this is honestly fantastic the fact that they he got paid this much money to do that awesome because you know what he did this out you know he did this because he was a curious guy right just kept chasing a bug all the way through just got so curious he went it down and then to get paid at the end love it absolutely love it league of legends league of legends well well done buy buy a coffee buy a coffee follow the link press the button buy a coffee buy toss a coffee toss if you're doing these fun things you should live stream them on twitch it'd be fantastic i'm sure you' do very very well the name is i approve a jen