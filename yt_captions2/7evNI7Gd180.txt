all right alpha dev discovers faster sorting algorithm are you ready for a faster sorting algorithm here's the deal though here's the deal ais aren't going to take your jobs they're just going to take your algorithms okay they're going to put their little hands on your algorithms and take them all right new algorithms will transform the foundations of society wait of computing sorry i thought i read that all beforehand but i didn't okay uh really is that what i'm reading here did i just really read that here is the dildo hey i'm trying to like do some nice youtube content and look at do you see what i have to deal with i'm turning into actual asman gold turning into actual asman gold okay anyways digital society is driving increasing demand for computation and energy use for the last five decades we relied on improvements and hardware to keep pace but as microchips chips approach their physical limits it's critical to improve the code that runs on them to make computing more powerful and sustainable that's why we're gonna have chad chipity generate all of our code and then we're gonna have chat jeopardy healer code because chat jeopardy was wrong the first time that way it's high performance code okay high performance this is especially important for the algorithms that make up the coding uh make up the coding running coding code running trillions of times a day no i cannot speak today anyways here we go in our paper published today in nature it's a weird place to publish a computing paper okay i didn't realize nature i didn't realize nature was coming out there we introduced alpha dev and artificial intelligence ai system that uses reinforcement learning to discover enhance this way to discover enhanced computer science algorithms surpassing those honed by scientists and engineers over decades pathetic engineers pathetic singular ai is beating your pants off alpha dev uncovered a faster algorithm for sorting a method for ordering data billions of people use these algorithms every day without realizing it they underpin everything from ranking online search results and social posts to how data is processed on computers and phones generating better algorithms using ai will transform wire just let just get to the give me the meet and give it to me raw okay i just want to know by let's see by open sourcing our new algorithms in the main c plus library millions of developers and companies you think millions of developers are using c plus plus okay hey guess what they are actually they are so because everyone that thinks they write javascript guess what you're writing okay you're writing syntactic sugar or c plus plus that's all you're doing okay you got a little jvm of javascript running underneath the hood making your stupid code run somewhat quick okay so guess what this will benefit you too millions of developers and companies around the world now use it on ai applications across industries from cloud computing and online shopping to supply chain management there's okay just give me the meat what is sorting you know what sorting is we're skipping that whole thing okay we're everybody you better know what sorting is if you don't know what sorting is we're gonna we're gonna have some problems okay i'm gonna sort you out you got that punk okay okay maybe i should read a little bit just to make sure that we're all on the same page okay just in case any of you feel you know stupid right now and you feel like i don't know what sort of is well okay sorting is a method for organizing a number of items in a particular order example includes alphabetizing three letters arranging five numbers from biggest to smallest or ordering a database of millions of records okay so if you were to sort say devs on a access of most fit to least fit you'd have like milky dev on most fit side and you'd have trash dev on the other side currently eating brownies as the limit of t approaches zero trash dev is either making or eating brownies i don't know if you know that but it's called the theorem of trash okay it's been proven it's proven it's proven actually it's perfect you know how you know it's proven watch this you go over to twitter right you go over to twitter you don't search up that you look up trash trash death you jump on here i guarantee you within five pages four pages there will be a picture of brownies all right one like i said like i said okay not even two pages in brownies ice cream trash dev get your life in order okay get your life in order okay or else i'm gonna sentence you to three weeks and json diesel okay okay anyways let's keep on going i think we all know what sorting algorithms are uh alpha dev uncovered faster algorithms by starting from scratch interesting rather than refining existing algorithms and again looking where most humans don't the computer's assembly instructions okay okay okay assembly instructions are used to create binary code for computers to put into action while developers write code in languages like c plus known as a high level language you know whenever someone says c plus plus is a high level language i feel like you know like there's like a whole a debate gonna happen there right uh you know i i like to call it like a really strong mid you know c plus plus is mid at best okay and i mean that in every sense of that phrase uh we believe many improvements exist at the lower level that may be difficult to discover in a higher level coding language computer storage and operations are more flexible at this level which means there's significant but more potential okay so look at this we got c plus plus that turns into assembly that turns into a bunch of ones and zeros all right code is typically written in high level programming language such as c plus plus sorry c plus there you go uh this is even translated uh to low-level cpu instructions called assembly instructions using a compiler an assembler then converts the assembly instructions to execute machine code that the computer can run okay boom boom boom boom boom uh an example of c plus plus algorithm that sorts up to two elements up to two elements okay interesting uh look at that length uh zero one and two you know a lot of people say a two element sword that length is is pretty statistically average you know what i mean lots of algorithms only operate on on two you know i don't i i don't think we should be judging this kind of stuff you know some people have longer sorting algorithms and that's totally normal the variation makes life beautiful okay can we all agree to that variation makes life beautiful okay uh variable sort too okay uh we got i don't know what edi stands for i really never do any sort of uh instructions all i can tell you is that there's some registers being moved around we're comparing a little bit we're moving a little here we're doing a little c movel uh we're doing a little bit more we're doing the old og move g you know what i'm talking about boom let's go finding the best algorithm with a game alpha dev is based on alpha zero classic our reinforcement learning model that defeated world champions in games like go chess and shelgi i don't know this i don't know that one uh with alpha dev we show how this model can transfer from games to scientific challenges and from simulations to real world applications to train alpha dev to uncover new algorithms we transformed sorting into a single player assembly game uh at each turn alpha dev observes the algorithm it has generated and the information contained in the central processing unit cpu then it plays a move by choosing an instruction to add to the algorithm when the ais get gamified it's just like humans they're gonna get lazy uh they're gonna only work on getting their endorphins going as soon it's just like these out of these these ais are just gonna be like hit me with that endorphin rush i need some more gamification i mean this is gonna end poorly okay this is how skynet's born okay uh the number of possible combinations of instructions is similar to the number of particles in the universe oh a classic two to the 80 right uh or the number of possible combinations of the moves of the game in chess oh wow there's a google there's over a google of moves i didn't know that or the games of go oh my goodness that's a that's almost that's a that's a large ass number a single wrong move can invalidate an entire algorithm absolutely okay interesting reward yay we've done it okay so it's obvious i assume it's like a zero and a one right like either you've done something good or you did something bad okay let's see the figure eight the assembly game uh the assembly game the player alpha dev receives the state of the system as input and plays a move by selecting an assembly instruction to add to the algorithm that has been generated thus far the reward computation after each move the generated algorithm is fed test input sequence for sort 3 this corresponds to all combination of sequences of three elements the algorithm then generates an output which is compared to the expected output of sorted sequences for the case of sorting this agent is rewarded based on the algorithm's correctness and latency as the algorithm is built one instruction at a time alpha dev checks that it's correct by comparing the algorithm's output with the expected results for sorting algorithms this means unordered numbers go in and correctly sorted numbers come out we reward alpha dev for both sorting the numbers correctly and for how quickly and efficiently it does so alpha dev wins the game by discovering a correct faster program foreign this is super interesting oh what kind of this is just like i mean is this just like a standard mlp is that all they're using here is just like a pretty simple mlp because this just sounds like they're doing a little bit of that uh you know a little bit of that error back propagation and just correcting or i don't understand how adding and removing instructions either way it's pretty it's simple clueless i mean it sounds it sounds nutty reinforcement learning yeah you you like you put your output into your input baby have you ever done that it's a pretty good time must say sounds like a protein folding algorithm you think so i wouldn't know uh alpha dev uncover let's see uncovered new sorting algorithms that led to improvements in the llvml lib c plus plus sorting library that were up to 70 faster for shorter sequences and about 1.7 faster for sequences exceeding 250 000 elements interesting that number sounds like statistical noise hmm oh man i've become super skeptical all of a sudden we focused on improving sorting algorithm i guess if you're doing it in assembly you can kind of like just look at the assembly and be like this is faster interesting we focused on improving sorting algorithms for shorter sequences of three uh to five elements these algorithms are among the most widely used because they are often called many times as a part of larger sorting functions improving these algorithms can lead to an overall speed up for sorting any number of items to make the new sorting algorithm more usable for people we reverse engineered the algorithm and translated them into c plus one of the most popular coding languages that developers use these algorithms are now available i actually kind of want to look at that this sounds exciting okay finding the novel approaches okay this is very interesting uh alpha dev not only found faster algorithms but it also uncovered novel approaches its sorting algorithm contained new sequences of instructions that save a single instruction each time they're applied that can have huge impact in these algorithms that are used trillions of times a day we call these alpha dev swap and copy moves like i understand all three of those words individually but when you put them together like that i have no clue what that means do you know what i mean uh this novel approach is reminiscent of alpha moves go or move 37 okay okay okay lib soy 1.7 for small sorts is noise yes but that was for a large story one point one point seven percent was for uh the 250 000 element sort whereas uh the the 70 was for small sorts you know i mean you know me oh my goodness i hate when you like when you make it smaller and larger and it totally just loses your spot uh a counter-intuitive play that stunned onlookers and led to the defeat of legendary go player with the swap and copy move alpha dev skips over a step to connect items in a way that looks like a mistake but it is actually a shortcut wow this uh shows alpha dev's ability to uncover original solutions and challenges the way we think about how to improve code i actually really want to understand this okay so we have some memory all right so we have all some stuff here so we do we do a lot of like we do a little move a little compare all everything looks the same we don't do a move here we compare here see the problem is is i i can't quite read this delicious this deliciousness yeah see i'm too stupid to re i'm too stupid to read these instructions i'm too stupid to actually read them i was hoping that i could kind of like visualize what it's actually doing uh read comments on r equals to max s equals the min okay you kind of know which one's more you either you have a or c and r contains a s contains c or one of the uh other way uh p contains either a or b q contains the minimum really it should contain s yeah okay it does it contains s the maximum of those three and then reorders those huh i'd have to think about this for a little bit the stream's not for really thinking but i think i think i could i think i could kind of understand this i'd have to like draw it out but that sounds interesting okay i think i see what's happening here it's effectively just selecting out each one right so you know a and c is ordering then you know potentially bees ordering and then you know the difference between if b is less than or if b is greater than or less than a or c which is q and so then you can kind of apply these right q interesting interesting uh yeah because effectively q is position two right so okay i see what's happening here so you take the smallest of these two then you take the middle element there so that would be the middle element this is what i don't understand is right here how do you know a and b c that's what i don't understand right here how do you know a and how do you know this how do you know this i see i've had to think about this uh i'd have to i'd have to think about this for a little bit all right but i uh interesting all right the original sort 3 implementation yeah dev swap uh move discovers that you only need a min a b okay and then i guess here's a larger one i'm not going to try to figure these things out the original implementation with max b uh okay so it looks like it's effectively removing an instruction here removes the comparison here removes a couple comparisons here and another comparison here interesting uh from sorting to hashing and data structures after discovering faster sorting algorithms we tested whether alpha dev could generalize and improve a different computer science algorithm hashing okay so this one's super interesting because generalized hashing can still leave to lead to huge problems have you ever seen that uh that the causal profiler did anyone ever watch the causal profiler it showed that the causal profiler uh the causal profiler showed that like o3 optimizations didn't actually improve the speed but actually slowed down some uh some operations like not all optimizations were actually optimizations in the end it was super interesting and one of them and then one of the things they found in hashing was that like sometimes generalized hashing produces really bad bucketing and these bad bucketings create terrible performance right uh hashing is a function algorithm in computing used to retrieve store and compress data like a librarian who uses classification system okay blah blah blah i think we all know about that we applied alpha dev to one most commonly used algorithms for hashing and data structures and tried to discover a faster algorithm when we applied it to a 9 to 16 byte range of hashing function the algorithm discovered that or the algorithm that alpha dev discovered was 30 faster again i'd love to know how that works this year alpha dev's new hashing algorithm was released into an open source ancl library like uh you let's see available to millions of developers around the world and we estimate now that it's being used a trillion times a day very interesting by optimizing and launching improved sorting and hashing algorithms used by developers all around the world alpha dev has demonstrated its ability to generalize and discover new algorithms with real world impact we see alpha dev as a step towards developing general purpose ai tools that can help optimize the entire computing ecosystem and solve other problems that will benefit society i actually think this is a great use of ai so to me this is a great use of ai this is finally like because you know like you know i'm not gonna lie to you ai explaining react with an 87 accuracy or whatever chat chipity 4 is isn't necessarily like the great use of ai right it's mostly correct and sometimes it lies to you right like that's kind of a shitty thing ai giving you 100 code coverage kind of a shitty you know it's kind of shitty uh but oh we're starting here in one minute but this idea that it can just improve like really intense uh just very specific instructions it seems super cool uh until it starts cracking encryption yeah that's why you get pied piper to take the fall everyone knows this you'd get pi we've already seen the episode buddy okay i've already seen it damn it i hate when see i hate this whole sites that do that okay anyways while optimizing in the space of low-level assembly instructions is very powerful there are limitations as the algorithm grows and we are currently exploring alpha dev's ability to optimize algorithms directly in high level languages such as c plus which would be more useful for developers yeah that makes sense alpha dev's discovery such as the swap and copy moves not only show that it can improve algorithms but also find new solutions we hope these discoveries inspire researchers and developers alike to create techniques and approaches that can further optimize fundamental algorithms to create a more powerful and sustainable sustainable uh computing ecosystem i i am going to one thing before we end this one thing i want to do is i'm going to take this and maybe in the next one or two streams i'm actually going to try to go over this and like write it out and try to understand it like on paper because this seems super cool like this idea seems super cool i'd like to like be able to visually see what's happening i think i can see what's happening right here but it would be super cool to see this as well i think it'd be a lot of fun right um i think it'd be a lot of fun i think i like that anyways how to jerkate guys at a time that's middle out algorithm that's the difference okay completely different and that's four dudes okay you can't double the performance middle out everybody knows that you can't there's no configuration in which i mean the thetas alone would be out of out of this world okay do you realize how many i mean the sorting algorithm required would require an ai just to properly sort the height differences it would be insane um any anywho the name is the middle outer gin hey by the way like this video why did you guys not like my videos like them