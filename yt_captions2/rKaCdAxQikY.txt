at this point i've been programming in python for around three years and yesterday while i was scrolling through the documentation i learned something completely new that i just did not understand and this has to do with tuple comparison and list comparison i mean to keep things simple if you have a tuple of one two and you say that is equal to one two and we actually print this result of course you're going to get back that this is true because these both contain the exact same values but something interesting that i saw in the documentation was using tuple comparison with the more than or equal operator and i was thinking how could you compare a tuple in that sense i've never seen the more than or equal to operator being used with one tuple and another so the example i saw in the documentation was just checking that the system.version info was more than or equal to python 3.11 so as you can see this is a tuple it's not written out as a decimal or a string it's written out as a tuple so what i'm going to explain to you now is how you can compare tuples and lists using the more than or equal to the more than or just any comparison operator because again we're probably very familiar with how we can use the equal to operator to check that a list or a tuple is equal to another list or a tuple but to get started let's create two tuples so inside print another parentheses and we're going to have one in two which is more than one and two so we have a simple comparison here and if we run that we're going to get false because they are exactly the same but as soon as we change this to two we're going to get true so what is happening here how does this actually work under the hood well when you compare a tuple or a list it checks each element one by one so it checks the tuple at the index of zero against the other tuple at the index of zero and if that passes it moves on to the next element as soon as this becomes false so if we have let's say 2 2 2 and here we add another two so as soon as we have one that evaluates the true such as this it's going to stop and it's going to say okay this is more than the other one so here we can rerun the program and 222 is more than two one two even if we add 100 here it's going to evaluate the true because it's going to stop at the second comparison as soon as it becomes true and you can use this with any kind of comparison operators you can use the more than or equal to or the less than or equal to so you can use all the basic comparison operators to check between tuples whether they are the same or not and the same thing goes for a list so if we convert this to a list and we convert this other one to a list as well oops there we go we will have the same kind of comparison so checks that element 1 is more than or equal to element one then it does the same thing for element 2 and element 3. so let's change this back to two and this back to two and let's change this to three and you'll see it will turn to false because the first element is checking against the first element and as soon as that returns false it stops and says and says okay this is not more than or equal to the other list it doesn't even bother to check the other ones but if we type in 2 and we add let's say a three in the middle we're still going to get false as a return because as soon as it checks these two it says okay there's no point in checking further two is not more than or equal to three so finally let's go to the example i saw in the documentation so here we have system and if the system version info is more than or equal to 311 then we're going to print you are running python 3.11 or higher else we're going to print that your version of python is outdated so we just make sure that the user is using the correct version of python or we tell them it's not going to work and to see if this actually works we're going to change it to python 3.10 and as soon as we run the script you'll see that your version of python is outdated because the system dot version info is not 3.11 or and above we can also print the system info by typing in system dot version info so you can see exactly what you're getting back in the tuple so here we have 3 and 10. and we can also change it to 3.9 and as soon as we rerun the script this will change to 3.9.9 and my version of python will still be outdated but as soon as we change it to 3.11 you'll see you are running python 3.11 or higher but anyways i just found that very interesting because again it was three years that i've been programming in python without knowing this i actually have never used this i haven't found a use case for this but as soon as i run into this part here i found it super interesting because i just because i just didn't have any idea on how tuple comparison worked or how list comparison worked because having one list equal to another or one tuple equal to another makes sense but having one that's greater than or equal to another just changed my world but anyways guys let me know if you found that interesting or if you have any other interesting facts about tuples or lists or features that you can use with them that aren't that common and with all that being said as always thanks for watching and i'll see you in the next video