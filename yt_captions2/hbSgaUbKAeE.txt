you guys ready to do this one here i'm going to turn off alerts let's do it it's old it's two weeks ago it's old it's like slightly slightly older than the latest js framework slightly older reality for most of us in software engineering is that we aren't 25 year old models living in the bay area working two hours a day and making three hundred thousand dollars a year okay so real talk that's not what you guys do no no one okay i thought that was totally normal that's you i want to do is paint a more realistic picture of what the day-to-day of an engineer looks like at most small to medium-sized businesses the biggest influence on your day-to-day as an engineer is the management style of your company most of the orgs i've worked at were agile or scrum based this means that you've worked on two-week blocks these are called sprints with the expectation that we try to finish off all yeah i've never had uh i've literally i've literally never once planned a sprint at my decade at netflix look never once agile sucks change my mind or work within that time agile teams are infamously known for having a lot of meetings there are just a few of them that are very important for developers the first one is sprint planning i don't think sprint planning is important come on before we start every block of work we plan out what kind of work we're going to do within that period of time and this is very important for developers for two reasons one is that you can see at a high level okay i'm glad that he put soy dev over here okay claire soy dev vs code vibes energy coming strong off this man uh obviously chad energy probably uses vi um not even vim but real talk how many of you actually get a meaningful amount of things real real i actually wanna i actually want to know this how many of you actually get press one in the chat right now how many of you actually get real meaningful value out of sprint planning and how much could that have like the walls of very few ones okay real talk how many of you get something a little bit out of sprint planning that probably could have been condensed 85 press one okay so there is a little bit of value but perhaps not the most important meeting value all right that's good i like that sprint planning is mostly management yeah it's just about communication i do it it truly is when i the last time i did agile what i realized is that nine tenths of the law is perception not nothing to do with anything else what the most important tickets are and if you're edging for a promotion you can go try and pick up that piece of work another one is i'm actually see what kind of technologies public edge for a promotion you know what i'm talking about a little public it try to introduce in the future and you can usher yourself in to working with those and sort of learning on the job another meeting is stand-ups and these stand-ups are my least favorite meetings of all time i've had probably about seven stand-ups at netflix and i absolutely hate every last one of them stand-ups are worthless stand-ups are because someone in management are too lazy to read an email from seven people i always felt like the [ __ ] am i the [ __ ] on reddit because the moment someone was like so anyways this weekend i'd go no shut up we're not talking about your personal life i i want to be out of this immediately so tell me what you did tell me your roadblocker and tell me what you're going to do because i'm gonna get the hell out of this meeting right now i don't want to hear about your dog i'm sure your dog has a beautiful little selfies you take with you and your dog you call it your child you have this like long emotional connection but i don't want to hear about it i don't i stop it stop it right now that's me at a stand-up every single time these are mostly held for daily progress on your work these are great stuff i also forget that they're daily oh i did have one project one of my first projects at netflix was called darwin social mountain where we built out the facebook integration where you used to be able to recommend videos to friends and all that holy cow did that take so much time out of my life it sucked me dry it sucked it sucked me all the way out hayden's to communicate to the rest of the team if you're blocked or if you have any questions finally another very important meeting is the estimation session have i been away from agile this long that there's an estimation session that's separate from sprint planning yes oh lord jesus it's a fire i didn't got no shoes or nothing i just ran for my life that's what i would do okay i would quote sweet sugar brown and i'd get the hell out of that place my goodness you get triple meetings triple developers basically make a rough guesstimate on the amount of effort and time that it takes to come real talk are managers allowed in the time hold on so real real talk our management is management allowed in time estimation meetings i don't think they should be allowed they should not be allowed looks like a mixed bag they should not be allowed imagine trying to plan and give real-time estimates with management there you'd be like uh do i multiply by three or divide by two i don't like i would most certainly want to multiply by three pleat a task to make these estimations a lot of companies use t-shirt sizing like this is a small piece of work medium piece of work or large piece of work i don't like t-shirt sizing i think it's much much better to go days weeks months years right yeah that's gonna take me some days yep that will take me weeks that will take me months just keep it super simple right days that could be one day could be an afternoon could be three days i don't know well that way because gears the reason why i do years is because when someone tries to like yeah why don't you just implement uh could we get http 3 implemented on our platform you're like i don't know how long that's gonna take like for television we would have to implement http 3. like i would have to implement it there's a lot of stuff to http 3 like there's a ton of stuff it's not simple it's extremely complex i've done http 2 and web sockets http 3 is like hard it's fast but it's hard reread it in rust years category or they use a numbering system and they're normally presented by a product manager or business analyst or if the work's extremely technical say refactoring some old code it's jquery everybody jquery using sublime with the default is it monokai monokai color scheme hey does anyone remember this did you pay for it did anyone pay for it one in the chat if you paid for it right now one in the chat if you paid for it right now press one in the chat if you paid for it press 69 in the chat if you close the please pay for me windows 700 times 69 in the chat if you close that window 700 times in your lifetime yeah yeah that was me i i probably have closed that window i've spent so much time closing that one window that singular window has cost me more than than winrar it's done by a developer or tech lead can we take a moment and just back up for a quick second capturing some old code it's done by a developer or this guy's falling off man i remember when i first got into youtubing years ago i thought that guy was cool real talk thought that guy was cool bet you a lot of you did you just don't want to admit it a lot of you are a bunch of a bunch of punk ass not admitting it you're you're you're hiding from the reality oh no i know i said was i said was i never said is there's no is okay we're not in debate uh debate the term is right depends on what you mean by is right i'm not saying that yeah there's there's some was in there the was is hard protect lead so that's scope of work i referred to earlier is normally known as a ticket or a project and it's hosted on a project management software sometimes it can be at lassie and sweet so that's jira so i think one big thing uh by the way [ __ ] bucket great joke i love it i love every moment of that joke i think one thing that that could be really strongly taken away why netflix can do what they do is that we don't every individual person is kind of responsible for like a feature or leading a feature and so and part of those features is just like cleanup tasks and so if you're just like hey i'm gonna go do a bunch of stuff like no one you don't really like the the the level of tracking isn't the same now a lot of people use jira obviously especially for when anything to do with production changes that need to happen in production anything that you need to communicate to a broader amount of people people waiting on a specific fix anything like that jira is a pretty good way to do all that but for the most part it's just like none of that right at least in my world it's very little of that there is some but it's very little people avoid jira for the sake of avoiding jira confluence and bitbucket or it could be on github or gitlab now that we're done planning what we're gonna do estimating what we're going to do we finally get into the good stuff which is development and as an engineer you're probably going to get a few of the following tickets so it's going to be a bug i think just got the highest anxiety of my lifetime watching this person type okay there's this development first off what what is going on here are you looking at that what what finger are you using to press backspace is that middle finger foreign this is what this is pinnacle dev cringe okay that's how i look at this right here there's nothing more personified cringe than that and as an engineer you're probably gonna get a few of the following tickets so it's going to be a bug from customer support maybe a new feature an internal tooling and if you're lucky and your company's very nice you'll get to refactor some tech debt now while you're in development you're is this the average person's experience real talk press one in the chat if this is is this like what you you do press one yep that wall of ones right there is just reminding me how how much i'm out of touch with reality hey man you want to learn how out of touch you are ask a bunch of people a question oh i feel hurt you're actually gonna spend a lot of time researching before you even code still feeling out of touch so that means reading up on the documentation in the ticket i just pressed pause this was this was not a plan this was not a plant okay i did not mean to i did not do this i i don't even know what happens here js sucks do you like that js sucks while writing typescript sifting through the code or if you're really new to the industry and this happened to me a lot in the beginning you're going to spend a lot of time getting your environment up now massive respect for this guy okay hey hey hey big box suite go subscribe to him big box we let's go like this we're gonna you know what we're gonna do we're gonna go here i'm gonna i'm gonna click his name of course it's gonna be in the description i'm gonna toss it in right here okay go ahead give them some go ahead give them a subscription okay your environmental you understand the problem you have a working solution in your head you want to go and get check out a new branch and start coding oh that's speed so sometimes when you're coding it's very natural to be stuck or blocked by something that you don't really understand and if you have a really good team culture you can reach out to your teammates and they can hop on a call with you or come to your desk and you guys can work together that can't be real that had to be a staged oh oh my goodness this is called pair programming and it's very popular in the industry because it's a really good way to build teamwork and actually learn a lot from your seniors and share knowledge it's a fantastic practice and it's one of the ways i've grown the most as a developer so you fix the bug or you've built the feature tests you can thank you thank you appreciate that what's in the box not gonna tell you yet not going to tell you yet now push your code and get it reviewed comments might start rolling in from other engineers or tech leads and these are mostly about things like naming conventions the complexity of the code you've written whether or not you're using i really hate naming knit knit hey this is a knit um but it really bothers me uh you know when when you uh said like items i prefers i personally prefer when you put like a type in there as well i know we use typescript and sure the lsp works but you know i just like to see the word list when you when you do it okay i hate them hate it practices whether or not you just rewrote a bit of code and you could actually use it from somewhere else in the repo oh okay that's supposed to be the spider-man meme i'm all confused now once code review is done or while code reviews happening a member of your quality assurance team will pick up your ticket and test that feature [ __ ] disgusting it's at this stage if you have any bugs you're gonna have to go and fix it and get a code reviewed again restarting the whole problem this looks like the gorilla's 19 uh 2000 track but all weird awesome so for new developers i highly recommend test out the qa tests yourself and make sure that you're not going back and forth with them because it can get really frustrating another important aspect of the job that's not really talked about is documentation this can be internal documentation so i guess foreign base is designed the way it is or it could be external documentation to system documentation is always tricky you know no matter i feel like documentation beyond like large scoped items like hey this is how you launch a server internally to me it just seems like as the scope gets smaller i find that documentation gets progressively harder like a tool here's a readme here's how to use it but once people go beyond that level and they're like in this file uh this function you know like once you start getting too deep dude i find that at a job that quality of code that quality is just so far down sidemens or cloud engineers on how to get the system up and running on their environments to sum up all the parts your average day would probably look like a few meetings here and there maybe stand up or estimation session or a design documentation brainstorming session otherwise you should have full autonomy and control of what you're doing with your time so yeah that pretty much wraps up this video thank you for your time like and subscribe if this product [music] who's that good looking guy huh who's that lucky