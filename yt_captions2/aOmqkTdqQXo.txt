hi everyone in this video we're going to be setting up a little healthy way and also bringing in a skeleton model for the enemy so i have this image of a rounded rectangle which i'll be using for the health bars so i'm just going to drag that into the sprites folder and i will set the texture type to sprite and press apply so these health bars are just going to float above the characters heads and as a sort of personal preference when the characters walk behind something like say a tree i want the health bar to be hidden behind that tree as well so for this reason i'm going to create a new canvas and i'll set the render mode to world space of course if you wanted the health bars to render on top of everything else you would go with a screen space overlay now i'm going to reset the rect transform here so that the canvas is centered at the origin and then i'm going to create a image set the source image to the ear health bar and quickly see where the players positioned in the world so negative 11x positive 11 said so i'll go into the image here negative 11 x 11 is ed and this is currently quite humongous so i'm going to scale it down a whole bunch like so the aspect ratio is currently a bit off so i'll just press this set native size here to correct that and now i'll bring this down so it's just above the character's head and scale it a bit more okay now i'm going to set the color of this to red and then i mean to duplicate it i'll parent that there and set the color of this one to some sort of green a yellow now we can set the image type here to filled and i wanted to fill horizontally starting from the right so now using the fill amount or we can decrease and increase the state of the health bar great so i'm going to call this healthy y and i'm going to drag that into the prefabs folder and then delete it from the sin what we now want is a healthy ui script which we can add to each character that will automatically spawn one into the scene parent it to the world canvas and then make it pop up whenever the character takes damage so i'm going to go into the scripts folder create a new see shops script called health ui and open that up and up at the top here we can have a public game object for the ui prefab and then a public transform called target just for the sort of position that we want the ui to follow then i'll have a transform for the ear ui that were actually spawn in and a image i'll call this health slider so that's gonna be the green part of the health bar that we're filling based on how much health a character has so image is part of the ui namespace so i'll say using unity engine dot ui and then to set this up we're first gonna have to search for a world canvass in the scene so let's do a little for each loop for each canvas see in find objects of type canvas if the render mode of that canvas is equal to a render mode or world space then it's the one we're looking for so once we've done our stuff we can just break out of the loop and here we'll say ui is equal to and will instantiate our ui prefab we want it to be parented to the canvas that we found so we can just say seed or transform here and then we'll get the transform component of that then i want to set the health slider so we know just from how we set the prefab up that the green part of the health bar is just the child of the ui object since we want a degree in art to render above the red part so we can just say health slider is equal to ui da child index of zero and we want to get the which component on this alright i'd now like to update the position of the ui so say you out of position is equal to target of position and to make sure the targets position has already been set this frame let's just change this to a late update and then i also want the ui to be aligned with the camera so it should have the opposite forward direction that the camera has let sewickley get a reference to the camera transform so i'll just say transform can and then in the start method cam is equal to camera dot main dot transform okay so we can then say ui dot forward is equal to negative camera dot forward let's see how this is looking so i'll save this and once that compiles we can select the healthy eye script and then just go in to the prefabs folder and drag the health ui into the ui prefab slot here that will set it as the default element for that field so now if we drag this script on to the player it's gonna do that drag the health ui on there see the health ui prefab is already assigned there then i'm going to create a empty child for the player which i'll call the health ui target and i'm just going to position that above the players head something like so and drag that into the target field and let's set this up for the enemy as well so add a healthy y component young and quickly create empty child called the health ui target once again position that just above the head and drag that in there of course if all the characters are the same height you could just have this as some fixed offset from the center of the character or you could also do something like calculate the bounds of the character mesh and then place it above there but just keeping things simple manually placing this transform for now so if we enter play mode should see little health bar the above the players head and above the enemy's head there as well now of course it's currently not updating when either character takes damage so let's get to work on that so heading back into the health ui script we're going to want to know when the health of our character changes so let's head into the character stats class and add a public event system dot action so i want this to have two parameters the first will be an int for the character's maximum health and the second an inch for the current health i'll just call this on health changed all right in the take damage method we can then say if one health changed is not equal to null and we will invoke it passing in our max health and the current health okay i'll save that head back to health ui and cheryl create a void on health taking in also in max health and current health and in the start method we'll want to subscribe that to the character stats event so we can get component type of character stats dodge on health change plus equals our local on health changed method and since we're just blindly assuming that this object has a character stats component attached we might as well make it clear that we are assuming this by adding the require component attribute up here type of character stats okay then back in the on health change method let's say that as soon as the health changes we definitely want the health bar to be visible so i'll say ui dot game object at set active true and then we can calculate the health percent as max health divided by current health since these are both integers we don't want to cast one of them to a float like so and then we can just set healthslider dot fill amount equal to that health percent if the current health is less than or equal to zero so the character is dead let us destroy the health ui and since we're destroying it we might as well just be safe and do a null check yeah so if you eye is not equal to null only then will we do any of there's the stuff and same thing for the late update if you i is not equal to null okay now i do want the health bar to disappear after a little while if the character hasn't taken any more damage so let's define some time period up here i'll call this the visible time i guess and i will just set that to five seconds and so we also need a float to know when the health bar was last made visible so let's call this last made visible time and when the health has changed and we set the ui to be active we can say last made visible time is equal to the current time then in late update if time time - the last made visible time is greater than i would a find visible time then we want to hide it so ui dope game object dot set active false and we should probably have it hidden at the outset so when were first creating it here in the start method we can just hide it there as well okay before we try this out i just need to quickly fix this mistake i made earlier whereas dividing max health by the current health the division should of course happen the other way around current health divided by max health okay so i'll save that go into unity and once this compiles i'll enter play mode and so i'll grab my sword equip that and charge at the enemy and we should see the health bar pop me up nicely and if i stop attacking the enemy for a while five seconds as defined it should disappear there we go an oil jacket again and it comes back okay next up i'd like to replace this cube refighting with a scary skeleton model so you can download this from the description i'm just going to be drying it in here - my characters folder and once that imports i'm going to go into the animation section so it's got two attack animations combat idle regular idle and walk so going to turn on loop time for the walk idle and combat idle and then apply that now for its animator i think i'm going to just reuse the player's animator you might not want to do that in an actual project because the play animator will probably become a lot more complex than is required for the enemy but i think it's a helpful thing to know how to do so i'd like to show us here we're going to create an animator override controller i'll call this the skeleton override and we set the controller here to the player animator and now we can just replace the clips that we want to use for the skeleton so opening the skeleton up i'll drag kombat idol in here we don't need the grip left and grip right so i'll just leave those null then we've got an idle the punch is the attack animation we can just leave that null since we'll be replacing that from the script and then we've just got the run which i'll set to walk since don't have a run animation for this and set the walk to walk as well okay now going into the character animator script we've already got this override controller that's being used for the attack animations so what i'll do is i'll make this public and then we'll only set it to a new override controller if it's not a scientist lecturer so if the override controller is equal to null then we'll initialize yeah okay so saving that we can then go into the enemy and once this compiles we can drag in the skeleton override into the character animator oh it doesn't actually have one yet let's add it yeah character animator and dragon skeleton override and then the replaceable attack animation is going to be the punch animation from the player which is a little bit weird but that's how it is and then default attack animation set here we'll be adding the skeletons to attack animations so attack one and attack two while i'm here i'll maybe just slow down the attack speed a little bit to maybe i don't know point seven and then i'll delete the graphics from the enemy in the scene drag in the skeleton instead and a little bit diminutive so i need to scale them up and i think that looks nice and then we just need to add the animator here so i'll drag in the player animator okay yeah let's try playing this now so grab the sword head over here should see him walking towards us now and oh i really made him quite tall it's pretty terrifying but yeah that is basically working the health bar is too low so have to raise that target transform up a little bit but it is doing what we want so quickly go to raise that up and now the last thing i want to do is make the characters attacks register damage not after a fixed amount of time as it is currently set up here in the character combat script but rather at a certain point in the attack animation so we'll be using animation events to trigger that but one slight problem is that the animation event gets sent to the object that has the animator component and this object isn't the one where we've got all of our scripts in particular the character combat script so that message is not going to be received to get around this i mean to take the admittedly rather crude approach of having an intermediary script that sits on this object here and sort of passes the message along so in the scripts folder i'm going to create a new c sharp script and i'm going to call this the character animation event receiver quite a mouthful of a name open that up and this is going to have a public void called attack hit event and in here we just want to call some method on the character combat script so i'm going to have public character combat here and i'll just say combat dot attack itch under school animation event so it's clear how that's being called i'll just copy that go into the character combat and create a method with that name public void i check it under school animation event and then we're games you want to do this test or take damage code so i've cut that out of the co-routine put it in there delete the ko routine and remove the call to it from there as well but now we do need a reference to the opponent's dasia so i'll create character stats opponent stats and whenever we perform an attack that will get searched opponent stats is equal to target stats and then we can replace that year all right so if we save that you can then go onto the skeleton add the character animation event receiver dragon the enemy object there and i'll do the same thing for the player drag that in that and all we just need to set up these events on the animations themselves solely on to the characters first on to the player and let's go through these animations so i'll go into events press this little plus icon here to add a new event and we can frame through the animation here to get the moment of impact and then just move the event over to that moment and i want to give the function the correct name so it was a czech hit event and let me just copy that since we would be calling that a bunch of more times so jack one moment of impact is maybe go out there paste that in and then for a check to we've got all of them for this one so i'll apply that and once it does this little import thing i'll head over to the e skeleton let me make this a little bit bigger i can't really see it okay add in the event once again i'd call it a tacit event and attacks you as well okay so i'll apply that and let's give this one last test so i'll grab my sword run over here and equip that and attack and it does look like the it's all being properly registered okay that is everything for the moment so cheers